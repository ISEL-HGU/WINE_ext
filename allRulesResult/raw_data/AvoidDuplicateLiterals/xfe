134000,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServiceIntegration.java,206,,"        String server = ""server1"";"
134001,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServiceIntegration.java,207,,"        String db = ""testDB"";"
134002,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServiceIntegration.java,355,,"        client.grantColumnPrivilege(requestorUserName, roleName1, ""server"", ""db1"", ""table1"", ""col1"", ""ALL"");"
134003,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServiceIntegration.java,356,,"        client.grantColumnPrivilege(requestorUserName, roleName1, ""server"", ""db1"", ""table1"", ""col2"", ""ALL"");"
134004,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServiceIntegration.java,416,,"        String roleName1 = ""role1"";"
134005,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServiceIntegration.java,417,,"        String roleName2 = ""role2"";"
134006,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServiceIntegration.java,424,,"        String db2 = ""testDB2"";"
134007,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServiceIntegration.java,425,,"        String tab = ""testTab"";"
134008,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServiceIntegration.java,445,,"        client.grantURIPrivilege(requestorUserName, roleName1, server, ""hdfs:///fooUri"");"
134009,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryWebServerWithKerberos.java,74,,"        final URL url = new URL(""http://""+ SERVER_HOST + "":"" + webServerPort + ""/ping"");"
134010,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryWebServerWithKerberos.java,74,,"        final URL url = new URL(""http://""+ SERVER_HOST + "":"" + webServerPort + ""/ping"");"
134011,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryWebServerWithoutSecurity.java,52,,"    final URL url = new URL(""http://""+ SERVER_HOST + "":"" + webServerPort + ""/ping"");"
134012,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/tools/TestSentryShellHive.java,81,,"        String[] args = { ""-cr"", ""-r"", TEST_ROLE_NAME_1, ""-conf"", confPath.getAbsolutePath() };"
134013,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/tools/TestSentryShellHive.java,81,,"        String[] args = { ""-cr"", ""-r"", TEST_ROLE_NAME_1, ""-conf"", confPath.getAbsolutePath() };"
134014,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/tools/TestSentryShellHive.java,110,,"        assertEquals(""Incorrect number of roles"", 0, roles.size());"
134015,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/tools/TestSentryShellHive.java,124,,"        String[] args = { ""-arg"", ""-r"", TEST_ROLE_NAME_1, ""-g"", ""testGroup1"", ""-conf"","
134016,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/tools/TestSentryShellHive.java,124,,"        String[] args = { ""-arg"", ""-r"", TEST_ROLE_NAME_1, ""-g"", ""testGroup1"", ""-conf"","
134017,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/tools/TestSentryShellHive.java,159,,"        args = new String[] { ""-drg"", ""-r"", TEST_ROLE_NAME_1, ""-g"", ""testGroup1"", ""-conf"","
134018,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/tools/TestSentryShellHive.java,196,,"        String[] args = { ""-gpr"", ""-r"", TEST_ROLE_NAME_1, ""-p"","
134019,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/tools/TestSentryShellHive.java,197,,"            ""server=server1->action=*"","
134020,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/tools/TestSentryShellHive.java,201,,"            ""server=server1->db=db1->action=select"", ""-conf"", confPath.getAbsolutePath() };"
134021,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/tools/TestSentryShellHive.java,204,,"            ""server=server1->db=db1->table=tbl1->action=insert"", ""-conf"","
134022,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/tools/TestSentryShellHive.java,208,,"            ""server=server1->db=db1->table=tbl1->column=col1->action=insert"", ""-conf"","
134023,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/tools/TestSentryShellHive.java,212,,"            ""server=server1->db=db1->table=tbl1->column=col2->action=insert->grantoption=true"","
134024,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/tools/TestSentryShellHive.java,217,,"            ""server=server1->uri=hdfs://path/testuri"", ""-conf"", confPath.getAbsolutePath() };"
134025,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/tools/TestSentryShellHive.java,225,,"        assertEquals(""Incorrect number of privileges"", 6, privilegeStrs.size());"
134026,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/tools/TestSentryShellHive.java,237,,"        args = new String[] { ""-rpr"", ""-r"", TEST_ROLE_NAME_1, ""-p"","
134027,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/tools/TestSentryShellHive.java,295,,"        String[] args = { ""--grant_privilege_role"", ""-r"", TEST_ROLE_NAME_1, ""-p"","
134028,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/tools/TestSentryShellHive.java,336,,"        args = new String[] { ""--revoke_privilege_role"", ""-r"", TEST_ROLE_NAME_1, ""-p"","
134029,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/service/thrift/SentryServiceIntegrationBase.java,146,,"      conf.set(ServerConfig.SECURITY_USE_UGI_TRANSPORT, ""false"");"
134030,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/service/thrift/SentryServiceIntegrationBase.java,160,,"      conf.set(ServerConfig.SENTRY_HA_ENABLED, ""true"");"
134031,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-file/src/test/java/org/apache/sentry/provider/file/TestSimpleFileProvderBackend.java,89,,"        backend.getPrivileges(Sets.newHashSet(""manager""), ActiveRoleSet.ALL));"
134032,./TargetProjects/incubator-sentry/sentry-solr/solr-sentry-handlers/src/main/java/org/apache/solr/handler/admin/SecureCoreAdminHandler.java,72,,"            ""CoreAdminAction."" + a,"
134033,./TargetProjects/incubator-sentry/sentry-solr/solr-sentry-handlers/src/test/java/org/apache/solr/handler/TestSecureAnalysisHandlers.java,63,,"    verifyAuthorized(handler, getAnalysisRequest(""collection1"", ""junit""));"
134034,./TargetProjects/incubator-sentry/sentry-solr/solr-sentry-handlers/src/test/java/org/apache/solr/handler/TestSecureReplicationHandler.java,58,,"    verifyAuthorized(handler, prepareCollAndUser(core, getRequest(), ""collection1"", ""junit"", false));"
134035,./TargetProjects/incubator-sentry/sentry-solr/solr-sentry-handlers/src/test/java/org/apache/solr/handler/admin/SecureAdminHandlersTest.java,115,,"    verifyAuthorized(handler, ""collection1"", ""junit"");"
134036,./TargetProjects/incubator-sentry/sentry-solr/solr-sentry-handlers/src/test/java/org/apache/solr/handler/admin/SecureAdminHandlersTest.java,115,,"    verifyAuthorized(handler, ""collection1"", ""junit"");"
134037,./TargetProjects/incubator-sentry/sentry-solr/solr-sentry-handlers/src/test/java/org/apache/solr/handler/admin/SecureCollectionsHandlerTest.java,72,,"    verifyAuthorized(handler, getCollectionsRequest(""collection1"", ""junit"", action));"
134038,./TargetProjects/incubator-sentry/sentry-solr/solr-sentry-handlers/src/test/java/org/apache/solr/handler/admin/SecureCoreAdminHandlerTest.java,142,,"    verifyAuthorized(handler, getCoreAdminRequest(""collection1"", ""junit"", action));"
134039,./TargetProjects/incubator-sentry/sentry-solr/solr-sentry-handlers/src/test/java/org/apache/solr/handler/admin/SecureCoreAdminHandlerTest.java,145,,"      verifyAuthorized(handler, getCoreAdminRequest(""bogusCollection"", ""junit"", action));"
134040,./TargetProjects/incubator-sentry/sentry-solr/solr-sentry-handlers/src/test/java/org/apache/solr/handler/admin/SecureCoreAdminHandlerTest.java,146,,"      verifyAuthorized(handler, getCoreAdminRequest(""updateCollection"", ""junit"", action));"
134041,./TargetProjects/incubator-sentry/sentry-solr/solr-sentry-handlers/src/test/java/org/apache/solr/handler/admin/SecureInfoHandlerTest.java,74,,"    verifyUnauthorized(handler, getInfoRequest(""bogusCollection"", ""bogusUser"", path), ""bogusCollection"", ""bogusUser"", true);"
134042,./TargetProjects/incubator-sentry/sentry-solr/solr-sentry-handlers/src/test/java/org/apache/solr/handler/admin/SecureInfoHandlerTest.java,74,,"    verifyUnauthorized(handler, getInfoRequest(""bogusCollection"", ""bogusUser"", path), ""bogusCollection"", ""bogusUser"", true);"
134043,./TargetProjects/incubator-sentry/sentry-solr/solr-sentry-handlers/src/test/java/org/apache/solr/handler/admin/SecureInfoHandlerTest.java,75,,"    verifyUnauthorized(handler, getInfoRequest(""updateCollection"", ""updateOnlyAdmin"", path), ""updateCollection"", ""updateOnlyAdmin"", true);"
134044,./TargetProjects/incubator-sentry/sentry-solr/solr-sentry-handlers/src/test/java/org/apache/solr/handler/admin/SecureInfoHandlerTest.java,75,,"    verifyUnauthorized(handler, getInfoRequest(""updateCollection"", ""updateOnlyAdmin"", path), ""updateCollection"", ""updateOnlyAdmin"", true);"
134045,./TargetProjects/incubator-sentry/sentry-solr/solr-sentry-handlers/src/test/java/org/apache/solr/handler/component/QueryDocAuthorizationComponentTest.java,117,,"    args.add(QueryDocAuthorizationComponent.ENABLED_PROP, ""true"");"
134046,./TargetProjects/incubator-sentry/sentry-solr/solr-sentry-handlers/src/test/java/org/apache/solr/handler/component/QueryDocAuthorizationComponentTest.java,118,,"    ResponseBuilder builder = runComponent(""junit"", args, null);"
134047,./TargetProjects/incubator-sentry/sentry-solr/solr-sentry-handlers/src/test/java/org/apache/solr/handler/component/QueryDocAuthorizationComponentTest.java,120,,"    String expect = getClause(QueryDocAuthorizationComponent.DEFAULT_AUTH_FIELD, ""junit_role"");"
134048,./TargetProjects/incubator-sentry/sentry-solr/solr-sentry-handlers/src/test/java/org/apache/solr/handler/component/QueryIndexAuthorizationComponentTest.java,91,,"    prepareCollAndUser(core, responseBuilder.req, ""collection1"", ""junit"");"
134049,./TargetProjects/incubator-sentry/sentry-solr/solr-sentry-handlers/src/test/java/org/apache/solr/sentry/SentryIndexAuthorizationSingletonTest.java,123,,"    Collection<String> groups = nonSingleton.getRoles(""junit"");"
134050,./TargetProjects/incubator-sentry/sentry-solr/solr-sentry-handlers/src/test/java/org/apache/solr/sentry/SentryIndexAuthorizationSingletonTest.java,142,,"    System.setProperty(""solr.authorization.superuser"", """");"
134051,./TargetProjects/incubator-sentry/sentry-solr/solr-sentry-handlers/src/test/java/org/apache/solr/update/processor/UpdateIndexAuthorizationProcessorTest.java,147,,"    verifyAuthorized(""collection1"", ""junit"");"
134052,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestColumnEndToEnd.java,72,,"    statement.execute(""CREATE database "" + DB1);"
134053,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestColumnEndToEnd.java,96,,"    statement.execute(""CREATE ROLE user_role1"");"
134054,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestColumnEndToEnd.java,97,,"    statement.execute(""GRANT SELECT (c1) ON TABLE t1 TO ROLE user_role1"");"
134055,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestColumnEndToEnd.java,98,,"    statement.execute(""GRANT ROLE user_role1 TO GROUP "" + USERGROUP1);"
134056,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestColumnEndToEnd.java,158,,"    statement.execute(""CREATE ROLE user_role2"");"
134057,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestColumnEndToEnd.java,178,,"    statement.execute(""GRANT ROLE user_role2 TO GROUP "" + USERGROUP2);"
134058,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestColumnEndToEnd.java,198,,"      statement.execute(""SELECT * FROM t1"");"
134059,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestColumnEndToEnd.java,248,,"    statement.execute(""use "" + DB1);"
134060,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,68,,"    statement.execute(""CREATE TABLE t1 (c1 string)"");"
134061,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,69,,"    statement.execute(""CREATE ROLE user_role"");"
134062,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,70,,"    statement.execute(""GRANT SELECT ON TABLE t1 TO ROLE user_role"");"
134063,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,71,,"    statement.execute(""GRANT ROLE user_role TO GROUP "" + USERGROUP1);"
134064,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,79,,"    statement.execute(""SELECT * FROM t1"");"
134065,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,104,,"    statement.execute(""GRANT SELECT ON DATABASE "" + DB1 + "" TO ROLE user_role"");"
134066,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,105,,"    statement.execute(""GRANT ALL ON URI 'file://"" + dataFile.getPath() + ""' TO ROLE user_role"");"
134067,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,105,,"    statement.execute(""GRANT ALL ON URI 'file://"" + dataFile.getPath() + ""' TO ROLE user_role"");"
134068,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,113,,"    statement.execute(""SELECT * FROM "" + DB1 + "".t1"");"
134069,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,113,,"    statement.execute(""SELECT * FROM "" + DB1 + "".t1"");"
134070,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,114,,"    statement.execute(""SELECT * FROM "" + DB1 + "".t2"");"
134071,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,117,,"      statement.execute(""LOAD DATA LOCAL INPATH '"" + dataFile.getPath() + ""' INTO TABLE "" + DB1 + "".t1"");"
134072,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,117,,"      statement.execute(""LOAD DATA LOCAL INPATH '"" + dataFile.getPath() + ""' INTO TABLE "" + DB1 + "".t1"");"
134073,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,135,,"    statement.execute(""USE "" + DB1);"
134074,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,136,,"    statement.execute(""GRANT ALL ON TABLE t1 TO ROLE user_role"");"
134075,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,236,,"    statement.execute(""DROP DATABASE IF EXISTS "" + DB1 + "" CASCADE"");"
134076,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,236,,"    statement.execute(""DROP DATABASE IF EXISTS "" + DB1 + "" CASCADE"");"
134077,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,237,,"    statement.execute(""CREATE DATABASE "" + DB1);"
134078,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,239,,"    statement.execute(""DROP TABLE IF EXISTS t1"");"
134079,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,274,,"    ResultSet resultSet = statement.executeQuery(""SHOW GRANT ROLE user_role"");"
134080,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,495,,"    statement.execute(""GRANT INSERT ON TABLE t1 TO ROLE user_role"");"
134081,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,612,,"      assertTrue(""SELECT should not be allowed !!"", false);"
134082,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,619,,"      assertTrue(""INSERT should not be allowed !!"", false);"
134083,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,976,,"    statement.execute(""CREATE ROLE role1"");"
134084,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,982,,"    resultSet = statement.executeQuery(""SHOW GRANT ROLE role1"");"
134085,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,989,,"      assertThat(resultSet.getString(5), equalToIgnoringCase(""role1""));//principalName"
134086,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,990,,"      assertThat(resultSet.getString(6), equalToIgnoringCase(""role""));//principalType"
134087,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,992,,"      assertThat(resultSet.getBoolean(8), is(new Boolean(""False"")));//grantOption"
134088,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,1007,,"      assertThat(resultSet.getString(1), equalToIgnoringCase(""default""));"
134089,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,1051,,"      assertThat(resultSet.getString(2), equalToIgnoringCase(""tab1""));"
134090,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,1100,,"      assertThat(resultSet.getString(7), equalToIgnoringCase(""select""));"
134091,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,1193,,"      if (role.startsWith(""role"") || (isAdmin && role.startsWith(""admin_role""))) {"
134092,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,1218,,"    statement.execute(""DROP ROLE role1"");"
134093,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,1263,,"    statement.execute(""GRANT ALL ON SERVER server1 TO ROLE role1"");"
134094,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,1280,,"    statement.execute(""CREATE ROLE role2"");"
134095,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,1282,,"    statement.execute(""GRANT ROLE role1 to GROUP "" + USERGROUP1);"
134096,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,1283,,"    resultSet = statement.executeQuery(""SHOW ROLE GRANT GROUP "" + USERGROUP1);"
134097,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,1380,,"    expected.add(""role2"");"
134098,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,1875,,"    ResultSet resultSet = statement.executeQuery(""SHOW CURRENT ROLES"");"
134099,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,1897,,"    statement.execute(""CREATE ROLE "" + testRole1);"
134100,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,1899,,"    statement.execute(""GRANT ROLE "" + testRole1 + "" TO GROUP "" + ADMINGROUP);"
134101,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,1899,,"    statement.execute(""GRANT ROLE "" + testRole1 + "" TO GROUP "" + ADMINGROUP);"
134102,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDatabaseProvider.java,1911,,"    statement.execute(""SET ROLE "" + testRole1);"
134103,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDbColumnLevelMetaDataOps.java,86,,"    statement.execute(""USE "" + TEST_COL_METADATA_OPS_DB);"
134104,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDbComplexView.java,72,,"            stmt.execute(""USE "" + db);"
134105,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDbComplexView.java,132,,"        sqls.add(""SELECT * FROM "" + TEST_VIEW_TB2);"
134106,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDbDDLAuditLog.java,71,,"    statement.execute(""CREATE ROLE "" + roleName);"
134107,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDbDDLAuditLog.java,90,,"    statement.execute(""GRANT ALL ON DATABASE "" + dbName + "" TO ROLE "" + roleName);"
134108,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDbDDLAuditLog.java,90,,"    statement.execute(""GRANT ALL ON DATABASE "" + dbName + "" TO ROLE "" + roleName);"
134109,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDbDDLAuditLog.java,100,,"    statement.execute(""GRANT SELECT ON TABLE "" + tableName + "" TO ROLE "" + roleName"
134110,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDbDDLAuditLog.java,114,,"      fail(""Exception should have been thrown"");"
134111,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDbDDLAuditLog.java,136,,"      statement.execute(""GRANT ALL ON DATABASE "" + dbName + "" TO ROLE errorRole"");"
134112,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDbDDLAuditLog.java,184,,"    statement.execute(""REVOKE SELECT ON TABLE "" + tableName + "" FROM ROLE "" + roleName);"
134113,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDbDDLAuditLog.java,184,,"    statement.execute(""REVOKE SELECT ON TABLE "" + tableName + "" FROM ROLE "" + roleName);"
134114,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDbDDLAuditLog.java,194,,"    statement.execute(""REVOKE ALL ON DATABASE "" + dbName + "" FROM ROLE "" + roleName);"
134115,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDbDDLAuditLog.java,223,,"      statement.execute(""REVOKE SELECT ON TABLE "" + tableName + "" FROM ROLE errorRole"");"
134116,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDbEndToEnd.java,100,,"    statement.execute(""USE "" + DB1);"
134117,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDbEndToEnd.java,175,,"    statement.execute(""DROP TABLE IF EXISTS "" + DB2 + ""."" + tableName1);"
134118,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDbEndToEnd.java,177,,"    statement.execute(""create table "" + DB2 + ""."" + tableName1"
134119,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDbEndToEnd.java,178,,"        + "" (under_col int comment 'the under column', value string)"");"
134120,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDbPrivilegeCleanupOnDrop.java,156,,"    statement.execute(""USE "" + DB2);"
134121,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDbPrivilegeCleanupOnDrop.java,243,,"    statement.execute(""create table "" + DB2 + ""."" + tableName1"
134122,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDbPrivilegeCleanupOnDrop.java,244,,"        + "" (under_col int comment 'the under column', value string)"");"
134123,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDbPrivilegeCleanupOnDrop.java,279,,"    statement.execute(""ALTER TABLE "" + tableName1 + "" RENAME TO "" + tableName1"
134124,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/dbprovider/TestDbPrivilegeCleanupOnDrop.java,279,,"    statement.execute(""ALTER TABLE "" + tableName1 + "" RENAME TO "" + tableName1"
134125,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/ha/TestHaEnd2End.java,123,,"    adminStmt.execute(""CREATE ROLE "" + roleName1);"
134126,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hdfs/TestHDFSIntegration.java,187,,"    PolicyFile policyFile = PolicyFile.setAdminOnServer1(""hive"")"
134127,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hdfs/TestHDFSIntegration.java,218,,"        hiveConf.set(""sentry.service.client.server.rpc-address"", ""localhost"");"
134128,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hdfs/TestHDFSIntegration.java,231,,"        hiveConf.set(""sentry.hive.testing.mode"", ""true"");"
134129,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hdfs/TestHDFSIntegration.java,236,,"        hiveConf.set(""fs.defaultFS"", fsURI);"
134130,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hdfs/TestHDFSIntegration.java,245,,"        hiveConf.set(""datanucleus.fixedDatastore"", ""false"");"
134131,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hdfs/TestHDFSIntegration.java,248,,"        LOGGER.info(""\n\n HMS port : "" + hmsPort + ""\n\n"");"
134132,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hdfs/TestHDFSIntegration.java,534,,"    tmpHDFSDir = new Path(""/tmp/external"");"
134133,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hdfs/TestHDFSIntegration.java,535,,"    dbNames = new String[]{""db1""};"
134134,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hdfs/TestHDFSIntegration.java,536,,"    roles = new String[]{""admin_role"", ""db_role"", ""tab_role"", ""p1_admin""};"
134135,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hdfs/TestHDFSIntegration.java,543,,"    stmt.execute(""create role admin_role"");"
134136,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hdfs/TestHDFSIntegration.java,545,,"    stmt.execute(""grant all on server server1 to role admin_role"");"
134137,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hdfs/TestHDFSIntegration.java,564,,"    verifyOnAllSubDirs(""/user/hive/warehouse"", null, ""hbase"", false);"
134138,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hdfs/TestHDFSIntegration.java,564,,"    verifyOnAllSubDirs(""/user/hive/warehouse"", null, ""hbase"", false);"
134139,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hdfs/TestHDFSIntegration.java,566,,"    verifyOnAllSubDirs(""/user/hive/warehouse/p1"", null, ""hbase"", false);"
134140,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hdfs/TestHDFSIntegration.java,571,,"    stmt.execute(""use default"");"
134141,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hdfs/TestHDFSIntegration.java,626,,"    verifyOnAllSubDirs(""/user/hive/warehouse/p3"", FsAction.WRITE_EXECUTE, ""hbase"", true);"
134142,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hdfs/TestHDFSIntegration.java,635,,"    writeToPath(""/tmp/external/ext100"", 5, ""foo"", ""bar"");"
134143,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hdfs/TestHDFSIntegration.java,635,,"    writeToPath(""/tmp/external/ext100"", 5, ""foo"", ""bar"");"
134144,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hdfs/TestHDFSIntegration.java,696,,"    writeToPath(""/tmp/external/ext1"", 5, ""foo"", ""bar"");"
134145,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hdfs/TestHDFSIntegration.java,716,,"    verifyOnAllSubDirs(""/user/hive/warehouse/db1.db/tbl1"", null, ""hbase"", false);"
134146,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hdfs/TestHDFSIntegration.java,718,,"    verifyOnAllSubDirs(""/user/hive/warehouse/db1.db/tbl2"", null, ""hbase"", false);"
134147,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hdfs/TestHDFSIntegration.java,774,,"    writeToPath(""/tmp/external/tables/ext2_before/i=1"", 5, ""foo"", ""bar"");"
134148,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hdfs/TestHDFSIntegration.java,775,,"    writeToPath(""/tmp/external/tables/ext2_before/i=2"", 5, ""foo"", ""bar"");"
134149,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hdfs/TestHDFSIntegration.java,781,,"    verifyOnAllSubDirs(""/tmp/external/tables/ext2_before"", null, ""hbase"", false);"
134150,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hdfs/TestHDFSIntegration.java,841,,"    String dbName = ""db2"";"
134151,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hdfs/TestHDFSIntegration.java,857,,"    stmt.execute(""grant role admin_role to group "" + StaticUserGroup.ADMINGROUP);"
134152,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hdfs/TestHDFSIntegration.java,861,,"    stmt.execute(""create database "" + dbName);"
134153,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hdfs/TestHDFSIntegration.java,881,,"    stmt.execute(""use "" + dbName);"
134154,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hdfs/TestHDFSIntegration.java,956,,"    miniDFS.getFileSystem().setPermission(tmpHDFSDir, FsPermission.valueOf(""drwxrwx---""));"
134155,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hdfs/TestHDFSIntegration.java,957,,"    Path partitionDir = new Path(""/tmp/external/p1"");"
134156,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hdfs/TestHDFSIntegration.java,1206,,"    stmt.execute(""grant role col_role to group ""+ StaticUserGroup.USERGROUP1);"
134157,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hdfs/TestHDFSIntegration.java,1219,,"    verifyOnAllSubDirs(""/user/hive/warehouse/"" + dbName + "".db/p1"", null, StaticUserGroup.USERGROUP1, false);"
134158,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hdfs/TestHDFSIntegration.java,1219,,"    verifyOnAllSubDirs(""/user/hive/warehouse/"" + dbName + "".db/p1"", null, StaticUserGroup.USERGROUP1, false);"
134159,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/AbstractTestWithStaticConfiguration.java,237,,"      policyOnHdfs = Boolean.valueOf(System.getProperty(""sentry.e2etest.policyonhdfs"", ""false""));"
134160,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/AbstractTestWithStaticConfiguration.java,399,,"        String sql = ""GRANT "" + action + "" ( "" + columnName + "" ) ON TABLE "" + tableName + "" TO ROLE "" + roleName;"
134161,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/AbstractTestWithStaticConfiguration.java,399,,"        String sql = ""GRANT "" + action + "" ( "" + columnName + "" ) ON TABLE "" + tableName + "" TO ROLE "" + roleName;"
134162,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/Context.java,169,,"      Assert.fail(""Expected SQLException for '"" + query + ""'"");"
134163,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestConfigTool.java,73,,"        .addRolesToGroup(USERGROUP1, ""select_tab1"", ""insert_tab2"")"
134164,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestConfigTool.java,73,,"        .addRolesToGroup(USERGROUP1, ""select_tab1"", ""insert_tab2"")"
134165,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestConfigTool.java,74,,"        .addRolesToGroup(USERGROUP2, ""select_tab3"")"
134166,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestConfigTool.java,90,,"              ""Role select_tab3 for group "" + USERGROUP2 + "" does not exist""));"
134167,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestConfigTool.java,157,,"        .addRolesToGroup(USERGROUP3, ""select_colA"")"
134168,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestConfigTool.java,158,,"        .addRolesToGroup(USERGROUP4, ""select_colAB"")"
134169,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestConfigTool.java,166,,"            ""server=server1->db=db1->table=tab3->column=a->action=select"")"
134170,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestConfigTool.java,221,,"        + "" row format delimited fields terminated by '|'  stored as textfile"");"
134171,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestConfigTool.java,293,,"      fail(""Query should have failed with insufficient perms"");"
134172,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestCrossDbOps.java,87,,"    statement.execute(""CREATE DATABASE "" + DB1);"
134173,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestCrossDbOps.java,89,,"    statement.execute(""USE "" + DB1);"
134174,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestCrossDbOps.java,91,,"    statement.executeQuery(""SHOW TABLES"");"
134175,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestCrossDbOps.java,98,,"            .addRolesToGroup(USERGROUP1, ""select_tab1"", ""insert_tab2"")"
134176,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestCrossDbOps.java,98,,"            .addRolesToGroup(USERGROUP1, ""select_tab1"", ""insert_tab2"")"
134177,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestCrossDbOps.java,99,,"            .addRolesToGroup(USERGROUP2, ""select_tab3"")"
134178,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestCrossDbOps.java,100,,"            .addPermissionsToRole(""select_tab1"",  ""server=server1->db="" + DB1 + ""->table=tab1->action=select"")"
134179,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestCrossDbOps.java,111,,"      pRset.verifyResultSetColumn(""table"", ""tab1"");"
134180,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestCrossDbOps.java,116,,"      pRset.verifyResultSetColumn(""table"", ""tab2"");"
134181,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestCrossDbOps.java,229,,"    res = conn.getMetaData().getTables(null, DB1, ""tab%"", null);"
134182,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestCrossDbOps.java,250,,"    res = conn.getMetaData().getTables(null, ""DB%"", ""tab%"", null);"
134183,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestCrossDbOps.java,363,,"        .execute(""create table "" + dbName + ""."" + tabName + "" (id int)"");"
134184,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestCrossDbOps.java,388,,"    adminStmt.execute(""load data local inpath '"" + dataFile.getPath() + ""' into table """
134185,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestCrossDbOps.java,388,,"    adminStmt.execute(""load data local inpath '"" + dataFile.getPath() + ""' into table """
134186,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestCrossDbOps.java,415,,"    policyFile.addRolesToGroup(USERGROUP1, ""db1_tab1_insert"", ""db1_tab2_all"")"
134187,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestCrossDbOps.java,423,,"    context.assertAuthzException(userStmt, ""select * from "" + DB1 + "".table_1"");"
134188,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestCrossDbOps.java,527,,"    context.assertAuthzException(userStmt, ""DROP VIEW IF EXISTS "" + DB1 + "".v1"");"
134189,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestCrossDbOps.java,568,,"    statement.execute(""DROP TABLE IF EXISTS "" + DB1 + ""."" + TBL1);"
134190,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestCrossDbOps.java,570,,"        + "" (under_col int comment 'the under column', value string)"");"
134191,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestCrossDbOps.java,574,,"    statement.execute(""CREATE VIEW "" + DB1 + ""."" + VIEW1"
134192,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestCrossDbOps.java,575,,"        + "" (value) AS SELECT value from "" + DB1 + ""."" + TBL1"
134193,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestCrossDbOps.java,576,,"        + "" LIMIT 10"");"
134194,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestCrossDbOps.java,578,,"    statement.execute(""CREATE TABLE "" + DB2 + ""."" + TBL1"
134195,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestEndToEnd.java,75,,"    statement.execute(""USE "" + DB2);"
134196,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestEndToEnd.java,87,,"        .addPermissionsToRole(""all_db1"", ""server=server1->db="" + DB1)"
134197,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestExportImportPrivileges.java,71,,"            .addPermissionsToRole(""db1_write"", ""server=server1->db="" + DB1 + ""->table="" + TBL1 + ""->action=INSERT"")"
134198,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestExportImportPrivileges.java,71,,"            .addPermissionsToRole(""db1_write"", ""server=server1->db="" + DB1 + ""->table="" + TBL1 + ""->action=INSERT"")"
134199,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestExportImportPrivileges.java,79,,"    statement.execute(""use "" + DB1);"
134200,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestJDBCInterface.java,120,,"    res = conn.getMetaData().getTables(null, DB1, ""tab%"", null);"
134201,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestJDBCInterface.java,143,,"    res = conn.getMetaData().getTables(null, ""DB%"", ""tab%"", null);"
134202,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestLockPrivileges.java,41,,"    privileges.put(""all_db1_tb1"", ""server=server1->db="" + DB1 + ""->table=tb1->action=all"");"
134203,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestLockPrivileges.java,41,,"    privileges.put(""all_db1_tb1"", ""server=server1->db="" + DB1 + ""->table=tb1->action=all"");"
134204,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestLockPrivileges.java,42,,"    privileges.put(""select_db1_tb1"", ""server=server1->db="" + DB1 + ""->table=tb1->action=select"");"
134205,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestLockPrivileges.java,43,,"    privileges.put(""insert_db1_tb1"", ""server=server1->db="" + DB1 + ""->table=tb1->action=insert"");"
134206,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestLockPrivileges.java,44,,"    privileges.put(""alter_db1_tb1"", ""server=server1->db="" + DB1 + ""->table=tb1->action=alter"");"
134207,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestLockPrivileges.java,45,,"    privileges.put(""lock_db1_tb1"", ""server=server1->db="" + DB1 + ""->table=tb1->action=lock"");"
134208,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestLockPrivileges.java,47,,"    privileges.put(""all_db1"", ""server=server1->db="" + DB1 + ""->action=all"");"
134209,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestLockPrivileges.java,48,,"    privileges.put(""select_db1"", ""server=server1->db="" + DB1 + ""->action=select"");"
134210,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestLockPrivileges.java,49,,"    privileges.put(""insert_db1"", ""server=server1->db="" + DB1 + ""->action=insert"");"
134211,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestLockPrivileges.java,50,,"    privileges.put(""alter_db1"", ""server=server1->db="" + DB1 + ""->action=alter"");"
134212,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestLockPrivileges.java,51,,"    privileges.put(""lock_db1"", ""server=server1->db="" + DB1 + ""->action=lock"");"
134213,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestLockPrivileges.java,101,,"    statement.execute(""Use "" + DB1);"
134214,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestMetadataObjectRetrieval.java,74,,"    statement.execute(""USE "" + db);"
134215,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestMetadataObjectRetrieval.java,75,,"    ResultSet rs = statement.executeQuery(""DESCRIBE "" + table);"
134216,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestMetadataObjectRetrieval.java,78,,"    assertTrue(""describe table fail"", rs.getString(1).trim().equals(""under_col""));"
134217,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestMetadataObjectRetrieval.java,78,,"    assertTrue(""describe table fail"", rs.getString(1).trim().equals(""under_col""));"
134218,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestMetadataObjectRetrieval.java,79,,"    assertTrue(""describe table fail"", rs.getString(2).trim().equals(""int""));"
134219,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestMetadataObjectRetrieval.java,81,,"    assertTrue(""describe table fail"", rs.getString(1).trim().equals(""value""));"
134220,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestMetadataObjectRetrieval.java,82,,"    assertTrue(""describe table fail"", rs.getString(2).trim().equals(""string""));"
134221,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestMetadataObjectRetrieval.java,186,,"            .addPermissionsToRole(GROUP1_ROLE, ""server=server1->db="" + DB1 + ""->table="" + TBL2)"
134222,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestMetadataObjectRetrieval.java,186,,"            .addPermissionsToRole(GROUP1_ROLE, ""server=server1->db="" + DB1 + ""->table="" + TBL2)"
134223,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestMetadataObjectRetrieval.java,323,,"    assertTrue(statement.executeQuery(""DESCRIBE DATABASE "" + DB1).next());"
134224,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestMetadataObjectRetrieval.java,324,,"    assertTrue(statement.executeQuery(""DESCRIBE DATABASE EXTENDED "" + DB1).next());"
134225,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestMetadataPermissions.java,44,,"      adminStmt.execute(""USE "" + dbName);"
134226,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestMovingToProduction.java,72,,"    statement.execute(""DROP DATABASE IF EXISTS "" + DB1 + "" CASCADE"");"
134227,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestMovingToProduction.java,72,,"    statement.execute(""DROP DATABASE IF EXISTS "" + DB1 + "" CASCADE"");"
134228,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestMovingToProduction.java,74,,"    statement.execute(""CREATE DATABASE "" + DB1);"
134229,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestMovingToProduction.java,76,,"    statement.execute(""DROP TABLE IF EXISTS "" + DB2 + ""."" + tableName1);"
134230,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestMovingToProduction.java,77,,"    statement.execute(""create table "" + DB2 + ""."" + tableName1"
134231,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestMovingToProduction.java,78,,"        + "" (under_col int comment 'the under column', value string)"");"
134232,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestMovingToProduction.java,83,,"        .addRolesToGroup(USERGROUP1, ""all_db1"", ""load_data"")"
134233,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestMovingToProduction.java,83,,"        .addRolesToGroup(USERGROUP1, ""all_db1"", ""load_data"")"
134234,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestMovingToProduction.java,85,,"        .addPermissionsToRole(""all_db1"", ""server=server1->db=""  + DB1);"
134235,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestMovingToProduction.java,92,,"    statement.execute(""USE "" + DB1);"
134236,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestMovingToProduction.java,100,,"        .addRolesToGroup(USERGROUP1, ""insert_proddb_tbl1"")"
134237,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestMovingToProduction.java,104,,"    statement.execute(""INSERT OVERWRITE TABLE """
134238,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestMovingToProduction.java,105,,"        + tableName1 + "" SELECT * FROM "" + DB1"
134239,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestMovingToProduction.java,110,,"        .addRolesToGroup(USERGROUP1, ""select_proddb_tbl1"")"
134240,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestMovingToProduction.java,114,,"    ResultSet resultSet = statement.executeQuery(""SELECT * FROM "" + tableName1 + "" LIMIT 10"");"
134241,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestMovingToProduction.java,114,,"    ResultSet resultSet = statement.executeQuery(""SELECT * FROM "" + tableName1 + "" LIMIT 10"");"
134242,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestOperations.java,50,,"    privileges.put(""create_server"", ""server=server1->action=create"");"
134243,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestOperations.java,51,,"    privileges.put(""all_db1"", ""server=server1->db="" + DB1 + ""->action=all"");"
134244,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestOperations.java,51,,"    privileges.put(""all_db1"", ""server=server1->db="" + DB1 + ""->action=all"");"
134245,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestOperations.java,52,,"    privileges.put(""select_db1"", ""server=server1->db="" + DB1 + ""->action=select"");"
134246,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestOperations.java,53,,"    privileges.put(""insert_db1"", ""server=server1->db="" + DB1 + ""->action=insert"");"
134247,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestOperations.java,54,,"    privileges.put(""create_db1"", ""server=server1->db="" + DB1 + ""->action=create"");"
134248,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestOperations.java,55,,"    privileges.put(""drop_db1"", ""server=server1->db="" + DB1 + ""->action=drop"");"
134249,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestOperations.java,56,,"    privileges.put(""alter_db1"", ""server=server1->db="" + DB1 + ""->action=alter"");"
134250,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestOperations.java,57,,"    privileges.put(""create_db2"", ""server=server1->db="" + DB2 + ""->action=create"");"
134251,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestOperations.java,59,,"    privileges.put(""all_db1_tb1"", ""server=server1->db="" + DB1 + ""->table=tb1->action=all"");"
134252,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestOperations.java,60,,"    privileges.put(""select_db1_tb1"", ""server=server1->db="" + DB1 + ""->table=tb1->action=select"");"
134253,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestOperations.java,61,,"    privileges.put(""insert_db1_tb1"", ""server=server1->db="" + DB1 + ""->table=tb1->action=insert"");"
134254,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestOperations.java,62,,"    privileges.put(""alter_db1_tb1"", ""server=server1->db="" + DB1 + ""->table=tb1->action=alter"");"
134255,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestOperations.java,63,,"    privileges.put(""alter_db1_ptab"", ""server=server1->db="" + DB1 + ""->table=ptab->action=alter"");"
134256,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestOperations.java,64,,"    privileges.put(""index_db1_tb1"", ""server=server1->db="" + DB1 + ""->table=tb1->action=index"");"
134257,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestOperations.java,66,,"    privileges.put(""drop_db1_tb1"", ""server=server1->db="" + DB1 + ""->table=tb1->action=drop"");"
134258,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestOperations.java,67,,"    privileges.put(""insert_db2_tb2"", ""server=server1->db="" + DB2 + ""->table=tb2->action=insert"");"
134259,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestOperations.java,68,,"    privileges.put(""select_db1_view1"", ""server=server1->db="" + DB1 + ""->table=view1->action=select"");"
134260,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestOperations.java,151,,"        .addPermissionsToRole(""all_uri"", ""server=server1->uri=file://"" + dataDir)"
134261,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestOperations.java,159,,"    statement.execute(""Use "" + DB1);"
134262,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestOperations.java,746,,"        .addPermissionsToRole(""all_uri"", ""server=server1->uri="" + tabLocation)"
134263,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestOperations.java,756,,"    assertSemanticException(statement, ""ALTER TABLE tb1 SET LOCATION '"" + tabLocation + ""'"");"
134264,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestOperations.java,757,,"    assertSemanticException(statement, ""ALTER TABLE tb1 ADD IF NOT EXISTS PARTITION (b = '3') LOCATION '"" + tabLocation + ""/part'"");"
134265,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestOperations.java,757,,"    assertSemanticException(statement, ""ALTER TABLE tb1 ADD IF NOT EXISTS PARTITION (b = '3') LOCATION '"" + tabLocation + ""/part'"");"
134266,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestOperations.java,817,,"    statement.execute(""create view view1 as select a from "" + DB1 + "".tb1"");"
134267,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestOperations.java,1066,,"    assertSemanticException(statement, ""create external table "" + DB1 + "".tb1(a int) stored as "" +"
134268,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPerDBConfiguration.java,58,,"    String policyOnHDFS = System.getProperty(""sentry.e2etest.hive.policyOnHDFS"", ""true"");"
134269,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPerDBConfiguration.java,85,,"    statement.execute(""USE "" + DB1);"
134270,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPerDBConfiguration.java,87,,"        + "" row format delimited fields terminated by '|'  stored as textfile"");"
134271,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPerDBConfiguration.java,88,,"    statement.execute(""LOAD DATA LOCAL INPATH '"" + dataFile.getPath() + ""' INTO TABLE tbl1"");"
134272,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPerDBConfiguration.java,127,,"        .addRolesToGroup(USERGROUP2, ""select_tbl2"")"
134273,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPerDBConfiguration.java,128,,"        .addPermissionsToRole(""select_tbl2"", ""server=server1->db=""  + DB2 + ""->table=tbl2->action=select"")"
134274,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPerDBConfiguration.java,132,,"        .addRolesToGroup(USERGROUP1, ""select_tbl1"")"
134275,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPerDBConfiguration.java,134,,"        .addPermissionsToRole(""select_tbl1"", ""server=server1->db="" + DB1 +""->table=tbl1->action=select"")"
134276,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPerDBConfiguration.java,148,,"    context.assertAuthzException(statement, ""SELECT COUNT(*) FROM "" + DB2 + "".tbl2"");"
134277,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPerDBConfiguration.java,318,,"    statement.execute(""USE default"");"
134278,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPolicyImportExport.java,93,,"    groupRolesMap.put(""group1"", Sets.newHashSet(""roleimport1"", ""roleimport2""));"
134279,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtColumnScope.java,69,,"    statement.execute(""USE DB_1"");"
134280,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtColumnScope.java,71,,"    statement.execute(""LOAD DATA LOCAL INPATH '"" + dataFile.getPath() + ""' INTO TABLE TAB_1"");"
134281,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtColumnScope.java,97,,"        .addRolesToGroup(USERGROUP1, ""select_tab1_A"", ""select_tab2_A"")"
134282,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtColumnScope.java,98,,"        .addRolesToGroup(USERGROUP2, ""select_tab1_A"", ""select_tab1_B"", ""select_tab2_A"", ""select_tab2_B"")"
134283,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtColumnScope.java,98,,"        .addRolesToGroup(USERGROUP2, ""select_tab1_A"", ""select_tab1_B"", ""select_tab2_A"", ""select_tab2_B"")"
134284,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtColumnScope.java,112,,"    statement.executeQuery(""SELECT COUNT(A) FROM TAB_1"");"
134285,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtColumnScope.java,119,,"      statement.execute(""SELECT COUNT(B) FROM TAB_1"");"
134286,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtColumnScope.java,120,,"      Assert.fail(""Expected SQL exception"");"
134287,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtColumnScope.java,180,,"        .addRolesToGroup(USERGROUP1, ""select_view1_A"", ""select_view2_A"")"
134288,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtColumnScope.java,180,,"        .addRolesToGroup(USERGROUP1, ""select_view1_A"", ""select_view2_A"")"
134289,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtColumnScope.java,181,,"        .addRolesToGroup(USERGROUP2, ""select_view1_A"", ""select_view1_B"", ""select_view2_A"", ""select_view2_B"")"
134290,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtColumnScope.java,181,,"        .addRolesToGroup(USERGROUP2, ""select_view1_A"", ""select_view1_B"", ""select_view2_A"", ""select_view2_B"")"
134291,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtColumnScope.java,233,,"      Assert.fail(""Expected SQL Exception"");"
134292,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtDatabaseScope.java,73,,"            .addRolesToGroup(USERGROUP1, ""all_db1"")"
134293,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtDatabaseScope.java,74,,"            .addPermissionsToRole(""all_db1"", ""server=server1->db="" + DB1 + ""->action=all"")"
134294,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtDatabaseScope.java,80,,"    statement.execute(""use "" + DB1);"
134295,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtDatabaseScope.java,107,,"    statement.execute(""CREATE DATABASE "" + DB1);"
134296,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtDatabaseScope.java,113,,"            .addRolesToGroup(USERGROUP1, ""all_db1"", ""load_data"")"
134297,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtDatabaseScope.java,114,,"            .addRolesToGroup(USERGROUP2, ""all_db2"")"
134298,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtDatabaseScope.java,127,,"    statement.execute(""LOAD DATA LOCAL INPATH '"" + dataFile.getPath() + ""' INTO TABLE "" + DB1 + "".TAB_1"");"
134299,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtDatabaseScope.java,132,,"    statement.execute(""USE "" + DB1);"
134300,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtDatabaseScope.java,309,,"            .addRolesToGroup(USERGROUP2, ""select_db2"")"
134301,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtDatabaseScope.java,357,,"    statement.execute(""use default"");"
134302,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtFunctionScope.java,80,,"    statement.execute(""USE "" + DB1);"
134303,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtFunctionScope.java,81,,"    statement.execute(""create table "" + DB1 + ""."" + tableName1"
134304,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtFunctionScope.java,90,,"        .addRolesToGroup(USERGROUP1, ""db1_all"", ""UDF_JAR"", ""data_read"")"
134305,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtFunctionScope.java,90,,"        .addRolesToGroup(USERGROUP1, ""db1_all"", ""UDF_JAR"", ""data_read"")"
134306,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtFunctionScope.java,91,,"        .addRolesToGroup(USERGROUP2, ""db1_tab1"", ""UDF_JAR"")"
134307,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtFunctionScope.java,93,,"        .addPermissionsToRole(""db1_all"", ""server=server1->db="" + DB1)"
134308,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtTableScope.java,74,,"    statement.execute(""USE DB_1"");"
134309,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtTableScope.java,76,,"    statement.execute(""CREATE TABLE "" + TBL1 + ""(B INT, A STRING) """
134310,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtTableScope.java,76,,"    statement.execute(""CREATE TABLE "" + TBL1 + ""(B INT, A STRING) """
134311,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtTableScope.java,77,,"        + "" row format delimited fields terminated by '|'  stored as textfile"");"
134312,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtTableScope.java,78,,"    statement.execute(""LOAD DATA LOCAL INPATH '"" + dataFile.getPath() + ""' INTO TABLE "" + TBL1);"
134313,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtTableScope.java,78,,"    statement.execute(""LOAD DATA LOCAL INPATH '"" + dataFile.getPath() + ""' INTO TABLE "" + TBL1);"
134314,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtTableScope.java,96,,"        .addRolesToGroup(USERGROUP1, ""select_tab1"", ""insert_tab1"", ""select_tab2"")"
134315,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtTableScope.java,96,,"        .addRolesToGroup(USERGROUP1, ""select_tab1"", ""insert_tab1"", ""select_tab2"")"
134316,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtTableScope.java,96,,"        .addRolesToGroup(USERGROUP1, ""select_tab1"", ""insert_tab1"", ""select_tab2"")"
134317,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtTableScope.java,97,,"        .addPermissionsToRole(""select_tab1"", ""server=server1->db=DB_1->table="" + TBL1 + ""->action=select"")"
134318,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtTableScope.java,97,,"        .addPermissionsToRole(""select_tab1"", ""server=server1->db=DB_1->table="" + TBL1 + ""->action=select"")"
134319,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtTableScope.java,98,,"        .addPermissionsToRole(""insert_tab1"", ""server=server1->db=DB_1->table="" + TBL1 + ""->action=insert"")"
134320,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtTableScope.java,108,,"    statement.execute(""INSERT INTO TABLE "" + TBL1 + "" SELECT A, B FROM "" + TBL2);"
134321,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtTableScope.java,108,,"    statement.execute(""INSERT INTO TABLE "" + TBL1 + "" SELECT A, B FROM "" + TBL2);"
134322,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtTableScope.java,110,,"    statement.executeQuery(""SELECT A FROM "" + TBL2);"
134323,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtTableScope.java,114,,"      Assert.fail(""Expected SQL exception"");"
134324,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtTableScope.java,172,,"    statement.execute(""USE "" + DB1);"
134325,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtTableScope.java,317,,"      statement.executeQuery(""SELECT VIEW_1.B FROM VIEW_1 JOIN "" + TBL2 + "" ON (VIEW_1.B = "" + TBL2 + "".B)"");"
134326,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtTableScope.java,343,,"        .addRolesToGroup(USERGROUP1, ""select_tab2"", ""select_view1"")"
134327,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtTableScope.java,430,,"    statement.execute(""DROP TABLE if exists "" + TBL1);"
134328,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtTableScope.java,447,,"    statement.execute(""TRUNCATE TABLE "" + TBL1);"
134329,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtTableScope.java,527,,"        .addRolesToGroup(USERGROUP1, ""all_tab1"")"
134330,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtTableScope.java,529,,"            ""server=server1->db="" + DB1 + ""->table="" + TBL1)"
134331,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestPrivilegesAtTableScope.java,529,,"            ""server=server1->db="" + DB1 + ""->table="" + TBL1)"
134332,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestRuntimeMetadataRetrieval.java,72,,"    String tableNames[] = {""tb_1"", ""tb_2"", ""tb_3"", ""tb_4""};"
134333,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestRuntimeMetadataRetrieval.java,72,,"    String tableNames[] = {""tb_1"", ""tb_2"", ""tb_3"", ""tb_4""};"
134334,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestRuntimeMetadataRetrieval.java,72,,"    String tableNames[] = {""tb_1"", ""tb_2"", ""tb_3"", ""tb_4""};"
134335,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestRuntimeMetadataRetrieval.java,72,,"    String tableNames[] = {""tb_1"", ""tb_2"", ""tb_3"", ""tb_4""};"
134336,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestRuntimeMetadataRetrieval.java,79,,"    statement.execute(""CREATE DATABASE "" + DB1);"
134337,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestRuntimeMetadataRetrieval.java,80,,"    statement.execute(""USE "" + DB1);"
134338,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestRuntimeMetadataRetrieval.java,83,,"    ResultSet rs = statement.executeQuery(""SHOW TABLES"");"
134339,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestRuntimeMetadataRetrieval.java,91,,"            .addPermissionsToRole(""tab1_priv"", ""server=server1->db="" + DB1 + ""->table="""
134340,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestRuntimeMetadataRetrieval.java,91,,"            .addPermissionsToRole(""tab1_priv"", ""server=server1->db="" + DB1 + ""->table="""
134341,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestRuntimeMetadataRetrieval.java,92,,"                    + tableNames[0] + ""->action=select"")"
134342,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestRuntimeMetadataRetrieval.java,158,,"    String tableNames[] = {""tb_1"", ""tb_2"", ""tb_3"", ""newtab_3""};"
134343,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestRuntimeMetadataRetrieval.java,176,,"            .addRolesToGroup(USERGROUP1, ""tab_priv"")"
134344,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestRuntimeMetadataRetrieval.java,242,,"    createTabs(statement, ""default"", tableNames);"
134345,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestRuntimeMetadataRetrieval.java,319,,"    ResultSet rs = statement.executeQuery(""SHOW DATABASES"");"
134346,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestSandboxOps.java,57,,"    .addPermissionsToRole(""db1_all"", ""server=server1->db="" + DB1)"
134347,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestSandboxOps.java,57,,"    .addPermissionsToRole(""db1_all"", ""server=server1->db="" + DB1)"
134348,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestSandboxOps.java,83,,"        userStmt.execute(""use "" + dbName);"
134349,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestSandboxOps.java,85,,"        context.assertAuthzException(userStmt, ""load data local inpath '"" + dataFile + ""' into table "" + tabName);"
134350,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestSandboxOps.java,88,,"        context.assertAuthzException(userStmt, ""CREATE DATABASE "" + DB3);"
134351,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestSandboxOps.java,251,,"    statement.execute(""USE "" + DB1);"
134352,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestSandboxOps.java,253,,"    statement.execute(""DROP VIEW IF EXISTS "" + VIEW1);"
134353,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestSandboxOps.java,254,,"    statement.execute(""CREATE VIEW "" + VIEW1 + "" (value) AS SELECT value from "" + TBL1 + "" LIMIT 10"");"
134354,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestSandboxOps.java,254,,"    statement.execute(""CREATE VIEW "" + VIEW1 + "" (value) AS SELECT value from "" + TBL1 + "" LIMIT 10"");"
134355,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestSandboxOps.java,254,,"    statement.execute(""CREATE VIEW "" + VIEW1 + "" (value) AS SELECT value from "" + TBL1 + "" LIMIT 10"");"
134356,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestSandboxOps.java,268,,"    context.assertAuthzException(statement, ""CREATE TABLE "" + TBL2 +"
134357,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestSandboxOps.java,367,,"        .addRolesToGroup(USERGROUP1, ""all_db1"", ""load_data"")"
134358,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestSandboxOps.java,367,,"        .addRolesToGroup(USERGROUP1, ""all_db1"", ""load_data"")"
134359,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestSandboxOps.java,399,,"    context.assertAuthzException(statement, ""LOAD DATA LOCAL INPATH '"" + dataFile.getPath() + ""' INTO TABLE "" + TBL2);"
134360,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestSandboxOps.java,417,,"        ""test-"" + (counter++)));"
134361,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestSandboxOps.java,439,,"    statement.execute(""INSERT OVERWRITE LOCAL DIRECTORY 'file://"" + allowedDir.getPath() + ""' SELECT * FROM "" + TBL1);"
134362,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestServerConfiguration.java,153,,"        .addRolesToGroup(USERGROUP1, ""all_db1"")"
134363,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestServerConfiguration.java,237,,"    statement.execute(""use default"");"
134364,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestUriPermissions.java,66,,"    adminStmt.execute(""use default"");"
134365,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestUriPermissions.java,67,,"    adminStmt.execute(""CREATE DATABASE "" + DB1);"
134366,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestUriPermissions.java,68,,"    adminStmt.execute(""use "" + DB1);"
134367,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestUriPermissions.java,73,,"            .addRolesToGroup(USERGROUP1, ""db1_read"", ""db1_write"", ""data_read"")"
134368,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestUriPermissions.java,75,,"            .addPermissionsToRole(""db1_write"", ""server=server1->db="" + DB1 + ""->table="" + tabName + ""->action=INSERT"")"
134369,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestUriPermissions.java,122,,"        .addRolesToGroup(USERGROUP1, ""db1_all"", ""data_read"")"
134370,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestUriPermissions.java,135,,"    userStmt.execute(""ALTER TABLE "" + tabName + "" ADD IF NOT EXISTS PARTITION (dt = '21-Dec-2012') "" +"
134371,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestUriPermissions.java,136,,"            "" LOCATION '"" + tabDir + ""'"");"
134372,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestUserManagement.java,119,,"        .addGroupsToUser(""admin1"", ADMINGROUP);"
134373,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestUserManagement.java,132,,"        .addGroupsToUser(""admin2"", ADMINGROUP)"
134374,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestUserManagement.java,133,,"        .addGroupsToUser(""admin3"", ADMINGROUP);"
134375,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestUserManagement.java,172,,"        .addRolesToGroup(""admin_group1"", ADMINGROUP)"
134376,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestUserManagement.java,173,,"        .addRolesToGroup(""admin_group2"", ADMINGROUP)"
134377,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestUserManagement.java,190,,"        .addRolesToGroup(""group1"", ""non_admin_role"")"
134378,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestUserManagement.java,190,,"        .addRolesToGroup(""group1"", ""non_admin_role"")"
134379,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestUserManagement.java,191,,"        .addPermissionsToRole(""non_admin_role"", ""server=server1->db="" + dbName)"
134380,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestUserManagement.java,192,,"        .addGroupsToUser(""user1"", ""group1"");"
134381,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestUserManagement.java,210,,"        .addRolesToGroup(""group1"", ADMINGROUP, ""analytics"")"
134382,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestUserManagement.java,214,,"        .addGroupsToUser(""user2"", ""group1"")"
134383,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestUserManagement.java,215,,"        .addGroupsToUser(""user3"", ""group1"");"
134384,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestUserManagement.java,227,,"        .addRolesToGroup(""group1"", ""non_admin_role"", ""load_data"")"
134385,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestUserManagement.java,284,,"        .addRolesToGroup(""group1~!@#$%^&*()+-"", ""analytics"", ""load_data"")"
134386,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/TestViewPrivileges.java,98,,"    ResultSet res = stmt.executeQuery(""select count(*) from "" + tabName);"
134387,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/hiveserver/HiveServerFactory.java,115,,"    Boolean policyOnHDFS = Boolean.valueOf(System.getProperty(""sentry.e2etest.policyonhdfs"", ""false""));"
134388,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/hive/hiveserver/HiveServerFactory.java,135,,"      properties.put(ACCESS_TESTING_MODE, ""true"");"
134389,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/metastore/TestAuthorizingObjectStore.java,53,,"  private static final String colName1 = ""col1"";"
134390,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/metastore/TestAuthorizingObjectStore.java,80,,"        Lists.newArrayList(new FieldSchema(""col1"", ""int"", """")),"
134391,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/metastore/TestAuthorizingObjectStore.java,81,,"        Lists.newArrayList(new FieldSchema(""part_col1"", ""string"", """")));"
134392,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/metastore/TestAuthorizingObjectStore.java,81,,"        Lists.newArrayList(new FieldSchema(""part_col1"", ""string"", """")));"
134393,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/metastore/TestAuthorizingObjectStore.java,104,,"        .addPermissionsToRole(all_role, ""server=server1->db="" + dbName1)"
134394,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/metastore/TestAuthorizingObjectStore.java,107,,"            ""server=server1->db="" + dbName1 + ""->table="" + tabName1 + ""->action=SELECT"")"
134395,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/metastore/TestAuthorizingObjectStore.java,107,,"            ""server=server1->db="" + dbName1 + ""->table="" + tabName1 + ""->action=SELECT"")"
134396,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/metastore/TestAuthorizingObjectStore.java,135,,"      fail(""NoSuchObjectException should have been thrown"");"
134397,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/metastore/TestAuthorizingObjectStore.java,191,,"    assertThat(client.getTables(dbName1, ""tab*"").size(), equalTo(2));"
134398,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/metastore/TestAuthorizingObjectStore.java,230,,"      client.getIndex(dbName1, tabName1, ""empty"");"
134399,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/metastore/TestAuthorizingObjectStore.java,263,,"        new ArrayList<String>(Arrays.asList(partitionVal)), ""tempuser"", new ArrayList<String>("
134400,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/metastore/TestAuthorizingObjectStore.java,264,,"            Arrays.asList(""tempgroup""))), notNullValue());"
134401,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/metastore/TestAuthorizingObjectStore.java,478,,"      fail(""MetaException should have been thrown"");"
134402,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/metastore/TestMetastoreEndToEnd.java,98,,"            .addPermissionsToRole(db_all_role, ""server=server1->db="" + dbName)"
134403,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/metastore/TestMetastoreEndToEnd.java,102,,"                    ""server=server1->db="" + dbName + ""->table="" + tabName1)"
134404,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/metastore/TestMetastoreEndToEnd.java,191,,"        Lists.newArrayList(new FieldSchema(""col1"", ""int"", """")));"
134405,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/metastore/TestMetastoreEndToEnd.java,191,,"        Lists.newArrayList(new FieldSchema(""col1"", ""int"", """")));"
134406,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/metastore/TestMetastoreEndToEnd.java,259,,"        Lists.newArrayList(new FieldSchema(""col3"", ""string"", """")));"
134407,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/metastore/TestMetastoreEndToEnd.java,284,,"    ArrayList<String> partVals1 = Lists.newArrayList(""part1"");"
134408,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/metastore/TestMetastoreEndToEnd.java,285,,"    ArrayList<String> partVals2 = Lists.newArrayList(""part2"");"
134409,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/metastore/TestMetastoreEndToEnd.java,344,,"    String newPath1 = ""fooTab1"";"
134410,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/metastore/TestMetastoreEndToEnd.java,354,,"        .addPermissionsToRole(uri_role, ""server=server1->URI="" + tabDir1)"
134411,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/metastore/TestMetastoreEndToEnd.java,525,,"    execHiveSQL(""CREATE TABLE "" + dbName + ""."" + tabName1"
134412,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/metastore/TestMetastoreEndToEnd.java,526,,"        + "" (id int) PARTITIONED BY (part_col string)"", USER1_1);"
134413,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-hive/src/test/java/org/apache/sentry/tests/e2e/minisentry/InternalSentrySrv.java,141,,"      throw new IllegalStateException(""SentrySrv is no longer active"");"
134414,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-kafka/src/test/java/org/apache/sentry/tests/e2e/kafka/TestAclsCrud.java,56,,"    configs.put(KafkaAuthConf.SENTRY_KAFKA_SITE_URL, ""file://"" + sentrySitePath.getAbsolutePath());"
134415,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-kafka/src/test/java/org/apache/sentry/tests/e2e/kafka/TestAclsCrud.java,59,,"    final String role1 = ""role1"";"
134416,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-kafka/src/test/java/org/apache/sentry/tests/e2e/kafka/TestAclsCrud.java,61,,"    final Acl acl = new Acl(new KafkaPrincipal(""role"", role1),"
134417,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-kafka/src/test/java/org/apache/sentry/tests/e2e/kafka/TestAclsCrud.java,63,,"        ""127.0.0.1"","
134418,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-kafka/src/test/java/org/apache/sentry/tests/e2e/kafka/TestAclsCrud.java,64,,"        Operation$.MODULE$.fromString(""READ""));"
134419,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-kafka/src/test/java/org/apache/sentry/tests/e2e/kafka/TestAclsCrud.java,67,,"    Resource resource = new Resource(ResourceType$.MODULE$.fromString(""TOPIC""), ""test-topic"");"
134420,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-kafka/src/test/java/org/apache/sentry/tests/e2e/kafka/TestAclsCrud.java,67,,"    Resource resource = new Resource(ResourceType$.MODULE$.fromString(""TOPIC""), ""test-topic"");"
134421,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-kafka/src/test/java/org/apache/sentry/tests/e2e/kafka/TestAclsCrud.java,86,,"      Assert.fail(""Failed to create role."");"
134422,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-kafka/src/test/java/org/apache/sentry/tests/e2e/kafka/TestAclsCrud.java,141,,"      Assert.fail(""Failed to add acl."");"
134423,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-kafka/src/test/java/org/apache/sentry/tests/e2e/kafka/TestAuthorize.java,72,,"      testProduce(""user1"");"
134424,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-kafka/src/test/java/org/apache/sentry/tests/e2e/kafka/TestAuthorize.java,75,,"      assertCausedMessage(ex, ""Not authorized to access topics: [t1]"");"
134425,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-solr/src/test/java/org/apache/sentry/tests/e2e/solr/AbstractSolrSentryTestBase.java,278,,"        fail(""The specified user: "" + solrUserName + "" shouldn't get update access!"");"
134426,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-solr/src/test/java/org/apache/sentry/tests/e2e/solr/AbstractSolrSentryTestBase.java,280,,"        assertTrue(""Expected "" + SENTRY_ERROR_MSG + "" in "" + exception.toString(),"
134427,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-solr/src/test/java/org/apache/sentry/tests/e2e/solr/AbstractSolrSentryTestBase.java,280,,"        assertTrue(""Expected "" + SENTRY_ERROR_MSG + "" in "" + exception.toString(),"
134428,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-solr/src/test/java/org/apache/sentry/tests/e2e/solr/AbstractSolrSentryTestBase.java,538,,"        modParams.set(""name"", collectionName);"
134429,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-solr/src/test/java/org/apache/sentry/tests/e2e/solr/TestDocLevelOperations.java,115,,"      querySimple(new QueryRequest(new SolrQuery(""*:*"")), server, checkNonAdminUsers);"
134430,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-solr/src/test/java/org/apache/sentry/tests/e2e/solr/TestDocLevelOperations.java,136,,"      setAuthenticationUser(""junit"");"
134431,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-solr/src/test/java/org/apache/sentry/tests/e2e/solr/TestDocLevelOperations.java,146,,"      setAuthenticationUser(""docLevel"");"
134432,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-solr/src/test/java/org/apache/sentry/tests/e2e/solr/TestDocLevelOperations.java,218,,"        doc.addField(""description"", ""description"" + iStr);"
134433,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-solr/src/test/java/org/apache/sentry/tests/e2e/solr/TestRealTimeGet.java,190,,"        generator.generateDocs(s, 100, ""junit_role"", ""admin_role"", 2);"
134434,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-solr/src/test/java/org/apache/sentry/tests/e2e/solr/TestRealTimeGet.java,190,,"        generator.generateDocs(s, 100, ""junit_role"", ""admin_role"", 2);"
134435,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-solr/src/test/java/org/apache/sentry/tests/e2e/solr/TestRealTimeGet.java,210,,"      assertIdVsIds(new ExpectedResult(server, new String[] {""bogus1"", ""1"", ""2""}, 1),"
134436,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-solr/src/test/java/org/apache/sentry/tests/e2e/solr/TestRealTimeGet.java,211,,"          new ExpectedResult(serverControl, new String[] {""bogus1"", ""1"", ""bogus2""}, 1));"
134437,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-solr/src/test/java/org/apache/sentry/tests/e2e/solr/TestRealTimeGet.java,270,,"      assertFl(server, ids, new HashSet<String>(Arrays.asList(ids)), null, Arrays.asList(""id"", ""description"", ""_version_""));"
134438,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-solr/src/test/java/org/apache/sentry/tests/e2e/solr/db/integration/AbstractSolrSentryTestWithDbProvider.java,80,,"  protected static final String COMPONENT_SOLR = ""solr"";"
134439,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-solr/src/test/java/org/apache/sentry/tests/e2e/solr/db/integration/TestSolrAdminOperations.java,47,,"    String grantor = ""user0"";"
134440,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-solr/src/test/java/org/apache/sentry/tests/e2e/solr/db/integration/TestSolrAdminOperations.java,52,,"    grantCollectionPrivilege(ADMIN_COLLECTION_NAME, ADMIN_USER, ""role0"", SearchConstants.ALL);"
134441,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-solr/src/test/java/org/apache/sentry/tests/e2e/solr/db/integration/TestSolrAdminOperations.java,75,,"    grantCollectionPrivilege(ADMIN_COLLECTION_NAME, ADMIN_USER, ""role1"", SearchConstants.UPDATE);"
134442,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-solr/src/test/java/org/apache/sentry/tests/e2e/solr/db/integration/TestSolrAdminOperations.java,98,,"    grantCollectionPrivilege(ADMIN_COLLECTION_NAME, ADMIN_USER, ""role2"", SearchConstants.QUERY);"
134443,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-solr/src/test/java/org/apache/sentry/tests/e2e/solr/db/integration/TestSolrAdminOperations.java,133,,"    grantCollectionPrivilege(ADMIN_COLLECTION_NAME, ADMIN_USER, ""role3"", SearchConstants.ALL);"
134444,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-solr/src/test/java/org/apache/sentry/tests/e2e/solr/db/integration/TestSolrDocLevelOperations.java,66,,"      setAuthenticationUser(""user0"");"
134445,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-solr/src/test/java/org/apache/sentry/tests/e2e/solr/db/integration/TestSolrDocLevelOperations.java,67,,"      grantCollectionPrivilege(TEST_COLLECTION_NAME1, ADMIN_USER, ""role0"", SearchConstants.QUERY);"
134446,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-solr/src/test/java/org/apache/sentry/tests/e2e/solr/db/integration/TestSolrDocLevelOperations.java,123,,"      doc.addField(""description"", ""description"" + docIdStr);"
134447,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-sqoop/src/test/java/org/apache/sentry/tests/e2e/sqoop/AbstractSqoopSentryTestBase.java,61,,"  protected static final String COMPONENT = ""sqoop"";"
134448,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-sqoop/src/test/java/org/apache/sentry/tests/e2e/sqoop/TestJobEndToEnd.java,87,,"      fail(""unexpected Authorization exception happend"");"
134449,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-sqoop/src/test/java/org/apache/sentry/tests/e2e/sqoop/TestJobEndToEnd.java,104,,"      fail(""expected Authorization exception happend"");"
134450,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-sqoop/src/test/java/org/apache/sentry/tests/e2e/sqoop/TestLinkEndToEnd.java,85,,"      fail(""unexpected Authorization exception happend"");"
134451,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-sqoop/src/test/java/org/apache/sentry/tests/e2e/sqoop/TestLinkEndToEnd.java,102,,"      fail(""expected Authorization exception happend"");"
134452,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-sqoop/src/test/java/org/apache/sentry/tests/e2e/sqoop/TestRoleOperation.java,53,,"      fail(""expected SentryAccessDeniedException happend"");"
134453,./TargetProjects/incubator-sentry/sentry-tests/sentry-tests-sqoop/src/test/java/org/apache/sentry/tests/e2e/sqoop/TestRoleOperation.java,55,,"      assertCausedMessage(e, ""SentryAccessDeniedException"");"
134454,./TargetProjects/incubator-streampipes/streampipes-code-generation/src/main/java/org/apache/streampipes/codegeneration/flink/sepa/ImplementationGenerator.java,44,,"				.addParameter(JFC.STRING, ""propertyName"").addStatement(""this.$N = $N"", ""propertyName"", ""propertyName"")"
134455,./TargetProjects/incubator-streampipes/streampipes-connect-container-master/src/main/java/org/apache/streampipes/connect/container/master/rest/AdapterResource.java,49,,"                               @PathParam(""username"") String username) {"
134456,./TargetProjects/incubator-streampipes/streampipes-connect-container-master/src/main/java/org/apache/streampipes/connect/container/master/rest/DescriptionResource.java,105,,"                LOG.error(""Not found adapter with id "" + id);"
134457,./TargetProjects/incubator-streampipes/streampipes-connect-container-master/src/test/java/org/apache/streampipes/connect/container/master/management/SourcesManagementTest.java,64,,"        sourcesManagement.addAdapter(ID, new SpDataSet(), ""user"");"
134458,./TargetProjects/incubator-streampipes/streampipes-connect-container-master/src/test/java/org/apache/streampipes/connect/container/master/management/WorkerRestClientTest.java,54,,"        doNothing().when(WorkerRestClient.class, ""stopAdapter"", anyString(), any(), anyString());"
134459,./TargetProjects/incubator-streampipes/streampipes-connect-container-master/src/test/java/org/apache/streampipes/connect/container/master/management/WorkerRestClientTest.java,57,,"        description.setId(""id1"");"
134460,./TargetProjects/incubator-streampipes/streampipes-connect-container/src/test/SpConnectResourceTest.java,82,,"        given().contentType(""application/json"").body(data).when()"
134461,./TargetProjects/incubator-streampipes/streampipes-connect-container/src/test/SpConnectResourceTest.java,84,,"                .body(""success"", equalTo(true))"
134462,./TargetProjects/incubator-streampipes/streampipes-connect-container/src/test/SpConnectResourceTest.java,85,,"                .body(""optionalMessage"", equalTo(""""))"
134463,./TargetProjects/incubator-streampipes/streampipes-connect-container/src/test/SpConnectResourceTest.java,86,,"                .body(""elementId"", equalTo(""http://test.de/1""));"
134464,./TargetProjects/incubator-streampipes/streampipes-connect-container/src/test/SpConnectTest.java,100,,"                .withHeader(""Content-Type"", equalTo(""application/json; charset=UTF-8"")));"
134465,./TargetProjects/incubator-streampipes/streampipes-connect-container/src/test/SpConnectTest.java,100,,"                .withHeader(""Content-Type"", equalTo(""application/json; charset=UTF-8"")));"
134466,./TargetProjects/incubator-streampipes/streampipes-connect-container/src/test/java/org/streampipes/connect/utils/TestAdapterSerializer.java,40,,"    formatDescription.addConfig(new FreeTextStaticProperty(""internal-id"", ""test"", ""test""));"
134467,./TargetProjects/incubator-streampipes/streampipes-connect/src/main/java/org/apache/streampipes/connect/adapter/format/csv/CsvFormat.java,61,,"                .anyMatch(option -> ""Header"".equals(option));"
134468,./TargetProjects/incubator-streampipes/streampipes-connect/src/main/java/org/apache/streampipes/connect/adapter/format/geojson/GeoJsonFormat.java,102,,"            List<Double> coordinates = (List<Double>) map.get(""coordinates"");"
134469,./TargetProjects/incubator-streampipes/streampipes-connect/src/test/java/org/apache/streampipes/connect/adapter/format/json/arraykey/JsonParserTest.java,41,,"    JsonParser parser = new JsonParser(true, ""key0"");"
134470,./TargetProjects/incubator-streampipes/streampipes-connect/src/test/java/org/apache/streampipes/connect/adapter/format/json/geojson/GeoJsonTest.java,128,,"        return  ""{\n"" +"
134471,./TargetProjects/incubator-streampipes/streampipes-connect/src/test/java/org/apache/streampipes/connect/adapter/format/json/geojson/GeoJsonTest.java,135,,"                ""              [\n"" +"
134472,./TargetProjects/incubator-streampipes/streampipes-connect/src/test/java/org/apache/streampipes/connect/adapter/format/json/geojson/GeoJsonTest.java,138,,"                ""              ],\n"" +"
134473,./TargetProjects/incubator-streampipes/streampipes-connect/src/test/java/org/apache/streampipes/connect/adapter/format/json/geojson/GeoJsonTest.java,196,,"                ""\t\t\t\""type\"" : \""Feature\"",\n"" +"
134474,./TargetProjects/incubator-streampipes/streampipes-connect/src/test/java/org/apache/streampipes/connect/adapter/format/json/geojson/GeoJsonTest.java,197,,"                ""\t\t\t\""geometry\"" : {\n"" +"
134475,./TargetProjects/incubator-streampipes/streampipes-connect/src/test/java/org/apache/streampipes/connect/adapter/format/json/geojson/GeoJsonTest.java,198,,"                ""\t\t\t\t\""type\"" : \""Point\"",\n"" +"
134476,./TargetProjects/incubator-streampipes/streampipes-connect/src/test/java/org/apache/streampipes/connect/adapter/format/json/geojson/GeoJsonTest.java,199,,"                ""\t\t\t\t\""coordinates\"" : [ 6.946535, 51.437344 ]\n"" +"
134477,./TargetProjects/incubator-streampipes/streampipes-connect/src/test/java/org/apache/streampipes/connect/adapter/format/json/geojson/GeoJsonTest.java,200,,"                ""\t\t\t},\n"" +"
134478,./TargetProjects/incubator-streampipes/streampipes-connect/src/test/java/org/apache/streampipes/connect/adapter/format/json/geojson/GeoJsonTest.java,201,,"                ""\t\t\t\""properties\"" : {\n"" +"
134479,./TargetProjects/incubator-streampipes/streampipes-connect/src/test/java/org/apache/streampipes/connect/adapter/format/json/geojson/GeoJsonTest.java,202,,"                ""\t\t\t\t\""measurementOrCalculationTime\"" : \""20180717121027\"",\n"" +"
134480,./TargetProjects/incubator-streampipes/streampipes-connect/src/test/java/org/apache/streampipes/connect/adapter/format/json/geojson/GeoJsonTest.java,203,,"                ""\t\t\t\t\""publicationTime\"" : \""20161026212501\"",\n"" +"
134481,./TargetProjects/incubator-streampipes/streampipes-connect/src/test/java/org/apache/streampipes/connect/adapter/format/json/geojson/GeoJsonTest.java,212,,"                ""\t\t\t}\n"" +"
134482,./TargetProjects/incubator-streampipes/streampipes-connect/src/test/java/org/apache/streampipes/connect/adapter/format/json/geojson/GeoJsonTest.java,221,,"                ""\t\t{\n"" +"
134483,./TargetProjects/incubator-streampipes/streampipes-connect/src/test/java/org/apache/streampipes/connect/adapter/format/json/xml/XmlTest.java,87,,"        byte[] event = getEventSchemaTest().getBytes(""UTF-8"");"
134484,./TargetProjects/incubator-streampipes/streampipes-connect/src/test/java/org/apache/streampipes/connect/adapter/format/json/xml/XmlTest.java,140,,"                ""    <parkhaus>\n"" +"
134485,./TargetProjects/incubator-streampipes/streampipes-connect/src/test/java/org/apache/streampipes/connect/adapter/format/json/xml/XmlTest.java,146,,"                ""        <zeitstempel>25.07.2018 10:45</zeitstempel>\n"" +"
134486,./TargetProjects/incubator-streampipes/streampipes-connect/src/test/java/org/apache/streampipes/connect/adapter/format/json/xml/XmlTest.java,147,,"                ""        <tendenz>3</tendenz>\n"" +"
134487,./TargetProjects/incubator-streampipes/streampipes-connect/src/test/java/org/apache/streampipes/connect/adapter/format/json/xml/XmlTest.java,148,,"                ""    </parkhaus>\n"" +"
134488,./TargetProjects/incubator-streampipes/streampipes-connect/src/test/java/org/apache/streampipes/connect/adapter/format/json/xml/XmlTest.java,154,,"                ""        <status>0</status>\n"" +"
134489,./TargetProjects/incubator-streampipes/streampipes-connect/src/test/java/org/apache/streampipes/connect/adapter/format/json/xml/XmlTest.java,235,,"                ""                <parkingFacilityStatus>\n"" +"
134490,./TargetProjects/incubator-streampipes/streampipes-connect/src/test/java/org/apache/streampipes/connect/adapter/format/json/xml/XmlTest.java,238,,"                ""                    <parkingFacilityStatus>open</parkingFacilityStatus>\n"" +"
134491,./TargetProjects/incubator-streampipes/streampipes-connect/src/test/java/org/apache/streampipes/connect/adapter/format/json/xml/XmlTest.java,239,,"                ""                    <parkingFacilityStatusTime>2018-07-25T13:17:00.087+02:00</parkingFacilityStatusTime>\n"" +"
134492,./TargetProjects/incubator-streampipes/streampipes-connect/src/test/java/org/apache/streampipes/connect/adapter/format/json/xml/XmlTest.java,244,,"                ""                </parkingFacilityStatus>\n"" +"
134493,./TargetProjects/incubator-streampipes/streampipes-connect/src/test/java/org/apache/streampipes/connect/adapter/format/json/xml/XmlTest.java,352,,"        String dataone = ""{\""elaboratedData\"":{\""basicData\"":{\""measurementOrCalculationTime\"":\""2018-07-25T16:21:27.365+02:00\"",\""xsi:type\"":\""TrafficFlow\"",\""vehicleFlow\"":{\""vehicleFlowRate\"":12},\""pertinentLocation\"":{\""xsi:type\"":\""LocationByReference\"",\""predefinedLocationReference\"":{\""targetClass\"":\""PredefinedLocation\"",\""id\"":\""fs.MQ_555.050_AB_SW_R_1\"",\""version\"":201610261425}},\""forVehiclesWithCharacteristicsOf\"":{\""vehicleType\"":\""car\""}}}}"";"
134494,./TargetProjects/incubator-streampipes/streampipes-connect/src/test/java/org/apache/streampipes/connect/adapter/preprocessing/transform/schema/CreateNestedTransformationRuleTest.java,51,,"        event.put(""parent"", new HashMap<>());"
134495,./TargetProjects/incubator-streampipes/streampipes-connect/src/test/java/org/apache/streampipes/connect/adapter/preprocessing/transform/schema/MoveTransformationRuleTest.java,37,,"        event.put(""new_parent"", new HashMap<>());"
134496,./TargetProjects/incubator-streampipes/streampipes-connect/src/test/java/org/apache/streampipes/connect/adapter/preprocessing/transform/schema/RenameTransformationRuleTest.java,35,,"        event.put(""old_key"", ""test"");"
134497,./TargetProjects/incubator-streampipes/streampipes-connect/src/test/java/org/apache/streampipes/connect/adapter/preprocessing/transform/schema/RenameTransformationRuleTest.java,35,,"        event.put(""old_key"", ""test"");"
134498,./TargetProjects/incubator-streampipes/streampipes-connect/src/test/java/org/apache/streampipes/connect/adapter/preprocessing/transform/schema/RenameTransformationRuleTest.java,39,,"        RenameTransformationRule renameRule = new RenameTransformationRule(oldKey, ""new_key"");"
134499,./TargetProjects/incubator-streampipes/streampipes-connect/src/test/java/org/apache/streampipes/connect/adapter/preprocessing/transform/value/UnitTransformRuleTest.java,36,,"        eventPropertyValue.setLabel(""value"");"
134500,./TargetProjects/incubator-streampipes/streampipes-connect/src/test/java/org/apache/streampipes/connect/adapter/preprocessing/transform/value/UnitTransformRuleTest.java,64,,"        eventPropertyMainKey.setLabel(""mainKey"");"
134501,./TargetProjects/incubator-streampipes/streampipes-connect/src/test/java/org/apache/streampipes/connect/adapter/preprocessing/transform/value/UnitTransformRuleTest.java,95,,"        eventPropertyValue1.setLabel(""value1"");"
134502,./TargetProjects/incubator-streampipes/streampipes-connect/src/test/java/org/apache/streampipes/connect/adapter/preprocessing/transform/value/UnitTransformRuleTest.java,98,,"        eventPropertyValue2.setLabel(""value2"");"
134503,./TargetProjects/incubator-streampipes/streampipes-container/src/main/java/org/apache/streampipes/container/api/InvocablePipelineElementResource.java,60,,"    public javax.ws.rs.core.Response invokeRuntime(@PathParam(""elementId"") String elementId, I graph) {"
134504,./TargetProjects/incubator-streampipes/streampipes-maven-plugin/src/main/java/org/apache/streampipes/smp/ExtractDocumentationMojo.java,134,,"                assetModel.getAppId()).resolve(""icon.png""));"
134505,./TargetProjects/incubator-streampipes/streampipes-maven-plugin/src/test/java/org/apache/streampipes/smp/extractor/TestAssetModelExtractor.java,33,,"          ""            .requiredStream(StreamRequirementsBuilder\n"" +"
134506,./TargetProjects/incubator-streampipes/streampipes-maven-plugin/src/test/java/org/apache/streampipes/smp/extractor/TestAssetModelExtractor.java,34,,"          ""                    .create()\n"" +"
134507,./TargetProjects/incubator-streampipes/streampipes-maven-plugin/src/test/java/org/apache/streampipes/smp/extractor/TestAssetModelExtractor.java,44,,"          ""            .supportedFormats(SupportedFormats.jsonFormat())\n"" +"
134508,./TargetProjects/incubator-streampipes/streampipes-maven-plugin/src/test/java/org/apache/streampipes/smp/extractor/TestAssetModelExtractor.java,45,,"          ""            .build();"";"
134509,./TargetProjects/incubator-streampipes/streampipes-maven-plugin/src/test/java/org/apache/streampipes/smp/generator/TestMarkdownTitleRemover.java,27,,"  private String content = ""---\n"" +"
134510,./TargetProjects/incubator-streampipes/streampipes-maven-plugin/src/test/java/org/apache/streampipes/smp/generator/TestMarkdownTitleRemover.java,39,,"          ""***\n"" +"
134511,./TargetProjects/incubator-streampipes/streampipes-model/src/main/java/org/apache/streampipes/model/message/NotificationType.java,22,,"	STORAGE_SUCCESS(""Success"", ""Entity successfully stored""), "
134512,./TargetProjects/incubator-streampipes/streampipes-model/src/test/java/org/apache/streampipes/model/runtime/TestEvent.java,34,,"    assertEquals(Integer.valueOf(1), event.getFieldBySelector(""s0::timestamp"").getAsPrimitive()"
134513,./TargetProjects/incubator-streampipes/streampipes-model/src/test/java/org/apache/streampipes/model/runtime/TestEvent.java,43,,"    assertEquals(Integer.valueOf(2), event.getFieldBySelector(""s0::nested::timestamp2"")"
134514,./TargetProjects/incubator-streampipes/streampipes-model/src/test/java/org/apache/streampipes/model/runtime/TestFieldAddition.java,34,,"    event.addField(""append"", 10);"
134515,./TargetProjects/incubator-streampipes/streampipes-model/src/test/java/org/apache/streampipes/model/runtime/TestSubset.java,35,,"    List<String> selectors = Arrays.asList(""s0::timestamp"", ""s0::sensor1"");"
134516,./TargetProjects/incubator-streampipes/streampipes-pipeline-management/src/test/java/org/apache/streampipes/manager/matching/v2/TestSchemaMatch.java,40,,"		EventPropertyPrimitive offer1 = EpProperties.integerEp(Labels.empty(), ""timestamp"", Geo.lat);"
134517,./TargetProjects/incubator-streampipes/streampipes-platform-services/src/main/java/org/apache/streampipes/ps/DataLakeResourceV3.java,53,,"  public Response getPage(@PathParam(""index"") String index,"
134518,./TargetProjects/incubator-streampipes/streampipes-platform-services/src/main/java/org/apache/streampipes/ps/DataLakeResourceV3.java,139,,"                             @PathParam(""startdate"") long startdate,"
134519,./TargetProjects/incubator-streampipes/streampipes-platform-services/src/main/java/org/apache/streampipes/ps/DataLakeResourceV3.java,140,,"                             @PathParam(""enddate"") long enddate) {"
134520,./TargetProjects/incubator-streampipes/streampipes-platform-services/src/main/java/org/apache/streampipes/ps/PipelineElementTemplateResource.java,46,,"          tags = {""Pipeline Element Templates""},"
134521,./TargetProjects/incubator-streampipes/streampipes-platform-services/src/main/java/org/apache/streampipes/ps/PipelineElementTemplateResource.java,50,,"                                  mediaType = ""application/json"","
134522,./TargetProjects/incubator-streampipes/streampipes-platform-services/src/main/java/org/apache/streampipes/ps/PipelineElementTemplateResource.java,77,,"  public Response getById(@Parameter(description = ""The id of the pipeline element template"", required = true)"
134523,./TargetProjects/incubator-streampipes/streampipes-platform-services/src/main/java/org/apache/streampipes/ps/PipelineElementTemplateResource.java,92,,"                  @ApiResponse(responseCode = ""200"", description = ""Template successfully stored"")"
134524,./TargetProjects/incubator-streampipes/streampipes-rest/src/main/java/org/apache/streampipes/rest/impl/Deployment.java,54,,"    public Response getFile(@FormDataParam(""config"") String config, @FormDataParam(""model"") String model) {"
134525,./TargetProjects/incubator-streampipes/streampipes-rest/src/main/java/org/apache/streampipes/rest/impl/Deployment.java,54,,"    public Response getFile(@FormDataParam(""config"") String config, @FormDataParam(""model"") String model) {"
134526,./TargetProjects/incubator-streampipes/streampipes-rest/src/main/java/org/apache/streampipes/rest/impl/OntologyPipelineElement.java,57,,"  public Response getSourceDetails(@PathParam(""sourceId"") String sepaId, @QueryParam(""keepIds"") boolean keepIds) {"
134527,./TargetProjects/incubator-streampipes/streampipes-rest/src/main/java/org/apache/streampipes/rest/impl/PipelineElementImport.java,54,,"  public Response addBatch(@PathParam(""username"") String username,"
134528,./TargetProjects/incubator-streampipes/streampipes-rest/src/main/java/org/apache/streampipes/rest/impl/PipelineResource.java,70,,"          tags = {""Pipeline""},"
134529,./TargetProjects/incubator-streampipes/streampipes-rest/src/main/java/org/apache/streampipes/rest/impl/PipelineResource.java,77,,"  public Response getOwn(@PathParam(""username"") String username) {"
134530,./TargetProjects/incubator-streampipes/streampipes-rest/src/main/java/org/apache/streampipes/rest/impl/PipelineResource.java,108,,"  public Response getPipelineStatus(@PathParam(""username"") String username, @PathParam(""pipelineId"") String pipelineId) {"
134531,./TargetProjects/incubator-streampipes/streampipes-rest/src/main/java/org/apache/streampipes/rest/impl/SemanticEventConsumer.java,48,,"  public Response getAvailable(@PathParam(""username"") String username) {"
134532,./TargetProjects/incubator-streampipes/streampipes-rest/src/main/java/org/apache/streampipes/rest/impl/SemanticEventConsumer.java,96,,"  public Response removeFavorite(@PathParam(""username"") String username, @PathParam(""elementUri"") String elementUri) {"
134533,./TargetProjects/incubator-streampipes/streampipes-rest/src/main/java/org/apache/streampipes/rest/impl/SemanticEventProcessingAgent.java,47,,"	public Response getAvailable(@PathParam(""username"") String username) {"
134534,./TargetProjects/incubator-streampipes/streampipes-rest/src/main/java/org/apache/streampipes/rest/impl/SemanticEventProcessingAgent.java,99,,"	public Response removeFavorite(@PathParam(""username"") String username, @PathParam(""elementUri"") String elementUri) {"
134535,./TargetProjects/incubator-streampipes/streampipes-rest/src/main/java/org/apache/streampipes/rest/impl/SemanticEventProducer.java,47,,"	public Response getAvailable(@PathParam(""username"") String username) {"
134536,./TargetProjects/incubator-streampipes/streampipes-rest/src/main/java/org/apache/streampipes/rest/impl/SemanticEventProducer.java,96,,"	public Response removeFavorite(@PathParam(""username"") String username, @PathParam(""elementUri"") String elementUri) {"
134537,./TargetProjects/incubator-streampipes/streampipes-rest/src/test/java/org/apache/streampipes/rest/impl/datalake/DataLakeNoUserManagementV3Test.java,53,,"        EventProperty property = createEventPropertyPrimitive(""A"", ""type"");"
134538,./TargetProjects/incubator-streampipes/streampipes-rest/src/test/java/org/apache/streampipes/rest/impl/datalake/DataLakeNoUserManagementV3Test.java,151,,"       ((EventPropertyNested) property).setEventProperties(Arrays.asList(createEventPropertyPrimitive(""A"", ""Type"")));"
134539,./TargetProjects/incubator-streampipes/streampipes-serializers-json/src/main/java/org/apache/streampipes/serializers/json/AdapterSerializer.java,35,,"    if (jsonObject.has(""_id"")) {"
134540,./TargetProjects/incubator-streampipes/streampipes-serializers-json/src/main/java/org/apache/streampipes/serializers/json/AdapterSerializer.java,38,,"    if (jsonObject.has(""_rev"")) {"
134541,./TargetProjects/incubator-streampipes/streampipes-serializers-json/src/test/java/org/apache/streampipes/serializers/utils/PipelineElementTemplateHelpers.java,32,,"    configs.put(""test-key"", makeConfig(true, true, ""test-string""));"
134542,./TargetProjects/incubator-streampipes/streampipes-user-management/src/test/java/org/apache/streampipes/user/management/util/TestTokenUtil.java,30,,"    String tokenName = ""test-token"";"
134543,./TargetProjects/incubator-streampipes/streampipes-wrapper-standalone/src/main/java/org/apache/streampipes/wrapper/standalone/manager/ProtocolManager.java,55,,"      LOG.info(""Adding new consumer to consumer map (size="" +consumers.size() +""): "" +topicName(protocol));"
134544,./TargetProjects/incubator-streampipes-extensions/streampipes-connect-adapters/src/test/java/org/apache/streampipes/connect/adapters/generic/elements/DuplicateFilterTest.java,110,,"        list.add(makeMap(""Test"", 123));"
134545,./TargetProjects/incubator-streampipes-extensions/streampipes-processors-filters-siddhi/src/main/java/org/apache/streampipes/processors/siddhi/topk/TopK.java,81,,"                    Arrays.asList(EpProperties.integerEp(Labels.withId(""count""), ""count"", ""http://schema.org/count""),"
134546,./TargetProjects/incubator-streampipes-extensions/streampipes-sinks-brokers-jvm/src/main/java/org/apache/streampipes/sinks/brokers/jvm/mqtt/MqttPublisherSink.java,99,,"                                new Option(""Yes"", false),"
134547,./TargetProjects/incubator-streampipes-extensions/streampipes-sinks-databases-jvm/src/main/java/org/apache/streampipes/sinks/databases/jvm/jdbcclient/model/DbDataTypeFactory.java,37,,"        throw new SpRuntimeException(""Database engine "" + sqlEngine + "" does not support integer values."");"
134548,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-common/src/test/java/org/apache/tajo/catalog/TestFunctionDesc.java,63,,"    FunctionDesc desc = new FunctionDesc(""sum"", TestSum.class, FunctionType.GENERAL,"
134549,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-common/src/test/java/org/apache/tajo/catalog/TestIndexDesc.java,38,,"        ""idx_test"", ""indexed"", new Column(""id"", Type.INT4),"
134550,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-common/src/test/java/org/apache/tajo/catalog/TestOptions.java,31,,"		opts.put(""name"", ""abc"");"
134551,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-common/src/test/java/org/apache/tajo/catalog/TestOptions.java,31,,"		opts.put(""name"", ""abc"");"
134552,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-common/src/test/java/org/apache/tajo/catalog/TestOptions.java,32,,"		opts.put(""delimiter"", "","");"
134553,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-common/src/test/java/org/apache/tajo/catalog/TestSchema.java,40,,"		col1 = new Column(""name"", Type.TEXT);"
134554,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-common/src/test/java/org/apache/tajo/catalog/TestSchema.java,42,,"		col2 = new Column(""age"", Type.INT4);"
134555,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-common/src/test/java/org/apache/tajo/catalog/TestSchema.java,44,,"		col3 = new Column(""addr"", Type.TEXT);"
134556,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-common/src/test/java/org/apache/tajo/catalog/TestSchema.java,149,,"    schema3.addColumn(""col2"", Type.INT4);"
134557,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-common/src/test/java/org/apache/tajo/catalog/TestSchema.java,152,,"    assertEquals(""col1"", schema3.getColumn(0).getSimpleName());"
134558,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-common/src/test/java/org/apache/tajo/catalog/TestTableDesc.java,49,,"    path = new Path(CommonTestingUtil.getTestDir(), ""table1"");"
134559,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-common/src/test/java/org/apache/tajo/catalog/TestTableMeta.java,41,,"    schema1.addColumn(""name"", Type.BLOB);"
134560,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-common/src/test/java/org/apache/tajo/catalog/TestTableMeta.java,42,,"    schema1.addColumn(""addr"", Type.TEXT);"
134561,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-common/src/test/java/org/apache/tajo/catalog/statistics/TestColumnStat.java,34,,"    ColumnStats stat = new ColumnStats(new Column(""test"", Type.INT8));"
134562,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-drivers/tajo-hcatalog/src/main/java/org/apache/tajo/catalog/store/HCatalogStore.java,85,,"      throw new CatalogException(""Table name is wrong."", ioe);"
134563,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/main/java/org/apache/tajo/catalog/store/AbstractDBStore.java,210,,"      sql.append(""INSERT INTO "");"
134564,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/main/java/org/apache/tajo/catalog/store/AbstractDBStore.java,407,,"      sql.append("" FROM "").append(TB_TABLES);"
134565,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/main/java/org/apache/tajo/catalog/store/AbstractDBStore.java,408,,"      sql.append("" WHERE "").append(C_TABLE_ID).append("" = ? "");"
134566,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/main/java/org/apache/tajo/catalog/store/AbstractDBStore.java,408,,"      sql.append("" WHERE "").append(C_TABLE_ID).append("" = ? "");"
134567,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/main/java/org/apache/tajo/catalog/store/AbstractDBStore.java,439,,"      sql.append(""DELETE FROM "").append(TB_COLUMNS);"
134568,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/main/java/org/apache/tajo/catalog/store/AbstractDBStore.java,530,,"      sql.append("" from "").append(TB_TABLES);"
134569,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/main/java/org/apache/tajo/catalog/store/AbstractDBStore.java,800,,"      sql.append("" DELETE FROM "").append(TB_PARTITION_METHODS);"
134570,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/main/java/org/apache/tajo/catalog/store/DerbyStore.java,62,,"        sql.append(""CREATE TABLE "");"
134571,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/main/java/org/apache/tajo/catalog/store/DerbyStore.java,70,,"        LOG.info(""Table '"" + TB_META + "" is created."");"
134572,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/main/java/org/apache/tajo/catalog/store/DerbyStore.java,115,,"        LOG.info(""Table '"" + TB_TABLES + ""' is created."");"
134573,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/main/java/org/apache/tajo/catalog/store/DerbyStore.java,168,,"        sql.append("" VARCHAR(255) NOT NULL REFERENCES TABLES ("");"
134574,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/main/java/org/apache/tajo/catalog/store/DerbyStore.java,205,,"        sql.append(""ON DELETE CASCADE, "");"
134575,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/main/java/org/apache/tajo/catalog/store/MemStore.java,115,,"    throw new RuntimeException(""not supported!"");"
134576,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/main/java/org/apache/tajo/catalog/store/MySQLStore.java,64,,"        sql.append(""CREATE TABLE "").append(TB_META).append("" (version int NOT NULL)"");"
134577,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/main/java/org/apache/tajo/catalog/store/MySQLStore.java,71,,"        LOG.info(""Table '"" + TB_META + "" is created."");"
134578,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/main/java/org/apache/tajo/catalog/store/MySQLStore.java,88,,"        LOG.info(""Table '"" + TB_TABLES + ""' is created."");"
134579,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/main/java/org/apache/tajo/catalog/store/MySQLStore.java,97,,"        sql.append(C_TABLE_ID).append("" VARCHAR(255) NOT NULL,"");"
134580,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/main/java/org/apache/tajo/catalog/store/MySQLStore.java,104,,"        sql.append(""FOREIGN KEY("").append(C_TABLE_ID).append("") REFERENCES "");"
134581,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/main/java/org/apache/tajo/catalog/store/MySQLStore.java,104,,"        sql.append(""FOREIGN KEY("").append(C_TABLE_ID).append("") REFERENCES "");"
134582,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/main/java/org/apache/tajo/catalog/store/MySQLStore.java,105,,"        sql.append(TB_TABLES).append(""("").append(C_TABLE_ID).append("") ON DELETE CASCADE)"");"
134583,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,81,,"        ""getTable"","
134584,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,115,,"        ""idx_test"", ""indexed"", new Column(""id"", Type.INT4),"
134585,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,119,,"        ""idx_test2"", ""indexed"", new Column(""score"", Type.FLOAT8),"
134586,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,157,,"							new Column(""name"", TajoDataTypes.Type.INT4)"
134587,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,183,,"    assertFalse(catalog.containFunction(""test10"", FunctionType.GENERAL));"
134588,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,202,,"		assertFalse(catalog.containFunction(""test2"", FunctionType.UDF));"
134589,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,231,,"    assertFalse(catalog.containFunction(""test3"", CatalogUtil.newSimpleDataTypeArray(Type.INT4)));"
134590,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,253,,"        .addColumn(""age"", Type.INT4)"
134591,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,256,,"    String tableName = ""addedtable"";"
134592,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestCatalog.java,258,,"    opts.put(""file.delimiter"", "","");"
134593,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestDBStore.java,67,,"    .addColumn(""name"", Type.TEXT)"
134594,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestDBStore.java,68,,"    .addColumn(""age"", Type.INT4)"
134595,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestDBStore.java,69,,"    .addColumn(""score"", Type.FLOAT8);"
134596,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestDBStore.java,71,,"    String tableName = ""addedtable"";"
134597,./TargetProjects/incubator-tajo/tajo-catalog/tajo-catalog-server/src/test/java/org/apache/tajo/catalog/TestDBStore.java,73,,"    opts.put(""file.delimiter"", "","");"
134598,./TargetProjects/incubator-tajo/tajo-client/src/main/java/org/apache/tajo/jdbc/TajoResultSetBase.java,284,,"    throw new SQLFeatureNotSupportedException(""getBigDecimal not supported"");"
134599,./TargetProjects/incubator-tajo/tajo-client/src/main/java/org/apache/tajo/jdbc/TajoResultSetBase.java,435,,"    throw new SQLFeatureNotSupportedException(""getObject not supported"");"
134600,./TargetProjects/incubator-tajo/tajo-client/src/main/java/org/apache/tajo/jdbc/TajoResultSetBase.java,498,,"    throw new SQLFeatureNotSupportedException(""getTime not supported"");"
134601,./TargetProjects/incubator-tajo/tajo-client/src/main/java/org/apache/tajo/jdbc/TajoResultSetBase.java,518,,"    throw new SQLFeatureNotSupportedException(""getTimestamp not supported"");"
134602,./TargetProjects/incubator-tajo/tajo-client/src/main/java/org/apache/tajo/jdbc/TajoResultSetBase.java,688,,"    throw new SQLFeatureNotSupportedException(""updateAsciiStream not supported"");"
134603,./TargetProjects/incubator-tajo/tajo-client/src/main/java/org/apache/tajo/jdbc/TajoResultSetBase.java,735,,"    throw new SQLFeatureNotSupportedException(""updateBinaryStream not supported"");"
134604,./TargetProjects/incubator-tajo/tajo-client/src/main/java/org/apache/tajo/jdbc/TajoResultSetBase.java,770,,"    throw new SQLFeatureNotSupportedException(""updateBlob not supported"");"
134605,./TargetProjects/incubator-tajo/tajo-client/src/main/java/org/apache/tajo/jdbc/TajoResultSetBase.java,812,,"    throw new SQLFeatureNotSupportedException(""updateByte not supported"");"
134606,./TargetProjects/incubator-tajo/tajo-client/src/main/java/org/apache/tajo/jdbc/TajoResultSetBase.java,832,,"    throw new SQLFeatureNotSupportedException(""updateCharacterStream not supported"");"
134607,./TargetProjects/incubator-tajo/tajo-client/src/main/java/org/apache/tajo/jdbc/TajoResultSetBase.java,867,,"    throw new SQLFeatureNotSupportedException(""updateClob not supported"");"
134608,./TargetProjects/incubator-tajo/tajo-client/src/main/java/org/apache/tajo/jdbc/TajoResultSetBase.java,948,,"    throw new SQLFeatureNotSupportedException(""updateNCharacterStream not supported"");"
134609,./TargetProjects/incubator-tajo/tajo-client/src/main/java/org/apache/tajo/jdbc/TajoResultSetBase.java,971,,"    throw new SQLFeatureNotSupportedException(""updateNClob not supported"");"
134610,./TargetProjects/incubator-tajo/tajo-client/src/main/java/org/apache/tajo/jdbc/TajoResultSetBase.java,1022,,"    throw new SQLFeatureNotSupportedException(""updateObject not supported"");"
134611,./TargetProjects/incubator-tajo/tajo-common/src/main/java/org/apache/tajo/datum/protobuf/ProtobufJsonFormat.java,466,,"        throw parseException(""Expected \"""" + token + ""\""."");"
134612,./TargetProjects/incubator-tajo/tajo-common/src/main/java/org/apache/tajo/datum/protobuf/ProtobufJsonFormat.java,867,,"      if (""null"".equals(tokenizer.currentToken())) {"
134613,./TargetProjects/incubator-tajo/tajo-common/src/main/java/org/apache/tajo/json/DatumAdapter.java,38,,"      return new DateDatum(jsonObject.get(""value"").getAsInt());"
134614,./TargetProjects/incubator-tajo/tajo-common/src/test/java/org/apache/tajo/datum/TestBytesDatum.java,33,,"    Datum d = DatumFactory.createBlob(""12345"".getBytes());"
134615,./TargetProjects/incubator-tajo/tajo-common/src/test/java/org/apache/tajo/datum/TestCharDatum.java,66,,"		Datum d = DatumFactory.createChar(""1234567890"");"
134616,./TargetProjects/incubator-tajo/tajo-common/src/test/java/org/apache/tajo/datum/TestInet4Datum.java,75,,"		Inet4Datum ip = new Inet4Datum(""163.152.23.222"");"
134617,./TargetProjects/incubator-tajo/tajo-common/src/test/java/org/apache/tajo/datum/TestTextDatum.java,32,,"		Datum d = DatumFactory.createText(""12345"");"
134618,./TargetProjects/incubator-tajo/tajo-common/src/test/java/org/apache/tajo/util/TestFileUtils.java,67,,"		File file = new File(TEST_PATH+""/file.bin"");"
134619,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/main/java/org/apache/tajo/engine/planner/LogicalPlanner.java,368,,"          throw new PlanningException(String.format(""Cannot get the field \""%s\"" at node (%d)"","
134620,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/main/java/org/apache/tajo/engine/planner/PhysicalPlannerImpl.java,300,,"          LOG.info(""Join ("" + plan.getPID() +"") chooses [Nested Loop Join]"");"
134621,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/main/java/org/apache/tajo/engine/planner/PhysicalPlannerImpl.java,343,,"          LOG.error(""Choose a fallback inner join algorithm: "" + JoinAlgorithm.MERGE_JOIN.name());"
134622,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/main/java/org/apache/tajo/engine/planner/PhysicalPlannerImpl.java,436,,"          LOG.info(""Left Outer Join ("" + plan.getPID() +"") chooses [Hash Join]."");"
134623,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/main/java/org/apache/tajo/engine/planner/PhysicalPlannerImpl.java,436,,"          LOG.info(""Left Outer Join ("" + plan.getPID() +"") chooses [Hash Join]."");"
134624,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/main/java/org/apache/tajo/engine/planner/PhysicalPlannerImpl.java,621,,"          LOG.info(""Left Semi Join ("" + plan.getPID() +"") chooses [In Memory Hash Join]."");"
134625,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/main/java/org/apache/tajo/engine/planner/PhysicalPlannerImpl.java,621,,"          LOG.info(""Left Semi Join ("" + plan.getPID() +"") chooses [In Memory Hash Join]."");"
134626,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/main/java/org/apache/tajo/engine/planner/PhysicalPlannerImpl.java,625,,"          LOG.error(""Invalid Left Semi Join Algorithm Enforcer: "" + algorithm.name());"
134627,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/main/java/org/apache/tajo/engine/planner/logical/join/JoinGraph.java,59,,"          throw new PlanningException(""Cannot expect a referenced relation: "" + leftExpr);"
134628,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/main/java/org/apache/tajo/engine/planner/rewrite/FilterPushDownRule.java,131,,"                throw new InvalidQueryException(""Incorrect Logical Query Plan with regard to outer join"");"
134629,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/main/java/org/apache/tajo/master/GlobalEngine.java,129,,"        context.getSystemMetrics().counter(""Query"", ""numHiveMode"").inc();"
134630,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/main/java/org/apache/tajo/master/GlobalEngine.java,246,,"    LOG.info(""============================================="");"
134631,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/main/java/org/apache/tajo/master/TajoMaster.java,84,,"  @SuppressWarnings(""OctalInteger"")"
134632,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/main/java/org/apache/tajo/master/TajoMaster.java,233,,"      LOG.info(""System dir '"" + systemPath + ""' is created"");"
134633,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/main/java/org/apache/tajo/master/YarnContainerProxy.java,247,,"    if (prop.getProperty(""tajo.test"", ""FALSE"").equalsIgnoreCase(""TRUE"") ||"
134634,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/main/java/org/apache/tajo/master/YarnContainerProxy.java,266,,"      classPathEnv.append("":"" + System.getenv(""TAJO_BASE_CLASSPATH""));"
134635,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/main/java/org/apache/tajo/master/YarnContainerProxy.java,268,,"      if(System.getenv(""HADOOP_HOME"") != null) {"
134636,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/main/java/org/apache/tajo/master/querymaster/QueryUnit.java,526,,"      LOG.info(""============================================================="");"
134637,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/main/java/org/apache/tajo/master/querymaster/SubQuery.java,732,,"        LOG.info(""Bigger Table's volume is approximately "" + mb + "" MB"");"
134638,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/main/java/org/apache/tajo/util/metrics/reporter/TajoMetricsReporter.java,98,,"      sb.append(key).append("".mean="").append(String.format(""%2.2f"","
134639,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/main/java/org/apache/tajo/worker/RangeRetrieverHandler.java,114,,"      LOG.error(""State Dump (the requested range: """
134640,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/main/java/org/apache/tajo/worker/RangeRetrieverHandler.java,115,,"          + ""["" + start + "", "" + end+"")"" + "", idx min: "" + idxReader.getFirstKey() + "", idx max: """
134641,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/main/java/org/apache/tajo/worker/RangeRetrieverHandler.java,115,,"          + ""["" + start + "", "" + end+"")"" + "", idx min: "" + idxReader.getFirstKey() + "", idx max: """
134642,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/main/java/org/apache/tajo/worker/dataserver/retriever/AdvancedDataRetriever.java,75,,"    if (!params.containsKey(""qid"")) {"
134643,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/LocalTajoTestingUtility.java,67,,"    LOG.info(""==================================================="");"
134644,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/TajoTestingCluster.java,243,,"    conf.setVar(ConfVars.CATALOG_ADDRESS, ""localhost:0"");"
134645,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/client/TestTajoClient.java,85,,"        ""create external table "" + tableName + "" (deptname text, score integer) """
134646,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/client/TestTajoClient.java,86,,"            + ""using csv location '"" + tablePath + ""'"";"
134647,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/client/TestTajoClient.java,144,,"    client.updateQuery(""drop table "" + tableName);"
134648,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/client/TestTajoClient.java,164,,"    client.updateQuery(""drop table "" + tableName + "" purge"");"
134649,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/client/TestTajoClient.java,177,,"    String sql = ""create table "" + tableName + "" (deptname text, score int4)"";"
134650,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/client/TestTajoClient.java,177,,"    String sql = ""create table "" + tableName + "" (deptname text, score int4)"";"
134651,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/cluster/TestServerName.java,31,,"		ServerName server = new ServerName(""ex1.com"",50030);"
134652,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/cluster/TestServerName.java,38,,"		ServerName server = new ServerName(""ex1.com:50030"");"
134653,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/eval/TestEvalTreeUtil.java,153,,"    EvalTreeUtil.changeColumnRef(copy, ""people.score"", ""newscore"");"
134654,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/eval/TestEvalTreeUtil.java,159,,"    EvalTreeUtil.changeColumnRef(copy, ""people.age"", ""sum_age"");"
134655,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/eval/TestEvalTreeUtil.java,159,,"    EvalTreeUtil.changeColumnRef(copy, ""people.age"", ""sum_age"");"
134656,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/eval/TestPredicates.java,89,,"    schema1.addColumn(""col1"", INT4);"
134657,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/eval/TestPredicates.java,90,,"    schema1.addColumn(""col2"", INT4);"
134658,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/eval/TestPredicates.java,91,,"    schema1.addColumn(""col3"", INT4);"
134659,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/eval/TestPredicates.java,94,,"        ""table1"", ""123,123,456,-123"","
134660,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/eval/TestPredicates.java,94,,"        ""table1"", ""123,123,456,-123"","
134661,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/eval/TestPredicates.java,116,,"    schema1.addColumn(""col4"", INT4);"
134662,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/eval/TestPredicates.java,156,,"        ""table1"", ""123,456,,"","
134663,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/eval/TestPredicates.java,224,,"    testEval(schema2, ""table1"", ""b,a,c"", ""select col1 between 'a' and 'c' from table1"", new String[]{""t""});"
134664,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/eval/TestPredicates.java,230,,"    testEval(schema2, ""table1"", ""a,a,c"", ""select col1 between col2 and col3 from table1"", new String[]{""t""});"
134665,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/eval/TestPredicates.java,254,,"    testEval(schema3, ""table1"", ""20130715,20100102,20120525,20130716"", query, new String [] {""1""});"
134666,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/eval/TestSQLExpression.java,49,,"    testSimpleEval(""select cast ('123' as int2)"", new String[] {""123""});"
134667,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/eval/TestSQLExpression.java,52,,"    testSimpleEval(""select cast ('123' as float)"", new String[] {""123.0""});"
134668,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/eval/TestSQLExpression.java,83,,"    testEval(schema, ""table1"", ""123,234"", ""select cast(col1 as float) as b, cast(col2 as float) as a from table1"","
134669,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,59,,"    schema2.addColumn(""col1"", TIMESTAMP);"
134670,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,60,,"    testEval(schema2, ""table1"", ""1970-01-17 10:09:37"", ""select extract(year from col1), extract(month from col1), extract(day from col1) from table1;"", new String[]{""1970.0"", ""1.0"", ""17.0""});"
134671,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,60,,"    testEval(schema2, ""table1"", ""1970-01-17 10:09:37"", ""select extract(year from col1), extract(month from col1), extract(day from col1) from table1;"", new String[]{""1970.0"", ""1.0"", ""17.0""});"
134672,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,60,,"    testEval(schema2, ""table1"", ""1970-01-17 10:09:37"", ""select extract(year from col1), extract(month from col1), extract(day from col1) from table1;"", new String[]{""1970.0"", ""1.0"", ""17.0""});"
134673,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,60,,"    testEval(schema2, ""table1"", ""1970-01-17 10:09:37"", ""select extract(year from col1), extract(month from col1), extract(day from col1) from table1;"", new String[]{""1970.0"", ""1.0"", ""17.0""});"
134674,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,64,,"    testEval(schema3, ""table1"", ""10:09:37.5"", ""select extract(hour from col1), extract(minute from col1), extract(second from col1) from table1;"", new String[]{""10.0"", ""9.0"", ""37.5""});"
134675,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,64,,"    testEval(schema3, ""table1"", ""10:09:37.5"", ""select extract(hour from col1), extract(minute from col1), extract(second from col1) from table1;"", new String[]{""10.0"", ""9.0"", ""37.5""});"
134676,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,64,,"    testEval(schema3, ""table1"", ""10:09:37.5"", ""select extract(hour from col1), extract(minute from col1), extract(second from col1) from table1;"", new String[]{""10.0"", ""9.0"", ""37.5""});"
134677,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,70,,"    testSimpleEval(""select extract(century from TIMESTAMP '1970-01-17 10:09:37');"", new String[]{""19.0""});"
134678,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,74,,"    testSimpleEval(""select extract(decade from TIMESTAMP '1970-01-17 10:09:37');"", new String[]{""197.0""});"
134679,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,78,,"    testSimpleEval(""select extract(millennium from TIMESTAMP '2001-02-16 10:09:37');"", new String[]{""3.0""});"
134680,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,79,,"    testSimpleEval(""select extract(millennium from TIMESTAMP '2000-02-16 10:09:37');"", new String[]{""2.0""});"
134681,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,90,,"    testSimpleEval(""select extract(second from TIMESTAMP '1970-01-17 10:09:37');"", new String[]{""37.0""});"
134682,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,108,,"    testSimpleEval(""select extract(dow from TIMESTAMP '1970-01-17 10:09:37');"", new String[]{""6.0""});"
134683,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,109,,"    testSimpleEval(""select extract(dow from TIMESTAMP '1970-01-18 10:09:37');"", new String[]{""0.0""});"
134684,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,111,,"    testSimpleEval(""select extract(isodow from TIMESTAMP '1970-01-18 10:09:37');"", new String[]{""7.0""});"
134685,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,113,,"    testSimpleEval(""select extract(year from TIMESTAMP '2006-01-02 10:09:37');"", new String[]{""2006.0""});"
134686,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,116,,"    testSimpleEval(""select extract(isoyear from TIMESTAMP '2006-01-01 10:09:37');"", new String[]{""2005.0""});"
134687,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestDateTimeFunctions.java,121,,"    testSimpleEval(""select extract(quarter from TIMESTAMP '2006-12-01 10:09:37');"", new String[]{""4.0""});"
134688,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestMathFunctions.java,41,,"    schema.addColumn(""col1"", FLOAT8);"
134689,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestMathFunctions.java,42,,"    schema.addColumn(""col2"", FLOAT8);"
134690,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestMathFunctions.java,43,,"    schema.addColumn(""col3"", FLOAT8);"
134691,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestMathFunctions.java,45,,"    testEval(schema, ""table1"", ""1.0, 0.2, 0.4"", ""select round(col1 + col2 + col3) from table1"","
134692,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestMathFunctions.java,82,,"    testEval(schema, ""table1"", ""1.0, 0.2, 0.1"", ""select ceil(col1 + col2 + col3) from table1"","
134693,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestMathFunctions.java,107,,"    testSimpleEval(""select sin(0.0) as col1 "", new String[]{""0.0""});"
134694,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestMathFunctions.java,124,,"    testSimpleEval(""select cos(0.0) as col1 "", new String[]{""1.0""});"
134695,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestPatternMatchingPredicates.java,37,,"    testEval(schema, ""table1"", "","", ""select col1 like 'a%' from table1"", new String[]{""""});"
134696,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestPatternMatchingPredicates.java,40,,"    testEval(schema, ""table1"", ""abc"", ""select col1 like '%c' from table1"", new String[]{""t""});"
134697,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestStringOperatorsAndFunctions.java,35,,"    testSimpleEval(""select ('abc' || 'def') col1 "", new String[]{""abcdef""});"
134698,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestStringOperatorsAndFunctions.java,44,,"    schema.addColumn(""col1"", TEXT);"
134699,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestStringOperatorsAndFunctions.java,45,,"    schema.addColumn(""col2"", INT4);"
134700,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestStringOperatorsAndFunctions.java,46,,"    schema.addColumn(""col3"", FLOAT8);"
134701,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestStringOperatorsAndFunctions.java,50,,"    testEval(schema, ""table1"", ""abc,2,3.14"", ""select col1 || col2 || col3 from table1"", new String[]{""abc23.14""});"
134702,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestStringOperatorsAndFunctions.java,56,,"    testSimpleEval(""select ltrim(' trim') "", new String[]{""trim""});"
134703,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestStringOperatorsAndFunctions.java,155,,"    testSimpleEval(""select left('abcdef',3) as col1 "", new String[]{""abc""});"
134704,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestStringOperatorsAndFunctions.java,218,,"    testEval(schema, ""table1"", ""abc,efg,3.14"", ""select reverse(col1) || reverse(col2) from table1"","
134705,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestStringOperatorsAndFunctions.java,257,,"    testEval(schema, ""table1"", ""ABC,DEF,3.14"", ""select lower(col1), lower(col2) from table1"","
134706,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/function/TestStringOperatorsAndFunctions.java,324,,"    testEval(schema, ""table1"", "",abcdef,3.14"", ""select to_hex(10) from table1"","
134707,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/parser/TestSQLAnalyzer.java,281,,"    assertEquals(""col1"", hashPartition.getColumns()[0].getCanonicalName());"
134708,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/planner/TestLogicalPlanner.java,66,,"    schema.addColumn(""name"", Type.TEXT);"
134709,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/planner/TestLogicalPlanner.java,68,,"    schema.addColumn(""deptname"", Type.TEXT);"
134710,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/planner/TestLogicalPlanner.java,76,,"    schema3.addColumn(""score"", Type.INT4);"
134711,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/planner/TestLogicalPlanner.java,79,,"    TableDesc people = new TableDesc(""employee"", schema, meta, CommonTestingUtil.getTestDir());"
134712,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/planner/TestLogicalPlanner.java,82,,"    TableDesc student = new TableDesc(""dept"", schema2, StoreType.CSV, new Options(), CommonTestingUtil.getTestDir());"
134713,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/planner/TestPlannerUtil.java,164,,"    outerSchema.addColumn(""employee.id1"", CatalogUtil.newSimpleDataType(Type.INT4));"
134714,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/planner/TestPlannerUtil.java,165,,"    outerSchema.addColumn(""employee.id2"", CatalogUtil.newSimpleDataType(Type.INT4));"
134715,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/planner/TestPlannerUtil.java,167,,"    innerSchema.addColumn(""people.fid1"", CatalogUtil.newSimpleDataType(Type.INT4));"
134716,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/planner/TestPlannerUtil.java,168,,"    innerSchema.addColumn(""people.fid2"", CatalogUtil.newSimpleDataType(Type.INT4));"
134717,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/planner/TestUniformRangePartition.java,41,,"    .addColumn(""l_returnflag"", Type.TEXT)"
134718,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/planner/TestUniformRangePartition.java,42,,"    .addColumn(""l_linestatus"", Type.TEXT);"
134719,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/planner/physical/TestBSTIndexExec.java,111,,"    tablePath = StorageUtil.concatPath(workDir, ""employee"", ""table.csv"");"
134720,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/planner/physical/TestFullOuterHashJoinExec.java,202,,"    emp3 = CatalogUtil.newTableDesc(""emp3"", emp3Schema, emp3Meta, emp3Path);"
134721,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/planner/physical/TestFullOuterMergeJoinExec.java,243,,"    emp3 = CatalogUtil.newTableDesc(""emp3"", emp3Schema, emp3Meta, emp3Path);"
134722,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/planner/physical/TestLeftOuterHashJoinExec.java,202,,"    emp3 = CatalogUtil.newTableDesc(""emp3"", emp3Schema, emp3Meta, emp3Path);"
134723,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/planner/physical/TestLeftOuterNLJoinExec.java,201,,"    emp3 = CatalogUtil.newTableDesc(""emp3"", emp3Schema, emp3Meta, emp3Path);"
134724,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/planner/physical/TestPhysicalPlanner.java,107,,"    scoreSchema.addColumn(""score"", Type.INT4);"
134725,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/planner/physical/TestPhysicalPlanner.java,126,,"    employee = new TableDesc(""employee"", employeeSchema, employeeMeta, employeePath);"
134726,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/planner/physical/TestPhysicalPlanner.java,365,,"    Path workDir = CommonTestingUtil.getTestDir(""target/test-data/testStorePlan"");"
134727,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/planner/physical/TestPhysicalPlanner.java,536,,"    Path path = new Path(workDir, ""output"");"
134728,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/planner/physical/TestRightOuterHashJoinExec.java,202,,"    emp3 = CatalogUtil.newTableDesc(""emp3"", emp3Schema, emp3Meta, emp3Path);"
134729,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/planner/physical/TestRightOuterMergeJoinExec.java,243,,"    emp3 = CatalogUtil.newTableDesc(""emp3"", emp3Schema, emp3Meta, emp3Path);"
134730,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/query/TestCreateTable.java,37,,"    String tableName = executeDDL(""table1_ddl.sql"", ""table1.tbl"", ""table1"");"
134731,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/query/TestCreateTable.java,37,,"    String tableName = executeDDL(""table1_ddl.sql"", ""table1.tbl"", ""table1"");"
134732,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/query/TestInsertQuery.java,56,,"    ResultSet res = tpch.execute(""create table "" + tableName +"" (col1 int4, col2 int4, col3 float8)"");"
134733,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/query/TestInsertQuery.java,62,,"    res = tpch.execute(""insert overwrite into "" + tableName"
134734,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/query/TestNullValues.java,45,,"    schema.addColumn(""col1"", Type.INT4);"
134735,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/query/TestNullValues.java,46,,"    schema.addColumn(""col2"", Type.TEXT);"
134736,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,51,,"        ""create table "" + tableName + "" (col1 int4, col2 int4) partition by column(key float8) "");"
134737,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,59,,"        ""insert overwrite into "" + tableName + "" select l_orderkey, l_partkey, l_quantity from lineitem"");"
134738,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,171,,"    assertTrue(fs.isDirectory(new Path(path.toUri() + ""/col1=1"")));"
134739,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,172,,"    assertTrue(fs.isDirectory(new Path(path.toUri() + ""/col1=1/col2=1"")));"
134740,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,174,,"    assertTrue(fs.isDirectory(new Path(path.toUri() + ""/col1=2"")));"
134741,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,175,,"    assertTrue(fs.isDirectory(new Path(path.toUri() + ""/col1=2/col2=2"")));"
134742,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,177,,"    assertTrue(fs.isDirectory(new Path(path.toUri() + ""/col1=3"")));"
134743,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,178,,"    assertTrue(fs.isDirectory(new Path(path.toUri() + ""/col1=3/col2=2"")));"
134744,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,179,,"    assertTrue(fs.isDirectory(new Path(path.toUri() + ""/col1=3/col2=3"")));"
134745,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,184,,"    res = executeString(""select * from "" + tableName + "" where col2 = 2"");"
134746,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/engine/query/TestTablePartitions.java,219,,"            ""WITH ('csvfile.delimiter'='|','compression.codec'='org.apache.hadoop.io.compress.DeflateCodec') "" +"
134747,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/jdbc/TestResultSet.java,66,,"    scoreSchema.addColumn(""score"", Type.INT4);"
134748,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/jdbc/TestTajoJdbc.java,93,,"        assertEquals(""l_returnflag"", rsmd.getColumnName(1));"
134749,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/storage/TestFileFragment.java,45,,"    FileFragment fragment1 = new FileFragment(""table1_1"", new Path(path, ""table0""), 0, 500);"
134750,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/storage/TestFileFragment.java,45,,"    FileFragment fragment1 = new FileFragment(""table1_1"", new Path(path, ""table0""), 0, 500);"
134751,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/worker/TestFetcher.java,59,,"    FileWriter writer = new FileWriter(INPUT_DIR + ""data"");"
134752,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/worker/TestRangeRetrieverHandler.java,132,,"    TableDesc employee = new TableDesc(""employee"", schema, employeeMeta, tableDir);"
134753,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/worker/TestRangeRetrieverHandler.java,175,,"        StorageUtil.concatPath(testDir, ""output"", ""output""));"
134754,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/worker/dataserver/TestHttpDataServer.java,52,,"    FileWriter writer = new FileWriter(TEST_DATA+""/""+""testHttp"");"
134755,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/worker/dataserver/TestHttpDataServer.java,53,,"    String watermark = ""test_""+rnd.nextInt();"
134756,./TargetProjects/incubator-tajo/tajo-core/tajo-core-backend/src/test/java/org/apache/tajo/worker/dataserver/TestHttpDataServer.java,86,,"    File qid1Dir = new File(TEST_DATA + ""/"" + qid1.toString() + ""/out"");"
134757,./TargetProjects/incubator-tajo/tajo-core/tajo-core-pullserver/src/main/java/org/apache/tajo/pullserver/PullServerAuxService.java,609,,"      LOG.error(""State Dump (the requested range: """
134758,./TargetProjects/incubator-tajo/tajo-core/tajo-core-pullserver/src/main/java/org/apache/tajo/pullserver/PullServerAuxService.java,610,,"          + ""["" + start + "", "" + end +"")"" + "", idx min: """
134759,./TargetProjects/incubator-tajo/tajo-core/tajo-core-pullserver/src/main/java/org/apache/tajo/pullserver/PullServerAuxService.java,611,,"          + idxReader.getFirstKey() + "", idx max: """
134760,./TargetProjects/incubator-tajo/tajo-core/tajo-core-pullserver/src/main/java/org/apache/tajo/pullserver/TajoPullServerService.java,599,,"      LOG.error(""State Dump (the requested range: """
134761,./TargetProjects/incubator-tajo/tajo-core/tajo-core-pullserver/src/main/java/org/apache/tajo/pullserver/TajoPullServerService.java,600,,"          + ""["" + start + "", "" + end +"")"" + "", idx min: """
134762,./TargetProjects/incubator-tajo/tajo-core/tajo-core-pullserver/src/main/java/org/apache/tajo/pullserver/TajoPullServerService.java,601,,"          + idxReader.getFirstKey() + "", idx max: """
134763,./TargetProjects/incubator-tajo/tajo-core/tajo-core-pullserver/src/main/java/org/apache/tajo/pullserver/retriever/AdvancedDataRetriever.java,72,,"    if (!params.containsKey(""qid"")) {"
134764,./TargetProjects/incubator-tajo/tajo-jdbc/src/main/java/org/apache/tajo/jdbc/TajoConnection.java,39,,"      throw new SQLException(""Invalid URL: "" + uri, ""TAJO-001"");"
134765,./TargetProjects/incubator-tajo/tajo-jdbc/src/main/java/org/apache/tajo/jdbc/TajoPreparedStatement.java,470,,"    throw new SQLFeatureNotSupportedException(""execute(sql) not supported"");"
134766,./TargetProjects/incubator-tajo/tajo-jdbc/src/main/java/org/apache/tajo/jdbc/TajoPreparedStatement.java,500,,"    throw new SQLFeatureNotSupportedException(""executeUpdate not supported"");"
134767,./TargetProjects/incubator-tajo/tajo-storage/src/main/java/org/apache/tajo/storage/v2/RCFile.java,206,,"    @SuppressWarnings(""unused"")"
134768,./TargetProjects/incubator-tajo/tajo-storage/src/test/java/org/apache/tajo/storage/TestFrameTuple.java,46,,"        DatumFactory.createText(""hyunsik""),"
134769,./TargetProjects/incubator-tajo/tajo-storage/src/test/java/org/apache/tajo/storage/TestFrameTuple.java,48,,"        DatumFactory.createInet4(""192.168.0.1"")"
134770,./TargetProjects/incubator-tajo/tajo-storage/src/test/java/org/apache/tajo/storage/TestLazyTuple.java,61,,"    sb.append(DatumFactory.createChar(""str"")).append('|');"
134771,./TargetProjects/incubator-tajo/tajo-storage/src/test/java/org/apache/tajo/storage/TestStorages.java,190,,"    schema.addColumn(""col1"", Type.BOOLEAN);"
134772,./TargetProjects/incubator-tajo/tajo-storage/src/test/java/org/apache/tajo/storage/TestStorages.java,191,,"    schema.addColumn(""col2"", Type.BIT);"
134773,./TargetProjects/incubator-tajo/tajo-storage/src/test/java/org/apache/tajo/storage/TestStorages.java,192,,"    schema.addColumn(""col3"", Type.CHAR, 7);"
134774,./TargetProjects/incubator-tajo/tajo-storage/src/test/java/org/apache/tajo/storage/TestStorages.java,235,,"    FileFragment fragment = new FileFragment(""table"", tablePath, 0, status.getLen());"
134775,./TargetProjects/incubator-tajo/tajo-storage/src/test/java/org/apache/tajo/storage/TestStorages.java,283,,"        DatumFactory.createChar(""jinho""),"
134776,./TargetProjects/incubator-tajo/tajo-storage/src/test/java/org/apache/tajo/storage/index/TestBSTIndex.java,65,,"    schema.addColumn(new Column(""int"", Type.INT4));"
134777,./TargetProjects/incubator-tajo/tajo-storage/src/test/java/org/apache/tajo/storage/index/TestBSTIndex.java,66,,"    schema.addColumn(new Column(""long"", Type.INT8));"
134778,./TargetProjects/incubator-tajo/tajo-storage/src/test/java/org/apache/tajo/storage/index/TestBSTIndex.java,67,,"    schema.addColumn(new Column(""double"", Type.FLOAT8));"
134779,./TargetProjects/incubator-tajo/tajo-storage/src/test/java/org/apache/tajo/storage/index/TestBSTIndex.java,101,,"      tuple.put(4, DatumFactory.createText(""field_"" + i));"
134780,./TargetProjects/incubator-tajo/tajo-storage/src/test/java/org/apache/tajo/storage/index/TestBSTIndex.java,108,,"    FileFragment tablet = new FileFragment(""table1_1"", status.getPath(), 0, fileLen);"
134781,./TargetProjects/incubator-tajo/tajo-storage/src/test/java/org/apache/tajo/storage/index/TestBSTIndex.java,121,,"    BSTIndexWriter creater = bst.getIndexWriter(new Path(testDir, ""testFindValue_"" + storeType + "".idx""),"
134782,./TargetProjects/incubator-tajo/tajo-storage/src/test/java/org/apache/tajo/storage/index/TestBSTIndex.java,159,,"      assertTrue(""seek check ["" + (i) + "" ,"" + (tuple.get(1).asInt8()) + ""]"", (i) == (tuple.get(1).asInt8()));"
134783,./TargetProjects/incubator-tajo/tajo-storage/src/test/java/org/apache/tajo/storage/index/TestBSTIndex.java,168,,"      assertTrue(""[seek check "" + (i + 1) + "" ]"", (i + 1) == (tuple.get(0).asInt4()));"
134784,./TargetProjects/incubator-tajo/tajo-storage/src/test/java/org/apache/tajo/storage/index/TestSingleCSVFileBSTIndex.java,62,,"    schema.addColumn(new Column(""long"", Type.INT8));"
134785,./TargetProjects/incubator-tajo/tajo-storage/src/test/java/org/apache/tajo/storage/index/TestSingleCSVFileBSTIndex.java,156,,"      assertTrue(""[seek check "" + (i + 1) + "" ]"","
134786,./TargetProjects/incubator-tamaya/code/api/src/test/java/org/apache/tamaya/ConfigExceptionTest.java,32,,"        ConfigException ex = new ConfigException(""test"");"
134787,./TargetProjects/incubator-tamaya/code/api/src/test/java/org/apache/tamaya/ConfigurationSnapshotTest.java,41,,"        assertThat(ConfigurationSnapshot.EMPTY.get(""foo"")).isNull();"
134788,./TargetProjects/incubator-tamaya/code/api/src/test/java/org/apache/tamaya/ConfigurationTest.java,73,,"        assertThat(Configuration.EMPTY.get(""foo"")).isNull();"
134789,./TargetProjects/incubator-tamaya/code/api/src/test/java/org/apache/tamaya/ConfigurationTest.java,98,,"        assertThat(Configuration.EMPTY.get(Arrays.asList(""foo"", ""bar""), Boolean.class)).isNull();"
134790,./TargetProjects/incubator-tamaya/code/api/src/test/java/org/apache/tamaya/ConfigurationTest.java,170,,"        assertThat(Boolean.TRUE).isEqualTo(Configuration.current().get(""booleanTrue"", Boolean.class));"
134791,./TargetProjects/incubator-tamaya/code/api/src/test/java/org/apache/tamaya/ConfigurationTest.java,177,,"        assertThat(""aStringValue"").isEqualTo(Configuration.current().get(""String""));"
134792,./TargetProjects/incubator-tamaya/code/api/src/test/java/org/apache/tamaya/ConfigurationTest.java,177,,"        assertThat(""aStringValue"").isEqualTo(Configuration.current().get(""String""));"
134793,./TargetProjects/incubator-tamaya/code/api/src/test/java/org/apache/tamaya/ConfigurationTest.java,227,,"        assertThat(""StringIfThereWasNotAValueThere"").isEqualTo(Configuration.current().getOrDefault(""nonexistant"", ""StringIfThereWasNotAValueThere""));"
134794,./TargetProjects/incubator-tamaya/code/api/src/test/java/org/apache/tamaya/ConfigurationTest.java,318,,"        assertThat(c.getOptional(""kjhkjh"")).isNotNull();"
134795,./TargetProjects/incubator-tamaya/code/api/src/test/java/org/apache/tamaya/spi/ConversionContextTest.java,77,,"        writeable.add(""0.0.0.0/nnn"");"
134796,./TargetProjects/incubator-tamaya/code/api/src/test/java/org/apache/tamaya/spi/ConversionContextTest.java,78,,"        writeable.add(""x.x.x.x/yyy"");"
134797,./TargetProjects/incubator-tamaya/code/api/src/test/java/org/apache/tamaya/spi/ConversionContextTest.java,96,,"        ConversionContext ctx = new ConversionContext.Builder(""toString"", TypeLiteral.of(List.class))"
134798,./TargetProjects/incubator-tamaya/code/api/src/test/java/org/apache/tamaya/spi/ConversionContextTest.java,107,,"                .setValues(new PropertyValue(""test"", ""value"")).build();"
134799,./TargetProjects/incubator-tamaya/code/api/src/test/java/org/apache/tamaya/spi/ConversionContextTest.java,107,,"                .setValues(new PropertyValue(""test"", ""value"")).build();"
134800,./TargetProjects/incubator-tamaya/code/api/src/test/java/org/apache/tamaya/spi/FilterContextTest.java,123,,"            config.put(""key-""+i, new PropertyValue( ""key-""+i, ""value-""+i));"
134801,./TargetProjects/incubator-tamaya/code/api/src/test/java/org/apache/tamaya/spi/ListValueTest.java,76,,"        assertThat(lv.getObjects(""[0]"")).isNotEmpty().hasSize(1);"
134802,./TargetProjects/incubator-tamaya/code/api/src/test/java/org/apache/tamaya/spi/ListValueTest.java,78,,"        assertThat(lv.getObjects(""foo"")).isEmpty();"
134803,./TargetProjects/incubator-tamaya/code/api/src/test/java/org/apache/tamaya/spi/ObjectValueTest.java,58,,"        assertThat(ov.getPropertyValue(""foo"")).isNull();"
134804,./TargetProjects/incubator-tamaya/code/api/src/test/java/org/apache/tamaya/spi/ObjectValueTest.java,133,,"                () -> new PropertyValue(""foo"", ""bar""));"
134805,./TargetProjects/incubator-tamaya/code/api/src/test/java/org/apache/tamaya/spi/ObjectValueTest.java,267,,"        ov.addList(""list"").addValue(""a"");"
134806,./TargetProjects/incubator-tamaya/code/api/src/test/java/org/apache/tamaya/spi/PropertyValueTest.java,39,,"                PropertyValue.createObject(""o1"").setValue(""key"", ""value""),"
134807,./TargetProjects/incubator-tamaya/code/api/src/test/java/org/apache/tamaya/spi/PropertyValueTest.java,39,,"                PropertyValue.createObject(""o1"").setValue(""key"", ""value""),"
134808,./TargetProjects/incubator-tamaya/code/api/src/test/java/org/apache/tamaya/spi/PropertyValueTest.java,40,,"                PropertyValue.createObject(""o2"").setValue(""key2"", ""value2""))"
134809,./TargetProjects/incubator-tamaya/code/api/src/test/java/org/apache/tamaya/spi/PropertyValueTest.java,87,,"                .setMeta(""k2"", ""v22"")"
134810,./TargetProjects/incubator-tamaya/code/api/src/test/java/org/apache/tamaya/spi/PropertyValueTest.java,197,,"        PropertyValue foo = new PropertyValue(""foo"", ""bar"");"
134811,./TargetProjects/incubator-tamaya/code/api/src/test/java/org/apache/tamaya/spi/PropertyValueTest.java,197,,"        PropertyValue foo = new PropertyValue(""foo"", ""bar"");"
134812,./TargetProjects/incubator-tamaya/code/api/src/test/java/org/apache/tamaya/spi/PropertyValueTest.java,277,,"        n.setValue(""jhgjg"");"
134813,./TargetProjects/incubator-tamaya/code/api/src/test/java/org/apache/tamaya/spi/PropertyValueTest.java,371,,"        n.setValue(""a"", ""aVal"");"
134814,./TargetProjects/incubator-tamaya/code/api/src/test/java/org/apache/tamaya/spi/PropertyValueTest.java,372,,"        n.addObject(""b"").addObject(""b2"").setValue(""b3"", ""b3Val"");"
134815,./TargetProjects/incubator-tamaya/code/api/src/test/java/org/apache/tamaya/spi/PropertyValueTest.java,374,,"        array.addValue(""cVal1"");"
134816,./TargetProjects/incubator-tamaya/code/api/src/test/java/org/apache/tamaya/spi/PropertyValueTest.java,375,,"        array.addValue(""cVal2"");"
134817,./TargetProjects/incubator-tamaya/code/api/src/test/java/org/apache/tamaya/spi/PropertyValueTest.java,380,,"        assertThat(""b3Val"").isEqualTo(map.get(""b.b2.b3""));"
134818,./TargetProjects/incubator-tamaya/code/api/src/test/java/org/apache/tamaya/spi/ServiceContextTest.java,50,,"                return serviceType.cast(""ServiceContextTest"");"
134819,./TargetProjects/incubator-tamaya/code/core/src/main/java/org/apache/tamaya/core/internal/OSGIServiceContext.java,175,,"            LOG.finest(""TAMAYA  Resource: "" + resource + "" found in unregistered bundle "" +"
134820,./TargetProjects/incubator-tamaya/code/core/src/test/java/org/apache/tamaya/core/ConfigurationBuilderTest.java,70,,"        PropertySource testPS2 = new TestPropertySource(""addPropertySources_Collection"", 1);"
134821,./TargetProjects/incubator-tamaya/code/core/src/test/java/org/apache/tamaya/core/ConfigurationBuilderTest.java,180,,"    @SuppressWarnings({ ""rawtypes"", ""unchecked"" })"
134822,./TargetProjects/incubator-tamaya/code/core/src/test/java/org/apache/tamaya/core/ConfigurationBuilderTest.java,180,,"    @SuppressWarnings({ ""rawtypes"", ""unchecked"" })"
134823,./TargetProjects/incubator-tamaya/code/core/src/test/java/org/apache/tamaya/core/internal/MockBundle.java,58,,"        throw new UnsupportedOperationException(""Not supported (MockBundle)"");"
134824,./TargetProjects/incubator-tamaya/code/core/src/test/java/org/apache/tamaya/core/internal/MockBundle.java,158,,"        v.add(""META-INF/services/"" + ""someslash/"");"
134825,./TargetProjects/incubator-tamaya/code/core/src/test/java/org/apache/tamaya/core/internal/OSGIServiceComparatorTest.java,80,,"            throw new UnsupportedOperationException(""Not supported."");"
134826,./TargetProjects/incubator-tamaya/code/core/src/test/java/org/apache/tamaya/core/internal/converters/ConverterTestsPropertySource.java,47,,"                return PropertyValue.createValue(key, ""101"");"
134827,./TargetProjects/incubator-tamaya/code/core/src/test/java/org/apache/tamaya/core/internal/converters/ConverterTestsPropertySource.java,51,,"                return PropertyValue.createValue(key, ""0x2F"");"
134828,./TargetProjects/incubator-tamaya/code/core/src/test/java/org/apache/tamaya/core/internal/converters/ConverterTestsPropertySource.java,53,,"                return PropertyValue.createValue(key, ""0X3F"");"
134829,./TargetProjects/incubator-tamaya/code/core/src/test/java/org/apache/tamaya/core/internal/converters/ConverterTestsPropertySource.java,55,,"                return PropertyValue.createValue(key, ""min"");"
134830,./TargetProjects/incubator-tamaya/code/core/src/test/java/org/apache/tamaya/core/internal/converters/ConverterTestsPropertySource.java,57,,"                return PropertyValue.createValue(key, ""MAX_Value"");"
134831,./TargetProjects/incubator-tamaya/code/core/src/test/java/org/apache/tamaya/core/internal/converters/ConverterTestsPropertySource.java,59,,"                return PropertyValue.createValue(key, ""invalid"");"
134832,./TargetProjects/incubator-tamaya/code/core/src/test/java/org/apache/tamaya/core/internal/converters/URIConverterTest.java,41,,"         assertThat(new URI(""test:path"")).isEqualTo(converter.convert(""test:path"", context));"
134833,./TargetProjects/incubator-tamaya/code/core/src/test/java/org/apache/tamaya/core/internal/converters/URLConverterTest.java,42,,"        assertThat(new URL(""http://apache.org:4000/path"")).isEqualTo(converter.convert(""http://apache.org:4000/path"", context));"
134834,./TargetProjects/incubator-tamaya/code/spi-support/src/main/java/org/apache/tamaya/spisupport/DefaultConfiguration.java,93,,"        Objects.requireNonNull(key, ""Key must not be null."");"
134835,./TargetProjects/incubator-tamaya/code/spi-support/src/main/java/org/apache/tamaya/spisupport/DefaultConfigurationBuilder.java,219,,"            throw new IllegalArgumentException(""No such PropertySource: "" + propertySource);"
134836,./TargetProjects/incubator-tamaya/code/spi-support/src/main/java/org/apache/tamaya/spisupport/propertysource/SimplePropertySource.java,82,,"                    .setMeta(""source"", name));"
134837,./TargetProjects/incubator-tamaya/code/spi-support/src/test/java/org/apache/tamaya/spisupport/BuildablePropertySourceTest.java,42,,"                .withName(""test1"").build();"
134838,./TargetProjects/incubator-tamaya/code/spi-support/src/test/java/org/apache/tamaya/spisupport/BuildablePropertySourceTest.java,87,,"        propertySecond.put(""secondKey"", ""secondValue"");"
134839,./TargetProjects/incubator-tamaya/code/spi-support/src/test/java/org/apache/tamaya/spisupport/BuildablePropertySourceTest.java,90,,"        propertyThird.put(""thirdKey"", PropertyValue.createValue(""thirdPVKey"", ""thirdValue"").setMeta(""source"", ""thirdSource""));"
134840,./TargetProjects/incubator-tamaya/code/spi-support/src/test/java/org/apache/tamaya/spisupport/DefaultConfigurationSnapshotTest.java,47,,"                Arrays.asList(""confkey1"", ""confkey2"", ""confkey3""));"
134841,./TargetProjects/incubator-tamaya/code/spi-support/src/test/java/org/apache/tamaya/spisupport/DefaultConfigurationSnapshotTest.java,47,,"                Arrays.asList(""confkey1"", ""confkey2"", ""confkey3""));"
134842,./TargetProjects/incubator-tamaya/code/spi-support/src/test/java/org/apache/tamaya/spisupport/DefaultConfigurationSnapshotTest.java,47,,"                Arrays.asList(""confkey1"", ""confkey2"", ""confkey3""));"
134843,./TargetProjects/incubator-tamaya/code/spi-support/src/test/java/org/apache/tamaya/spisupport/DefaultConfigurationSnapshotTest.java,120,,"        assertThat(""javaconf-value1"").isEqualTo(snapshot.get(""confkey1""));"
134844,./TargetProjects/incubator-tamaya/code/spi-support/src/test/java/org/apache/tamaya/spisupport/DefaultConfigurationSnapshotTest.java,121,,"        assertThat(""javaconf-value2"").isEqualTo(snapshot.get(""confkey2""));"
134845,./TargetProjects/incubator-tamaya/code/spi-support/src/test/java/org/apache/tamaya/spisupport/DefaultConfigurationSnapshotTest.java,122,,"        assertThat(""javaconf-value3"").isEqualTo(snapshot.get(""confkey3""));"
134846,./TargetProjects/incubator-tamaya/code/spi-support/src/test/java/org/apache/tamaya/spisupport/DefaultConfigurationSnapshotTest.java,123,,"        assertThat(snapshot.getOrDefault(""confkey4"", null)).isNull();"
134847,./TargetProjects/incubator-tamaya/code/spi-support/src/test/java/org/apache/tamaya/spisupport/DefaultConfigurationSnapshotTest.java,153,,"        assertThat(""javaconf-value1"").isEqualTo(snapshot.get(Arrays.asList(""confkey1"", ""foo"")));"
134848,./TargetProjects/incubator-tamaya/code/spi-support/src/test/java/org/apache/tamaya/spisupport/DefaultConfigurationTest.java,78,,"        assertThat(c.get(""valueOfNull"")).isNull();"
134849,./TargetProjects/incubator-tamaya/code/spi-support/src/test/java/org/apache/tamaya/spisupport/DefaultConfigurationTest.java,256,,"        assertThat(""testQ"").isEqualTo(c.query(config -> ""testQ""));"
134850,./TargetProjects/incubator-tamaya/code/spi-support/src/test/java/org/apache/tamaya/spisupport/DefaultMetaDataProviderTest.java,50,,"        assertThat(provider.getMetaData(""foo"")).isNotNull();"
134851,./TargetProjects/incubator-tamaya/code/spi-support/src/test/java/org/apache/tamaya/spisupport/PropertySourceChangeSupportTest.java,46,,"        PropertySource ps = BuildablePropertySource.builder().withName(""test"").build();"
134852,./TargetProjects/incubator-tamaya/code/spi-support/src/test/java/org/apache/tamaya/spisupport/PropertySourceChangeSupportTest.java,69,,"        PropertySource ps = BuildablePropertySource.builder().withSimpleProperty(""foo"", ""bar"").withName(""test"").build();"
134853,./TargetProjects/incubator-tamaya/code/spi-support/src/test/java/org/apache/tamaya/spisupport/PropertySourceChangeSupportTest.java,69,,"        PropertySource ps = BuildablePropertySource.builder().withSimpleProperty(""foo"", ""bar"").withName(""test"").build();"
134854,./TargetProjects/incubator-tamaya/code/spi-support/src/test/java/org/apache/tamaya/spisupport/RegexPropertyFilterTest.java,43,,"        filter.setIncludes(""test1.*"");"
134855,./TargetProjects/incubator-tamaya/code/spi-support/src/test/java/org/apache/tamaya/spisupport/propertysource/CLIPropertySourceTest.java,66,,"            CLIPropertySource.initMainArgs(""sss"");"
134856,./TargetProjects/incubator-tamaya/code/spi-support/src/test/java/org/apache/tamaya/spisupport/propertysource/SimplePropertySourceTest.java,41,,"        URL resource = getClass().getResource(""/valid-properties.xml"");"
134857,./TargetProjects/incubator-tamaya/code/spi-support/src/test/java/org/apache/tamaya/spisupport/propertysource/SimplePropertySourceTest.java,146,,"        propertyFirst.put(""firstKey"", ""firstValue"");"
134858,./TargetProjects/incubator-tamaya/code/spi-support/src/test/java/org/apache/tamaya/spisupport/propertysource/SimplePropertySourceTest.java,146,,"        propertyFirst.put(""firstKey"", ""firstValue"");"
134859,./TargetProjects/incubator-tamaya/code/spi-support/src/test/java/org/apache/tamaya/spisupport/propertysource/SystemPropertySourceTest.java,54,,"            assertThat(testPropertySource.toStringValues()).doesNotContain(""disabled=true"");"
134860,./TargetProjects/incubator-tamaya-extensions/examples/03-injection-example/src/test/java/org/apache/tamaya/ext/examples/injection/MinimalTest.java,56,,"        String value = config.get(""example.number"");"
134861,./TargetProjects/incubator-tamaya-extensions/examples/05-spring-example/src/main/java/org/apache/tamaya/springexample/WelcomeController.java,76,,"        model.put(""config"", config"
134862,./TargetProjects/incubator-tamaya-extensions/examples/06-distributed/src/main/java/org/apache/tamaya/examples/distributed/DisplayManager.java,129,,"            config.put(""displays.""+id+"".title"", content.getTitle());"
134863,./TargetProjects/incubator-tamaya-extensions/modules/collections/src/main/java/org/apache/tamaya/collections/CollectionConverter.java,163,,"            LOG.finest(String.format(""Combine deactivated, only checking for collection values in %s."", values.get(0)));"
134864,./TargetProjects/incubator-tamaya-extensions/modules/collections/src/main/java/org/apache/tamaya/collections/CollectionConverter.java,165,,"            LOG.finest(String.format(""Combine activated, checking for collection values in %s."", values));"
134865,./TargetProjects/incubator-tamaya-extensions/modules/collections/src/main/java/org/apache/tamaya/collections/CollectionConverter.java,226,,"                    LOG.warning(String.format(""Failed to convert '%s' to type: %s, key: %s"","
134866,./TargetProjects/incubator-tamaya-extensions/modules/collections/src/test/java/org/apache/tamaya/collections/CollectionsBaseTests.java,40,,"        List<String> items = config.get(""base.items"", new TypeLiteral<List<String>>(){});"
134867,./TargetProjects/incubator-tamaya-extensions/modules/collections/src/test/java/org/apache/tamaya/collections/CollectionsBaseTests.java,103,,"        Map<String,String> items = config.get(""base.map"", new TypeLiteral<Map<String,String>>(){});"
134868,./TargetProjects/incubator-tamaya-extensions/modules/collections/src/test/java/org/apache/tamaya/collections/CollectionsTypedReadOnlyTests.java,43,,"        items.add(""test"");"
134869,./TargetProjects/incubator-tamaya-extensions/modules/collections/src/test/java/org/apache/tamaya/collections/CollectionsTypedReadOnlyTests.java,110,,"        items.put(""g"",""hjhhj"");"
134870,./TargetProjects/incubator-tamaya-extensions/modules/collections/src/test/java/org/apache/tamaya/collections/CollectionsTypedTests.java,40,,"        List<String> items = config.get(""typed2.arraylist"", new TypeLiteral<List<String>>(){});"
134871,./TargetProjects/incubator-tamaya-extensions/modules/collections/src/test/java/org/apache/tamaya/collections/CollectionsTypedTests.java,49,,"        List<String> items = config.get(""typed2.linkedlist"", new TypeLiteral<List<String>>(){});"
134872,./TargetProjects/incubator-tamaya-extensions/modules/collections/src/test/java/org/apache/tamaya/collections/CollectionsTypedTests.java,59,,"        Set<String> items = config.get(""typed2.hashset"", new TypeLiteral<Set<String>>(){});"
134873,./TargetProjects/incubator-tamaya-extensions/modules/collections/src/test/java/org/apache/tamaya/collections/CollectionsTypedTests.java,68,,"        Set<String> items = config.get(""typed2.treeset"", new TypeLiteral<Set<String>>(){});"
134874,./TargetProjects/incubator-tamaya-extensions/modules/consul/src/test/java/org/apache/tamaya/consul/ConsulWriteTest.java,68,,"        ConfigChangeRequest request = new ConfigChangeRequest(""testDelete"");"
134875,./TargetProjects/incubator-tamaya-extensions/modules/etcd/src/main/java/org/apache/tamaya/etcd/AbstractEtcdPropertySource.java,148,,"                if(!props.containsKey(""_ERROR"")) {"
134876,./TargetProjects/incubator-tamaya-extensions/modules/etcd/src/main/java/org/apache/tamaya/etcd/EtcdAccessor.java,169,,"            final HttpGet httpGet = new HttpGet(serverURL + ""/v2/keys/"" + key);"
134877,./TargetProjects/incubator-tamaya-extensions/modules/etcd/src/main/java/org/apache/tamaya/etcd/EtcdAccessor.java,178,,"                        final JsonObject node = o.getJsonObject(""node"");"
134878,./TargetProjects/incubator-tamaya-extensions/modules/etcd/src/main/java/org/apache/tamaya/etcd/EtcdAccessor.java,179,,"                        if (node.containsKey(""value"")) {"
134879,./TargetProjects/incubator-tamaya-extensions/modules/etcd/src/main/java/org/apache/tamaya/etcd/EtcdAccessor.java,181,,"                            result.put(""_"" + key + "".source"", ""[etcd]"" + serverURL);"
134880,./TargetProjects/incubator-tamaya-extensions/modules/etcd/src/main/java/org/apache/tamaya/etcd/EtcdAccessor.java,183,,"                        if (node.containsKey(""createdIndex"")) {"
134881,./TargetProjects/incubator-tamaya-extensions/modules/etcd/src/main/java/org/apache/tamaya/etcd/EtcdAccessor.java,184,,"                            result.put(""_"" + key + "".createdIndex"", String.valueOf(node.getInt(""createdIndex"")));"
134882,./TargetProjects/incubator-tamaya-extensions/modules/etcd/src/main/java/org/apache/tamaya/etcd/EtcdAccessor.java,186,,"                        if (node.containsKey(""modifiedIndex"")) {"
134883,./TargetProjects/incubator-tamaya-extensions/modules/etcd/src/main/java/org/apache/tamaya/etcd/EtcdAccessor.java,187,,"                            result.put(""_"" + key + "".modifiedIndex"", String.valueOf(node.getInt(""modifiedIndex"")));"
134884,./TargetProjects/incubator-tamaya-extensions/modules/etcd/src/main/java/org/apache/tamaya/etcd/EtcdAccessor.java,189,,"                        if (node.containsKey(""expiration"")) {"
134885,./TargetProjects/incubator-tamaya-extensions/modules/etcd/src/main/java/org/apache/tamaya/etcd/EtcdAccessor.java,190,,"                            result.put(""_"" + key + "".expiration"", String.valueOf(node.getString(""expiration"")));"
134886,./TargetProjects/incubator-tamaya-extensions/modules/etcd/src/main/java/org/apache/tamaya/etcd/EtcdAccessor.java,192,,"                        if (node.containsKey(""ttl"")) {"
134887,./TargetProjects/incubator-tamaya-extensions/modules/etcd/src/main/java/org/apache/tamaya/etcd/EtcdAccessor.java,193,,"                            result.put(""_"" + key + "".ttl"", String.valueOf(node.getInt(""ttl"")));"
134888,./TargetProjects/incubator-tamaya-extensions/modules/etcd/src/main/java/org/apache/tamaya/etcd/EtcdAccessor.java,202,,"            LOG.log(Level.INFO, ""Error reading key '"" + key + ""' from etcd: "" + serverURL, e);"
134889,./TargetProjects/incubator-tamaya-extensions/modules/etcd/src/main/java/org/apache/tamaya/etcd/EtcdAccessor.java,203,,"            result.put(""_ERROR"", ""Error reading key '"" + key + ""' from etcd: "" + serverURL + "": "" + e.toString());"
134890,./TargetProjects/incubator-tamaya-extensions/modules/etcd/src/test/java/org/apache/tamaya/etcd/EtcdAccessorTest.java,100,,"        Map<String, String> result = accessor.set(""testSetWithTTL"", value, 1);"
134891,./TargetProjects/incubator-tamaya-extensions/modules/etcd/src/test/java/org/apache/tamaya/etcd/EtcdAccessorTest.java,114,,"        Map<String, String> result = accessor.set(""testDelete"", value, null);"
134892,./TargetProjects/incubator-tamaya-extensions/modules/events/src/test/java/org/apache/tamaya/events/ConfigEventManagerTest.java,41,,"        ConfigEventManager.getInstance().fireEvent(new SimpleEvent(""Event1""));"
134893,./TargetProjects/incubator-tamaya-extensions/modules/events/src/test/java/org/apache/tamaya/events/ConfigurationChangeTest.java,83,,"        ConfigurationChange change = ConfigurationChangeBuilder.of(config).removeKey(""key1"", ""key2"").build();"
134894,./TargetProjects/incubator-tamaya-extensions/modules/events/src/test/java/org/apache/tamaya/events/ConfigurationChangeTest.java,83,,"        ConfigurationChange change = ConfigurationChangeBuilder.of(config).removeKey(""key1"", ""key2"").build();"
134895,./TargetProjects/incubator-tamaya-extensions/modules/events/src/test/java/org/apache/tamaya/events/ConfigurationChangeTest.java,92,,"        ConfigurationChange change = ConfigurationChangeBuilder.of(config).removeKey(""java.version"", ""key2"").build();"
134896,./TargetProjects/incubator-tamaya-extensions/modules/events/src/test/java/org/apache/tamaya/events/PropertySourceChangeTest.java,124,,"        testData.put(""key1"", ""value1"");"
134897,./TargetProjects/incubator-tamaya-extensions/modules/events/src/test/java/org/apache/tamaya/events/PropertySourceChangeTest.java,125,,"        testData.put(""key2"", ""value2"");"
134898,./TargetProjects/incubator-tamaya-extensions/modules/events/src/test/java/org/apache/tamaya/events/PropertySourceChangeTest.java,125,,"        testData.put(""key2"", ""value2"");"
134899,./TargetProjects/incubator-tamaya-extensions/modules/events/src/test/java/org/apache/tamaya/events/PropertySourceChangeTest.java,126,,"        PropertySource ps1 = new SimplePropertySource(""test"", testData);"
134900,./TargetProjects/incubator-tamaya-extensions/modules/events/src/test/java/org/apache/tamaya/events/PropertySourceChangeTest.java,129,,"        testData.put(""key3"", ""value3"");"
134901,./TargetProjects/incubator-tamaya-extensions/modules/filter/src/test/java/org/apache/tamaya/filter/ConfigurationFilterTest.java,53,,"        assertThat(""user.home:testGetSingleFilters"").isEqualTo(config.get(""user.home""));"
134902,./TargetProjects/incubator-tamaya-extensions/modules/filter/src/test/java/org/apache/tamaya/filter/ConfigurationFilterTest.java,53,,"        assertThat(""user.home:testGetSingleFilters"").isEqualTo(config.get(""user.home""));"
134903,./TargetProjects/incubator-tamaya-extensions/modules/filter/src/test/java/org/apache/tamaya/filter/ProgrammableFilterTest.java,41,,"    private static PropertyValue test1Property = PropertyValue.createValue(""test1"",""test1"");"
134904,./TargetProjects/incubator-tamaya-extensions/modules/filter/src/test/java/org/apache/tamaya/filter/ProgrammableFilterTest.java,42,,"    private static PropertyValue test2Property = PropertyValue.createValue(""test2"",""test2"");"
134905,./TargetProjects/incubator-tamaya-extensions/modules/filter/src/test/java/org/apache/tamaya/filter/ProgrammableFilterTest.java,43,,"    private static PropertyValue test3Property = PropertyValue.createValue(""test.test3"",""test.test3"");"
134906,./TargetProjects/incubator-tamaya-extensions/modules/filter/src/test/java/org/apache/tamaya/filter/ProgrammableFilterTest.java,56,,"        regexFilter.setIncludes(""test\\..*"");"
134907,./TargetProjects/incubator-tamaya-extensions/modules/formats/base/src/test/java/org/apache/tamaya/format/ConfigurationFormatsTest.java,42,,"        List<ConfigurationFormat> formats = ConfigurationFormats.getInstance().getFormats(getClass().getResource(""/Test.ini""));"
134908,./TargetProjects/incubator-tamaya-extensions/modules/formats/base/src/test/java/org/apache/tamaya/format/ConfigurationFormatsTest.java,64,,"                ConfigurationFormats.getInstance().getFormats(""ini""));"
134909,./TargetProjects/incubator-tamaya-extensions/modules/functions/src/test/java/org/apache/tamaya/functions/CombinedConfigurationTest.java,83,,"        CombinedConfiguration cc = new CombinedConfiguration(""abc"", null);"
134910,./TargetProjects/incubator-tamaya-extensions/modules/functions/src/test/java/org/apache/tamaya/functions/EnrichedConfigurationTest.java,294,,"          .hasMessage(""Default createValue not given."");"
134911,./TargetProjects/incubator-tamaya-extensions/modules/functions/src/test/java/org/apache/tamaya/functions/EnrichedPropertySourceTest.java,81,,"        base.setName(""name"").add(""a"", ""1"").add(""b"", ""2"").add(""c"", ""3"").add(""d"", ""4"");"
134912,./TargetProjects/incubator-tamaya-extensions/modules/functions/src/test/java/org/apache/tamaya/functions/FilteredPropertySourceTest.java,40,,"        doReturn(""abc"").when(propertySource).getName();"
134913,./TargetProjects/incubator-tamaya-extensions/modules/functions/src/test/java/org/apache/tamaya/functions/MappedPropertySourceTest.java,59,,"                          .containsEntry(""a"", PropertyValue.createValue(""a"", ""1"").setMeta(""source"", ""PS[mapped]""))"
134914,./TargetProjects/incubator-tamaya-extensions/modules/functions/src/test/java/org/apache/tamaya/functions/MappedPropertySourceTest.java,59,,"                          .containsEntry(""a"", PropertyValue.createValue(""a"", ""1"").setMeta(""source"", ""PS[mapped]""))"
134915,./TargetProjects/incubator-tamaya-extensions/modules/functions/src/test/java/org/apache/tamaya/functions/PropertySourceFunctionsTest.java,41,,"        throw new RuntimeException(""Not implement or look at me!"");"
134916,./TargetProjects/incubator-tamaya-extensions/modules/functions/src/test/java/org/apache/tamaya/functions/PropertySourceFunctionsTest.java,72,,"        String key = ""key"";"
134917,./TargetProjects/incubator-tamaya-extensions/modules/functions/src/test/java/org/apache/tamaya/functions/PropertySourceFunctionsTest.java,166,,"        boolean result = isKeyInSections(key, ""l.b"", null, ""abc"", section);"
134918,./TargetProjects/incubator-tamaya-extensions/modules/functions/src/test/java/org/apache/tamaya/functions/PropertySourceFunctionsTest.java,213,,"                          .contains(""abc"", ""abc.def"", ""a"", ""b"", ""<root>"");"
134919,./TargetProjects/incubator-tamaya-extensions/modules/functions/src/test/java/org/apache/tamaya/functions/ValueMappedPropertySourceTest.java,52,,"        ValueMappedPropertySource mappingSource = new ValueMappedPropertySource(""vmps"", mapper, source);"
134920,./TargetProjects/incubator-tamaya-extensions/modules/hazelcast/src/test/java/org/apache/tamaya/hazelcast/AbstractHzPropertySourceTest.java,50,,"        IMap<Object, Object> map = hz.getMap(""config"");"
134921,./TargetProjects/incubator-tamaya-extensions/modules/hazelcast/src/test/java/org/apache/tamaya/hazelcast/AbstractHzPropertySourceTest.java,55,,"        IMap<Object, Object> map2 = hz.getMap(""config2"");"
134922,./TargetProjects/incubator-tamaya-extensions/modules/hazelcast/src/test/java/org/apache/tamaya/hazelcast/AbstractHzPropertySourceTest.java,56,,"        map2.put(""key1"", ""val1"");"
134923,./TargetProjects/incubator-tamaya-extensions/modules/hazelcast/src/test/java/org/apache/tamaya/hazelcast/AbstractHzPropertySourceTest.java,57,,"        map2.put(""key2"", ""val2"");"
134924,./TargetProjects/incubator-tamaya-extensions/modules/hazelcast/src/test/java/org/apache/tamaya/hazelcast/AbstractHzPropertySourceTest.java,81,,"        hps.setMapReference(""foo"");"
134925,./TargetProjects/incubator-tamaya-extensions/modules/hazelcast/src/test/java/org/apache/tamaya/hazelcast/HazelcastPropertySourceTest.java,48,,"        IMap<Object, Object> map = hz.getMap(""config3"");"
134926,./TargetProjects/incubator-tamaya-extensions/modules/hazelcast/src/test/java/org/apache/tamaya/hazelcast/HazelcastPropertySourceTest.java,53,,"        IMap<Object, Object> map2 = hz.getMap(""config4"");"
134927,./TargetProjects/incubator-tamaya-extensions/modules/hazelcast/src/test/java/org/apache/tamaya/hazelcast/HazelcastPropertySourceTest.java,54,,"        map2.put(""key1"", ""val1"");"
134928,./TargetProjects/incubator-tamaya-extensions/modules/hazelcast/src/test/java/org/apache/tamaya/hazelcast/HazelcastPropertySourceTest.java,55,,"        map2.put(""key2"", ""val2"");"
134929,./TargetProjects/incubator-tamaya-extensions/modules/hazelcast/src/test/java/org/apache/tamaya/hazelcast/HazelcastPropertySourceTest.java,79,,"        hps.setMapReference(""bar"");"
134930,./TargetProjects/incubator-tamaya-extensions/modules/injection/cdi/src/main/java/org/apache/tamaya/cdi/DefaultDynamicValue.java,100,,"            throw new ConfigException(""Failed to evaluate target type for "" + annotatedField.getDeclaringClass().getName()"
134931,./TargetProjects/incubator-tamaya-extensions/modules/injection/cdi/src/test/java/org/apache/tamaya/cdi/CDIConfiguredMethodTest.java,38,,"        List<String> keys = asList(""rate"", ""weight"");"
134932,./TargetProjects/incubator-tamaya-extensions/modules/injection/cdi/src/test/java/org/apache/tamaya/cdi/CDIConfiguredMethodTest.java,38,,"        List<String> keys = asList(""rate"", ""weight"");"
134933,./TargetProjects/incubator-tamaya-extensions/modules/injection/cdi/src/test/java/org/apache/tamaya/cdi/ConfigurationProducerTest.java,58,,"        assertThat(""defaultString"").isEqualTo(allTypes.getDefaultString());"
134934,./TargetProjects/incubator-tamaya-extensions/modules/injection/cdi/src/test/java/org/apache/tamaya/cdi/ConfigurationProducerTest.java,67,,"        assertThat(""hello"").isEqualTo(allTypes.getString());"
134935,./TargetProjects/incubator-tamaya-extensions/modules/injection/cdi/src/test/java/org/apache/tamaya/cdi/ConfigurationProducerTest.java,115,,"        @Config(key = ""string.value"", defaultValue = ""defaultString"")"
134936,./TargetProjects/incubator-tamaya-extensions/modules/injection/cdi/src/test/java/org/apache/tamaya/cdi/ConfigurationProducerTest.java,147,,"        @Config(key = ""integer.value"", defaultValue = ""45"")"
134937,./TargetProjects/incubator-tamaya-extensions/modules/injection/cdi/src/test/java/org/apache/tamaya/cdi/ConfiguredVetoExtensionTest.java,42,,"            System.setProperty(""javax.enterprise.inject.vetoed"", ""org.apache.tamaya.cdi.extra.TestKlazz"");"
134938,./TargetProjects/incubator-tamaya-extensions/modules/injection/injection-api/src/test/java/org/apache/tamaya/inject/spi/BaseDynamicValueTest.java,45,,"        System.setProperty(""commitAndGet"", ""yes"");"
134939,./TargetProjects/incubator-tamaya-extensions/modules/injection/injection-api/src/test/java/org/apache/tamaya/inject/spi/BaseDynamicValueTest.java,65,,"        assertThat(new MyDynamicValue(Configuration.current(),""a"", ""b"").orElse(""foo"")).isEqualTo(""foo"");"
134940,./TargetProjects/incubator-tamaya-extensions/modules/injection/injection-api/src/test/java/org/apache/tamaya/inject/spi/InjectionUtilsTest.java,36,,"            @Config(key = ""val"", alternateKeys = {""[val2]"", ""vvv""})"
134941,./TargetProjects/incubator-tamaya-extensions/modules/injection/injection-api/src/test/java/org/apache/tamaya/inject/spi/InjectionUtilsTest.java,36,,"            @Config(key = ""val"", alternateKeys = {""[val2]"", ""vvv""})"
134942,./TargetProjects/incubator-tamaya-extensions/modules/injection/injection-api/src/test/java/org/apache/tamaya/inject/spi/InjectionUtilsTest.java,48,,"                        ""val2"","
134943,./TargetProjects/incubator-tamaya-extensions/modules/injection/standalone/src/main/java/org/apache/tamaya/inject/internal/DefaultDynamicValue.java,110,,"            throw new ConfigException(""Failed to evaluate target type for "" + annotatedField.getDeclaringClass().getName()"
134944,./TargetProjects/incubator-tamaya-extensions/modules/injection/standalone/src/test/java/org/apache/tamaya/inject/TamayaInjectionTest.java,50,,"        assertThat(testInstance.simple_value).isEqualTo(""aSimpleValue"");"
134945,./TargetProjects/incubator-tamaya-extensions/modules/injection/standalone/src/test/java/org/apache/tamaya/inject/TamayaInjectionTest.java,66,,"        assertThat(testInstance.getHostName()).isEqualTo(""tamaya02.incubator.apache.org"");"
134946,./TargetProjects/incubator-tamaya-extensions/modules/injection/standalone/src/test/java/org/apache/tamaya/inject/internal/DefaultDynamicValueTest.java,75,,"                    return ""test"";"
134947,./TargetProjects/incubator-tamaya-extensions/modules/injection/standalone/src/test/java/org/apache/tamaya/inject/internal/DefaultDynamicValueTest.java,92,,"        DynamicValue val = DefaultDynamicValue.of(this, getClass().getDeclaredField(""myValue""),"
134948,./TargetProjects/incubator-tamaya-extensions/modules/injection/standalone/src/test/java/org/apache/tamaya/inject/internal/DefaultDynamicValueTest.java,106,,"        properties.put(""a"",PropertyValue.createValue(""a"",""aValue""));"
134949,./TargetProjects/incubator-tamaya-extensions/modules/injection/standalone/src/test/java/org/apache/tamaya/inject/internal/DefaultDynamicValueTest.java,115,,"        properties.put(""a"",PropertyValue.createValue(""a"",""aValue"").setMeta(""source"", ""test""));"
134950,./TargetProjects/incubator-tamaya-extensions/modules/injection/standalone/src/test/java/org/apache/tamaya/inject/internal/DefaultDynamicValueTest.java,123,,"        properties.put(""a"",PropertyValue.createValue(""a"",""aValue2"").setMeta(""source"", ""test""));"
134951,./TargetProjects/incubator-tamaya-extensions/modules/microprofile/src/test/java/org/apache/tamaya/microprofile/MicroprofileAdapterTest.java,86,,"                .withSimpleProperty(""string0"", ""value0"")"
134952,./TargetProjects/incubator-tamaya-extensions/modules/microprofile/src/test/java/org/apache/tamaya/microprofile/MicroprofileAdapterTest.java,86,,"                .withSimpleProperty(""string0"", ""value0"")"
134953,./TargetProjects/incubator-tamaya-extensions/modules/microprofile/src/test/java/org/apache/tamaya/microprofile/MicroprofileAdapterTest.java,87,,"                .withSimpleProperty(""int0"", ""0"")"
134954,./TargetProjects/incubator-tamaya-extensions/modules/microprofile/src/test/java/org/apache/tamaya/microprofile/MicroprofileAdapterTest.java,211,,"            throw new RuntimeException(""Not implemented yet!"");"
134955,./TargetProjects/incubator-tamaya-extensions/modules/microprofile/src/test/java/org/apache/tamaya/microprofile/tck/TamayaConfigArchiveProcessor.java,54,,"                    .loadPomFromFile(""pom.xml"").resolve(""javax.annotation:javax.annotation-api"")"
134956,./TargetProjects/incubator-tamaya-extensions/modules/mutable-config/src/test/java/org/apache/tamaya/mutableconfig/MutableConfigurationTest.java,125,,"        mutConfig.put(""key1"", ""value1"");"
134957,./TargetProjects/incubator-tamaya-extensions/modules/mutable-config/src/test/java/org/apache/tamaya/mutableconfig/MutableConfigurationTest.java,125,,"        mutConfig.put(""key1"", ""value1"");"
134958,./TargetProjects/incubator-tamaya-extensions/modules/mutable-config/src/test/java/org/apache/tamaya/mutableconfig/MutableConfigurationTest.java,127,,"        cm.put(""key2"", ""value2"");"
134959,./TargetProjects/incubator-tamaya-extensions/modules/mutable-config/src/test/java/org/apache/tamaya/mutableconfig/MutableConfigurationTest.java,127,,"        cm.put(""key2"", ""value2"");"
134960,./TargetProjects/incubator-tamaya-extensions/modules/mutable-config/src/test/java/org/apache/tamaya/mutableconfig/MutableConfigurationTest.java,128,,"        cm.put(""key3"", ""value3"");"
134961,./TargetProjects/incubator-tamaya-extensions/modules/mutable-config/src/test/java/org/apache/tamaya/mutableconfig/MutableConfigurationTest.java,128,,"        cm.put(""key3"", ""value3"");"
134962,./TargetProjects/incubator-tamaya-extensions/modules/optional/src/test/java/org/apache/tamaya/optional/OptionalConfigurationTest.java,34,,"                return (T)""result"";"
134963,./TargetProjects/incubator-tamaya-extensions/modules/optional/src/test/java/org/apache/tamaya/optional/OptionalConfigurationTest.java,38,,"        assertThat(cfg.get(""sdkjsdkjsdkjhskjdh"")).isEqualTo(""result"");"
134964,./TargetProjects/incubator-tamaya-extensions/modules/optional/src/test/java/org/apache/tamaya/optional/OptionalConfigurationTest.java,40,,"        assertThat(cfg.get(""java.version"", String.class)).isEqualTo(""result"");"
134965,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/main/java/org/apache/tamaya/osgi/ConfigChanger.java,157,,"                        LOG.info(() -> ""Setting key "" + dictEntry.getKey() + "" to "" + configuredValue);"
134966,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/main/java/org/apache/tamaya/osgi/ConfigChanger.java,157,,"                        LOG.info(() -> ""Setting key "" + dictEntry.getKey() + "" to "" + configuredValue);"
134967,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/test/java/org/apache/tamaya/osgi/BackupsTest.java,49,,"        Dictionary<String,Object> cfg = createConfig(""remove"");"
134968,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/test/java/org/apache/tamaya/osgi/BackupsTest.java,84,,"        Dictionary<String,Object> cfg = createConfig(""contains"");"
134969,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/test/java/org/apache/tamaya/osgi/BackupsTest.java,97,,"        Backups.set(""saveRestore"", cfg);"
134970,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/test/java/org/apache/tamaya/osgi/ConfigHistoryTest.java,54,,"        ConfigHistory en = ConfigHistory.propertySet(""propertySet"", ""propertySet.key"", ""new"", ""prev"");"
134971,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/test/java/org/apache/tamaya/osgi/ConfigHistoryTest.java,54,,"        ConfigHistory en = ConfigHistory.propertySet(""propertySet"", ""propertySet.key"", ""new"", ""prev"");"
134972,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/test/java/org/apache/tamaya/osgi/ConfigHistoryTest.java,72,,"            ConfigHistory.propertySet(""getHistory"", ""getHistory""+i, ""prev""+i, ""new""+i);"
134973,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/test/java/org/apache/tamaya/osgi/ConfigHistoryTest.java,81,,"        ConfigHistory.configuring(""history1"", ""history_pid"");"
134974,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/test/java/org/apache/tamaya/osgi/ConfigHistoryTest.java,103,,"            ConfigHistory.propertySet(""history3"", ""getHistory""+i, ""prev""+i, ""new""+i);"
134975,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/test/java/org/apache/tamaya/osgi/ConfigHistoryTest.java,106,,"            ConfigHistory.propertySet(""history4"", ""getHistory""+i, ""prev""+i, ""new""+i);"
134976,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/test/java/org/apache/tamaya/osgi/ConfigHistoryTest.java,139,,"            ConfigHistory.propertySet(""save"", ""getHistory""+i, ""prev""+i, ""new""+i);"
134977,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/test/java/org/apache/tamaya/osgi/TamayaConfigPluginTest.java,84,,"        assertThat(System.getProperty(""java.home"")).isEqualTo(config.get(""home""));"
134978,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/test/java/org/apache/tamaya/osgi/TamayaConfigPluginTest.java,135,,"        tamayaConfigPlugin.updateConfig(""tamaya"", Policy.OVERRIDE, true, false);"
134979,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/test/java/org/apache/tamaya/osgi/TamayaConfigPluginTest.java,142,,"        assertThat(""success1"").isEqualTo(config.getProperties().get(""my.testProperty1""));"
134980,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/test/java/org/apache/tamaya/osgi/TamayaConfigPluginTest.java,142,,"        assertThat(""success1"").isEqualTo(config.getProperties().get(""my.testProperty1""));"
134981,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/test/java/org/apache/tamaya/osgi/TamayaConfigPluginTest.java,143,,"        assertThat(""success2"").isEqualTo(config.getProperties().get(""my.testProperty2""));"
134982,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/test/java/org/apache/tamaya/osgi/TamayaConfigPluginTest.java,143,,"        assertThat(""success2"").isEqualTo(config.getProperties().get(""my.testProperty2""));"
134983,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/test/java/org/apache/tamaya/osgi/TamayaConfigPluginTest.java,144,,"        assertThat(""success3"").isEqualTo(config.getProperties().get(""my.testProperty3""));"
134984,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/test/java/org/apache/tamaya/osgi/TamayaConfigPluginTest.java,144,,"        assertThat(""success3"").isEqualTo(config.getProperties().get(""my.testProperty3""));"
134985,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/test/java/org/apache/tamaya/osgi/TamayaConfigPluginTest.java,145,,"        assertThat(""success4"").isEqualTo(config.getProperties().get(""my.testProperty4""));"
134986,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/test/java/org/apache/tamaya/osgi/TamayaConfigPluginTest.java,145,,"        assertThat(""success4"").isEqualTo(config.getProperties().get(""my.testProperty4""));"
134987,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/test/java/org/apache/tamaya/osgi/TamayaConfigPluginTest.java,147,,"        assertThat(""Java2000"").isEqualTo(config.getProperties().get(""java.version""));"
134988,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/test/java/org/apache/tamaya/osgi/TamayaConfigPluginTest.java,147,,"        assertThat(""Java2000"").isEqualTo(config.getProperties().get(""java.version""));"
134989,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/test/java/org/apache/tamaya/osgi/commands/BackupCommandsTest.java,37,,"        String result = BackupCommands.createBackup(tamayaConfigPlugin, cm, ""createBackup"", false);"
134990,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/test/java/org/apache/tamaya/osgi/commands/BackupCommandsTest.java,59,,"        BackupCommands.createBackup(tamayaConfigPlugin, cm, ""deleteBackup"", false);"
134991,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/test/java/org/apache/tamaya/osgi/commands/BackupCommandsTest.java,70,,"        BackupCommands.createBackup(tamayaConfigPlugin, cm, ""restoreBackup"", false);"
134992,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/test/java/org/apache/tamaya/osgi/commands/ConfigCommandsTest.java,48,,"        String result = ConfigCommands.readTamayaConfig(""java"", null);"
134993,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/test/java/org/apache/tamaya/osgi/commands/ConfigCommandsTest.java,118,,"        String result = ConfigCommands.getProperty(""system-properties"", ""java.version"", false);"
134994,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/test/java/org/apache/tamaya/osgi/commands/ConfigCommandsTest.java,118,,"        String result = ConfigCommands.getProperty(""system-properties"", ""java.version"", false);"
134995,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/test/java/org/apache/tamaya/osgi/commands/ConfigCommandsTest.java,134,,"        assertThat(result.contains(""Ordinal"")).isTrue();"
134996,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/test/java/org/apache/tamaya/osgi/commands/HistoryCommandsTest.java,37,,"        ConfigHistory.configured(""clearHistory1"", ""test"");"
134997,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/test/java/org/apache/tamaya/osgi/commands/HistoryCommandsTest.java,37,,"        ConfigHistory.configured(""clearHistory1"", ""test"");"
134998,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/test/java/org/apache/tamaya/osgi/commands/HistoryCommandsTest.java,38,,"        ConfigHistory.configured(""clearHistory2"", ""test"");"
134999,./TargetProjects/incubator-tamaya-extensions/modules/osgi/common/src/test/java/org/apache/tamaya/osgi/commands/HistoryCommandsTest.java,60,,"        ConfigHistory.configured(""getHistory"", ""test"");"
