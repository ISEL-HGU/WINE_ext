133000,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/test/distributed/testsuite/DistTestSuite.java,73,,"    SystemConfiguration.setProperty(""pir.embedQuerySchema"", ""false"");"
133001,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/test/distributed/testsuite/DistTestSuite.java,76,,"    SystemConfiguration.setProperty(""pir.dataInputFormat"", InputFormatConst.BASE_FORMAT);"
133002,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/test/distributed/testsuite/DistTestSuite.java,77,,"    SystemConfiguration.setProperty(""pir.inputData"", SystemConfiguration.getProperty(DistributedTestDriver.JSON_PIR_INPUT_FILE_PROPERTY));"
133003,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/test/distributed/testsuite/DistTestSuite.java,78,,"    SystemConfiguration.setProperty(""pir.baseQuery"", ""?q=rcode:0"");"
133004,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/test/distributed/testsuite/DistTestSuite.java,78,,"    SystemConfiguration.setProperty(""pir.baseQuery"", ""?q=rcode:0"");"
133005,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/test/distributed/testsuite/DistTestSuite.java,81,,"    SystemConfiguration.setProperty(""pirTest.embedSelector"", ""true"");"
133006,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/test/distributed/testsuite/DistTestSuite.java,81,,"    SystemConfiguration.setProperty(""pirTest.embedSelector"", ""true"");"
133007,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/test/distributed/testsuite/DistTestSuite.java,96,,"    SystemConfiguration.setProperty(""pir.maxHitsPerSelector"", ""1000"");"
133008,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/test/distributed/testsuite/DistTestSuite.java,99,,"    SystemConfiguration.setProperty(""pir.useLocalCache"", ""true"");"
133009,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/test/distributed/testsuite/DistTestSuite.java,105,,"    SystemConfiguration.setProperty(""pir.baseQuery"", ""?q=rcode:3"");"
133010,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/test/distributed/testsuite/DistTestSuite.java,169,,"    SystemConfiguration.setProperty(""pir.esQuery"", ""?q=rcode:0"");"
133011,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/test/distributed/testsuite/DistTestSuite.java,170,,"    SystemConfiguration.setProperty(""pir.esResource"", SystemConfiguration.getProperty(DistributedTestDriver.ES_INPUT_RESOURCE_PROPERTY));"
133012,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/test/distributed/testsuite/DistTestSuite.java,199,,"    SystemConfiguration.setProperty(""pir.useModExpJoin"", ""false"");"
133013,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/test/distributed/testsuite/DistTestSuite.java,205,,"    SystemConfiguration.setProperty(""pir.colMultReduceByKey"", ""false"");"
133014,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/test/utils/BaseTests.java,109,,"        fail(""results.size() = "" + results.size() + "" -- must equal 3"");"
133015,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/test/utils/BaseTests.java,184,,"        logger.info(""correctResults:"");"
133016,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/test/utils/BaseTests.java,186,,"        fail(""results.size() = "" + results.size() + "" != correctResults.size() = "" + correctResults.size());"
133017,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/test/utils/BaseTests.java,192,,"          fail(""correctResults does not contain result = "" + result.toString());"
133018,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/test/utils/Inputs.java,79,,"  public static final String DNS_HOSTNAME_QUERY_FILE = DNS_HOSTNAME_QUERY + ""_file"";"
133019,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/test/utils/Inputs.java,86,,"  public static final String DNS_HOSTNAME_QUERY_FILE_HDFS = ""/tmp/"" + DNS_HOSTNAME_QUERY + ""_file"";"
133020,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/test/utils/Inputs.java,114,,"    ProcessBuilder pDeletePIR = new ProcessBuilder(""curl"", ""-XDELETE"", esPIRIndex);"
133021,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/test/utils/Inputs.java,146,,"    jsonObj2.put(QNAME, ""d.e.com"");"
133022,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/test/utils/Inputs.java,151,,"    jsonObj2.put(IPS, new ArrayList<>(Collections.singletonList(""5.6.7.8"")));"
133023,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/test/utils/Inputs.java,288,,"    ProcessBuilder pCreate = new ProcessBuilder(""curl"", ""-XPUT"", esTestIndex);"
133024,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/test/utils/Inputs.java,555,,"      TestUtils.addElement(doc, rootElement, DATE, PrimitiveTypePartitioner.STRING, ""false"", datePartitioner);"
133025,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/test/utils/StandaloneQuery.java,80,,"    File fileQuerier = File.createTempFile(QUERY_SIDE_OUPUT_FILE_PREFIX + ""-"" + QuerierConst.QUERIER_FILETAG, "".txt"");"
133026,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/test/utils/TestUtils.java,180,,"      String currentSchemas = SystemConfiguration.getProperty(""query.schemas"", """");"
133027,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/utils/CSVOutputUtils.java,74,,"    return csvOut.split("",(?=([^\""]*\""[^\""]*\"")*[^\""]*$)"", -1);"
133028,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/utils/QueryParserUtils.java,67,,"    logger.debug(""uriQuery = "" + uriQuery);"
133029,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/utils/QueryParserUtils.java,87,,"      logger.debug(""itemTokens[0] = "" + itemTokens[0] + "" itemTokens[1] = "" + itemTokens[1]);"
133030,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/utils/QueryParserUtils.java,108,,"              logger.debug(""checkRangeQuery returned false"");"
133031,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/utils/QueryParserUtils.java,120,,"                logger.debug(""checkRangeQuery returned true"");"
133032,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/utils/QueryParserUtils.java,170,,"              logger.debug(""itemTokens[1] = "" + itemTokens[1] + "" contains wildcard"");"
133033,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/utils/QueryParserUtils.java,170,,"              logger.debug(""itemTokens[1] = "" + itemTokens[1] + "" contains wildcard"");"
133034,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/utils/QueryParserUtils.java,173,,"                logger.debug(""stringValue = "" + valueString + "" did not satisfy itemTokens[1] = "" + itemTokens[1]);"
133035,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/utils/QueryParserUtils.java,702,,"        String[] blocksLower = ranges[0].split(""\\."");"
133036,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/utils/StringUtils.java,86,,"      logger.warn(""Could not json-decode string: "" + jsonString, e);"
133037,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/utils/StringUtils.java,89,,"      logger.warn(""Could not parse field into number: "" + jsonString, e);"
133038,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/utils/StringUtils.java,218,,"    String modString = jsonString.replaceFirst(""\\["", """");"
133039,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/utils/StringUtils.java,219,,"    modString = modString.replaceFirst(""\\]"", """");"
133040,./TargetProjects/incubator-retired-pirk/src/main/java/org/apache/pirk/utils/StringUtils.java,221,,"    String[] elements = modString.split(""\\s*,\\s*"");"
133041,./TargetProjects/incubator-retired-pirk/src/test/java/org/apache/pirk/general/KeyedHashTest.java,41,,"    int hash1 = KeyedHash.hash(""someKey"", 12, ""someInput"");"
133042,./TargetProjects/incubator-retired-pirk/src/test/java/org/apache/pirk/general/KeyedHashTest.java,41,,"    int hash1 = KeyedHash.hash(""someKey"", 12, ""someInput"");"
133043,./TargetProjects/incubator-retired-pirk/src/test/java/org/apache/pirk/general/PaillierTest.java,220,,"    SystemConfiguration.setProperty(""pallier.FIPSPrimeGenerationChecks"", ""true"");"
133044,./TargetProjects/incubator-retired-pirk/src/test/java/org/apache/pirk/general/PaillierTest.java,221,,"    SystemConfiguration.setProperty(""paillier.useGMPForModPow"", ""true"");"
133045,./TargetProjects/incubator-retired-pirk/src/test/java/org/apache/pirk/general/PaillierTest.java,222,,"    SystemConfiguration.setProperty(""paillier.GMPConstantTimeMode"", ""true"");"
133046,./TargetProjects/incubator-retired-pirk/src/test/java/org/apache/pirk/general/PaillierTest.java,225,,"    SystemConfiguration.setProperty(""pallier.FIPSPrimeGenerationChecks"", ""false"");"
133047,./TargetProjects/incubator-retired-pirk/src/test/java/org/apache/pirk/general/PartitionUtilsTest.java,138,,"    String stringBits = SystemConfiguration.getProperty(""pir.stringBits"");"
133048,./TargetProjects/incubator-retired-pirk/src/test/java/org/apache/pirk/general/QueryParserUtilsTest.java,63,,"    SystemConfiguration.setProperty(""data.schemas"", ""none"");"
133049,./TargetProjects/incubator-retired-pirk/src/test/java/org/apache/pirk/schema/data/LoadDataSchemaTest.java,62,,"    String schemasProp = SystemConfiguration.getProperty(""data.schemas"", ""none"");"
133050,./TargetProjects/incubator-retired-pirk/src/test/java/org/apache/pirk/schema/query/LoadQuerySchemaTest.java,80,,"    String dataSchemasProp = SystemConfiguration.getProperty(""data.schemas"", ""none"");"
133051,./TargetProjects/incubator-retired-pirk/src/test/java/org/apache/pirk/schema/query/LoadQuerySchemaTest.java,80,,"    String dataSchemasProp = SystemConfiguration.getProperty(""data.schemas"", ""none"");"
133052,./TargetProjects/incubator-retired-pirk/src/test/java/org/apache/pirk/schema/query/LoadQuerySchemaTest.java,81,,"    String querySchemasProp = SystemConfiguration.getProperty(""query.schemas"", ""none"");"
133053,./TargetProjects/incubator-retired-pirk/src/test/java/org/apache/pirk/schema/query/LoadQuerySchemaTest.java,88,,"    createDataSchema(""dataSchemaFile"");"
133054,./TargetProjects/incubator-retired-pirk/src/test/java/org/apache/pirk/serialization/SerializationTest.java,106,,"    String initialAdHocSchema = SystemConfiguration.getProperty(""pir.allowAdHocQuerySchemas"", ""false"");"
133055,./TargetProjects/incubator-retired-pirk/src/test/java/org/apache/pirk/serialization/SerializationTest.java,106,,"    String initialAdHocSchema = SystemConfiguration.getProperty(""pir.allowAdHocQuerySchemas"", ""false"");"
133056,./TargetProjects/incubator-retired-pirk/src/test/java/org/apache/pirk/serialization/SerializationTest.java,107,,"    String initialEmbedSchema = SystemConfiguration.getProperty(""pir.embedQuerySchema"", ""false"");"
133057,./TargetProjects/incubator-retired-pirk/src/test/java/org/apache/pirk/serialization/SerializationTest.java,123,,"      SystemConfiguration.setProperty(""pir.allowAdHocQuerySchemas"", ""true"");"
133058,./TargetProjects/incubator-retired-pirk/src/test/java/org/apache/pirk/storm/KafkaStormIntegrationTest.java,110,,"    SystemConfiguration.setProperty(""pir.limitHitsPerSelector"", ""true"");"
133059,./TargetProjects/incubator-retired-pirk/src/test/java/org/apache/pirk/storm/KafkaStormIntegrationTest.java,118,,"    SystemConfiguration.setProperty(""hdfs.use"", ""false"");"
133060,./TargetProjects/incubator-retired-pirk/src/test/java/org/apache/pirk/storm/KafkaStormIntegrationTest.java,138,,"    SystemConfiguration.setProperty(""storm.splitPartitions"", ""true"");"
133061,./TargetProjects/incubator-retired-pirk/src/test/java/org/apache/pirk/storm/KafkaStormIntegrationTest.java,139,,"    SystemConfiguration.setProperty(""storm.saltColumns"", ""true"");"
133062,./TargetProjects/incubator-retired-pirk/src/test/java/org/apache/pirk/storm/KafkaStormIntegrationTest.java,160,,"    File responderFile = File.createTempFile(""responderFile"", "".txt"");"
133063,./TargetProjects/incubator-retired-pirk/src/test/java/org/apache/pirk/wideskies/standalone/StandaloneTest.java,60,,"    SystemConfiguration.setProperty(""data.schemas"", ""none"");"
133064,./TargetProjects/incubator-retired-pirk/src/test/java/org/apache/pirk/wideskies/standalone/StandaloneTest.java,64,,"    stopListFileProp = SystemConfiguration.getProperty(""pir.stopListFile"");"
133065,./TargetProjects/incubator-retired-pirk/src/test/java/org/apache/pirk/wideskies/standalone/StandaloneTest.java,93,,"    SystemConfiguration.setProperty(""pir.allowAdHocQuerySchemas"", ""false"");"
133066,./TargetProjects/incubator-retired-pirk/src/test/java/org/apache/pirk/wideskies/standalone/StandaloneTest.java,93,,"    SystemConfiguration.setProperty(""pir.allowAdHocQuerySchemas"", ""false"");"
133067,./TargetProjects/incubator-retired-pirk/src/test/java/org/apache/pirk/wideskies/standalone/StandaloneTest.java,94,,"    SystemConfiguration.setProperty(""pir.embedQuerySchema"", ""false"");"
133068,./TargetProjects/incubator-retired-pirk/src/test/java/org/apache/pirk/wideskies/standalone/StandaloneTest.java,97,,"    SystemConfiguration.setProperty(""pirTest.embedSelector"", ""true"");"
133069,./TargetProjects/incubator-retired-provisionr/activiti/commands/src/test/java/org/apache/provisionr/activiti/karaf/commands/ActivitiCommandTest.java,55,,"        String[] row1 = {""myvalue111111111111111x"", ""myvalue2"", ""myvalue3""};"
133070,./TargetProjects/incubator-retired-provisionr/activiti/commands/src/test/java/org/apache/provisionr/activiti/karaf/commands/ActivitiCommandTest.java,55,,"        String[] row1 = {""myvalue111111111111111x"", ""myvalue2"", ""myvalue3""};"
133071,./TargetProjects/incubator-retired-provisionr/activiti/commands/src/test/java/org/apache/provisionr/activiti/karaf/commands/ActivitiCommandTest.java,56,,"        String[] row2 = {""myvalue1"", ""myvalue2"", ""myvalue3""};"
133072,./TargetProjects/incubator-retired-provisionr/providers/amazon/src/test/java/org/apache/provisionr/amazon/activities/RunOnDemandInstancesLiveTest.java,66,,"        @SuppressWarnings(""unchecked"")"
133073,./TargetProjects/incubator-retired-provisionr/providers/amazon/src/test/java/org/apache/provisionr/amazon/functions/ConvertIpPermissionToRuleAndBackTest.java,33,,"            .withIpProtocol(""tcp"").withIpRanges(""0.0.0.0/0"");"
133074,./TargetProjects/incubator-retired-s4/subprojects/s4-comm/src/main/java/org/apache/s4/comm/tools/TaskSetup.java,45,,"        zkclient.deleteRecursive(""/s4/clusters/"" + topologyName);"
133075,./TargetProjects/incubator-retired-s4/subprojects/s4-comm/src/main/java/org/apache/s4/comm/topology/ClusterFromZK.java,67,,"        this.taskPath = ""/s4/clusters/"" + clusterName + ""/tasks"";"
133076,./TargetProjects/incubator-retired-s4/subprojects/s4-core/src/main/java/org/apache/s4/core/ProcessingElement.java,260,,"        Preconditions.checkArgument(isPrototype, ""This method can only be used on the PE prototype. Trigger not set."");"
133077,./TargetProjects/incubator-retired-s4/subprojects/s4-core/src/main/java/org/apache/s4/core/gen/OverloadDispatcherGenerator.java,114,,"        mv1.visitMethodInsn(Opcodes.INVOKESPECIAL, ""java/lang/Object"", ""<init>"", ""()V"");"
133078,./TargetProjects/incubator-retired-s4/subprojects/s4-core/src/main/java/org/apache/s4/core/gen/OverloadDispatcherGenerator.java,208,,"        mv2.visitTypeInsn(NEW, ""java/lang/StringBuilder"");"
133079,./TargetProjects/incubator-retired-s4/subprojects/s4-core/src/main/java/org/apache/s4/core/gen/OverloadDispatcherGenerator.java,215,,"        mv2.visitMethodInsn(INVOKEVIRTUAL, ""java/lang/StringBuilder"", ""append"","
133080,./TargetProjects/incubator-retired-s4/subprojects/s4-core/src/main/java/org/apache/s4/core/gen/OverloadDispatcherGenerator.java,216,,"                ""(Ljava/lang/String;)Ljava/lang/StringBuilder;"");"
133081,./TargetProjects/incubator-retired-s4/subprojects/s4-core/src/main/java/org/apache/s4/deploy/DistributedDeploymentManager.java,115,,"                throw new DeploymentFailedException(""Cannot deploy application ["" + appName + ""]"", e1);"
133082,./TargetProjects/incubator-retired-s4/subprojects/s4-core/src/test/java/org/apache/s4/base/EventAttributeTest.java,36,,"        SimpleEvent ev = new SimpleEvent(""Hello"", 28);"
133083,./TargetProjects/incubator-retired-s4/subprojects/s4-core/src/test/java/org/apache/s4/base/EventAttributeTest.java,37,,"        ev.put(""An Int"", Integer.class, 33);"
133084,./TargetProjects/incubator-retired-s4/subprojects/s4-core/src/test/java/org/apache/s4/core/ft/RecoveryTest.java,87,,"        emitter.send(0, new EventMessage(""-1"", ""inputStream"", injector.getInstance(SerializerDeserializer.class)"
133085,./TargetProjects/incubator-retired-s4/subprojects/s4-core/src/test/java/org/apache/s4/core/ft/StatefulTestPE.java,42,,"                setValue1(event.get(""value""));"
133086,./TargetProjects/incubator-retired-s4/subprojects/s4-core/src/test/java/org/apache/s4/deploy/prodcon/TestProducerConsumer.java,144,,"        zkClient.create(""/s4/clusters/"" + CONSUMER_CLUSTER + ""/app/s4App"", record2, CreateMode.PERSISTENT);"
133087,./TargetProjects/incubator-retired-s4/subprojects/s4-core/src/test/java/org/apache/s4/fixtures/CoreTestUtils.java,65,,"        if (new File(System.getProperty(""user.dir"")).listFiles(new PatternFilenameFilter(""gradlew"")).length == 1) {"
133088,./TargetProjects/incubator-retired-s4/subprojects/s4-core/src/test/java/org/apache/s4/fixtures/CoreTestUtils.java,65,,"        if (new File(System.getProperty(""user.dir"")).listFiles(new PatternFilenameFilter(""gradlew"")).length == 1) {"
133089,./TargetProjects/incubator-retired-s4/subprojects/s4-edsl/src/test/java/org/apache/s4/edsl/MyApp.java,28,,"        pe(""PEZ"").type(PEZ.class).fireOn(EventA.class).afterInterval(5, TimeUnit.SECONDS).cache().size(1000)"
133090,./TargetProjects/incubator-retired-s4/subprojects/s4-tools/src/main/java/org/apache/s4/tools/Status.java,72,,"                    if (zkClient.exists(""/s4/clusters/"" + clusterName)) {"
133091,./TargetProjects/incubator-retired-s4/subprojects/s4-tools/src/main/java/org/apache/s4/tools/Status.java,94,,"                    if (zkClient.exists(""/s4/streams/"" + streamName)) {"
133092,./TargetProjects/incubator-retired-s4/test-apps/twitter-adapter/src/main/java/org/apache/s4/example/twitter/TwitterInputAdapter.java,82,,"                logger.error(""error"", ex);"
133093,./TargetProjects/incubator-retired-slider/slider-core/src/main/java/org/apache/slider/api/proto/Messages.java,35605,,"              new java.lang.String[] { ""Name"", ""Role"", ""State"", ""ExitCode"", ""Command"", ""Diagnostics"", ""Output"", ""Environment"", ""RoleId"", ""Released"", ""CreateTime"", ""StartTime"", ""Host"", ""HostURL"", ""AppVersion"", ""LogLink"", ""CompletionTime"", });"
133094,./TargetProjects/incubator-retired-slider/slider-core/src/main/java/org/apache/slider/api/proto/Messages.java,35695,,"              new java.lang.String[] { ""Text"", });"
133095,./TargetProjects/incubator-retired-slider/slider-core/src/main/java/org/apache/slider/api/proto/SliderClusterAPI.java,601,,"              throw new java.lang.AssertionError(""Can't get here."");"
133096,./TargetProjects/incubator-retired-slider/slider-core/src/main/java/org/apache/slider/api/proto/SliderClusterAPI.java,611,,"              ""descriptor for wrong service type."");"
133097,./TargetProjects/incubator-retired-slider/slider-core/src/main/java/org/apache/slider/common/tools/SliderUtils.java,351,,"                            + "" at "" + address"
133098,./TargetProjects/incubator-retired-slider/slider-core/src/main/java/org/apache/slider/core/zk/MiniZooKeeperCluster.java,215,,"             ""on client port: "" + clientPort);"
133099,./TargetProjects/incubator-retired-slider/slider-core/src/main/java/org/apache/slider/providers/agent/AgentClientProvider.java,427,,"            clientRoot = config.getJSONObject(""global"")"
133100,./TargetProjects/incubator-retired-slider/slider-core/src/main/java/org/apache/slider/providers/agent/AgentProviderService.java,159,,"  private static final String GLOBAL_CONFIG_TAG = ""global"";"
133101,./TargetProjects/incubator-retired-slider/slider-core/src/main/java/org/apache/slider/providers/agent/AgentProviderService.java,420,,"      launcher.setDockerImage(getConfigFromMetaInfo(roleGroup, ""image""));"
133102,./TargetProjects/incubator-retired-slider/slider-core/src/main/java/org/apache/slider/providers/agent/AgentProviderService.java,1240,,"              if (compCmd.getName().equals(""INSTALL"")) {"
133103,./TargetProjects/incubator-retired-slider/slider-core/src/main/java/org/apache/slider/providers/agent/AgentProviderService.java,2381,,"      configurations.get(""global"").put(""exec_cmd"", effectiveCommand.getExec());"
133104,./TargetProjects/incubator-retired-slider/slider-core/src/main/java/org/apache/slider/providers/agent/AgentProviderService.java,2445,,"    configurations.put(""docker"", dockerConfig);"
133105,./TargetProjects/incubator-retired-slider/slider-core/src/main/java/org/apache/slider/providers/agent/AgentProviderService.java,2455,,"    cmdParams.put(""service_package_folder"","
133106,./TargetProjects/incubator-retired-slider/slider-core/src/main/java/org/apache/slider/providers/agent/AgentProviderService.java,2456,,"        ""${AGENT_WORK_ROOT}/work/app/definition/package"");"
133107,./TargetProjects/incubator-retired-slider/slider-core/src/main/java/org/apache/slider/providers/agent/AgentProviderService.java,2458,,"    cmdParams.put(""schema_version"", ""2.0"");"
133108,./TargetProjects/incubator-retired-slider/slider-core/src/main/java/org/apache/slider/providers/agent/AgentProviderService.java,2458,,"    cmdParams.put(""schema_version"", ""2.0"");"
133109,./TargetProjects/incubator-retired-slider/slider-core/src/main/java/org/apache/slider/providers/agent/AgentProviderService.java,2459,,"    cmdParams.put(""command_timeout"", Long.toString(timeout));"
133110,./TargetProjects/incubator-retired-slider/slider-core/src/main/java/org/apache/slider/providers/agent/AgentProviderService.java,2460,,"    cmdParams.put(""script_type"", AbstractComponent.TYPE_PYTHON);"
133111,./TargetProjects/incubator-retired-slider/slider-core/src/main/java/org/apache/slider/providers/agent/AgentProviderService.java,2461,,"    cmdParams.put(""record_config"", Boolean.toString(recordConfig));"
133112,./TargetProjects/incubator-retired-slider/slider-core/src/main/java/org/apache/slider/providers/agent/AgentProviderService.java,2616,,"    String statusCommand = getConfigFromMetaInfoWithAppConfigOverriding(roleGroup, ""statusCommand"");"
133113,./TargetProjects/incubator-retired-slider/slider-core/src/main/java/org/apache/slider/providers/agent/State.java,100,,"          throw new IllegalArgumentException(result + "" is not valid for "" + this);"
133114,./TargetProjects/incubator-retired-slider/slider-core/src/main/java/org/apache/slider/server/appmaster/SliderAppMaster.java,257,,"  @SuppressWarnings(""FieldAccessedSynchronizedAndUnsynchronized"")"
133115,./TargetProjects/incubator-retired-slider/slider-core/src/main/java/org/apache/slider/server/appmaster/SliderAppMaster.java,2125,,"    ActionStopSlider stopSlider = new ActionStopSlider(""stop"", EXIT_SUCCESS,"
133116,./TargetProjects/incubator-retired-slider/slider-core/src/main/java/org/apache/slider/server/appmaster/web/rest/agent/AgentEnv.java,184,,"    @SerializedName(""name"")"
133117,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/common/tools/TestSliderUtils.java,72,,"    Assert.assertEquals(SliderUtils.truncate(""1234567890"", 0), ""1234567890"");"
133118,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/common/tools/TestSliderUtils.java,110,,"    instances.add(getApplicationReport(1000, 0, ""app1"", YarnApplicationState.ACCEPTED));"
133119,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/common/tools/TestSliderUtils.java,112,,"    instances.add(getApplicationReport(900, 998, ""app2"", YarnApplicationState.FAILED));"
133120,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/core/registry/docstore/TestPublishedConfigurationOutputter.java,52,,"    config.put(""key1"", ""val1"");"
133121,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/core/registry/docstore/TestPublishedConfigurationOutputter.java,52,,"    config.put(""key1"", ""val1"");"
133122,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/core/registry/docstore/TestPublishedConfigurationOutputter.java,59,,"            new PublishedConfiguration(""description"","
133123,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/core/registry/docstore/TestPublishedConfigurationOutputter.java,62,,"    String output = configurationOutputter.asString().replaceAll(""( |\\r|\\n)"","
133124,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/core/registry/docstore/TestPublishedConfigurationOutputter.java,85,,"        ""<configuration><property><name>key1</name><value>val1</value><source/></property></configuration>"");"
133125,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentClientProvider2.java,127,,"    inputConfig.put(""global"", global);"
133126,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentLaunchParameter.java,36,,"    Assert.assertEquals("""", alp.getNextLaunchParameter(""HBASE_MASTER""));"
133127,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,159,,"                                               + ""        <component>\n"""
133128,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,162,,"                                               + ""          <commandScript>\n"""
133129,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,164,,"                                               + ""            <scriptType>PYTHON</scriptType>\n"""
133130,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,166,,"                                               + ""          </commandScript>\n"""
133131,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,167,,"                                               + ""        </component>\n"""
133132,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,175,,"                                               + ""          <minInstanceCount>1</minInstanceCount>\n"""
133133,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,283,,"    ProviderRole role = new ProviderRole(""HBASE_MASTER"", 1);"
133134,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,287,,"    Path generatedConfPath = new Path(""."", ""test"");"
133135,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,299,,"    expect(container.getNodeId()).andReturn(new MockNodeId(""localhost"")).anyTimes();"
133136,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,305,,"    cs.setScript(""scripts/hbase_master.py"");"
133137,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,326,,"          eq(""mockcontainer_1""),"
133138,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,354,,"    desc.setOption(OptionKeys.ZOOKEEPER_QUORUM, ""host1:2181"");"
133139,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,355,,"    desc.setInfo(OptionKeys.APPLICATION_NAME, ""HBASE"");"
133140,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,365,,"    treeOps.set(""site.fs.defaultFS"", ""hdfs://HOST1:8020/"");"
133141,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,365,,"    treeOps.set(""site.fs.defaultFS"", ""hdfs://HOST1:8020/"");"
133142,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,366,,"    treeOps.set(""internal.data.dir.path"", ""hdfs://HOST1:8020/database"");"
133143,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,366,,"    treeOps.set(""internal.data.dir.path"", ""hdfs://HOST1:8020/database"");"
133144,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,391,,"    reg.setLabel(""mockcontainer_1___HBASE_MASTER"");"
133145,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,393,,"    ports.put(""a"",""100"");"
133146,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,442,,"        ""HBASE_REGIONSERVER"");"
133147,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,508,,"    treeOps.set(""java_home"", ""/usr/jdk7/"");"
133148,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,861,,"                                                   ""cid1"","
133149,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,862,,"                                                   ""host1"","
133150,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,920,,"    PublishedExports pubExports = pubExpSet.get(""QuickLinks"".toLowerCase());"
133151,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,923,,"    List<ExportEntry> expEntries = pubExports.entries.get(""Comp_Endpoint"");"
133152,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,994,,"    configs.put(""hbase-site"", hbaseSite);"
133153,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,995,,"    configs.put(""global"", hbaseSite);"
133154,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,1002,,"    cn1.host = ""HOST1"";"
133155,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,1007,,"        new MockContainerId(1), ""cid"");"
133156,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,1033,,"        if (entry.getKey().equals(""JMX_Endpoint"")) {"
133157,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,1034,,"          assert entry.getValue().toString().equals(""http://HOST1:60012/jmx"");"
133158,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,1346,,"      reg.setLabel(""mockcontainer_1___HBASE_REGIONSERVER"");"
133159,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,1428,,"      ap.put(""a.port"", ""10233"");"
133160,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,1545,,"    mockAps.publishFolderPaths(folders, ""cid"", ""role"", ""fqdn"");"
133161,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,1582,,"    mockAps.getAllocatedPorts(""cid2"").put(""c"", ""102"");"
133162,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,1683,,"    treeOps.getGlobalOptions().put(""site.hbase-site.a.port"", ""${HBASE_MASTER.ALLOCATED_PORT}"");"
133163,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,1691,,"    propertyInfo1.setName(""defaultA"");"
133164,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,1695,,"    propertyInfo1.setName(""defaultB"");"
133165,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,1710,,"    configurations.add(""core-site"");"
133166,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,1722,,"    allocatedPorts.put(""hbase-site.a.port"", ""10023"");"
133167,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,1723,,"    allocatedPorts.put(""hbase-site.b.port"", ""10024"");"
133168,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestAgentProviderService.java,1726,,"    allocatedPorts2.put(""hbase-site.random.port"", ""10025"");"
133169,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestComponentCommandOrder.java,68,,"        containerId, ""aid"");"
133170,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestComponentCommandOrder.java,130,,"      Assert.fail(""Instantiation should have failed."");"
133171,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestComponentCommandOrder.java,208,,"    resources.getOrAddComponent(""b-B1"").put(ROLE_PREFIX, ""b-"");"
133172,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestComponentCommandOrder.java,209,,"    resources.getOrAddComponent(""b-B2"").put(ROLE_PREFIX, ""b-"");"
133173,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestComponentCommandOrder.java,210,,"    resources.getOrAddComponent(""c-C"").put(ROLE_PREFIX, ""c-"");"
133174,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestComponentInstanceState.java,98,,"    ComponentInstanceState componentInstanceState = new ComponentInstanceState(""HBASE_MASTER"", containerId, ""AID_001"");"
133175,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestComponentInstanceState.java,98,,"    ComponentInstanceState componentInstanceState = new ComponentInstanceState(""HBASE_MASTER"", containerId, ""AID_001"");"
133176,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestComponentInstanceState.java,177,,"      TestCase.fail(""Command should not be allowed."");"
133177,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestComponentTagProvider.java,35,,"    Assert.assertEquals("""", ctp.getTag(null, ""cid""));"
133178,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestComponentTagProvider.java,36,,"    Assert.assertEquals("""", ctp.getTag(""comp1"", null));"
133179,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestComponentTagProvider.java,44,,"    ctp.releaseTag(""comp1"", ""cid4"");"
133180,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestComponentTagProvider.java,53,,"    ctp.recordAssignedTag(""comp2"", ""cidb3"", ""3"");"
133181,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/TestComponentTagProvider.java,58,,"    ctp.recordAssignedTag(""comp2"", ""cidb5"", ""six"");"
133182,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/application/metadata/TestConfigParser.java,35,,"                                             + ""  <property>\n"""
133183,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/providers/agent/application/metadata/TestConfigParser.java,43,,"                                             + ""  </property>\n"""
133184,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/server/appmaster/web/rest/management/TestAMManagementWebServices.java,192,,"    ClientResponse response = r.path(""ws"").path(""v1"").path(""slider"").path(""mgmt"").path(""app"")"
133185,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/server/appmaster/web/rest/management/TestAMManagementWebServices.java,192,,"    ClientResponse response = r.path(""ws"").path(""v1"").path(""slider"").path(""mgmt"").path(""app"")"
133186,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/server/appmaster/web/rest/management/TestAMManagementWebServices.java,192,,"    ClientResponse response = r.path(""ws"").path(""v1"").path(""slider"").path(""mgmt"").path(""app"")"
133187,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/server/appmaster/web/rest/management/TestAMManagementWebServices.java,197,,"    assertEquals(""wrong href"","
133188,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/server/services/security/TestCertificateManager.java,73,,"    certMan.initialize(compOperations, ""cahost"", null, null);"
133189,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/server/services/security/TestCertificateManager.java,92,,"      KeyStore keystore = KeyStore.getInstance(""pkcs12"");"
133190,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/server/services/security/TestCertificateManager.java,126,,"    certMan.generateContainerCertificate(""testhost"", ""container1"");"
133191,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/server/services/security/TestCertificateManager.java,126,,"    certMan.generateContainerCertificate(""testhost"", ""container1"");"
133192,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/server/services/security/TestCertificateManager.java,135,,"                                                                   ""component1"","
133193,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/server/services/security/TestCertificateManager.java,136,,"                                                                   ""password"");"
133194,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/server/services/security/TestCertificateManager.java,143,,"    Assert.assertTrue(""container keystore not generated"","
133195,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/server/services/security/TestCertificateManager.java,187,,"                ""app1.component1.password.property"");"
133196,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/server/services/security/TestCertificateManager.java,188,,"    compOps.put(SliderKeys.COMP_STORES_REQUIRED_KEY, ""true"");"
133197,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/server/services/security/TestCertificateManager.java,198,,"    assertEquals(""wrong number of stores"", 1, files.length);"
133198,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/server/services/security/TestCertificateManager.java,269,,"                ""test.keystore.password"");"
133199,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/server/services/workflow/TestWorkflowCompositeService.java,55,,"    MockService one = new MockService(""one"", false, 100);"
133200,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/server/services/workflow/TestWorkflowCompositeService.java,56,,"    MockService two = new MockService(""two"", false, 100);"
133201,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/server/services/workflow/TestWorkflowForkedProcessService.java,73,,"    assertNotNull(""null exit code"", exitCode);"
133202,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/server/services/workflow/TestWorkflowSequenceService.java,45,,"    MockService one = new MockService(""one"", false, 100);"
133203,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/server/services/workflow/TestWorkflowSequenceService.java,46,,"    MockService two = new MockService(""two"", false, 100);"
133204,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/server/services/workflow/TestWorkflowSequenceService.java,58,,"    CallableHandler handler = new CallableHandler(""hello"");"
133205,./TargetProjects/incubator-retired-slider/slider-core/src/test/java/org/apache/slider/test/MiniZooKeeperCluster.java,197,,"             ""on client port: "" + clientPort);"
133206,./TargetProjects/incubator-retired-wave/wave/src/main/java/com/google/wave/api/WaveService.java,88,,"    private static final String HTTP_POST_METHOD = ""POST"";"
133207,./TargetProjects/incubator-retired-wave/wave/src/main/java/com/google/wave/api/WaveService.java,453,,"      throw new OAuthException(""Error validating OAuth request"", e);"
133208,./TargetProjects/incubator-retired-wave/wave/src/main/java/com/google/wave/api/WaveService.java,697,,"    @SuppressWarnings(""unchecked"")"
133209,./TargetProjects/incubator-retired-wave/wave/src/main/java/com/google/wave/api/data/ElementSerializer.java,63,,"  private static final String CAPTION_TAG = ""caption"";"
133210,./TargetProjects/incubator-retired-wave/wave/src/main/java/com/google/wave/api/data/ElementSerializer.java,141,,"        String value = e.getProperty(""value"");"
133211,./TargetProjects/incubator-retired-wave/wave/src/main/java/com/google/wave/api/data/ElementSerializer.java,143,,"          value = e.getProperty(""defaultValue"");"
133212,./TargetProjects/incubator-retired-wave/wave/src/main/java/com/google/wave/api/data/ElementSerializer.java,145,,"        return wrapWithContent(value, ""for"", e.getProperty(""name""));"
133213,./TargetProjects/incubator-retired-wave/wave/src/main/java/com/google/wave/api/data/ElementSerializer.java,340,,"        if (element.getProperties().containsKey(""category"")) {"
133214,./TargetProjects/incubator-retired-wave/wave/src/main/java/com/google/wave/api/data/ElementSerializer.java,344,,"        if (element.getProperties().containsKey(""title"")) {"
133215,./TargetProjects/incubator-retired-wave/wave/src/main/java/com/google/wave/api/data/ElementSerializer.java,348,,"        if (element.getProperties().containsKey(""thumbnail"")) {"
133216,./TargetProjects/incubator-retired-wave/wave/src/main/java/com/google/wave/api/data/ElementSerializer.java,353,,"          if (property.getKey().equals(""category"") || property.getKey().equals(""url"") ||"
133217,./TargetProjects/incubator-retired-wave/wave/src/main/java/com/google/wave/api/data/ElementSerializer.java,355,,"              property.getKey().equals(""author"")) {"
133218,./TargetProjects/incubator-retired-wave/wave/src/main/java/com/google/wave/api/data/ElementSerializer.java,357,,"          } else if (property.getKey().equals(""pref"")) {"
133219,./TargetProjects/incubator-retired-wave/wave/src/main/java/com/google/wave/api/data/ElementSerializer.java,370,,"        if (element.getProperties().containsKey(""ifr"")) {"
133220,./TargetProjects/incubator-retired-wave/wave/src/main/java/com/google/wave/api/data/ElementSerializer.java,422,,"        if (element.getProperty(""width"") != null) {"
133221,./TargetProjects/incubator-retired-wave/wave/src/main/java/com/google/wave/api/data/ElementSerializer.java,426,,"        if (element.getProperty(""height"") != null) {"
133222,./TargetProjects/incubator-retired-wave/wave/src/main/java/com/google/wave/api/event/EventSerializer.java,177,,"      throw new EventSerializationException(""Unable to deserialize event JSON: "" + json, json);"
133223,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/box/expimp/WaveImport.java,182,,"    Console.println(""Created "" + createdCount + "" waves."");"
133224,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/box/server/executor/ScheduledRequestScopeExecutor.java,61,,"    Preconditions.checkNotNull(executor, ""Executor is not defined."");"
133225,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/box/server/persistence/PersistenceModule.java,107,,"    } else if (signerInfoStoreType.equalsIgnoreCase(""mongodb"")) {"
133226,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/box/server/robots/agent/passwd/PasswordRobot.java,106,,"        LOG.log(Level.SEVERE, ""userId: "" + modifiedBy, e);"
133227,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/box/server/robots/dataapi/DataApiOAuthServlet.java,316,,"      LOG.info(""Request token unknown"", e);"
133228,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/box/server/robots/operations/BlipOperationServices.java,141,,"        ""Unsupported operation "" + operation);"
133229,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/box/server/rpc/AuthenticationServlet.java,133,,"      byte[] utf8Bytes = parametersLine.getBytes(""UTF-8"");"
133230,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/box/server/rpc/ServerRpcControllerImpl.java,77,,"    throw new UnsupportedOperationException(""Client-side method of RpcController only."");"
133231,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/box/server/waveserver/SolrSearchProviderImpl.java,84,,"  public static final String Q = WAVE_ID + "":[* TO *]"""
133232,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/box/server/waveserver/SolrSearchProviderImpl.java,85,,"      + "" AND "" + WAVELET_ID + "":[* TO *]"""
133233,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/box/server/waveserver/WaveServerImpl.java,315,,"    Preconditions.checkState(initialized, ""Wave server not yet initialized"");"
133234,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/box/server/waveserver/WaveletContainerImpl.java,180,,"    Preconditions.checkState(writeLock.isHeldByCurrentThread(), ""must hold write lock"");"
133235,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/box/stat/Measurement.java,90,,"              append(formatMillis(total)).append(""</td>"").toString();"
133236,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/box/stat/Measurement.java,93,,"              append("" <td>"").append(formatMillis(average)).append(""</td>"")."
133237,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/box/stat/StatRenderer.java,117,,"          .append(node.getName() + ""</td>"")"
133238,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/box/stat/StatRenderer.java,122,,"          .append(""</tr>"");"
133239,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/client/common/util/LinkedSequence.java,90,,"    Preconditions.checkArgument(x != null, ""Item is null"");"
133240,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/client/debug/logger/DomLogger.java,80,,"   @SuppressWarnings(""unused"")  // NOTE(user): Used by nativeSetupWebDriverTestPins()"
133241,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/client/editor/EditorImpl.java,723,,"          doStyle(start, end, ""textDecoration"", ""underline"");"
133242,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/client/editor/content/ExtendedClientDocumentContext.java,73,,"        throw new IllegalStateException(""Not in an editing context"");"
133243,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/client/editor/testing/DocumentFreeSelectionHelper.java,69,,"    throw new UnsupportedOperationException(""DocumentFree SelectionHelper has no document content"");"
133244,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/client/editor/util/EditorAnnotationUtil.java,46,,"        editor.getSelectionHelper().getSelectionRange(), ""Editor must have selection"").asRange();"
133245,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/client/scheduler/BrowserBackedScheduler.java,115,,"    Preconditions.checkArgument(priority != Priority.INTERNAL_SUPPRESS, ""Don't use internal level"");"
133246,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/client/wave/LazyContentDocument.java,198,,"    Preconditions.checkState(!diffsSuppressed, ""bad diff scope: "", diffsSuppressed, diffsRetained);"
133247,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/client/wavepanel/view/dom/AnchorDomImpl.java,91,,"    if (self.hasAttribute(""pid"")) {"
133248,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/concurrencycontrol/channel/WaveletDeltaChannelImpl.java,700,,"        ""[state:"" + state + ""] "" + ""[connectionTag:"" + connectionTag + ""] \n"" +"
133249,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/concurrencycontrol/client/ConcurrencyControl.java,734,,"        ""[startSignature:"" + startSignature + ""] \n"" +"
133250,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/federation/noop/NoOpFederationRemote.java,41,,"    listener.onFailure(FederationErrors.badRequest(""Federation is not enabled!""));"
133251,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/document/indexed/DocumentEvent.java,188,,"    @SuppressWarnings({""unchecked"", ""rawtypes""})"
133252,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/document/indexed/DocumentEvent.java,188,,"    @SuppressWarnings({""unchecked"", ""rawtypes""})"
133253,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/document/indexed/IndexedDocumentImpl.java,1192,,"      throw new IllegalArgumentException(""Cannot access local annotations"");"
133254,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/document/indexed/SimpleAnnotationSet.java,499,,"      throw new RuntimeException(""not implemented"");"
133255,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/document/indexed/StubModifiableAnnotations.java,64,,"    assert modifying : ""Can't make change unless during modification"";"
133256,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/document/operation/algorithm/Composer.java,293,,"      throw new ComposeException(""Illegal composition"");"
133257,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/document/operation/algorithm/InsertionNoninsertionTransformer.java,139,,"      throw new UnsupportedOperationException(""This method should never be called."");"
133258,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/document/operation/algorithm/InsertionTransformer.java,115,,"      throw new UnsupportedOperationException(""This method should never be called."");"
133259,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/document/operation/algorithm/NoninsertionTransformer.java,198,,"      throw new InternalTransformException(""Incompatible operations in transformation"");"
133260,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/document/operation/automaton/DocOpAutomaton.java,508,,"    return addViolation(v, schemaViolation(""element type "" + tag"
133261,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/document/util/DocIterate.java,188,,"  @SuppressWarnings(""unchecked"")"
133262,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/document/util/FilteredView.java,109,,"          throw new RuntimeException(""Unimplemented"");"
133263,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/document/util/Point.java,73,,"    Preconditions.checkNotNull(textNode, ""Container must not be null"");"
133264,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/experimental/schema/SchemaFactory.java,210,,"        throw new InvalidSchemaException(""Missing attribute: "" + NAME_ATTRIBUTE_NAME);"
133265,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/schema/conversation/ConversationSchemas.java,75,,"      addChildren(null, ""body"");"
133266,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/schema/conversation/ConversationSchemas.java,79,,"      addAttrWithValues(""line"", ""t"", ""h1"", ""h2"", ""h3"", ""h4"", ""li"");"
133267,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/schema/conversation/ConversationSchemas.java,86,,"      addChildren(""image"", ""caption"");"
133268,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/schema/conversation/ConversationSchemas.java,86,,"      addChildren(""image"", ""caption"");"
133269,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/schema/conversation/ConversationSchemas.java,89,,"      addChildren(""image"", ""gadget"");"
133270,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/schema/conversation/ConversationSchemas.java,100,,"      addAttrs(""button"", ""name"");"
133271,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/schema/conversation/ConversationSchemas.java,104,,"      addAttrs(""check"", ""name"", ""submit"", ""value"");"
133272,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/schema/conversation/ConversationSchemas.java,104,,"      addAttrs(""check"", ""name"", ""submit"", ""value"");"
133273,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/schema/conversation/ConversationSchemas.java,113,,"      addChildren(""gadget"", ""title"", ""thumbnail"", ""category"", ""state"", ""pref"");"
133274,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/schema/conversation/ConversationSchemas.java,113,,"      addChildren(""gadget"", ""title"", ""thumbnail"", ""category"", ""state"", ""pref"");"
133275,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/schema/conversation/ConversationSchemas.java,116,,"      addAttrs(""gadget"", ""url"", ""title"", ""prefs"", ""state"", ""author"", ""height"", ""width"", ""id"","
133276,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/schema/conversation/ConversationSchemas.java,137,,"      addChildren(""body"", ""trustreq"");"
133277,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/schema/conversation/ConversationSchemas.java,147,,"      addChildren(""body"", ""invitation"");"
133278,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/schema/conversation/ConversationSchemas.java,158,,"      addAttrs(""bool-setting"", ""id"", ""live-value"", ""saved-value"");"
133279,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/schema/conversation/ConversationSchemas.java,168,,"      addChildren(""body"", ""experimental"");"
133280,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/schema/conversation/ConversationSchemas.java,170,,"      addChildren(""experimental"", ""namevaluepair"", ""part"");"
133281,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/schema/conversation/ConversationSchemas.java,185,,"      addAttrs(""extension_installer"", ""manifest"", ""img"", ""installed"");"
133282,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/schema/conversation/ConversationSchemas.java,248,,"          addChildren(null, ""conversation"");"
133283,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/schema/conversation/ConversationSchemas.java,253,,"          addChildren(""conversation"", ""blip"");"
133284,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/schema/conversation/ConversationSchemas.java,258,,"          addChildren(""blip"", ""thread"");"
133285,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/util/CollectionUtils.java,90,,"  @SuppressWarnings(""unchecked"")"
133286,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/util/CollectionUtils.java,155,,"      Preconditions.checkNotNull(key, ""StringMap cannot contain null keys"");"
133287,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/util/Preconditions.java,41,,"      throw new IndexOutOfBoundsException(""index ("" + index + "") must not be negative"");"
133288,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/model/util/Utf16Util.java,69,,"      Preconditions.illegalArgument(""Not a code point: 0x"" + Integer.toHexString(c));"
133289,./TargetProjects/incubator-retired-wave/wave/src/main/java/org/waveprotocol/wave/util/escapers/UnicodeEscaper.java,313,,"                ""' with value "" + (int) c);"
133290,./TargetProjects/incubator-retired-wave/wave/src/test/java/com/google/wave/api/AbstractRobotTest.java,152,,"    robot.setupOAuth(""consumerKey"", ""consumerSecret"", ""http://gmodules.com/api/rpc"");"
133291,./TargetProjects/incubator-retired-wave/wave/src/test/java/com/google/wave/api/AbstractRobotTest.java,261,,"    WaveletData waveletData = new WaveletData(""google.com!wave1"", ""google.com!conv+root"", ""blip1"","
133292,./TargetProjects/incubator-retired-wave/wave/src/test/java/com/google/wave/api/AbstractRobotTest.java,264,,"    BlipSubmittedEvent event1 = new BlipSubmittedEvent(null, null, ""foo@test.com"", 1l, ""blip1"");"
133293,./TargetProjects/incubator-retired-wave/wave/src/test/java/com/google/wave/api/AnnotationRobotTest.java,30,,"    Annotation annotation = new Annotation(""key"", ""value"", 5 , 10);"
133294,./TargetProjects/incubator-retired-wave/wave/src/test/java/com/google/wave/api/AnnotationRobotTest.java,30,,"    Annotation annotation = new Annotation(""key"", ""value"", 5 , 10);"
133295,./TargetProjects/incubator-retired-wave/wave/src/test/java/com/google/wave/api/AnnotationsRobotTest.java,32,,"    annotations.add(""name"", ""value"", 3, 5);"
133296,./TargetProjects/incubator-retired-wave/wave/src/test/java/com/google/wave/api/AnnotationsRobotTest.java,32,,"    annotations.add(""name"", ""value"", 3, 5);"
133297,./TargetProjects/incubator-retired-wave/wave/src/test/java/com/google/wave/api/AnnotationsRobotTest.java,54,,"    annotations.add(""name2"", ""value"", 3, 5);"
133298,./TargetProjects/incubator-retired-wave/wave/src/test/java/com/google/wave/api/BlipIteratorRobotTest.java,58,,"    Blip blip = new Blip(""blip1"", ""\n1 1 1"", null, null, wavelet);"
133299,./TargetProjects/incubator-retired-wave/wave/src/test/java/com/google/wave/api/BlipRobotTest.java,76,,"        Arrays.asList(new Annotation(""key"", ""val"", 2, 3)));"
133300,./TargetProjects/incubator-retired-wave/wave/src/test/java/com/google/wave/api/BlipRobotTest.java,91,,"        Arrays.asList(""robot@test.com"", ""user@test.com""), ""user@test.com"", 1000l, 123l,"
133301,./TargetProjects/incubator-retired-wave/wave/src/test/java/com/google/wave/api/BlipRobotTest.java,135,,"    blip.append(new Image(url, 100, 100, ""Cool pix.""));"
133302,./TargetProjects/incubator-retired-wave/wave/src/test/java/com/google/wave/api/BlipRobotTest.java,216,,"        Arrays.asList(new Annotation(key, ""bold"", 3, 6)));"
133303,./TargetProjects/incubator-retired-wave/wave/src/test/java/com/google/wave/api/BlipRobotTest.java,226,,"    blip.range(4, 12).annotate(key, ""italic"");"
133304,./TargetProjects/incubator-retired-wave/wave/src/test/java/com/google/wave/api/BlipRobotTest.java,253,,"    blip.range(3, 5).annotate(""foo"", ""bar"");"
133305,./TargetProjects/incubator-retired-wave/wave/src/test/java/com/google/wave/api/BlipRobotTest.java,392,,"    Blip blip = newBlip(""\nFoo bar."", Arrays.asList(new Annotation(ANNOTATION_KEY, ""bold"", 1, 3)));"
133306,./TargetProjects/incubator-retired-wave/wave/src/test/java/com/google/wave/api/OperationQueueRobotTest.java,49,,"    when(wavelet.getWaveId()).thenReturn(WaveId.of(""example.com"", ""wave1""));"
133307,./TargetProjects/incubator-retired-wave/wave/src/test/java/com/google/wave/api/TagsRobotTest.java,40,,"    assertTrue(tags.add(""tag1""));"
133308,./TargetProjects/incubator-retired-wave/wave/src/test/java/com/google/wave/api/TagsRobotTest.java,41,,"    assertTrue(tags.add(""tag2""));"
133309,./TargetProjects/incubator-retired-wave/wave/src/test/java/com/google/wave/api/WaveletRobotTest.java,44,,"  private static final WaveId WAVE_ID = WaveId.of(""example.com"", ""wave1"");"
133310,./TargetProjects/incubator-retired-wave/wave/src/test/java/com/google/wave/api/WaveletRobotTest.java,58,,"    blips.put(""blip1"", rootBlip);"
133311,./TargetProjects/incubator-retired-wave/wave/src/test/java/com/google/wave/api/WaveletRobotTest.java,60,,"    participants.add(""foo@bar.com"");"
133312,./TargetProjects/incubator-retired-wave/wave/src/test/java/com/google/wave/api/WaveletRobotTest.java,65,,"    wavelet = new Wavelet(WAVE_ID, WAVELET_ID, ""foo@bar.com"", 1l, 1l, ""Hello world"", ""blip1"","
133313,./TargetProjects/incubator-retired-wave/wave/src/test/java/com/google/wave/api/WaveletRobotTest.java,71,,"    wavelet.setTitle(""New title"");"
133314,./TargetProjects/incubator-retired-wave/wave/src/test/java/com/google/wave/api/WaveletRobotTest.java,182,,"    when(childBlip.getBlipId()).thenReturn(""childblipid"");"
133315,./TargetProjects/incubator-retired-wave/wave/src/test/java/com/google/wave/api/data/ApiViewTest.java,91,,"    api.insert(4, new Image(""id1"", ""caption""));"
133316,./TargetProjects/incubator-retired-wave/wave/src/test/java/com/google/wave/api/event/EventSerializerRobotTest.java,83,,"    when(blip.getBlipId()).thenReturn(""blip123"");"
133317,./TargetProjects/incubator-retired-wave/wave/src/test/java/com/google/wave/api/event/EventSerializerRobotTest.java,91,,"    EventMessageBundle bundle = new EventMessageBundle(""http://10.1.1.1"","
133318,./TargetProjects/incubator-retired-wave/wave/src/test/java/com/google/wave/api/event/EventSerializerRobotTest.java,92,,"        ""http://wave-active-api.example.com"");"
133319,./TargetProjects/incubator-retired-wave/wave/src/test/java/com/google/wave/api/robot/RobotNameTest.java,43,,"    RobotName address = RobotName.fromAddress(""robot@appspot.com"");"
133320,./TargetProjects/incubator-retired-wave/wave/src/test/java/com/google/wave/api/robot/RobotNameTest.java,65,,"        RobotName.fromAddress(""robot#1@appspot.com"").toEmailAddress());"
133321,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/box/server/authentication/AccountStoreLoginModuleTest.java,69,,"        ParticipantId.ofUnsafe(""haspwd@example.com""), new PasswordDigest(""pwd"".toCharArray())));"
133322,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/box/server/authentication/SessionManagerTest.java,98,,"    Mockito.when(jettySessionManager.getHttpSession(""abc123"")).thenReturn(session);"
133323,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/box/server/common/WaveletOperationSerializerTest.java,114,,"    m.characters(""hello"");"
133324,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/box/server/common/WaveletOperationSerializerTest.java,123,,"    m.characters(""world"");"
133325,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/box/server/frontend/UserManagerTest.java,49,,"  private static final WaveId W1 = WaveId.of(""example.com"", ""111"");"
133326,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/box/server/persistence/DeltaStoreTestBase.java,59,,"    WaveletName.of(WaveId.of(""example.com"", ""wave1""), WaveletId.of(""example.com"", ""wavelet1""));"
133327,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/box/server/robots/OperationContextImplTest.java,68,,"  private static final WaveId WAVE_ID = WaveId.of(""example.com"", ""waveid"");"
133328,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/box/server/robots/OperationContextImplTest.java,116,,"    assertEquals(""Expected operation id not to change"", OPERATION_ID, response.getId());"
133329,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/box/server/robots/active/ActiveApiServletTest.java,103,,"        convertRawEnumerationToGeneric(new StringTokenizer(""Authorization"")));"
133330,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/box/server/robots/dataapi/DataApiOAuthServletTest.java,168,,"    when(req.getMethod()).thenReturn(""GET"");"
133331,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/box/server/robots/dataapi/DataApiOAuthServletTest.java,271,,"    when(req.getMethod()).thenReturn(""POST"");"
133332,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/box/server/robots/dataapi/DataApiOAuthServletTest.java,275,,"    when(req.getParameter(""token"")).thenReturn(token);"
133333,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/box/server/robots/dataapi/DataApiTokenContainerTest.java,63,,"      container.getRequestTokenAccessor(""unknown"");"
133334,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/box/server/robots/dataapi/DataApiTokenContainerTest.java,64,,"      fail(""Expected OAuthProblemException"");"
133335,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/box/server/robots/operations/DocumentModifyServiceTest.java,179,,"        + ""<state name=\""author\"" value=\"""" + ALEX.getAddress()+ ""\""/>"""
133336,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/box/server/robots/operations/NotifyOperationServiceTest.java,89,,"        ""robot.notify"", OP_ID, Parameter.of(ParamsProperty.CAPABILITIES_HASH, NEW_HASH));"
133337,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/box/server/robots/operations/SearchServiceTest.java,78,,"    when(operation.getParameter(ParamsProperty.QUERY)).thenReturn(""in:inbox"");"
133338,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/box/server/robots/passive/EventGeneratorTest.java,180,,"    assertEquals(""Expected two events"", 2, messages.getEvents().size());"
133339,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/box/server/robots/passive/EventGeneratorTest.java,289,,"    XmlStringBuilder builder = XmlStringBuilder.createText(""some random content"");"
133340,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/box/server/robots/util/OperationUtilTest.java,86,,"    operation = new OperationRequest(""wavelet.fetch"", ""op1"", s(WAVE_ID), s(WAVELET_ID));"
133341,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/box/server/rpc/AuthenticationServletTest.java,64,,"  private static final ParticipantId USER = ParticipantId.ofUnsafe(""frodo@example.com"");"
133342,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/box/server/rpc/AuthenticationServletTest.java,80,,"        new HumanAccountDataImpl(USER, new PasswordDigest(""password"".toCharArray()));"
133343,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/box/server/rpc/UserRegistrationServletTest.java,73,,"    attemptToRegister(req, resp, ""foo@example.com"", ""internet"", false);"
133344,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/box/server/waveserver/SimpleSearchProviderImplTest.java,227,,"    SearchResult results = searchProvider.search(USER1, ""in:inbox"", 0, 20);"
133345,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/box/server/waveserver/WaveletContainerTest.java,191,,"      fail(""Should fail"");"
133346,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/doodad/link/LinkTest.java,49,,"    checkNormalize(""wave://example.com/abcd"", ""example.com!abcd"");"
133347,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/annotation/AnnotationHelperTest.java,50,,"    checkGetRangePrecedingLocation(""<x>hello</x>"", new Range(1, 2), new Range(1, 2), 3);"
133348,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/content/ContentTextNodeGwtTest.java,49,,"    ContentTextNode t1 = c.createTextNode(""hello"", root, null);"
133349,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/content/PainterRegistryTest.java,41,,"      throw new AssertionError(""Not implemented"");"
133350,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/extract/PasteAnnotationLogicTest.java,109,,"    useDocument(""<line/>abcd"");"
133351,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/extract/PasteExtractorGwtTest.java,104,,"    executeSimplePaste(""<line></line>|"", """");"
133352,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/extract/PasteExtractorGwtTest.java,131,,"    executePaste(""<line></line>|"", ""x<p></p>y"", ""<line></line>x<line></line>y"");"
133353,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/extract/PasteExtractorGwtTest.java,140,,"    executePaste(""<line></line>ab|cd<line></line>123"", ""x<p>y</p>z"","
133354,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/extract/RepairerGwtTest.java,92,,"    assertEquals(""hello <b>th</b>ere"", p.getImplNodelet().getInnerHTML());"
133355,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/extract/SubTreeXmlRendererTest.java,43,,"    testHelper(""<x></x>hello"", 0, 2, ""<x></x>"");"
133356,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/extract/SubTreeXmlRendererTest.java,48,,"    testHelper(""<x><y></y><z></z></x>"", 0, 1, ""<x></x>"");"
133357,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/extract/SubTreeXmlRendererTest.java,53,,"    testHelper(""<x><y></y><z></z></x>"", 1, 4, ""<y></y><z></z>"");"
133358,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/extract/SubTreeXmlRendererTest.java,70,,"    testHelper(""hello<x><y>world</y></x>"", 1, 7, ""ello<x><y></y></x>"");"
133359,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/extract/SubTreeXmlRendererTest.java,75,,"    testHelper(""hello<x><y>world</y></x><b></b>"", 1, 13, ""ello<x><y>world</y></x>"");"
133360,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/extract/TypingExtractorGwtTest.java,134,,"    init(""something"");"
133361,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/extract/TypingExtractorGwtTest.java,136,,"    typingSink.expectInsert(cpoint(t1, 0), ""abc"");"
133362,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/gwt/GwtRenderingMutationHandlerGwtTest.java,66,,"  @SuppressWarnings(""static"")"
133363,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/integration/ElementTestBase.java,50,,"    logger.trace().logXml(""Testing: "" + msg);"
133364,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/integration/OperationGwtTest.java,236,,"    abbreviations.add(""<l/>"", ""<"" + LineContainers.LINE_TAGNAME + ""/>"");"
133365,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/integration/OperationGwtTest.java,251,,"        ""<l/>abcd"","
133366,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/integration/OperationGwtTest.java,269,,"        ""<l/>a<i>bc</i><u>de</u>f"","
133367,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/integration/OperationGwtTest.java,317,,"        5, ""<br/>"","
133368,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/integration/OperationGwtTest.java,378,,"        ""<l/>ab|cd"","
133369,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/integration/OperationGwtTest.java,427,,"        ""<l/>a[bc]d"","
133370,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/integration/OperationGwtTest.java,457,,"        ""<l/>[ab]cd"","
133371,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/integration/OperationGwtTest.java,482,,"        ""<l/>ab[cd]"","
133372,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/integration/OperationGwtTest.java,539,,"    abbreviations.add(""<u>"", ""<label>"");"
133373,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/integration/OperationGwtTest.java,540,,"    abbreviations.add(""</u>"", ""</label>"");"
133374,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/integration/OperationGwtTest.java,617,,"        3, ""V<i>X</i><u>Y</u>ZZ"", 9,"
133375,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/integration/OperationGwtTest.java,788,,"        ""<l/>ab<i>cd</i>ef"","
133376,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/integration/ParagraphGwtTest.java,71,,"    abbreviations.add(""<p>"", ""<"" + tagName + ""></"" + tagName + "">"");"
133377,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/keys/KeyBindingRegistryIntegrationGwtTest.java,84,,"    editor.onJavaScriptEvent(""keypress"", rawEvent);"
133378,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/undo/EditorUndoManagerImplTest.java,55,,"    doc = DocProviders.POJO.parse(""<doc>hello</doc>"");"
133379,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/undo/EditorUndoManagerImplTest.java,95,,"    assertEquals(XmlStringBuilder.innerXml(doc).toString(), ""<doc>ahello</doc>"");"
133380,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/util/EditorAnnotationUtilTest.java,107,,"    useDocument(""howdy"", ""A:a:5:7"", ""X:x:4:7"", ""Y:y:3:8"");"
133381,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/util/EditorAnnotationUtilTest.java,107,,"    useDocument(""howdy"", ""A:a:5:7"", ""X:x:4:7"", ""Y:y:3:8"");"
133382,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/util/EditorAnnotationUtilTest.java,107,,"    useDocument(""howdy"", ""A:a:5:7"", ""X:x:4:7"", ""Y:y:3:8"");"
133383,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/util/EditorAnnotationUtilTest.java,107,,"    useDocument(""howdy"", ""A:a:5:7"", ""X:x:4:7"", ""Y:y:3:8"");"
133384,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/util/EditorAnnotationUtilTest.java,108,,"    useCaretAnnotations(""W:w"");"
133385,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/util/EditorAnnotationUtilTest.java,180,,"    useDocument(""howdy"", ""A:a:5:6"", ""X:x:4:7"", ""Y:y:3:8"");"
133386,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/util/PaddingBundleTest.java,51,,"    PaddingBundle bundle = PaddingBundle.applyPadding(document, ""word"", 3, 3);"
133387,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/util/PaddingBundleTest.java,57,,"    IndexedDocument<Node, Element, Text> document = createContent(""stuff"");"
133388,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/editor/util/PaddingBundleTest.java,66,,"    CHECK(bundle, "" word "", true, true);"
133389,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/gadget/StateMapGwtTest.java,53,,"    assertEquals(""a value"", ab.get(""a""));"
133390,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/gadget/StateMapGwtTest.java,54,,"    assertEquals(""b value"", ab.get(""b""));"
133391,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/gadget/StateMapGwtTest.java,57,,"    ab.put(""c"", ""c value"");"
133392,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/gadget/StateMapGwtTest.java,128,,"    assertTrue(map.has(""nullKey""));"
133393,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/gadget/StateMapGwtTest.java,188,,"          fail(""Ivalid key-value pair "" + key + "":"" + value);"
133394,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/gadget/renderer/ControllerGwtTest.java,392,,"    controller.simulateCallFromGadget(""1"", ""set_title"", ""Title 1"");"
133395,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/gadget/renderer/ControllerGwtTest.java,400,,"        ""1"", ""set_pref"", ""ignoredToken"", ""pref 1"", ""value 1"", ""pref 2"", ""value 2"");"
133396,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/gadget/renderer/ControllerGwtTest.java,400,,"        ""1"", ""set_pref"", ""ignoredToken"", ""pref 1"", ""value 1"", ""pref 2"", ""value 2"");"
133397,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/gadget/renderer/GadgetNonEditorGwtTest.java,80,,"        "" "" + TITLE_ATTRIBUTE + ""=\""\"""" +"
133398,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/util/ExtendedJSObjectGwtTest.java,47,,"    assertFalse(jsObj.hasBoolean(""stringValue""));"
133399,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/util/UrlParametersGwtTest.java,40,,"    assertEquals(""test1"", ""new"", u.getParameter(""act""));"
133400,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/client/util/UrlParametersGwtTest.java,41,,"    assertEquals(""test2"", null, u.getParameter(""cnv""));"
133401,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/concurrencycontrol/channel/ViewChannelImplTest.java,250,,"  private static final WaveletId WAVELET_ID = WaveletId.of(""example.com"", ""waveletId_1"");"
133402,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/concurrencycontrol/channel/ViewChannelImplTest.java,319,,"    waveViewService.lastSubmit().callback.onFailure(""WAVE_SERVER_ERROR"");"
133403,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/concurrencycontrol/channel/ViewChannelImplTest.java,420,,"      channel.onSuccess(""for testing"");"
133404,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/concurrencycontrol/channel/WaveletDeltaChannelImplTest.java,717,,"      fail(""Expected a ChannelException"");"
133405,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/concurrencycontrol/client/ClientAndServerTest.java,242,,"    TestConfig t = new TestConfig(""<blip><p>abc</p></blip>"", 2, true);"
133406,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/concurrencycontrol/client/ClientAndServerTest.java,266,,"    t.checkClientDoc(0, ""<blip><p>2X1X0Xabc</p></blip>"");"
133407,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/concurrencycontrol/client/ClientAndServerTest.java,275,,"    t.checkClientDoc(0, ""<blip><p>2EFX1ABXGH0Xabc</p></blip>"");"
133408,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/concurrencycontrol/client/ClientAndServerTest.java,304,,"    t.checkClientDoc(1, ""<blip><p>2EFX1XGH0Xabc</p></blip>"");"
133409,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/concurrencycontrol/client/ClientAndServerTest.java,449,,"    t.checkClientDoc(0, ""<blip><p>??2++E--FX1XGH0Xabc</p></blip>"");"
133410,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/concurrencycontrol/client/ClientAndServerTest.java,471,,"    t.checkClientDoc(0, ""<blip><p>0X1Xabc</p></blip>"");"
133411,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/concurrencycontrol/client/OT3Test.java,456,,"    t.init(0, ""<blip><p>abc</p></blip>"");"
133412,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/concurrencycontrol/client/OT3Test.java,827,,"    t.clientDoDocOps(""blip1"").checkClientSentOps(0).checkClientGotOps();"
133413,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/concurrencycontrol/client/OT3Test.java,829,,"    t.clientDoDocOps(""blip2"").checkClientSentOps(1).checkClientGotOps();"
133414,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/concurrencycontrol/client/OperationQueueTest.java,312,,"    queue.add(util.noOpDocOp(""blipA""));"
133415,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/concurrencycontrol/wave/CcBasedWaveViewTest.java,65,,"  private static final WaveId WAVE_ID = WaveId.of(""example.com"", ""waveId_1"");"
133416,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/concurrencycontrol/wave/CcBasedWaveViewTest.java,223,,"      throw new UnsupportedOperationException(""Unsupported for test"");"
133417,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/crypto/WaveSignatureVerifierTest.java,94,,"      fail(""expected exception, but didn't get it"");"
133418,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/media/model/AttachmentDataDocHelperTest.java,64,,"    String attachmentId = ""domain.com/some-id"";"
133419,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/account/MutableIndexabilityTestBase.java,38,,"    indexability.setIndexability(p(""public@a.gwave.com""), IndexDecision.NO);"
133420,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/account/ObservableRolesTestBase.java,49,,"    permissions.assign(p(""public@a.gwave.com""), Role.READ_ONLY);"
133421,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/account/ObservableRolesTestBase.java,52,,"    assertTrue(permissions.isPermitted(p(""jon@example.com""), Capability.WRITE));"
133422,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/conversation/DocumentBasedManifestTest.java,65,,"    when(anchorValue.get(AnchorKey.WAVELET)).thenReturn(""waveletid"");"
133423,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/conversation/DocumentBasedManifestTest.java,66,,"    when(anchorValue.get(AnchorKey.BLIP)).thenReturn(""blipid"");"
133424,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/conversation/DocumentBasedManifestTest.java,73,,"    target.setAnchor(new AnchorData(""newwavelet"", ""newblip""));"
133425,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/conversation/DocumentBasedManifestTest.java,73,,"    target.setAnchor(new AnchorData(""newwavelet"", ""newblip""));"
133426,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/conversation/DocumentBasedManifestThreadTest.java,80,,"    when(blips.add(""b+1"")).thenReturn(blip);"
133427,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/conversation/SchemaConstraintsTest.java,41,,"        BLIP_SCHEMA_CONSTRAINTS.permitsAttribute(""body"", ""x""));"
133428,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/conversation/SchemaConstraintsTest.java,42,,"    assertEquals(Collections.singletonList(""line""),"
133429,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/conversation/SchemaConstraintsTest.java,57,,"        BLIP_SCHEMA_CONSTRAINTS.permitsAttribute(""image"", ""attachment""));"
133430,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/conversation/SchemaConstraintsTest.java,61,,"        BLIP_SCHEMA_CONSTRAINTS.permitsAttribute(""image"", ""something""));"
133431,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/conversation/TagsDocumentTest.java,74,,"    doc.addTag(""new-tag"");"
133432,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/conversation/TitleHelperTest.java,69,,"    doc.setAnnotation(2, 7, TitleHelper.TITLE_KEY, ""Blah"");"
133433,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/conversation/TitleHelperTest.java,146,,"    assertEquals(""Some text!?.!"", TitleHelper.extractTitle(doc));"
133434,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/conversation/WaveletBasedConversationTest.java,281,,"    assertManifestXml(""<blip id=\"""" + first.getId() + ""\""></blip>"");"
133435,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/conversation/WaveletBasedConversationTest.java,281,,"    assertManifestXml(""<blip id=\"""" + first.getId() + ""\""></blip>"");"
133436,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/conversation/WaveletBasedConversationTest.java,293,,"    assertManifestXml(""<blip id=\"""" + blip.getId() + ""\"">"" +"
133437,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/conversation/WaveletBasedConversationTest.java,294,,"        ""<thread id=\"""" + firstReply.getId() + ""\"">"" +"
133438,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/conversation/WaveletBasedConversationTest.java,296,,"        ""</thread>"" +"
133439,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/conversation/WaveletBasedConversationTest.java,297,,"        ""</blip>"");"
133440,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/DocumentTestCases.java,138,,"          ""<p></p>"", ""<p>ab</p>"""
133441,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/DocumentTestCases.java,138,,"          ""<p></p>"", ""<p>ab</p>"""
133442,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/DocumentTestCases.java,150,,"          ""<p>"" +"
133443,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/DocumentTestCases.java,151,,"            ""<i>ab</i>"" +"
133444,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/DocumentTestCases.java,152,,"            ""cd "" +"
133445,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/DocumentTestCases.java,153,,"            ""<b>"" +"
133446,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/DocumentTestCases.java,155,,"              ""<i>fg</i>"" +"
133447,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/DocumentTestCases.java,156,,"            ""</b>"" +"
133448,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/DocumentTestCases.java,158,,"          ""</p>"","
133449,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/DocumentTestCases.java,282,,"          ""<p>abc</p>"", ""<p>12<u>34</u>56abc</p>"""
133450,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/DocumentTestCases.java,403,,"              new AttributesImpl(""href"", ""http://www.google.com/"")),"
133451,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/DocumentTestCases.java,403,,"              new AttributesImpl(""href"", ""http://www.google.com/"")),"
133452,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/DocumentTestCases.java,546,,"        .characters(""hello"")"
133453,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/DocumentTestCases.java,549,,"        .characters(""world"")"
133454,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/MutableDocumentImplTest.java,293,,"    init(""<p>abcdef</p>"");"
133455,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/MutableDocumentImplTest.java,294,,"    doc.setAnnotation(3, 6, ""style/color"", ""stix"");"
133456,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/MutableDocumentImplTest.java,348,,"      doc.setAnnotation(-1, 4, ""style/color"", ""frub"");"
133457,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/MutableDocumentImplTest.java,409,,"    doc.setAnnotation(1, 4, ""style/color"", ""spot"");"
133458,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/MutableDocumentImplTest.java,505,,"  @SuppressWarnings(""deprecation"") // resetAnnotationsInRange (method under test) is deprecated"
133459,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/indexed/IndexedDocumentImplTest.java,343,,"    IndexedDocument<Node, Element, Text> doc = DocProviders.POJO.parse(""abcdefg"");"
133460,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/indexed/NindoTestCases.java,154,,"          ""<p></p>"", ""<p>ab</p>"""
133461,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/indexed/NindoTestCases.java,154,,"          ""<p></p>"", ""<p>ab</p>"""
133462,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/indexed/NindoTestCases.java,166,,"          ""<p>"" +"
133463,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/indexed/NindoTestCases.java,167,,"            ""<i>ab</i>"" +"
133464,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/indexed/NindoTestCases.java,168,,"            ""cd "" +"
133465,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/indexed/NindoTestCases.java,169,,"            ""<b>"" +"
133466,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/indexed/NindoTestCases.java,171,,"              ""<i>fg</i>"" +"
133467,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/indexed/NindoTestCases.java,172,,"            ""</b>"" +"
133468,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/indexed/NindoTestCases.java,174,,"          ""</p>"","
133469,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/indexed/NindoTestCases.java,268,,"          ""<p>abc</p>"", ""<p>12<u>34</u>56abc</p>"""
133470,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/indexed/NindoTestCases.java,388,,"          Nindo.replaceAttributes(1, new AttributesImpl(""href"", ""http://www.google.com/"")),"
133471,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/indexed/NindoTestCases.java,388,,"          Nindo.replaceAttributes(1, new AttributesImpl(""href"", ""http://www.google.com/"")),"
133472,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/indexed/ObservableIndexedDocumentTest.java,95,,"  @SuppressWarnings(""unchecked"")"
133473,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/indexed/ObservableIndexedDocumentTest.java,104,,"    checkEvents(cd(0, 10, dl(st(""p"", NA), tt(""abc""), st(""b"", NA), tt(""def""), et(""b""), et(""p""))));"
133474,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/indexed/ObservableIndexedDocumentTest.java,104,,"    checkEvents(cd(0, 10, dl(st(""p"", NA), tt(""abc""), st(""b"", NA), tt(""def""), et(""b""), et(""p""))));"
133475,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/operation/ModifiableDocumentTestBase.java,41,,"            .initializationValues(""link"", ""12?\""\\3"").build();"
133476,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/operation/algorithm/DocOpTransformerTest.java,87,,"        DocOpCreator.deleteCharacters(20, 1, ""abcde""),"
133477,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/operation/algorithm/DocOpTransformerTest.java,128,,"        DocOpCreator.insertCharacters(20, 1, ""abc""),"
133478,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/operation/algorithm/DocOpTransformerTest.java,250,,"        DocOpCreator.replaceAttributes(20, 3, attributes(""name"", ""value""),"
133479,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/operation/algorithm/DocOpTransformerTest.java,250,,"        DocOpCreator.replaceAttributes(20, 3, attributes(""name"", ""value""),"
133480,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/operation/algorithm/DocOpTransformerTest.java,251,,"            attributes(""href"", ""http://www.google.com/"")),"
133481,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/operation/algorithm/DocOpTransformerTest.java,251,,"            attributes(""href"", ""http://www.google.com/"")),"
133482,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/operation/algorithm/DocOpTransformerTest.java,294,,"        DocOpCreator.insertCharacters(20, 6, ""hello""),"
133483,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/operation/algorithm/DocOpTransformerTest.java,338,,"            attributes(""href"", ""http://www.yahoo.com/"")),"
133484,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/operation/algorithm/DocOpTransformerTest.java,349,,"            attributes(""name"", ""Google!"")),"
133485,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/operation/algorithm/DocOpTransformerTest.java,375,,"        DocOpCreator.deleteElement(20, 6, ""type"", attributes(""name"", ""value"")),"
133486,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/operation/algorithm/DocOpTransformerTest.java,387,,"        DocOpCreator.setAttribute(20, 3, ""href"", ""initial"", ""http://www.google.com/""),"
133487,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/operation/algorithm/DocOpTransformerTest.java,550,,"            .deleteCharacters(""cdefg"")"
133488,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/operation/algorithm/DocOpTransformerTest.java,727,,"            .deleteElementStart(""sampleElement"", Attributes.EMPTY_MAP)"
133489,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/operation/algorithm/DocOpTransformerTest.java,728,,"            .deleteCharacters(""sample text"")"
133490,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/operation/algorithm/DocOpTransformerTest.java,919,,"        DocOpCreator.setAnnotation(20, 4, 6, ""hello"", null, ""world""),"
133491,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/operation/algorithm/DocOpTransformerTest.java,954,,"        DocOpCreator.deleteCharacters(20, 1, ""abcd""),"
133492,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/operation/algorithm/DocOpTransformerTest.java,1073,,"        DocOpCreator.setAnnotation(20, 5, 9, ""hi"", ""initial"", ""there""),"
133493,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/operation/impl/DocOpUtilTest.java,36,,"            .initializationValues(""link"", ""12?\""\\3"").build();"
133494,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/operation/impl/DocOpValidatorTest.java,60,,"        return null == parent && ""body"".equals(child)"
133495,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/operation/impl/DocOpValidatorTest.java,61,,"            || ""body"".equals(parent) && ""line"".equals(child)"
133496,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/operation/impl/DocOpValidatorTest.java,115,,"        m.elementStart(""blip"", Attributes.EMPTY_MAP);"
133497,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/parser/AnnotationParserTest.java,72,,"      fail(""Should've thrown exception"");"
133498,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/parser/ParserTest.java,89,,"        assertEquals(""abcm"", attr.first);"
133499,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/parser/ParserTest.java,90,,"        assertEquals(""hello"", attr.second);"
133500,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/parser/ParserTest.java,146,,"        assertEquals(""doc"", element.name);"
133501,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/parser/ParserTest.java,378,,"        assertEquals(""body"", parser.getTagName());"
133502,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/AnnotationRegistryTest.java,63,,"    registry.registerHandler(""a/b/c"", c);"
133503,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/AnnotationRegistryTest.java,65,,"    registry.registerHandler(""a/b/c/d"", d);"
133504,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/AnnotationRegistryTest.java,66,,"    registry.registerHandler(""a/b"", b);"
133505,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/AnnotationRegistryTest.java,97,,"    registry.registerHandler(""a/b/d"", d);"
133506,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/DocCompareTest.java,51,,"    same(STRUCTURE, ""abc"", ""abc"");"
133507,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/DocCompareTest.java,56,,"    same(STRUCTURE - TYPES, ""xyz<x>abc</x>def"", ""xyz<y>abc</y>def"");"
133508,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/DocCompareTest.java,62,,"    same(STRUCTURE, ""xyz<x a=\""b\"">abc</x>def"", ""xyz<x a=\""b\"">abc</x>def"");"
133509,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/DocHelperTest.java,59,,"    checkGetText(""<x>abc</x>"", 0, 0, """");"
133510,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/DocHelperTest.java,62,,"    checkGetText(""<x>abc</x>"", 1, 4, ""abc"");"
133511,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/DocHelperTest.java,64,,"    checkGetText(""<x><y>abc</y></x>"", 1, 6, ""abc"");"
133512,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/DocHelperTest.java,66,,"    checkGetText(""<x>a<b>b</b>c</x>"", 1, 6, ""abc"");"
133513,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/DocHelperTest.java,67,,"    checkGetText(""<x>abc<b></b></x>"", 1, 4, ""abc"");"
133514,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/DocHelperTest.java,72,,"    checkGetText(""<x>abc<b>x</b>def</x>"", 1, 10, ""abcxdef"");"
133515,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/DocHelperTest.java,76,,"    checkGetText(""<x><a>abc</a>def<b>ghi</b></x>"", 1, 14, ""abcdefghi"");"
133516,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/DocHelperTest.java,76,,"    checkGetText(""<x><a>abc</a>def<b>ghi</b></x>"", 1, 14, ""abcdefghi"");"
133517,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/DocHelperTest.java,85,,"    checkGetText(""<x><a>abc</a>def<b>ghi</b></x>"", 9, 14, ""ghi"");"
133518,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/DocHelperTest.java,106,,"    checkGetLocation(""<x><a><b>a</b>bc</a></x>"", 0, 0);"
133519,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/DocHelperTest.java,651,,"        assertEquals(""he^llo<x>t^<a><b><c>TT</c>here^</b>"" +"
133520,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/DocHelperTest.java,652,,"            "" how^</a> are you</x>y^eah<p><r></r><q></q></p>"","
133521,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/DocIterateTest.java,103,,"    for (Element e : DocIterate.deepElementsWithTagName(doc, ""foo"")) {"
133522,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/DocOpScrubTest.java,71,,"      ""xxxa"", ""a"", // test multiple similar keys to ensure they are unique-ified"
133523,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/DocOpScrubTest.java,91,,"      ""a@a"", ""a@a"","
133524,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/DocOpScrubTest.java,187,,"    b1.elementStart(""abc"", ATTRS);"
133525,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/LineContainersTest.java,47,,"      addChildren(null, ""body"");"
133526,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/LineContainersTest.java,49,,"      addChildren(""body"", ""line"", ""input"");"
133527,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/LineContainersTest.java,49,,"      addChildren(""body"", ""line"", ""input"");"
133528,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/LineContainersTest.java,68,,"    LineContainers.setTopLevelContainerTagname(""blah"");"
133529,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/LineContainersTest.java,298,,"    getDocWithSchema(""<body><line/>abc</body>"");"
133530,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/RangeTrackerTest.java,43,,"    String initialContent = ""abc"";"
133531,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/RawElementStyleViewTest.java,36,,"    assertEquals(null, view.getStylePropertyValue(view.getDocumentElement(), ""foo""));"
133532,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/TextLocatorTest.java,44,,"    checkFindCharacter(""<x>abcd</x>"", 1, ""a"", true, 1);"
133533,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/TextLocatorTest.java,52,,"    checkFindCharacter(""<x>ab<a/>cd</x>"", 1, ""a"", true, 1);"
133534,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/TextLocatorTest.java,59,,"    MutableDocument<Node, Element, Text> doc = DocProviders.MOJO.parse(""<x>hello</x>"");"
133535,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/XmlStringBuilderTest.java,47,,"    a.appendText(""blah"");"
133536,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/document/util/XmlStringBuilderTest.java,62,,"    check(5, ""hello"", a.appendText(""hello""));"
133537,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/experimental/schema/AttributesValidatorTest.java,71,,"        ""bad"", ""bad""));"
133538,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/experimental/schema/SchemaFactoryTest.java,49,,"          ""name1"", ""value1"","
133539,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/experimental/schema/SchemaFactoryTest.java,49,,"          ""name1"", ""value1"","
133540,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/experimental/schema/SchemaFactoryTest.java,50,,"          ""name2"", ""value2"");"
133541,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/experimental/schema/SchemaFactoryTest.java,66,,"    assertEquals(0, test.validateCharacters(""abcd""));"
133542,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/experimental/schema/SchemaFactoryTest.java,67,,"    assertNull(test.child(""bad""));"
133543,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/experimental/schema/SchemaFactoryTest.java,71,,"    assertEquals(""element1"", test_prologueTest_prologue.get(0).elementType());"
133544,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/experimental/schema/SchemaFactoryTest.java,72,,"    assertEquals(""element2"", test_prologueTest_prologue.get(1).elementType());"
133545,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/experimental/schema/SchemaFactoryTest.java,73,,"    assertEquals(""element3"", test_prologueTest_prologue.get(2).elementType());"
133546,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/experimental/schema/SchemaFactoryTest.java,93,,"    checkEmptyPattern(test_prologueTest_prologue0.child(""element4""));"
133547,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/experimental/schema/SchemaFactoryTest.java,96,,"    checkEmptyPattern(test_prologueTest_prologue2.child(""element5""));"
133548,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/experimental/schema/SchemaFactoryTest.java,97,,"    checkEmptyPattern(test_prologueTest_prologue2.child(""element6""));"
133549,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/experimental/schema/SchemaFactoryTest.java,115,,"        ""attribute1"", ""bad"")),"
133550,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/experimental/schema/SchemaFactoryTest.java,148,,"        ""bad"", ""abbbc"")),"
133551,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/experimental/schema/SchemaFactoryTest.java,151,,"        ""attribute2"", ""bad"")),"
133552,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/experimental/schema/SchemaFactoryTest.java,174,,"        ""attribute3"");"
133553,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/experimental/schema/SchemaFactoryTest.java,176,,"        ""attribute3"", ""value3"","
133554,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/experimental/schema/SchemaFactoryTest.java,183,,"        ""attribute4"", ""value4"","
133555,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/experimental/schema/SchemaFactoryTest.java,183,,"        ""attribute4"", ""value4"","
133556,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/experimental/schema/SchemaFactoryTest.java,184,,"        ""attribute5"", ""value5"")));"
133557,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/experimental/schema/SchemaFactoryTest.java,184,,"        ""attribute5"", ""value5"")));"
133558,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/experimental/schema/SchemaFactoryTest.java,237,,"        ""attribute6"", ""xyz"")),"
133559,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/experimental/schema/SchemaFactoryTest.java,237,,"        ""attribute6"", ""xyz"")),"
133560,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/experimental/schema/SchemaFactoryTest.java,240,,"        ""attribute6"", ""axyz"")),"
133561,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/experimental/schema/SchemaFactoryTest.java,243,,"        ""attribute6"", ""xyzb"")),"
133562,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/experimental/schema/SchemaFactoryTest.java,246,,"        ""attribute6"", ""axyzb"")));"
133563,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/experimental/schema/SchemaFactoryTest.java,306,,"    assertEquals(-1, test_element1.validateCharacters(""eeeeeeee""));"
133564,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/experimental/schema/SchemaFactoryTest.java,307,,"    assertEquals(-1, test_element1.validateCharacters(""ffffffff""));"
133565,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/experimental/schema/SchemaFactoryTest.java,309,,"    assertEquals(0, test_element1.validateCharacters(""aaaaaaaa""));"
133566,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/experimental/schema/SchemaFactoryTest.java,310,,"    assertEquals(0, test_element1.validateCharacters(""bbbbbbbb""));"
133567,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/id/IdAndNameJavaIoSerializationTest.java,39,,"    WaveId expected = WaveId.of(""example.com"", ""123"");"
133568,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/id/IdFilterTest.java,84,,"    assertTrue(IdFilter.accepts(IdFilters.ALL_IDS, wid(""anystring"")));"
133569,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/id/IdFilterTest.java,98,,"    IdFilter filter = IdFilter.ofIds(wid(""match-id""));"
133570,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/id/IdUtilTest.java,31,,"    WaveletId root = WaveletId.of(""example.com"", CONVERSATION_ROOT_WAVELET);"
133571,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/id/ModernIdSerialiserTest.java,32,,"    expectSerialisation(""example.com/id"", ""example.com"", ""id"");"
133572,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/id/SimplePrefixEscaperTest.java,39,,"    utilTestEscapeUnescape(""abc"", ""abc"");"
133573,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/id/SimplePrefixEscaperTest.java,151,,"    utilTestEscapedId(""google.com"", ""abc"");"
133574,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/id/WaveAndWaveletIdTest.java,49,,"    assertIdRejected(""example.com"", null);"
133575,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/operation/OpComparatorsLargeTest.java,112,,"                ""x y"", null, ""3"","
133576,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/operation/OpComparatorsLargeTest.java,135,,"    assertFalse(""\ndoc1: "" + doc1 + ""\ndoc2: "" + doc2,"
133577,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/operation/OpComparatorsLargeTest.java,135,,"    assertFalse(""\ndoc1: "" + doc1 + ""\ndoc2: "" + doc2,"
133578,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/operation/OpComparatorsLargeTest.java,150,,"                ""x\"" \""y"", null, ""3"","
133579,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/operation/testing/DomainRandomTester.java,77,,"      log.info(""Iteration: "" + iteration);"
133580,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/operation/testing/DomainRandomTester.java,92,,"                ""Subiteration: "" + i,"
133581,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/operation/testing/DomainRandomTester.java,140,,"                ""Initial state: "" + backup,"
133582,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/operation/testing/reference/AnnotationTamenessChecker.java,139,,"      throw new UnsupportedOperationException(""This method should never be called."");"
133583,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/operation/testing/reference/DeletionDeletionTransformer.java,288,,"      throw new UnsupportedOperationException(""This method should never be called."");"
133584,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/operation/testing/reference/InsertionDeletionTransformer.java,139,,"      throw new UnsupportedOperationException(""This method should never be called."");"
133585,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/operation/testing/reference/InsertionInsertionTransformer.java,116,,"      throw new UnsupportedOperationException(""This method should never be called."");"
133586,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/operation/testing/reference/InsertionPreservationTransformer.java,130,,"      throw new UnsupportedOperationException(""This method should never be called."");"
133587,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/operation/testing/reference/PreservationDeletionTransformer.java,69,,"      throw new InternalTransformException(""Incompatible operations in transformation"");"
133588,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/operation/testing/reference/PreservationDeletionTransformer.java,152,,"      throw new UnsupportedOperationException(""This method should never be called."");"
133589,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/operation/testing/reference/PreservationPreservationTransformer.java,335,,"      throw new UnsupportedOperationException(""This method should never be called."");"
133590,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/operation/wave/ParticipantTransformTest.java,54,,"      new WaveletOperationContext(new ParticipantId(""a@google.com""), 1L, 1L);"
133591,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/richtext/RichTextMutationBuilderTest.java,57,,"        token(RichTextTokenizer.Type.TEXT, ""foo"")));"
133592,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/richtext/RichTextMutationBuilderTest.java,61,,"        token(RichTextTokenizer.Type.TEXT, ""bar"")));"
133593,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/richtext/RichTextMutationBuilderTest.java,142,,"        RichTextTokenizer.Type.STYLE_FONT_WEIGHT_END, ""style/fontWeight"", ""bold"");"
133594,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/richtext/RichTextTokenizerImplTest.java,54,,"        token(RichTextTokenizer.Type.TEXT, ""foo""),"
133595,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/richtext/RichTextTokenizerImplTest.java,78,,"        token(RichTextTokenizer.Type.TEXT, ""bar""),"
133596,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/richtext/RichTextTokenizerImplTest.java,152,,"        token(RichTextTokenizer.Type.STYLE_FONT_WEIGHT_START, ""bold""),"
133597,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/richtext/RichTextTokenizerImplTest.java,162,,"        token(RichTextTokenizer.Type.STYLE_FONT_STYLE_START, ""italic""),"
133598,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/supplement/GadgetStateCollectionTest.java,53,,"    states.setGadgetState(GADGET1, ""key1"", ""value1 in 1"");"
133599,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/supplement/GadgetStateCollectionTest.java,53,,"    states.setGadgetState(GADGET1, ""key1"", ""value1 in 1"");"
133600,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/supplement/GadgetStateCollectionTest.java,57,,"    states.setGadgetState(GADGET2, ""key1"", ""value1 in 2"");"
133601,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/supplement/LiveSupplementedWaveImplAbuseTest.java,67,,"    attributes.put(DocumentBasedAbuseStore.COMMENT_ATTR, ""no comment"");"
133602,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/supplement/PrimitiveSupplementTestBase.java,50,,"    WaveletId wavelet1 = WaveletId.of(""google.com"", ""wavelet1"");"
133603,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/supplement/PrimitiveSupplementTestBase.java,50,,"    WaveletId wavelet1 = WaveletId.of(""google.com"", ""wavelet1"");"
133604,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/supplement/PrimitiveSupplementTestBase.java,51,,"    String blip1 = ""blip1"";"
133605,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/supplement/PrimitiveSupplementTestBase.java,72,,"    WaveletId wavelet2 = WaveletId.of(""google.com"", ""wavelet2"");"
133606,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/supplement/PrimitiveSupplementTestBase.java,280,,"    target.setGadgetState(gadget1, state1, ""State 1 in gadget 1"");"
133607,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/supplement/PrimitiveSupplementTestBase.java,285,,"    target.setGadgetState(gadget2, state1, ""State 1 in gadget 2"");"
133608,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/supplement/SupplementedWaveImplTest.java,509,,"    WaveletId waveletId1 = WaveletId.of(""example.com"", ""somewaveletid1"");"
133609,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/supplement/SupplementedWaveImplTest.java,509,,"    WaveletId waveletId1 = WaveletId.of(""example.com"", ""somewaveletid1"");"
133610,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/testing/RandomDocOpGenerator.java,404,,"                throw new RuntimeException(""Unexpected validation result"");"
133611,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/testing/RandomDocOpGenerator.java,408,,"            throw new RuntimeException(""Unexpected stage: "" + stage);"
133612,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/testing/RandomProviderImplTest.java,64,,"          assertTrue(""seed "" + seed + "", bound "" + bound + "", index "" + j + "", count "" + counts[j],"
133613,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/util/DocumentEventRouterTestBase.java,84,,"      @SuppressWarnings(""unchecked"")"
133614,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/util/PairTest.java,33,,"  final Pair<String,String> p1 = new Pair<String,String>(""Hi"", ""There"");"
133615,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/util/ValueUtilsTest.java,38,,"    assertFalse(ValueUtils.equal(null, ""foo""));"
133616,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/wave/WaveletDataTestBase.java,81,,"    target.createDocument(""root"", target.getCreator(), Collections.singletonList(target.getCreator()),"
133617,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/wave/WaveletDataTestBase.java,118,,"    ParticipantId fred = new ParticipantId(""fred@gwave.com"");"
133618,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/wave/WaveletDataTestBase.java,119,,"    ParticipantId jane = new ParticipantId(""jane@gwave.com"");"
133619,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/wave/data/impl/WaveViewDataImplTest.java,41,,"  private static final WaveId WAVE_ID = WaveId.of(""example.com"", ""wave"");"
133620,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/wave/undo/WaveAggregateOpTest.java,89,,"      WaveAggregateOp op2 = new WaveOpBuilder(CREATOR2_ID).docOp(""doc"", insertDocOp).build();"
133621,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/waveref/WaveRefTest.java,35,,"    WaveRef first = WaveRef.of(WaveId.of(""example.com"", ""w+1234abcd""));"
133622,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/waveref/WaveRefTest.java,35,,"    WaveRef first = WaveRef.of(WaveId.of(""example.com"", ""w+1234abcd""));"
133623,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/waveref/WaveRefTest.java,48,,"        WaveletId.of(""example.com"", ""conv+root""));"
133624,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/waveref/WaveRefTest.java,51,,"        ""b+12345"");"
133625,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/waveref/WaveRefTest.java,62,,"    WaveRef first = WaveRef.of(WaveId.of(""test.com"", ""w+1234""),"
133626,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/model/waveref/WaverefEncoderTest.java,105,,"    WaveId waveId = WaveId.of(""www.example.com"", ""abcdEFGH"");"
133627,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/util/logging/LogTest.java,120,,"    log.severe(""initial"");"
133628,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/util/logging/LogTest.java,121,,"    log.putContext(""something"", ""interesting"");"
133629,./TargetProjects/incubator-retired-wave/wave/src/test/java/org/waveprotocol/wave/util/logging/LogTest.java,121,,"    log.putContext(""something"", ""interesting"");"
133630,./TargetProjects/incubator-samoa/samoa-apex/src/main/java/org/apache/samoa/apex/topology/impl/ApexOperator.java,51,,"  @SuppressWarnings(""serial"")"
133631,./TargetProjects/incubator-samoa/samoa-api/src/main/java/org/apache/samoa/evaluation/measures/CMM.java,402,,"      cmdp.p.setMeasureValue(""CMM Type"", ""noise - cluster"");"
133632,./TargetProjects/incubator-samoa/samoa-api/src/main/java/org/apache/samoa/moa/core/AutoClassDiscovery.java,91,,"                if (relativeName.endsWith("".class"")) {"
133633,./TargetProjects/incubator-samoa/samoa-api/src/main/java/org/apache/samoa/moa/core/DataPoint.java,81,,"    sb.append(""<tr><td>Point</td><td>"" + timestamp + ""</td></tr>"");"
133634,./TargetProjects/incubator-samoa/samoa-api/src/main/java/org/apache/samoa/moa/core/Statistics.java,299,,"        throw new ArithmeticException(""lnGamma: Overflow"");"
133635,./TargetProjects/incubator-samoa/samoa-api/src/main/java/org/apache/samoa/moa/core/Utils.java,673,,"      if ((string.indexOf(""\\n"") != -1) || (string.indexOf(""\\r"") != -1) ||"
133636,./TargetProjects/incubator-samoa/samoa-api/src/main/java/org/apache/samoa/moa/core/Utils.java,673,,"      if ((string.indexOf(""\\n"") != -1) || (string.indexOf(""\\r"") != -1) ||"
133637,./TargetProjects/incubator-samoa/samoa-api/src/main/java/org/apache/samoa/tasks/KafkaTask.java,73,,"          ""inputTopic"");"
133638,./TargetProjects/incubator-samoa/samoa-api/src/main/java/org/apache/samoa/topology/TopologyBuilder.java,113,,"    Preconditions.checkNotNull(pi, ""Trying to connect to null PI"");"
133639,./TargetProjects/incubator-samoa/samoa-api/src/test/java/org/apache/samoa/streams/fs/HDFSFileStreamSourceTest.java,86,,"    writeSimpleFiles(BASE_DIR, ""txt"", 1);"
133640,./TargetProjects/incubator-samoa/samoa-api/src/test/java/org/apache/samoa/streams/fs/HDFSFileStreamSourceTest.java,89,,"    streamSource.init(config, BASE_DIR + ""/1.txt"", ""txt"");"
133641,./TargetProjects/incubator-samoa/samoa-api/src/test/java/org/apache/samoa/streams/fs/HDFSFileStreamSourceTest.java,92,,"    assertEquals(""Size of filePaths is not correct."", 1, streamSource.getFilePathListSize(), 0);"
133642,./TargetProjects/incubator-samoa/samoa-api/src/test/java/org/apache/samoa/streams/fs/LocalFileStreamSourceTest.java,66,,"    writeSimpleFiles(BASE_DIR, ""txt"", 1);"
133643,./TargetProjects/incubator-samoa/samoa-api/src/test/java/org/apache/samoa/streams/fs/LocalFileStreamSourceTest.java,74,,"    assertEquals(""Size of filePaths is not correct."", 1, streamSource.getFilePathListSize(), 0);"
133644,./TargetProjects/incubator-samoa/samoa-instances/src/main/java/org/apache/samoa/instances/InstancesHeader.java,59,,"      return ""[att "" + (attIndex + 1) + ""]"";"
133645,./TargetProjects/incubator-samoa/samoa-samza/src/main/java/org/apache/samoa/utils/SamzaConfigFactory.java,205,,"    nameList.add(""kafka0"");"
133646,./TargetProjects/incubator-samoa/samoa-samza/src/main/java/org/apache/samoa/utils/SamzaConfigFactory.java,270,,"    setValue(map, ""systems."" + SYSTEM_NAME + "".samza.factory"", SamoaSystemFactory.class.getName());"
133647,./TargetProjects/incubator-samoa/samoa-test/src/test/java/org/apache/samoa/TestUtils.java,110,,"        .assertEquals(""Unexpected column"", org.apache.samoa.TestParams.EVALUATION_INSTANCES, header.get(0).trim());"
133648,./TargetProjects/incubator-samoa/samoa-threads/src/test/java/org/apache/samoa/topology/impl/ThreadsEngineTest.java,52,,"    assertEquals(""Number of threads is not set correctly."", numThreads,"
133649,./TargetProjects/incubator-sdap-mudrod/core/src/main/java/org/apache/sdap/mudrod/driver/ESDriver.java,300,,"      fieldsToReturn.put(""DatasetLocationPolicy-BasePath"", ""DatasetLocationPolicy-BasePath"");"
133650,./TargetProjects/incubator-sdap-mudrod/core/src/main/java/org/apache/sdap/mudrod/driver/ESDriver.java,311,,"      fieldsToReturn.put(""Dataset-DatasetCoverage-StopTimeLong"", ""Dataset-DatasetCoverage-StopTimeLong"");"
133651,./TargetProjects/incubator-sdap-mudrod/core/src/main/java/org/apache/sdap/mudrod/driver/ESDriver.java,313,,"      fieldsToReturn.put(""Dataset-TemporalResolution"", ""Dataset-TemporalResolution"");"
133652,./TargetProjects/incubator-sdap-mudrod/core/src/main/java/org/apache/sdap/mudrod/ontology/pre/AggregateTriples.java,163,,"      String className = classElement.getAttributeValue(""about"", Namespace.getNamespace(""rdf"", rdf_namespace));"
133653,./TargetProjects/incubator-sdap-mudrod/core/src/main/java/org/apache/sdap/mudrod/ssearch/ranking/TrainingImporter.java,49,,"    es.deleteAllByQuery(props.getProperty(MudrodConstants.ES_INDEX_NAME), ""trainingranking"", QueryBuilders.matchAllQuery());"
133654,./TargetProjects/incubator-sdap-mudrod/core/src/main/java/org/apache/sdap/mudrod/tools/EONETIngester.java,158,,"                .field(""title"", event.get(""title""))"
133655,./TargetProjects/incubator-sdap-mudrod/core/src/main/java/org/apache/sdap/mudrod/tools/EONETIngester.java,159,,"                .field(""description"", event.get(""description""))"
133656,./TargetProjects/incubator-sdap-mudrod/core/src/main/java/org/apache/sdap/mudrod/tools/EONETIngester.java,160,,"                .field(""link"", event.get(""link""))"
133657,./TargetProjects/incubator-sdap-mudrod/core/src/main/java/org/apache/sdap/mudrod/tools/EONETIngester.java,162,,"                .field(""categories"", event.get(""categories"").getAsJsonArray())"
133658,./TargetProjects/incubator-sdap-mudrod/core/src/main/java/org/apache/sdap/mudrod/tools/EONETIngester.java,163,,"                .field(""sources"", event.get(""sources"").getAsJsonArray())"
133659,./TargetProjects/incubator-sdap-mudrod/core/src/main/java/org/apache/sdap/mudrod/tools/EONETIngester.java,164,,"                .field(""geometries"", event.get(""geometries"").getAsJsonArray())"
133660,./TargetProjects/incubator-sdap-mudrod/core/src/main/java/org/apache/sdap/mudrod/utils/LinkageTriple.java,101,,"        jsonBuilder.field(""concept_A"", triple.keyA);"
133661,./TargetProjects/incubator-sdap-mudrod/core/src/main/java/org/apache/sdap/mudrod/utils/LinkageTriple.java,113,,"      jsonBuilder.field(""weight"", tripleWeight);"
133662,./TargetProjects/incubator-sdap-mudrod/core/src/main/java/org/apache/sdap/mudrod/weblog/pre/LogAbstract.java,142,,"            .addAggregation(AggregationBuilders.terms(""Users"")"
133663,./TargetProjects/incubator-sdap-mudrod/core/src/main/java/org/apache/sdap/mudrod/weblog/pre/SessionGenerator.java,133,,"        update(es, logIndex, cleanupType, hit.getId(), ""SessionID"", ""invalid"");"
133664,./TargetProjects/incubator-sdap-mudrod/core/src/main/java/org/apache/sdap/mudrod/weblog/structure/log/RequestUrl.java,130,,"    if (mapRequest.get(""search"") != null) {"
133665,./TargetProjects/incubator-sdap-mudrod/core/src/main/java/org/apache/sdap/mudrod/weblog/structure/log/RequestUrl.java,134,,"        keyword = URLDecoder.decode(keyword.replaceAll(""%(?![0-9a-fA-F]{2})"", ""%25""), ""UTF-8"");"
133666,./TargetProjects/incubator-sdap-mudrod/core/src/main/java/org/apache/sdap/mudrod/weblog/structure/log/RequestUrl.java,134,,"        keyword = URLDecoder.decode(keyword.replaceAll(""%(?![0-9a-fA-F]{2})"", ""%25""), ""UTF-8"");"
133667,./TargetProjects/incubator-sdap-mudrod/core/src/main/java/org/apache/sdap/mudrod/weblog/structure/log/RequestUrl.java,134,,"        keyword = URLDecoder.decode(keyword.replaceAll(""%(?![0-9a-fA-F]{2})"", ""%25""), ""UTF-8"");"
133668,./TargetProjects/incubator-sdap-mudrod/core/src/main/java/org/apache/sdap/mudrod/weblog/structure/log/RequestUrl.java,135,,"        if (keyword.contains(""%2b"") || keyword.contains(""%20"") || keyword.contains(""%25"")) {"
133669,./TargetProjects/incubator-sdap-mudrod/core/src/main/java/org/apache/sdap/mudrod/weblog/structure/log/RequestUrl.java,135,,"        if (keyword.contains(""%2b"") || keyword.contains(""%20"") || keyword.contains(""%25"")) {"
133670,./TargetProjects/incubator-sdap-mudrod/core/src/main/java/org/apache/sdap/mudrod/weblog/structure/log/RequestUrl.java,141,,"        keyword = keyword.replaceAll(""[-+^:,*_\""]"", "" "").replace(""\\"", "" "").replaceAll(""\\s+"", "" "").trim();"
133671,./TargetProjects/incubator-sdap-mudrod/core/src/main/java/org/apache/sdap/mudrod/weblog/structure/log/RequestUrl.java,141,,"        keyword = keyword.replaceAll(""[-+^:,*_\""]"", "" "").replace(""\\"", "" "").replaceAll(""\\s+"", "" "").trim();"
133672,./TargetProjects/incubator-sdap-mudrod/core/src/main/java/org/apache/sdap/mudrod/weblog/structure/log/RequestUrl.java,152,,"    if (mapRequest.get(""ids"") != null && mapRequest.get(""values"") != null) {"
133673,./TargetProjects/incubator-sdap-mudrod/core/src/main/java/org/apache/sdap/mudrod/weblog/structure/log/RequestUrl.java,152,,"    if (mapRequest.get(""ids"") != null && mapRequest.get(""values"") != null) {"
133674,./TargetProjects/incubator-sdap-mudrod/core/src/main/java/org/apache/sdap/mudrod/weblog/structure/session/ClickStream.java,162,,"    jsonQuery += ""\""query\"":\"""" + this.keywords + ""\"","";"
133675,./TargetProjects/incubator-sdap-mudrod/core/src/main/java/org/apache/sdap/mudrod/weblog/structure/session/RankingTrainData.java,145,,"    jsonQuery += ""\""query\"":\"""" + this.query + ""\"","";"
133676,./TargetProjects/incubator-sdap-mudrod/core/src/main/java/org/apache/sdap/mudrod/weblog/structure/session/Session.java,207,,"    SearchResponse response = es.getClient().prepareSearch(indexName).setTypes(type).setQuery(QueryBuilders.termQuery(""SessionID"", sessionID)).setSize(100).addSort(""Time"", SortOrder.ASC)"
133677,./TargetProjects/incubator-sdap-mudrod/core/src/main/java/org/apache/sdap/mudrod/weblog/structure/session/SessionTree.java,71,,"    root = new SessionNode(props, ""root"", ""root"", """", """", 0);"
133678,./TargetProjects/incubator-sdap-mudrod/core/src/main/java/org/apache/sdap/mudrod/weblog/structure/session/SessionTree.java,161,,"    if (""datasetlist"".equals(node.getKey())) {"
133679,./TargetProjects/incubator-sdap-mudrod/core/src/main/java/org/apache/sdap/mudrod/weblog/structure/session/SessionTree.java,162,,"      json.addProperty(""icon"", ""./resources/images/searching.png"");"
133680,./TargetProjects/incubator-sdap-mudrod/core/src/main/java/org/apache/sdap/mudrod/weblog/structure/session/SessionTree.java,163,,"      json.addProperty(""name"", node.getRequest());"
133681,./TargetProjects/incubator-sdap-mudrod/core/src/main/java/org/apache/sdap/mudrod/weblog/structure/session/SessionTree.java,164,,"    } else if (""dataset"".equals(node.getKey())) {"
133682,./TargetProjects/incubator-sdap-mudrod/core/src/main/java/org/apache/sdap/mudrod/weblog/structure/session/SessionTree.java,167,,"    } else if (""ftp"".equals(node.getKey())) {"
133683,./TargetProjects/incubator-sdap-mudrod/core/src/test/java/org/apache/sdap/mudrod/main/TestMudrodEngine.java,66,,"    fail(""Not yet implemented""); // TODO"
133684,./TargetProjects/incubator-sdap-mudrod/core/src/test/java/org/apache/sdap/mudrod/ontology/process/TestLocalOntology.java,100,,"    fail(""Not yet implemented""); // TODO"
133685,./TargetProjects/incubator-sentry/sentry-binding/sentry-binding-hive-v2/src/main/java/org/apache/sentry/binding/hive/v2/authorizer/DefaultSentryValidator.java,341,,"        if (DEFAULT_DATABASE_NAME.equalsIgnoreCase(currDatabase) && ""false"""
133686,./TargetProjects/incubator-sentry/sentry-binding/sentry-binding-hive-v2/src/main/java/org/apache/sentry/binding/hive/v2/util/SimpleSemanticAnalyzer.java,40,,"      + ""(EXTERNAL\\s+)?"" + ""TABLE\\s+"" + ""(IF\\s+NOT\\s+EXISTS\\s+)?"" + ""([A-Za-z0-9._]+)"";"
133687,./TargetProjects/incubator-sentry/sentry-binding/sentry-binding-hive-v2/src/main/java/org/apache/sentry/binding/hive/v2/util/SimpleSemanticAnalyzer.java,40,,"      + ""(EXTERNAL\\s+)?"" + ""TABLE\\s+"" + ""(IF\\s+NOT\\s+EXISTS\\s+)?"" + ""([A-Za-z0-9._]+)"";"
133688,./TargetProjects/incubator-sentry/sentry-binding/sentry-binding-hive-v2/src/main/java/org/apache/sentry/binding/hive/v2/util/SimpleSemanticAnalyzer.java,76,,"  private static final String SHOW_INDEX_REGEX = ""^SHOW\\s+"" + ""(FORMATTED\\s+)?"""
133689,./TargetProjects/incubator-sentry/sentry-binding/sentry-binding-hive-v2/src/main/java/org/apache/sentry/binding/hive/v2/util/SimpleSemanticAnalyzer.java,279,,"      throw new HiveAuthzPluginException(""this command "" + cmd + "" is not match table meta grammar"");"
133690,./TargetProjects/incubator-sentry/sentry-binding/sentry-binding-hive/src/main/java/org/apache/sentry/binding/hive/HiveAuthzBindingHook.java,623,,"          ""false"".equalsIgnoreCase(authzConf."
133691,./TargetProjects/incubator-sentry/sentry-binding/sentry-binding-hive/src/main/java/org/apache/sentry/binding/hive/conf/HiveAuthzConf.java,100,,"    AUTHZ_RESTRICT_DEFAULT_DB(""sentry.hive.restrict.defaultDB"", ""false""),"
133692,./TargetProjects/incubator-sentry/sentry-binding/sentry-binding-hive/src/main/java/org/apache/sentry/binding/metastore/SentryMetastorePostEventListener.java,101,,"        "" since the operation failed. \n"");"
133693,./TargetProjects/incubator-sentry/sentry-binding/sentry-binding-hive/src/test/java/org/apache/sentry/binding/hive/TestHiveAuthzBindings.java,331,,"    authzConf.set(AuthzConfVars.SENTRY_TESTING_MODE.getVar(), ""false"");"
133694,./TargetProjects/incubator-sentry/sentry-binding/sentry-binding-hive/src/test/java/org/apache/sentry/binding/hive/TestSentryHiveAuthorizationTaskFactory.java,141,,"    expectSemanticException(""GRANT "" + ALL + "" ON TABLE "" + TABLE + "" TO USER "" + USER,"
133695,./TargetProjects/incubator-sentry/sentry-binding/sentry-binding-hive/src/test/java/org/apache/sentry/binding/hive/TestSentryHiveAuthorizationTaskFactory.java,141,,"    expectSemanticException(""GRANT "" + ALL + "" ON TABLE "" + TABLE + "" TO USER "" + USER,"
133696,./TargetProjects/incubator-sentry/sentry-binding/sentry-binding-hive/src/test/java/org/apache/sentry/binding/hive/TestSentryHiveAuthorizationTaskFactory.java,142,,"        SentryHiveConstants.GRANT_REVOKE_NOT_SUPPORTED_FOR_PRINCIPAL + ""USER"");"
133697,./TargetProjects/incubator-sentry/sentry-binding/sentry-binding-hive/src/test/java/org/apache/sentry/binding/hive/TestSentryHiveAuthorizationTaskFactory.java,151,,"        + "" TO ROLE "" + ROLE));"
133698,./TargetProjects/incubator-sentry/sentry-binding/sentry-binding-hive/src/test/java/org/apache/sentry/binding/hive/TestSentryHiveAuthorizationTaskFactory.java,153,,"    Assert.assertNotNull(""Grant should not be null"", grantDesc);"
133699,./TargetProjects/incubator-sentry/sentry-binding/sentry-binding-hive/src/test/java/org/apache/sentry/binding/hive/TestSentryHiveAuthorizationTaskFactory.java,161,,"    Assert.assertTrue(""Expected table"", grantDesc.getPrivilegeSubjectDesc()"
133700,./TargetProjects/incubator-sentry/sentry-binding/sentry-binding-hive/src/test/java/org/apache/sentry/binding/hive/TestSentryIniPolicyFileFormatter.java,69,,"    Set<String> roles = Sets.newHashSet(""role1"", ""role2"", ""role3"");"
133701,./TargetProjects/incubator-sentry/sentry-binding/sentry-binding-hive/src/test/java/org/apache/sentry/binding/hive/TestSentryIniPolicyFileFormatter.java,69,,"    Set<String> roles = Sets.newHashSet(""role1"", ""role2"", ""role3"");"
133702,./TargetProjects/incubator-sentry/sentry-binding/sentry-binding-hive/src/test/java/org/apache/sentry/binding/hive/TestSentryIniPolicyFileFormatter.java,69,,"    Set<String> roles = Sets.newHashSet(""role1"", ""role2"", ""role3"");"
133703,./TargetProjects/incubator-sentry/sentry-binding/sentry-binding-hive/src/test/java/org/apache/sentry/binding/hive/TestSentryIniPolicyFileFormatter.java,70,,"    groupRolesMap.put(""group1"", roles);"
133704,./TargetProjects/incubator-sentry/sentry-binding/sentry-binding-hive/src/test/java/org/apache/sentry/binding/hive/TestURI.java,50,,"    Assert.assertEquals(""file:///some/path"","
133705,./TargetProjects/incubator-sentry/sentry-binding/sentry-binding-kafka/src/test/java/org/apache/sentry/kafka/authorizer/SentryKafkaAuthorizerTest.java,73,,"    Assert.assertTrue(""Test failed."", authorizer.authorize(host1Session, Operation$.MODULE$.fromString(""Create""), clusterResource));"
133706,./TargetProjects/incubator-sentry/sentry-binding/sentry-binding-kafka/src/test/java/org/apache/sentry/kafka/authorizer/SentryKafkaAuthorizerTest.java,73,,"    Assert.assertTrue(""Test failed."", authorizer.authorize(host1Session, Operation$.MODULE$.fromString(""Create""), clusterResource));"
133707,./TargetProjects/incubator-sentry/sentry-binding/sentry-binding-kafka/src/test/java/org/apache/sentry/kafka/authorizer/SentryKafkaAuthorizerTest.java,74,,"    Assert.assertTrue(""Test failed."", authorizer.authorize(host1Session, Operation$.MODULE$.fromString(""Describe""), clusterResource));"
133708,./TargetProjects/incubator-sentry/sentry-binding/sentry-binding-kafka/src/test/java/org/apache/sentry/kafka/authorizer/SentryKafkaAuthorizerTest.java,75,,"    Assert.assertTrue(""Test failed."", authorizer.authorize(host1Session, Operation$.MODULE$.fromString(""ClusterAction""), clusterResource));"
133709,./TargetProjects/incubator-sentry/sentry-binding/sentry-binding-kafka/src/test/java/org/apache/sentry/kafka/authorizer/SentryKafkaAuthorizerTest.java,76,,"    Assert.assertTrue(""Test failed."", authorizer.authorize(host1Session, Operation$.MODULE$.fromString(""Read""), topic1Resource));"
133710,./TargetProjects/incubator-sentry/sentry-binding/sentry-binding-kafka/src/test/java/org/apache/sentry/kafka/authorizer/SentryKafkaAuthorizerTest.java,77,,"    Assert.assertTrue(""Test failed."", authorizer.authorize(host1Session, Operation$.MODULE$.fromString(""Write""), topic1Resource));"
133711,./TargetProjects/incubator-sentry/sentry-binding/sentry-binding-kafka/src/test/java/org/apache/sentry/kafka/authorizer/SentryKafkaAuthorizerTest.java,79,,"    Assert.assertTrue(""Test failed."", authorizer.authorize(host1Session, Operation$.MODULE$.fromString(""Delete""), topic1Resource));"
133712,./TargetProjects/incubator-sentry/sentry-binding/sentry-binding-kafka/src/test/java/org/apache/sentry/kafka/authorizer/SentryKafkaAuthorizerTest.java,80,,"    Assert.assertTrue(""Test failed."", authorizer.authorize(host1Session, Operation$.MODULE$.fromString(""Alter""), topic1Resource));"
133713,./TargetProjects/incubator-sentry/sentry-binding/sentry-binding-solr/src/test/java/org/apache/sentry/binding/solr/TestSolrAuthzBinding.java,61,,"  private SolrAuthzConf authzConf = new SolrAuthzConf(Resources.getResource(""sentry-site.xml""));"
133714,./TargetProjects/incubator-sentry/sentry-binding/sentry-binding-solr/src/test/java/org/apache/sentry/binding/solr/TestSolrAuthzBinding.java,186,,"      Assert.fail(""Expected SentryGroupNotFoundException"");"
133715,./TargetProjects/incubator-sentry/sentry-binding/sentry-binding-solr/src/test/java/org/apache/sentry/binding/solr/TestSolrAuthzBinding.java,241,,"      binding.getRoles(""corporal_role"");"
133716,./TargetProjects/incubator-sentry/sentry-binding/sentry-binding-solr/src/test/java/org/apache/sentry/binding/solr/TestSolrAuthzBinding.java,246,,"      binding.getRoles(""sergeant_role"");"
133717,./TargetProjects/incubator-sentry/sentry-core/sentry-core-common/src/main/java/org/apache/sentry/SentryVersionInfo.java,42,,"    return version != null ? version.version() : ""Unknown"";"
133718,./TargetProjects/incubator-sentry/sentry-core/sentry-core-common/src/test/java/org/apache/sentry/core/common/utils/TestPathUtils.java,43,,"      parseDFSURI(""hdfs://namenode:8020/user/hive/warehouse"", ""/tmp/hive-user""));"
133719,./TargetProjects/incubator-sentry/sentry-core/sentry-core-common/src/test/java/org/apache/sentry/core/common/utils/TestPathUtils.java,48,,"      PathUtils.parseDFSURI(""hdfs://namenode:8020/user/hive/warehouse"", ""tmp/hive-user"");"
133720,./TargetProjects/incubator-sentry/sentry-core/sentry-core-common/src/test/java/org/apache/sentry/core/common/utils/TestPathUtils.java,66,,"    assertEquals(""file:///tmp/hive-user"", PathUtils."
133721,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-common/src/gen/thrift/gen-javabean/org/apache/sentry/hdfs/service/thrift/SentryHDFSService.java,90,,"      sendBase(""handle_hms_notification"", args);"
133722,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-common/src/gen/thrift/gen-javabean/org/apache/sentry/hdfs/service/thrift/SentryHDFSService.java,110,,"      sendBase(""check_hms_seq_num"", args);"
133723,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-common/src/gen/thrift/gen-javabean/org/apache/sentry/hdfs/service/thrift/SentryHDFSService.java,134,,"      sendBase(""get_all_authz_updates_from"", args);"
133724,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-common/src/gen/thrift/gen-javabean/org/apache/sentry/hdfs/service/thrift/SentryHDFSService.java,158,,"      sendBase(""get_all_related_paths"", args);"
133725,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-common/src/gen/thrift/gen-javabean/org/apache/sentry/hdfs/service/thrift/SentryHDFSService.java,213,,"          throw new IllegalStateException(""Method call not finished!"");"
133726,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-common/src/gen/thrift/gen-javabean/org/apache/sentry/hdfs/service/thrift/SentryHDFSService.java,469,,"        if (fields == null) throw new IllegalArgumentException(""Field "" + fieldId + "" doesn't exist!"");"
133727,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-common/src/gen/thrift/gen-javabean/org/apache/sentry/hdfs/service/thrift/SentryHDFSService.java,469,,"        if (fields == null) throw new IllegalArgumentException(""Field "" + fieldId + "" doesn't exist!"");"
133728,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-common/src/gen/thrift/gen-javabean/org/apache/sentry/hdfs/service/thrift/SentryHDFSService.java,670,,"        sb.append(""null"");"
133729,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-common/src/gen/thrift/gen-javabean/org/apache/sentry/hdfs/service/thrift/SentryHDFSService.java,1038,,"    private static final org.apache.thrift.protocol.TField PATH_SEQ_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField(""pathSeqNum"", org.apache.thrift.protocol.TType.I64, (short)1);"
133730,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-common/src/gen/thrift/gen-javabean/org/apache/sentry/hdfs/service/thrift/SentryHDFSService.java,1394,,"    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField(""success"", org.apache.thrift.protocol.TType.I64, (short)0);"
133731,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-common/src/test/java/org/apache/sentry/hdfs/TestHMSPathsFullDump.java,43,,"    hmsPaths._addAuthzObject(""db1"", Lists.newArrayList(""/user/hive/warehouse/db1""));"
133732,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-common/src/test/java/org/apache/sentry/hdfs/TestHMSPathsFullDump.java,44,,"    hmsPaths._addAuthzObject(""db1.tbl11"", Lists.newArrayList(""/user/hive/warehouse/db1/tbl11""));"
133733,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-common/src/test/java/org/apache/sentry/hdfs/TestHMSPathsFullDump.java,55,,"    Assert.assertEquals(new HashSet<String>(Arrays.asList(""default"")), hmsPaths.findAuthzObject(new String[]{""user"", ""hive"", ""warehouse""}, false));"
133734,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-common/src/test/java/org/apache/sentry/hdfs/TestHMSPathsFullDump.java,55,,"    Assert.assertEquals(new HashSet<String>(Arrays.asList(""default"")), hmsPaths.findAuthzObject(new String[]{""user"", ""hive"", ""warehouse""}, false));"
133735,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-common/src/test/java/org/apache/sentry/hdfs/TestHMSPathsFullDump.java,55,,"    Assert.assertEquals(new HashSet<String>(Arrays.asList(""default"")), hmsPaths.findAuthzObject(new String[]{""user"", ""hive"", ""warehouse""}, false));"
133736,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-common/src/test/java/org/apache/sentry/hdfs/TestHMSPathsFullDump.java,57,,"    Assert.assertEquals(new HashSet<String>(Arrays.asList(""db1.tbl11"")), hmsPaths.findAuthzObject(new String[]{""user"", ""hive"", ""warehouse"", ""db1"", ""tbl11""}, false));"
133737,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-common/src/test/java/org/apache/sentry/hdfs/TestHMSPathsFullDump.java,61,,"    Assert.assertEquals(new HashSet<String>(Arrays.asList(""db1.tbl11"")), hmsPaths.findAuthzObject(new String[]{""user"", ""hive"", ""warehouse"", ""db1"", ""tbl11"", ""p1=1"", ""p2=x""}, false));"
133738,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-common/src/test/java/org/apache/sentry/hdfs/TestUpdateableAuthzPaths.java,36,,"    assertTrue(hmsPaths.findAuthzObjectExactMatches(new String[]{""db1""}).contains(""db1""));"
133739,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-common/src/test/java/org/apache/sentry/hdfs/TestUpdateableAuthzPaths.java,37,,"    assertTrue(hmsPaths.findAuthzObjectExactMatches(new String[]{""db1"", ""tbl11""}).contains(""db1.tbl11""));"
133740,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-common/src/test/java/org/apache/sentry/hdfs/TestUpdateableAuthzPaths.java,37,,"    assertTrue(hmsPaths.findAuthzObjectExactMatches(new String[]{""db1"", ""tbl11""}).contains(""db1.tbl11""));"
133741,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-common/src/test/java/org/apache/sentry/hdfs/TestUpdateableAuthzPaths.java,38,,"    assertTrue(hmsPaths.findAuthzObjectExactMatches(new String[]{""db1"", ""tbl11"", ""part111""}).contains(""db1.tbl11""));"
133742,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-common/src/test/java/org/apache/sentry/hdfs/TestUpdateableAuthzPaths.java,39,,"    assertTrue(hmsPaths.findAuthzObjectExactMatches(new String[]{""db1"", ""tbl11"", ""part112""}).contains(""db1.tbl11""));"
133743,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-common/src/test/java/org/apache/sentry/hdfs/TestUpdateableAuthzPaths.java,66,,"    assertTrue(authzPaths2.findAuthzObjectExactMatches(new String[]{""db2""}).contains(""db2""));"
133744,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-common/src/test/java/org/apache/sentry/hdfs/TestUpdateableAuthzPaths.java,79,,"    TPathChanges pathChange = update.newPathChange(""db1.tbl12"");"
133745,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-common/src/test/java/org/apache/sentry/hdfs/TestUpdateableAuthzPaths.java,96,,"    assertTrue(authzPaths.findAuthzObjectExactMatches(new String[]{""db1"", ""tbl12""}).contains(""db1.tbl12""));"
133746,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-common/src/test/java/org/apache/sentry/hdfs/TestUpdateableAuthzPaths.java,101,,"    update.newPathChange(""db1.xtbl11"").addToAddPaths(PathsUpdate.parsePath(""hdfs:///db1/xtbl11""));"
133747,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-namenode-plugin/src/test/java/org/apache/sentry/hdfs/TestSentryAuthorizationProvider.java,56,,"        System.getProperty(""user.name""), new String[] { ""supergroup"" });"
133748,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-namenode-plugin/src/test/java/org/apache/sentry/hdfs/TestSentryAuthorizationProvider.java,100,,"        fs.mkdirs(new Path(""/user/authz/xxx""));"
133749,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-namenode-plugin/src/test/java/org/apache/sentry/hdfs/TestSentryAuthorizationProvider.java,134,,"        Assert.assertEquals(""hive"", fs.getFileStatus(path).getOwner());"
133750,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-service/src/main/java/org/apache/sentry/hdfs/MetastorePlugin.java,201,,"    LOGGER.debug(""#### HMS Path Update ["""
133751,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-service/src/main/java/org/apache/sentry/hdfs/SentryHDFSServiceProcessor.java,60,,"            LOGGER.debug(""### Sending PATH preUpdate seq ["" + update.getSeqNum() + ""] ###"");"
133752,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-service/src/main/java/org/apache/sentry/hdfs/SentryHdfsMetricsUtil.java,49,,"      MetricRegistry.name(SentryHDFSServiceProcessor.class, ""handle-hms-notification""));"
133753,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-service/src/main/java/org/apache/sentry/hdfs/SentryPlugin.java,136,,"    LOGGER.debug(""Recieved Authz Path update ["" + update.getSeqNum() + ""].."");"
133754,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-service/src/main/java/org/apache/sentry/hdfs/SentryPlugin.java,148,,"    LOGGER.debug(""Authz Perm preUpdate ["" + update.getSeqNum() + "", "" + request.getRoleName() + ""].."");"
133755,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-service/src/test/java/org/apache/sentry/hdfs/TestMetastoreCacheInitializer.java,41,,"    Mockito.when(db1.getName()).thenReturn(""db1"");"
133756,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-service/src/test/java/org/apache/sentry/hdfs/TestMetastoreCacheInitializer.java,44,,"    Mockito.when(db2.getName()).thenReturn(""db2"");"
133757,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-service/src/test/java/org/apache/sentry/hdfs/TestMetastoreCacheInitializer.java,47,,"    Mockito.when(db3.getName()).thenReturn(""db3"");"
133758,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-service/src/test/java/org/apache/sentry/hdfs/TestMetastoreCacheInitializer.java,52,,"    Mockito.when(tab21.getTableName()).thenReturn(""tab21"");"
133759,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-service/src/test/java/org/apache/sentry/hdfs/TestMetastoreCacheInitializer.java,59,,"    Mockito.when(tab31.getTableName()).thenReturn(""tab31"");"
133760,./TargetProjects/incubator-sentry/sentry-hdfs/sentry-hdfs-service/src/test/java/org/apache/sentry/hdfs/TestUpdateForwarder.java,154,,"    imageRetreiver.setState(""a,b,c"");"
133761,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-db/src/test/java/org/apache/sentry/policy/db/TestDBWildcardPrivilege.java,34,,"      create(new KeyValue(""server"", ""server1""), new KeyValue(""db"", ALL));"
133762,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-db/src/test/java/org/apache/sentry/policy/db/TestDBWildcardPrivilege.java,34,,"      create(new KeyValue(""server"", ""server1""), new KeyValue(""db"", ALL));"
133763,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-db/src/test/java/org/apache/sentry/policy/db/TestDBWildcardPrivilege.java,36,,"      create(new KeyValue(""server"", ""server1""), new KeyValue(""db"", ""db1""));"
133764,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-db/src/test/java/org/apache/sentry/policy/db/TestDBWildcardPrivilege.java,38,,"      create(new KeyValue(""server"", ""server2""), new KeyValue(""db"", ALL));"
133765,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-db/src/test/java/org/apache/sentry/policy/db/TestDBWildcardPrivilege.java,47,,"      create(new KeyValue(""server"", ""server1""), new KeyValue(""uri"","
133766,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-db/src/test/java/org/apache/sentry/policy/db/TestDBWildcardPrivilege.java,236,,"    assertTrue(DBWildcardPrivilege.impliesURI(""hdfs://namenode:8020/path"","
133767,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-db/src/test/java/org/apache/sentry/policy/db/TestDBWildcardPrivilege.java,240,,"    assertTrue(DBWildcardPrivilege.impliesURI(""file:///path"","
133768,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-db/src/test/java/org/apache/sentry/policy/db/TestDBWildcardPrivilege.java,280,,"        new KeyValue(""db"", dbName), new KeyValue(""action"", ""ALL""));"
133769,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-db/src/test/java/org/apache/sentry/policy/db/TestPolicyParsingNegative.java,71,,"    append(""[groups]"", otherPolicyFile);"
133770,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-db/src/test/java/org/apache/sentry/policy/db/TestPolicyParsingNegative.java,73,,"    append(""[roles]"", otherPolicyFile);"
133771,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-db/src/test/java/org/apache/sentry/policy/db/TestPolicyParsingNegative.java,75,,"    PolicyEngine policy = new DBPolicyFileBackend(""server1"", globalPolicyFile.getPath());"
133772,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-db/src/test/java/org/apache/sentry/policy/db/TestPolicyParsingNegative.java,85,,"    policyFile = PolicyFile.setAdminOnServer1(""admin"");"
133773,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-db/src/test/java/org/apache/sentry/policy/db/TestResourceAuthorizationProviderSpecialCases.java,72,,"    policyFile.addGroupsToUser(user1.getName(), true, ""group1"", ""group1"")"
133774,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-db/src/test/java/org/apache/sentry/policy/db/TestResourceAuthorizationProviderSpecialCases.java,73,,"      .addRolesToGroup(""group1"",  true, ""role1"", ""role1"")"
133775,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-indexer/src/test/java/org/apache/sentry/policy/indexer/TestIndexerWildcardPrivilege.java,35,,"    Privilege indexer1 = create(new KeyValue(""indexer"", ""ind1""));"
133776,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-indexer/src/test/java/org/apache/sentry/policy/indexer/TestIndexerWildcardPrivilege.java,35,,"    Privilege indexer1 = create(new KeyValue(""indexer"", ""ind1""));"
133777,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-indexer/src/test/java/org/apache/sentry/policy/indexer/TestIndexerWildcardPrivilege.java,53,,"      create(new KeyValue(""indexer"", ""ind1""), new KeyValue(""action"", ""read""));"
133778,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-indexer/src/test/java/org/apache/sentry/policy/indexer/TestIndexerWildcardPrivilege.java,53,,"      create(new KeyValue(""indexer"", ""ind1""), new KeyValue(""action"", ""read""));"
133779,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-indexer/src/test/java/org/apache/sentry/policy/indexer/TestIndexerWildcardPrivilege.java,55,,"      create(new KeyValue(""indexer"", ""ind1""), new KeyValue(""action"", ""write""));"
133780,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-indexer/src/test/java/org/apache/sentry/policy/indexer/TestIndexerWildcardPrivilege.java,131,,"       create(new KeyValue(""indexer"", ""index1""), new KeyValue(""action"", ALL));"
133781,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-kafka/src/test/java/org/apache/sentry/policy/kafka/TestKafkaPrivilegeValidator.java,49,,"      Assert.fail(""Expected ConfigurationException"");"
133782,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-kafka/src/test/java/org/apache/sentry/policy/kafka/TestKafkaWildcardPrivilege.java,31,,"      create(new KeyValue(""HOST"", ""host1""), new KeyValue(""action"", KafkaActionConstant.ALL));"
133783,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-kafka/src/test/java/org/apache/sentry/policy/kafka/TestKafkaWildcardPrivilege.java,31,,"      create(new KeyValue(""HOST"", ""host1""), new KeyValue(""action"", KafkaActionConstant.ALL));"
133784,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-kafka/src/test/java/org/apache/sentry/policy/kafka/TestKafkaWildcardPrivilege.java,31,,"      create(new KeyValue(""HOST"", ""host1""), new KeyValue(""action"", KafkaActionConstant.ALL));"
133785,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-kafka/src/test/java/org/apache/sentry/policy/kafka/TestKafkaWildcardPrivilege.java,38,,"      create(new KeyValue(""HOST"", ""host1""), new KeyValue(""TOPIC"", ""topic1""), new KeyValue(""action"", KafkaActionConstant.ALL));"
133786,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-kafka/src/test/java/org/apache/sentry/policy/kafka/TestKafkaWildcardPrivilege.java,38,,"      create(new KeyValue(""HOST"", ""host1""), new KeyValue(""TOPIC"", ""topic1""), new KeyValue(""action"", KafkaActionConstant.ALL));"
133787,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-kafka/src/test/java/org/apache/sentry/policy/kafka/provider/TestKafkaPolicyNegative.java,60,,"    append(""[groups]"", globalPolicyFile);"
133788,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-kafka/src/test/java/org/apache/sentry/policy/kafka/provider/TestKafkaPolicyNegative.java,62,,"    append(""[roles]"", globalPolicyFile);"
133789,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-search/src/test/java/org/apache/sentry/policy/search/TestSearchWildcardPrivilege.java,35,,"    Privilege collection1 = create(new KeyValue(""collection"", ""coll1""));"
133790,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-search/src/test/java/org/apache/sentry/policy/search/TestSearchWildcardPrivilege.java,35,,"    Privilege collection1 = create(new KeyValue(""collection"", ""coll1""));"
133791,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-search/src/test/java/org/apache/sentry/policy/search/TestSearchWildcardPrivilege.java,53,,"      create(new KeyValue(""collection"", ""coll1""), new KeyValue(""action"", ""query""));"
133792,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-search/src/test/java/org/apache/sentry/policy/search/TestSearchWildcardPrivilege.java,53,,"      create(new KeyValue(""collection"", ""coll1""), new KeyValue(""action"", ""query""));"
133793,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-search/src/test/java/org/apache/sentry/policy/search/TestSearchWildcardPrivilege.java,55,,"      create(new KeyValue(""collection"", ""coll1""), new KeyValue(""action"", ""update""));"
133794,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-sqoop/src/test/java/org/apache/sentry/policy/sqoop/TestSqoopPolicyNegative.java,65,,"    append(""[groups]"", globalPolicyFile);"
133795,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-sqoop/src/test/java/org/apache/sentry/policy/sqoop/TestSqoopPolicyNegative.java,67,,"    append(""[roles]"", globalPolicyFile);"
133796,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-sqoop/src/test/java/org/apache/sentry/policy/sqoop/TestSqoopPolicyNegative.java,69,,"    PolicyEngine policy = new SqoopPolicyFileProviderBackend(""server1"", globalPolicyFile.getPath());"
133797,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-sqoop/src/test/java/org/apache/sentry/policy/sqoop/TestSqoopWildcardPrivilege.java,31,,"      create(new KeyValue(""SERVER"", ""server1""), new KeyValue(""action"", SqoopActionConstant.ALL));"
133798,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-sqoop/src/test/java/org/apache/sentry/policy/sqoop/TestSqoopWildcardPrivilege.java,31,,"      create(new KeyValue(""SERVER"", ""server1""), new KeyValue(""action"", SqoopActionConstant.ALL));"
133799,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-sqoop/src/test/java/org/apache/sentry/policy/sqoop/TestSqoopWildcardPrivilege.java,31,,"      create(new KeyValue(""SERVER"", ""server1""), new KeyValue(""action"", SqoopActionConstant.ALL));"
133800,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-sqoop/src/test/java/org/apache/sentry/policy/sqoop/TestSqoopWildcardPrivilege.java,38,,"      create(new KeyValue(""SERVER"", ""server1""), new KeyValue(""JOB"", ""job1""), new KeyValue(""action"", SqoopActionConstant.ALL));"
133801,./TargetProjects/incubator-sentry/sentry-policy/sentry-policy-sqoop/src/test/java/org/apache/sentry/policy/sqoop/TestSqoopWildcardPrivilege.java,38,,"      create(new KeyValue(""SERVER"", ""server1""), new KeyValue(""JOB"", ""job1""), new KeyValue(""action"", SqoopActionConstant.ALL));"
133802,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-cache/src/test/java/org/apache/sentry/provider/cache/TestCacheProvider.java,71,,"        backend.getPrivileges(Sets.newHashSet(""manager""), ActiveRoleSet.ALL));"
133803,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/generic/service/thrift/SentryGenericPolicyService.java,122,,"      sendBase(""create_sentry_role"", args);"
133804,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/generic/service/thrift/SentryGenericPolicyService.java,145,,"      sendBase(""drop_sentry_role"", args);"
133805,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/generic/service/thrift/SentryGenericPolicyService.java,168,,"      sendBase(""alter_sentry_role_grant_privilege"", args);"
133806,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/generic/service/thrift/SentryGenericPolicyService.java,191,,"      sendBase(""alter_sentry_role_revoke_privilege"", args);"
133807,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/generic/service/thrift/SentryGenericPolicyService.java,214,,"      sendBase(""alter_sentry_role_add_groups"", args);"
133808,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/generic/service/thrift/SentryGenericPolicyService.java,237,,"      sendBase(""alter_sentry_role_delete_groups"", args);"
133809,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/generic/service/thrift/SentryGenericPolicyService.java,260,,"      sendBase(""list_sentry_roles_by_group"", args);"
133810,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/generic/service/thrift/SentryGenericPolicyService.java,283,,"      sendBase(""list_sentry_privileges_by_role"", args);"
133811,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/generic/service/thrift/SentryGenericPolicyService.java,306,,"      sendBase(""list_sentry_privileges_for_provider"", args);"
133812,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/generic/service/thrift/SentryGenericPolicyService.java,329,,"      sendBase(""list_sentry_privileges_by_authorizable"", args);"
133813,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/generic/service/thrift/SentryGenericPolicyService.java,352,,"      sendBase(""drop_sentry_privilege"", args);"
133814,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/generic/service/thrift/SentryGenericPolicyService.java,375,,"      sendBase(""rename_sentry_privilege"", args);"
133815,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/generic/service/thrift/SentryGenericPolicyService.java,430,,"          throw new IllegalStateException(""Method call not finished!"");"
133816,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/generic/service/thrift/SentryGenericPolicyService.java,1063,,"    private static final org.apache.thrift.protocol.TField REQUEST_FIELD_DESC = new org.apache.thrift.protocol.TField(""request"", org.apache.thrift.protocol.TType.STRUCT, (short)1);"
133817,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/generic/service/thrift/SentryGenericPolicyService.java,1103,,"        if (fields == null) throw new IllegalArgumentException(""Field "" + fieldId + "" doesn't exist!"");"
133818,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/generic/service/thrift/SentryGenericPolicyService.java,1103,,"        if (fields == null) throw new IllegalArgumentException(""Field "" + fieldId + "" doesn't exist!"");"
133819,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/generic/service/thrift/SentryGenericPolicyService.java,1302,,"      sb.append(""request:"");"
133820,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/generic/service/thrift/SentryGenericPolicyService.java,1304,,"        sb.append(""null"");"
133821,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/generic/service/thrift/SentryGenericPolicyService.java,1426,,"    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField(""success"", org.apache.thrift.protocol.TType.STRUCT, (short)0);"
133822,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/generic/service/thrift/SentryGenericPolicyService.java,1665,,"      sb.append(""success:"");"
133823,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/generic/service/thrift/TAlterSentryRoleAddGroupsRequest.java,598,,"      sb.append(""null"");"
133824,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/generic/service/thrift/TAlterSentryRoleDeleteGroupsRequest.java,598,,"      sb.append(""null"");"
133825,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/generic/service/thrift/TAlterSentryRoleGrantPrivilegeRequest.java,578,,"      sb.append(""null"");"
133826,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/generic/service/thrift/TAlterSentryRoleRevokePrivilegeRequest.java,578,,"      sb.append(""null"");"
133827,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/generic/service/thrift/TListSentryPrivilegesByAuthRequest.java,761,,"      sb.append(""null"");"
133828,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/generic/service/thrift/TListSentryPrivilegesForProviderRequest.java,690,,"      sb.append(""null"");"
133829,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/generic/service/thrift/TListSentryPrivilegesRequest.java,670,,"      sb.append(""null"");"
133830,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/generic/service/thrift/TRenamePrivilegesRequest.java,691,,"      sb.append(""null"");"
133831,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/generic/service/thrift/TSentryPrivilege.java,747,,"      sb.append(""null"");"
133832,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/service/thrift/SentryPolicyService.java,134,,"      sendBase(""create_sentry_role"", args);"
133833,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/service/thrift/SentryPolicyService.java,157,,"      sendBase(""drop_sentry_role"", args);"
133834,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/service/thrift/SentryPolicyService.java,180,,"      sendBase(""alter_sentry_role_grant_privilege"", args);"
133835,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/service/thrift/SentryPolicyService.java,203,,"      sendBase(""alter_sentry_role_revoke_privilege"", args);"
133836,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/service/thrift/SentryPolicyService.java,226,,"      sendBase(""alter_sentry_role_add_groups"", args);"
133837,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/service/thrift/SentryPolicyService.java,249,,"      sendBase(""alter_sentry_role_delete_groups"", args);"
133838,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/service/thrift/SentryPolicyService.java,272,,"      sendBase(""list_sentry_roles_by_group"", args);"
133839,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/service/thrift/SentryPolicyService.java,295,,"      sendBase(""list_sentry_privileges_by_role"", args);"
133840,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/service/thrift/SentryPolicyService.java,318,,"      sendBase(""list_sentry_privileges_for_provider"", args);"
133841,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/service/thrift/SentryPolicyService.java,341,,"      sendBase(""drop_sentry_privilege"", args);"
133842,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/service/thrift/SentryPolicyService.java,364,,"      sendBase(""rename_sentry_privilege"", args);"
133843,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/service/thrift/SentryPolicyService.java,387,,"      sendBase(""list_sentry_privileges_by_authorizable"", args);"
133844,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/service/thrift/SentryPolicyService.java,410,,"      sendBase(""get_sentry_config_value"", args);"
133845,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/service/thrift/SentryPolicyService.java,433,,"      sendBase(""export_sentry_mapping_data"", args);"
133846,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/service/thrift/SentryPolicyService.java,456,,"      sendBase(""import_sentry_mapping_data"", args);"
133847,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/service/thrift/SentryPolicyService.java,511,,"          throw new IllegalStateException(""Method call not finished!"");"
133848,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/service/thrift/SentryPolicyService.java,1303,,"    private static final org.apache.thrift.protocol.TField REQUEST_FIELD_DESC = new org.apache.thrift.protocol.TField(""request"", org.apache.thrift.protocol.TType.STRUCT, (short)1);"
133849,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/service/thrift/SentryPolicyService.java,1343,,"        if (fields == null) throw new IllegalArgumentException(""Field "" + fieldId + "" doesn't exist!"");"
133850,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/service/thrift/SentryPolicyService.java,1343,,"        if (fields == null) throw new IllegalArgumentException(""Field "" + fieldId + "" doesn't exist!"");"
133851,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/service/thrift/SentryPolicyService.java,1542,,"      sb.append(""request:"");"
133852,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/service/thrift/SentryPolicyService.java,1544,,"        sb.append(""null"");"
133853,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/service/thrift/SentryPolicyService.java,1666,,"    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField(""success"", org.apache.thrift.protocol.TType.STRUCT, (short)0);"
133854,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/service/thrift/SentryPolicyService.java,1905,,"      sb.append(""success:"");"
133855,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/service/thrift/TAlterSentryRoleGrantPrivilegeRequest.java,595,,"      sb.append(""null"");"
133856,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/service/thrift/TAlterSentryRoleRevokePrivilegeRequest.java,595,,"      sb.append(""null"");"
133857,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/service/thrift/TListSentryPrivilegesByAuthRequest.java,615,,"      sb.append(""null"");"
133858,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/service/thrift/TSentryAuthorizable.java,563,,"      sb.append(""null"");"
133859,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/gen/thrift/gen-javabean/org/apache/sentry/provider/db/service/thrift/TSentryPrivilege.java,882,,"      sb.append(""null"");"
133860,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/provider/db/generic/service/thrift/NotificationHandlerInvoker.java,45,,"        LOGGER.debug(""Calling "" + handler);"
133861,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/provider/db/generic/service/thrift/NotificationHandlerInvoker.java,49,,"        LOGGER.error(""Unexpected error in "" + handler + "". Request: """
133862,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/provider/db/generic/service/thrift/NotificationHandlerInvoker.java,49,,"        LOGGER.error(""Unexpected error in "" + handler + "". Request: """
133863,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/provider/db/generic/service/thrift/NotificationHandlerInvoker.java,50,,"                     + request + "", Response: "" + response, ex);"
133864,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/provider/db/service/model/MSentryGMPrivilege.java,443,,"    query.append(""serviceName == \"""" + toNULLCol(privilege.getServiceName()) + ""\"" "");"
133865,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/provider/db/service/model/MSentryGMPrivilege.java,460,,"        query.append(""&& "" + resourceName + "" == \"""" + NULL_COL + ""\"" "");"
133866,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/provider/db/service/model/MSentryGMPrivilege.java,460,,"        query.append(""&& "" + resourceName + "" == \"""" + NULL_COL + ""\"" "");"
133867,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/provider/db/service/persistent/HAContext.java,90,,"      saslACL.add(new ACL(Perms.ALL, new Id(""sasl"", getServicePrincipal(conf,"
133868,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/provider/db/service/persistent/SentryStore.java,289,,"    query.setFilter(""this.roleName == t"");"
133869,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/provider/db/service/persistent/SentryStore.java,290,,"    query.declareParameters(""java.lang.String t"");"
133870,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/provider/db/service/persistent/SentryStore.java,333,,"      throw new SentryAlreadyExistsException(""Role: "" + roleName);"
133871,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/provider/db/service/persistent/SentryStore.java,449,,"      throw new SentryNoSuchObjectException(""Role: "" + roleName + "" doesn't exist"");"
133872,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/provider/db/service/persistent/SentryStore.java,691,,"    query.declareVariables(""org.apache.sentry.provider.db.service.model.MSentryRole role"");"
133873,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/provider/db/service/persistent/SentryStore.java,694,,"      rolesFiler.add(""role.roleName == \"""" + rName.trim().toLowerCase() + ""\"""");"
133874,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/provider/db/service/persistent/SentryStore.java,696,,"    StringBuilder filters = new StringBuilder(""roles.contains(role) """
133875,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/provider/db/service/persistent/SentryStore.java,697,,"        + ""&& ("" + Joiner.on("" || "").join(rolesFiler) + "")"");"
133876,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/provider/db/service/persistent/SentryStore.java,697,,"        + ""&& ("" + Joiner.on("" || "").join(rolesFiler) + "")"");"
133877,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/provider/db/service/persistent/SentryStore.java,733,,"          + toNULLCol(safeTrimLower(tPriv.getServerName())) + ""\"" "");"
133878,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/provider/db/service/persistent/SentryStore.java,846,,"      query.setFilter(""this.groupName == t"");"
133879,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/provider/db/service/thrift/NotificationHandlerInvoker.java,56,,"        LOGGER.debug(""Calling "" + handler);"
133880,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/provider/db/service/thrift/NotificationHandlerInvoker.java,60,,"        LOGGER.error(""Unexpected error in "" + handler + "". Request: """
133881,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/provider/db/service/thrift/NotificationHandlerInvoker.java,60,,"        LOGGER.error(""Unexpected error in "" + handler + "". Request: """
133882,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/provider/db/service/thrift/NotificationHandlerInvoker.java,61,,"                     + request + "", Response: "" + response, ex);"
133883,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/provider/db/service/thrift/SentryPolicyStoreProcessor.java,219,,"      throw new SentryAccessDeniedException(""Access denied to "" + requestorUser);"
133884,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/provider/db/service/thrift/SentryPolicyStoreProcessor.java,237,,"      String msg = ""Role: "" + request + "" already exists."";"
133885,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/provider/db/service/thrift/SentryPolicyStoreProcessor.java,247,,"      String msg = ""Unknown error for request: "" + request + "", message: "" + e.getMessage();"
133886,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/provider/db/service/thrift/SentryPolicyStoreProcessor.java,247,,"      String msg = ""Unknown error for request: "" + request + "", message: "" + e.getMessage();"
133887,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/provider/db/service/thrift/SentryPolicyStoreProcessor.java,704,,"      throw new SentryUserException(""Unable to instantiate group mapping"", e);"
133888,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/provider/db/tools/SentrySchemaHelper.java,161,,"        throw new IllegalArgumentException(""Couldn't parse line "" + dbCommand);"
133889,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/provider/db/tools/SentrySchemaTool.java,364,,"          sb.append(System.getProperty(""line.separator""));"
133890,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/provider/db/tools/SentrySchemaTool.java,477,,"    Option verboseOpt = new Option(""verbose"", ""only print SQL statements"");"
133891,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/provider/db/tools/command/hive/CommandUtil.java,92,,"        throw new IllegalArgumentException(""The hierarchy of privilege is not correct."");"
133892,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/service/thrift/KerberosConfiguration.java,63,,"      options.put(""refreshKrb5Config"", ""true"");"
133893,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/service/thrift/ServiceConstants.java,36,,"    saslProps.put(Sasl.SERVER_AUTH, ""true"");"
133894,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/main/java/org/apache/sentry/service/thrift/ServiceConstants.java,111,,"    public static final String SENTRY_STORE_ORPHANED_PRIVILEGE_REMOVAL_DEFAULT = ""false"";"
133895,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/generic/service/persistent/TestDelegateSentryStore.java,49,,"    String grantor = ""grantor"";"
133896,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/generic/service/persistent/TestSentryGMPrivilege.java,38,,"      new MSentryGMPrivilege(""solr"","
133897,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/generic/service/persistent/TestSentryGMPrivilege.java,39,,"          ""service1"", Arrays.asList(new Collection(""c1""), new Field(""f1"")),SearchConstants.QUERY, false);"
133898,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/generic/service/persistent/TestSentryRole.java,81,,"    hivePrivilege.setServerName(""hive.server1"");"
133899,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/generic/service/persistent/TestSentryRole.java,82,,"    hivePrivilege.setDbName(""db1"");"
133900,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/generic/service/persistent/TestSentryRole.java,83,,"    hivePrivilege.setTableName(""tb1"");"
133901,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/generic/service/persistent/TestSentryRole.java,84,,"    hivePrivilege.setPrivilegeScope(""table"");"
133902,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/generic/service/persistent/TestSentryRole.java,85,,"    hivePrivilege.setAction(""select"");"
133903,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/generic/service/persistent/TestSentryRole.java,89,,"    solrPrivilege.setComponentName(""solr"");"
133904,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/generic/service/persistent/TestSentryRole.java,90,,"    solrPrivilege.setServiceName(""solr.server1"");"
133905,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/generic/service/persistent/TestSentryRole.java,92,,"    solrPrivilege.setAction(""query"");"
133906,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/generic/service/thrift/TestAuditLogForSentryGenericService.java,133,,"          fail(""Exception should have been thrown"");"
133907,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/generic/service/thrift/TestSentryGenericPolicyProcessor.java,103,,"    dropPrivRequest.setPrivilege(new TSentryPrivilege(""test"", ""test"", new ArrayList<TAuthorizable>(), ""test""));"
133908,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/generic/service/thrift/TestSentryGenericPolicyProcessor.java,167,,"    .thenThrow(new SentryAlreadyExistsException(""Role: "" + roleName + "" already exists""));"
133909,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/generic/service/thrift/TestSentryGenericServiceIntegration.java,113,,"        String roleName1 = ""admin_r1"";"
133910,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/generic/service/thrift/TestSentryGenericServiceIntegration.java,122,,"        TSentryPrivilege queryPrivilege = new TSentryPrivilege(SOLR, ""service1"","
133911,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/generic/tools/TestSentryShellSolr.java,83,,"        String[] args = { ""-cr"", ""-r"", TEST_ROLE_NAME_1, ""-conf"", confPath.getAbsolutePath() };"
133912,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/generic/tools/TestSentryShellSolr.java,83,,"        String[] args = { ""-cr"", ""-r"", TEST_ROLE_NAME_1, ""-conf"", confPath.getAbsolutePath() };"
133913,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/generic/tools/TestSentryShellSolr.java,91,,"        args = new String[] { ""-lr"", ""-conf"", confPath.getAbsolutePath() };"
133914,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/generic/tools/TestSentryShellSolr.java,112,,"        assertEquals(""Incorrect number of roles"", 0, roles.size());"
133915,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/generic/tools/TestSentryShellSolr.java,123,,"        String TEST_GROUP_1 = ""testGroup1"";"
133916,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/generic/tools/TestSentryShellSolr.java,131,,"        String[] args = { ""-arg"", ""-r"", TEST_ROLE_NAME_1, ""-g"", TEST_GROUP_1, ""-conf"","
133917,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/generic/tools/TestSentryShellSolr.java,165,,"        args = new String[] { ""-drg"", ""-r"", TEST_ROLE_NAME_1, ""-g"", TEST_GROUP_1, ""-conf"","
133918,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/generic/tools/TestSentryShellSolr.java,220,,"    return shortOption ? ""-gpr"" : ""--grant_privilege_role"";"
133919,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/log/util/TestCommandUtil.java,42,,"    String roleName = ""testRole"";"
133920,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/log/util/TestCommandUtil.java,90,,"        PrivilegeScope.DATABASE.name(), ""dbTest"", ""tableTest"", ""serverTest"","
133921,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/log/util/TestCommandUtil.java,90,,"        PrivilegeScope.DATABASE.name(), ""dbTest"", ""tableTest"", ""serverTest"","
133922,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/log/util/TestCommandUtil.java,90,,"        PrivilegeScope.DATABASE.name(), ""dbTest"", ""tableTest"", ""serverTest"","
133923,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/log/util/TestCommandUtil.java,91,,"        ""hdfs://namenode:port/path/to/dir"");"
133924,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryPrivilege.java,34,,"    my.setServerName(""server1"");"
133925,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryPrivilege.java,35,,"    my.setDbName(""db1"");"
133926,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryPrivilege.java,36,,"    my.setTableName(""tb1"");"
133927,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryPrivilege.java,76,,"      my.setURI(""hdfs://namenode:9000/path"");"
133928,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryPrivilege.java,84,,"      my.setURI(""file:///path"");"
133929,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryPrivilege.java,178,,"    my.setURI(""hdfs://namenode:9000/path1"");"
133930,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryStore.java,131,,"    privilege.setPrivilegeScope(""TABLE"");"
133931,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryStore.java,132,,"    privilege.setServerName(""server1"");"
133932,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryStore.java,164,,"    tSentryGroups.add(new TSentryGroup(""group1""));"
133933,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryStore.java,190,,"    String roleName = ""role1"";"
133934,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryStore.java,194,,"    sentryPrivilege.setDbName(""db1"");"
133935,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryStore.java,239,,"    String table = ""tbl1"";"
133936,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryStore.java,346,,"      priv.setPrivilegeScope(""DATABASE"");"
133937,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryStore.java,445,,"    privilege.setPrivilegeScope(""COLUMN"");"
133938,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryStore.java,523,,"    String table2 = ""tbl2"";"
133939,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryStore.java,738,,"    String[] users = {""user0"",""user1"",""user2"",""user3"",""user4""};"
133940,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryStore.java,739,,"    String[] roles = {""role0"",""role1"",""role2"",""role3"",""role4""};"
133941,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryStore.java,739,,"    String[] roles = {""role0"",""role1"",""role2"",""role3"",""role4""};"
133942,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryStore.java,740,,"    String[] groups = {""group0"",""group1"",""group2"",""group3"",""group4""};"
133943,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryStore.java,740,,"    String[] groups = {""group0"",""group1"",""group2"",""group3"",""group4""};"
133944,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryStore.java,1128,,"    assertEquals(Sets.newHashSet(""server=server1->db=db1->table=tbl1->action=select""),"
133945,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryStore.java,1145,,"    assertEquals(Sets.newHashSet(""server=server1->db=db1->table=tbl1->action=select"", ""server=server1""),"
133946,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryStoreImportExport.java,107,,"    tSentryPrivilege1 = createTSentryPrivilege(PrivilegeScope.SERVER.name(), ""server1"", """", """", """","
133947,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryStoreImportExport.java,113,,"    tSentryPrivilege4 = createTSentryPrivilege(PrivilegeScope.TABLE.name(), ""server1"", ""db1"","
133948,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryStoreImportExport.java,114,,"        ""tbl1"", """", """", AccessConstants.INSERT, TSentryGrantOption.FALSE);"
133949,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryStoreImportExport.java,116,,"        ""tbl2"", ""col1"", """", AccessConstants.INSERT, TSentryGrantOption.FALSE);"
133950,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryStoreImportExport.java,158,,"    sentryGroupRolesMap.put(""group1"", Sets.newHashSet(""Role1"", ""role2"", ""role3""));"
133951,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryStoreImportExport.java,158,,"    sentryGroupRolesMap.put(""group1"", Sets.newHashSet(""Role1"", ""role2"", ""role3""));"
133952,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryStoreImportExport.java,158,,"    sentryGroupRolesMap.put(""group1"", Sets.newHashSet(""Role1"", ""role2"", ""role3""));"
133953,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryStoreImportExport.java,158,,"    sentryGroupRolesMap.put(""group1"", Sets.newHashSet(""Role1"", ""role2"", ""role3""));"
133954,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryStoreImportExport.java,159,,"    sentryGroupRolesMap.put(""group2"", Sets.newHashSet(""Role1"", ""role2"", ""role3""));"
133955,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryStoreImportExport.java,160,,"    sentryGroupRolesMap.put(""group3"", Sets.newHashSet(""Role1"", ""role2"", ""role3""));"
133956,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryStoreImportExport.java,179,,"    verifyRoles(rolesMap, Sets.newHashSet(""role1"", ""role2"", ""role3""));"
133957,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryStoreToAuthorizable.java,33,,"    privilege = new MSentryPrivilege(null, ""server1"", null, null, null, null, null);"
133958,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryStoreToAuthorizable.java,44,,"    privilege = new MSentryPrivilege(null, ""server1"", ""db1"", ""tbl1"", null, null, null);"
133959,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/persistent/TestSentryStoreToAuthorizable.java,44,,"    privilege = new MSentryPrivilege(null, ""server1"", ""db1"", ""tbl1"", null, null, null);"
133960,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestAuthorizingDDLAuditLogWithKerberos.java,88,,"        client.grantDatabasePrivilege(requestorUserName, roleName, serverName, dbName, ""ALL"");"
133961,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestAuthorizingDDLAuditLogWithKerberos.java,92,,"            + "" TO ROLE "" + roleName);"
133962,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestAuthorizingDDLAuditLogWithKerberos.java,99,,"            ""SELECT"", true);"
133963,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestAuthorizingDDLAuditLogWithKerberos.java,112,,"          fail(""Exception should have been thrown"");"
133964,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestAuthorizingDDLAuditLogWithKerberos.java,191,,"            + "" FROM ROLE "" + roleName);"
133965,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServerForHaWithoutKerberos.java,78,,"    client.grantTablePrivilege(requestorUserName, roleName1, ""server"", ""db1"", ""table1"", ""ALL"");"
133966,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServerForHaWithoutKerberos.java,78,,"    client.grantTablePrivilege(requestorUserName, roleName1, ""server"", ""db1"", ""table1"", ""ALL"");"
133967,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServerForHaWithoutKerberos.java,78,,"    client.grantTablePrivilege(requestorUserName, roleName1, ""server"", ""db1"", ""table1"", ""ALL"");"
133968,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServerForHaWithoutKerberos.java,78,,"    client.grantTablePrivilege(requestorUserName, roleName1, ""server"", ""db1"", ""table1"", ""ALL"");"
133969,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServerForHaWithoutKerberos.java,80,,"    client.grantTablePrivilege(requestorUserName, roleName1, ""server"", ""db2"", ""table3"", ""ALL"");"
133970,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServerForHaWithoutKerberos.java,93,,"    client.grantTablePrivilege(requestorUserName, roleName2, ""server"", ""db3"", ""table5"", ""ALL"");"
133971,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServerForHaWithoutKerberos.java,96,,"    assertEquals(""Privilege not assigned to role2 !!"", 2, listPrivilegesByRoleName.size());"
133972,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServerForHaWithoutKerberos.java,108,,"    assertEquals(""Privilege not correctly assigned to roles !!"","
133973,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServerForHaWithoutKerberos.java,118,,"    listPrivilegesForProvider = client.listPrivilegesForProvider(Sets.newHashSet(group1, group2), new ActiveRoleSet(Sets.newHashSet(roleName1)), new Server(""server1""));"
133974,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServerWithoutKerberos.java,79,,"    client.grantTablePrivilege(requestorUserName, roleName1, ""server"", ""db1"", ""table1"", ""ALL"");"
133975,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServerWithoutKerberos.java,79,,"    client.grantTablePrivilege(requestorUserName, roleName1, ""server"", ""db1"", ""table1"", ""ALL"");"
133976,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServerWithoutKerberos.java,79,,"    client.grantTablePrivilege(requestorUserName, roleName1, ""server"", ""db1"", ""table1"", ""ALL"");"
133977,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServerWithoutKerberos.java,79,,"    client.grantTablePrivilege(requestorUserName, roleName1, ""server"", ""db1"", ""table1"", ""ALL"");"
133978,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServerWithoutKerberos.java,81,,"    client.grantTablePrivilege(requestorUserName, roleName1, ""server"", ""db2"", ""table3"", ""ALL"");"
133979,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServerWithoutKerberos.java,93,,"    client.grantTablePrivilege(requestorUserName, roleName2, ""server"", ""db3"", ""table5"", ""ALL"");"
133980,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServerWithoutKerberos.java,96,,"    assertEquals(""Privilege not assigned to role2 !!"", 5, listPrivilegesByRoleName.size());"
133981,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServerWithoutKerberos.java,114,,"    assertEquals(""Privilege not correctly assigned to roles !!"","
133982,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServerWithoutKerberos.java,124,,"    listPrivilegesForProvider = client.listPrivilegesForProvider(Sets.newHashSet(group1, group2), new ActiveRoleSet(Sets.newHashSet(roleName1)), new Server(""server1""));"
133983,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServiceImportExport.java,82,,"        Set<String> roles = Sets.newHashSet(""role1"", ""role2"", ""role3"");"
133984,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServiceImportExport.java,82,,"        Set<String> roles = Sets.newHashSet(""role1"", ""role2"", ""role3"");"
133985,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServiceImportExport.java,82,,"        Set<String> roles = Sets.newHashSet(""role1"", ""role2"", ""role3"");"
133986,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServiceImportExport.java,83,,"        groupRolesMap.put(""group1"", roles);"
133987,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServiceImportExport.java,84,,"        groupRolesMap.put(""group2"", roles);"
133988,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServiceImportExport.java,85,,"        groupRolesMap.put(""group3"", roles);"
133989,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServiceIntegration.java,66,,"        assertEquals(""Incorrect number of roles"", 1, roles.size());"
133990,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServiceIntegration.java,84,,"        String roleName1 = ""admin_r1"";"
133991,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServiceIntegration.java,90,,"        client.grantTablePrivilege(requestorUserName, roleName1, ""server"", ""db1"", ""table1"", ""ALL"");"
133992,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServiceIntegration.java,90,,"        client.grantTablePrivilege(requestorUserName, roleName1, ""server"", ""db1"", ""table1"", ""ALL"");"
133993,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServiceIntegration.java,90,,"        client.grantTablePrivilege(requestorUserName, roleName1, ""server"", ""db1"", ""table1"", ""ALL"");"
133994,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServiceIntegration.java,90,,"        client.grantTablePrivilege(requestorUserName, roleName1, ""server"", ""db1"", ""table1"", ""ALL"");"
133995,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServiceIntegration.java,91,,"        client.grantTablePrivilege(requestorUserName, roleName1, ""server"", ""db1"", ""table2"", ""ALL"");"
133996,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServiceIntegration.java,92,,"        client.grantTablePrivilege(requestorUserName, roleName1, ""server"", ""db2"", ""table3"", ""ALL"");"
133997,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServiceIntegration.java,92,,"        client.grantTablePrivilege(requestorUserName, roleName1, ""server"", ""db2"", ""table3"", ""ALL"");"
133998,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServiceIntegration.java,93,,"        client.grantTablePrivilege(requestorUserName, roleName1, ""server"", ""db2"", ""table4"", ""ALL"");"
133999,./TargetProjects/incubator-sentry/sentry-provider/sentry-provider-db/src/test/java/org/apache/sentry/provider/db/service/thrift/TestSentryServiceIntegration.java,113,,"        assertTrue(""Privilege not correctly revoked !!"", listPrivilegesByRoleName.size() == 3);"
