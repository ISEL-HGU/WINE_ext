17000,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/cachetest/ClientTest.java,102,,"        response = client.getNewsStory(""Local%20Hero%20Saves%20Kid"");"
17001,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/cachetest/WinkApacheNewsClientTest.java,91,,"        response = client.getNewsStory(""Local%20Hero%20Saves%20Kid"");"
17002,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/cachetest/WinkNewsClientTest.java,90,,"        response = client.getNewsStory(""Local%20Hero%20Saves%20Kid"");"
17003,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/contentencoding/ContentEncodingTest.java,60,,"        postMethod.setRequestHeader(""Content-Encoding"", ""gzip"");"
17004,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/contentencoding/WinkContentEncodingTest.java,72,,"                .header(""Transfer-Encoding"", ""chunked"").header(""Content-Encoding"", ""gzip"")"
17005,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/exceptions/ExceptionsWhileTargettingTest.java,100,,"            getMethod.setURI(new URI(getBaseURI() + ""/targeting/resourcewithmethod"", true));"
17006,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/exceptions/ExceptionsWhileTargettingTest.java,154,,"            putMethod.setRequestEntity(new StringRequestEntity(""some content"", ""text/plain"","
17007,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/exceptions/ExceptionsWhileTargettingTest.java,154,,"            putMethod.setRequestEntity(new StringRequestEntity(""some content"", ""text/plain"","
17008,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/exceptions/ExceptionsWhileTargettingTest.java,155,,"                                                               ""UTF-8""));"
17009,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/exceptions/NullValuesDuringTargettingTest.java,60,,"            new PostMethod(getBaseURI() + ""/targeting/nullresource/withconsumes"");"
17010,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/exceptions/NullValuesDuringTargettingTest.java,67,,"                assertNull(postMethod.getResponseHeader(""Content-Type""));"
17011,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/exceptions/NullValuesDuringTargettingTest.java,108,,"            new PostMethod(getBaseURI() + ""/targeting/nullresource/withoutconsumes"");"
17012,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/exceptions/ValidationDuringTargettingTest.java,58,,"            getMethod.addRequestHeader(""Accept"", ""application/json"");"
17013,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/exceptions/ValidationDuringTargettingTest.java,58,,"            getMethod.addRequestHeader(""Accept"", ""application/json"");"
17014,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/exceptions/ValidationDuringTargettingTest.java,64,,"                .getResponseHeader(""Content-Type"").getValue());"
17015,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/exceptions/ValidationDuringTargettingTest.java,72,,"            getMethod.addRequestHeader(""Accept"", ""application/xml"");"
17016,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/exceptions/ValidationDuringTargettingTest.java,139,,"            new GetMethod(getBaseURI() + ""/targeting/resourceconsumesandproduces"");"
17017,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/exceptions/WinkExceptionsWhileTargetingTest.java,99,,"            client.resource(getBaseURI() + ""/targeting/resourcewithmethod"").get(String.class);"
17018,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/exceptions/WinkExceptionsWhileTargetingTest.java,150,,"                .contentType(MediaType.TEXT_PLAIN).put(String.class, ""some content"");"
17019,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/exceptions/WinkNullValuesDuringTargetingTest.java,60,,"            client.resource(getBaseURI() + ""/targeting/nullresource/withconsumes"")"
17020,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/exceptions/WinkNullValuesDuringTargetingTest.java,68,,"                assertNull(e.getResponse().getHeaders().getFirst(""Content-Type""));"
17021,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/exceptions/WinkNullValuesDuringTargetingTest.java,109,,"            client.resource(getBaseURI() + ""/targeting/nullresource/withoutconsumes"")"
17022,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/exceptions/WinkValidationDuringTargetingTest.java,60,,"        assertEquals(""application/json"", response.getHeaders()"
17023,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/exceptions/WinkValidationDuringTargetingTest.java,61,,"            .getFirst(""Content-Type""));"
17024,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/exceptions/WinkValidationDuringTargetingTest.java,109,,"            client.resource(getBaseURI() + ""/targeting/resourceconsumesandproduces"")"
17025,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/headers/HeadersTest.java,54,,"                System.out.println(""Response status code: "" + result);"
17026,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/headers/HeadersTest.java,128,,"                assertNotNull(httpMethod.getResponseHeader(""test-accept""));"
17027,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/headers/HeadersTest.java,257,,"                assertNotNull(httpMethod.getResponseHeader(""Allow""));"
17028,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/headers/WinkHeadersTest.java,78,,"        assertNotNull(response.getHeaders().getFirst(""test-accept""));"
17029,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/largeentity/LargeEntityTest.java,157,,"                                  ServerEnvironmentInfo.getWorkDir() + ""/wink-itest-targeting-1.4.0-SNAPSHOT.war"")"
17030,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/methodannotations/HttpMethodTest.java,67,,"                System.out.println(""Response status code: "" + result);"
17031,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/methodannotations/HttpMethodTest.java,68,,"                System.out.println(""Response body: "");"
17032,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/methodannotations/HttpMethodWarningsTest.java,68,,"                System.out.println(""Response status code: "" + result);"
17033,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/methodannotations/HttpMethodWarningsTest.java,69,,"                System.out.println(""Response body: "");"
17034,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/nofindmethods/DoNotUseMethodNamesForHTTPVerbsTest.java,63,,"            new PostMethod(getBaseURI() + ""/nousemethodnamesforhttpverbs/someresource"");"
17035,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/nofindmethods/DoNotUseMethodNamesForHTTPVerbsTest.java,114,,"            new PostMethod(getBaseURI() + ""/nousemethodnamesforhttpverbs/sublocatorresource/sub"");"
17036,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/nofindmethods/WinkDoNotUseMethodNamesForHTTPVerbsTest.java,55,,"            client.resource(getBaseURI() + ""/nousemethodnamesforhttpverbs/someresource"").post(null);"
17037,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/nofindmethods/WinkDoNotUseMethodNamesForHTTPVerbsTest.java,85,,"            client.resource(getBaseURI() + ""/nousemethodnamesforhttpverbs/sublocatorresource/sub"")"
17038,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/returntypes/ReturnTypeStatusTest.java,63,,"                System.out.println(""Response status code: "" + result);"
17039,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/returntypes/ReturnTypeStatusTest.java,64,,"                System.out.println(""Response body: "");"
17040,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/version/VersioningTest.java,58,,"                System.out.println(""Response status code: "" + result);"
17041,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/version/VersioningTest.java,59,,"                System.out.println(""Response body: "");"
17042,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/version/VersioningTest.java,63,,"                    .contains(""<deductions>""));"
17043,./TargetProjects/attic-wink/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/version/WinkClientVersioningTest.java,50,,"            .contains(""<deductions>""));"
17044,./TargetProjects/attic-wink/wink-jcdi-server/src/main/java/org/apache/wink/jcdi/server/internal/extension/WinkCdiExtension.java,47,,"    @SuppressWarnings(""UnusedDeclaration"")"
17045,./TargetProjects/attic-wink/wink-json4j/src/main/java/org/apache/wink/json4j/JSONArray.java,190,,"                isr = new InputStreamReader(is, ""UTF-8"");"
17046,./TargetProjects/attic-wink/wink-json4j/src/main/java/org/apache/wink/json4j/JSONArray.java,249,,"                throw new IllegalArgumentException(""Object of type: ["" + element.getClass().getName() + ""] could not be converted to a JSON representation."");"
17047,./TargetProjects/attic-wink/wink-json4j/src/main/java/org/apache/wink/json4j/JSONArray.java,249,,"                throw new IllegalArgumentException(""Object of type: ["" + element.getClass().getName() + ""] could not be converted to a JSON representation."");"
17048,./TargetProjects/attic-wink/wink-json4j/src/main/java/org/apache/wink/json4j/JSONArray.java,660,,"                    throw new JSONException(""Value at index: ["" + index + ""] was not a boolean or string value of 'true' or 'false'."");"
17049,./TargetProjects/attic-wink/wink-json4j/src/main/java/org/apache/wink/json4j/JSONArray.java,672,,"                throw new JSONException(""Value at index: ["" + index + ""] was null"");"
17050,./TargetProjects/attic-wink/wink-json4j/src/main/java/org/apache/wink/json4j/JSONArray.java,675,,"            JSONException jex = new JSONException(""The specified index was outside of the array boundries"");"
17051,./TargetProjects/attic-wink/wink-json4j/src/main/java/org/apache/wink/json4j/JSONArray.java,695,,"                    throw new JSONException(""Value at index: ["" + index + ""] was not a number."");"
17052,./TargetProjects/attic-wink/wink-json4j/src/main/java/org/apache/wink/json4j/JSONArray.java,985,,"            JSONException jex = new JSONException(""Error occurred during input read."");"
17053,./TargetProjects/attic-wink/wink-json4j/src/main/java/org/apache/wink/json4j/JSONObject.java,186,,"                isr = new InputStreamReader(is, ""UTF-8"");"
17054,./TargetProjects/attic-wink/wink-json4j/src/main/java/org/apache/wink/json4j/JSONObject.java,331,,"            JSONException jex = new JSONException(""Error during buffer flush"");"
17055,./TargetProjects/attic-wink/wink-json4j/src/main/java/org/apache/wink/json4j/JSONObject.java,789,,"                    throw new JSONException(""The value for key: ["" + key + ""]: ["" + str + ""] was not 'true' or 'false'"");    "
17056,./TargetProjects/attic-wink/wink-json4j/src/main/java/org/apache/wink/json4j/JSONObject.java,878,,"            throw new JSONException(""The value for key: ["" + key + ""] was null.  Number required."");"
17057,./TargetProjects/attic-wink/wink-json4j/src/main/java/org/apache/wink/json4j/JSONWriter.java,99,,"            throw new IllegalStateException(""The writer has been closed.  No further operations allowed."");"
17058,./TargetProjects/attic-wink/wink-json4j/src/main/java/org/apache/wink/json4j/JSONWriter.java,277,,"            throw new IllegalStateException(""Writer is currently not in an array or object, cannot write value"");"
17059,./TargetProjects/attic-wink/wink-json4j/src/main/java/org/apache/wink/json4j/internal/BeanSerializer.java,104,,"            ja.put(""_type"", ""JavaClass"");"
17060,./TargetProjects/attic-wink/wink-json4j/src/main/java/org/apache/wink/json4j/internal/BeanSerializer.java,105,,"            ja.put(""_classname"", clazz.getName());"
17061,./TargetProjects/attic-wink/wink-json4j/src/main/java/org/apache/wink/json4j/internal/Parser.java,54,,"            JSONException jex = new JSONException(""Error occurred during input read."");"
17062,./TargetProjects/attic-wink/wink-json4j/src/main/java/org/apache/wink/json4j/internal/Tokenizer.java,289,,"                        if (!isHexDigit(lastChar)) throw new IOException(""non-hex digit "" + onLineCol());"
17063,./TargetProjects/attic-wink/wink-json4j/src/main/java/org/apache/wink/json4j/utils/XML.java,166,,"            logger.entering(className, ""toJson(InputStream, OutputStream)"");"
17064,./TargetProjects/attic-wink/wink-json4j/src/main/java/org/apache/wink/json4j/utils/XML.java,198,,"                logger.logp(Level.FINEST, className, ""transform"", ""Fetching a SAX parser for use with JSONSAXHandler"");"
17065,./TargetProjects/attic-wink/wink-json4j/src/main/java/org/apache/wink/json4j/utils/XML.java,261,,"            logger.exiting(className, ""toJson(InputStream, boolean)"");"
17066,./TargetProjects/attic-wink/wink-json4j/src/main/java/org/apache/wink/json4j/utils/XML.java,340,,"            logger.entering(className, ""toXml(InputStream, OutputStream)"");"
17067,./TargetProjects/attic-wink/wink-json4j/src/main/java/org/apache/wink/json4j/utils/XML.java,449,,"            logger.exiting(className, ""toXml(InputStream, boolean)"");"
17068,./TargetProjects/attic-wink/wink-json4j/src/main/java/org/apache/wink/json4j/utils/internal/JSONObject.java,147,,"                IOException iox = new IOException(""Error occurred on serialization of JSON text."");"
17069,./TargetProjects/attic-wink/wink-json4j/src/main/java/org/apache/wink/json4j/utils/internal/JSONObject.java,232,,"                                writer.write("",\n"");"
17070,./TargetProjects/attic-wink/wink-json4j/src/main/java/org/apache/wink/json4j/utils/internal/JSONObject.java,359,,"        if (logger.isLoggable(Level.FINER)) logger.entering(className, ""writeChildren(Writer, int, boolean)"");"
17071,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/compat/tests/ApacheJSONArrayTest.java,41,,"        System.setProperty(""org.apache.wink.common.model.json.factory.impl"", ""org.apache.wink.json4j.compat.impl.ApacheJSONFactory"");"
17072,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/compat/tests/ApacheJSONArrayTest.java,41,,"        System.setProperty(""org.apache.wink.common.model.json.factory.impl"", ""org.apache.wink.json4j.compat.impl.ApacheJSONFactory"");"
17073,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/compat/tests/ApacheJSONArrayTest.java,544,,"            JSONArray jArray = factory.createJSONArray(""[null]"");"
17074,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/compat/tests/ApacheJSONArrayTest.java,565,,"            JSONArray jArray = factory.createJSONArray(""[\""1\""]"");"
17075,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/compat/tests/ApacheJSONObjectTest.java,43,,"        System.setProperty(""org.apache.wink.common.model.json.factory.impl"", ""org.apache.wink.json4j.compat.impl.ApacheJSONFactory"");"
17076,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/compat/tests/ApacheJSONObjectTest.java,43,,"        System.setProperty(""org.apache.wink.common.model.json.factory.impl"", ""org.apache.wink.json4j.compat.impl.ApacheJSONFactory"");"
17077,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/compat/tests/ApacheJSONObjectTest.java,119,,"        map.put(""string"", ""This is a string"");"
17078,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/compat/tests/ApacheJSONObjectTest.java,120,,"        map.put(""null"", null);"
17079,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/compat/tests/ApacheJSONObjectTest.java,122,,"        map.put(""bool"", new Boolean(true));"
17080,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/compat/tests/ApacheJSONObjectTest.java,228,,"            assertTrue(jObject.has(""foo""));"
17081,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/compat/tests/ApacheJSONObjectTest.java,248,,"            jObject.put(""long"", (long)1);"
17082,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/compat/tests/ApacheJSONObjectTest.java,269,,"            jObject.put(""int"", 1);"
17083,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/compat/tests/ApacheJSONObjectTest.java,311,,"            jObject.put(""double"", (double)1.123);"
17084,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/compat/tests/ApacheJSONObjectTest.java,353,,"            jObject.put(""string"", ""Hello World."");"
17085,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/compat/tests/ApacheJSONObjectTest.java,395,,"            jObject.put(""array"", factory.createJSONArray());"
17086,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/compat/tests/ApacheJSONObjectTest.java,420,,"            jObject.append(""string"", ""Another string."");"
17087,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/compat/tests/ApacheJSONObjectTest.java,903,,"        assertTrue(map.get(""number"") != null);"
17088,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/compat/tests/ApacheJSONStringerTest.java,41,,"        System.setProperty(""org.apache.wink.common.model.json.factory.impl"", ""org.apache.wink.json4j.compat.impl.ApacheJSONFactory"");"
17089,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/compat/tests/ApacheJSONStringerTest.java,41,,"        System.setProperty(""org.apache.wink.common.model.json.factory.impl"", ""org.apache.wink.json4j.compat.impl.ApacheJSONFactory"");"
17090,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/compat/tests/ApacheJSONWriterTest.java,41,,"        System.setProperty(""org.apache.wink.common.model.json.factory.impl"", ""org.apache.wink.json4j.compat.impl.ApacheJSONFactory"");"
17091,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/compat/tests/ApacheJSONWriterTest.java,41,,"        System.setProperty(""org.apache.wink.common.model.json.factory.impl"", ""org.apache.wink.json4j.compat.impl.ApacheJSONFactory"");"
17092,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/compat/tests/ApacheJSONWriterTest.java,150,,"            jWriter.key(""foo"");"
17093,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/tests/JSONArrayTest.java,336,,"            JSONArray jArray = new JSONArray(""[1]"");"
17094,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/tests/JSONArrayTest.java,532,,"            JSONArray jArray = new JSONArray(""[null]"");"
17095,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/tests/JSONObjectTest.java,77,,"            jObject = new JSONObject(""{\""foo\"":\""bar\"", \""bool\"": true}"");"
17096,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/tests/JSONObjectTest.java,136,,"        map.put(""string"", ""This is a string"");"
17097,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/tests/JSONObjectTest.java,137,,"        map.put(""null"", null);"
17098,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/tests/JSONObjectTest.java,139,,"        map.put(""bool"", new Boolean(true));"
17099,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/tests/JSONObjectTest.java,167,,"            assertTrue(ja.get(""class"").equals(""java.util.Date""));"
17100,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/tests/JSONObjectTest.java,304,,"            assertTrue(jObject.has(""foo""));"
17101,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/tests/JSONObjectTest.java,322,,"            jObject.put(""long"", (long)1);"
17102,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/tests/JSONObjectTest.java,341,,"            jObject.put(""int"", 1);"
17103,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/tests/JSONObjectTest.java,379,,"            jObject.put(""double"", (double)1.123);"
17104,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/tests/JSONObjectTest.java,417,,"            jObject.put(""string"", ""Hello World."");"
17105,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/tests/JSONObjectTest.java,455,,"            jObject.put(""array"", new JSONArray());"
17106,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/tests/JSONObjectTest.java,478,,"            jObject.append(""string"", ""Another string."");"
17107,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/tests/JSONObjectTest.java,547,,"            json.append(""test"", ""value"");"
17108,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/tests/JSONObjectTest.java,547,,"            json.append(""test"", ""value"");"
17109,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/tests/JSONObjectTest.java,995,,"            JSONObject jObject = new JSONObject(""{\""int\"" : "" + Integer.MAX_VALUE + ""}"");"
17110,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/tests/JSONObjectTest.java,1286,,"        assertTrue(map.get(""number"") != null);"
17111,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/tests/JSONObjectTest.java,1346,,"            obj.put(""key1"", ""key1"");"
17112,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/tests/JSONObjectTest.java,1347,,"            obj.put(""key2"", ""key2"");"
17113,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/tests/JSONObjectTest.java,1348,,"            obj.put(""key3"", ""key3"");"
17114,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/tests/JSONWriterTest.java,137,,"            jWriter.key(""foo"");"
17115,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/tests/OrderedJSONObjectTest.java,52,,"            String attribute = (String)obj.remove(""attribute"");"
17116,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/tests/OrderedJSONObjectTest.java,58,,"            String[] expectedOrder = new String[] { ""number"", ""boolean"", ""attribute"" };"
17117,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/tests/OrderedJSONObjectTest.java,113,,"            obj.put(""Entry1"", ""Value1"");"
17118,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/tests/OrderedJSONObjectTest.java,114,,"            obj.put(""Entry2"", ""Value2"");"
17119,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/tests/OrderedJSONObjectTest.java,115,,"            obj.put(""Entry3"", ""Value3"");"
17120,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/tests/XMLTests.java,45,,"        InputStream is = this.getClass().getClassLoader().getResourceAsStream(""simple.xml"");"
17121,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/tests/XMLTests.java,50,,"            System.out.println(""JSON compacted text:\n"");"
17122,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/tests/XMLTests.java,68,,"            System.out.println(""JSON non-compact text:\n"");"
17123,./TargetProjects/attic-wink/wink-json4j/src/test/java/org/apache/wink/json4j/tests/XMLTests.java,100,,"        InputStream is = this.getClass().getClassLoader().getResourceAsStream(""complex.xml"");"
17124,./TargetProjects/attic-wink/wink-providers/wink-abdera-provider/src/test/java/org/apache/wink/providers/abdera/internal/AbderaAtomFeedProviderTest.java,76,,"            feed.addLink(""http://b216:8080/reporting/reports?alt=application/json"", ""alternate"");"
17125,./TargetProjects/attic-wink/wink-providers/wink-abdera-provider/src/test/java/org/apache/wink/providers/abdera/internal/AbderaAtomFeedProviderTest.java,78,,"            feed.addAuthor(""admin"");"
17126,./TargetProjects/attic-wink/wink-providers/wink-abdera-provider/src/test/java/org/apache/wink/providers/abdera/internal/AbderaAtomFeedProviderTest.java,79,,"            feed.addCategory(""urn:com:systinet:reporting:kind"","
17127,./TargetProjects/attic-wink/wink-providers/wink-jackson-provider/src/test/java/org/apache/wink/providers/jackson/internal/JAXBCollectionJSONTest.java,217,,"        @Produces(""application/json"")"
17128,./TargetProjects/attic-wink/wink-providers/wink-jackson-provider/src/test/java/org/apache/wink/providers/jackson/internal/JAXBCollectionJSONTest.java,251,,"            MockRequestConstructor.constructMockRequest(""GET"","
17129,./TargetProjects/attic-wink/wink-providers/wink-jackson-provider/src/test/java/org/apache/wink/providers/jackson/internal/JAXBCollectionJSONTest.java,294,,"            .setContent(""[{\""desc\"":\""My desc 1\"",\""name\"":\""My Name 1\"",\""age\"":20},{\""desc\"":\""My desc 2\"",\""name\"":\""My Name 2\"",\""age\"":22}]"""
17130,./TargetProjects/attic-wink/wink-providers/wink-jackson-provider/src/test/java/org/apache/wink/providers/jackson/internal/JacksonJAXBTest.java,86,,"        @Produces(""application/json"")"
17131,./TargetProjects/attic-wink/wink-providers/wink-jackson-provider/src/test/java/org/apache/wink/providers/jackson/internal/JacksonJSON4JInteroperabilityTest.java,99,,"        p.setFirst(""Joe"");"
17132,./TargetProjects/attic-wink/wink-providers/wink-jackson-provider/src/test/java/org/apache/wink/providers/jackson/internal/JacksonJSON4JInteroperabilityTest.java,100,,"        p.setLast(""Shmoe"");"
17133,./TargetProjects/attic-wink/wink-providers/wink-jackson-provider/src/test/java/org/apache/wink/providers/jackson/internal/JacksonJSON4JInteroperabilityTest.java,118,,"        assertEquals(""Joe"", jsonObject.get(""first""));"
17134,./TargetProjects/attic-wink/wink-providers/wink-jackson-provider/src/test/java/org/apache/wink/providers/jackson/internal/JacksonJSON4JInteroperabilityTest.java,119,,"        assertEquals(""Shmoe"", jsonObject.get(""last""));"
17135,./TargetProjects/attic-wink/wink-providers/wink-jackson-provider/src/test/java/org/apache/wink/providers/jackson/internal/JacksonJSON4JInteroperabilityTest.java,120,,"        assertEquals(100, jsonObject.get(""age""));"
17136,./TargetProjects/attic-wink/wink-providers/wink-jackson-provider/src/test/java/org/apache/wink/providers/jackson/internal/JacksonJSON4JInteroperabilityTest.java,206,,"        p1.setFirst(""firstName"");"
17137,./TargetProjects/attic-wink/wink-providers/wink-jackson-provider/src/test/java/org/apache/wink/providers/jackson/internal/JacksonJSON4JInteroperabilityTest.java,207,,"        p1.setLast(""lastName"");"
17138,./TargetProjects/attic-wink/wink-providers/wink-jackson-provider/src/test/java/org/apache/wink/providers/jackson/internal/JacksonJSON4JInteroperabilityTest.java,210,,"        p2.setFirst(""firstName2"");"
17139,./TargetProjects/attic-wink/wink-providers/wink-jackson-provider/src/test/java/org/apache/wink/providers/jackson/internal/JacksonJSON4JInteroperabilityTest.java,211,,"        p2.setLast(""lastName2"");"
17140,./TargetProjects/attic-wink/wink-providers/wink-jackson-provider/src/test/java/org/apache/wink/providers/jackson/internal/JacksonPOJOTest.java,57,,"        @Produces(""application/json"")"
17141,./TargetProjects/attic-wink/wink-providers/wink-jackson-provider/src/test/java/org/apache/wink/providers/jackson/internal/JacksonPOJOTest.java,99,,"            p.setFirst(""first1"");"
17142,./TargetProjects/attic-wink/wink-providers/wink-jackson-provider/src/test/java/org/apache/wink/providers/jackson/internal/JacksonPOJOTest.java,100,,"            p.setLast(""last1"");"
17143,./TargetProjects/attic-wink/wink-providers/wink-jackson-provider/src/test/java/org/apache/wink/providers/jackson/internal/JacksonPOJOTest.java,103,,"            p.setFirst(""first2"");"
17144,./TargetProjects/attic-wink/wink-providers/wink-jackson-provider/src/test/java/org/apache/wink/providers/jackson/internal/JacksonPOJOTest.java,104,,"            p.setLast(""last2"");"
17145,./TargetProjects/attic-wink/wink-providers/wink-jackson-provider/src/test/java/org/apache/wink/providers/jackson/internal/JacksonPOJOTest.java,107,,"            p.setFirst(""first3"");"
17146,./TargetProjects/attic-wink/wink-providers/wink-jackson-provider/src/test/java/org/apache/wink/providers/jackson/internal/JacksonPOJOTest.java,108,,"            p.setLast(""last3"");"
17147,./TargetProjects/attic-wink/wink-providers/wink-jackson-provider/src/test/java/org/apache/wink/providers/jackson/internal/JacksonPOJOTest.java,288,,"            MockRequestConstructor.constructMockRequest(""GET"","
17148,./TargetProjects/attic-wink/wink-providers/wink-jackson-provider/src/test/java/org/apache/wink/providers/jackson/internal/JacksonPOJOTest.java,299,,"            MockRequestConstructor.constructMockRequest(""POST"","
17149,./TargetProjects/attic-wink/wink-providers/wink-jackson-provider/src/test/java/org/apache/wink/providers/jackson/internal/JacksonPOJOTest.java,343,,"                                  ""[{\""first\"":\""first1\"",\""last\"":\""last1\""},"" + ""{\""first\"":\""first2\"",\""last\"":\""last2\""},"""
17150,./TargetProjects/attic-wink/wink-providers/wink-jackson-provider/src/test/java/org/apache/wink/providers/jackson/internal/JacksonPOJOTest.java,375,,"                                  ""[[{\""first\"":\""first1\"",\""last\"":\""last1\""},"" + ""{\""first\"":\""first2\"",\""last\"":\""last2\""},"""
17151,./TargetProjects/attic-wink/wink-providers/wink-jackson-provider/src/test/java/org/apache/wink/providers/jackson/internal/JacksonPOJOTest.java,376,,"                                      + ""{\""first\"":\""first3\"",\""last\"":\""last3\""}],"""
17152,./TargetProjects/attic-wink/wink-providers/wink-jackson-provider/src/test/java/org/apache/wink/providers/jackson/internal/JacksonPOJOTest.java,377,,"                                      + ""[{\""first\"":\""first4\"",\""last\"":\""last4\""},"""
17153,./TargetProjects/attic-wink/wink-providers/wink-jackson-provider/src/test/java/org/apache/wink/providers/jackson/internal/JacksonPOJOTest.java,378,,"                                      + ""null,"""
17154,./TargetProjects/attic-wink/wink-providers/wink-jackson-provider/src/test/java/org/apache/wink/providers/jackson/internal/JacksonPOJOTest.java,379,,"                                      + ""{\""first\"":\""first6\"",\""last\"":\""last6\""}]]""),"
17155,./TargetProjects/attic-wink/wink-providers/wink-jackson-provider/src/test/java/org/apache/wink/providers/jackson/internal/PolymorphicTest.java,84,,"        @Produces(""application/json"")"
17156,./TargetProjects/attic-wink/wink-providers/wink-jackson-provider/src/test/java/org/apache/wink/providers/jackson/internal/jaxb/polymorphic/ObjectFactory.java,29,,"    private final static QName _MyProperties_QNAME = new QName(""http://org.apache.wink.providers.jackson.internal.jaxb.polymorphic/"", ""myProperties"");"
17157,./TargetProjects/attic-wink/wink-providers/wink-jettison-provider/src/test/java/org/apache/wink/providers/jettison/internal/JettisonJAXBBadgerFishTest.java,99,,"        @Produces(""application/json"")"
17158,./TargetProjects/attic-wink/wink-providers/wink-jettison-provider/src/test/java/org/apache/wink/providers/jettison/internal/JettisonJAXBBadgerFishTest.java,172,,"            MockRequestConstructor.constructMockRequest(""POST"", ""/test/person"", ""application/json"");"
17159,./TargetProjects/attic-wink/wink-providers/wink-jettison-provider/src/test/java/org/apache/wink/providers/jettison/internal/JettisonJAXBBadgerFishTest.java,327,,"            ENTRY = ENTRY_STR.replaceAll(""@TIME@"", xmlGregCal.toString());"
17160,./TargetProjects/attic-wink/wink-providers/wink-jettison-provider/src/test/java/org/apache/wink/providers/jettison/internal/JettisonJAXBMappedTest.java,64,,"        namespaceMap.put(""http://www.w3.org/2005/Atom"", ""http://www.w3.org/2005/Atom"");"
17161,./TargetProjects/attic-wink/wink-providers/wink-jettison-provider/src/test/java/org/apache/wink/providers/jettison/internal/JettisonJAXBMappedTest.java,65,,"        namespaceMap.put(""http://b216:8080/reporting/reports/toptenvalidators"","
17162,./TargetProjects/attic-wink/wink-providers/wink-jettison-provider/src/test/java/org/apache/wink/providers/jettison/internal/JettisonJAXBMappedTest.java,67,,"        namespaceMap.put(""http://www.w3.org/XML/1998/namespace"","
17163,./TargetProjects/attic-wink/wink-providers/wink-jettison-provider/src/test/java/org/apache/wink/providers/jettison/internal/JettisonJAXBMappedTest.java,117,,"        @Produces(""application/json"")"
17164,./TargetProjects/attic-wink/wink-providers/wink-json-provider/src/test/java/org/apache/wink/providers/json/internal/JsonProviderTest.java,124,,"        @Produces(""application/json"")"
17165,./TargetProjects/attic-wink/wink-providers/wink-json-provider/src/test/java/org/apache/wink/providers/json/internal/JsonProviderTest.java,134,,"            return object.put(""foo"", ""bar"");"
17166,./TargetProjects/attic-wink/wink-providers/wink-json-provider/src/test/java/org/apache/wink/providers/json/internal/JsonProviderTest.java,134,,"            return object.put(""foo"", ""bar"");"
17167,./TargetProjects/attic-wink/wink-providers/wink-json-provider/src/test/java/org/apache/wink/providers/json/internal/JsonProviderTest.java,292,,"            MockRequestConstructor.constructMockRequest(""GET"", ""/test/json"", ""application/json"");"
17168,./TargetProjects/attic-wink/wink-providers/wink-json-provider/src/test/org/apache/wink/providers/json/internal/JSONProviderTest.java,74,,"                                                              + ""    \""@xmlns\"": {\""$\"": \""http:\\/\\/www.w3.org\\/2005\\/Atom\""},\n"""
17169,./TargetProjects/attic-wink/wink-providers/wink-json-provider/src/test/org/apache/wink/providers/json/internal/JSONProviderTest.java,119,,"        @Produces(""application/json"")"
17170,./TargetProjects/attic-wink/wink-providers/wink-json-provider/src/test/org/apache/wink/providers/json/internal/JSONProviderTest.java,129,,"            return object.put(""foo"", ""bar"");"
17171,./TargetProjects/attic-wink/wink-providers/wink-json-provider/src/test/org/apache/wink/providers/json/internal/JSONProviderTest.java,129,,"            return object.put(""foo"", ""bar"");"
17172,./TargetProjects/attic-wink/wink-providers/wink-json-provider/src/test/org/apache/wink/providers/json/internal/JSONProviderTest.java,279,,"            MockRequestConstructor.constructMockRequest(""GET"", ""/test/json"", ""application/json"");"
17173,./TargetProjects/attic-wink/wink-providers/wink-json4j-provider/src/test/java/org/apache/wink/providers/json/internal/Json4JProviderTest.java,71,,"        @Produces(""application/json"")"
17174,./TargetProjects/attic-wink/wink-providers/wink-json4j-provider/src/test/java/org/apache/wink/providers/json/internal/Json4JProviderTest.java,81,,"            return object.put(""foo"", ""bar"");"
17175,./TargetProjects/attic-wink/wink-providers/wink-json4j-provider/src/test/java/org/apache/wink/providers/json/internal/Json4JProviderTest.java,81,,"            return object.put(""foo"", ""bar"");"
17176,./TargetProjects/attic-wink/wink-server/src/main/java/org/apache/wink/server/internal/RequestProcessor.java,174,,"                        logger.trace(Messages.getMessage(""unhandledExceptionToContainer"")); //$NON-NLS-1$"
17177,./TargetProjects/attic-wink/wink-server/src/main/java/org/apache/wink/server/internal/application/ApplicationProcessor.java,135,,"                        .getMessage(""exceptionOccurredDuringInstanceProcessing"", obj //$NON-NLS-1$"
17178,./TargetProjects/attic-wink/wink-server/src/main/java/org/apache/wink/server/internal/application/ApplicationProcessor.java,187,,"                    logger.error(Messages.getMessage(""exceptionOccurredDuringClassProcessing"", cls //$NON-NLS-1$"
17179,./TargetProjects/attic-wink/wink-server/src/main/java/org/apache/wink/server/internal/application/ApplicationProcessor.java,230,,"                        .getMessage(""exceptionOccurredDuringSingletonProcessing"", obj //$NON-NLS-1$"
17180,./TargetProjects/attic-wink/wink-server/src/main/java/org/apache/wink/server/internal/contexts/HttpServletRequestWrapperImpl.java,102,,"    @SuppressWarnings(""unchecked"")"
17181,./TargetProjects/attic-wink/wink-server/src/main/java/org/apache/wink/server/internal/handlers/InvokeMethodHandler.java,72,,"                        javaMethod == null ? ""UNKNOWN"" : javaMethod.getName(), //$NON-NLS-1$"
17182,./TargetProjects/attic-wink/wink-server/src/main/java/org/apache/wink/server/internal/log/LogUtilities.java,80,,"        f.format(""%n%1$-80s %2$-13s %3$-20s %4$-20s %5$s"","
17183,./TargetProjects/attic-wink/wink-server/src/main/java/org/apache/wink/server/internal/log/LogUtilities.java,81,,"                 ""Path"","
17184,./TargetProjects/attic-wink/wink-server/src/main/java/org/apache/wink/server/internal/log/LogUtilities.java,82,,"                 ""HTTP Method"","
17185,./TargetProjects/attic-wink/wink-server/src/main/java/org/apache/wink/server/internal/log/LogUtilities.java,83,,"                 ""Consumes"","
17186,./TargetProjects/attic-wink/wink-server/src/main/java/org/apache/wink/server/internal/log/LogUtilities.java,84,,"                 ""Produces"","
17187,./TargetProjects/attic-wink/wink-server/src/main/java/org/apache/wink/server/internal/log/LogUtilities.java,85,,"                 ""Resource Method"");"
17188,./TargetProjects/attic-wink/wink-server/src/main/java/org/apache/wink/server/internal/log/LogUtilities.java,123,,"                                    .trace(""Resource information for {}:{}"", resourceMetadata.getResourceClass().getName(), sb); //$NON-NLS-1$"
17189,./TargetProjects/attic-wink/wink-server/src/main/java/org/apache/wink/server/internal/log/LogUtilities.java,125,,"                                logger.trace(Messages.getMessage(""registeredResources"", sb)); //$NON-NLS-1$"
17190,./TargetProjects/attic-wink/wink-server/src/main/java/org/apache/wink/server/internal/log/Providers.java,147,,"                                    ""ExceptionMapper""));"
17191,./TargetProjects/attic-wink/wink-server/src/main/java/org/apache/wink/server/internal/log/Providers.java,178,,"                    logger.debug(""The following JAX-RS {} providers are registered:{}"","
17192,./TargetProjects/attic-wink/wink-server/src/main/java/org/apache/wink/server/internal/log/Requests.java,89,,"                logger.trace(""logStartRequest() exit""); // how would this ever"
17193,./TargetProjects/attic-wink/wink-server/src/main/java/org/apache/wink/server/internal/providers/entity/html/ExpandableSectionHelper.java,65,,"            .append(""</div>"").append(""</td>\n"").append(""<td>&nbsp;&nbsp;"").append(title) //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$"
17194,./TargetProjects/attic-wink/wink-server/src/main/java/org/apache/wink/server/internal/utils/AbstractLinksBuilderImpl.java,144,,"    @SuppressWarnings(""unchecked"")"
17195,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/AbstractResourceBeanTest.java,184,,"            MockRequestConstructor.constructMockRequest(""GET"","
17196,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/DispatchErrorTest.java,62,,"        assertEquals(""status"", HttpStatus.NOT_FOUND.getCode(), response.getStatus());"
17197,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/JAXRSContextTest.java,99,,"            invoke(MockRequestConstructor.constructMockRequest(""GET"", ""/context/uriInfo"", ""*/*""));"
17198,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/JAXRSContextTest.java,99,,"            invoke(MockRequestConstructor.constructMockRequest(""GET"", ""/context/uriInfo"", ""*/*""));"
17199,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/JAXRSContextTest.java,101,,"        assertEquals(""result"", ""context/uriInfo"", result);"
17200,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/QueryTest.java,43,,"    @Path(""/query"")"
17201,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/QueryTest.java,70,,"            invoke(MockRequestConstructor.constructMockRequest(""GET"", ""/query"", ""*/*""));"
17202,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/QueryTest.java,70,,"            invoke(MockRequestConstructor.constructMockRequest(""GET"", ""/query"", ""*/*""));"
17203,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/QueryTest.java,71,,"        assertEquals(""result"", ""normal"", resp.getContentAsString());"
17204,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/categories/CollectionCategoriesTest.java,83,,"            if (!statusCategories.contains(""Deffered"", ""urn:com:hp:qadefects:categories:status"")) {"
17205,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/categories/CollectionCategoriesTest.java,188,,"            cats.setScheme(""urn:com:hp:qadefects:categories:severity"");"
17206,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/CommonAcceptHeaderTest.java,74,,"            MockRequestConstructor.constructMockRequest(""GET"", ""/countaccepttypes"", ""*"");"
17207,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/CommonAcceptHeaderTest.java,74,,"            MockRequestConstructor.constructMockRequest(""GET"", ""/countaccepttypes"", ""*"");"
17208,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/DifferentCaptureVariablesTest.java,89,,"            invoke(MockRequestConstructor.constructMockRequest(""GET"", ""/test/1234"", ""*/*""));"
17209,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/DispatchIPv6Test.java,119,,"            MockRequestConstructor.constructMockRequest(""GET"","
17210,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/DispatchIPv6Test.java,123,,"        assertEquals(""status"", HttpStatus.OK.getCode(), response.getStatus());"
17211,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/DispatchIPv6Test.java,129,,"        assertTrue(""ipv6 URI: "" + href, href.startsWith(http));"
17212,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/EmptyPathAnnotationTest.java,65,,"            MockRequestConstructor.constructMockRequest(""GET"", ""/hello"", ""*/*"");"
17213,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/EmptyPathAnnotationTest.java,65,,"            MockRequestConstructor.constructMockRequest(""GET"", ""/hello"", ""*/*"");"
17214,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/EmptyPathParamTest.java,51,,"        public String findTestRuns(@PathParam(""firstParams"") final PathSegment firstParams,"
17215,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/EmptyPathParamTest.java,52,,"                                   @PathParam(""secondParams"") final PathSegment secondParams) {"
17216,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/EmptyPathParamTest.java,55,,"            assertEquals(""bob"", firstParams.getMatrixParameters().get(""name"").get(0));"
17217,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/EmptyPathParamTest.java,55,,"            assertEquals(""bob"", firstParams.getMatrixParameters().get(""name"").get(0));"
17218,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/EmptyPathParamTest.java,57,,"            assertEquals(""blue"", secondParams.getMatrixParameters().get(""eyes"").get(0));"
17219,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/EmptyPathParamTest.java,57,,"            assertEquals(""blue"", secondParams.getMatrixParameters().get(""eyes"").get(0));"
17220,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/EmptyPathParamTest.java,58,,"            return ""hi2"";"
17221,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/EmptyPathParamTest.java,154,,"            MockRequestConstructor.constructMockRequest(""GET"","
17222,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/ErrorResponseTest.java,106,,"            MockRequestConstructor.constructMockRequest(""GET"","
17223,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/MethodOverrideTest.java,43,,"        request.setMethod(""POST"");"
17224,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/MethodOverrideTest.java,50,,"        assertEquals(""HTTP method"", HttpMethod.PUT, context.getHttpMethod());"
17225,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/ParameterConversionTest.java,59,,"            assertTrue(""variable v"", v);"
17226,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/ParameterConversionTest.java,239,,"        assertInvocation(constructPathRequest(""true"", ""p/bigBoolean""));"
17227,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/PreconditionsTest.java,62,,"        @Produces(""text/plain"")"
17228,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/PreconditionsTest.java,63,,"        public Object get(@Context Request request, @PathParam(""variable"") String variable) {"
17229,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/PreconditionsTest.java,167,,"            MockRequestConstructor.constructMockRequest(""GET"", ""get/0/null"", ""*/*"");"
17230,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/PreconditionsTest.java,167,,"            MockRequestConstructor.constructMockRequest(""GET"", ""get/0/null"", ""*/*"");"
17231,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/PreconditionsTest.java,169,,"        assertEquals(""status"", 200, response.getStatus());"
17232,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/PreconditionsTest.java,170,,"        assertEquals(""content"", THE_CONTENT, response.getContentAsString());"
17233,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/PreconditionsTest.java,179,,"            MockRequestConstructor.constructMockRequest(""GET"", ""get/"" + String"
17234,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/PreconditionsTest.java,187,,"            MockRequestConstructor.constructMockRequest(""PUT"", ""get/"" + String"
17235,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/PreconditionsTest.java,218,,"        String etag = ""blablabla"";"
17236,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/PreconditionsTest.java,224,,"                + ""/etag/"""
17237,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/PreconditionsTest.java,227,,"        request.addHeader(HttpHeaders.IF_NONE_MATCH, ""\""notmatch\"""");"
17238,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/PreconditionsTest.java,298,,"        request.addHeader(HttpHeaders.IF_MATCH, ""\""atlantic\"",\"""" + etag + ""\"",\""pacific\"""");"
17239,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/PreconditionsTest.java,298,,"        request.addHeader(HttpHeaders.IF_MATCH, ""\""atlantic\"",\"""" + etag + ""\"",\""pacific\"""");"
17240,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/PreconditionsTest.java,494,,"            MockRequestConstructor.constructMockRequest(""GET"", ""get/abcd/nonexistyet"", ""*/*"");"
17241,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/RequestsTest.java,47,,"    @Path(""/root"")"
17242,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/RequestsTest.java,58,,"                return Response.ok(""Hello world!"").variant(request.selectVariant(responseVariants))"
17243,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/RequestsTest.java,80,,"                Collections.unmodifiableList(Variant.encodings(""gzip"", ""identity"", ""deflate"").add()"
17244,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/RequestsTest.java,80,,"                Collections.unmodifiableList(Variant.encodings(""gzip"", ""identity"", ""deflate"").add()"
17245,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/RequestsTest.java,80,,"                Collections.unmodifiableList(Variant.encodings(""gzip"", ""identity"", ""deflate"").add()"
17246,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/RequestsTest.java,111,,"                Variant.mediaTypes(MediaType.valueOf(MediaType.TEXT_PLAIN + "";charset=iso-8859-1""),"
17247,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/RequestsTest.java,113,,"                                   MediaType.valueOf(MediaType.TEXT_PLAIN + "";charset=shift_jis""))"
17248,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/RequestsTest.java,163,,"            MockRequestConstructor.constructMockRequest(""GET"", ""/root"", MediaType.TEXT_PLAIN);"
17249,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/RequestsTest.java,169,,"        request = MockRequestConstructor.constructMockRequest(""GET"", ""/root"", ""text/*"");"
17250,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/RequestsTest.java,202,,"                                                        MediaType.TEXT_PLAIN + "";q=1.0,"""
17251,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/RequestsTest.java,215,,"                                                        MediaType.APPLICATION_XML + "";q=0.9,"""
17252,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/RequestsTest.java,217,,"                                                            + "";q=1.0"");"
17253,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/RequestsTest.java,291,,"                                                        ""/root/language"","
17254,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/RequestsTest.java,343,,"                                                        ""/root/encoding"","
17255,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/RequestsTest.java,411,,"                                                        ""/root/charset"","
17256,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/RequestsTest.java,429,,"        assertEquals(""Accept, Accept-Charset"", response.getHeader(HttpHeaders.VARY));"
17257,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/RequestsTest.java,484,,"                                                            + "";q=0.8"");"
17258,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/RequestsTest.java,520,,"        request.addHeader(HttpHeaders.ACCEPT_LANGUAGE, ""fr;q=1.0, en-us;q=0.9"");"
17259,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/RequestsTest.java,543,,"                                                        ""/root/moremultipleheaders"","
17260,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/ResponseTest.java,86,,"            MockRequestConstructor.constructMockRequest(""GET"", ""/baseUri"", ""*/*"");"
17261,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/ResponseTest.java,86,,"            MockRequestConstructor.constructMockRequest(""GET"", ""/baseUri"", ""*/*"");"
17262,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/ResponseTest.java,88,,"        assertEquals(""http://localhost:80/abc"", response.getHeader(""Location"").toString());"
17263,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/SlashEndingUriTest.java,77,,"            MockRequestConstructor.constructMockRequest(""GET"", withSlash, ""*/*"");"
17264,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/SlashEndingUriTest.java,77,,"            MockRequestConstructor.constructMockRequest(""GET"", withSlash, ""*/*"");"
17265,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/SlashEndingUriTest.java,79,,"        assertEquals(""should end with slash"", ""http://localhost:8080/rest/"" + withSlash, response"
17266,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/SlashEndingUriTest.java,79,,"        assertEquals(""should end with slash"", ""http://localhost:8080/rest/"" + withSlash, response"
17267,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/UnknownMimeTypeTest.java,114,,"        assertEquals(""status"", 200, response.getStatus());"
17268,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/UnknownMimeTypeTest.java,128,,"                                                        ""get/"" + PDF,"
17269,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/UriBuilderTest.java,40,,"        URI uri = UriBuilder.fromUri(""http://www.example.com"").build();"
17270,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/UriBuilderTest.java,43,,"        uri = UriBuilder.fromUri(""http://www.example.com/"").path(""{arg1}"").build(""someValue"");"
17271,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/UriBuilderTest.java,43,,"        uri = UriBuilder.fromUri(""http://www.example.com/"").path(""{arg1}"").build(""someValue"");"
17272,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/UriBuilderTest.java,53,,"            fail(""Expected illegal argument exception"");"
17273,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/UriBuilderTest.java,73,,"            UriBuilder.fromUri(""http://www.example.com/"").path(""{arg1}"").build(""value"","
17274,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/UriBuilderTest.java,83,,"        uri = UriBuilder.fromPath(""somePath/{arg1}"").build(""value"");"
17275,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/UriBuilderTest.java,157,,"            UriBuilder.fromUri(""http://www.ibm.com/"").host("""").build();"
17276,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/activation/ActivationDataContentHandlerTest.java,61,,"        @Produces(""text/resource"")"
17277,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/application/ApplicationProcessorTest.java,97,,"                throw new BadProvider(""BadProvider cannot be added"");"
17278,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/contexts/HttpHeadersImplTest.java,96,,"        assertEquals(new Cookie(""MyName"", ""MyValue"", ""/somewhere"", null), cookies.get(""MyName""));"
17279,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/handlers/MediaTypeMapping2Test.java,40,,"    @Path(""/resource1"")"
17280,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/handlers/MediaTypeMapping2Test.java,45,,"            return Response.ok(""Hello world!"").type(""custom/type"").build();"
17281,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/handlers/MediaTypeMappingTest.java,40,,"    @Path(""/resource1"")"
17282,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/handlers/MediaTypeMappingTest.java,45,,"            return Response.ok(""Hello world!"").type(""custom/type"").build();"
17283,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/handlers/MediaTypeMappingTest.java,45,,"            return Response.ok(""Hello world!"").type(""custom/type"").build();"
17284,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/jaxrs/HttpHeadersImplTest.java,51,,"        @Produces(""text/plain"")"
17285,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/jaxrs/HttpHeadersImplTest.java,85,,"            List<String> header = headers.getRequestHeader(""header1"");"
17286,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/jaxrs/HttpHeadersImplTest.java,89,,"            assertEquals(""value2"", header.get(1));"
17287,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/jaxrs/HttpHeadersImplTest.java,100,,"            assertEquals(1, requestHeaders.get(""Accept"").size());"
17288,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/jaxrs/HttpHeadersImplTest.java,107,,"            assertEquals(2, requestHeaders.get(""Cookie"").size());"
17289,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/jaxrs/HttpHeadersImplTest.java,112,,"            assertEquals(1, requestHeaders.get(""Accept-Language"").size());"
17290,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/jaxrs/HttpHeadersImplTest.java,160,,"    @Path(""/multipleheaders"")"
17291,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/jaxrs/HttpHeadersImplTest.java,182,,"                .constructMockRequest(""GET"","
17292,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/jaxrs/UriInfoImplTest.java,50,,"        @Produces(""text/plain"")"
17293,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/jaxrs/UriInfoImplTest.java,101,,"            assertEquals(""foo"", uriInfo.getMatchedURIs().get(0));"
17294,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/jaxrs/UriInfoImplTest.java,119,,"            assertEquals(""foo/bar"", firstUri);"
17295,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/jaxrs/UriInfoImplTest.java,283,,"            MockRequestConstructor.constructMockRequest(""GET"", ""/foo"", ""text/plain"");"
17296,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/log/RequestsTest.java,79,,"        Logger.getLogger(""org.apache.wink"").setLevel(Level.INFO);"
17297,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/AssetProviderTest.java,129,,"        @Produces( {""application/xml"", ""text/plain""})"
17298,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/AssetProviderTest.java,129,,"        @Produces( {""application/xml"", ""text/plain""})"
17299,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/AssetProviderTest.java,144,,"            MockRequestConstructor.constructMockRequest(""GET"", ""/test"", ""application/xml"");"
17300,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/AssetProviderTest.java,162,,"            MockRequestConstructor.constructMockRequest(""POST"","
17301,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/AtomEntryInResponseProviderTest.java,59,,"        @Produces(""application/atom+xml"")"
17302,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/AtomEntryProviderTest.java,58,,"        @Produces(""application/atom+xml"")"
17303,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/AtomFeedProviderTest.java,58,,"        @Produces(""application/atom+xml"")"
17304,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/EntityLocatorProviderTest.java,57,,"        @Produces(""application/atom+xml"")"
17305,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/EntityLocatorProviderTest.java,62,,"            ae.setTitle(new AtomText(""title"", AtomTextType.text));"
17306,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/JAXBCollectionXMLProviderTest.java,129,,"                s.setName(""NAME"" + type.getName());"
17307,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/JAXBCollectionXMLProviderTest.java,301,,"                                       new MediaType(""text"", ""xml"")));"
17308,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/JAXBCollectionXMLProviderTest.java,301,,"                                       new MediaType(""text"", ""xml"")));"
17309,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/JAXBCollectionXMLProviderTest.java,305,,"                                       new MediaType(""application"", ""xml"")));"
17310,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/JAXBCollectionXMLProviderTest.java,309,,"                                       new MediaType(""application"", ""atom+xml"")));"
17311,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/JAXBCollectionXMLProviderTest.java,313,,"                                       new MediaType(""application"", ""atomsvc+xml"")));"
17312,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/JAXBCollectionXMLProviderTest.java,530,,"            MockRequestConstructor.constructMockRequest(""POST"","
17313,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/JAXBCollectionXMLProviderTest.java,532,,"                                                        ""text/xml"","
17314,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/JAXBElementProviderCustomNSTest.java,163,,"                                                        ""text/xml"","
17315,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/JAXBElementProviderTest.java,170,,"        assertTrue(provider.isWriteable(feed.getClass(), genericType, null, new MediaType(""text"","
17316,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/JAXBElementProviderTest.java,171,,"                                                                                          ""xml"")));"
17317,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/JAXBElementProviderTest.java,175,,"                                        new MediaType(""application"", ""xml"")));"
17318,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/JAXBElementProviderTest.java,179,,"                                        new MediaType(""application"", ""atom+xml"")));"
17319,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/JAXBElementProviderTest.java,183,,"                                        new MediaType(""application"", ""atomsvc+xml"")));"
17320,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/JAXBElementProviderTest.java,185,,"            .isWriteable(feed.getClass(), genericType, null, new MediaType(""text"", ""plain"")));"
17321,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/JAXBElementProviderTest.java,205,,"    @SuppressWarnings(""unchecked"")"
17322,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/JAXBElementProviderTest.java,208,,"            MockRequestConstructor.constructMockRequest(""POST"","
17323,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/JAXBElementProviderTest.java,210,,"                                                        ""text/xml"","
17324,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/JAXBProvidersWithXmlAdapterTest.java,205,,"        .constructMockRequest(""POST"", ""/jaxbresource/jaxbelement"","
17325,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/MultiTableCsvDescriptorTest.java,91,,"        @Produces(""text/csv"")"
17326,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/SourceProviderTest.java,223,,"            MockRequestConstructor.constructMockRequest(""GET"", ""/source/stream"", ""text/xml"");"
17327,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/SourceProviderTest.java,242,,"            MockRequestConstructor.constructMockRequest(""POST"","
17328,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/SourceProviderTest.java,290,,"                                                        ""application/xml"","
17329,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/SourceProviderTest.java,436,,"            .isWriteable(source.getClass(), null, null, new MediaType(""text"", ""xml"")));"
17330,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/SourceProviderTest.java,436,,"            .isWriteable(source.getClass(), null, null, new MediaType(""text"", ""xml"")));"
17331,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/SourceProviderTest.java,437,,"        assertTrue(provider.isWriteable(source.getClass(), null, null, new MediaType(""application"","
17332,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/SyndEntryLocatorProviderTest.java,56,,"        @Produces(""application/atom+xml"")"
17333,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/SyndFeedLocatorProviderTest.java,56,,"        @Produces(""application/atom+xml"")"
17334,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/EncodedTest.java,100,,"            MockRequestConstructor.constructMockRequest(""GET"","
17335,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethod1Test.java,108,,"        @Consumes( {""application/xml""})"
17336,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethod1Test.java,120,,"        @Consumes( {""text/plain"", ""text/html""})"
17337,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethod1Test.java,120,,"        @Consumes( {""text/plain"", ""text/html""})"
17338,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethod1Test.java,126,,"        @Consumes( {""image/*""})"
17339,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethod1Test.java,182,,"        @Consumes( {""text/*""})"
17340,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethod1Test.java,235,,"        @Path(""{id}"")"
17341,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethod2Test.java,50,,"                                                        ""text/plain"","
17342,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethod3Test.java,63,,"    @Path(""/simpleGetProduces"")"
17343,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethod3Test.java,143,,"            MockRequestConstructor.constructMockRequest(""GET"","
17344,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethod3Test.java,159,,"        assertMethodFound(response, ResourceSimpleGetProduces.class, ""getText"");"
17345,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethod4Test.java,57,,"    @Path(""/simplePostConsumes"")"
17346,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethod4Test.java,61,,"        @Consumes( {""application/xml;type=set""})"
17347,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethod4Test.java,62,,"        @Produces(""application/xml"")"
17348,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethod4Test.java,75,,"        @Consumes( {""application/xml;type=collection""})"
17349,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethod4Test.java,130,,"            MockRequestConstructor.constructMockRequest(""POST"","
17350,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethodTest.java,100,,"    @Path(""/simplePostConsumes"")"
17351,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethodTest.java,104,,"        @Consumes( {""application/xml""})"
17352,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethodTest.java,110,,"        @Consumes( {""application/atom+xml""})"
17353,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethodTest.java,116,,"        @Consumes( {""text/plain"", ""text/html""})"
17354,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethodTest.java,116,,"        @Consumes( {""text/plain"", ""text/html""})"
17355,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethodTest.java,122,,"        @Consumes( {""image/*""})"
17356,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethodTest.java,128,,"        @Consumes( {""*/*""})"
17357,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethodTest.java,134,,"    @Path(""/simpleGetProduces"")"
17358,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethodTest.java,156,,"        @Produces( {""image/jpeg""})"
17359,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethodTest.java,174,,"    @Path(""/simpleConsumesAndProduces"")"
17360,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethodTest.java,178,,"        @Consumes( {""text/*""})"
17361,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethodTest.java,231,,"        @Path(""{id}"")"
17362,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethodTest.java,274,,"        @Produces(""text/xhtml"")"
17363,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethodTest.java,384,,"        @Consumes(""image/gif"")"
17364,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethodTest.java,458,,"        request = MockRequestConstructor.constructMockRequest(""GET"", ""/simpleGet"", ""text/plain"");"
17365,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethodTest.java,463,,"        request = MockRequestConstructor.constructMockRequest(""POST"", ""/simpleGetAndPost"", ""*/*"");"
17366,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethodTest.java,594,,"        assertMethodFound(response, ResourceSimpleGetProduces.class, ""getAny"");"
17367,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethodTest.java,642,,"                          ""postConsumesManyProduceMany"");"
17368,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethodTest.java,726,,"                                                        ""/subResourceMethodSimpleGet/1"","
17369,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethodTest.java,729,,"        assertMethodFound(response, ResourceWithSubResourceMethodSimpleGet.class, ""getTextPlain"");"
17370,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethodTest.java,745,,"        assertMethodFound(response, ResourceWithSubResourceMethodSimpleGet.class, ""postTextAny"");"
17371,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethodTest.java,786,,"                                                        ""/subResourceLocatorSimpleGet/1/2"","
17372,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethodTest.java,884,,"        request = MockRequestConstructor.constructMockRequest(""GET"", ""/mixed/1"", ""application/xml"");"
17373,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/FindResourceMethodTest.java,956,,"        assertTrue(response.getHeader(""allow"").toString().contains(""HEAD""));"
17374,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/HeaderTest.java,56,,"        testHeader(new String[][] {{""a"", ""true""}}, ""a=true"");"
17375,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/HeaderTest.java,58,,"        testHeader(new String[][] { {""a"", ""true""}, {""a"", ""false""}}, ""a=true"");"
17376,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/InjectableDataTest.java,71,,"        @Path(""simple"")"
17377,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/InjectableDataTest.java,74,,"            assertEquals(""a b+c"", p);"
17378,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/InjectableDataTest.java,78,,"        @Path(""encoded"")"
17379,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/InjectableDataTest.java,81,,"            assertEquals(""a%20b+c"", p);"
17380,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/InjectableDataTest.java,85,,"        @Path(""default"")"
17381,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/InjectableDataTest.java,92,,"        @Path(""simpleList"")"
17382,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/InjectableDataTest.java,121,,"        @Path(""encodedList"")"
17383,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/InjectableDataTest.java,129,,"        @Path(""defaultList"")"
17384,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/InjectableDataTest.java,131,,"        public void getDefaultList(@DefaultValue(""b/c"") @PathParam(""k"") List<String> p) {"
17385,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/InjectableDataTest.java,137,,"        @Path(""simpleSet"")"
17386,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/InjectableDataTest.java,145,,"        @Path(""encodedSet"")"
17387,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/InjectableDataTest.java,153,,"        @Path(""defaultSet"")"
17388,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/InjectableDataTest.java,161,,"        @Path(""simpleSortedSet"")"
17389,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/InjectableDataTest.java,169,,"        @Path(""encodedSortedSet"")"
17390,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/InjectableDataTest.java,177,,"        @Path(""defaultSortedSet"")"
17391,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/InjectableDataTest.java,188,,"            PathSegment segment = new PathSegmentImpl(""a b;m1=1"");"
17392,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/InjectableDataTest.java,196,,"            assertEquals(new PathSegmentImpl(""a%20b;m1=1""), p);"
17393,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/InjectableDataTest.java,371,,"            assertEquals(""a b c"", p);"
17394,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/InjectableDataTest.java,397,,"            assertEquals(""a c"", p.get(1));"
17395,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/InjectableDataTest.java,406,,"            assertEquals(""a+c"", p.get(1));"
17396,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/InjectableDataTest.java,729,,"            assertEquals(""cookieVal"", p);"
17397,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/InjectableDataTest.java,791,,"            assertEquals(Cookie.valueOf(""$Version=1; c=cookieVal""), p);"
17398,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/InjectableDataTest.java,798,,"            assertEquals(Cookie.valueOf(""$Version=1; k=b""), p);"
17399,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/InjectableDataTest.java,872,,"            assertEquals(""abc"", p);"
17400,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/InjectableDataTest.java,888,,"            assertEquals(""def"", p.get(1));"
17401,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/StrictConsumesProducesInheritanceDefaultTest.java,69,,"                                                        ""application/xml"","
17402,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/StrictConsumesProducesInheritanceFalseTest.java,76,,"                                                        ""application/xml"","
17403,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/internal/registry/StrictConsumesProducesInheritanceTrueTest.java,76,,"                                                        ""application/xml"","
17404,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/serviceability/DebugMultipleProvidersAppStartupTest.java,217,,"        f.format(""%n%1$-35s %2$-25s %3$-8s %4$s"","
17405,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/serviceability/DebugMultipleProvidersAppStartupTest.java,219,,"                 ""Generic Type"","
17406,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/serviceability/DebugMultipleProvidersAppStartupTest.java,220,,"                 ""Custom?"","
17407,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/serviceability/DebugMultipleProvidersAppStartupTest.java,221,,"                 ""Provider Class"");"
17408,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/serviceability/DebugMultipleProvidersAppStartupTest.java,226,,"                    ""true"","
17409,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/serviceability/DebugMultipleResourcesAppStartupTest.java,198,,"            .format(""%n%1$-80s %2$-13s %3$-20s %4$-20s %5$s"","
17410,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/serviceability/DebugMultipleResourcesAppStartupTest.java,201,,"                    ""[*/*]"","
17411,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/serviceability/DebugProviderThrowsExceptionTest.java,80,,"    @Path(""/root"")"
17412,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/serviceability/DebugProviderThrowsExceptionTest.java,178,,"            MockRequestConstructor.constructMockRequest(""POST"","
17413,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/serviceability/DebugProviderThrowsExceptionTest.java,181,,"                                                        MediaType.TEXT_PLAIN, ""data"".getBytes());"
17414,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/serviceability/DebugProviderThrowsExceptionTest.java,212,,"        assertTrue(logRecordsContainingProvidersRegistry.get(0).getMessage().contains(""\tDEBUG_FRAME = ""));  // make sure we have a stack printed with ""DEBUG_FRAME = "" instead of "" at """
17415,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/serviceability/DebugSimpleRequestTest.java,56,,"            return ""Hello world!"";"
17416,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/serviceability/DebugSimpleRequestTest.java,104,,"            MockRequestConstructor.constructMockRequest(""POST"","
17417,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/serviceability/DebugSimpleRequestTest.java,105,,"                                                        ""/abcd"","
17418,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/serviceability/DebugSimpleRequestTest.java,221,,"                                                        ""Hello this is the request!"".getBytes());"
17419,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/serviceability/DebugSimpleResponseTest.java,60,,"    @Path(""abcd"")"
17420,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/serviceability/DebugSimpleResponseTest.java,147,,"            MockRequestConstructor.constructMockRequest(""GET"","
17421,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/serviceability/DebugSimpleResponseTest.java,157,,"            if (""The response entity was not written to the HttpServletResponse.getOutputStream()."""
17422,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/serviceability/DebugSimpleResponseTest.java,346,,"        f.format(""%n%1$-30s%2$s"", ""Content-Encoding"", ""gzip"");"
17423,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/serviceability/ServiceabilityTest.java,59,,"    @Path(""/root"")"
17424,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/serviceability/ServiceabilityTest.java,166,,"            MockRequestConstructor.constructMockRequest(""GET"", ""/root"", MediaType.TEXT_PLAIN);"
17425,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/utils/LinksBuilderTest.java,66,,"        @Produces( {""application/xml"", ""application/json""})"
17426,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/utils/LinksBuilderTest.java,66,,"        @Produces( {""application/xml"", ""application/json""})"
17427,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/utils/LinksBuilderTest.java,71,,"        @Produces(""text/html"")"
17428,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/utils/LinksBuilderTest.java,76,,"        @Produces(""application/atom+xml"")"
17429,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/utils/LinksBuilderTest.java,87,,"            assertLink(links, ""self"", null, ""systemLinks"");"
17430,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/utils/LinksBuilderTest.java,88,,"            assertLink(links, ""alternate"", ""application/xml"", ""systemLinks?alt=application%2Fxml"");"
17431,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/utils/LinksBuilderTest.java,119,,"            assertLink(links, ""edit"", null, ""systemLinksWithPut"");"
17432,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/utils/LinksBuilderTest.java,136,,"    @Path(""systemLinksAltParam"")"
17433,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/utils/LinksBuilderTest.java,169,,"            systemLinksBuilder.addAltParam(false).queryParam(""alt"", ""foo"").build(links);"
17434,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/utils/LinksBuilderTest.java,171,,"            assertLink(links, ""self"", null, ""systemLinksAltParam?alt=foo"");"
17435,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/utils/LinksBuilderTest.java,183,,"    @Path(""systemLinksSelective"")"
17436,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/utils/LinksBuilderTest.java,197,,"        @Produces(""application/opensearchdescription+xml"")"
17437,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/utils/LinksBuilderTest.java,236,,"                       ""search"","
17438,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/utils/LinksBuilderTest.java,238,,"                       ""systemLinksSelective?alt=application%2Fopensearchdescription%2Bxml"");"
17439,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/utils/LinksBuilderTest.java,538,,"        @Path(""koko"")"
17440,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/utils/LinksBuilderTest.java,544,,"        @Path(""{subId}"")"
17441,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/utils/LinksBuilderTest.java,599,,"            builders.createSystemLinksBuilder().subResource(""{subId}"").pathParam(""subId"", ""1"")"
17442,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/utils/LinksBuilderTest.java,758,,"    @Path(""systemLinks/ContinuedSearch"")"
17443,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/utils/LinksBuilderTest.java,865,,"        @Path(""{id}"")"
17444,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/utils/LinksBuilderTest.java,877,,"            assertLink(links, ""self"", null, ""systemLinks/ContinuedSearch/SubResources/1"");"
17445,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/utils/LinksBuilderTest.java,977,,"            MockRequestConstructor.constructMockRequest(""GET"","
17446,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/utils/LinksBuilderTest.java,1163,,"    @Path(""singleLink"")"
17447,./TargetProjects/attic-wink/wink-server/src/test/java/org/apache/wink/server/utils/LinksBuilderTest.java,1252,,"            builder.rel(""stam"").build(links);"
17448,./TargetProjects/attic-wink/wink-webdav/src/main/java/org/apache/wink/webdav/model/ObjectFactory.java,47,,"    private final static QName _Status_QNAME              = new QName(""DAV:"", ""status""); //$NON-NLS-1$ //$NON-NLS-2$"
17449,./TargetProjects/avro/lang/java/avro/src/main/java/org/apache/avro/Protocol.java,75,,"      .unmodifiableSet(new HashSet<>(Arrays.asList(""doc"", ""response"", ""request"", ""errors"", ""one-way"")));"
17450,./TargetProjects/avro/lang/java/avro/src/main/java/org/apache/avro/Protocol.java,75,,"      .unmodifiableSet(new HashSet<>(Arrays.asList(""doc"", ""response"", ""request"", ""errors"", ""one-way"")));"
17451,./TargetProjects/avro/lang/java/avro/src/main/java/org/apache/avro/Protocol.java,75,,"      .unmodifiableSet(new HashSet<>(Arrays.asList(""doc"", ""response"", ""request"", ""errors"", ""one-way"")));"
17452,./TargetProjects/avro/lang/java/avro/src/main/java/org/apache/avro/Schema.java,171,,"      Arrays.asList(""doc"", ""fields"", ""items"", ""name"", ""namespace"", ""size"", ""symbols"", ""values"", ""type"", ""aliases""));"
17453,./TargetProjects/avro/lang/java/avro/src/main/java/org/apache/avro/Schema.java,171,,"      Arrays.asList(""doc"", ""fields"", ""items"", ""name"", ""namespace"", ""size"", ""symbols"", ""values"", ""type"", ""aliases""));"
17454,./TargetProjects/avro/lang/java/avro/src/main/java/org/apache/avro/Schema.java,171,,"      Arrays.asList(""doc"", ""fields"", ""items"", ""name"", ""namespace"", ""size"", ""symbols"", ""values"", ""type"", ""aliases""));"
17455,./TargetProjects/avro/lang/java/avro/src/main/java/org/apache/avro/Schema.java,171,,"      Arrays.asList(""doc"", ""fields"", ""items"", ""name"", ""namespace"", ""size"", ""symbols"", ""values"", ""type"", ""aliases""));"
17456,./TargetProjects/avro/lang/java/avro/src/main/java/org/apache/avro/Schema.java,171,,"      Arrays.asList(""doc"", ""fields"", ""items"", ""name"", ""namespace"", ""size"", ""symbols"", ""values"", ""type"", ""aliases""));"
17457,./TargetProjects/avro/lang/java/avro/src/main/java/org/apache/avro/Schema.java,175,,"    ENUM_RESERVED.add(""default"");"
17458,./TargetProjects/avro/lang/java/avro/src/main/java/org/apache/avro/Schema.java,272,,"    throw new AvroRuntimeException(""Not a record: "" + this);"
17459,./TargetProjects/avro/lang/java/avro/src/main/java/org/apache/avro/Schema.java,293,,"    throw new AvroRuntimeException(""Not an enum: "" + this);"
17460,./TargetProjects/avro/lang/java/avro/src/main/java/org/apache/avro/Schema.java,329,,"    throw new AvroRuntimeException(""Not a named type: "" + this);"
17461,./TargetProjects/avro/lang/java/avro/src/main/java/org/apache/avro/Schema.java,978,,"      gen.writeStringField(""type"", isError ? ""error"" : ""record"");"
17462,./TargetProjects/avro/lang/java/avro/src/main/java/org/apache/avro/Schema.java,1087,,"      gen.writeStringField(""type"", ""enum"");"
17463,./TargetProjects/avro/lang/java/avro/src/main/java/org/apache/avro/data/TimeConversions.java,77,,"      return varName + "" = "" + valParamName + "".truncatedTo(java.time.temporal.ChronoUnit.MILLIS);"";"
17464,./TargetProjects/avro/lang/java/avro/src/main/java/org/apache/avro/generic/GenericData.java,144,,"  @SuppressWarnings(""unchecked"")"
17465,./TargetProjects/avro/lang/java/avro/src/main/java/org/apache/avro/generic/GenericData.java,375,,"        throw new IndexOutOfBoundsException(""Index "" + i + "" out of bounds."");"
17466,./TargetProjects/avro/lang/java/avro/src/main/java/org/apache/avro/generic/GenericData.java,375,,"        throw new IndexOutOfBoundsException(""Index "" + i + "" out of bounds."");"
17467,./TargetProjects/avro/lang/java/avro/src/main/java/org/apache/avro/generic/GenericDatumReader.java,142,,"  @SuppressWarnings(""unchecked"")"
17468,./TargetProjects/avro/lang/java/avro/src/main/java/org/apache/avro/generic/GenericDatumWriter.java,279,,"  @SuppressWarnings(""unchecked"")"
17469,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/FooBarSpecificRecord.java,151,,"  @SuppressWarnings(value = ""unchecked"")"
17470,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestCircularReferences.java,182,,"      @SuppressWarnings(""unchecked"")"
17471,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestCircularReferences.java,316,,"    Reference parentRef = new Reference(""parent"");"
17472,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestDataFileMeta.java,45,,"      w.setMeta(""avro.foo"", ""bar"");"
17473,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestDataFileReader.java,52,,"      Path emptyFile = Files.createTempFile(""empty"", "".avro"");"
17474,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestDecimalConversion.java,144,,"    final BigDecimal value = new BigDecimal(""123.45"");"
17475,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java,94,,"    final Schema schema = Schema.createFixed(""aDecimal"", null, null, 4);"
17476,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java,95,,"    assertThrows(""Should reject precision"", IllegalArgumentException.class, ""fixed(4) cannot store 10 digits (max 9)"","
17477,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java,100,,"    Assert.assertNull(""Invalid logical type should not be set on schema"", LogicalTypes.fromSchemaIgnoreInvalid(schema));"
17478,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestNestedRecords.java,42,,"    final Schema child = SchemaBuilder.record(""Child"").namespace(""org.apache.avro.nested"").fields()"
17479,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestNestedRecords.java,43,,"        .requiredString(""childField"").endRecord();"
17480,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestNestedRecords.java,46,,"        .requiredString(""parentField1"").name(""child1"").type(child).noDefault().requiredString(""parentField2"")"
17481,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestNestedRecords.java,46,,"        .requiredString(""parentField1"").name(""child1"").type(child).noDefault().requiredString(""parentField2"")"
17482,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestNestedRecords.java,46,,"        .requiredString(""parentField1"").name(""child1"").type(child).noDefault().requiredString(""parentField2"")"
17483,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java,56,,"    String recordName = ""name"";"
17484,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java,57,,"    Schema schema = Schema.createRecord(recordName, ""doc"", ""namespace"", false);"
17485,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java,57,,"    Schema schema = Schema.createRecord(recordName, ""doc"", ""namespace"", false);"
17486,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java,220,,"    Schema.Field field = new Schema.Field(""myField"", Schema.create(Schema.Type.INT), ""doc"", 1);"
17487,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,51,,"    Schema schema = SchemaBuilder.record(""myrecord"").namespace(""org.example"").aliases(""oldrecord"").fields().name(""f0"")"
17488,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,51,,"    Schema schema = SchemaBuilder.record(""myrecord"").namespace(""org.example"").aliases(""oldrecord"").fields().name(""f0"")"
17489,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,99,,"    Schema s = SchemaBuilder.builder().intBuilder().prop(""booleanProp"", true).prop(""intProp"", Integer.MAX_VALUE)"
17490,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,99,,"    Schema s = SchemaBuilder.builder().intBuilder().prop(""booleanProp"", true).prop(""intProp"", Integer.MAX_VALUE)"
17491,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,100,,"        .prop(""longProp"", Long.MAX_VALUE).prop(""floatProp"", 1.0f).prop(""doubleProp"", Double.MAX_VALUE)"
17492,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,100,,"        .prop(""longProp"", Long.MAX_VALUE).prop(""floatProp"", 1.0f).prop(""doubleProp"", Double.MAX_VALUE)"
17493,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,100,,"        .prop(""longProp"", Long.MAX_VALUE).prop(""floatProp"", 1.0f).prop(""doubleProp"", Double.MAX_VALUE)"
17494,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,101,,"        .prop(""byteProp"", new byte[] { 0x41, 0x42, 0x43 }).prop(""stringProp"", ""abc"").endInt();"
17495,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,101,,"        .prop(""byteProp"", new byte[] { 0x41, 0x42, 0x43 }).prop(""stringProp"", ""abc"").endInt();"
17496,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,101,,"        .prop(""byteProp"", new byte[] { 0x41, 0x42, 0x43 }).prop(""stringProp"", ""abc"").endInt();"
17497,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,119,,"    Assert.assertEquals(""ABC"", s.getObjectProp(""byteProp""));"
17498,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,126,,"    Schema s = SchemaBuilder.builder().record(""MyRecord"").fields().name(""myField"").prop(""booleanProp"", true)"
17499,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,126,,"    Schema s = SchemaBuilder.builder().record(""MyRecord"").fields().name(""myField"").prop(""booleanProp"", true)"
17500,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,165,,"    Schema s = SchemaBuilder.builder().intBuilder().prop(""arrayProp"", values).endInt();"
17501,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,171,,"    @SuppressWarnings(""unchecked"")"
17502,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,224,,"    values.put(""booleanKey"", true);"
17503,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,225,,"    values.put(""intKey"", Integer.MAX_VALUE);"
17504,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,226,,"    values.put(""longKey"", Long.MAX_VALUE);"
17505,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,227,,"    values.put(""floatKey"", 1.0f);"
17506,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,228,,"    values.put(""doubleKey"", Double.MAX_VALUE);"
17507,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,229,,"    values.put(""byteKey"", new byte[] { 0x41, 0x42, 0x43 });"
17508,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,230,,"    values.put(""stringKey"", ""abc"");"
17509,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,232,,"    Schema s = SchemaBuilder.builder().intBuilder().prop(""mapProp"", values).endInt();"
17510,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,311,,"    Schema s1 = SchemaBuilder.record(""myrecord"").namespace(""org.example"").fields().name(""myint"").type().intType()"
17511,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,313,,"    Schema s2 = SchemaBuilder.record(""org.example.myrecord"").fields().name(""myint"").type().intType().noDefault()"
17512,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,438,,"    Schema schema = SchemaBuilder.record(""LongList"").fields().name(""value"").type().longType().noDefault().name(""next"")"
17513,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,458,,"    Schema expected = Schema.createEnum(""myenum"", null, null, symbols);"
17514,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,493,,"    Schema schema3 = SchemaBuilder.array().prop(""p"", ""v"").items().type(""long"");"
17515,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,509,,"    Schema schema3 = SchemaBuilder.map().prop(""p"", ""v"").values().type(""int"");"
17516,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,530,,"    Schema rec = SchemaBuilder.record(""Rec"").fields().name(""documented"").doc(""documented"").type().nullType().noDefault()"
17517,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,530,,"    Schema rec = SchemaBuilder.record(""Rec"").fields().name(""documented"").doc(""documented"").type().nullType().noDefault()"
17518,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,552,,"        .stringDefault(""def"").name(""rbytes"").type().bytesType().noDefault().name(""obytes"").type().optional().bytesType()"
17519,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,569,,"    Schema r = SchemaBuilder.record(""Rec"").fields().name(""f0"").type().fixed(""org.foo.MyFixed"").size(1).noDefault()"
17520,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,572,,"        .name(""f5"").type(""MyFixed"", ""org.foo"").noDefault().endRecord();"
17521,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,572,,"        .name(""f5"").type(""MyFixed"", ""org.foo"").noDefault().endRecord();"
17522,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,752,,"    Schema writeSchema = SchemaBuilder.record(""r"").fields().name(""requiredInt"").type().intType().noDefault()"
17523,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,753,,"        .name(""optionalInt"").type().optional().intType().name(""nullableIntWithDefault"").type().nullable().intType()"
17524,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java,753,,"        .name(""optionalInt"").type().optional().intType().name(""nullableIntWithDefault"").type().nullable().intType()"
17525,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibility.java,115,,"      new Schema.Field(""oldfield1"", INT_SCHEMA, null, null), new Schema.Field(""oldfield2"", STRING_SCHEMA, null, null)));"
17526,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibility.java,180,,"        ""Data encoded using writer schema:%n%s%n"" + ""will or may fail to decode using reader schema:%n%s%n"","
17527,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibility.java,180,,"        ""Data encoded using writer schema:%n%s%n"" + ""will or may fail to decode using reader schema:%n%s%n"","
17528,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibility.java,455,,"      new DecodingTestCase(INT_STRING_UNION_SCHEMA, ""the string"", STRING_SCHEMA, new Utf8(""the string"")),"
17529,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibilityEnumDefaults.java,51,,"    Schema writerSchema = SchemaBuilder.record(""Record1"").fields().name(""field2"").type(ENUM2_AB_SCHEMA).noDefault()"
17530,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibilityEnumDefaults.java,54,,"    Schema readerSchema = SchemaBuilder.record(""Record1"").fields().name(""field1"").type(ENUM_AB_ENUM_DEFAULT_A_SCHEMA)"
17531,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibilityTypeMismatch.java,44,,"        { INT_SCHEMA, LONG_SCHEMA, ""reader type: INT not compatible with writer type: LONG"", ""/"" },"
17532,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemaValidation.java,158,,"  Schema rec = SchemaBuilder.record(""test.Rec"").fields().name(""a"").type().intType().intDefault(1).name(""b"").type()"
17533,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemas.java,53,,"  static final Schema ENUM_ABC_ENUM_DEFAULT_A_RECORD = Schema.createRecord(""Record"", null, null, false);"
17534,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemas.java,59,,"        list(new Schema.Field(""Field"", Schema.createEnum(""Schema"", null, null, list(""A"", ""B"", ""C""), ""A""), null, null)));"
17535,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemas.java,59,,"        list(new Schema.Field(""Field"", Schema.createEnum(""Schema"", null, null, list(""A"", ""B"", ""C""), ""A""), null, null)));"
17536,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestSchemas.java,87,,"  static final Schema EMPTY_RECORD1 = Schema.createRecord(""Record1"", null, null, false);"
17537,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestUnionSelfReference.java,35,,"      + ""    \""name\"": \""Node\"","" + ""    \""fields\"": ["" + ""      {"" + ""        \""name\"": \""left\"","""
17538,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestUnionSelfReference.java,36,,"      + ""        \""type\"": ["" + ""          \""null\"","" + ""          {"" + ""            \""type\"": \""Node\"""" + ""          }"""
17539,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestUnionSelfReference.java,36,,"      + ""        \""type\"": ["" + ""          \""null\"","" + ""          {"" + ""            \""type\"": \""Node\"""" + ""          }"""
17540,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestUnionSelfReference.java,36,,"      + ""        \""type\"": ["" + ""          \""null\"","" + ""          {"" + ""            \""type\"": \""Node\"""" + ""          }"""
17541,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestUnionSelfReference.java,36,,"      + ""        \""type\"": ["" + ""          \""null\"","" + ""          {"" + ""            \""type\"": \""Node\"""" + ""          }"""
17542,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestUnionSelfReference.java,36,,"      + ""        \""type\"": ["" + ""          \""null\"","" + ""          {"" + ""            \""type\"": \""Node\"""" + ""          }"""
17543,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestUnionSelfReference.java,37,,"      + ""        ],"" + ""        \""default\"": null"" + ""      },"" + ""      {"" + ""        \""name\"": \""right\"","""
17544,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestUnionSelfReference.java,37,,"      + ""        ],"" + ""        \""default\"": null"" + ""      },"" + ""      {"" + ""        \""name\"": \""right\"","""
17545,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestUnionSelfReference.java,56,,"    assertEquals(""null"", leftFieldSchema.getTypes().get(0).getName());"
17546,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/TestUnionSelfReference.java,57,,"    assertEquals(""Node"", leftFieldSchema.getTypes().get(1).getName());"
17547,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java,85,,"    Assert.assertEquals(""Midnight should be 0"", 0,"
17548,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java,138,,"    Assert.assertEquals(""Known date should be correct"", May_28_2015_21_46_53_221,"
17549,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java,144,,"    Assert.assertEquals(""1970-01-01 should be 0"", Instant.EPOCH,"
17550,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java,154,,"    Assert.assertEquals(""Pre 1970 date should be correct"", Jul_01_1969_12_00_00_123,"
17551,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java,85,,"    Schema s = Schema.createRecord(""schemaName"", ""schemaDoc"", ""namespace"", false);"
17552,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java,85,,"    Schema s = Schema.createRecord(""schemaName"", ""schemaDoc"", ""namespace"", false);"
17553,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java,85,,"    Schema s = Schema.createRecord(""schemaName"", ""schemaDoc"", ""namespace"", false);"
17554,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java,149,,"    Schema schema = Schema.createRecord(""arrayFoo"", ""test"", ""mytest"", false);"
17555,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java,149,,"    Schema schema = Schema.createRecord(""arrayFoo"", ""test"", ""mytest"", false);"
17556,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java,180,,"    Schema schema = Schema.createRecord(""test"", ""doc"", ""test"", false, Collections.EMPTY_LIST);"
17557,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java,563,,"    Schema type1Schema = SchemaBuilder.record(""Type1"").fields().requiredString(""myString"").requiredInt(""myInt"")"
17558,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericDatumWriter.java,151,,"    Schema.Field field = new Schema.Field(""double"", doubleType);"
17559,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericLogicalTypes.java,119,,"    Schema fixedSchema = Schema.createFixed(""aFixed"", null, null, 4);"
17560,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericLogicalTypes.java,122,,"    BigDecimal d1 = new BigDecimal(""-34.34"");"
17561,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericLogicalTypes.java,123,,"    BigDecimal d2 = new BigDecimal(""117230.00"");"
17562,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericRecordBuilder.java,49,,"    builder.set(""intField"", 1);"
17563,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericRecordBuilder.java,51,,"    builder.set(""anArray"", anArray);"
17564,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/io/TestBlockingIO.java,351,,"        { 64, 2, ""[["" + jss(0, 'a') + ""], []]"" }, { 64, 2, ""[["" + jss(10, 'a') + ""], []]"" },"
17565,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/io/TestBlockingIO.java,357,,"        { 64, 2, ""[[], ["" + jss(0, 'a') + ""]]"" }, { 64, 2, ""[[], ["" + jss(10, 'a') + ""]]"" },"
17566,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/io/TestBlockingIO.java,368,,"        { 64, 2, ""[["" + jss(10, 'a') + "", "" + jss(54, '0') + ""]]"" }, { 64, 3, ""[[["" + jss(10, '0') + ""]]]"" },"
17567,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/io/TestBlockingIO.java,368,,"        { 64, 2, ""[["" + jss(10, 'a') + "", "" + jss(54, '0') + ""]]"" }, { 64, 3, ""[[["" + jss(10, '0') + ""]]]"" },"
17568,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/io/TestBlockingIO.java,373,,"        { 64, 3, ""[[["" + jss(10, 'a') + ""], ["" + jss(54, '0') + ""]]]"" },"
17569,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/io/TestEncoders.java,179,,"    Schema schema = new Schema.Parser().parse(""{\""type\"": \""record\"", \""name\"": \""ab\"", \""fields\"": [\n"""
17570,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/io/TestEncoders.java,180,,"        + ""{\""name\"": \""a\"", \""type\"": {\""type\"":\""record\"",\""name\"":\""A\"",\""fields\"":\n"""
17571,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/io/TestEncoders.java,181,,"        + ""[{\""name\"":\""a1\"", \""type\"":\""null\""}, {\""name\"":\""a2\"", \""type\"":\""boolean\""}]}},\n"""
17572,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/io/TestEncoders.java,182,,"        + ""{\""name\"": \""b\"", \""type\"": {\""type\"":\""record\"",\""name\"":\""B\"",\""fields\"":\n"""
17573,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/io/TestResolvingIO.java,113,,"    return new Object[][] { { ""\""int\"""", ""I"", ""\""float\"""", ""F"" }, { ""\""int\"""", ""I"", ""\""double\"""", ""D"" },"
17574,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/io/TestResolvingIO.java,114,,"        { ""\""int\"""", ""I"", ""\""long\"""", ""L"" }, { ""\""long\"""", ""L"", ""\""float\"""", ""F"" },"
17575,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/io/TestResolvingIO.java,117,,"        { ""{\""type\"":\""array\"", \""items\"": \""int\""}"", ""[]"", ""{\""type\"":\""array\"", \""items\"": \""long\""}"", ""[]"", },"
17576,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/io/TestResolvingIO.java,117,,"        { ""{\""type\"":\""array\"", \""items\"": \""int\""}"", ""[]"", ""{\""type\"":\""array\"", \""items\"": \""long\""}"", ""[]"", },"
17577,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/io/TestResolvingIO.java,118,,"        { ""{\""type\"":\""array\"", \""items\"": \""int\""}"", ""[]"", ""{\""type\"":\""array\"", \""items\"": \""double\""}"", ""[]"" },"
17578,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/io/TestResolvingIO.java,130,,"        { ""{\""type\"":\""map\"", \""values\"": \""int\""}"", ""{}"", ""{\""type\"":\""map\"", \""values\"": \""long\""}"", ""{}"" },"
17579,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/io/TestResolvingIO.java,130,,"        { ""{\""type\"":\""map\"", \""values\"": \""int\""}"", ""{}"", ""{\""type\"":\""map\"", \""values\"": \""long\""}"", ""{}"" },"
17580,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/io/TestResolvingIO.java,131,,"        { ""{\""type\"":\""map\"", \""values\"": \""int\""}"", ""{}"", ""{\""type\"":\""map\"", \""values\"": \""double\""}"", ""{}"" },"
17581,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/io/TestResolvingIO.java,144,,"        { ""{\""type\"":\""record\"",\""name\"":\""r\"",\""fields\"":["" + ""{\""name\"":\""f\"", \""type\"":\""int\""}]}"", ""I"","
17582,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/io/TestResolvingIO.java,158,,"        { ""[\""int\""]"", ""U0I"", ""[\""long\""]"", ""U0L"" }, { ""[\""int\""]"", ""U0I"", ""[\""double\""]"", ""U0D"" },"
17583,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/io/TestResolvingIO.java,158,,"        { ""[\""int\""]"", ""U0I"", ""[\""long\""]"", ""U0L"" }, { ""[\""int\""]"", ""U0I"", ""[\""double\""]"", ""U0D"" },"
17584,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/io/TestResolvingIOResolving.java,73,,"        { ""{\""type\"":\""record\"",\""name\"":\""r\"",\""fields\"":["" + ""{\""name\"":\""f1\"", \""type\"":\""string\""},"""
17585,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/io/TestResolvingIOResolving.java,97,,"        { ""{\""type\"":\""record\"",\""name\"":\""outer\"",\""fields\"":["" + ""{\""name\"": \""g1\"", """
17586,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/io/TestValidatingIO.java,623,,"        { ""{\""type\"":\""array\"", \""items\"": \""int\""}"", ""[]"", }, { ""{\""type\"":\""array\"", \""items\"": \""long\""}"", ""[]"", },"
17587,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/io/TestValidatingIO.java,658,,"        { ""{\""type\"":\""record\"",\""name\"":\""r\"",\""fields\"":["" + ""{\""name\"":\""f\"", \""type\"":\""boolean\""}]}"", ""B"" },"
17588,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/io/TestValidatingIO.java,681,,"        { ""{\""type\"":\""record\"",\""name\"":\""r\"",\""fields\"":["" + ""{\""name\"":\""f1\"", \""type\"":\""long\""},"""
17589,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/io/TestValidatingIO.java,682,,"            + ""{\""name\"":\""f2\"", "" + ""\""type\"":{\""type\"":\""array\"", \""items\"":\""int\""}}]}"", ""L[c1sI]"" },"
17590,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/io/TestValidatingIO.java,689,,"        { ""{\""type\"":\""array\"", \""items\"":"" + ""{\""type\"":\""record\"",\""name\"":\""r\"",\""fields\"":["""
17591,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/message/TestBinaryMessageEncoding.java,39,,"      .optionalString(""msg"").endRecord();"
17592,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/message/TestBinaryMessageEncoding.java,47,,"  private static final Schema SCHEMA_V2 = SchemaBuilder.record(""TestRecord"").fields().requiredLong(""id"").name(""message"")"
17593,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/message/TestBinaryMessageEncoding.java,48,,"      .aliases(""msg"").type().optional().stringType().optionalDouble(""data"").endRecord();"
17594,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java,79,,"    assertTrue((id.equals(1) && name.equals(""Foo"")) || (id.equals(2) && name.equals(""Bar"")));"
17595,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java,95,,"    assertEquals(""JSON decoder output not same as Binary Decoder"", record, jsonRecord);"
17596,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java,165,,"    Object map1obj = record.get(""map1"");"
17597,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java,176,,"    Object map2obj = record.get(""map2"");"
17598,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java,74,,"    check(Integer.TYPE, ""\""int\"""");"
17599,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java,144,,"    map.put(new Utf8(""foo""), 1.0f);"
17600,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java,609,,"        ""{\""type\"":\""record\"",\""name\"":\""R\"",\""namespace\"":"" + ""\""org.apache.avro.reflect.TestReflect\"",\""fields\"":["""
17601,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java,876,,"    String saved = System.getProperty(""avro.disable.unsafe"");"
17602,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectAllowNulls.java,105,,"    Assert.assertEquals(""Should add null to a non-null union"", nullableDoubleOrLong,"
17603,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java,73,,"    Schema expected = SchemaBuilder.record(RecordWithUUIDList.class.getName()).fields().name(""uuids"").type().array()"
17604,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java,117,,"    Assert.assertEquals(""Should have the correct record name"", ""org.apache.avro.reflect.TestReflectLogicalTypes"","
17605,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java,120,,"    Assert.assertEquals(""Should have the correct logical type"", LogicalTypes.decimal(9, 2),"
17606,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java,243,,"        return ""pair"";"
17607,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java,295,,"    Schema uuidSchema = SchemaBuilder.record(RecordWithUUID.class.getName()).fields().requiredString(""uuid"")"
17608,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java,313,,"    Assert.assertEquals(""Should convert Strings to UUIDs"", expected, read(REFLECT.createDatumReader(uuidSchema), test));"
17609,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java,414,,"    String unsafeValue = System.getProperty(""avro.disable.unsafe"");"
17610,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/specific/TestSpecificToFromByteArray.java,46,,"        LocalDate.now(), t, instant, new BigDecimal(""123.45""));"
17611,./TargetProjects/avro/lang/java/avro/src/test/java/org/apache/avro/util/TestCaseFinder.java,52,,"      result.add(new Object[] { ""<<INPUT a\n<<OUTPUT b"", ""OUTPUT"", new Object[][] { { ""a"", ""b"" } } });"
17612,./TargetProjects/avro/lang/java/compiler/src/main/java/org/apache/avro/compiler/schema/Schemas.java,131,,"          throw new UnsupportedOperationException(""Invalid action "" + action);"
17613,./TargetProjects/avro/lang/java/compiler/src/main/java/org/apache/avro/compiler/specific/SpecificCompiler.java,329,,"      throw new RuntimeException(""Unknown type: "" + schema);"
17614,./TargetProjects/avro/lang/java/compiler/src/test/java/org/apache/avro/compiler/schema/TestSchemas.java,188,,"    String s1 = ""{\""type\"": \""record\"", \""name\"": \""t1\"", \""fields\"": ["" + ""{\""name\"": \""f1\"", \""type\"": \""int\""}"""
17615,./TargetProjects/avro/lang/java/compiler/src/test/java/org/apache/avro/compiler/schema/TestSchemas.java,195,,"    String s2 = ""{\""type\"": \""record\"", \""name\"": \""c1\"", \""fields\"": ["" + ""{\""name\"": \""f1\"", \""type\"": \""int\""}"""
17616,./TargetProjects/avro/lang/java/compiler/src/test/java/org/apache/avro/compiler/schema/TestSchemas.java,221,,"        + ""[{\""name\"": \""f11\"", \""type\"": \""int\""}]}},"" + ""{\""name\"": \""f2\"", \""type\"": \""long\""}"" + ""]}"";"
17617,./TargetProjects/avro/lang/java/compiler/src/test/java/org/apache/avro/compiler/schema/TestSchemas.java,221,,"        + ""[{\""name\"": \""f11\"", \""type\"": \""int\""}]}},"" + ""{\""name\"": \""f2\"", \""type\"": \""long\""}"" + ""]}"";"
17618,./TargetProjects/avro/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java,339,,"    Assert.assertEquals(""Should use LocalDate for date type"", ""java.time.LocalDate"", compiler.javaType(dateSchema));"
17619,./TargetProjects/avro/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java,340,,"    Assert.assertEquals(""Should use LocalTime for time-millis type"", ""java.time.LocalTime"","
17620,./TargetProjects/avro/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java,342,,"    Assert.assertEquals(""Should use DateTime for timestamp-millis type"", ""java.time.Instant"","
17621,./TargetProjects/avro/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java,457,,"    Assert.assertEquals(""Should return boxed type"", compiler.javaUnbox(nullableDecimalSchema1, false),"
17622,./TargetProjects/avro/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java,562,,"    Assert.assertEquals(""org.apache.avro.data.TimeConversions.DateConversion"", usedConversionClasses.iterator().next());"
17623,./TargetProjects/avro/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java,630,,"        Schema s = new Schema.Parser().parse(schema.replace(""__test__"", reserved));"
17624,./TargetProjects/avro/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java,720,,"    Assert.assertEquals(""Should use null for decimal if the flag is off"", ""null"","
17625,./TargetProjects/avro/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java,759,,"        assertFalse(line.contains(""Optional""));"
17626,./TargetProjects/avro/lang/java/ipc-jetty/src/test/java/org/apache/avro/ipc/jetty/TestProtocolHttp.java,81,,"    Protocol.Message message = protocol.createMessage(""ack"", null, new LinkedHashMap<String, String>(),"
17627,./TargetProjects/avro/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java,211,,"      Assert.fail(""Expected "" + TestError.class.getCanonicalName());"
17628,./TargetProjects/avro/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java,269,,"      System.out.println(""server2 port : "" + serverPort);"
17629,./TargetProjects/avro/lang/java/ipc/src/main/java/org/apache/avro/ipc/stats/StatsServlet.java,123,,"    context.put(""title"", ""Avro RPC Stats"");"
17630,./TargetProjects/avro/lang/java/ipc/src/main/java/org/apache/avro/ipc/stats/StatsServlet.java,173,,"      latencyBar.put(""type"", ""bar"");"
17631,./TargetProjects/avro/lang/java/ipc/src/main/java/org/apache/avro/ipc/stats/StatsServlet.java,182,,"      latencyBar.put(""dataStr"", Arrays.toString(hist.getHistogram()));"
17632,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java,68,,"    Assert.assertEquals(""partial string mismatch"", ""ap"", partialstr);"
17633,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/TestCompare.java,58,,"    check(""\""string\"""", new Utf8(""""), new Utf8(""a""));"
17634,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolGeneric.java,71,,"      if (""hello"".equals(message.getName())) {"
17635,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolGeneric.java,72,,"        LOG.info(""hello: "" + params.get(""greeting""));"
17636,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolGeneric.java,76,,"      if (""echo"".equals(message.getName())) {"
17637,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolGeneric.java,77,,"        Object record = params.get(""record"");"
17638,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolGeneric.java,88,,"      if (""error"".equals(message.getName())) {"
17639,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolGeneric.java,90,,"          throw new RuntimeException(""foo"");"
17640,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolGeneric.java,186,,"    fields.add(new Schema.Field(""extra"", Schema.create(Schema.Type.BOOLEAN), null, null));"
17641,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolParsing.java,55,,"    m = parseMessage(""\""ack\"": {"" + ""\""request\"": [],"" + ""\""response\"": \""null\"","" + ""\""one-way\"": true}"");"
17642,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolParsing.java,55,,"    m = parseMessage(""\""ack\"": {"" + ""\""request\"": [],"" + ""\""response\"": \""null\"","" + ""\""one-way\"": true}"");"
17643,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolReflect.java,87,,"        throw new RuntimeException(""foo"");"
17644,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolSpecific.java,91,,"        throw new RuntimeException(""foo"");"
17645,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java,91,,"    check(new File(DIR.getRoot(), name.getMethodName()), ""\""null\"""", ""null"", null);"
17646,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java,96,,"    assertEquals(Schema.create(Type.BOOLEAN), new Schema.Parser().parse(""\""boolean\""""));"
17647,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java,105,,"    check(new File(DIR.getRoot(), name.getMethodName()), ""\""string\"""", ""\""foo\"""", new Utf8(""foo""));"
17648,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java,132,,"    assertEquals(Schema.create(Type.FLOAT), new Schema.Parser().parse(""\""float\""""));"
17649,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java,142,,"    assertEquals(Schema.create(Type.DOUBLE), new Schema.Parser().parse(""\""double\""""));"
17650,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java,190,,"    assertEquals(""bar"", schema.getField(""f"").getProp(""foo""));"
17651,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java,390,,"    checkUnionError(new Schema[] { Schema.createRecord(""Foo"", null, ""org.test"", false),"
17652,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java,445,,"    Schema outer = Schema.createRecord(""Outer"", null, ""space"", false);"
17653,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java,445,,"    Schema outer = Schema.createRecord(""Outer"", null, ""space"", false);"
17654,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java,688,,"    assertEquals(""Decoded data does not match."", datum, decoded);"
17655,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java,922,,"    names.put(new Schema.Name(""Name"", ""space""), schema);"
17656,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java,270,,"    Field height = new Field(""height"", Schema.create(Type.INT), null, null);"
17657,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java,271,,"    Field Height = new Field(""Height"", Schema.create(Type.INT), null, null);"
17658,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java,272,,"    Field height_and_width = new Field(""height_and_width"", Schema.create(Type.STRING), null, null);"
17659,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java,273,,"    Field message = new Field(""message"", Schema.create(Type.STRING), null, null);"
17660,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java,274,,"    Field Message = new Field(""Message"", Schema.create(Type.STRING), null, null);"
17661,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java,275,,"    Field cause = new Field(""cause"", Schema.create(Type.STRING), null, null);"
17662,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java,276,,"    Field clasz = new Field(""class"", Schema.create(Type.STRING), null, null);"
17663,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java,277,,"    Field schema = new Field(""schema"", Schema.create(Type.STRING), null, null);"
17664,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java,278,,"    Field Schema$ = new Field(""Schema"", Schema.create(Type.STRING), null, null);"
17665,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java,280,,"    assertEquals(""getHeight"", SpecificCompiler.generateGetMethod(createRecord(""test"", false, height), height));"
17666,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/io/Perf.java,974,,"  private static final String RECORD_SCHEMA = ""{ \""type\"": \""record\"", \""name\"": \""R\"", \""fields\"": [\n"""
17667,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/io/Perf.java,975,,"      + ""{ \""name\"": \""f1\"", \""type\"": \""double\"" },\n"" + ""{ \""name\"": \""f2\"", \""type\"": \""double\"" },\n"""
17668,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/io/Perf.java,975,,"      + ""{ \""name\"": \""f1\"", \""type\"": \""double\"" },\n"" + ""{ \""name\"": \""f2\"", \""type\"": \""double\"" },\n"""
17669,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/io/Perf.java,976,,"      + ""{ \""name\"": \""f3\"", \""type\"": \""double\"" },\n"" + ""{ \""name\"": \""f4\"", \""type\"": \""int\"" },\n"""
17670,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/io/Perf.java,976,,"      + ""{ \""name\"": \""f3\"", \""type\"": \""double\"" },\n"" + ""{ \""name\"": \""f4\"", \""type\"": \""int\"" },\n"""
17671,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/io/Perf.java,977,,"      + ""{ \""name\"": \""f5\"", \""type\"": \""int\"" },\n"" + ""{ \""name\"": \""f6\"", \""type\"": \""int\"" }\n"" + ""] }"";"
17672,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/io/Perf.java,977,,"      + ""{ \""name\"": \""f5\"", \""type\"": \""int\"" },\n"" + ""{ \""name\"": \""f6\"", \""type\"": \""int\"" }\n"" + ""] }"";"
17673,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/ipc/TestSaslDigestMd5.java,111,,"    GenericRecord params = new GenericData.Record(PROTOCOL.getMessages().get(""hello"").getRequest());"
17674,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java,46,,"    requestBuilder.getHttpRequestBuilder().getUserAgentBuilder().setUseragent(""Chrome 123"").setId(""Foo"");"
17675,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java,46,,"    requestBuilder.getHttpRequestBuilder().getUserAgentBuilder().setUseragent(""Chrome 123"").setId(""Foo"");"
17676,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java,48,,"    requestBuilder.getHttpRequestBuilder().getURIBuilder().setMethod(HttpMethod.GET).setPath(""/index.html"");"
17677,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java,55,,"        .add(QueryParameter.newBuilder().setName(""Foo"").setValue(""Bar"").build());"
17678,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java,78,,"    requestBuilder1.getConnectionBuilder().setNetworkAddress(""1.1.1.1"");"
17679,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java,80,,"    requestBuilder2.getConnectionBuilder().setNetworkAddress(""2.2.2.2"");"
17680,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificData.java,81,,"    nested.setName(""foo"");"
17681,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificErrorBuilder.java,30,,"    TestError.Builder testErrorBuilder = TestError.newBuilder().setValue(""value"").setCause(new NullPointerException())"
17682,./TargetProjects/avro/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java,46,,"    Person.Builder builder = Person.newBuilder().setName(""James Gosling"").setYearOfBirth(1955).setState(""CA"");"
17683,./TargetProjects/avro/lang/java/mapred/src/main/java/org/apache/avro/mapred/AvroMultipleOutputs.java,410,,"    @SuppressWarnings({ ""unchecked"" })"
17684,./TargetProjects/avro/lang/java/mapred/src/main/java/org/apache/avro/mapred/Pair.java,172,,"  @SuppressWarnings(""unchecked"")"
17685,./TargetProjects/avro/lang/java/mapred/src/main/java/org/apache/avro/mapreduce/AvroMultipleOutputs.java,211,,"  @SuppressWarnings(""unchecked"")"
17686,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java,62,,"        .withConfiguration(conf).withPath(new Path(mTempDir.getRoot().getPath(), ""myfile"")).withIndexInterval(2); // Index"
17687,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java,69,,"      writer.append(key.set(""banana""), ""Banana"");"
17688,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java,69,,"      writer.append(key.set(""banana""), ""Banana"");"
17689,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java,70,,"      writer.append(key.set(""apple""), ""Apple""); // Ruh, roh!"
17690,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java,70,,"      writer.append(key.set(""apple""), ""Apple""); // Ruh, roh!"
17691,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java,153,,"      writer.append(""carrot"", ""Carrot""); // Will be indexed."
17692,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java,153,,"      writer.append(""carrot"", ""Carrot""); // Will be indexed."
17693,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java,154,,"      writer.append(""durian"", ""Durian"");"
17694,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java,154,,"      writer.append(""durian"", ""Durian"");"
17695,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroDatumConverterFactory.java,58,,"    AvroKey<CharSequence> avroKey = new AvroKey<>(""foo"");"
17696,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSequenceFile.java,54,,"        Schema.create(Schema.Type.INT), new AvroKey<CharSequence>(""one""), new AvroValue<>(1),"
17697,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSequenceFile.java,55,,"        new AvroKey<CharSequence>(""two""), new AvroValue<>(2));"
17698,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSerialization.java,64,,"    @SuppressWarnings(""unchecked"")"
17699,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java,51,,"    assertThat(mComparator.compare(""abc"", ""abcdef""), lessThan(0));"
17700,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java,51,,"    assertThat(mComparator.compare(""abc"", ""abcdef""), lessThan(0));"
17701,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroMultipleOutputs.java,85,,"      amos.getCollector(""myavro"", reporter).collect(outputvalue);"
17702,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroMultipleOutputs.java,109,,"  @SuppressWarnings(""deprecation"")"
17703,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroOutputFormat.java,42,,"    job.set(""mapred.output.compress"", ""false"");"
17704,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroOutputFormat.java,43,,"    job.set(""mapred.output.compression.codec"", ""org.apache.hadoop.io.compress.BZip2Codec"");"
17705,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroOutputFormat.java,48,,"    job.set(AvroJob.OUTPUT_CODEC, ""bzip2"");"
17706,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroOutputFormat.java,57,,"    job.set(""mapred.output.compress"", ""true"");"
17707,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroOutputFormat.java,78,,"    CodecFactory avroDeflateCodec = CodecFactory.fromString(""deflate"");"
17708,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyOutputFormat.java,60,,"    conf.setBoolean(""mapred.output.compress"", true);"
17709,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordWriter.java,81,,"    appleStats.setName(""apple"");"
17710,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordWriter.java,84,,"    bananaStats.setName(""banana"");"
17711,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java,115,,"      record.put(""name"", new Utf8(line.toString()));"
17712,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java,116,,"      record.put(""count"", sum);"
17713,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java,219,,"    Assert.assertEquals(3, counts.get(""apple"").intValue());"
17714,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java,220,,"    Assert.assertEquals(2, counts.get(""banana"").intValue());"
17715,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java,221,,"    Assert.assertEquals(1, counts.get(""carrot"").intValue());"
17716,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java,114,,"      record.put(""name"", new Utf8(line.toString()));"
17717,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java,115,,"      record.put(""count"", sum);"
17718,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java,118,,"      amos.sync(""myavro"", ""myavro"");"
17719,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java,124,,"      amos.sync(""myavro1"", ""myavro1"");"
17720,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java,157,,"      amos.sync(""myavro3"", ""myavro3"");"
17721,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java,218,,"    Assert.assertEquals(3, counts.get(""apple"").intValue());"
17722,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java,219,,"    Assert.assertEquals(2, counts.get(""banana"").intValue());"
17723,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java,220,,"    Assert.assertEquals(1, counts.get(""carrot"").intValue());"
17724,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java,230,,"        new Path(getClass().getResource(""/org/apache/avro/mapreduce/mapreduce-test-input.txt"").toURI().toString()));"
17725,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java,248,,"    FileStatus[] outputFiles = fileSystem.globStatus(outputPath.suffix(""/part-*""));"
17726,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java,258,,"    Assert.assertEquals(3, counts.get(""apple"").intValue());"
17727,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java,259,,"    Assert.assertEquals(2, counts.get(""banana"").intValue());"
17728,./TargetProjects/avro/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java,260,,"    Assert.assertEquals(1, counts.get(""carrot"").intValue());"
17729,./TargetProjects/avro/lang/java/maven-plugin/src/test/java/org/apache/avro/mojo/TestIDLProtocolMojo.java,45,,"    final Set<String> generatedFiles = new HashSet<>(Arrays.asList(""IdlPrivacy.java"", ""IdlTest.java"", ""IdlUser.java"","
17730,./TargetProjects/avro/lang/java/maven-plugin/src/test/java/org/apache/avro/mojo/TestProtocolMojo.java,46,,"        Arrays.asList(""ProtocolPrivacy.java"", ""ProtocolTest.java"", ""ProtocolUser.java""));"
17731,./TargetProjects/avro/lang/java/maven-plugin/src/test/java/org/apache/avro/mojo/TestSchemaMojo.java,46,,"        Arrays.asList(""PrivacyDirectImport.java"", ""PrivacyImport.java"", ""SchemaPrivacy.java"", ""SchemaUser.java""));"
17732,./TargetProjects/avro/lang/java/protobuf/src/test/java/org/apache/avro/protobuf/TestProtoConversions.java,70,,"    Assert.assertEquals(""Round-trip conversion should work"", instant, roundTrip);"
17733,./TargetProjects/avro/lang/java/protobuf/src/test/java/org/apache/avro/protobuf/TestProtoConversions.java,71,,"    Assert.assertEquals(""Known timestamp should be correct"", May_28_2015_21_46_53_221_ts,"
17734,./TargetProjects/avro/lang/java/thrift/src/test/java/org/apache/avro/thrift/test/Foo.java,65,,"      sendBase(""ping"", args);"
17735,./TargetProjects/avro/lang/java/thrift/src/test/java/org/apache/avro/thrift/test/Foo.java,83,,"      sendBase(""add"", args);"
17736,./TargetProjects/avro/lang/java/thrift/src/test/java/org/apache/avro/thrift/test/Foo.java,102,,"      sendBaseOneway(""zip"", args);"
17737,./TargetProjects/avro/lang/java/thrift/src/test/java/org/apache/avro/thrift/test/Foo.java,381,,"              _LOGGER.error(""Exception writing to internal frame buffer"", e);"
17738,./TargetProjects/avro/lang/java/thrift/src/test/java/org/apache/avro/thrift/test/Foo.java,572,,"          throw new java.lang.IllegalArgumentException(""Field "" + fieldId + "" doesn't exist!"");"
17739,./TargetProjects/avro/lang/java/thrift/src/test/java/org/apache/avro/thrift/test/Foo.java,572,,"          throw new java.lang.IllegalArgumentException(""Field "" + fieldId + "" doesn't exist!"");"
17740,./TargetProjects/avro/lang/java/thrift/src/test/java/org/apache/avro/thrift/test/Test.java,1520,,"      sb.append(""null"");"
17741,./TargetProjects/avro/lang/java/tools/src/main/java/org/apache/avro/tool/DataFileRepairTool.java,51,,"        + ""   Where option is one of the following: \n"" + ""      "" + ALL"
17742,./TargetProjects/avro/lang/java/tools/src/test/compiler/output-string/avro/examples/baseball/FieldTest.java,146,,"  @SuppressWarnings(value=""unchecked"")"
17743,./TargetProjects/avro/lang/java/tools/src/test/compiler/output-string/avro/examples/baseball/Player.java,116,,"  @SuppressWarnings(value=""unchecked"")"
17744,./TargetProjects/avro/lang/java/tools/src/test/compiler/output/AddExtraOptionalGettersTest.java,107,,"  @SuppressWarnings(value=""unchecked"")"
17745,./TargetProjects/avro/lang/java/tools/src/test/compiler/output/NoSettersTest.java,107,,"  @SuppressWarnings(value=""unchecked"")"
17746,./TargetProjects/avro/lang/java/tools/src/test/compiler/output/OptionalGettersAllFieldsTest.java,115,,"  @SuppressWarnings(value=""unchecked"")"
17747,./TargetProjects/avro/lang/java/tools/src/test/compiler/output/OptionalGettersNullableFieldsTest.java,115,,"  @SuppressWarnings(value=""unchecked"")"
17748,./TargetProjects/avro/lang/java/tools/src/test/compiler/output/Player.java,116,,"  @SuppressWarnings(value=""unchecked"")"
17749,./TargetProjects/avro/lang/java/tools/src/test/java/org/apache/avro/tool/TestCatTool.java,140,,"    metadata.put(""myMetaKey"", ""myMetaValue"");"
17750,./TargetProjects/avro/lang/java/tools/src/test/java/org/apache/avro/tool/TestCatTool.java,140,,"    metadata.put(""myMetaKey"", ""myMetaValue"");"
17751,./TargetProjects/avro/lang/java/tools/src/test/java/org/apache/avro/tool/TestCatTool.java,142,,"    File input1 = generateData(""input1.avro"", Type.INT, metadata, DEFLATE);"
17752,./TargetProjects/avro/lang/java/tools/src/test/java/org/apache/avro/tool/TestCatTool.java,146,,"    File output = new File(DIR.getRoot(), name.getMethodName() + "".avro"");"
17753,./TargetProjects/avro/lang/java/tools/src/test/java/org/apache/avro/tool/TestCatTool.java,150,,"    List<String> args = asList(input1.getAbsolutePath(), input2.getAbsolutePath(), input3.getAbsolutePath(), ""--offset"","
17754,./TargetProjects/avro/lang/java/tools/src/test/java/org/apache/avro/tool/TestCatTool.java,151,,"        String.valueOf(OFFSET), ""--limit"", String.valueOf(LIMIT_WITHIN_INPUT_BOUNDS), ""--samplerate"","
17755,./TargetProjects/avro/lang/java/tools/src/test/java/org/apache/avro/tool/TestConcatTool.java,114,,"      generateData(name.getMethodName() + ""-"" + i + "".avro"", Type.STRING, metadata, DEFLATE);"
17756,./TargetProjects/avro/lang/java/tools/src/test/java/org/apache/avro/tool/TestConcatTool.java,155,,"    metadata.put(""myMetaKey"", ""myMetaValue"");"
17757,./TargetProjects/avro/lang/java/tools/src/test/java/org/apache/avro/tool/TestConcatTool.java,155,,"    metadata.put(""myMetaKey"", ""myMetaValue"");"
17758,./TargetProjects/avro/lang/java/tools/src/test/java/org/apache/avro/tool/TestConcatTool.java,157,,"    File input1 = generateData(name.getMethodName() + ""-1.avro"", Type.STRING, metadata, DEFLATE);"
17759,./TargetProjects/avro/lang/java/tools/src/test/java/org/apache/avro/tool/TestConcatTool.java,158,,"    File input2 = generateData(name.getMethodName() + ""-2.avro"", Type.STRING, metadata, DEFLATE);"
17760,./TargetProjects/avro/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileRepairTool.java,63,,"      w.append(new Utf8(""apple""));"
17761,./TargetProjects/avro/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileRepairTool.java,64,,"      w.append(new Utf8(""banana""));"
17762,./TargetProjects/avro/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileRepairTool.java,65,,"      w.append(new Utf8(""celery""));"
17763,./TargetProjects/avro/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileRepairTool.java,71,,"      w.append(new Utf8(""guava""));"
17764,./TargetProjects/avro/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileRepairTool.java,72,,"      w.append(new Utf8(""hazelnut""));"
17765,./TargetProjects/avro/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileRepairTool.java,124,,"    assertTrue(output, output.contains(""Number of blocks: 2 Number of corrupt blocks: 1""));"
17766,./TargetProjects/avro/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileRepairTool.java,125,,"    assertTrue(output, output.contains(""Number of records: 5 Number of corrupt records: 0""));"
17767,./TargetProjects/avro/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileRepairTool.java,131,,"    assertTrue(output, output.contains(""Number of blocks: 3 Number of corrupt blocks: 1""));"
17768,./TargetProjects/avro/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileRepairTool.java,132,,"    assertTrue(output, output.contains(""Number of records: 8 Number of corrupt records: 2""));"
17769,./TargetProjects/avro/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileTools.java,98,,"    return baos.toString(""UTF-8"").replace(""\r"", """");"
17770,./TargetProjects/avro/lang/java/tools/src/test/java/org/apache/avro/tool/TestSpecificCompilerTool.java,97,,"    doCompile(new String[] { ""-encoding"", ""UTF-8"", ""-noSetters"", ""schema"","
17771,./TargetProjects/avro/lang/java/tools/src/test/java/org/apache/avro/tool/TestSpecificCompilerTool.java,97,,"    doCompile(new String[] { ""-encoding"", ""UTF-8"", ""-noSetters"", ""schema"","
17772,./TargetProjects/avro/lang/java/tools/src/test/java/org/apache/avro/tool/TestSpecificCompilerTool.java,97,,"    doCompile(new String[] { ""-encoding"", ""UTF-8"", ""-noSetters"", ""schema"","
17773,./TargetProjects/avro/lang/java/tools/src/test/java/org/apache/avro/tool/TestSpecificCompilerTool.java,132,,"    doCompile(new String[] { ""-encoding"", ""UTF-8"", ""schema"", TEST_INPUT_DIR.toString() + ""/position.avsc"","
17774,./TargetProjects/avro/lang/java/tools/src/test/java/org/apache/avro/tool/TestSpecificCompilerTool.java,158,,"    doCompile(new String[] { ""-encoding"", ""UTF-8"", ""-string"", ""schema"", TEST_INPUT_DIR.toString() + ""/position.avsc"","
17775,./TargetProjects/avro/lang/java/tools/src/test/java/org/apache/avro/tool/TestSpecificCompilerTool.java,167,,"    doCompile(new String[] { ""-encoding"", ""UTF-8"", ""-string"", ""schema"", TEST_INPUT_DIR.toString() + ""/fieldtest.avsc"","
17776,./TargetProjects/avro/lang/java/tools/src/test/java/org/apache/avro/tool/TestSpecificCompilerTool.java,176,,"    doCompile(new String[] { ""-encoding"", ""UTF-8"", ""-string"", ""-bigDecimal"", ""schema"","
17777,./TargetProjects/avro/lang/java/trevni/avro/src/test/java/org/apache/trevni/avro/TestShredder.java,56,,"  private static final String SIMPLE_FIELDS = ""{\""name\"":\""x\"",\""type\"":\""int\""},"""
17778,./TargetProjects/avro/lang/java/trevni/avro/src/test/java/org/apache/trevni/avro/TestShredder.java,57,,"      + ""{\""name\"":\""y\"",\""type\"":\""string\""}"";"
17779,./TargetProjects/avro/lang/java/trevni/avro/src/test/java/org/apache/trevni/avro/TestShredder.java,77,,"    String s = ""{\""type\"":\""record\"",\""name\"":\""S\"",\""fields\"":["" + ""{\""name\"":\""x\"",\""type\"":\""int\""},"""
17780,./TargetProjects/avro/lang/java/trevni/core/src/test/java/org/apache/trevni/TestColumnFile.java,72,,"    ColumnFileWriter out = new ColumnFileWriter(createFileMeta(), new ColumnMetaData(""test"", ValueType.INT));"
17781,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/JavaBeanHelperWriter.java,402,,"        pw.println(""    }"");"
17782,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/JavaBeanWriter.java,300,,"                        typeName = ""org.apache.axis.message.MessageElement []"";"
17783,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/JavaBeanWriter.java,321,,"                        || variableName.equals(""_value""))) {"
17784,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/JavaBeanWriter.java,635,,"        pw.println(""    public "" + className + ""() {"");"
17785,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/JavaBeanWriter.java,636,,"        pw.println(""    }"");"
17786,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/JavaBeanWriter.java,865,,"                       + baseJavaType + "" _value) {"");"
17787,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/JavaBeanWriter.java,929,,"            pw.println(""        "" + returnString + "" new "" + wrapper"
17788,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/JavaBeanWriter.java,940,,"                pw.println(""        }"");"
17789,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/JavaBeanWriter.java,1083,,"            if (typeName.equals(""boolean"")) {"
17790,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/JavaEnumTypeWriter.java,102,,"            if (baseClass.equals(""java.lang.String"")) {"
17791,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/JavaEnumTypeWriter.java,155,,"        pw.println(""    }"");"
17792,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/JavaEnumTypeWriter.java,168,,"                pw.println(""        }"");"
17793,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/JavaEnumTypeWriter.java,201,,"                    + ""(value));"");"
17794,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/JavaEnumTypeWriter.java,217,,"            pw.println(""        try {"");"
17795,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/JavaEnumTypeWriter.java,220,,"            pw.println(""        } catch (Exception e) {"");"
17796,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/JavaEnumTypeWriter.java,222,,"                    ""            throw new java.lang.IllegalArgumentException();"");"
17797,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/JavaFaultWriter.java,98,,"            pw.println(""    public "" + type + "" "" + variable + "";"");"
17798,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/JavaFaultWriter.java,102,,"            pw.println(""    }"");"
17799,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/JavaServiceImplWriter.java,278,,"        pw.println(""    public "" + Utils.getJavaLocalName(sEntry.getName())"
17800,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/JavaServiceImplWriter.java,280,,"        pw.println(""    }"");"
17801,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/JavaServiceImplWriter.java,351,,"        pw.println(""        "" + wsddServiceName + "" = name;"");"
17802,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/JavaServiceImplWriter.java,373,,"        pw.println(""        }"");"
17803,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/JavaServiceImplWriter.java,442,,"        pw.println(""    /**"");"
17804,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/JavaServiceImplWriter.java,443,,"        pw.println(""     * "" + Messages.getMessage(""getPortDoc00""));"
17805,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/JavaSkelWriter.java,114,,"        pw.println(""    }"");"
17806,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/JavaSkelWriter.java,254,,"                    pw.println(""        _oper.setSoapAction(\"""" + action + ""\"");"");"
17807,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/JavaStubWriter.java,181,,"        pw.println(""    }"");"
17808,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/JavaStubWriter.java,198,,"        pw.println(""        }"");"
17809,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/JavaStubWriter.java,199,,"        pw.println(""        ((org.apache.axis.client.Service)super.service).setTypeMappingVersion(\"""" + emitter.getTypeMappingVersion() + ""\"");"");"
17810,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/JavaStubWriter.java,287,,"        pw.println(""            }"");"
17811,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/JavaStubWriter.java,314,,"            pw.println(""            // "" + Messages.getMessage(""typeMap00""));"
17812,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/JavaStubWriter.java,904,,"                    + qname.getNamespaceURI() + ""\"", \"""""
17813,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/JavaTestCaseWriter.java,203,,"                pw.print(""        "" + indent);"
17814,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/Utils.java,157,,"            return packagePrefix + name + ""Holder"";"
17815,./TargetProjects/axis-axis1-java/axis-codegen/src/main/java/org/apache/axis/wsdl/toJava/Utils.java,639,,"            return ""new "" + objType + ""("" + var + "")"";"
17816,./TargetProjects/axis-axis1-java/axis-jaxrpc/src/main/java/javax/xml/rpc/encoding/XMLType.java,32,,"        new QName(""http://www.w3.org/2001/XMLSchema"", ""string"");"
17817,./TargetProjects/axis-axis1-java/axis-jaxrpc/src/main/java/javax/xml/rpc/encoding/XMLType.java,88,,"        new QName(""http://schemas.xmlsoap.org/soap/encoding/"", ""string"");"
17818,./TargetProjects/axis-axis1-java/axis-rt-compat/src/main/java/org/apache/axis/components/threadpool/ThreadPool.java,176,,"            log.debug(""Exit: ThreadPool::awaitShutdown"");"
17819,./TargetProjects/axis-axis1-java/axis-rt-compat/src/main/java/org/apache/axis/transport/http/SimpleAxisServer.java,237,,"                log.debug(Messages.getMessage(""exception00""), e);"
17820,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/AxisProperties.java,184,,"                                    log.debug(Messages.getMessage(""exception00""), e);"
17821,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/Message.java,547,,"                log.error(Messages.getMessage(""exception00""), e);"
17822,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/MessageContext.java,969,,"                        Messages.getMessage(""badProp00"", new String[] {"
17823,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/MessageContext.java,970,,"                        name, ""java.lang.String"", value.getClass().getName()}));"
17824,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/SOAPPart.java,421,,"            log.debug(""Exit: SOAPPart::getAsBytes"");"
17825,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/SOAPPart.java,552,,"                log.debug(""Exit: SOAPPart::getAsString(): "" + currentMessage);"
17826,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/attachments/AttachmentPart.java,268,,"                Messages.getMessage(""illegalArgumentException00""));"
17827,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/attachments/AttachmentPart.java,329,,"            log.error(Messages.getMessage(""javaIOException00""), io);"
17828,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/attachments/AttachmentsImpl.java,195,,"            throw new IllegalStateException(Messages.getMessage(""concurrentModificationOfStream""));"
17829,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/attachments/DimeBodyPart.java,158,,"                StringTokenizer st = new StringTokenizer(ct, "" \t;"");"
17830,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/attachments/ManagedMemoryDataSource.java,267,,"            throw new java.io.IOException(Messages.getMessage(""streamClosed""));"
17831,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/attachments/ManagedMemoryDataSource.java,518,,"                        Messages.getMessage(""resourceDeleted""));"
17832,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/client/AdminClient.java,183,,"        String               str   = ""<m:list xmlns:m=\"""" + WSDDConstants.URI_WSDD + ""\""/>"" ;"
17833,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/client/Call.java,964,,"                    Messages.getMessage(""operationAlreadySet""));"
17834,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/client/Call.java,1797,,"                throw new AxisFault(Messages.getMessage(""nullResponse00""));"
17835,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/client/Call.java,1827,,"            entLog.debug(Messages.getMessage(""toAxisFault00""), exp);"
17836,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/client/HappyClient.java,326,,"                ""happyClientNoAxis"","
17837,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/client/Service.java,223,,"                    Messages.getMessage(""wsdlError00"", """" + """", ""\n"" + exp));"
17838,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/client/Service.java,312,,"            throw new ServiceException(Messages.getMessage(""wsdlMissing00""));"
17839,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/client/Service.java,316,,"            throw new ServiceException(Messages.getMessage(""noPort00"", """" + portName));"
17840,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/client/Stub.java,103,,"                        Messages.getMessage(""badProp00"", new String[] {"
17841,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/deployment/wsdd/WSDDJAXRPCHandlerInfo.java,132,,"                   ""CDATA"", _classname);"
17842,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/deployment/wsdd/WSDDOperation.java,139,,"                               ""CDATA"","
17843,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/deployment/wsdd/WSDDParameter.java,107,,"                               ""CDATA"","
17844,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/deployment/wsdd/WSDDService.java,534,,"                               ""CDATA"", context.qName2String(name));"
17845,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/deployment/wsdd/WSDDTypeMapping.java,97,,"        attrs.addAttribute("""", ATTR_ENCSTYLE, ATTR_ENCSTYLE, ""CDATA"", encodingStyle);"
17846,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/description/JavaServiceDesc.java,276,,"                log.debug(Messages.getMessage(""exception00""), e);"
17847,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/description/JavaServiceDesc.java,772,,"                !superClass.getName().startsWith(""java."") &&"
17848,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/description/JavaServiceDesc.java,773,,"                !superClass.getName().startsWith(""javax."") &&"
17849,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/encoding/SerializationContext.java,279,,"                                ""true""));"
17850,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/encoding/SerializationContext.java,866,,"                                       ""CDATA"", ""true"");"
17851,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/encoding/SerializationContext.java,1159,,"                if (qname.startsWith(""xmlns"")) {"
17852,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/encoding/TypeMappingImpl.java,197,,"                                         ""badJavaType"" : ""badXmlType""));"
17853,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/encoding/TypeMappingImpl.java,197,,"                                         ""badJavaType"" : ""badXmlType""));"
17854,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/encoding/ser/ArraySerializer.java,330,,"                                       ""CDATA"","
17855,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/encoding/ser/BaseDeserializerFactory.java,117,,"                        log.debug(org.apache.axis.utils.Messages.getMessage(""exception00""), e);"
17856,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/encoding/ser/BaseSerializerFactory.java,127,,"                        log.debug(org.apache.axis.utils.Messages.getMessage(""exception00""), e);"
17857,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/encoding/ser/MapSerializer.java,82,,"        itemsAttributes.addAttribute(encodingURI, ""type"", encodingPrefix + "":type"","
17858,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/encoding/ser/MapSerializer.java,120,,"        complexType.setAttribute(""name"", ""Map"");"
17859,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/message/MessageElement.java,551,,"                               ""xmlns:"" + prefix, nsURI, ""CDATA"");"
17860,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/message/NamedNodeMapImpl.java,62,,"      throw new java.lang.IllegalArgumentException(""local name = null"");"
17861,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/message/SOAPHeaderElement.java,105,,"            relay = ((relayVal != null) && (relayVal.equals(""true"") || relayVal.equals(""1""))) ? true : false;"
17862,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/providers/BasicProvider.java,70,,"        Hashtable operations = (Hashtable)getOption(""Operations"");"
17863,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/providers/java/EJBProvider.java,98,,"                Messages.getMessage(""noOption00"", "
17864,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/transport/http/AxisServlet.java,299,,"                response.setContentType(""text/html; charset=utf-8"");"
17865,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/transport/http/AxisServlet.java,303,,"                writer.println(""<p>"" +"
17866,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/transport/http/HTTPSender.java,71,,"        ""\r\n"" +"
17867,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/types/Duration.java,143,,"                    Messages.getMessage(""badTimeDuration""));"
17868,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/types/Duration.java,212,,"                    Messages.getMessage(""badDateDuration""));"
17869,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/types/MonthDay.java,57,,"                    Messages.getMessage(""badMonthDay00""));"
17870,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/types/URI.java,523,,"                  throw new MalformedURIException(""No scheme found in URI."");"
17871,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/types/YearMonth.java,60,,"                    Messages.getMessage(""badYearMonth00""));"
17872,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/utils/JavaUtils.java,100,,"        if (primitive.equals(""int""))"
17873,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/utils/JavaUtils.java,102,,"        else if (primitive.equals(""short""))"
17874,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/utils/JavaUtils.java,104,,"        else if (primitive.equals(""boolean""))"
17875,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/utils/JavaUtils.java,106,,"        else if (primitive.equals(""byte""))"
17876,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/utils/JavaUtils.java,108,,"        else if (primitive.equals(""long""))"
17877,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/utils/JavaUtils.java,110,,"        else if (primitive.equals(""double""))"
17878,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/utils/JavaUtils.java,112,,"        else if (primitive.equals(""float""))"
17879,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/utils/JavaUtils.java,114,,"        else if (primitive.equals(""char""))"
17880,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/utils/JavaUtils.java,305,,"                        || destName.equals(""javax.mail.internet.MimeMultipart"")) {"
17881,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/utils/JavaUtils.java,624,,"        if (dest.getName().equals(""javax.activation.DataHandler"")) {"
17882,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/utils/XMLUtils.java,151,,"            log.error(Messages.getMessage(""exception00""), e);"
17883,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/wsdl/fromJava/Types.java,413,,"                && ""Array"".equals(qname.getLocalPart()))) {"
17884,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/wsdl/fromJava/Types.java,564,,"        Element wrapperElement = docHolder.createElement(""element"");"
17885,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/wsdl/fromJava/Types.java,567,,"        wrapperElement.setAttribute(""name"", qname.getLocalPart());"
17886,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/wsdl/fromJava/Types.java,636,,"            childElem.setAttribute(""type"", prefixedName);"
17887,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/wsdl/fromJava/Types.java,642,,"                childElem.setAttribute(""maxOccurs"", ""unbounded"");"
17888,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/wsdl/fromJava/Types.java,1248,,"            element.setAttribute(""nillable"", ""true"");"
17889,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/wsdl/fromJava/Types.java,1248,,"            element.setAttribute(""nillable"", ""true"");"
17890,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/wsdl/symbolTable/SchemaUtils.java,53,,"        if (isXSDNode(node, ""complexType"")) {"
17891,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/wsdl/symbolTable/SchemaUtils.java,65,,"                if (isXSDNode(kid, ""complexContent"")) {"
17892,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/wsdl/symbolTable/SchemaUtils.java,77,,"        if (isXSDNode(node, ""simpleType"")) {"
17893,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/wsdl/symbolTable/SchemaUtils.java,126,,"    if (isXSDNode(node, ""element"")) {"
17894,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/wsdl/symbolTable/SchemaUtils.java,155,,"        } else if (isXSDNode(kid, ""simpleContent"")) {"
17895,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/wsdl/symbolTable/SchemaUtils.java,171,,"              if (localName.equals(""sequence"")) {"
17896,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/wsdl/symbolTable/SchemaUtils.java,181,,"                          if (sequenceLocalName.equals(""choice"")) {"
17897,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/wsdl/symbolTable/SchemaUtils.java,282,,"                    if (isXSDNode(kid, ""extension"")"
17898,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/wsdl/symbolTable/SchemaUtils.java,283,,"                            || isXSDNode(kid, ""restriction"")) {"
17899,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/wsdl/symbolTable/SchemaUtils.java,357,,"                    } else if (localName.equals(""all"")) {"
17900,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/wsdl/symbolTable/SchemaUtils.java,361,,"                    } else if (localName.equals(""group"")) {"
17901,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/wsdl/symbolTable/SchemaUtils.java,466,,"                } else if (localName.equals(""any"")) {"
17902,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/wsdl/symbolTable/SchemaUtils.java,771,,"            if ((form != null) && form.equals(""unqualified"")) {"
17903,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/wsdl/symbolTable/SchemaUtils.java,861,,"        if (isXSDNode(node, ""attribute"")) {"
17904,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/wsdl/symbolTable/SymbolTable.java,1120,,"                    if (!schemaEl.hasAttribute(""targetNamespace"")) {"
17905,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/wsdl/symbolTable/SymbolTable.java,2905,,"            use = ""literal"";"
17906,./TargetProjects/axis-axis1-java/axis-rt-core/src/main/java/org/apache/axis/wsdl/symbolTable/Utils.java,242,,"                } else if (ln.equals(""element"")"
17907,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/MSGDispatch/TestMessageService.java,54,,"        service.getServiceDescription().setDefaultNamespace(""http://db.com"");"
17908,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/MSGDispatch/TestMessageService.java,75,,"        assertNotNull(""Return was null!"", elems);"
17909,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/RPCDispatch/TestRPC.java,99,,"        reverse.setOption(""className"", ""test.RPCDispatch.Service"");"
17910,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/RPCDispatch/TestRPC.java,99,,"        reverse.setOption(""className"", ""test.RPCDispatch.Service"");"
17911,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/RPCDispatch/TestRPC.java,100,,"        reverse.setOption(""allowedMethods"", ""reverseString"");"
17912,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/RPCDispatch/TestRPC.java,100,,"        reverse.setOption(""allowedMethods"", ""reverseString"");"
17913,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/RPCDispatch/TestRPC.java,104,,"        assertEquals(""Did not reverse the string correctly."", ""cba"","
17914,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/RPCDispatch/TestRPC.java,104,,"        assertEquals(""Did not reverse the string correctly."", ""cba"","
17915,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/RPCDispatch/TestRPC.java,105,,"                     rpc(""reverseString"", new Object[] {""abc""}));"
17916,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/RPCDispatch/TestSerializedRPC.java,153,,"        assertEquals(""Did not reverse the string as expected"", ""cba"", rpc(""reverseString"", arg, true));"
17917,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/RPCDispatch/TestSerializedRPC.java,281,,"                     rpc(""overloaded"", arg, true));"
17918,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/encoding/TestBeanDeser2.java,45,,"                new QName(""http://www.sidestep.com/sbws"", ""SbTravelRequest""),"
17919,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/encoding/TestBeanDeser3.java,46,,"                new QName(""http://www.sidestep.com/sbws"", ""SbTravelRequest""),"
17920,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/encoding/TestDOM.java,89,,"       envelope.addHeader(new SOAPHeaderElement(""foo1"", ""foo1""));"
17921,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/encoding/TestDOM.java,90,,"       envelope.addHeader(new SOAPHeaderElement(""foo2"", ""foo2""));"
17922,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/encoding/TestDOM.java,91,,"       envelope.addHeader(new SOAPHeaderElement(""foo3"", ""foo3""));"
17923,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/encoding/TestMultiRefIdentity.java,36,,"        tb1.s1 = ""john"";"
17924,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/encoding/TestMultiRefIdentity.java,42,,"        sci.serialize(new QName(""someLocalPart""), null, tb1);"
17925,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/encoding/TestMultiRefIdentity.java,43,,"        sci.serialize(new QName(""someOtherLocalPart""), null, tb2);"
17926,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/encoding/TestMultiRefIdentity.java,48,,"        int first = s.indexOf(""#id0"");"
17927,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/encoding/TestSer.java,48,,"        RPCParam arg1 = new RPCParam(""urn:myNamespace"", ""testParam"", ""this is a string"");"
17928,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/jaxrpc/TestAxisClient.java,47,,"            return new QName(""faulter"");"
17929,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/jaxrpc/TestAxisClient.java,83,,"        soapService.setOption(Call.WSDL_PORT_NAME, new QName(""Fake""));"
17930,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/jaxrpc/TestAxisClient.java,87,,"        context.setTransportName(""local"");"
17931,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/jaxrpc/TestAxisClient.java,94,,"        assertHandlerRuntime(""handlerZero"", handlerZero, 1, 1, 0);"
17932,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/jaxrpc/TestAxisClient.java,95,,"        assertHandlerRuntime(""handlerOne"", handlerOne, 1, 1, 0);"
17933,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/jaxrpc/TestAxisClient.java,96,,"        assertHandlerRuntime(""handlerTwo"", handlerTwo, 1, 1, 0);"
17934,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/jaxrpc/TestAxisClient.java,201,,"            fail(""Expected AxisFault to be thrown"");"
17935,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/jaxrpc/TestSOAPService.java,40,,"        assertHandlerRuntime(""handlerZero"", handlerZero, 1, 1, 0);"
17936,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/jaxrpc/TestSOAPService.java,41,,"        assertHandlerRuntime(""handlerOne"", handlerOne, 1, 1, 0);"
17937,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/jaxrpc/TestSOAPService.java,42,,"        assertHandlerRuntime(""handlerTwo"", handlerTwo, 1, 1, 0);"
17938,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/jaxrpc/TestSOAPService.java,61,,"        handler1Config.put(""HANDLE_REQUEST_RETURN_VALUE"", Boolean.FALSE);"
17939,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/jaxrpc/TestSOAPService.java,174,,"            fail(""Expected AxisFault to be thrown"");"
17940,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/message/TestJavaSerialization.java,86,,"        input[0] = new SOAPBodyElement(XMLUtils.StringToElement(""urn:foo"", "
17941,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/message/TestMUValues.java,74,,"            fail(""Didn't throw exception with bad MU value"");"
17942,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/message/TestMessageElement.java,127,,"            new MessageElement(""http://www.wolfram.com"",""Test"");"
17943,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/message/TestMessageElement.java,127,,"            new MessageElement(""http://www.wolfram.com"",""Test"");"
17944,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/message/TestMessageElement.java,128,,"        me.addNamespaceDeclaration(""pre"", ""http://www.wolfram2.com"");"
17945,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/message/TestSOAPHeader.java,108,,"        assertEquals(""Didn't find all the right actors."", expectedHeaders,"
17946,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/properties/TestScopedProperties.java,78,,"        config.deployService(""service"", service);"
17947,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/saaj/TestDOM.java,113,,"        RPCParam arg1 = new RPCParam(""urn:myNamespace"", ""testParam1"","
17948,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/saaj/TestSOAPFaults.java,131,,"        envelope.addNamespaceDeclaration(""cwmp"", ""http://cwmp.com"");"
17949,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/saaj/TestSOAPFaults.java,131,,"        envelope.addNamespaceDeclaration(""cwmp"", ""http://cwmp.com"");"
17950,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/session/TestSimpleSession.java,47,,"        session.set(""test"", val);"
17951,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/session/TestSimpleSession.java,81,,"        service.setOption(""allowedMethods"", ""counter"");"
17952,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/session/TestSimpleSession.java,86,,"        config.deployService(""sessionTest"", service);"
17953,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/session/TestSimpleSession.java,102,,"        assertEquals(""Wrong # of calls to init()!"", 1, initCalls);"
17954,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/soap12/TestDeser.java,153,,"        deserialize(SOAP_HEAD + BODY_HEAD + METHOD_HEAD + ITEM + METHOD_TAIL + BODY_TAIL + SOAP_TAIL, ""abc"", false);"
17955,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/soap12/TestDeser.java,184,,"        v.addElement(""def"");"
17956,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/soap12/TestDeser.java,186,,"                    ""<result xsi:type=\""soapenc:Array\"" "" +"
17957,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/soap12/TestDeser.java,190,,"                    ""</result>"" +"
17958,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/soap12/TestEncodingStyle.java,57,,"          "">\n"" +"
17959,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/soap12/TestEncodingStyle.java,134,,"            Messages.getMessage(""noEncodingStyleAttrAppear"", ""Envelope"")));"
17960,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/soap12/TestSer.java,52,,"        RPCParam arg1 = new RPCParam(""urn:myNamespace"", ""testParam"", ""this is a string"");"
17961,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/typedesc/ComplexBean.java,36,,"        fd.setXmlName(new QName(""foo"", ""c""));"
17962,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/types/TestDuration.java,121,,"        assertTrue(""Years do not match"", duration.getYears() == 1);"
17963,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/types/TestDuration.java,122,,"        assertTrue(""Months do not match"", duration.getMonths() == 3);"
17964,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/types/TestDuration.java,211,,"        assertTrue(""Comparison failed"", d1.equals(d2));"
17965,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/utils/TestJavaUtils.java,57,,"        assertEquals(""fooBar"", JavaUtils.xmlNameToJava(""foo-bar""));"
17966,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/utils/TestMessages.java,55,,"            assertTrue(""expected ("" + expected + "") got ("" + message + "")"", expected.equals(message));"
17967,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/utils/TestMessages.java,55,,"            assertTrue(""expected ("" + expected + "") got ("" + message + "")"", expected.equals(message));"
17968,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/utils/TestMessages.java,58,,"            message = Messages.getMessage(""test00"", new String[] {""one"", ""two""});"
17969,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/utils/TestMessages.java,58,,"            message = Messages.getMessage(""test00"", new String[] {""one"", ""two""});"
17970,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/utils/TestMessages.java,60,,"            message = Messages.getMessage(""test01"");"
17971,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/utils/TestMessages.java,75,,"            message = Messages.getMessage(""test02"");"
17972,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/utils/TestQName.java,25,,"        QName qname = new QName(""PREFIX"", ""LOCALPART"");"
17973,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/utils/TestQName.java,25,,"        QName qname = new QName(""PREFIX"", ""LOCALPART"");"
17974,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/utils/TestSrcContent.java,134,,"            new FileNameContentPattern("".+([\\\\/])"""
17975,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/utils/TestSrcContent.java,137,,"                                       + ""([a-zA-Z0-9_]+\\1)*"""
17976,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/utils/TestSrcContent.java,138,,"                                       + ""[^\\\\/]+\\.java"","
17977,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/utils/TestSrcContent.java,151,,"                                       + ""java\\1src\\1org\\1apache\\1axis\\1"""
17978,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/utils/TestStringUtils.java,13,,"        assertEquals(""abc"", StringUtils.strip(""abc"", null));"
17979,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/utils/TestStringUtils.java,14,,"        assertEquals(""abc"", StringUtils.strip(""  abc"", null));"
17980,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/utils/TestStringUtils.java,15,,"        assertEquals(""abc"", StringUtils.strip(""abc  "", null));"
17981,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/utils/TestXMLUtils.java,31,,"        assertNotNull(""Did not get a new Document"", doc);"
17982,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/utils/TestXMLUtils.java,36,,"        Reader reader = (Reader)this.getTestXml(""reader"");"
17983,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/utils/TestXMLUtils.java,87,,"        NodeList nl = doc.getElementsByTagName(""display-name"");"
17984,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/utils/TestXMLUtils.java,116,,"        assertEquals(""Did not get the expected result"", expected, result);"
17985,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/utils/TestXMLUtils.java,173,,"        Element elem = doc.createElementNS("""", ""svg"");"
17986,./TargetProjects/axis-axis1-java/axis-rt-core/src/test/java/test/utils/TestXMLUtils.java,216,,"          sb.append(""<?xml version=\""1.0\"" encoding=\""UTF-8\""?>"" + lineSep)"
17987,./TargetProjects/axis-axis1-java/axis-standalone-server/src/main/java/org/apache/axis/server/standalone/StandaloneAxisServer.java,121,,"        axisServletHolder.setName(""AxisServlet"");"
17988,./TargetProjects/axis-axis1-java/distribution/src/main/files/samples/ws-i/scm/source/java/implemented/org/apache/axis/wsi/scm/manufacturer/ManufacturerServiceTestCase.java,33,,"            throw new junit.framework.AssertionFailedError(""JAX-RPC ServiceException caught: "" + jre);"
17989,./TargetProjects/axis-axis1-java/distribution/src/main/files/samples/ws-i/scm/source/java/implemented/org/apache/axis/wsi/scm/manufacturer/ManufacturerServiceTestCase.java,35,,"        assertNotNull(""binding is null"", binding);"
17990,./TargetProjects/axis-axis1-java/distribution/src/main/files/samples/ws-i/scm/source/java/implemented/org/apache/axis/wsi/scm/manufacturer/ManufacturerServiceTestCase.java,46,,"            throw new junit.framework.AssertionFailedError(""ConfigurationFault Exception caught: "" + e1);"
17991,./TargetProjects/axis-axis1-java/integration/src/test/java/test/dynamic/TestDynamicInvoker.java,44,,"                    fault.getFaultCode().getLocalPart().equals(""HTTP"")) {"
17992,./TargetProjects/axis-axis1-java/integration/src/test/java/test/dynamic/TestDynamicInvoker.java,49,,"            throw new junit.framework.AssertionFailedError(""Remote Exception caught: "" + re);"
17993,./TargetProjects/axis-axis1-java/integration/src/test/java/test/encoding/TestDeser.java,66,,"                    new QName(""http://soapinterop.org/xsd"", ""ArrayOfString""),"
17994,./TargetProjects/axis-axis1-java/integration/src/test/java/test/encoding/TestDeser.java,205,,"                    ""abc"");"
17995,./TargetProjects/axis-axis1-java/integration/src/test/java/test/encoding/TestDeser.java,278,,"        deserialize(""<result xmlns:foo=\"""" + ns + ""\"" xsi:type=\""xsd:QName\"">foo:"" + local + ""</result>"","
17996,./TargetProjects/axis-axis1-java/integration/src/test/java/test/encoding/TestDeser.java,288,,"        v.addElement(""def"");"
17997,./TargetProjects/axis-axis1-java/integration/src/test/java/test/encoding/TestDeser.java,289,,"        deserialize(""<result xsi:type=\""soapenc:Array\"" "" +"
17998,./TargetProjects/axis-axis1-java/integration/src/test/java/test/encoding/TestDeser.java,291,,"                       ""<item xsi:type=\""xsd:string\"">abc</item>"" +"
17999,./TargetProjects/axis-axis1-java/integration/src/test/java/test/encoding/TestDeser.java,292,,"                       ""<item xsi:type=\""xsd:string\"">def</item>"" +"
