47000,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/firewall/FirewallManagerImpl.java,764,,"    @ActionEvent(eventType = EventTypes.EVENT_FIREWALL_CLOSE, eventDescription = ""revoking firewall rule"", async = true)"
47001,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/lb/LoadBalancingRulesManagerImpl.java,413,,"                s_logger.debug(""LB Rollback rule id: "" + loadBalancer.getId() + "" lb state rolback while creating AutoscaleVmGroup"");"
47002,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/lb/LoadBalancingRulesManagerImpl.java,476,,"                        String paramName = paramKVpair.get(""name"");"
47003,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/lb/LoadBalancingRulesManagerImpl.java,755,,"            throw new InvalidParameterException(""Invalid Load balancer : "" + stickinessPolicy.getLoadBalancerId() + "" for Stickiness policy id: "" + stickinessPolicyId);"
47004,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/lb/LoadBalancingRulesManagerImpl.java,770,,"            s_logger.debug(""Set load balancer rule for revoke: rule id "" + loadBalancerId + "", stickinesspolicyID "" + stickinessPolicyId);"
47005,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/lb/LoadBalancingRulesManagerImpl.java,774,,"                    s_logger.warn(""Failed to remove load balancer rule id "" + loadBalancerId + "" for stickinesspolicyID "" + stickinessPolicyId);"
47006,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/lb/LoadBalancingRulesManagerImpl.java,785,,"                s_logger.warn(""Unable to apply the load balancer config because resource is unavaliable."", e);"
47007,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/lb/LoadBalancingRulesManagerImpl.java,1005,,"                    ex.addProxyObject(instanceId.toString(), ""instanceId"");"
47008,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/lb/LoadBalancingRulesManagerImpl.java,1144,,"                ex.addProxyObject(loadBalancer.getUuid(), ""loadBalancerId"");"
47009,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/lb/LoadBalancingRulesManagerImpl.java,1354,,"                    s_logger.debug(""Set load balancer rule for revoke: rule id "" + loadBalancerId + "", vmId "" + instanceId);"
47010,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/lb/LoadBalancingRulesManagerImpl.java,1707,,"                ex.addProxyObject(String.valueOf(sourceIpId), ""sourceIpId"");"
47011,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/lb/LoadBalancingRulesManagerImpl.java,1937,,"                            s_logger.debug(""Load balancer rule id "" + lb.getId() + "" is removed for vm "" +"
47012,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/lb/LoadBalancingRulesManagerImpl.java,2368,,"            sb.join(""tagSearch"", tagSearch, sb.entity().getId(), tagSearch.entity().getResourceId(), JoinBuilder.JoinType.INNER);"
47013,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/router/CommandSetupHelper.java,1064,,"        cmd.addVmData(""metadata"", ""service-offering"", StringUtils.unicodeEscape(serviceOffering));"
47014,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/router/NetworkHelperImpl.java,851,,"                    throw new InvalidParameterValueException(""Failed LB in validation rule id: "" + rule.getId() + "" Cause: expire is not in timeformat: "" + expire);"
47015,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/router/VirtualNetworkApplianceManager.java,53,,"    static final ConfigKey<String> RouterTemplateXen = new ConfigKey<String>(String.class, RouterTemplateXenCK, ""Advanced"", ""SystemVM Template (XenServer)"","
47016,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/router/VirtualNetworkApplianceManager.java,66,,"    static final ConfigKey<String> SetServiceMonitor = new ConfigKey<String>(String.class, SetServiceMonitorCK, ""Advanced"", ""true"","
47017,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/router/VirtualNetworkApplianceManagerImpl.java,734,,"                s_logger.debug(""Found "" + routers.size() + "" running routers. "");"
47018,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/router/VirtualNetworkApplianceManagerImpl.java,872,,"                                final String title = ""Site-to-site Vpn Connection to "" + gw.getName() + "" just switched from "" + oldState + "" to "" + conn.getState();"
47019,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/router/VirtualNetworkApplianceManagerImpl.java,1463,,"        if (StringUtils.isNotBlank(controlIP) && !controlIP.equals(""0.0.0.0"")) {"
47020,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/router/VirtualNetworkApplianceManagerImpl.java,1692,,"        sbpf.and(""networkId"", sbpf.entity().getNetworkId(), SearchCriteria.Op.EQ);"
47021,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/router/VirtualNetworkApplianceManagerImpl.java,1975,,"                buf.append("" eth"").append(deviceId).append(""ip="").append(nic.getIPv4Address());"
47022,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/router/VirtualNetworkApplianceManagerImpl.java,2444,,"        s_logger.debug(""Found "" + firewallRulesEgress.size() + "" firewall Egress rule(s) to apply as a part of domR "" + router + "" start."");"
47023,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/router/VirtualNetworkApplianceManagerImpl.java,2556,,"                s_logger.debug(""Found"" + revokedIpAliasVOs.size() + ""ip Aliases to revoke on the router as a part of dhcp configuration"");"
47024,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/router/VirtualNetworkApplianceManagerImpl.java,2774,,"                s_logger.error(""Unable to start vpn: unable add users to vpn in zone "" + router.getDataCenterId() + "" for account "" + vpn.getAccountId() + "" on domR: """
47025,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/router/VirtualNetworkApplianceManagerImpl.java,2774,,"                s_logger.error(""Unable to start vpn: unable add users to vpn in zone "" + router.getDataCenterId() + "" for account "" + vpn.getAccountId() + "" on domR: """
47026,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/router/VirtualNetworkApplianceManagerImpl.java,2781,,"                        + router.getInstanceName() + "" due to "" + answer.getDetails());"
47027,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/router/VirtualNetworkApplianceManagerImpl.java,2996,,"                        s_logger.warn(""Fail to stop router "" + router.getInstanceName(), e);"
47028,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/router/VpcVirtualNetworkApplianceManagerImpl.java,167,,"            s_logger.warn(""Failed to add router "" + router + "" to network "" + network + "" due to "", ex);"
47029,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/router/VpcVirtualNetworkApplianceManagerImpl.java,197,,"                s_logger.debug(""Router "" + router + "" is not a part of the Guest network "" + network);"
47030,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/router/VpcVirtualNetworkApplianceManagerImpl.java,406,,"                        s_logger.debug(""Found "" + networkACLs.size() + "" network ACLs to apply as a part of VPC VR "" + domainRouterVO + "" start for private gateway ip = """
47031,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/router/VpcVirtualNetworkApplianceManagerImpl.java,799,,"            s_logger.error(""Unable to start vpn: unable add users to vpn in zone "" + router.getDataCenterId() + "" for account "" + vpn.getAccountId() + "" on domR: """
47032,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/router/VpcVirtualNetworkApplianceManagerImpl.java,799,,"            s_logger.error(""Unable to start vpn: unable add users to vpn in zone "" + router.getDataCenterId() + "" for account "" + vpn.getAccountId() + "" on domR: """
47033,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/rules/NicPlugInOutRules.java,124,,"                s_logger.warn(""Failed to remove router "" + _router + "" from vlan "" + entry.getKey() + "" in public network "" + publicNtwk + "" due to "", e);"
47034,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/rules/RulesManagerImpl.java,843,,"        sb.and(""purpose"", sb.entity().getPurpose(), Op.EQ);"
47035,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/rules/RulesManagerImpl.java,856,,"            sb.join(""tagSearch"", tagSearch, sb.entity().getId(), tagSearch.entity().getResourceId(), JoinBuilder.JoinType.INNER);"
47036,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/rules/RulesManagerImpl.java,1111,,"            s_logger.debug(""Releasing "" + pfRules.size() + "" port forwarding rules for ip id="" + ipId);"
47037,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/rules/RulesManagerImpl.java,1499,,"                s_logger.debug(""Allocating system ip and enabling static nat for it for the vm "" + vm + "" in guest network "" + guestNetwork);"
47038,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/vpc/NetworkACLServiceImpl.java,132,,"        sb.and(""name"", sb.entity().getName(), Op.EQ);"
47039,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/vpc/NetworkACLServiceImpl.java,133,,"        sb.and(""vpcId"", sb.entity().getVpcId(), Op.IN);"
47040,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/vpc/NetworkACLServiceImpl.java,692,,"            sb.join(""tagSearch"", tagSearch, sb.entity().getId(), tagSearch.entity().getResourceId(), JoinBuilder.JoinType.INNER);"
47041,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/vpc/VpcManagerImpl.java,329,,"        IpAddressSearch.and(""vpcId"", IpAddressSearch.entity().getVpcId(), Op.EQ);"
47042,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/vpc/VpcManagerImpl.java,495,,"        CallContext.current().setEventDetails("" Id: "" + offering.getId() + "" Name: "" + name);"
47043,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/vpc/VpcManagerImpl.java,668,,"            ssc.addOr(""displayText"", SearchCriteria.Op.LIKE, ""%"" + keyword + ""%"");"
47044,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/vpc/VpcManagerImpl.java,669,,"            ssc.addOr(""name"", SearchCriteria.Op.LIKE, ""%"" + keyword + ""%"");"
47045,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/vpc/VpcManagerImpl.java,687,,"            sc.addAnd(""state"", SearchCriteria.Op.EQ, state);"
47046,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/vpc/VpcManagerImpl.java,696,,"            sb.and(""zoneId"", sb.entity().getZoneId(), Op.FIND_IN_SET);"
47047,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/vpc/VpcManagerImpl.java,967,,"                ex.addProxyObject(String.valueOf(vpcOffId), ""vpcOfferingId"");"
47048,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/vpc/VpcManagerImpl.java,1111,,"            s_logger.debug(""Updating VPC "" + vpc + "" with state "" + Vpc.State.Inactive + "" as a part of vpc delete"");"
47049,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/vpc/VpcManagerImpl.java,1141,,"            s_logger.debug(""Vpc "" + vpc + "" is destroyed succesfully"");"
47050,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/vpc/VpcManagerImpl.java,1220,,"                tagSearch.or().op(""key"" + String.valueOf(count), tagSearch.entity().getKey(), SearchCriteria.Op.EQ);"
47051,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/vpc/VpcManagerImpl.java,1221,,"                tagSearch.and(""value"" + String.valueOf(count), tagSearch.entity().getValue(), SearchCriteria.Op.EQ);"
47052,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/vpc/VpcManagerImpl.java,1224,,"            tagSearch.and(""resourceType"", tagSearch.entity().getResourceType(), SearchCriteria.Op.EQ);"
47053,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/vpc/VpcManagerImpl.java,1226,,"            sb.join(""tagSearch"", tagSearch, sb.entity().getId(), tagSearch.entity().getResourceId(), JoinBuilder.JoinType.INNER);"
47054,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/vpc/VpcManagerImpl.java,1356,,"            ex.addProxyObject(String.valueOf(vpcId), ""VPC"");"
47055,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/vpc/VpcManagerImpl.java,1380,,"                s_logger.debug(""Destroying vpc "" + vpc + "" that failed to start"");"
47056,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/vpc/VpcManagerImpl.java,1958,,"                s_logger.debug(""Private gateway "" + gateway + "" was applied succesfully on the backend"");"
47057,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/vpn/RemoteAccessVpnManagerImpl.java,619,,"        sb.and(""state"", sb.entity().getState(), Op.IN);"
47058,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/vpn/Site2SiteVpnManagerImpl.java,136,,"            throw new InvalidParameterValueException(""The VPN gateway of VPC "" + vpcId + "" already existed!"");"
47059,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/vpn/Site2SiteVpnManagerImpl.java,183,,"            throw new InvalidParameterValueException(""The customer gateway ip/Domain "" + gatewayIp + "" is invalid!"");"
47060,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/vpn/Site2SiteVpnManagerImpl.java,207,,"            throw new InvalidParameterValueException(""The IKE lifetime "" + ikeLifetime + "" of vpn connection is invalid!"");"
47061,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/vpn/Site2SiteVpnManagerImpl.java,371,,"        CallContext.current().setEventDetails("" Id: "" + cmd.getId());"
47062,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/vpn/Site2SiteVpnManagerImpl.java,690,,"        sb.and(""vpcId"", sb.entity().getVpcId(), SearchCriteria.Op.EQ);"
47063,./TargetProjects/cloudstack/server/src/main/java/com/cloud/network/vpn/Site2SiteVpnManagerImpl.java,691,,"        sb.and(""display"", sb.entity().isDisplay(), SearchCriteria.Op.EQ);"
47064,./TargetProjects/cloudstack/server/src/main/java/com/cloud/projects/ProjectManagerImpl.java,310,,"        s_logger.debug(""Marking project id="" + project.getId() + "" with state "" + State.Disabled + "" as a part of project delete..."");"
47065,./TargetProjects/cloudstack/server/src/main/java/com/cloud/projects/ProjectManagerImpl.java,342,,"        s_logger.debug(""Deleting projects "" + project + "" internal account id="" + account.getId() + "" as a part of project cleanup..."");"
47066,./TargetProjects/cloudstack/server/src/main/java/com/cloud/projects/ProjectManagerImpl.java,471,,"            InvalidParameterValueException ex = new InvalidParameterValueException(""Unable to find project with specified id"");"
47067,./TargetProjects/cloudstack/server/src/main/java/com/cloud/projects/ProjectManagerImpl.java,472,,"            ex.addProxyObject(String.valueOf(projectId), ""projectId"");"
47068,./TargetProjects/cloudstack/server/src/main/java/com/cloud/projects/ProjectManagerImpl.java,619,,"                        throw new InvalidParameterValueException(""Unable to find account name="" + newOwnerName + "" in domain id="" + project.getDomainId());"
47069,./TargetProjects/cloudstack/server/src/main/java/com/cloud/projects/ProjectManagerImpl.java,619,,"                        throw new InvalidParameterValueException(""Unable to find account name="" + newOwnerName + "" in domain id="" + project.getDomainId());"
47070,./TargetProjects/cloudstack/server/src/main/java/com/cloud/projects/ProjectManagerImpl.java,629,,"                            throw new InvalidParameterValueException(""Account "" + newOwnerName +"
47071,./TargetProjects/cloudstack/server/src/main/java/com/cloud/projects/ProjectManagerImpl.java,796,,"                s_logger.warn(""Failed to add account "" + accountName + "" to project id="" + projectId);"
47072,./TargetProjects/cloudstack/server/src/main/java/com/cloud/projects/ProjectManagerImpl.java,992,,"            throw new InvalidParameterValueException(""There is already a pending invitation for account id="" + accountId + "" to the project id="" + project);"
47073,./TargetProjects/cloudstack/server/src/main/java/com/cloud/resource/ResourceManagerImpl.java,416,,"            ex.addProxyObject(String.valueOf(dcId), ""dcId"");"
47074,./TargetProjects/cloudstack/server/src/main/java/com/cloud/resource/ResourceManagerImpl.java,439,,"            ex.addProxyObject(pod.getUuid(), ""podId"");"
47075,./TargetProjects/cloudstack/server/src/main/java/com/cloud/resource/ResourceManagerImpl.java,455,,"            s_logger.error(""Unable to resolve "" + cmd.getHypervisor() + "" to a valid supported hypervisor type"");"
47076,./TargetProjects/cloudstack/server/src/main/java/com/cloud/resource/ResourceManagerImpl.java,479,,"                throw new InvalidParameterValueException(""Unable to resolve Allocation State '"" + cmd.getAllocationState() + ""' to a supported state"");"
47077,./TargetProjects/cloudstack/server/src/main/java/com/cloud/resource/ResourceManagerImpl.java,525,,"            details.put(""cpuOvercommitRatio"", CapacityManager.CpuOverprovisioningFactor.value().toString());"
47078,./TargetProjects/cloudstack/server/src/main/java/com/cloud/resource/ResourceManagerImpl.java,859,,"            throw new InvalidParameterValueException(""Host with id "" + hostId + "" doesn't exist"");"
47079,./TargetProjects/cloudstack/server/src/main/java/com/cloud/resource/ResourceManagerImpl.java,859,,"            throw new InvalidParameterValueException(""Host with id "" + hostId + "" doesn't exist"");"
47080,./TargetProjects/cloudstack/server/src/main/java/com/cloud/resource/ResourceManagerImpl.java,864,,"            throw new CloudRuntimeException(""Host "" + host.getUuid() +"
47081,./TargetProjects/cloudstack/server/src/main/java/com/cloud/resource/ResourceManagerImpl.java,1000,,"                            s_logger.debug(""Cluster: "" + cmd.getId() + "" does not even exist.  Delete call is ignored."");"
47082,./TargetProjects/cloudstack/server/src/main/java/com/cloud/resource/ResourceManagerImpl.java,1204,,"            throw new CloudRuntimeException(""Cannot perform cancelMaintenance when resource state is "" + host.getResourceState() + "", hostId = "" + hostId);"
47083,./TargetProjects/cloudstack/server/src/main/java/com/cloud/resource/ResourceManagerImpl.java,1861,,"            s_logger.warn(""The private ip address of the server ("" + serverPrivateIP + "") is not compatible with the CIDR of pod: "" + pod.getName() + "" and zone: "" +"
47084,./TargetProjects/cloudstack/server/src/main/java/com/cloud/resource/ResourceManagerImpl.java,1861,,"            s_logger.warn(""The private ip address of the server ("" + serverPrivateIP + "") is not compatible with the CIDR of pod: "" + pod.getName() + "" and zone: "" +"
47085,./TargetProjects/cloudstack/server/src/main/java/com/cloud/resourcelimit/ResourceLimitManagerImpl.java,191,,"        ResourceCountSearch.and(""accountId"", ResourceCountSearch.entity().getAccountId(), SearchCriteria.Op.EQ);"
47086,./TargetProjects/cloudstack/server/src/main/java/com/cloud/resourcelimit/ResourceLimitManagerImpl.java,206,,"        snapshotSizeSearch.and(""state"", snapshotSizeSearch.entity().getState(), Op.EQ);"
47087,./TargetProjects/cloudstack/server/src/main/java/com/cloud/resourcelimit/ResourceLimitManagerImpl.java,960,,"        userVmSearch.and(""displayVm"", userVmSearch.entity().isDisplayVm(), Op.EQ);"
47088,./TargetProjects/cloudstack/server/src/main/java/com/cloud/server/ConfigurationServerImpl.java,553,,"                String wSql = ""INSERT INTO `cloud`.`configuration` (category, instance, component, name, value, description) """
47089,./TargetProjects/cloudstack/server/src/main/java/com/cloud/server/ConfigurationServerImpl.java,759,,"            scriptPath = scriptPath.replaceAll(""\\\\"" ,""/"" );"
47090,./TargetProjects/cloudstack/server/src/main/java/com/cloud/server/ConfigurationServerImpl.java,1023,,"                    s_logger.trace(""Added service for the network offering: "" + offService);"
47091,./TargetProjects/cloudstack/server/src/main/java/com/cloud/server/ManagementServerImpl.java,746,,"    static final ConfigKey<Integer> vmPasswordLength = new ConfigKey<Integer>(""Advanced"", Integer.class, ""vm.password.length"", ""6"", ""Specifies the length of a randomly generated password"", false);"
47092,./TargetProjects/cloudstack/server/src/main/java/com/cloud/server/ManagementServerImpl.java,1109,,"        sc.addAnd(""dataCenterId"", SearchCriteria.Op.EQ, zoneId);"
47093,./TargetProjects/cloudstack/server/src/main/java/com/cloud/server/ManagementServerImpl.java,1110,,"        sc.addAnd(""hypervisorType"", SearchCriteria.Op.EQ, hypervisorType);"
47094,./TargetProjects/cloudstack/server/src/main/java/com/cloud/server/ManagementServerImpl.java,1131,,"        sb.and(""name"", sb.entity().getName(), SearchCriteria.Op.LIKE);"
47095,./TargetProjects/cloudstack/server/src/main/java/com/cloud/server/ManagementServerImpl.java,1132,,"        sb.and(""podId"", sb.entity().getPodId(), SearchCriteria.Op.EQ);"
47096,./TargetProjects/cloudstack/server/src/main/java/com/cloud/server/ManagementServerImpl.java,1136,,"        sb.and(""allocationState"", sb.entity().getAllocationState(), SearchCriteria.Op.EQ);"
47097,./TargetProjects/cloudstack/server/src/main/java/com/cloud/server/ManagementServerImpl.java,1240,,"            ex.addProxyObject(vm.getUuid(), ""vmId"");"
47098,./TargetProjects/cloudstack/server/src/main/java/com/cloud/server/ManagementServerImpl.java,1487,,"            s_logger.info(""Volume "" + volume + "" must be in ready state for migration."");"
47099,./TargetProjects/cloudstack/server/src/main/java/com/cloud/server/ManagementServerImpl.java,1687,,"        sb.and(""type"", sb.entity().getType(), SearchCriteria.Op.LIKE);"
47100,./TargetProjects/cloudstack/server/src/main/java/com/cloud/server/ManagementServerImpl.java,1877,,"        sb.and(""vlanType"", sb.entity().getVlanType(), SearchCriteria.Op.EQ);"
47101,./TargetProjects/cloudstack/server/src/main/java/com/cloud/server/ManagementServerImpl.java,1878,,"        sb.and(""physicalNetworkId"", sb.entity().getPhysicalNetworkId(), SearchCriteria.Op.EQ);"
47102,./TargetProjects/cloudstack/server/src/main/java/com/cloud/server/ManagementServerImpl.java,2238,,"        sb.and(""state"", sb.entity().getState(), SearchCriteria.Op.EQ);"
47103,./TargetProjects/cloudstack/server/src/main/java/com/cloud/server/ManagementServerImpl.java,2261,,"            sb.join(""tagSearch"", tagSearch, sb.entity().getId(), tagSearch.entity().getResourceId(), JoinBuilder.JoinType.INNER);"
47104,./TargetProjects/cloudstack/server/src/main/java/com/cloud/server/ManagementServerImpl.java,3484,,"                    s_logger.error(""Exception "", e);"
47105,./TargetProjects/cloudstack/server/src/main/java/com/cloud/server/ManagementServerImpl.java,3589,,"        sb.and(""hostName"", sb.entity().getHostName(), SearchCriteria.Op.LIKE);"
47106,./TargetProjects/cloudstack/server/src/main/java/com/cloud/server/ManagementServerImpl.java,3601,,"                volumeSearch.and(""poolId"", volumeSearch.entity().getPoolId(), SearchCriteria.Op.IN);"
47107,./TargetProjects/cloudstack/server/src/main/java/com/cloud/server/ManagementServerImpl.java,3602,,"                sb.join(""volumeSearch"", volumeSearch, sb.entity().getId(), volumeSearch.entity().getInstanceId(), JoinBuilder.JoinType.INNER);"
47108,./TargetProjects/cloudstack/server/src/main/java/com/cloud/server/ManagementServerImpl.java,3678,,"            final InvalidParameterValueException ex = new InvalidParameterValueException(""unable to find a system vm with specified vmId"");"
47109,./TargetProjects/cloudstack/server/src/main/java/com/cloud/server/StatsCollector.java,209,,"    private static final ConfigKey<Integer> vmDiskStatsInterval = new ConfigKey<Integer>(""Advanced"", Integer.class, ""vm.disk.stats.interval"", ""0"","
47110,./TargetProjects/cloudstack/server/src/main/java/com/cloud/server/StatsCollector.java,745,,"                                                + "" . VM: "" + vmDiskStat.getVmName() + "" Read(Bytes): "" + toHumanReadableSize(vmDiskStat.getBytesRead()) + "" write(Bytes): "" + toHumanReadableSize(vmDiskStat.getBytesWrite())"
47111,./TargetProjects/cloudstack/server/src/main/java/com/cloud/server/StatsCollector.java,752,,"                                            s_logger.debug(""Read # of bytes that's less than the last one.  "" + ""Assuming something went wrong and persisting it. Host: """
47112,./TargetProjects/cloudstack/server/src/main/java/com/cloud/server/StatsCollector.java,753,,"                                                    + host.getName() + "" . VM: "" + vmDiskStat.getVmName() + "" Reported: "" + toHumanReadableSize(vmDiskStat.getBytesRead()) + "" Stored: """
47113,./TargetProjects/cloudstack/server/src/main/java/com/cloud/server/StatsCollector.java,753,,"                                                    + host.getName() + "" . VM: "" + vmDiskStat.getVmName() + "" Reported: "" + toHumanReadableSize(vmDiskStat.getBytesRead()) + "" Stored: """
47114,./TargetProjects/cloudstack/server/src/main/java/com/cloud/server/StatsCollector.java,1444,,"        metrics.put(externalStatsPrefix + ""cloudstack.stats.instances."" + vmName + "".cpu.num"", statsForCurrentIteration.getNumCPUs());"
47115,./TargetProjects/cloudstack/server/src/main/java/com/cloud/servlet/ConsoleProxyPasswordBasedEncryptor.java,63,,"            s_logger.error(""Unexpected exception "", e);"
47116,./TargetProjects/cloudstack/server/src/main/java/com/cloud/servlet/ConsoleProxyServlet.java,150,,"                    userId = (String)params.get(""userid"")[0];"
47117,./TargetProjects/cloudstack/server/src/main/java/com/cloud/servlet/ConsoleProxyServlet.java,215,,"            s_logger.warn(""VM "" + vmId + "" does not exist, sending blank response for thumbnail request"");"
47118,./TargetProjects/cloudstack/server/src/main/java/com/cloud/servlet/ConsoleProxyServlet.java,325,,"            sendResponse(resp, ""failed"");"
47119,./TargetProjects/cloudstack/server/src/main/java/com/cloud/servlet/ConsoleProxyServlet.java,586,,"            Mac mac = Mac.getInstance(""HmacSHA1"");"
47120,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/ImageStoreUploadMonitorImpl.java,241,,"                                s_logger.warn(""Unable to get upload status for volume "" + volume.getUuid() + "". Error details: "" + e.getMessage());"
47121,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/ImageStoreUploadMonitorImpl.java,251,,"                        String error = ""Volume "" + volume.getUuid() + "" failed to upload as SSVM is either destroyed or SSVM agent not in 'Up' state"";"
47122,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/ImageStoreUploadMonitorImpl.java,295,,"                        String error = ""Template "" + template.getUuid() + "" failed to upload as SSVM is either destroyed or SSVM agent not in 'Up' state"";"
47123,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/ImageStoreUploadMonitorImpl.java,352,,"                                    msg = ""Volume "" + tmpVolume.getUuid() + "" failed to upload due to operation timed out"";"
47124,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/StorageManagerImpl.java,425,,"                volumeSB.and(""poolId"", volumeSB.entity().getPoolId(), SearchCriteria.Op.EQ);"
47125,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/StorageManagerImpl.java,427,,"                volumeSB.and(""state"", volumeSB.entity().getState(), SearchCriteria.Op.NIN);"
47126,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/StorageManagerImpl.java,593,,"        StoragePoolSearch.join(""vmVolume"", volumeSearch, volumeSearch.entity().getInstanceId(), StoragePoolSearch.entity().getId(), JoinBuilder.JoinType.INNER);"
47127,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/StorageManagerImpl.java,687,,"                params.put(""zoneId"", host.getDataCenterId());"
47128,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/StorageManagerImpl.java,691,,"                params.put(""url"", pInfo.getPoolType().toString() + ""://"" + pInfo.getHost() + ""/"" + pInfo.getHostPath());"
47129,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/StorageManagerImpl.java,692,,"                params.put(""name"", name);"
47130,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/StorageManagerImpl.java,694,,"                params.put(""details"", pInfo.getDetails());"
47131,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/StorageManagerImpl.java,696,,"                params.put(""providerName"", provider.getName());"
47132,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/StorageManagerImpl.java,818,,"            s_logger.debug(""Failed to add data store: "" + e.getMessage(), e);"
47133,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/StorageManagerImpl.java,854,,"            throw new InvalidParameterValueException(""Primary storage with id "" + primaryStorage.getId() + "" cannot be disabled. Storage pool state : "" + primaryStorage.getStatus().toString());"
47134,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/StorageManagerImpl.java,1132,,"            s_logger.debug(""Found storage pool "" + storagePool.getName() + "" of type "" + storagePool.getPoolType().toString() + "" with overprovisioning factor "" + overProvFactor.toString());"
47135,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/StorageManagerImpl.java,1132,,"            s_logger.debug(""Found storage pool "" + storagePool.getName() + "" of type "" + storagePool.getPoolType().toString() + "" with overprovisioning factor "" + overProvFactor.toString());"
47136,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/StorageManagerImpl.java,1210,,"            throw new StorageUnavailableException(""Unable to send command to the pool "" + pool.getId() + "" due to there is no enabled hosts up in this cluster"", pool.getId());"
47137,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/StorageManagerImpl.java,1222,,"                s_logger.debug(""Unable to send storage pool command to "" + pool + "" via "" + hostId, e);"
47138,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/VolumeApiServiceImpl.java,441,,"            throw new PermissionDeniedException(""Cannot perform this operation, Zone is currently disabled: "" + zoneId);"
47139,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/VolumeApiServiceImpl.java,712,,"                throw new InvalidParameterValueException(""Snapshot id="" + snapshotId + "" is not in "" + Snapshot.State.BackedUp + "" state yet and can't be used for volume creation"");"
47140,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/VolumeApiServiceImpl.java,883,,"                        StringBuilder message = new StringBuilder(""Volume: "");"
47141,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/VolumeApiServiceImpl.java,1200,,"                        throw new RuntimeException(""Unexpected exception"", (Throwable)jobResult);"
47142,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/VolumeApiServiceImpl.java,1678,,"                s_logger.debug(""move volume failed"", e);"
47143,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/VolumeApiServiceImpl.java,1843,,"                throw new RuntimeException(""Operation is interrupted"", e);"
47144,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/VolumeApiServiceImpl.java,1845,,"                throw new RuntimeException(""Execution excetion"", e);"
47145,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/VolumeApiServiceImpl.java,2684,,"            throw new InvalidParameterValueException(""Creating snapshot failed due to volume:"" + volumeId + "" doesn't exist"");"
47146,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/VolumeApiServiceImpl.java,2684,,"            throw new InvalidParameterValueException(""Creating snapshot failed due to volume:"" + volumeId + "" doesn't exist"");"
47147,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/VolumeApiServiceImpl.java,2690,,"            throw new InvalidParameterValueException(""VolumeId: "" + volumeId + "" is not in "" + Volume.State.Ready + "" state but "" + volume.getState() + "". Cannot take snapshot."");"
47148,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/VolumeApiServiceImpl.java,2690,,"            throw new InvalidParameterValueException(""VolumeId: "" + volumeId + "" is not in "" + Volume.State.Ready + "" state but "" + volume.getState() + "". Cannot take snapshot."");"
47149,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/VolumeApiServiceImpl.java,2690,,"            throw new InvalidParameterValueException(""VolumeId: "" + volumeId + "" is not in "" + Volume.State.Ready + "" state but "" + volume.getState() + "". Cannot take snapshot."");"
47150,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/VolumeApiServiceImpl.java,2898,,"            ex.addProxyObject(volumeId.toString(), ""volumeId"");"
47151,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/VolumeApiServiceImpl.java,3015,,"            sc.addAnd(""updated"", SearchCriteria.Op.GTEQ, vm.getUpdateTime());"
47152,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/resource/DummySecondaryStorageResource.java,77,,"        return ""dummy"";"
47153,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/snapshot/SnapshotManager.java,42,,"    static final ConfigKey<Integer> SnapshotHourlyMax = new ConfigKey<Integer>(Integer.class, ""snapshot.max.hourly"", ""Snapshots"", ""8"","
47154,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/snapshot/SnapshotManagerImpl.java,313,,"            s_logger.error(""Unable to find snaphot strategy to handle snapshot with id '"" + snapshotId + ""'"");"
47155,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/snapshot/SnapshotManagerImpl.java,379,,"            s_logger.debug(""Failed to create snapshot"");"
47156,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/snapshot/SnapshotManagerImpl.java,427,,"            throw new InvalidParameterValueException(""Creating snapshot failed due to vm:"" + vmId + "" doesn't exist"");"
47157,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/snapshot/SnapshotManagerImpl.java,662,,"        sb.and(""name"", sb.entity().getName(), SearchCriteria.Op.LIKE);"
47158,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/snapshot/SnapshotManagerImpl.java,665,,"        sb.and(""snapshotTypeEQ"", sb.entity().getsnapshotType(), SearchCriteria.Op.IN);"
47159,./TargetProjects/cloudstack/server/src/main/java/com/cloud/storage/snapshot/SnapshotManagerImpl.java,678,,"            sb.join(""tagSearch"", tagSearch, sb.entity().getId(), tagSearch.entity().getResourceId(), JoinBuilder.JoinType.INNER);"
47160,./TargetProjects/cloudstack/server/src/main/java/com/cloud/template/TemplateAdapterBase.java,251,,"            if (details == null || !details.containsKey(""hypervisortoolsversion"") || details.get(""hypervisortoolsversion"") == null ||"
47161,./TargetProjects/cloudstack/server/src/main/java/com/cloud/template/TemplateAdapterBase.java,433,,"                    throw new PermissionDeniedException(msg + "". Permission denied."");"
47162,./TargetProjects/cloudstack/server/src/main/java/com/cloud/template/TemplateManagerImpl.java,494,,"                    s_logger.warn(""Skip loading template "" + vmTemplate.getId() + "" into primary storage "" + pool.getId() + "" as either the pool zone """
47163,./TargetProjects/cloudstack/server/src/main/java/com/cloud/template/TemplateManagerImpl.java,515,,"            throw new InvalidParameterValueException(""Unable to find "" + desc + "" with id "" + templateId);"
47164,./TargetProjects/cloudstack/server/src/main/java/com/cloud/template/TemplateManagerImpl.java,689,,"                    s_logger.debug(""Template "" + templateId + "" has already been downloaded to pool "" + poolId);"
47165,./TargetProjects/cloudstack/server/src/main/java/com/cloud/template/TemplateManagerImpl.java,1045,,"                    s_logger.debug(""Failed to delete template "" + template.getId() + "" from storage pool "" + pool.getId());"
47166,./TargetProjects/cloudstack/server/src/main/java/com/cloud/template/TemplateManagerImpl.java,1681,,"                    s_logger.debug(""Failed to create template"" + result.getResult());"
47167,./TargetProjects/cloudstack/server/src/main/java/com/cloud/test/DatabaseConfig.java,113,,"        fieldNames.add(""name"");"
47168,./TargetProjects/cloudstack/server/src/main/java/com/cloud/test/DatabaseConfig.java,119,,"        fieldNames.add(""gateway"");"
47169,./TargetProjects/cloudstack/server/src/main/java/com/cloud/test/DatabaseConfig.java,122,,"        fieldNames.add(""zoneId"");"
47170,./TargetProjects/cloudstack/server/src/main/java/com/cloud/test/DatabaseConfig.java,182,,"        s_configurationDescriptions.put(""instance.name"", ""Name of the deployment instance"");"
47171,./TargetProjects/cloudstack/server/src/main/java/com/cloud/test/DatabaseConfig.java,228,,"        s_configurationDescriptions.put(""snapshot.test.minutes.per.hour"", ""Set it to a smaller value to take more recurring snapshots"");"
47172,./TargetProjects/cloudstack/server/src/main/java/com/cloud/test/DatabaseConfig.java,241,,"        s_configurationComponents.put(""host.stats.interval"", ""management-server"");"
47173,./TargetProjects/cloudstack/server/src/main/java/com/cloud/test/DatabaseConfig.java,267,,"        s_configurationComponents.put(""expunge.delay"", ""UserVmManager"");"
47174,./TargetProjects/cloudstack/server/src/main/java/com/cloud/test/DatabaseConfig.java,269,,"        s_configurationComponents.put(""host"", ""AgentManager"");"
47175,./TargetProjects/cloudstack/server/src/main/java/com/cloud/test/DatabaseConfig.java,293,,"        s_configurationComponents.put(""snapshot.poll.interval"", ""SnapshotManager"");"
47176,./TargetProjects/cloudstack/server/src/main/java/com/cloud/test/DatabaseConfig.java,349,,"        s_defaultConfigurationValues.put(""publish.action.events"", ""true"");"
47177,./TargetProjects/cloudstack/server/src/main/java/com/cloud/test/DatabaseConfig.java,870,,"            printError(""For pod "" + name + "" in zone "" + zoneName + "" , please ensure that your gateway is in the same subnet as the  pod's CIDR address."");"
47178,./TargetProjects/cloudstack/server/src/main/java/com/cloud/test/DatabaseConfig.java,870,,"            printError(""For pod "" + name + "" in zone "" + zoneName + "" , please ensure that your gateway is in the same subnet as the  pod's CIDR address."");"
47179,./TargetProjects/cloudstack/server/src/main/java/com/cloud/test/IPRangeConfig.java,54,,"        if (type.equals(""public"")) {"
47180,./TargetProjects/cloudstack/server/src/main/java/com/cloud/test/IPRangeConfig.java,66,,"            if (!result.equals(""success"")) {"
47181,./TargetProjects/cloudstack/server/src/main/java/com/cloud/test/IPRangeConfig.java,74,,"        } else if (type.equals(""private"")) {"
47182,./TargetProjects/cloudstack/server/src/main/java/com/cloud/test/IPRangeConfig.java,128,,"        if (!op.equals(""add"") && !op.equals(""delete"")) {"
47183,./TargetProjects/cloudstack/server/src/main/java/com/cloud/test/IPRangeConfig.java,128,,"        if (!op.equals(""add"") && !op.equals(""delete"")) {"
47184,./TargetProjects/cloudstack/server/src/main/java/com/cloud/test/IPRangeConfig.java,372,,"                System.out.println(""deletePrivateIPRange. Exception: "" + e.getMessage());"
47185,./TargetProjects/cloudstack/server/src/main/java/com/cloud/test/PodZoneConfig.java,54,,"                ""INSERT INTO `cloud`.`host_pod_ref` (id, name, data_center_id, gateway, cidr_address, cidr_size) "" + ""VALUES ('"" + id + ""','"" + name + ""','"" + dcId +"
47186,./TargetProjects/cloudstack/server/src/main/java/com/cloud/test/PodZoneConfig.java,210,,"            return genReturnList(""false"", ""Please specify a valid zone."");"
47187,./TargetProjects/cloudstack/server/src/main/java/com/cloud/user/AccountManagerImpl.java,406,,"                            s_logger.trace(""Root Access granted to "" + acct + "" by "" + checker.getName());"
47188,./TargetProjects/cloudstack/server/src/main/java/com/cloud/user/AccountManagerImpl.java,488,,"                    s_logger.debug(""Access granted to "" + caller + "" to "" + domain + "" by "" + checker.getName());"
47189,./TargetProjects/cloudstack/server/src/main/java/com/cloud/user/AccountManagerImpl.java,488,,"                    s_logger.debug(""Access granted to "" + caller + "" to "" + domain + "" by "" + checker.getName());"
47190,./TargetProjects/cloudstack/server/src/main/java/com/cloud/user/AccountManagerImpl.java,493,,"        throw new PermissionDeniedException(""There's no way to confirm "" + caller + "" has access to "" + domain);"
47191,./TargetProjects/cloudstack/server/src/main/java/com/cloud/user/AccountManagerImpl.java,493,,"        throw new PermissionDeniedException(""There's no way to confirm "" + caller + "" has access to "" + domain);"
47192,./TargetProjects/cloudstack/server/src/main/java/com/cloud/user/AccountManagerImpl.java,825,,"                        s_logger.warn(""Unable to destroy network "" + network + "" as a part of account id="" + accountId + "" cleanup."");"
47193,./TargetProjects/cloudstack/server/src/main/java/com/cloud/user/AccountManagerImpl.java,825,,"                        s_logger.warn(""Unable to destroy network "" + network + "" as a part of account id="" + accountId + "" cleanup."");"
47194,./TargetProjects/cloudstack/server/src/main/java/com/cloud/user/AccountManagerImpl.java,1006,,"        @ActionEvent(eventType = EventTypes.EVENT_USER_CREATE, eventDescription = ""creating User"")})"
47195,./TargetProjects/cloudstack/server/src/main/java/com/cloud/user/AccountManagerImpl.java,1137,,"            throw new PermissionDeniedException(""Account id : "" + account.getId() + "" is a system account, can't add a user to it"");"
47196,./TargetProjects/cloudstack/server/src/main/java/com/cloud/user/AccountManagerImpl.java,1394,,"            throw new InvalidParameterValueException(""Unable to find active user by id "" + userId);"
47197,./TargetProjects/cloudstack/server/src/main/java/com/cloud/user/AccountManagerImpl.java,1487,,"            throw new InvalidParameterValueException(""Unable to find user by id"");"
47198,./TargetProjects/cloudstack/server/src/main/java/com/cloud/user/AccountManagerImpl.java,1605,,"            throw new InvalidParameterValueException(""Unable to find account by accountId: "" + accountId + "" OR by name: "" + accountName + "" in domain "" + domainId);"
47199,./TargetProjects/cloudstack/server/src/main/java/com/cloud/user/AccountManagerImpl.java,1605,,"            throw new InvalidParameterValueException(""Unable to find account by accountId: "" + accountId + "" OR by name: "" + accountName + "" in domain "" + domainId);"
47200,./TargetProjects/cloudstack/server/src/main/java/com/cloud/user/AccountManagerImpl.java,1605,,"            throw new InvalidParameterValueException(""Unable to find account by accountId: "" + accountId + "" OR by name: "" + accountName + "" in domain "" + domainId);"
47201,./TargetProjects/cloudstack/server/src/main/java/com/cloud/user/AccountManagerImpl.java,1918,,"                    s_logger.info(""Found "" + removedAccounts.size() + "" removed accounts to cleanup"");"
47202,./TargetProjects/cloudstack/server/src/main/java/com/cloud/user/AccountManagerImpl.java,2283,,"                Mac mac = Mac.getInstance(""HmacSHA1"");"
47203,./TargetProjects/cloudstack/server/src/main/java/com/cloud/user/AccountManagerImpl.java,2385,,"                    s_logger.info(""User "" + username + "" in domain "" + domainName + "" is disabled/locked (or account is disabled/locked)"");"
47204,./TargetProjects/cloudstack/server/src/main/java/com/cloud/user/AccountManagerImpl.java,2568,,"            sb.and(""accountIdIN"", ((IPAddressVO)sb.entity()).getAllocatedToAccountId(), SearchCriteria.Op.IN);"
47205,./TargetProjects/cloudstack/server/src/main/java/com/cloud/user/AccountManagerImpl.java,2569,,"            sb.and(""domainId"", ((IPAddressVO)sb.entity()).getAllocatedInDomainId(), SearchCriteria.Op.EQ);"
47206,./TargetProjects/cloudstack/server/src/main/java/com/cloud/user/AccountManagerImpl.java,2584,,"                sb.join(""domainSearch"", domainSearch, ((IPAddressVO)sb.entity()).getAllocatedInDomainId(), domainSearch.entity().getId(), JoinBuilder.JoinType.INNER);"
47207,./TargetProjects/cloudstack/server/src/main/java/com/cloud/user/AccountManagerImpl.java,2601,,"                sb.join(""accountSearch"", accountSearch, ((IPAddressVO)sb.entity()).getAllocatedToAccountId(), accountSearch.entity().getId(), JoinBuilder.JoinType.INNER);"
47208,./TargetProjects/cloudstack/server/src/main/java/com/cloud/user/AccountManagerImpl.java,2844,,"        assert false : ""How can all of the security checkers pass on checking this caller?"";"
47209,./TargetProjects/cloudstack/server/src/main/java/com/cloud/user/DomainManagerImpl.java,155,,"        sc.addAnd(""name"", SearchCriteria.Op.EQ, name);"
47210,./TargetProjects/cloudstack/server/src/main/java/com/cloud/user/DomainManagerImpl.java,156,,"        sc.addAnd(""parent"", SearchCriteria.Op.EQ, parentId);"
47211,./TargetProjects/cloudstack/server/src/main/java/com/cloud/user/DomainManagerImpl.java,165,,"        sc.addAnd(""path"", SearchCriteria.Op.LIKE, parentDomainPath + ""%"");"
47212,./TargetProjects/cloudstack/server/src/main/java/com/cloud/user/DomainManagerImpl.java,333,,"                    e.addProxyObject(domain.getUuid(), ""domainId"");"
47213,./TargetProjects/cloudstack/server/src/main/java/com/cloud/user/DomainManagerImpl.java,531,,"                s_logger.debug(""Deleting account "" + account + "" as a part of domain id="" + domainId + "" cleanup"");"
47214,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/UserVmManagerImpl.java,555,,"    private static final ConfigKey<Integer> VmIpFetchWaitInterval = new ConfigKey<Integer>(""Advanced"", Integer.class, ""externaldhcp.vmip.retrieval.interval"", ""180"","
47215,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/UserVmManagerImpl.java,699,,"                            s_logger.debug(""Vm ""+ vmId +"" IP ""+vmIp +"" got retrieved successfully"");"
47216,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/UserVmManagerImpl.java,704,,"                                    ""VM "" + vmId + "" nic id "" + nicId + "" ip address "" + vmIp + "" got fetched successfully"");"
47217,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/UserVmManagerImpl.java,742,,"            throw new InvalidParameterValueException(""unable to find a virtual machine with id "" + cmd.getId());"
47218,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/UserVmManagerImpl.java,753,,"            s_logger.error(""vm is not in the right state: "" + vmId);"
47219,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/UserVmManagerImpl.java,754,,"            throw new InvalidParameterValueException(""Vm with id "" + vmId + "" is not in the right state"");"
47220,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/UserVmManagerImpl.java,975,,"            s_logger.warn(""Vm id="" + vmId + "" doesn't exist"");"
47221,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/UserVmManagerImpl.java,1418,,"        s_logger.debug(""Successful addition of "" + network + "" from "" + vmInstance);"
47222,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/UserVmManagerImpl.java,1684,,"            ex.addProxyObject(vm.getUuid(), ""vmId"");"
47223,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/UserVmManagerImpl.java,1702,,"                throw new InvalidParameterValueException(""Allocating ip to guest nic "" + nicVO.getUuid() + "" failed, for insufficient address capacity"");"
47224,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/UserVmManagerImpl.java,1728,,"                    e.addProxyObject(network.getUuid(), ""networkId"");"
47225,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/UserVmManagerImpl.java,1780,,"        s_logger.debug(""Updating IPv4 address of NIC "" + nicVO + "" to "" + ipaddr + ""/"" + nicVO.getIPv4Netmask() + "" with gateway "" + nicVO.getIPv4Gateway());"
47226,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/UserVmManagerImpl.java,2329,,"                    s_logger.warn(""Failed to cleanup resources as a part of vm "" + vm + "" expunge"");"
47227,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/UserVmManagerImpl.java,2530,,"                                s_logger.trace(""Found "" + vms.size() + "" vms to expunge."");"
47228,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/UserVmManagerImpl.java,2813,,"            throw new InvalidParameterValueException(""Security group feature is not supported for vmWare hypervisor"");"
47229,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/UserVmManagerImpl.java,3008,,"            throw new PermissionDeniedException(""Parameter "" + ApiConstants.EXPUNGE + "" can be passed by Admin only. Or when the allow.user.expunge.recover.vm key is set."");"
47230,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/UserVmManagerImpl.java,3294,,"                        s_logger.debug(""Couldn't find default security group for the account "" + owner + "" so creating a new one"");"
47231,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/UserVmManagerImpl.java,3294,,"                        s_logger.debug(""Couldn't find default security group for the account "" + owner + "" so creating a new one"");"
47232,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/UserVmManagerImpl.java,3353,,"                    throw new InvalidParameterValueException(""Unable to find network by id "" + networkId);"
47233,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/UserVmManagerImpl.java,3556,,"        Network newNetwork = _networkMgr.createGuestNetwork(requiredOfferings.get(0).getId(), owner.getAccountName() + ""-network"", owner.getAccountName() + ""-network"","
47234,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/UserVmManagerImpl.java,4126,,"                        vm.setDetail(VmDetailConstants.ROOT_DISK_CONTROLLER, ""scsi"");"
47235,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/UserVmManagerImpl.java,4366,,"            s_logger.warn(""Error while collecting network stats for vm: "" + userVm.getHostName() + "" from host: "" + host.getName(), e);"
47236,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/UserVmManagerImpl.java,4418,,"                                        ""Ignoring current answer. Host: "" + host.getName()  + "" . VM: "" + vmNetworkStat.getVmName() +"
47237,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/UserVmManagerImpl.java,4426,,"                                            ""Assuming something went wrong and persisting it. Host: "" + host.getName() + "" . VM: "" + vmNetworkStat.getVmName() +"
47238,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/UserVmManagerImpl.java,4427,,"                                            "" Reported: "" + toHumanReadableSize(vmNetworkStat.getBytesSent()) + "" Stored: "" + toHumanReadableSize(vmNetworkStat_lock.getCurrentBytesSent()));"
47239,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/UserVmManagerImpl.java,4427,,"                                            "" Reported: "" + toHumanReadableSize(vmNetworkStat.getBytesSent()) + "" Stored: "" + toHumanReadableSize(vmNetworkStat_lock.getCurrentBytesSent()));"
47240,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/UserVmManagerImpl.java,4890,,"            throw new InvalidParameterValueException(""The owner of "" + vm + "" does not exist: "" + vm.getAccountId());"
47241,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/UserVmManagerImpl.java,6711,,"                            s_logger.debug(""AssignVM: use old shared network "" + defaultNetworkOld.getName() + "" with old ip "" + defaultNicOld.getIPv4Address() + "" on default nic of vm:"" + vm.getInstanceName());"
47242,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/UserVmManagerImpl.java,6711,,"                            s_logger.debug(""AssignVM: use old shared network "" + defaultNetworkOld.getName() + "" with old ip "" + defaultNicOld.getIPv4Address() + "" on default nic of vm:"" + vm.getInstanceName());"
47243,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java,256,,"            sb.join(""tagSearch"", tagSearch, sb.entity().getId(), tagSearch.entity().getResourceId(), JoinBuilder.JoinType.INNER);"
47244,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java,424,,"            throw new CloudRuntimeException(""There is other active vm snapshot tasks on the instance, please try again later"");"
47245,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java,530,,"            throw new InvalidParameterValueException(""Create vm to snapshot failed due to vm: "" + vmId + "" is not found"");"
47246,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java,556,,"                throw new RuntimeException(""Operation is interrupted"", e);"
47247,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java,558,,"                throw new RuntimeException(""Execution excetion"", e);"
47248,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java,566,,"                    throw new RuntimeException(""Unexpected exception"", (Throwable)jobResult);"
47249,./TargetProjects/cloudstack/server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java,624,,"            throw new InvalidParameterValueException(""unable to find the vm snapshot with id "" + vmSnapshotId);"
47250,./TargetProjects/cloudstack/server/src/main/java/org/apache/cloudstack/backup/BackupManagerImpl.java,215,,"                throw new CloudRuntimeException(""Offering ID "" + offeringId + "" does not exist"");"
47251,./TargetProjects/cloudstack/server/src/main/java/org/apache/cloudstack/backup/BackupManagerImpl.java,223,,"        sb.and(""name"", sb.entity().getName(), SearchCriteria.Op.LIKE);"
47252,./TargetProjects/cloudstack/server/src/main/java/org/apache/cloudstack/backup/BackupManagerImpl.java,266,,"            throw new CloudRuntimeException(""Did not find VM by provided ID"");"
47253,./TargetProjects/cloudstack/server/src/main/java/org/apache/cloudstack/diagnostics/DiagnosticsServiceImpl.java,105,,"    private static final ConfigKey<Boolean> EnableGarbageCollector = new ConfigKey<>(""Advanced"", Boolean.class,"
47254,./TargetProjects/cloudstack/server/src/main/java/org/apache/cloudstack/direct/download/DirectDownloadManagerImpl.java,245,,"            throw new CloudRuntimeException(""Storage pool "" + poolId + "" could not be found"");"
47255,./TargetProjects/cloudstack/server/src/main/java/org/apache/cloudstack/direct/download/DirectDownloadManagerImpl.java,514,,"            String msg = ""Certificate "" + alias + "" could not be added to host "" + hostId;"
47256,./TargetProjects/cloudstack/server/src/main/java/org/apache/cloudstack/ha/HAManager.java,28,,"    ConfigKey<Integer> MaxConcurrentHealthCheckOperations = new ConfigKey<>(""Advanced"", Integer.class,"
47257,./TargetProjects/cloudstack/server/src/main/java/org/apache/cloudstack/network/lb/ApplicationLoadBalancerManagerImpl.java,137,,"            throw new UnsupportedServiceException(""Only scheme of type "" + Scheme.Internal + "" is supported"");"
47258,./TargetProjects/cloudstack/server/src/main/java/org/apache/cloudstack/network/lb/ApplicationLoadBalancerManagerImpl.java,137,,"            throw new UnsupportedServiceException(""Only scheme of type "" + Scheme.Internal + "" is supported"");"
47259,./TargetProjects/cloudstack/server/src/main/java/org/apache/cloudstack/network/lb/ApplicationLoadBalancerManagerImpl.java,405,,"        sb.and(""name"", sb.entity().getName(), SearchCriteria.Op.EQ);"
47260,./TargetProjects/cloudstack/server/src/main/java/org/apache/cloudstack/network/lb/ApplicationLoadBalancerManagerImpl.java,425,,"            sb.join(""tagSearch"", tagSearch, sb.entity().getId(), tagSearch.entity().getResourceId(), JoinBuilder.JoinType.INNER);"
47261,./TargetProjects/cloudstack/server/src/main/java/org/apache/cloudstack/network/topology/BasicNetworkTopology.java,360,,"            s_logger.warn(""Unable to apply "" + typeString + "", virtual router doesn't exist in the network "" + network.getId());"
47262,./TargetProjects/cloudstack/server/src/main/java/org/apache/cloudstack/region/RegionsApiUtil.java,101,,"                xstream.aliasField(""id"", RegionAccount.class, ""uuid"");"
47263,./TargetProjects/cloudstack/server/src/main/java/org/apache/cloudstack/region/gslb/GlobalLoadBalancingRulesServiceImpl.java,180,,"            throw new InvalidParameterValueException(""Invalid global load balancer rule id: "" + gslbRuleId);"
47264,./TargetProjects/cloudstack/server/src/test/java/com/cloud/api/ApiServletTest.java,91,,"    @SuppressWarnings(""unchecked"")"
47265,./TargetProjects/cloudstack/server/src/test/java/com/cloud/api/ApiServletTest.java,99,,"        Mockito.when(request.getRemoteAddr()).thenReturn(""127.0.0.1"");"
47266,./TargetProjects/cloudstack/server/src/test/java/com/cloud/api/ApiServletTest.java,177,,"        Mockito.when(request.getMethod()).thenReturn(""GET"");"
47267,./TargetProjects/cloudstack/server/src/test/java/com/cloud/api/ApiServletTest.java,248,,"        Mockito.when(request.getHeader(Mockito.eq(""X-Forwarded-For""))).thenReturn(""192.168.1.1"");"
47268,./TargetProjects/cloudstack/server/src/test/java/com/cloud/api/ListPerfTest.java,41,,"        params.put(""response"", ""json"");"
47269,./TargetProjects/cloudstack/server/src/test/java/com/cloud/api/ListPerfTest.java,41,,"        params.put(""response"", ""json"");"
47270,./TargetProjects/cloudstack/server/src/test/java/com/cloud/api/ListPerfTest.java,42,,"        params.put(""listAll"", ""true"");"
47271,./TargetProjects/cloudstack/server/src/test/java/com/cloud/api/ListPerfTest.java,42,,"        params.put(""listAll"", ""true"");"
47272,./TargetProjects/cloudstack/server/src/test/java/com/cloud/api/ListPerfTest.java,43,,"        params.put(""sessionkey"", sessionKey);"
47273,./TargetProjects/cloudstack/server/src/test/java/com/cloud/api/ListPerfTest.java,47,,"        System.out.println(""Time taken to list VM: "" + (after - before) + "" ms"");"
47274,./TargetProjects/cloudstack/server/src/test/java/com/cloud/api/dispatch/ParamGenericValidationWorkerTest.java,106,,"        params.put(""addedParam"", """");"
47275,./TargetProjects/cloudstack/server/src/test/java/com/cloud/api/query/dao/GenericDaoBaseWithTagInformationBaseTest.java,35,,"    private final static String TAG_UUID = ""aaaa-aaaa-aaaa-aaaa"";"
47276,./TargetProjects/cloudstack/server/src/test/java/com/cloud/configuration/ConfigurationManagerTest.java,290,,"        DataCenterVO dc = new DataCenterVO(UUID.randomUUID().toString(), ""test"", ""8.8.8.8"", null, ""10.0.0.1"", null, ""10.0.0.1/24"", null, null, NetworkType.Advanced, null, null,"
47277,./TargetProjects/cloudstack/server/src/test/java/com/cloud/configuration/ConfigurationManagerTest.java,290,,"        DataCenterVO dc = new DataCenterVO(UUID.randomUUID().toString(), ""test"", ""8.8.8.8"", null, ""10.0.0.1"", null, ""10.0.0.1/24"", null, null, NetworkType.Advanced, null, null,"
47278,./TargetProjects/cloudstack/server/src/test/java/com/cloud/configuration/ConfigurationManagerTest.java,290,,"        DataCenterVO dc = new DataCenterVO(UUID.randomUUID().toString(), ""test"", ""8.8.8.8"", null, ""10.0.0.1"", null, ""10.0.0.1/24"", null, null, NetworkType.Advanced, null, null,"
47279,./TargetProjects/cloudstack/server/src/test/java/com/cloud/configuration/ConfigurationManagerTest.java,290,,"        DataCenterVO dc = new DataCenterVO(UUID.randomUUID().toString(), ""test"", ""8.8.8.8"", null, ""10.0.0.1"", null, ""10.0.0.1/24"", null, null, NetworkType.Advanced, null, null,"
47280,./TargetProjects/cloudstack/server/src/test/java/com/cloud/configuration/ConfigurationManagerTest.java,295,,"        IPAddressVO ipAddress = new IPAddressVO(new Ip(""75.75.75.75""), 1, 0xaabbccddeeffL, 10, false);"
47281,./TargetProjects/cloudstack/server/src/test/java/com/cloud/configuration/ConfigurationManagerTest.java,832,,"            configurationMgr.hasSameSubnet(true, ""10.0.0.1"", ""255.255.255.0"", ""10.0.0.2"", ""255.255.255.0"", ""10.0.0.2"", ""10.0.0.10"", false, null, null, null, null, null);"
47282,./TargetProjects/cloudstack/server/src/test/java/com/cloud/configuration/ConfigurationManagerTest.java,832,,"            configurationMgr.hasSameSubnet(true, ""10.0.0.1"", ""255.255.255.0"", ""10.0.0.2"", ""255.255.255.0"", ""10.0.0.2"", ""10.0.0.10"", false, null, null, null, null, null);"
47283,./TargetProjects/cloudstack/server/src/test/java/com/cloud/configuration/ConfigurationManagerTest.java,832,,"            configurationMgr.hasSameSubnet(true, ""10.0.0.1"", ""255.255.255.0"", ""10.0.0.2"", ""255.255.255.0"", ""10.0.0.2"", ""10.0.0.10"", false, null, null, null, null, null);"
47284,./TargetProjects/cloudstack/server/src/test/java/com/cloud/configuration/ConfigurationManagerTest.java,854,,"        when(ipV6Network.getIp6Gateway()).thenReturn(""2001:db8:0:f101::1"");"
47285,./TargetProjects/cloudstack/server/src/test/java/com/cloud/configuration/ConfigurationManagerTest.java,855,,"        when(ipV6Network.getIp6Cidr()).thenReturn(""2001:db8:0:f101::0/64"");"
47286,./TargetProjects/cloudstack/server/src/test/java/com/cloud/configuration/ConfigurationManagerTest.java,856,,"        doThrow(new InvalidParameterValueException(""Exception from Mock: startIPv6 is not in ip6cidr indicated network!"")).when(configurationMgr._networkModel).checkIp6Parameters(""2001:db9:0:f101::2"", ""2001:db9:0:f101::a"", ""2001:db8:0:f101::1"", ""2001:db8:0:f101::0/64"");"
47287,./TargetProjects/cloudstack/server/src/test/java/com/cloud/configuration/ConfigurationManagerTest.java,857,,"        doThrow(new InvalidParameterValueException(""Exception from Mock: endIPv6 is not in ip6cidr indicated network!"")).when(configurationMgr._networkModel).checkIp6Parameters(""2001:db8:0:f101::a"", ""2001:db9:0:f101::2"", ""2001:db8:0:f101::1"", ""2001:db8:0:f101::0/64"");"
47288,./TargetProjects/cloudstack/server/src/test/java/com/cloud/configuration/ConfigurationManagerTest.java,860,,"        configurationMgr.hasSameSubnet(false, null, null, null, null, null, null, true, ""2001:db8:0:f101::1"", ""2001:db8:0:f101::0/64"", ""2001:db8:0:f101::2"", ""2001:db8:0:f101::a"", ipV6Network);"
47289,./TargetProjects/cloudstack/server/src/test/java/com/cloud/configuration/ConfigurationManagerTest.java,914,,"        configurationMgr.validateMaxRateEqualsOrGreater(1l, 2l, ""IOPS Read"");"
47290,./TargetProjects/cloudstack/server/src/test/java/com/cloud/hypervisor/kvm/dpdk/DpdkHelperImplTest.java,186,,"        Mockito.when(hostVO.getCapabilities()).thenReturn(hostCapabilities + "",dpdk"");"
47291,./TargetProjects/cloudstack/server/src/test/java/com/cloud/network/CreatePrivateNetworkTest.java,122,,"            new NetworkVO(1L, TrafficType.Guest, Mode.None, BroadcastDomainType.Vlan, 1L, 1L, 1L, 1L, ""bla"", ""fake"", ""eet.net"", GuestType.Isolated, 1L, 1L,"
47292,./TargetProjects/cloudstack/server/src/test/java/com/cloud/network/CreatePrivateNetworkTest.java,122,,"            new NetworkVO(1L, TrafficType.Guest, Mode.None, BroadcastDomainType.Vlan, 1L, 1L, 1L, 1L, ""bla"", ""fake"", ""eet.net"", GuestType.Isolated, 1L, 1L,"
47293,./TargetProjects/cloudstack/server/src/test/java/com/cloud/network/CreatePrivateNetworkTest.java,124,,"        when(networkService._networkMgr.createGuestNetwork(eq(ntwkOff.getId()), eq(""bla""), eq(""fake""), eq(""10.1.1.1""), eq(""10.1.1.0/24""), nullable(String.class), nullable(Boolean.class), nullable(String.class),"
47294,./TargetProjects/cloudstack/server/src/test/java/com/cloud/network/CreatePrivateNetworkTest.java,130,,"        when(networkService._privateIpDao.findByIpAndSourceNetworkId(net.getId(), ""10.1.1.2"")).thenReturn(null);"
47295,./TargetProjects/cloudstack/server/src/test/java/com/cloud/network/CreatePrivateNetworkTest.java,142,,"            networkService.createPrivateNetwork(""bla"", ""fake"", 1L, ""vlan:1"", ""10.1.1.2"", null, ""10.1.1.1"", ""255.255.255.0"", 1L, 1L, true, 1L, false);"
47296,./TargetProjects/cloudstack/server/src/test/java/com/cloud/network/DedicateGuestVlanRangesTest.java,188,,"        Field dedicateVlanField = _dedicateGuestVlanRangeClass.getDeclaredField(""vlan"");"
47297,./TargetProjects/cloudstack/server/src/test/java/com/cloud/network/DedicateGuestVlanRangesTest.java,190,,"        dedicateVlanField.set(dedicateGuestVlanRangesCmd, ""2-5"");"
47298,./TargetProjects/cloudstack/server/src/test/java/com/cloud/network/DedicateGuestVlanRangesTest.java,192,,"        PhysicalNetworkVO physicalNetwork = new PhysicalNetworkVO(1L, 1L, ""2-5"", ""200"", 1L, null, ""testphysicalnetwork"");"
47299,./TargetProjects/cloudstack/server/src/test/java/com/cloud/network/DedicateGuestVlanRangesTest.java,192,,"        PhysicalNetworkVO physicalNetwork = new PhysicalNetworkVO(1L, 1L, ""2-5"", ""200"", 1L, null, ""testphysicalnetwork"");"
47300,./TargetProjects/cloudstack/server/src/test/java/com/cloud/network/DedicateGuestVlanRangesTest.java,193,,"        physicalNetwork.addIsolationMethod(""VLAN"");"
47301,./TargetProjects/cloudstack/server/src/test/java/com/cloud/network/IpAddressManagerTest.java,113,,"        Network network = setTestIsIpEqualsGatewayOrNetworkOfferingsEmpty(0l, ""gateway"", ""ip6Gateway"", null, new ArrayList<Service>());"
47302,./TargetProjects/cloudstack/server/src/test/java/com/cloud/network/IpAddressManagerTest.java,113,,"        Network network = setTestIsIpEqualsGatewayOrNetworkOfferingsEmpty(0l, ""gateway"", ""ip6Gateway"", null, new ArrayList<Service>());"
47303,./TargetProjects/cloudstack/server/src/test/java/com/cloud/network/Ipv6AddressManagerTest.java,73,,"        boolean result = ip6Manager.isIp6Taken(network, ""requestedIpv6"");"
47304,./TargetProjects/cloudstack/server/src/test/java/com/cloud/network/Ipv6AddressManagerTest.java,119,,"        String requestedIpv6 = setCheckIfCanAllocateIpv6AddresscTest(""2001:db8::10"", false, false);"
47305,./TargetProjects/cloudstack/server/src/test/java/com/cloud/network/element/VirtualRouterElementTest.java,190,,"            ""name"","
47306,./TargetProjects/cloudstack/server/src/test/java/com/cloud/network/firewall/FirewallManagerTest.java,126,,"        FirewallRuleVO rule = new FirewallRuleVO(""rule1"", 1, 80, ""TCP"", 1, 2, 1, FirewallRule.Purpose.Firewall, null, null, null, null);"
47307,./TargetProjects/cloudstack/server/src/test/java/com/cloud/network/lb/AssignLoadBalancerTest.java,166,,"        secIp.add(""10.1.1.175"");"
47308,./TargetProjects/cloudstack/server/src/test/java/com/cloud/network/router/VirtualNetworkApplianceManagerImplTest.java,268,,"        router.setPrivateIpAddress(""192.168.50.15"");"
47309,./TargetProjects/cloudstack/server/src/test/java/com/cloud/network/security/SecurityGroupManagerImplTest.java,65,,"        cidrs.add(""1.2.3.4/5"");"
47310,./TargetProjects/cloudstack/server/src/test/java/com/cloud/network/vpc/NetworkACLServiceImplTest.java,134,,"        Mockito.when(createNetworkAclCmdMock.getProtocol()).thenReturn(""tcp"");"
47311,./TargetProjects/cloudstack/server/src/test/java/com/cloud/network/vpc/NetworkACLServiceImplTest.java,447,,"        NetworkACLItem.Action receivedAction = networkAclServiceImpl.validateAndCreateNetworkAclRuleAction(""deny"");"
47312,./TargetProjects/cloudstack/server/src/test/java/com/cloud/network/vpc/NetworkACLServiceImplTest.java,515,,"        Mockito.when(networkAclItemVoMock.getProtocol()).thenReturn(""all"");"
47313,./TargetProjects/cloudstack/server/src/test/java/com/cloud/network/vpn/RemoteAccessVpnManagerImplTest.java,149,,"        handleExceptionOnValidateIpRangeErrorMustThrowCloudRuntimeException(exceptionToCatch, ""Test"");"
47314,./TargetProjects/cloudstack/server/src/test/java/com/cloud/storage/VolumeApiServiceImplTest.java,213,,"            VolumeVO volumeOfRunningVm = new VolumeVO(""root"", 1L, 1L, 1L, 1L, 1L, ""root"", ""root"", Storage.ProvisioningType.THIN, 1, null, null, ""root"", Volume.Type.ROOT);"
47315,./TargetProjects/cloudstack/server/src/test/java/com/cloud/storage/VolumeApiServiceImplTest.java,548,,"        String tag1 = ""tag1"";"
47316,./TargetProjects/cloudstack/server/src/test/java/com/cloud/user/AccountManagerImplTest.java,182,,"        Mockito.when(userAccountDaoMock.getUserAccount(""test"", 1L)).thenReturn(userAccountVO);"
47317,./TargetProjects/cloudstack/server/src/test/java/com/cloud/user/AccountManagerImplTest.java,458,,"        String userName = ""username"";"
47318,./TargetProjects/cloudstack/server/src/test/java/com/cloud/user/AccountManagerImplTest.java,564,,"        accountManagerImpl.validateUserPasswordAndUpdateIfNeeded(""newPassword"", userVoMock, ""  "");"
47319,./TargetProjects/cloudstack/server/src/test/java/com/cloud/vm/FirstFitPlannerTest.java,337,,"        when(hostTagsDao.getDistinctImplicitHostTags(hostList1, implicitHostTags)).thenReturn(Arrays.asList(""abc"", ""pqr"",""xyz""));"
47320,./TargetProjects/cloudstack/server/src/test/java/com/cloud/vm/FirstFitPlannerTest.java,337,,"        when(hostTagsDao.getDistinctImplicitHostTags(hostList1, implicitHostTags)).thenReturn(Arrays.asList(""abc"", ""pqr"",""xyz""));"
47321,./TargetProjects/cloudstack/server/src/test/java/com/cloud/vm/FirstFitPlannerTest.java,337,,"        when(hostTagsDao.getDistinctImplicitHostTags(hostList1, implicitHostTags)).thenReturn(Arrays.asList(""abc"", ""pqr"",""xyz""));"
47322,./TargetProjects/cloudstack/server/src/test/java/com/cloud/vm/UserVmManagerImplTest.java,348,,"        configureValidateOrReplaceMacAddressTest(0, ""01:23:45:67:89:ab"", ""01:23:45:67:89:ab"");"
47323,./TargetProjects/cloudstack/server/src/test/java/com/cloud/vm/UserVmManagerTest.java,296,,"        Field serviceOfferingIdField = _class.getDeclaredField(""serviceOfferingId"");"
47324,./TargetProjects/cloudstack/server/src/test/java/com/cloud/vm/UserVmManagerTest.java,303,,"        Account account = new AccountVO(""testaccount"", 1L, ""networkdomain"", (short)0, ""uuid"");"
47325,./TargetProjects/cloudstack/server/src/test/java/com/cloud/vm/UserVmManagerTest.java,303,,"        Account account = new AccountVO(""testaccount"", 1L, ""networkdomain"", (short)0, ""uuid"");"
47326,./TargetProjects/cloudstack/server/src/test/java/com/cloud/vm/UserVmManagerTest.java,304,,"        UserVO user = new UserVO(1, ""testuser"", ""password"", ""firstname"", ""lastName"", ""email"", ""timezone"", UUID.randomUUID().toString(), User.Source.UNKNOWN);"
47327,./TargetProjects/cloudstack/server/src/test/java/com/cloud/vm/UserVmManagerTest.java,304,,"        UserVO user = new UserVO(1, ""testuser"", ""password"", ""firstname"", ""lastName"", ""email"", ""timezone"", UUID.randomUUID().toString(), User.Source.UNKNOWN);"
47328,./TargetProjects/cloudstack/server/src/test/java/com/cloud/vm/UserVmManagerTest.java,304,,"        UserVO user = new UserVO(1, ""testuser"", ""password"", ""firstname"", ""lastName"", ""email"", ""timezone"", UUID.randomUUID().toString(), User.Source.UNKNOWN);"
47329,./TargetProjects/cloudstack/server/src/test/java/com/cloud/vm/UserVmManagerTest.java,304,,"        UserVO user = new UserVO(1, ""testuser"", ""password"", ""firstname"", ""lastName"", ""email"", ""timezone"", UUID.randomUUID().toString(), User.Source.UNKNOWN);"
47330,./TargetProjects/cloudstack/server/src/test/java/com/cloud/vm/UserVmManagerTest.java,304,,"        UserVO user = new UserVO(1, ""testuser"", ""password"", ""firstname"", ""lastName"", ""email"", ""timezone"", UUID.randomUUID().toString(), User.Source.UNKNOWN);"
47331,./TargetProjects/cloudstack/server/src/test/java/com/cloud/vm/UserVmManagerTest.java,304,,"        UserVO user = new UserVO(1, ""testuser"", ""password"", ""firstname"", ""lastName"", ""email"", ""timezone"", UUID.randomUUID().toString(), User.Source.UNKNOWN);"
47332,./TargetProjects/cloudstack/server/src/test/java/com/cloud/vm/UserVmManagerTest.java,522,,"        UserVmVO vm = new UserVmVO(10L, ""test"", ""test"", 1L, HypervisorType.Any, 1L, false, false, 1L, 1L, 1, 5L, ""test"", ""test"", 1L);"
47333,./TargetProjects/cloudstack/server/src/test/java/com/cloud/vm/UserVmManagerTest.java,548,,"        Field virtualmachineIdField = _class.getDeclaredField(""nicId"");"
47334,./TargetProjects/cloudstack/server/src/test/java/com/cloud/vm/UserVmManagerTest.java,552,,"        Field accountNameField = _class.getDeclaredField(""ipAddr"");"
47335,./TargetProjects/cloudstack/server/src/test/java/com/cloud/vm/UserVmManagerTest.java,554,,"        accountNameField.set(cmd, ""10.10.10.10"");"
47336,./TargetProjects/cloudstack/server/src/test/java/com/cloud/vm/UserVmManagerTest.java,556,,"        NicVO nic = new NicVO(""nic"", 1L, 2L, VirtualMachine.Type.User);"
47337,./TargetProjects/cloudstack/server/src/test/java/com/cloud/vm/UserVmManagerTest.java,857,,"        assertTrue(""validate return the value with padding"", encodedUserdataWithPadding.equals(_userVmMgr.validateUserData(encodedUserdata, BaseCmd.HTTPMethod.GET)));"
47338,./TargetProjects/cloudstack/server/src/test/java/com/cloud/vpc/VpcApiUnitTest.java,92,,"            _vpcService.validateNtwkOffForNtwkInVpc(2L, 1, ""0.0.0.0"", ""111-"", _vo, ""10.1.1.1"", new AccountVO(), null);"
47339,./TargetProjects/cloudstack/server/src/test/java/com/cloud/vpc/VpcApiUnitTest.java,92,,"            _vpcService.validateNtwkOffForNtwkInVpc(2L, 1, ""0.0.0.0"", ""111-"", _vo, ""10.1.1.1"", new AccountVO(), null);"
47340,./TargetProjects/cloudstack/server/src/test/java/com/cloud/vpc/VpcApiUnitTest.java,92,,"            _vpcService.validateNtwkOffForNtwkInVpc(2L, 1, ""0.0.0.0"", ""111-"", _vo, ""10.1.1.1"", new AccountVO(), null);"
47341,./TargetProjects/cloudstack/server/src/test/java/com/cloud/vpc/dao/MockNetworkOfferingDaoImpl.java,100,,"                new NetworkOfferingVO(""vpc"", ""vpc"", TrafficType.Guest, false, true, null, null, false, Availability.Optional, null, Network.GuestType.Isolated, false,"
47342,./TargetProjects/cloudstack/server/src/test/java/com/cloud/vpc/dao/MockNetworkOfferingDaoImpl.java,110,,"                new NetworkOfferingVO(""non vpc"", ""non vpc"", TrafficType.Guest, false, true, null, null, false, Availability.Optional, null, Network.GuestType.Isolated,"
47343,./TargetProjects/cloudstack/server/src/test/java/com/cloud/vpc/dao/MockVpcDaoImpl.java,99,,"            vo = new VpcVO(1, ""new vpc"", ""new vpc"", 1, 1, 1, ""0.0.0.0/0"", ""vpc domain"", false, false, false);"
47344,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/affinity/AffinityApiUnitTest.java,138,,"        acct.setAccountName(""user"");"
47345,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/affinity/AffinityApiUnitTest.java,146,,"        when(_processor.getType()).thenReturn(""mock"");"
47346,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/affinity/AffinityApiUnitTest.java,153,,"        AffinityGroupVO group = new AffinityGroupVO(""group1"", ""mock"", ""mock group"", domainId, 200L, ControlledEntity.ACLType.Account);"
47347,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/affinity/AffinityGroupServiceImplTest.java,153,,"        when(_processor.getType()).thenReturn(""mock"");"
47348,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/agent/lb/IndirectAgentLBServiceImplTest.java,108,,"        overrideDefaultConfigValue(ApiServiceConfiguration.ManagementServerAddresses, ""_defaultValue"", msCSVList);"
47349,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/agent/lb/algorithm/IndirectAgentLBRoundRobinAlgorithmTest.java,31,,"    private List<String> msList = Arrays.asList(""10.1.1.1"", ""10.1.1.2"", ""10.1.1.3"");"
47350,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/agent/lb/algorithm/IndirectAgentLBRoundRobinAlgorithmTest.java,31,,"    private List<String> msList = Arrays.asList(""10.1.1.1"", ""10.1.1.2"", ""10.1.1.3"");"
47351,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/agent/lb/algorithm/IndirectAgentLBShuffleAlgorithmTest.java,31,,"    private List<String> msList = Arrays.asList(""10.1.1.1"", ""10.1.1.2"", ""10.1.1.3"");"
47352,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/network/lb/ApplicationLoadBalancerTest.java,149,,"            new ApplicationLoadBalancerRuleVO(""new"", ""new"", 22, 22, ""roundrobin"", validGuestNetworkId, validAccountId, 1L, new Ip(validRequestedIp), validGuestNetworkId,"
47353,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/network/lb/ApplicationLoadBalancerTest.java,246,,"        _appLbSvc.createApplicationLoadBalancer(""alena"", ""alena"", Scheme.Internal, validGuestNetworkId, validRequestedIp, 22, 22, ""roundrobin"", validGuestNetworkId,"
47354,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/network/ssl/CertServiceTest.java,65,,"        final Account account = new AccountVO(""testaccount"", 1, ""networkdomain"", (short)0, UUID.randomUUID().toString());"
47355,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/network/ssl/CertServiceTest.java,65,,"        final Account account = new AccountVO(""testaccount"", 1, ""networkdomain"", (short)0, UUID.randomUUID().toString());"
47356,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/network/ssl/CertServiceTest.java,102,,"        final String certFile = URLDecoder.decode(getClass().getResource(""/certs/rsa_ca_signed.crt"").getFile(),Charset.defaultCharset().name());"
47357,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/network/ssl/CertServiceTest.java,103,,"        final String keyFile = URLDecoder.decode(getClass().getResource(""/certs/rsa_ca_signed.key"").getFile(),Charset.defaultCharset().name());"
47358,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/network/ssl/CertServiceTest.java,131,,"        final Field certField = klazz.getDeclaredField(""cert"");"
47359,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/network/ssl/CertServiceTest.java,135,,"        final Field keyField = klazz.getDeclaredField(""key"");"
47360,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/network/ssl/CertServiceTest.java,139,,"        final Field chainField = klazz.getDeclaredField(""chain"");"
47361,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/network/ssl/CertServiceTest.java,270,,"        final String certFile = URLDecoder.decode(getClass().getResource(""/certs/rsa_self_signed.crt"").getFile(),Charset.defaultCharset().name());"
47362,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/network/ssl/CertServiceTest.java,271,,"        final String keyFile = URLDecoder.decode(getClass().getResource(""/certs/rsa_self_signed.key"").getFile(),Charset.defaultCharset().name());"
47363,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/networkoffering/CreateNetworkOfferingTest.java,108,,"        ConfigurationVO configVO = new ConfigurationVO(""200"", ""200"", ""200"", ""200"", ""200"", ""200"");"
47364,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/networkoffering/CreateNetworkOfferingTest.java,130,,"            configMgr.createNetworkOffering(""shared"", ""shared"", TrafficType.Guest, null, true, Availability.Optional, 200, null, false, Network.GuestType.Shared, false,"
47365,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/networkoffering/CreateNetworkOfferingTest.java,168,,"            configMgr.createNetworkOffering(""isolated"", ""isolated"", TrafficType.Guest, null, false, Availability.Optional, 200, serviceProviderMap, false,"
47366,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/outofbandmanagement/OutOfBandManagementServiceTest.java,59,,"        builder.put(OutOfBandManagement.Option.ADDRESS, ""localhost"");"
47367,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/outofbandmanagement/OutOfBandManagementServiceTest.java,60,,"        builder.put(OutOfBandManagement.Option.DRIVER, ""ipmitool"");"
47368,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/region/gslb/GlobalLoadBalancingRulesServiceImplTest.java,72,,"        Account account = new AccountVO(""testaccount"", 1, ""networkdomain"", (short)0, UUID.randomUUID().toString());"
47369,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/region/gslb/GlobalLoadBalancingRulesServiceImplTest.java,72,,"        Account account = new AccountVO(""testaccount"", 1, ""networkdomain"", (short)0, UUID.randomUUID().toString());"
47370,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/region/gslb/GlobalLoadBalancingRulesServiceImplTest.java,184,,"        TransactionLegacy txn = TransactionLegacy.open(""runCreateGlobalLoadBalancerRulePostiveTest"");"
47371,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/region/gslb/GlobalLoadBalancingRulesServiceImplTest.java,211,,"        Field regionIdField = _class.getDeclaredField(""regionId"");"
47372,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/region/gslb/GlobalLoadBalancingRulesServiceImplTest.java,215,,"        Field algoField = _class.getDeclaredField(""algorithm"");"
47373,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/region/gslb/GlobalLoadBalancingRulesServiceImplTest.java,217,,"        algoField.set(createCmd, ""roundrobin"");"
47374,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/region/gslb/GlobalLoadBalancingRulesServiceImplTest.java,219,,"        Field stickyField = _class.getDeclaredField(""stickyMethod"");"
47375,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/region/gslb/GlobalLoadBalancingRulesServiceImplTest.java,221,,"        stickyField.set(createCmd, ""sourceip"");"
47376,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/region/gslb/GlobalLoadBalancingRulesServiceImplTest.java,223,,"        Field nameField = _class.getDeclaredField(""globalLoadBalancerRuleName"");"
47377,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/region/gslb/GlobalLoadBalancingRulesServiceImplTest.java,225,,"        nameField.set(createCmd, ""gslb-rule"");"
47378,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/region/gslb/GlobalLoadBalancingRulesServiceImplTest.java,227,,"        Field descriptionField = _class.getDeclaredField(""description"");"
47379,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/region/gslb/GlobalLoadBalancingRulesServiceImplTest.java,229,,"        descriptionField.set(createCmd, ""testing create gslb-rule"");"
47380,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/region/gslb/GlobalLoadBalancingRulesServiceImplTest.java,231,,"        Field serviceDomainField = _class.getDeclaredField(""serviceDomainName"");"
47381,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/region/gslb/GlobalLoadBalancingRulesServiceImplTest.java,233,,"        serviceDomainField.set(createCmd, ""gslb-rule-domain"");"
47382,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/region/gslb/GlobalLoadBalancingRulesServiceImplTest.java,235,,"        Field serviceTypeField = _class.getDeclaredField(""serviceType"");"
47383,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/region/gslb/GlobalLoadBalancingRulesServiceImplTest.java,237,,"        serviceTypeField.set(createCmd, ""tcp"");"
47384,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/region/gslb/GlobalLoadBalancingRulesServiceImplTest.java,531,,"            new GlobalLoadBalancerRuleVO(""test-gslb-rule"", ""test-gslb-rule"", ""test-domain"", ""roundrobin"", ""sourceip"", ""tcp"", 1, 1, 1, GlobalLoadBalancerRule.State.Active);"
47385,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/region/gslb/GlobalLoadBalancingRulesServiceImplTest.java,531,,"            new GlobalLoadBalancerRuleVO(""test-gslb-rule"", ""test-gslb-rule"", ""test-domain"", ""roundrobin"", ""sourceip"", ""tcp"", 1, 1, 1, GlobalLoadBalancerRule.State.Active);"
47386,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/region/gslb/GlobalLoadBalancingRulesServiceImplTest.java,536,,"        Field networkIdField = LoadBalancerVO.class.getSuperclass().getDeclaredField(""networkId"");"
47387,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/region/gslb/GlobalLoadBalancingRulesServiceImplTest.java,544,,"        Field lbRules = _class.getDeclaredField(""loadBalancerRulesIds"");"
47388,./TargetProjects/cloudstack/server/src/test/java/org/apache/cloudstack/region/gslb/GlobalLoadBalancingRulesServiceImplTest.java,551,,"        Field dcID = NetworkVO.class.getDeclaredField(""dataCenterId"");"
47389,./TargetProjects/cloudstack/services/console-proxy/rdpconsole/src/main/java/common/Client.java,226,,"                socket = new SocketWrapperImpl(""socket"", sslState);"
47390,./TargetProjects/cloudstack/services/console-proxy/rdpconsole/src/main/java/rdpclient/RdpClient.java,72,,"    private static final String HANDSHAKE_END = ""server_valid_client"";"
47391,./TargetProjects/cloudstack/services/console-proxy/rdpconsole/src/main/java/rdpclient/RdpClient.java,164,,"                    new ClientNtlmsspNegotiate(""client_ntlmssp_nego"", ntlmState),"
47392,./TargetProjects/cloudstack/services/console-proxy/rdpconsole/src/main/java/rdpclient/RdpClient.java,166,,"                    new ServerNtlmsspChallenge(""server_ntlmssp_challenge"", ntlmState),"
47393,./TargetProjects/cloudstack/services/console-proxy/rdpconsole/src/main/java/rdpclient/RdpClient.java,168,,"                    new ClientNtlmsspPubKeyAuth(""client_ntlmssp_auth"", ntlmState, sslState, serverHostName, domain, workstation, userName, password),"
47394,./TargetProjects/cloudstack/services/console-proxy/rdpconsole/src/main/java/rdpclient/RdpClient.java,170,,"                    new ServerNtlmsspPubKeyPlus1(""server_ntlmssp_confirm"", ntlmState),"
47395,./TargetProjects/cloudstack/services/console-proxy/rdpconsole/src/main/java/rdpclient/RdpClient.java,172,,"                    new ClientNtlmsspUserCredentials(""client_ntlmssp_finish"", ntlmState)"
47396,./TargetProjects/cloudstack/services/console-proxy/rdpconsole/src/main/java/rdpclient/RdpClient.java,177,,"        add(new ClientX224ConnectionRequestPDU(""client_connection_req"", userName, protocol), new ServerX224ConnectionConfirmPDU(""server_connection_conf""),"
47397,./TargetProjects/cloudstack/services/console-proxy/rdpconsole/src/main/java/rdpclient/RdpClient.java,177,,"        add(new ClientX224ConnectionRequestPDU(""client_connection_req"", userName, protocol), new ServerX224ConnectionConfirmPDU(""server_connection_conf""),"
47398,./TargetProjects/cloudstack/services/console-proxy/rdpconsole/src/main/java/rdpclient/RdpClient.java,178,,"                new UpgradeSocketToSSL(""upgrade_to_ssl""),"
47399,./TargetProjects/cloudstack/services/console-proxy/rdpconsole/src/main/java/rdpclient/RdpClient.java,180,,"                new ClientMCSConnectInitial(""client_initial_conference_create""), new ServerMCSConnectResponse(""server_initial_conference_create""),"
47400,./TargetProjects/cloudstack/services/console-proxy/rdpconsole/src/main/java/rdpclient/RdpClient.java,234,,"                link(element + "" >otout"", element + ""< OUT"");"
47401,./TargetProjects/cloudstack/services/console-proxy/rdpconsole/src/main/java/rdpclient/ntlmssp/CryptoAlgos.java,72,,"        throw new RuntimeException(""FATAL: Not implemented."");"
47402,./TargetProjects/cloudstack/services/console-proxy/rdpconsole/src/main/java/rdpclient/ntlmssp/CryptoAlgos.java,257,,"            Cipher cipher = Cipher.getInstance(""RC4"");"
47403,./TargetProjects/cloudstack/services/console-proxy/rdpconsole/src/main/java/rdpclient/ntlmssp/NtlmState.java,168,,"        byte[] actual = NTOWFv1W(""R2Preview!"");"
47404,./TargetProjects/cloudstack/services/console-proxy/rdpconsole/src/main/java/rdpclient/ntlmssp/NtlmState.java,170,,"            throw new RuntimeException(""Incorrect result.\nExpected:\n"" + new ByteBuffer(expected).toPlainHexString() + ""\n  actual:\n"""
47405,./TargetProjects/cloudstack/services/console-proxy/rdpconsole/src/main/java/rdpclient/ntlmssp/NtlmState.java,170,,"            throw new RuntimeException(""Incorrect result.\nExpected:\n"" + new ByteBuffer(expected).toPlainHexString() + ""\n  actual:\n"""
47406,./TargetProjects/cloudstack/services/console-proxy/rdpconsole/src/main/java/rdpclient/ntlmssp/NtlmState.java,346,,"        serverNetbiosDomainName = ""WIN-LO419B2LSR0"";"
47407,./TargetProjects/cloudstack/services/console-proxy/rdpconsole/src/main/java/rdpclient/rdp/RLEBitmapDecompression.java,81,,"            throw new RuntimeException(""Unsupported color depth."");"
47408,./TargetProjects/cloudstack/services/console-proxy/rdpconsole/src/main/java/streamer/ByteBuffer.java,372,,"            throw new ArrayIndexOutOfBoundsException(""Cannot read 4 bytes from this buffer: "" + this + ""."");"
47409,./TargetProjects/cloudstack/services/console-proxy/rdpconsole/src/main/java/streamer/ByteBuffer.java,510,,"            throw new ArrayIndexOutOfBoundsException(""Cannot read 2 bytes from this buffer: "" + this + ""."");"
47410,./TargetProjects/cloudstack/services/console-proxy/rdpconsole/src/main/java/streamer/ByteBuffer.java,614,,"            throw new RuntimeException(""Length cannot be less than zero: "" + length + "". Data: "" + this + ""."");"
47411,./TargetProjects/cloudstack/services/console-proxy/rdpconsole/src/main/java/streamer/SocketWrapperImpl.java,180,,"            s_logger.info(""[ignored]"""
47412,./TargetProjects/cloudstack/services/console-proxy/rdpconsole/src/main/java/streamer/bco/BcoSocketWrapperImpl.java,101,,"            s_logger.info(""[ignored]"""
47413,./TargetProjects/cloudstack/services/console-proxy/rdpconsole/src/main/java/streamer/debug/AssertingByteBuffer.java,34,,"            throw new RuntimeException(""Expected value does not match actual value. Expected value: "" + expected + "", actual value: "" + actual + "", buf: "" + this + ""."");"
47414,./TargetProjects/cloudstack/services/console-proxy/rdpconsole/src/main/java/streamer/debug/AssertingByteBuffer.java,34,,"            throw new RuntimeException(""Expected value does not match actual value. Expected value: "" + expected + "", actual value: "" + actual + "", buf: "" + this + ""."");"
47415,./TargetProjects/cloudstack/services/console-proxy/rdpconsole/src/main/java/streamer/debug/MockSink.java,61,,"            throw new AssertionError(""["" + this + ""] Incoming buffer #"" + packetNumber + "" is not expected. Number of expected buffers: "" + bufs.length"
47416,./TargetProjects/cloudstack/services/console-proxy/rdpconsole/src/main/java/vncclient/vnc/VncMessageHandler.java,411,,"        pipeline.link(""handler >"" + FRAME_BUFFER_UPDATE_REQUEST_ADAPTER_PAD, ""fbur"");"
47417,./TargetProjects/cloudstack/services/console-proxy/server/src/main/java/com/cloud/consoleproxy/ConsoleProxyAjaxHandler.java,103,,"            s_logger.warn(""Invalid number parameter in query string: "" + portStr);"
47418,./TargetProjects/cloudstack/services/console-proxy/server/src/main/java/com/cloud/consoleproxy/ConsoleProxyAjaxHandler.java,153,,"            sendResponse(t, ""text/html"", sb.toString());"
47419,./TargetProjects/cloudstack/services/console-proxy/server/src/main/java/com/cloud/consoleproxy/ConsoleProxyAjaxHandler.java,257,,"                        queryMap.put(""code"", String.valueOf(code));"
47420,./TargetProjects/cloudstack/services/console-proxy/server/src/main/java/com/cloud/consoleproxy/ConsoleProxyAjaxHandler.java,258,,"                        queryMap.put(""modifier"", String.valueOf(modifiers));"
47421,./TargetProjects/cloudstack/services/console-proxy/server/src/main/java/com/cloud/consoleproxy/ConsoleProxyPasswordBasedEncryptor.java,69,,"            s_logger.error(""Unexpected exception "", e);"
47422,./TargetProjects/cloudstack/services/console-proxy/server/src/main/java/com/cloud/consoleproxy/ConsoleProxyThumbnailHandler.java,91,,"            hds.set(""Cache-Control"", ""no-cache"");"
47423,./TargetProjects/cloudstack/services/secondary-storage/controller/src/main/java/org/apache/cloudstack/secondarystorage/PremiumSecondaryStorageManagerImpl.java,99,,"        activeCommandSearch.and(""created"", activeCommandSearch.entity().getCreated(), Op.GTEQ);"
47424,./TargetProjects/cloudstack/services/secondary-storage/controller/src/main/java/org/apache/cloudstack/secondarystorage/PremiumSecondaryStorageManagerImpl.java,100,,"        activeCommandSearch.join(""hostSearch"", hostSearch, activeCommandSearch.entity().getHostId(), hostSearch.entity().getId(), JoinType.INNER);"
47425,./TargetProjects/cloudstack/services/secondary-storage/controller/src/main/java/org/apache/cloudstack/secondarystorage/SecondaryStorageManagerImpl.java,1116,,"                buf.append("" eth"").append(deviceId).append(""mask="").append(""0.0.0.0"");"
47426,./TargetProjects/cloudstack/services/secondary-storage/server/src/main/java/org/apache/cloudstack/storage/resource/NfsSecondaryStorageResource.java,535,,"                diskTemplate.setPath(newTmplDir + File.separator + templateUniqueName + "".ova"");"
47427,./TargetProjects/cloudstack/services/secondary-storage/server/src/main/java/org/apache/cloudstack/storage/resource/NfsSecondaryStorageResource.java,611,,"        try (BufferedWriter out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(installFullPath + ""/template.properties""), ""UTF-8""));) {"
47428,./TargetProjects/cloudstack/services/secondary-storage/server/src/main/java/org/apache/cloudstack/storage/resource/NfsSecondaryStorageResource.java,612,,"            out.write(""filename="" + templateName + "".ova"");"
47429,./TargetProjects/cloudstack/services/secondary-storage/server/src/main/java/org/apache/cloudstack/storage/resource/NfsSecondaryStorageResource.java,626,,"            out.write(""uniquename="" + templateName);"
47430,./TargetProjects/cloudstack/services/secondary-storage/server/src/main/java/org/apache/cloudstack/storage/resource/NfsSecondaryStorageResource.java,818,,"        if (!snapshotName.startsWith(""VHD-"") && !snapshotName.endsWith("".vhd"")) {"
47431,./TargetProjects/cloudstack/services/secondary-storage/server/src/main/java/org/apache/cloudstack/storage/resource/NfsSecondaryStorageResource.java,1205,,"            return new Answer(cmd, false, ""Unsupported image data store: "" + dstore);"
47432,./TargetProjects/cloudstack/services/secondary-storage/server/src/main/java/org/apache/cloudstack/storage/resource/NfsSecondaryStorageResource.java,1549,,"        Script command = new Script(""/bin/bash"", s_logger);"
47433,./TargetProjects/cloudstack/services/secondary-storage/server/src/main/java/org/apache/cloudstack/storage/resource/NfsSecondaryStorageResource.java,1551,,"        command.add(""/usr/bin/python /usr/local/cloud/systemvm/scripts/storage/secondary/swift -A "" + swift.getUrl() + "" -U "" + swift.getAccount() + "":"" + swift.getUserName()"
47434,./TargetProjects/cloudstack/services/secondary-storage/server/src/main/java/org/apache/cloudstack/storage/resource/NfsSecondaryStorageResource.java,1552,,"        + "" -K "" + swift.getKey() + "" download "" + container + "" "" + rfilename + "" -o "" + lFullPath);"
47435,./TargetProjects/cloudstack/services/secondary-storage/server/src/main/java/org/apache/cloudstack/storage/resource/NfsSecondaryStorageResource.java,1561,,"            String[] lines = parser.getLines().split(""\\n"");"
47436,./TargetProjects/cloudstack/services/secondary-storage/server/src/main/java/org/apache/cloudstack/storage/resource/NfsSecondaryStorageResource.java,1563,,"                if (line.contains(""Errno"") || line.contains(""failed"")) {"
47437,./TargetProjects/cloudstack/services/secondary-storage/server/src/main/java/org/apache/cloudstack/storage/resource/NfsSecondaryStorageResource.java,1563,,"                if (line.contains(""Errno"") || line.contains(""failed"")) {"
47438,./TargetProjects/cloudstack/services/secondary-storage/server/src/main/java/org/apache/cloudstack/storage/resource/NfsSecondaryStorageResource.java,1717,,"                details = ""snapshot directory "" + snapshotDir.getName() + "" doesn't exist"";"
47439,./TargetProjects/cloudstack/services/secondary-storage/server/src/main/java/org/apache/cloudstack/storage/resource/NfsSecondaryStorageResource.java,1725,,"                String errMsg = ""failed to delete all snapshots "" + lPath + "" , err="" + result;"
47440,./TargetProjects/cloudstack/services/secondary-storage/server/src/main/java/org/apache/cloudstack/storage/resource/NfsSecondaryStorageResource.java,1829,,"                    s_logger.debug(""Failed to config ssl: "" + e.toString());"
47441,./TargetProjects/cloudstack/services/secondary-storage/server/src/main/java/org/apache/cloudstack/storage/template/DownloadManagerImpl.java,855,,"            LOGGER.error(""Error while executing script "" + script.toString());"
47442,./TargetProjects/cloudstack/services/secondary-storage/server/src/main/java/org/apache/cloudstack/storage/template/DownloadManagerImpl.java,908,,"                    Processor processor = _processors.get(""OVA Processor"");"
47443,./TargetProjects/cloudstack/services/secondary-storage/server/src/main/java/org/apache/cloudstack/storage/template/DownloadManagerImpl.java,1089,,"        command.add(""iptables -A OUTPUT -o "" + intf + "" -p tcp -m state --state NEW -m tcp --dport "" + ""80"" + "" -j REJECT;"" + ""iptables -A OUTPUT -o "" + intf +"
47444,./TargetProjects/cloudstack/services/secondary-storage/server/src/main/java/org/apache/cloudstack/storage/template/UploadManagerImpl.java,273,,"        command.add(""/bin/bash"");"
47445,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/longrun/PerformanceWithAPI.java,151,,"        String encodedPrivateIp = URLEncoder.encode("""" + privateIp, ""UTF-8"");"
47446,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/longrun/User.java,129,,"        String encodedUsername = URLEncoder.encode(this.getUserName(), ""UTF-8"");"
47447,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/longrun/User.java,171,,"            Map<String, String> errorInfo = TestClientWithAPI.getSingleValueFromXML(is, new String[] {""errorcode"", ""description""});"
47448,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/longrun/VirtualMachine.java,59,,"        String encodedZoneId = URLEncoder.encode("""" + zoneId, ""UTF-8"");"
47449,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/regression/ApiCommand.java,111,,"        NodeList commandName = this.xmlCommand.getElementsByTagName(""name"");"
47450,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/regression/ApiCommand.java,134,,"        boolean result = verifyTagValue(""error"", ""true"");"
47451,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/regression/ApiCommand.java,200,,"                        if ((itemElement.getElementsByTagName(""value"") != null) && (itemElement.getElementsByTagName(""value"").getLength() != 0)) {"
47452,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/regression/ApiCommand.java,207,,"                        if ((itemElement.getElementsByTagName(""param"") != null) && (itemElement.getElementsByTagName(""param"").getLength() != 0)) {"
47453,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/regression/ApiCommand.java,251,,"                    s_logger.error(""Unable to set parameter "" + key + "" for the command "" + this.getName());"
47454,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/regression/ApiCommand.java,251,,"                    s_logger.error(""Unable to set parameter "" + key + "" for the command "" + this.getName());"
47455,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/regression/ApiCommand.java,364,,"                                this.verifyParam.put(itemNameElement.getTextContent(), ""no value"");"
47456,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/regression/ApiCommand.java,681,,"                            if (actualEvents.containsKey(element.get(""type"")) == true) {"
47457,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/regression/DelegatedAdminTest.java,75,,"                    s_logger.error(""Test case "" + api.getTestCaseInfo() +"
47458,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/regression/EventsApiTest.java,117,,"                    s_logger.error(""Test case "" + api.getTestCaseInfo() +"
47459,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/regression/LoadBalancingTest.java,58,,"                s_logger.error(""Test case "" + api.getTestCaseInfo() + "" failed. Command that was supposed to fail, passed. The command was sent with the following url "" +"
47460,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/regression/PortForwardingTest.java,57,,"                s_logger.error(""Test case "" + api.getTestCaseInfo() + "" failed. Command that was supposed to fail, passed. The command was sent with the following url "" +"
47461,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/stress/StressTestDirectAttach.java,362,,"                    if (""ipaddress"".equals(n.getNodeName())) {"
47462,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/stress/StressTestDirectAttach.java,440,,"        String encodedUsername = URLEncoder.encode(username, ""UTF-8"");"
47463,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/stress/StressTestDirectAttach.java,495,,"        String requestToSign = ""apikey="" + encodedApiKey + ""&command=createSecurityGroup&name="" + encodedUsername;"
47464,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/stress/StressTestDirectAttach.java,499,,"        url = developerServer + ""?command=createSecurityGroup&name="" + encodedUsername + ""&apikey="" + encodedApiKey + ""&signature="" + encodedSignature;"
47465,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/stress/StressTestDirectAttach.java,499,,"        url = developerServer + ""?command=createSecurityGroup&name="" + encodedUsername + ""&apikey="" + encodedApiKey + ""&signature="" + encodedSignature;"
47466,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/stress/StressTestDirectAttach.java,513,,"            s_logger.error(""Create security group failed with error code: "" + responseCode + "". Following URL was sent: "" + url);"
47467,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/stress/StressTestDirectAttach.java,550,,"                ""apikey="" + encodedApiKey + ""&command=deployVirtualMachine&securitygrouplist="" + encodedUsername + ""&serviceofferingid="" + encodedServiceOfferingId +"
47468,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/stress/StressTestDirectAttach.java,551,,"                    ""&templateid="" + encodedTemplateId + ""&zoneid="" + encodedZoneId;"
47469,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/stress/StressTestDirectAttach.java,551,,"                    ""&templateid="" + encodedTemplateId + ""&zoneid="" + encodedZoneId;"
47470,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/stress/StressTestDirectAttach.java,772,,"                Map<String, String> success = getSingleValueFromXML(is, new String[] {""success""});"
47471,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/stress/TestClientWithAPI.java,482,,"                    } else if (""ipaddress"".equals(n.getNodeName())) {"
47472,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/stress/TestClientWithAPI.java,531,,"        String encodedUsername = URLEncoder.encode(username, ""UTF-8"");"
47473,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/stress/TestClientWithAPI.java,536,,"            server + ""?command=createAccount&username="" + encodedUsername + ""&account="" + encodedUsername + ""&password="" + encodedPassword +"
47474,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/stress/TestClientWithAPI.java,545,,"            Map<String, String> accountValues = getSingleValueFromXML(is, new String[] {""id"", ""name""});"
47475,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/stress/TestClientWithAPI.java,655,,"                ""apikey="" + encodedApiKey + ""&command=deployVirtualMachine&diskofferingid="" + diskOfferingId + ""&networkids="" + encodedNetworkIds +"
47476,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/stress/TestClientWithAPI.java,655,,"                ""apikey="" + encodedApiKey + ""&command=deployVirtualMachine&diskofferingid="" + diskOfferingId + ""&networkids="" + encodedNetworkIds +"
47477,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/stress/TestClientWithAPI.java,656,,"                    ""&serviceofferingid="" + encodedServiceOfferingId + ""&templateid="" + encodedTemplateId + ""&zoneid="" + encodedZoneId;"
47478,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/stress/TestClientWithAPI.java,656,,"                    ""&serviceofferingid="" + encodedServiceOfferingId + ""&templateid="" + encodedTemplateId + ""&zoneid="" + encodedZoneId;"
47479,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/stress/TestClientWithAPI.java,656,,"                    ""&serviceofferingid="" + encodedServiceOfferingId + ""&templateid="" + encodedTemplateId + ""&zoneid="" + encodedZoneId;"
47480,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/stress/TestClientWithAPI.java,662,,"                    diskOfferingId + ""&networkids="" + encodedNetworkIds + ""&templateid="" + encodedTemplateId + ""&apikey="" + encodedApiKey + ""&signature="" +"
47481,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/stress/TestClientWithAPI.java,662,,"                    diskOfferingId + ""&networkids="" + encodedNetworkIds + ""&templateid="" + encodedTemplateId + ""&apikey="" + encodedApiKey + ""&signature="" +"
47482,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/stress/TestClientWithAPI.java,686,,"                s_logger.error(""deploy linux vm failed with error code: "" + responseCode + "". Following URL was sent: "" + url);"
47483,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/stress/TestClientWithAPI.java,728,,"            requestToSign = ""apikey="" + encodedApiKey + ""&command=listPublicIpAddresses"" + ""&id="" + encodedPublicIpId;"
47484,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/stress/TestClientWithAPI.java,728,,"            requestToSign = ""apikey="" + encodedApiKey + ""&command=listPublicIpAddresses"" + ""&id="" + encodedPublicIpId;"
47485,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/stress/TestClientWithAPI.java,733,,"            url = developerServer + ""?command=listPublicIpAddresses&apikey="" + encodedApiKey + ""&id="" + encodedPublicIpId + ""&signature="" + encodedSignature;"
47486,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/stress/TestClientWithAPI.java,737,,"            s_logger.info(""url is "" + url);"
47487,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/stress/TestClientWithAPI.java,738,,"            s_logger.info(""list ip addresses for user "" + userId + "" response code: "" + responseCode);"
47488,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/stress/TestClientWithAPI.java,738,,"            s_logger.info(""list ip addresses for user "" + userId + "" response code: "" + responseCode);"
47489,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/stress/TestClientWithAPI.java,957,,"                    Map<String, String> success = getSingleValueFromXML(is, new String[] {""success""});"
47490,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/stress/TestClientWithAPI.java,1415,,"            Map<String, List<String>> eventDescriptions = getMultipleValuesFromXML(is, new String[] {""description""});"
47491,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/stress/TestClientWithAPI.java,1503,,"                Map<String, String> requestKeyValues = getSingleValueFromXML(is, new String[] {""receivedbytes"", ""sentbytes""});"
47492,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/stress/TestClientWithAPI.java,1665,,"                        String zoneNameLogStr = ""\n\n"";"
47493,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/utils/TestClient.java,126,,"                                String url = server + ""?email="" + username + ""&password="" + username + ""&command=deploy"";"
47494,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/utils/TestClient.java,126,,"                                String url = server + ""?email="" + username + ""&password="" + username + ""&command=deploy"";"
47495,./TargetProjects/cloudstack/test/src-not-used/main/java/com/cloud/test/utils/UtilsForTest.java,79,,"                    System.out.println(""no "" + tagNames[i] + "" tag in the response"");"
47496,./TargetProjects/cloudstack/usage/src/main/java/com/cloud/usage/UsageManagerImpl.java,813,,"                                        s_logger.warn(""More that one usage entry for storage: "" + templateId + "" assigned to account: "" + account.getId() +"
47497,./TargetProjects/cloudstack/usage/src/main/java/com/cloud/usage/UsageManagerImpl.java,813,,"                                        s_logger.warn(""More that one usage entry for storage: "" + templateId + "" assigned to account: "" + account.getId() +"
47498,./TargetProjects/cloudstack/usage/src/main/java/com/cloud/usage/UsageManagerImpl.java,814,,"                                                ""; marking them all as deleted..."");"
47499,./TargetProjects/cloudstack/usage/src/main/java/com/cloud/usage/UsageManagerImpl.java,818,,"                                            s_logger.debug(""deleting template: "" + storageVO.getId() + "" from account: "" + storageVO.getAccountId());"
47500,./TargetProjects/cloudstack/usage/src/main/java/com/cloud/usage/UsageManagerImpl.java,883,,"                s_logger.debug(""vm usage instances successfully parsed? "" + parsed + "" (for account: "" + account.getAccountName() + "", id: "" + account.getId() + "")"");"
47501,./TargetProjects/cloudstack/usage/src/main/java/com/cloud/usage/UsageManagerImpl.java,883,,"                s_logger.debug(""vm usage instances successfully parsed? "" + parsed + "" (for account: "" + account.getAccountName() + "", id: "" + account.getId() + "")"");"
47502,./TargetProjects/cloudstack/usage/src/main/java/com/cloud/usage/UsageManagerImpl.java,1116,,"                sc.addAnd(""vmInstanceId"", SearchCriteria.Op.EQ, Long.valueOf(vmId));"
47503,./TargetProjects/cloudstack/usage/src/main/java/com/cloud/usage/UsageManagerImpl.java,1117,,"                sc.addAnd(""endDate"", SearchCriteria.Op.NULL);"
47504,./TargetProjects/cloudstack/usage/src/main/java/com/cloud/usage/UsageManagerImpl.java,1118,,"                sc.addAnd(""usageType"", SearchCriteria.Op.EQ, UsageTypes.RUNNING_VM);"
47505,./TargetProjects/cloudstack/usage/src/main/java/com/cloud/usage/UsageManagerImpl.java,1309,,"                s_logger.debug(""getting current accounted bytes for... accountId: "" + usageNetworkStats.getAccountId() + "" in zone: "" + userStat.getDataCenterId() +"
47506,./TargetProjects/cloudstack/usage/src/main/java/com/cloud/usage/UsageManagerImpl.java,1310,,"                        ""; abr: "" + toHumanReadableSize(usageNetworkStats.getAggBytesReceived()) + ""; abs: "" + toHumanReadableSize(usageNetworkStats.getAggBytesSent()));"
47507,./TargetProjects/cloudstack/usage/src/main/java/com/cloud/usage/UsageManagerImpl.java,1368,,"            s_logger.warn(""Calculated negative value for io read: "" + toHumanReadableSize(ioRead) + "", vm disk stats say: "" + toHumanReadableSize(vmDiskStat.getAggIORead()) + "", previous vm disk usage was: "" +"
47508,./TargetProjects/cloudstack/usage/src/main/java/com/cloud/usage/UsageManagerImpl.java,1368,,"            s_logger.warn(""Calculated negative value for io read: "" + toHumanReadableSize(ioRead) + "", vm disk stats say: "" + toHumanReadableSize(vmDiskStat.getAggIORead()) + "", previous vm disk usage was: "" +"
47509,./TargetProjects/cloudstack/usage/src/main/java/com/cloud/usage/UsageManagerImpl.java,1427,,"            sc.addAnd(""accountId"", SearchCriteria.Op.EQ, event.getAccountId());"
47510,./TargetProjects/cloudstack/usage/src/main/java/com/cloud/usage/UsageManagerImpl.java,1468,,"            sc.addAnd(""deleted"", SearchCriteria.Op.NULL);"
47511,./TargetProjects/cloudstack/usage/src/main/java/com/cloud/usage/UsageManagerImpl.java,1483,,"                s_logger.debug(""create volume with id : "" + volId + "" for account: "" + event.getAccountId());"
47512,./TargetProjects/cloudstack/usage/src/main/java/com/cloud/usage/UsageSanityChecker.java,84,,"                s_logger.error(""checkItemCountByPstmt:Exception:""+e.getMessage());"
47513,./TargetProjects/cloudstack/usage/src/main/java/com/cloud/usage/UsageSanityChecker.java,108,,"                s_logger.error(""checkMaxUsage:Exception:""+e.getMessage());"
47514,./TargetProjects/cloudstack/usage/src/main/java/com/cloud/usage/parser/VmDiskUsageParser.java,124,,"                    usageDesc += "" for Vm: "" + vmId + "" and Volume: "" + volumeId;"
47515,./TargetProjects/cloudstack/usage/src/main/java/com/cloud/usage/parser/VmDiskUsageParser.java,124,,"                    usageDesc += "" for Vm: "" + vmId + "" and Volume: "" + volumeId;"
47516,./TargetProjects/cloudstack/usage/src/main/java/com/cloud/usage/parser/VmDiskUsageParser.java,128,,"                        ioRead), vmId, null, null, null, vmDiskInfo.getVolumeId(), startDate, endDate, ""VirtualMachine"");"
47517,./TargetProjects/cloudstack/usage/src/test/java/com/cloud/usage/UsageSanityCheckerIT.java,107,,"        String cloudDbUrl = ""jdbc:mysql://""+properties.getProperty(""db.""+dbSchema+"".host"") +"
47518,./TargetProjects/cloudstack/utils/src/main/java/com/cloud/utils/DateUtil.java,167,,"                    throw new CloudRuntimeException(""Incorrect schedule format: "" + schedule + "" for interval type:"" + type.toString());"
47519,./TargetProjects/cloudstack/utils/src/main/java/com/cloud/utils/DateUtil.java,167,,"                    throw new CloudRuntimeException(""Incorrect schedule format: "" + schedule + "" for interval type:"" + type.toString());"
47520,./TargetProjects/cloudstack/utils/src/main/java/com/cloud/utils/HttpUtils.java,54,,"        if (resp.containsHeader(""content-security-policy"")) {"
47521,./TargetProjects/cloudstack/utils/src/main/java/com/cloud/utils/ProcessUtil.java,67,,"                    throw new ConfigurationException(""Java process is being started twice.  If this is not true, remove "" + pidFile.getAbsolutePath());"
47522,./TargetProjects/cloudstack/utils/src/main/java/com/cloud/utils/PropertiesUtil.java,47,,"        if (url != null && ""file"".equals(url.getProtocol())) {"
47523,./TargetProjects/cloudstack/utils/src/main/java/com/cloud/utils/SwiftUtil.java,73,,"        Script command = new Script(""/bin/bash"", logger);"
47524,./TargetProjects/cloudstack/utils/src/main/java/com/cloud/utils/UriUtils.java,314,,"                if (tagName.equals(""url"") && attr.getNodeName().equals(""priority"")) {"
47525,./TargetProjects/cloudstack/utils/src/main/java/com/cloud/utils/UriUtils.java,318,,"                } else if (tagName.equals(""hash"") && attr.getNodeName().equals(""type"")) {"
47526,./TargetProjects/cloudstack/utils/src/main/java/com/cloud/utils/cisco/n1kv/vsm/VsmCommand.java,75,,"            Element editConfig = doc.createElement(""nf:edit-config"");"
47527,./TargetProjects/cloudstack/utils/src/main/java/com/cloud/utils/cisco/n1kv/vsm/VsmCommand.java,79,,"            Element target = doc.createElement(""nf:target"");"
47528,./TargetProjects/cloudstack/utils/src/main/java/com/cloud/utils/cisco/n1kv/vsm/VsmCommand.java,80,,"            Element running = doc.createElement(""nf:running"");"
47529,./TargetProjects/cloudstack/utils/src/main/java/com/cloud/utils/cisco/n1kv/vsm/VsmCommand.java,85,,"            Element config = doc.createElement(""nf:config"");"
47530,./TargetProjects/cloudstack/utils/src/main/java/com/cloud/utils/cisco/n1kv/vsm/VsmCommand.java,91,,"            s_logger.error(""Error while creating add port profile message : "" + e.getMessage());"
47531,./TargetProjects/cloudstack/utils/src/main/java/com/cloud/utils/cisco/n1kv/vsm/VsmCommand.java,308,,"            filter.setAttribute(""type"", ""subtree"");"
47532,./TargetProjects/cloudstack/utils/src/main/java/com/cloud/utils/cisco/n1kv/vsm/VsmCommand.java,314,,"            Element portProfile = doc.createElement(""port-profile"");"
47533,./TargetProjects/cloudstack/utils/src/main/java/com/cloud/utils/cisco/n1kv/vsm/VsmCommand.java,316,,"            Element nameNode = doc.createElement(""name"");"
47534,./TargetProjects/cloudstack/utils/src/main/java/com/cloud/utils/cisco/n1kv/vsm/VsmCommand.java,429,,"        Element configure = doc.createElementNS(s_ciscons, ""nxos:configure"");"
47535,./TargetProjects/cloudstack/utils/src/main/java/com/cloud/utils/cisco/n1kv/vsm/VsmCommand.java,430,,"        Element modeConfigure = doc.createElement(""nxos:"" + s_configuremode);"
47536,./TargetProjects/cloudstack/utils/src/main/java/com/cloud/utils/cisco/n1kv/vsm/VsmCommand.java,442,,"        address.setAttribute(""isKey"", ""true"");"
47537,./TargetProjects/cloudstack/utils/src/main/java/com/cloud/utils/cisco/n1kv/vsm/VsmCommand.java,442,,"        address.setAttribute(""isKey"", ""true"");"
47538,./TargetProjects/cloudstack/utils/src/main/java/com/cloud/utils/cisco/n1kv/vsm/VsmCommand.java,455,,"            .appendChild(doc.createElement(""vlan""))"
47539,./TargetProjects/cloudstack/utils/src/main/java/com/cloud/utils/cisco/n1kv/vsm/VsmResponse.java,104,,"            s_logger.error(""Error parsing the response : "" + e.toString());"
47540,./TargetProjects/cloudstack/utils/src/main/java/com/cloud/utils/component/ComponentContext.java,158,,"            s_logger.warn(""Unable to register MBean: "" + mbean.getName(), e);"
47541,./TargetProjects/cloudstack/utils/src/main/java/com/cloud/utils/net/NetUtils.java,505,,"            final String[] cidrPair = cidr.split(""\\/"");"
47542,./TargetProjects/cloudstack/utils/src/main/java/com/cloud/utils/net/NetUtils.java,580,,"        assert size < MAX_CIDR : ""You do know this is not for ipv6 right?  Keep it smaller than 32 but you have "" + size;"
47543,./TargetProjects/cloudstack/utils/src/main/java/com/cloud/utils/nio/Link.java,384,,"        final KeyManagerFactory kmf = KeyManagerFactory.getInstance(""SunX509"");"
47544,./TargetProjects/cloudstack/utils/src/main/java/com/cloud/utils/nio/NioConnection.java,262,,"                s_logger.warn(""Exception occurred when submitting the task"", e);"
47545,./TargetProjects/cloudstack/utils/src/main/java/com/cloud/utils/script/Script.java,371,,"        s_logger.debug(""Looking for "" + script + "" in the classpath"");"
47546,./TargetProjects/cloudstack/utils/src/main/java/com/cloud/utils/ssh/SshHelper.java,70,,"                String msg = ""Failed to authentication SSH user "" + user + "" on host "" + host;"
47547,./TargetProjects/cloudstack/utils/src/main/java/com/cloud/utils/ssh/SshHelper.java,70,,"                String msg = ""Failed to authentication SSH user "" + user + "" on host "" + host;"
47548,./TargetProjects/cloudstack/utils/src/main/java/org/apache/cloudstack/utils/imagestore/ImageStoreUtil.java,57,,"            s_logger.debug(""File at path "" + path + "" looks like a vmware image :"" + output);"
47549,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/ScriptTest.java,41,,"        Script script = new Script(""/bin/echo"");"
47550,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/SwiftUtilTest.java,103,,"        given(cfg.getEndPoint()).willReturn(""swift.endpoint"");"
47551,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/SwiftUtilTest.java,105,,"        given(cfg.getUserName()).willReturn(""sec-storage"");"
47552,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/SwiftUtilTest.java,106,,"        given(cfg.getKey()).willReturn(""mypassword"");"
47553,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/SwiftUtilTest.java,109,,"        String cmd = SwiftUtil.getSwiftCmd(cfg, ""swift"", ""stat"");"
47554,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/SwiftUtilTest.java,124,,"        String objectCmd = SwiftUtil.getSwiftObjectCmd(cfg, ""swift"", ""delete"", ""T-123"", ""template.vhd"");"
47555,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/SwiftUtilTest.java,154,,"        String uploadCmd = SwiftUtil.getUploadObjectCommand(cfg, ""swift"", ""T-1"", ""template.vhd"", 1024);"
47556,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/UriUtilsParametrizedTest.java,52,,"            ""img"","
47557,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/UriUtilsTest.java,91,,"        Assert.assertTrue(UriUtils.checkVlanUriOverlap(""10-30,45,50,12,31"", ""10""));"
47558,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/net/Ip4AddressTest.java,29,,"                .addEqualityGroup(new Ip4Address(""0.0.0.1"", ""00:00:00:00:00:02""), new Ip4Address(1L, 2L))"
47559,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/net/NetUtilsTest.java,54,,"        final String cidr = ""192.168.124.1"";"
47560,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/net/NetUtilsTest.java,111,,"        assertTrue(NetUtils.isValidS2SVpnPolicy(""esp"", ""aes128-sha1""));"
47561,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/net/NetUtilsTest.java,116,,"        assertTrue(NetUtils.isValidS2SVpnPolicy(""ike"", ""3des-sha1;modp3072,aes128-sha1;modp1536""));"
47562,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/net/NetUtilsTest.java,134,,"        assertEquals(NetUtils.getIp6FromRange(""1234:5678::1-1234:5678::1""), ""1234:5678::1"");"
47563,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/net/NetUtilsTest.java,212,,"        assertTrue(NetUtils.isIp6InRange(""1234:5678:abcd::1"", ""1234:5678:abcd::1-1234:5678:abcd::1""));"
47564,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/net/NetUtilsTest.java,220,,"        assertFalse(NetUtils.isIp6InNetwork(IPv6Address.fromString(""1234:5678:abcd::1""), IPv6Network.fromString(""1234:5678::/64"")));"
47565,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/net/NetUtilsTest.java,253,,"        assertEquals(""pvlan://123-i456"", NetUtils.generateUriForPvlan(""123"", ""456"").toString());"
47566,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/net/NetUtilsTest.java,253,,"        assertEquals(""pvlan://123-i456"", NetUtils.generateUriForPvlan(""123"", ""456"").toString());"
47567,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/net/NetUtilsTest.java,379,,"        assertEquals(0x7f000001l, NetUtils.ip2Long(""127.0.0.1""));"
47568,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/net/NetUtilsTest.java,380,,"        assertEquals(0xc0a80001l, NetUtils.ip2Long(""192.168.0.1""));"
47569,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/net/NetUtilsTest.java,428,,"            ip1 = ""192.168.0."" + i;"
47570,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/net/NetUtilsTest.java,470,,"        final String cidr = ""10.10.0.0/16"";"
47571,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/net/NetUtilsTest.java,553,,"        assertTrue(NetUtils.isNetworkAWithinNetworkB(""192.168.30.0/24"", ""192.168.30.0/23""));"
47572,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/net/NetUtilsTest.java,557,,"        assertTrue(NetUtils.isNetworkAWithinNetworkB(""192.168.28.0/24"", ""192.168.28.0/23""));"
47573,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/net/NetUtilsTest.java,571,,"        assertTrue(NetUtils.isNetworkorBroadcastIP(""192.168.0.0"",""255.255.255.0""));"
47574,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/net/NetUtilsTest.java,624,,"        System.out.println(NetUtils.isIpInCidrList(InetAddress.getByName(""192.168.1.1""), cidrs));"
47575,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/net/NetUtilsTest.java,630,,"        assertTrue(NetUtils.isIpInCidrList(InetAddress.getByName(""2a01:4f8:130:2192::2""), cidrs));"
47576,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/net/NetUtilsTest.java,635,,"        assertTrue(NetUtils.isIpInCidrList(InetAddress.getByName(""127.0.0.1""), ""127.0.0.1/8,::1/128"".split("","")));"
47577,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/rest/HttpUriRequestBuilderTest.java,39,,"        HttpUriRequestBuilder.create().path(""/path"").build();"
47578,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/rest/HttpUriRequestQueryMatcher.java,33,,"        return argThat(new HttpUriRequestQueryMatcher(equalTo(query), ""query"", ""query""));"
47579,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/rest/RESTServiceConnectorTest.java,72,,"        newObject.setField(""newValue"");"
47580,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/rest/RESTServiceConnectorTest.java,78,,"        final RestClient restClient = new BasicRestClient(httpClient, HttpClientContext.create(), ""localhost"");"
47581,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/rest/RESTServiceConnectorTest.java,81,,"        connector.executeUpdateObject(newObject, ""/somepath"");"
47582,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/security/SSLUtilsTest.java,57,,"        Assert.assertEquals(""TLSv1.2"", spySSLUtils.getSSLContext().getProtocol());"
47583,./TargetProjects/cloudstack/utils/src/test/java/com/cloud/utils/xmlobject/TestXmlObject2.java,39,,"        XmlObject c1 = new XmlObject(""child1"");"
47584,./TargetProjects/cloudstack/utils/src/test/java/org/apache/cloudstack/utils/CloudStackVersionTest.java,140,,"        ""2.0.0.0, 1.2.3"","
47585,./TargetProjects/cloudstack/utils/src/test/java/org/apache/cloudstack/utils/mailing/SMTPMailSenderTest.java,189,,"        String host = ""smtp.acme.org"";"
47586,./TargetProjects/cloudstack/utils/src/test/java/org/apache/cloudstack/utils/mailing/SMTPMailSenderTest.java,310,,"        String username = ""test@test.com"";"
47587,./TargetProjects/cloudstack/utils/src/test/java/org/apache/cloudstack/utils/mailing/SMTPMailSenderTest.java,448,,"        mailProps.setContent(""A simple test"");"
47588,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/ClusterMO.java,120,,"        if (vmMor == null || !vmMor.getType().equals(""VirtualMachine"")) {"
47589,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/ClusterMO.java,223,,"        List<ManagedObjectReference> hosts = _context.getVimClient().getDynamicProperty(_mor, ""host"");"
47590,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/ClusterMO.java,242,,"        ObjectContent[] ocs = getVmPropertiesOnHyperHost(new String[] {""name"", instanceNameCustomField});"
47591,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/DatacenterMO.java,57,,"        _mor = _context.getVimClient().getDecendentMoRef(_context.getRootFolder(), ""Datacenter"", dcName);"
47592,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/DatacenterMO.java,65,,"        return (String)_context.getVimClient().getDynamicProperty(_mor, ""name"");"
47593,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/DatacenterMO.java,86,,"        int key = getCustomFieldKey(""VirtualMachine"", CustomFieldConstants.CLOUD_VM_INTERNAL_NAME);"
47594,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/DatacenterMO.java,359,,"        pSpec.setType(""DistributedVirtualPortgroup"");"
47595,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/DatastoreMO.java,141,,"            fullPath = String.format(""[%s] %s"", datastoreName, path);"
47596,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/HostMO.java,141,,"        if (morParent.getType().equals(""ClusterComputeResource"")) {"
47597,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/HostMO.java,193,,"        ObjectContent[] ocs = getDatastorePropertiesOnHyperHost(new String[] {""name""});"
47598,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/HostMO.java,558,,"        ObjectContent[] ocs = getVmPropertiesOnHyperHost(new String[] {""name"", ""value["" + key + ""]""});"
47599,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/HypervisorHostHelper.java,292,,"        String vsmIp = vsmCredentials.containsKey(""vsmip"") ? vsmCredentials.get(""vsmip"") : null;"
47600,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/HypervisorHostHelper.java,293,,"        String vsmUserName = vsmCredentials.containsKey(""vsmusername"") ? vsmCredentials.get(""vsmusername"") : null;"
47601,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/HypervisorHostHelper.java,294,,"        String vsmPassword = vsmCredentials.containsKey(""vsmpassword"") ? vsmCredentials.get(""vsmpassword"") : null;"
47602,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/HypervisorHostHelper.java,317,,"            msg = ""Failed to connect to Nexus 1000v "" + vsmIp + "" with credentials of user "" + vsmUserName + "". Exception: "" + e.toString();"
47603,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/HypervisorHostHelper.java,338,,"                    ""Failed to add policy map of "" + policyName + "" with parameters "" + ""committed rate = "" + averageBandwidth + ""peak bandwidth = "" + peakBandwidth +"
47604,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/HypervisorHostHelper.java,343,,"                s_logger.debug(""Disconnected Nexus 1000v session."");"
47605,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/HypervisorHostHelper.java,398,,"                s_logger.info(""Associating policy map "" + policyName + "" with port profile "" + networkName + ""."");"
47606,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/SnapshotDescriptor.java,69,,"                String numDisksStr = _properties.getProperty(String.format(""snapshot%d.numDisks"", i));"
47607,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/SnapshotDescriptor.java,74,,"                    String keyName = String.format(""snapshot%d.disk%d.fileName"", i, j);"
47608,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/SnapshotDescriptor.java,117,,"                out.write(String.format(""%s = \""%s\"""", key, value));"
47609,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/VirtualDiskManagerMO.java,50,,"            throw new Exception(""Unable to copy virtual disk "" + srcName + "" to "" + destName + "" due to "" + TaskMO.getTaskFailureInfo(_context, morTask));"
47610,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/VirtualMachineMO.java,151,,"        pSpec.getPathSet().add(""name"");"
47611,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/VirtualMachineMO.java,154,,"        vmDatastoreTraversal.setType(""VirtualMachine"");"
47612,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/VirtualMachineMO.java,235,,"                                    String logMsg = ""Found that VM has a pending question that we need to answer programmatically, question id: "" + msg.getId();"
47613,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/VirtualMachineMO.java,1100,,"        sb.append(URLEncoder.encode(vmxPathTokens[2].trim(), ""UTF-8""));"
47614,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/VirtualMachineMO.java,1198,,"            s_logger.trace(""vCenter API trace - createDisk(). target MOR: "" + _mor.getValue() + "", vmdkDatastorePath: "" + vmdkDatastorePath + "", sizeInMb: "" + sizeInMb +"
47615,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/VirtualMachineMO.java,1414,,"                getDynamicProperty(_mor, ""config.hardware.device"");"
47616,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/VirtualMachineMO.java,1552,,"                                    if (""msg.cdromdisconnect.locked"".equalsIgnoreCase(msg.getId())) {"
47617,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/VirtualMachineMO.java,1972,,"                        s_logger.info(""Copy VMDK base file "" + srcVmdkBaseFilePath + "" to "" + destDsDirectory + ""/"" + destBaseFileName);"
47618,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/VirtualMachineMO.java,2257,,"            s_logger.info(""Successfully added "" + requiredNumScsiControllers + "" SCSI controllers."");"
47619,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/VirtualMachineMO.java,2538,,"                                    s_logger.info(""Disk backing : "" + diskBackingInfo.getFileName() + "" matches ==> "" + deviceNumbering);"
47620,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/VirtualMachineMO.java,2538,,"                                    s_logger.info(""Disk backing : "" + diskBackingInfo.getFileName() + "" matches ==> "" + deviceNumbering);"
47621,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/util/VmwareClient.java,311,,"        pSpec.setType(""Datacenter"");"
47622,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/util/VmwareClient.java,608,,"        hToVm.getSelectSet().add(getSelectionSpec(""VisitFolders""));"
47623,./TargetProjects/cloudstack/vmware-base/src/main/java/com/cloud/hypervisor/vmware/util/VmwareClient.java,623,,"        rpToRp.setName(""rpToRp"");"
47624,./TargetProjects/cloudstack/vmware-base/src/test/java/com/cloud/hypervisor/vmware/mo/HypervisorHostHelperTest.java,617,,"                ""      <Item>\n"" +"
47625,./TargetProjects/cloudstack/vmware-base/src/test/java/com/cloud/hypervisor/vmware/mo/HypervisorHostHelperTest.java,624,,"                ""      </Item>\n"" +"
47626,./TargetProjects/cloudstack/vmware-base/src/test/java/com/cloud/hypervisor/vmware/mo/HypervisorHostHelperTest.java,634,,"                ""        <rasd:Address>0</rasd:Address>\n"" +"
47627,./TargetProjects/cloudstack/vmware-base/src/test/java/com/cloud/hypervisor/vmware/mo/HypervisorHostHelperTest.java,648,,"                ""      <Item ovf:required=\""false\"">\n"" +"
47628,./TargetProjects/cloudstack/vmware-base/src/test/java/com/cloud/hypervisor/vmware/mo/HypervisorHostHelperTest.java,649,,"                ""        <rasd:AddressOnParent>0</rasd:AddressOnParent>\n"" +"
47629,./TargetProjects/cloudstack/vmware-base/src/test/java/com/cloud/hypervisor/vmware/mo/HypervisorHostHelperTest.java,650,,"                ""        <rasd:AutomaticAllocation>false</rasd:AutomaticAllocation>\n"" +"
47630,./TargetProjects/cloudstack/vmware-base/src/test/java/com/cloud/hypervisor/vmware/mo/HypervisorHostHelperTest.java,907,,"        when(datacenterConfigInfo.getDefaultHardwareVersionKey()).thenReturn(""vmx-9"");"
47631,./TargetProjects/cocoon/blocks/cocoon-asciiart/cocoon-asciiart-impl/src/test/java/org/apache/cocoon/generation/asciiart/AsciiArtPadTestCase.java,85,,"                ""=                ="","
47632,./TargetProjects/cocoon/blocks/cocoon-asciiart/cocoon-asciiart-impl/src/test/java/org/apache/cocoon/generation/asciiart/AsciiArtPadTestCase.java,105,,"                "" +----------------+"","
47633,./TargetProjects/cocoon/blocks/cocoon-authentication-fw/cocoon-authentication-fw-impl/src/main/java/org/apache/cocoon/webapps/authentication/components/DefaultAuthenticationManager.java,439,,"                    throw new ProcessingException(""Unable to create session context."", ce);"
47634,./TargetProjects/cocoon/blocks/cocoon-authentication-fw/cocoon-authentication-fw-impl/src/main/java/org/apache/cocoon/webapps/authentication/configuration/HandlerConfiguration.java,99,,"        this.redirectURI = child.getAttribute(""uri"");"
47635,./TargetProjects/cocoon/blocks/cocoon-authentication-fw/cocoon-authentication-fw-impl/src/main/java/org/apache/cocoon/webapps/authentication/context/AuthenticationContext.java,190,,"            frag = this.authContext.getXML(""/authentication"");"
47636,./TargetProjects/cocoon/blocks/cocoon-authentication-fw/cocoon-authentication-fw-impl/src/main/java/org/apache/cocoon/webapps/authentication/context/AuthenticationContext.java,194,,"                Node root = frag.getOwnerDocument().createElementNS(null, ""authentication"");"
47637,./TargetProjects/cocoon/blocks/cocoon-authentication-fw/cocoon-authentication-fw-impl/src/main/java/org/apache/cocoon/webapps/authentication/context/AuthenticationContext.java,206,,"                DocumentFragment appFrag = this.authContext.getXML(""/applications/"" + applicationName);"
47638,./TargetProjects/cocoon/blocks/cocoon-authentication-fw/cocoon-authentication-fw-impl/src/main/java/org/apache/cocoon/webapps/authentication/context/AuthenticationContext.java,209,,"                    Node root = appFrag.getOwnerDocument().createElementNS(null, ""application"");"
47639,./TargetProjects/cocoon/blocks/cocoon-authentication-fw/cocoon-authentication-fw-impl/src/main/java/org/apache/cocoon/webapps/authentication/context/AuthenticationContext.java,234,,"        } else if (path.equals(""/application"") || path.startsWith(""/application/"") ) {"
47640,./TargetProjects/cocoon/blocks/cocoon-authentication-fw/cocoon-authentication-fw-impl/src/main/java/org/apache/cocoon/webapps/authentication/context/AuthenticationContext.java,234,,"        } else if (path.equals(""/application"") || path.startsWith(""/application/"") ) {"
47641,./TargetProjects/cocoon/blocks/cocoon-authentication-fw/cocoon-authentication-fw-impl/src/main/java/org/apache/cocoon/webapps/authentication/context/AuthenticationContext.java,398,,"        throw new ProcessingException(""This method is not supported by the authenticaton session context."");"
47642,./TargetProjects/cocoon/blocks/cocoon-authentication-fw/cocoon-authentication-fw-impl/src/main/java/org/apache/cocoon/webapps/authentication/context/AuthenticationContext.java,575,,"            throw new ProcessingException(""The context "" + this.name + "" does not support saving."");"
47643,./TargetProjects/cocoon/blocks/cocoon-authentication-fw/cocoon-authentication-fw-impl/src/main/java/org/apache/cocoon/webapps/authentication/generation/ConfigurationGenerator.java,153,,"        consumer.startElement("""", ""configuration"", ""configuration"", XMLUtils.EMPTY_ATTRIBUTES);"
47644,./TargetProjects/cocoon/blocks/cocoon-authentication-fw/cocoon-authentication-fw-impl/src/main/java/org/apache/cocoon/webapps/authentication/generation/ConfigurationGenerator.java,160,,"        consumer.startElement("""", ""uri"", ""uri"", XMLUtils.EMPTY_ATTRIBUTES);"
47645,./TargetProjects/cocoon/blocks/cocoon-authentication-fw/cocoon-authentication-fw-impl/src/main/java/org/apache/cocoon/webapps/authentication/generation/ConfigurationGenerator.java,166,,"            consumer.startElement("""", ""menue"", ""menue"", XMLUtils.EMPTY_ATTRIBUTES);"
47646,./TargetProjects/cocoon/blocks/cocoon-authentication-fw/cocoon-authentication-fw-impl/src/main/java/org/apache/cocoon/webapps/authentication/generation/ConfigurationGenerator.java,169,,"                consumer.startElement("""", ""addrole"", ""addrole"", XMLUtils.EMPTY_ATTRIBUTES);"
47647,./TargetProjects/cocoon/blocks/cocoon-authentication-fw/cocoon-authentication-fw-impl/src/main/java/org/apache/cocoon/webapps/authentication/generation/ConfigurationGenerator.java,173,,"                consumer.startElement("""", ""delrole"", ""delrole"", XMLUtils.EMPTY_ATTRIBUTES);"
47648,./TargetProjects/cocoon/blocks/cocoon-authentication-fw/cocoon-authentication-fw-impl/src/main/java/org/apache/cocoon/webapps/authentication/generation/ConfigurationGenerator.java,223,,"                    throw new ProcessingException(""TransformerException: "" + local, local);"
47649,./TargetProjects/cocoon/blocks/cocoon-authentication-fw/cocoon-authentication-fw-impl/src/main/java/org/apache/cocoon/webapps/authentication/generation/ConfigurationGenerator.java,236,,"                    role = (String) pars.get(""role"");"
47650,./TargetProjects/cocoon/blocks/cocoon-authentication-fw/cocoon-authentication-fw-impl/src/main/java/org/apache/cocoon/webapps/authentication/generation/ConfigurationGenerator.java,257,,"                            consumer.startElement("""", ""addeduser"", ""addeduser"", XMLUtils.EMPTY_ATTRIBUTES);"
47651,./TargetProjects/cocoon/blocks/cocoon-authentication-fw/cocoon-authentication-fw-impl/src/main/java/org/apache/cocoon/webapps/authentication/generation/ConfigurationGenerator.java,309,,"                    consumer.startElement("""", ""uservalues"", ""uservalues"", XMLUtils.EMPTY_ATTRIBUTES);"
47652,./TargetProjects/cocoon/blocks/cocoon-authentication-fw/cocoon-authentication-fw-impl/src/main/java/org/apache/cocoon/webapps/authentication/generation/ConfigurationGenerator.java,319,,"                consumer.startElement("""", ""user"", ""user"", XMLUtils.EMPTY_ATTRIBUTES);"
47653,./TargetProjects/cocoon/blocks/cocoon-authentication-fw/cocoon-authentication-fw-impl/src/main/java/org/apache/cocoon/webapps/authentication/generation/ConfigurationGenerator.java,440,,"            this.getLogger().debug(""BEGIN getUsers role=""+role+"", ID=""+ID);"
47654,./TargetProjects/cocoon/blocks/cocoon-authentication-fw/cocoon-authentication-fw-impl/src/main/java/org/apache/cocoon/webapps/authentication/generation/ConfigurationGenerator.java,450,,"                parameters.setSingleParameterValue(""application"", handler.getApplicationName());"
47655,./TargetProjects/cocoon/blocks/cocoon-authentication-fw/cocoon-authentication-fw-impl/src/main/java/org/apache/cocoon/webapps/authentication/generation/ConfigurationGenerator.java,453,,"                parameters.setSingleParameterValue(""type"", ""user"");"
47656,./TargetProjects/cocoon/blocks/cocoon-authentication-fw/cocoon-authentication-fw-impl/src/main/java/org/apache/cocoon/webapps/authentication/generation/ConfigurationGenerator.java,510,,"            this.getLogger().debug(""BEGIN addRole role=""+name+"", parameters=""+parameters);"
47657,./TargetProjects/cocoon/blocks/cocoon-authentication-fw/cocoon-authentication-fw-impl/src/main/java/org/apache/cocoon/webapps/authentication/generation/JaasSecurityGenerator.java,73,,"		contentHandler.startElement("""", ""authentication"", ""authentication"", new AttributesImpl());"
47658,./TargetProjects/cocoon/blocks/cocoon-authentication-fw/cocoon-authentication-fw-impl/src/main/java/org/apache/cocoon/webapps/authentication/generation/JaasSecurityGenerator.java,107,,"			contentHandler.startElement("""", ""data"", ""data"", new AttributesImpl());"
47659,./TargetProjects/cocoon/blocks/cocoon-axis/cocoon-axis-impl/src/main/java/org/apache/cocoon/components/axis/SoapServerImpl.java,202,,"                    wsdd.getAttribute(""src"", DEFAULT_SERVER_CONFIG)"
47660,./TargetProjects/cocoon/blocks/cocoon-batik/cocoon-batik-impl/src/main/java/org/apache/cocoon/serialization/SVGSerializer.java,125,,"                String transcoderName = parameters[i].getAttribute(""value"");"
47661,./TargetProjects/cocoon/blocks/cocoon-chaperon/cocoon-chaperon-impl/src/main/java/org/apache/cocoon/generation/TextGenerator.java,198,,"    contentHandler.startElement(URI, ""text"", ""text"", atts);"
47662,./TargetProjects/cocoon/blocks/cocoon-chaperon/cocoon-chaperon-impl/src/main/java/org/apache/cocoon/transformation/PatternTransformer.java,413,,"          contentHandler.startElement(NS, ""lexeme"", ""lexeme"", atts);"
47663,./TargetProjects/cocoon/blocks/cocoon-chaperon/cocoon-chaperon-impl/src/main/java/org/apache/cocoon/transformation/PatternTransformer.java,417,,"                    contentHandler.startElement(NS, ""group"", ""group"", XMLUtils.EMPTY_ATTRIBUTES);"
47664,./TargetProjects/cocoon/blocks/cocoon-core-sample/cocoon-core-main-sample/src/main/java/org/apache/cocoon/core/container/reloading/MyGenerator.java,33,,"        contentHandler.startElement("""",""body"",""body"", new AttributesImpl());"
47665,./TargetProjects/cocoon/blocks/cocoon-core-sample/cocoon-core-main-sample/src/main/java/org/apache/cocoon/samples/errorhandling/ExceptionGenerator.java,63,,"        this.contentHandler.startElement("""", ""html"", ""html"", XMLUtils.EMPTY_ATTRIBUTES);"
47666,./TargetProjects/cocoon/blocks/cocoon-core-sample/cocoon-core-main-sample/src/main/java/org/apache/cocoon/samples/errorhandling/ExceptionGenerator.java,64,,"        this.contentHandler.startElement("""", ""body"", ""body"", XMLUtils.EMPTY_ATTRIBUTES);"
47667,./TargetProjects/cocoon/blocks/cocoon-cron/cocoon-cron-impl/src/main/java/org/apache/cocoon/components/cron/CocoonPipelineCronJob.java,55,,"            getLogger().debug(""CocoonPipelineCronJob: "" + name + "", calling pipeline: "" + pipeline);"
47668,./TargetProjects/cocoon/blocks/cocoon-cron/cocoon-cron-impl/src/main/java/org/apache/cocoon/components/cron/TestCronJob.java,73,,"            getLogger().info(""CronJob "" + name + "" launched at "" + new Date() + "" with message '"" + msg +"
47669,./TargetProjects/cocoon/blocks/cocoon-databases/cocoon-databases-impl/src/main/java/org/apache/cocoon/acting/AbstractDatabaseAction.java,205,,"        constants.put(""image-width"",new Integer(Types.INTEGER));"
47670,./TargetProjects/cocoon/blocks/cocoon-databases/cocoon-databases-impl/src/main/java/org/apache/cocoon/acting/AbstractDatabaseAction.java,206,,"        constants.put(""image-height"",new Integer(Types.INTEGER));"
47671,./TargetProjects/cocoon/blocks/cocoon-databases/cocoon-databases-impl/src/main/java/org/apache/cocoon/acting/AbstractDatabaseAction.java,207,,"        constants.put(""image-size"",new Integer(Types.INTEGER));"
47672,./TargetProjects/cocoon/blocks/cocoon-databases/cocoon-databases-impl/src/main/java/org/apache/cocoon/acting/AbstractDatabaseAction.java,208,,"        constants.put(""row-index"",new Integer(Types.INTEGER));"
47673,./TargetProjects/cocoon/blocks/cocoon-databases/cocoon-databases-impl/src/main/java/org/apache/cocoon/acting/AbstractDatabaseAction.java,209,,"        constants.put(""image-mime-type"",new Integer(Types.VARCHAR));"
47674,./TargetProjects/cocoon/blocks/cocoon-databases/cocoon-databases-impl/src/main/java/org/apache/cocoon/acting/DatabaseAddAction.java,137,,"          wildcardParam = keys[i].getAttribute(""param"");"
47675,./TargetProjects/cocoon/blocks/cocoon-databases/cocoon-databases-impl/src/main/java/org/apache/cocoon/acting/DatabaseAddAction.java,235,,"                           .append(':').append(key.getAttribute(""dbcol"")).toString();"
47676,./TargetProjects/cocoon/blocks/cocoon-databases/cocoon-databases-impl/src/main/java/org/apache/cocoon/acting/OraAddAction.java,85,,"            Configuration[] keys = conf.getChild(""table"").getChild(""keys"").getChildren(""key"");"
47677,./TargetProjects/cocoon/blocks/cocoon-databases/cocoon-databases-impl/src/main/java/org/apache/cocoon/acting/OraAddAction.java,91,,"                String mode = keys[i].getAttribute(""mode"", ""automatic"");"
47678,./TargetProjects/cocoon/blocks/cocoon-databases/cocoon-databases-impl/src/main/java/org/apache/cocoon/acting/OraAddAction.java,104,,"                        request.setAttribute(keys[i].getAttribute(""param""), String.valueOf(value));"
47679,./TargetProjects/cocoon/blocks/cocoon-databases/cocoon-databases-impl/src/main/java/org/apache/cocoon/acting/OraAddAction.java,122,,"                String type = values[i].getAttribute(""type"");"
47680,./TargetProjects/cocoon/blocks/cocoon-databases/cocoon-databases-impl/src/main/java/org/apache/cocoon/acting/modular/DatabaseAction.java,111,,"    static final String INPUT_MODULE_SELECTOR = InputModule.ROLE + ""Selector"";"
47681,./TargetProjects/cocoon/blocks/cocoon-databases/cocoon-databases-impl/src/main/java/org/apache/cocoon/acting/modular/DatabaseAction.java,309,,"                getLogger().warn(""Could not select output mode "" + outputMode);"
47682,./TargetProjects/cocoon/blocks/cocoon-databases/cocoon-databases-impl/src/main/java/org/apache/cocoon/acting/modular/DatabaseAction.java,447,,"                return ( columnConf.getAttribute(""name"",null)"
47683,./TargetProjects/cocoon/blocks/cocoon-databases/cocoon-databases-impl/src/main/java/org/apache/cocoon/components/modules/input/CollectionMetaModule.java,59,,"        this.inputConf = config.getChild(""input-module"");"
47684,./TargetProjects/cocoon/blocks/cocoon-databases/cocoon-databases-impl/src/main/java/org/apache/cocoon/components/modules/input/CollectionMetaModule.java,60,,"        this.defaultInput = this.inputConf.getAttribute(""name"",this.defaultInput);"
47685,./TargetProjects/cocoon/blocks/cocoon-databases/cocoon-databases-impl/src/main/java/org/apache/cocoon/transformation/SQLTransformer.java,174,,"    public static final String MAGIC_OUT_PARAMETER_NAME_ATTRIBUTE = ""name"";"
47686,./TargetProjects/cocoon/blocks/cocoon-databases/cocoon-databases-impl/src/main/java/org/apache/cocoon/transformation/SQLTransformer.java,461,,"                    getLogger().debug(""Invalid or missing value for "" + SQLTransformer.MAGIC_ANCESTOR_VALUE_LEVEL_ATTRIBUTE + "" attribute"", e);"
47687,./TargetProjects/cocoon/blocks/cocoon-flowscript/cocoon-flowscript-impl/src/main/java/org/apache/cocoon/components/flow/javascript/fom/FOM_JavaScriptInterpreter.java,285,,"            super.put(""cocoon"", this, cocoon);"
47688,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/binding/JXPathBindingManager.java,170,,"            if (context.getLocalLibrary() != null && configElm.hasAttribute(""extends"")) {"
47689,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/binding/TempRepeaterJXPathBinding.java,153,,"                    Node virtualNode = repeaterNode.getOwnerDocument().createElementNS(null, ""virtual"");"
47690,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/binding/library/LibraryManagerImpl.java,71,,"                    LOG.debug(""Library IS REMOVED from cache: '"" + sourceURI + ""' relative to '"" + baseURI + ""'"");"
47691,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/datatype/convertor/FormattingDateConvertorBuilder.java,43,,"                throw new Exception(""Invalid value \"""" + style + ""\"" for style attribute at "" + DomHelper.getLocation(configElement));"
47692,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/datatype/validationruleimpl/AbstractValidationRule.java,78,,"            return new ValidationError(""Error evaluating \"""" + exprName + ""\"" expression on \"""" +"
47693,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/datatype/validationruleimpl/AbstractValidationRule.java,79,,"                                       ruleName + ""\"" validation rule"", false);"
47694,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/datatype/validationruleimpl/LengthValidationRule.java,62,,"            Object result = evaluateNumeric(exactExpr, expressionContext, ""exact"", ""length"");"
47695,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/datatype/validationruleimpl/ValueCountValidationRule.java,64,,"            Object result = evaluateNumeric(exactExpr, expressionContext, ""exact"", ""value-count"");"
47696,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/flow/javascript/ScriptableWidget.java,74,,"            if (id.equals(""length"")) {"
47697,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/formmodel/AbstractWidget.java,512,,"            contentHandler.startElement(FormsConstants.INSTANCE_NS, ""placeholder"", FormsConstants.INSTANCE_PREFIX_COLON + ""placeholder"", attrs);"
47698,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/formmodel/AggregateFieldDefinition.java,123,,"            throw new IncompletenessException(""Aggregate field '"" + getId() + ""' doesn't have any child widgets."", this);"
47699,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/formmodel/Field.java,556,,"            contentHandler.startElement(FormsConstants.INSTANCE_NS, ""suggestion"", FormsConstants.INSTANCE_PREFIX_COLON + ""suggestion"", XMLUtils.EMPTY_ATTRIBUTES);"
47700,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/formmodel/GoogleMap.java,112,,"        attributesImpl.addAttribute("""",""lng"",""lng"",""CDATA"",this.value.getLng()+"""");"
47701,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/formmodel/GoogleMap.java,112,,"        attributesImpl.addAttribute("""",""lng"",""lng"",""CDATA"",this.value.getLng()+"""");"
47702,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/formmodel/GoogleMap.java,113,,"        attributesImpl.addAttribute("""",""lat"",""lat"",""CDATA"",this.value.getLat()+"""");"
47703,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/formmodel/library/LibraryManagerImpl.java,65,,"                    LOG.debug(""Library IS REMOVED from cache: '"" + sourceURI + ""' relative to '"" + baseURI + ""'"");"
47704,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/generation/JXMacrosHelper.java,136,,"                                         ""form-template"","
47705,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/generation/JXMacrosHelper.java,159,,"        this.cocoonConsumer.startElement(BrowserUpdateTransformer.BU_NSURI, ""replace"", ""bu:replace"", attr);"
47706,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/generation/JXMacrosHelper.java,159,,"        this.cocoonConsumer.startElement(BrowserUpdateTransformer.BU_NSURI, ""replace"", ""bu:replace"", attr);"
47707,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/generation/JXMacrosHelper.java,223,,"                    this.cocoonConsumer.startElement(FormsConstants.INSTANCE_NS, ""placeholder"", FormsConstants.INSTANCE_PREFIX_COLON + ""placeholder"", attrs);"
47708,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/generation/JXMacrosHelper.java,441,,"            handler.startElement(FormsConstants.INSTANCE_NS, ""styling"", FormsConstants.INSTANCE_PREFIX_COLON + ""styling"", attr);"
47709,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/transformation/EffectPipe.java,380,,"            throw new SAXException(""Unexpected startDocument in '"" + getName() + ""' ("" + getLocation() + "")"");"
47710,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/transformation/EffectWidgetReplacingPipe.java,77,,"    private static final String CONTINUATION_ID = ""continuation-id"";"
47711,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/transformation/EffectWidgetReplacingPipe.java,78,,"    private static final String FORM_TEMPLATE_EL = ""form-template"";"
47712,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/transformation/EffectWidgetReplacingPipe.java,81,,"    private static final String REPEATER = ""repeater"";"
47713,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/transformation/EffectWidgetReplacingPipe.java,190,,"            throw new SAXException(""Element '"" + loc + ""' missing required '"" + name + ""' attribute, "" +"
47714,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/transformation/EffectWidgetReplacingPipe.java,191,,"                                   ""at "" + getLocation());"
47715,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/util/I18nMessage.java,111,,"            contentHandler.startElement(I18nTransformer.I18N_NAMESPACE_URI, I18nTransformer.I18N_TRANSLATE_ELEMENT, ""i18n:"" + I18nTransformer.I18N_TRANSLATE_ELEMENT, XMLUtils.EMPTY_ATTRIBUTES);"
47716,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/test/java/org/apache/cocoon/forms/datatype/FlowJXPathSelectionListTestCase.java,58,,"        flowContextObject.put(""beans"", beans);"
47717,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/test/java/org/apache/cocoon/forms/formmodel/FieldTestCase.java,43,,"        Form form = WidgetTestHelper.loadForm(getManager(), this, ""FieldTestCase.model.xml"");"
47718,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/test/java/org/apache/cocoon/forms/formmodel/FieldTestCase.java,44,,"        Field field = (Field)form.getChild(""intfield"");"
47719,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/test/java/org/apache/cocoon/forms/formmodel/FieldTestCase.java,45,,"        Action button = (Action)form.getChild(""action"");"
47720,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/test/java/org/apache/cocoon/forms/formmodel/FieldTestCase.java,50,,"        request.addParameter(""action"", ""pressed"");"
47721,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/test/java/org/apache/cocoon/forms/formmodel/FieldTestCase.java,55,,"        WidgetTestHelper.assertXPathEquals(""Displayed value"", ""11"", VALUE_PATH, doc);"
47722,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/test/java/org/apache/cocoon/forms/formmodel/FieldTestCase.java,59,,"        assertEquals(""Field value"", new Integer(11), field.getValue());"
47723,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/test/java/org/apache/cocoon/forms/formmodel/FieldTestCase.java,81,,"        request.addParameter(""intfield"", ""foo"");"
47724,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/test/java/org/apache/cocoon/forms/formmodel/FieldTestCase.java,144,,"        Field field = (Field)form.getChild(""stringfield"");"
47725,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/test/java/org/apache/cocoon/forms/formmodel/FieldTestCase.java,151,,"        request.addParameter(""stringfield"", ""bar"");"
47726,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/test/java/org/apache/cocoon/forms/formmodel/GroupTestCase.java,38,,"        Field field1 = (Field)((Group)form.getChild(""group2"")).getChild(""field1"");"
47727,./TargetProjects/cocoon/blocks/cocoon-forms/cocoon-forms-impl/src/test/java/org/apache/cocoon/forms/formmodel/WidgetTestHelper.java,68,,"        domBuilder.startElement(FormsConstants.INSTANCE_NS, ""fragment"", FormsConstants.INSTANCE_PREFIX_COLON + ""fragment"", attr);"
47728,./TargetProjects/cocoon/blocks/cocoon-imageop/cocoon-imageop-impl/src/test/java/org/apache/cocoon/reading/imageop/ImageOpReaderTestCase.java,53,,"            params.setParameter(""resize-height"", ""4"");"
47729,./TargetProjects/cocoon/blocks/cocoon-imageop/cocoon-imageop-impl/src/test/java/org/apache/cocoon/reading/imageop/ImageOpReaderTestCase.java,54,,"            byte[] returnedBinaryArray = read(""imageop-resize"", params,"
47730,./TargetProjects/cocoon/blocks/cocoon-it/src/main/java/org/apache/cocoon/it/DateGenerator.java,20,,"        this.contentHandler.startElement("""", ""date"", ""date"", new AttributesImpl());"
47731,./TargetProjects/cocoon/blocks/cocoon-it/src/main/java/org/apache/cocoon/it/RequestParametersGenerator.java,19,,"        this.contentHandler.startElement("""", ""request-paramters"", ""request-paramters"", new AttributesImpl());"
47732,./TargetProjects/cocoon/blocks/cocoon-javaflow/cocoon-javaflow-sample/src/main/java/org/apache/cocoon/samples/flow/java/CalculatorFlow.java,51,,"        sendPageAndWait(uri, new VarMap().add(""a"", a).add(""b"", b).add(""count"", count).add(""hello"", hello));"
47733,./TargetProjects/cocoon/blocks/cocoon-javaflow/cocoon-javaflow-sample/src/main/java/org/apache/cocoon/samples/flow/java/FormFlow.java,43,,"        Field field = (Field) repeater.getWidget(0, ""firstname"");"
47734,./TargetProjects/cocoon/blocks/cocoon-jcr/cocoon-jcr-impl/src/main/java/org/apache/cocoon/jcr/transforming/JCRQueryTransformer.java,165,,"    			this.contentHandler.startElement("""", ""result"", ""result"", emptyAttrs);"
47735,./TargetProjects/cocoon/blocks/cocoon-jcr/cocoon-jcr-impl/src/main/java/org/apache/cocoon/jcr/transforming/JCRQueryTransformer.java,230,,"			nodeAttrs.addAttribute("""", ""href"", ""href"", ""xsd:string"", node.getPath());"
47736,./TargetProjects/cocoon/blocks/cocoon-jcr/cocoon-jcr-impl/src/main/java/org/apache/cocoon/jcr/transforming/JCRQueryTransformer.java,232,,"			nodeAttrs.addAttribute("""", ""type"", ""type"", ""xsd:string"", node.getDefinition().getDeclaringNodeType().getName());"
47737,./TargetProjects/cocoon/blocks/cocoon-jms/cocoon-jms-sample/src/test/java/org/apache/cocoon/acting/DummyTextMessage.java,61,,"        throw new JMSException(""Not implemented!"");"
47738,./TargetProjects/cocoon/blocks/cocoon-mail/cocoon-mail-impl/src/main/java/org/apache/cocoon/generation/IMAPGenerator.java,64,,"    static final String PREFIX = ""imap"";"
47739,./TargetProjects/cocoon/blocks/cocoon-mail/cocoon-mail-impl/src/main/java/org/apache/cocoon/generation/IMAPGenerator.java,77,,"        this.host = par.getParameter(""host"", ""none"");"
47740,./TargetProjects/cocoon/blocks/cocoon-mail/cocoon-mail-impl/src/main/java/org/apache/cocoon/mail/MailCommandManager.java,412,,"            Integer i = (Integer) ctx.get(""param-integer:"" + CONTEXT_UID_ENTRY);"
47741,./TargetProjects/cocoon/blocks/cocoon-mail/cocoon-mail-impl/src/main/java/org/apache/cocoon/mail/MailCommandManager.java,414,,"                String message = ""Missing mandatory context entry "" + String.valueOf(CONTEXT_UID_ENTRY);"
47742,./TargetProjects/cocoon/blocks/cocoon-mail/cocoon-mail-impl/src/main/java/org/apache/cocoon/mail/MailContentHandlerDelegate.java,342,,"        addAttribute(""is-subscribed"", folder.isSubscribed() ? ""yes"" : ""no"");"
47743,./TargetProjects/cocoon/blocks/cocoon-midi/cocoon-midi-impl/src/main/java/org/apache/cocoon/generation/XMidiGenerator.java,173,,"        attr.addAttribute("""", ""VERSION"", ""VERSION"", ""CDATA"", Constants.VERSION);"
47744,./TargetProjects/cocoon/blocks/cocoon-midi/cocoon-midi-impl/src/main/java/org/apache/cocoon/generation/XMidiGenerator.java,174,,"        this.contentHandler.startElement("""", ""XMidi"", ""XMidi"", attr);"
47745,./TargetProjects/cocoon/blocks/cocoon-midi/cocoon-midi-impl/src/main/java/org/apache/cocoon/generation/XMidiGenerator.java,204,,"            if (cid.equals(""MThd"")) {"
47746,./TargetProjects/cocoon/blocks/cocoon-midi/cocoon-midi-impl/src/main/java/org/apache/cocoon/generation/XMidiGenerator.java,206,,"                attr.addAttribute("""", ""LENGTH"", ""LENGTH"", ""CDATA"", """" + len);"
47747,./TargetProjects/cocoon/blocks/cocoon-midi/cocoon-midi-impl/src/main/java/org/apache/cocoon/generation/XMidiGenerator.java,207,,"                attr.addAttribute("""", ""TYPE"", ""TYPE"", ""CDATA"", cid);"
47748,./TargetProjects/cocoon/blocks/cocoon-midi/cocoon-midi-impl/src/main/java/org/apache/cocoon/generation/XMidiGenerator.java,216,,"                this.contentHandler.startElement("""", ""FORMAT"", ""FORMAT"", attr);"
47749,./TargetProjects/cocoon/blocks/cocoon-midi/cocoon-midi-impl/src/main/java/org/apache/cocoon/generation/XMidiGenerator.java,224,,"                this.contentHandler.startElement("""", ""TRACKS"", ""TRACKS"", attr);"
47750,./TargetProjects/cocoon/blocks/cocoon-midi/cocoon-midi-impl/src/main/java/org/apache/cocoon/generation/XMidiGenerator.java,232,,"                this.contentHandler.startElement("""", ""PPNQ"", ""PPNQ"", attr);"
47751,./TargetProjects/cocoon/blocks/cocoon-midi/cocoon-midi-impl/src/main/java/org/apache/cocoon/generation/XMidiGenerator.java,242,,"            } else if (cid.equals(""MTrk"")) {"
47752,./TargetProjects/cocoon/blocks/cocoon-midi/cocoon-midi-impl/src/main/java/org/apache/cocoon/generation/XMidiGenerator.java,257,,"                this.contentHandler.startElement("""", ""CHUNK"", ""CHUNK"", attr);"
47753,./TargetProjects/cocoon/blocks/cocoon-midi/cocoon-midi-impl/src/main/java/org/apache/cocoon/generation/XMidiGenerator.java,306,,"        fArray[4] = ""Undefined"";"
47754,./TargetProjects/cocoon/blocks/cocoon-midi/cocoon-midi-impl/src/main/java/org/apache/cocoon/generation/XMidiGenerator.java,738,,"            this.contentHandler.startElement("""", ""DELTA"", ""DELTA"", attr);"
47755,./TargetProjects/cocoon/blocks/cocoon-midi/cocoon-midi-impl/src/main/java/org/apache/cocoon/generation/XMidiGenerator.java,753,,"                    ctagAttr[2] = ""NAME"";"
47756,./TargetProjects/cocoon/blocks/cocoon-midi/cocoon-midi-impl/src/main/java/org/apache/cocoon/generation/XMidiGenerator.java,801,,"                ctagAttr[0] = ""NUMBER"";"
47757,./TargetProjects/cocoon/blocks/cocoon-midi/cocoon-midi-impl/src/main/java/org/apache/cocoon/generation/XMidiGenerator.java,901,,"                    attr.addAttribute("""", ""SLEN"", ""SLEN"", ""CDATA"", """" + slen);"
47758,./TargetProjects/cocoon/blocks/cocoon-midi/cocoon-midi-impl/src/main/java/org/apache/cocoon/generation/XMidiGenerator.java,902,,"                    attr.addAttribute("""", ""SNAM"", ""SNAM"", ""CDATA"", snam);"
47759,./TargetProjects/cocoon/blocks/cocoon-midi/cocoon-midi-impl/src/main/java/org/apache/cocoon/generation/XMidiGenerator.java,904,,"                        attr.addAttribute("""", ""SNMT"", ""SNMT"", ""CDATA"", nmData);"
47760,./TargetProjects/cocoon/blocks/cocoon-midi/cocoon-midi-impl/src/main/java/org/apache/cocoon/generation/XMidiGenerator.java,906,,"                    attr.addAttribute("""", ""SVAL"", ""SVAL"", ""CDATA"", sval);"
47761,./TargetProjects/cocoon/blocks/cocoon-midi/cocoon-midi-impl/src/main/java/org/apache/cocoon/generation/XMidiGenerator.java,909,,"                        ""STATUS"","
47762,./TargetProjects/cocoon/blocks/cocoon-midi/cocoon-midi-impl/src/main/java/org/apache/cocoon/generation/XMidiGenerator.java,916,,"                        ""EDATA"","
47763,./TargetProjects/cocoon/blocks/cocoon-midi/cocoon-midi-impl/src/main/java/org/apache/cocoon/generation/XMidiGenerator.java,962,,"                        ""CHANNEL"","
47764,./TargetProjects/cocoon/blocks/cocoon-midi/cocoon-midi-impl/src/main/java/org/apache/cocoon/generation/XMidiGenerator.java,1028,,"        this.contentHandler.startElement("""", ""HEXDATA"", ""HEXDATA"", attr);"
47765,./TargetProjects/cocoon/blocks/cocoon-midi/cocoon-midi-impl/src/main/java/org/apache/cocoon/serialization/XMidiSerializer.java,104,,"                            + "" element not expected here, state = """
47766,./TargetProjects/cocoon/blocks/cocoon-midi/cocoon-midi-impl/src/main/java/org/apache/cocoon/serialization/XMidiSerializer.java,108,,"                writeString(atts.getValue(""TYPE""), 4);"
47767,./TargetProjects/cocoon/blocks/cocoon-midi/cocoon-midi-impl/src/main/java/org/apache/cocoon/serialization/XMidiSerializer.java,109,,"                Integer iLen = new Integer(atts.getValue(""LENGTH""));"
47768,./TargetProjects/cocoon/blocks/cocoon-naming/cocoon-naming-impl/src/main/java/org/apache/cocoon/transformation/LDAPTransformer.java,1273,,"                                                transformer.data(""replaced"");"
47769,./TargetProjects/cocoon/blocks/cocoon-naming/cocoon-naming-impl/src/main/java/org/apache/cocoon/transformation/LDAPTransformer.java,1342,,"                                throw new Exception(""[LDAPTransformer] Error replacing an attribute: "" + e.toString());"
47770,./TargetProjects/cocoon/blocks/cocoon-petstore/cocoon-petstore-impl/src/main/java/org/apache/cocoon/components/flow/javascript/ScriptableResult.java,67,,"        Scriptable rowMap = cx.newObject(scope, ""Array"");"
47771,./TargetProjects/cocoon/blocks/cocoon-portal/cocoon-portal-impl/src/main/java/org/apache/cocoon/portal/coplet/adapter/impl/AbstractCopletAdapter.java,236,,"                        this.getLogger().warn(""Unable to get content of coplet: "" + coplet.getId(), error);"
47772,./TargetProjects/cocoon/blocks/cocoon-portal/cocoon-portal-impl/src/main/java/org/apache/cocoon/portal/layout/renderer/aspect/impl/RemovableAspect.java,64,,"                XMLUtils.startElement(handler, ""remove-uri"");"
47773,./TargetProjects/cocoon/blocks/cocoon-portal/cocoon-portal-impl/src/main/java/org/apache/cocoon/portal/layout/renderer/aspect/impl/TabContentAspect.java,178,,"            XMLUtils.startElement(handler, ""named-item"", attributes);"
47774,./TargetProjects/cocoon/blocks/cocoon-portal/cocoon-portal-impl/src/main/java/org/apache/cocoon/portal/services/impl/DefaultPortalManager.java,166,,"            ch.startElement(BU_NSURI, ""document"", ""bu:document"", XMLUtils.EMPTY_ATTRIBUTES);"
47775,./TargetProjects/cocoon/blocks/cocoon-portal/cocoon-portal-impl/src/main/java/org/apache/cocoon/portal/services/impl/DefaultPortalManager.java,166,,"            ch.startElement(BU_NSURI, ""document"", ""bu:document"", XMLUtils.EMPTY_ATTRIBUTES);"
47776,./TargetProjects/cocoon/blocks/cocoon-portal/cocoon-portal-impl/src/main/java/org/apache/cocoon/portal/services/impl/DefaultPortalManager.java,174,,"                XMLUtils.startElement(ch, ""coplet"", a);"
47777,./TargetProjects/cocoon/blocks/cocoon-portal/cocoon-portal-portlet-env/src/main/java/org/apache/cocoon/portlet/CocoonPortlet.java,302,,"                                ""Resource Not Found"","
47778,./TargetProjects/cocoon/blocks/cocoon-portal/cocoon-portal-portlet-env/src/main/java/org/apache/cocoon/portlet/ManagedCocoonPortlet.java,395,,"                                ""Resource Not Found"","
47779,./TargetProjects/cocoon/blocks/cocoon-portal/cocoon-portal-portlet-impl/src/main/java/org/apache/cocoon/portal/pluto/adapter/PortletAdapter.java,153,,"            ServletRequestImpl  req = (ServletRequestImpl) servletRequest.getAttribute(""portlet-request-"" + coplet.getId());"
47780,./TargetProjects/cocoon/blocks/cocoon-portal/cocoon-portal-portlet-impl/src/main/java/org/apache/cocoon/portal/pluto/adapter/PortletAdapter.java,156,,"                servletRequest.setAttribute(""portlet-response-"" + coplet.getId(),  new ServletResponseImpl(res));"
47781,./TargetProjects/cocoon/blocks/cocoon-portal/cocoon-portal-portlet-impl/src/main/java/org/apache/cocoon/portal/pluto/adapter/PortletAdapter.java,343,,"            servletRequest.setAttribute(""portlet-event"", event);"
47782,./TargetProjects/cocoon/blocks/cocoon-portal/cocoon-portal-portlet-impl/src/main/java/org/apache/cocoon/portal/pluto/deployment/WebApplicationRewriter.java,43,,"    protected static final String[] ELEMENTS_BEFORE_SERVLET = new String[]{""icon"", ""display-name"", ""description"","
47783,./TargetProjects/cocoon/blocks/cocoon-portal/cocoon-portal-portlet-impl/src/main/java/org/apache/cocoon/portal/pluto/deployment/WebApplicationRewriter.java,43,,"    protected static final String[] ELEMENTS_BEFORE_SERVLET = new String[]{""icon"", ""display-name"", ""description"","
47784,./TargetProjects/cocoon/blocks/cocoon-portal/cocoon-portal-portlet-impl/src/main/java/org/apache/cocoon/portal/pluto/deployment/WebApplicationRewriter.java,44,,"            ""distributable"", ""context-param"", ""filter"", ""filter-mapping"", ""listener"", ""servlet""};"
47785,./TargetProjects/cocoon/blocks/cocoon-portal/cocoon-portal-portlet-impl/src/main/java/org/apache/cocoon/portal/pluto/test/TestPortlet.java,85,,"        writer.write(""<p>I'm running in: "" + req.getPortalContext().getPortalInfo() + ""</p>"");"
47786,./TargetProjects/cocoon/blocks/cocoon-portal/cocoon-portal-sitemap/src/main/java/org/apache/cocoon/portal/acting/BookmarkAction.java,112,,"				throw new ParameterException(""Unable to read configuration from "" + configurationFile, ioe);"
47787,./TargetProjects/cocoon/blocks/cocoon-portal/cocoon-portal-sitemap/src/main/java/org/apache/cocoon/portal/transformation/CopletTransformer.java,77,,"    public static final String COPLET_ELEM = ""coplet"";"
47788,./TargetProjects/cocoon/blocks/cocoon-portal/cocoon-portal-sitemap/src/main/java/org/apache/cocoon/portal/transformation/CopletTransformer.java,178,,"            final String format = attr.getValue(""format"");"
47789,./TargetProjects/cocoon/blocks/cocoon-portal/cocoon-portal-sitemap/src/main/java/org/apache/cocoon/portal/transformation/CopletTransformer.java,183,,"            if ( attr.getValue(""href"") != null ) {"
47790,./TargetProjects/cocoon/blocks/cocoon-portal/cocoon-portal-sitemap/src/main/java/org/apache/cocoon/portal/transformation/CopletTransformer.java,355,,"                        this.startElement("""", ""input"", ""input"", hiddenAttrs);"
47791,./TargetProjects/cocoon/blocks/cocoon-portal/cocoon-portal-sitemap/src/main/java/org/apache/cocoon/portal/transformation/HTMLEventLinkTransformer.java,109,,"                                            ""coplet:"" + CopletTransformer.LINK_ELEM);"
47792,./TargetProjects/cocoon/blocks/cocoon-portal/cocoon-portal-sitemap/src/main/java/org/apache/cocoon/portal/transformation/HTMLEventLinkTransformer.java,110,,"                this.xmlConsumer.endPrefixMapping(""coplet"");"
47793,./TargetProjects/cocoon/blocks/cocoon-portal/cocoon-portal-sitemap/src/main/java/org/apache/cocoon/portal/transformation/HTMLEventLinkTransformer.java,132,,"        newAttributes.removeAttribute(""href"");"
47794,./TargetProjects/cocoon/blocks/cocoon-portal/cocoon-portal-sitemap/src/main/java/org/apache/cocoon/portal/transformation/HTMLEventLinkTransformer.java,133,,"        newAttributes.removeAttribute(""external"");"
47795,./TargetProjects/cocoon/blocks/cocoon-portal/cocoon-portal-sitemap/src/main/java/org/apache/cocoon/portal/transformation/HTMLRootTransformer.java,80,,"            XMLUtils.endElement(this.xmlConsumer, ""body"");"
47796,./TargetProjects/cocoon/blocks/cocoon-profiler/cocoon-profiler-impl/src/main/java/org/apache/cocoon/generation/ProfilerGenerator.java,103,,"        if (request.getParameter(""key"")!=null) {"
47797,./TargetProjects/cocoon/blocks/cocoon-profiler/cocoon-profiler-impl/src/main/java/org/apache/cocoon/generation/ProfilerGenerator.java,161,,"                this.contentHandler.startElement(PROFILER_NS, ""fragment-error"", PREFIX_COLON + ""fragment-error"", XMLUtils.EMPTY_ATTRIBUTES);"
47798,./TargetProjects/cocoon/blocks/cocoon-profiler/cocoon-profiler-impl/src/main/java/org/apache/cocoon/generation/ProfilerGenerator.java,191,,"        atts.addAttribute("""", ""date"", ""date"", ""CDATA"", dateTime);"
47799,./TargetProjects/cocoon/blocks/cocoon-profiler/cocoon-profiler-impl/src/main/java/org/apache/cocoon/generation/ProfilerGenerator.java,238,,"        atts.addAttribute("""", ""uri"", ""uri"", ""CDATA"", result.getURI());"
47800,./TargetProjects/cocoon/blocks/cocoon-profiler/cocoon-profiler-impl/src/main/java/org/apache/cocoon/generation/ProfilerGenerator.java,250,,"            atts.addAttribute("""", ""time"", ""time"", ""CDATA"","
47801,./TargetProjects/cocoon/blocks/cocoon-profiler/cocoon-profiler-impl/src/main/java/org/apache/cocoon/generation/ProfilerGenerator.java,273,,"                    atts.addAttribute("""", ""role"", ""role"", ""CDATA"", roles[i]);"
47802,./TargetProjects/cocoon/blocks/cocoon-profiler/cocoon-profiler-impl/src/main/java/org/apache/cocoon/generation/ProfilerGenerator.java,277,,"                    atts.addAttribute("""", ""source"", ""source"", ""CDATA"","
47803,./TargetProjects/cocoon/blocks/cocoon-profiler/cocoon-profiler-impl/src/main/java/org/apache/cocoon/generation/ProfilerGenerator.java,321,,"        atts.addAttribute("""", ""index"", ""index"", ""CDATA"","
47804,./TargetProjects/cocoon/blocks/cocoon-profiler/cocoon-profiler-impl/src/main/java/org/apache/cocoon/generation/ProfilerGenerator.java,404,,"                atts.addAttribute("""", ""name"", ""name"", ""CDATA"","
47805,./TargetProjects/cocoon/blocks/cocoon-profiler/cocoon-profiler-impl/src/main/java/org/apache/cocoon/generation/ProfilerGenerator.java,406,,"                atts.addAttribute("""", ""value"", ""value"", ""CDATA"","
47806,./TargetProjects/cocoon/blocks/cocoon-profiler/cocoon-profiler-impl/src/main/java/org/apache/cocoon/profiler/debugging/RemoteDebuggingSitemapExecutor.java,95,,"            String configuration = Debugger.xmlElement(""src"",resolvedSource);"
47807,./TargetProjects/cocoon/blocks/cocoon-profiler/cocoon-profiler-impl/src/main/java/org/apache/cocoon/profiler/debugging/SimpleSitemapExecutor.java,57,,"        this.getLogger().info(""- Invoking action '"" + context.getType() + ""' ("" +"
47808,./TargetProjects/cocoon/blocks/cocoon-profiler/cocoon-profiler-impl/src/main/java/org/apache/cocoon/profiler/debugging/SimpleSitemapExecutor.java,81,,"            this.getLogger().info(""- Matcher '"" + context.getType() + ""' returned a map."");"
47809,./TargetProjects/cocoon/blocks/cocoon-profiler/cocoon-profiler-impl/src/main/java/org/apache/cocoon/profiler/debugging/SimpleSitemapExecutor.java,118,,"            this.getLogger().info(""- Selector '"" + context.getType() + ""' succeeded."");"
47810,./TargetProjects/cocoon/blocks/cocoon-profiler/cocoon-profiler-impl/src/main/java/org/apache/cocoon/profiling/generation/StatisticsGenerator.java,89,,"                XMLUtils.startElement(this.xmlConsumer, ""report"", attrs);"
47811,./TargetProjects/cocoon/blocks/cocoon-proxy/cocoon-proxy-impl/src/main/java/org/apache/cocoon/generation/GenericProxyGenerator.java,169,,"                this.contentHandler.startElement("""", ""no-xml-content"", ""no-xml-content"", XMLUtils.EMPTY_ATTRIBUTES);"
47812,./TargetProjects/cocoon/blocks/cocoon-proxy/cocoon-proxy-impl/src/main/java/org/apache/cocoon/generation/HttpProxyGenerator.java,94,,"        this.methodString = configuration.getChild(""method"").getValue(""GET"");"
47813,./TargetProjects/cocoon/blocks/cocoon-proxy/cocoon-proxy-impl/src/main/java/org/apache/cocoon/generation/HttpProxyGenerator.java,101,,"        String url = configuration.getChild(""url"").getValue(null);"
47814,./TargetProjects/cocoon/blocks/cocoon-proxy/cocoon-proxy-impl/src/main/java/org/apache/cocoon/generation/HttpProxyGenerator.java,287,,"        attributes.addAttribute("""", ""method"", ""method"", ""CDATA"", this.method.getName());"
47815,./TargetProjects/cocoon/blocks/cocoon-proxy/cocoon-proxy-impl/src/main/java/org/apache/cocoon/generation/HttpProxyGenerator.java,291,,"        super.xmlConsumer.startElement("""", ""request"", ""request"", attributes);"
47816,./TargetProjects/cocoon/blocks/cocoon-proxy/cocoon-proxy-impl/src/main/java/org/apache/cocoon/generation/HttpProxyGenerator.java,296,,"            attributes.addAttribute("""", ""value"", ""value"", ""CDATA"", ""application/x-www-form-urlencoded"");"
47817,./TargetProjects/cocoon/blocks/cocoon-proxy/cocoon-proxy-impl/src/main/java/org/apache/cocoon/generation/HttpProxyGenerator.java,297,,"            super.xmlConsumer.startElement("""", ""header"", ""header"", attributes);"
47818,./TargetProjects/cocoon/blocks/cocoon-qdox/cocoon-qdox-impl/src/main/java/org/apache/cocoon/components/source/impl/QDoxSource.java,109,,"    protected final static String THROWS_ELEMENT = ""throws"";"
47819,./TargetProjects/cocoon/blocks/cocoon-qdox/cocoon-qdox-impl/src/main/java/org/apache/cocoon/components/source/impl/QDoxSource.java,703,,"            logger.error(""Couldn't return JavaClass!"", se);"
47820,./TargetProjects/cocoon/blocks/cocoon-repository/cocoon-repository-impl/src/main/java/org/apache/cocoon/components/source/impl/InspectableTraversableCachingSource.java,66,,"                getLogger().debug(""Failure initializing inspectable response"", e);"
47821,./TargetProjects/cocoon/blocks/cocoon-repository/cocoon-repository-impl/src/main/java/org/apache/cocoon/generation/TraversableSourceDescriptionGenerator.java,187,,"                                        ""CDATA"", source.getMimeType());"
47822,./TargetProjects/cocoon/blocks/cocoon-scratchpad/cocoon-scratchpad-impl/src/main/java/org/apache/cocoon/components/flow/javascript/fom/AO_FOM_JavaScriptInterpreter.java,401,,"        thrScope.put(""cocoon"", thrScope, cocoon);"
47823,./TargetProjects/cocoon/blocks/cocoon-scratchpad/cocoon-scratchpad-impl/src/main/java/org/apache/cocoon/components/flow/javascript/fom/AO_FOM_JavaScriptInterpreter.java,621,,"                    Context.reportRuntimeError(ToolErrorReporter.getMessage(""msg.uncaughtJSException"","
47824,./TargetProjects/cocoon/blocks/cocoon-session-fw/cocoon-session-fw-impl/src/main/java/org/apache/cocoon/webapps/session/components/DefaultSessionManager.java,166,,"            this.getLogger().debug(""BEGIN getContextFragment name="" + contextName + "", path="" + path);"
47825,./TargetProjects/cocoon/blocks/cocoon-session-fw/cocoon-session-fw-impl/src/main/java/org/apache/cocoon/webapps/session/components/DefaultSessionManager.java,180,,"            throw new ProcessingException(""SessionManager.getContextFragment: Context '"" + contextName + ""' not found."");"
47826,./TargetProjects/cocoon/blocks/cocoon-session-fw/cocoon-session-fw-impl/src/main/java/org/apache/cocoon/webapps/session/components/DefaultSessionManager.java,188,,"                              (frag == null? ""null"": XMLUtils.serializeNode(frag)));"
47827,./TargetProjects/cocoon/blocks/cocoon-session-fw/cocoon-session-fw-impl/src/main/java/org/apache/cocoon/webapps/session/context/RequestSessionContext.java,124,,"    private static final String PARAMETERS_ELEMENT = ""cinclude:"" + CIncludeTransformer.CINCLUDE_PARAMETERS_ELEMENT;"
47828,./TargetProjects/cocoon/blocks/cocoon-session-fw/cocoon-session-fw-impl/src/main/java/org/apache/cocoon/webapps/session/transformation/SessionPostTransformer.java,60,,"    public static final String DELETECONTEXT_NAME_ATTRIBUTE = ""name"";"
47829,./TargetProjects/cocoon/blocks/cocoon-session-fw/cocoon-session-fw-impl/src/main/java/org/apache/cocoon/webapps/session/transformation/SessionPostTransformer.java,63,,"    public static final String SETXML_CONTEXT_ATTRIBUTE = ""context"";"
47830,./TargetProjects/cocoon/blocks/cocoon-session-fw/cocoon-session-fw-impl/src/main/java/org/apache/cocoon/webapps/session/transformation/SessionPostTransformer.java,64,,"    public static final String SETXML_PATH_ATTRIBUTE = ""path"";"
47831,./TargetProjects/cocoon/blocks/cocoon-session-fw/cocoon-session-fw-impl/src/main/java/org/apache/cocoon/webapps/session/transformation/SessionPostTransformer.java,101,,"    public static final String FORM_VALIDATESET_ELEMENT = ""constraint-set"";"
47832,./TargetProjects/cocoon/blocks/cocoon-session-fw/cocoon-session-fw-impl/src/main/java/org/apache/cocoon/webapps/session/transformation/SessionPostTransformer.java,178,,"            newattr.addAttribute("""", INPUTXML_NAME_ATTRIBUTE, INPUTXML_NAME_ATTRIBUTE, ""CDATA"", fieldname);"
47833,./TargetProjects/cocoon/blocks/cocoon-slide/cocoon-slide-impl/src/main/java/org/apache/cocoon/components/source/SourceDTO.java,141,,"        throw new IllegalStateException(""Data transfer object does not support this operation"");"
47834,./TargetProjects/cocoon/blocks/cocoon-slide/cocoon-slide-impl/src/main/java/org/apache/cocoon/slide/util/AdminHelper.java,243,,"            NodeProperty property = descriptor.getProperty(""group-member-set"",""DAV:"");"
47835,./TargetProjects/cocoon/blocks/cocoon-slide/cocoon-slide-impl/src/main/java/org/apache/cocoon/slide/util/AdminHelper.java,243,,"            NodeProperty property = descriptor.getProperty(""group-member-set"",""DAV:"");"
47836,./TargetProjects/cocoon/blocks/cocoon-template/cocoon-template-impl/src/test/java/org/apache/cocoon/template/jxtg/JXTemplateGeneratorTestCase.java,95,,"        parameters.setParameter(""test"", ""foo"");"
47837,./TargetProjects/cocoon/blocks/cocoon-validation/cocoon-validation-impl/src/main/java/org/apache/cocoon/transformation/ValidationReportTransformer.java,262,,"            handler.startElement(NS, ""report"", ""report"", attributes);"
47838,./TargetProjects/cocoon/blocks/cocoon-validation/cocoon-validation-impl/src/main/java/org/apache/cocoon/transformation/ValidationReportTransformer.java,272,,"                        attributes.addAttribute("""", ""public"", ""public"", ""CDATA"","
47839,./TargetProjects/cocoon/blocks/cocoon-velocity/cocoon-velocity-impl/src/main/java/org/apache/cocoon/generation/VelocityGenerator.java,860,,"                        if (key.equals(""flowContext"") "
47840,./TargetProjects/cocoon/blocks/cocoon-velocity/cocoon-velocity-impl/src/main/java/org/apache/cocoon/generation/VelocityGenerator.java,861,,"                            || key.equals(""continuation"")) {"
47841,./TargetProjects/cocoon/blocks/cocoon-web3/cocoon-web3-impl/src/main/java/org/apache/cocoon/components/web3/Web3.java,30,,"    String INCLUDE_NAME_ATTR   = ""name"";"
47842,./TargetProjects/cocoon/blocks/cocoon-web3/cocoon-web3-impl/src/main/java/org/apache/cocoon/components/web3/impl/DefaultWeb3StreamerImpl.java,44,,"            Web3.INCLUDE_NAME_ATTR, ""CDATA"", function.getName().toUpperCase() );"
47843,./TargetProjects/cocoon/blocks/cocoon-webdav/cocoon-webdav-impl/src/main/java/org/apache/cocoon/components/repository/impl/WebDAVRepositoryPropertyHelper.java,67,,"            this.getLogger().error(""HTTP Error getting property "" + namespace + "":"" + name + "" for "" + uri, he);"
47844,./TargetProjects/cocoon/blocks/cocoon-webdav/cocoon-webdav-impl/src/main/java/org/apache/cocoon/components/source/impl/WebDAVSource.java,230,,"                + "". Server responded "" + e.getReasonCode() + "" ("" + e.getReason() + "") - "" + e.getMessage();"
47845,./TargetProjects/cocoon/blocks/cocoon-webdav/cocoon-webdav-impl/src/main/java/org/apache/cocoon/components/source/impl/WebDAVSource.java,271,,"            final int index = uri.indexOf(""://"");"
47846,./TargetProjects/cocoon/blocks/cocoon-webdav/cocoon-webdav-impl/src/main/java/org/apache/cocoon/components/webdav/WebDAVUtil.java,85,,"                                    + "" Status: "" + resource.getStatusCode()"
47847,./TargetProjects/cocoon/blocks/cocoon-webdav/cocoon-webdav-impl/src/main/java/org/apache/cocoon/components/webdav/WebDAVUtil.java,86,,"                                    + "" Message: "" + resource.getStatusMessage());"
47848,./TargetProjects/cocoon/blocks/cocoon-xmldb/cocoon-xmldb-impl/src/main/java/org/apache/cocoon/components/source/impl/XMLDBSource.java,118,,"    protected static final String CDATA  = ""CDATA"";"
47849,./TargetProjects/cocoon/blocks/cocoon-xmldb/cocoon-xmldb-impl/src/main/java/org/apache/cocoon/generation/XMLDBCollectionGenerator.java,209,,"                                    RESOURCE_COUNT_ATTR, ""CDATA"", nresources);"
47850,./TargetProjects/cocoon/blocks/cocoon-xmldb/cocoon-xmldb-impl/src/main/java/org/apache/cocoon/generation/XMLDBCollectionGenerator.java,226,,"                attributes.addAttribute("""", ""name"", ""name"", ""CDATA"", collections[i]);"
47851,./TargetProjects/cocoon/blocks/cocoon-xmldb/cocoon-xmldb-impl/src/main/java/org/apache/cocoon/transformation/XMLDBTransformer.java,356,,"                if (!""create"".equals(operation) && !""delete"".equals(operation) && !""update"".equals(operation)) {"
47852,./TargetProjects/cocoon/blocks/cocoon-xmldb/cocoon-xmldb-impl/src/main/java/org/apache/cocoon/transformation/XMLDBTransformer.java,448,,"                                result = ""success"";"
47853,./TargetProjects/cocoon/blocks/cocoon-xsp/cocoon-xsp-impl/src/main/java/org/apache/cocoon/components/language/markup/xsp/EsqlHelper.java,182,,"        if (defaultString != null && !defaultString.equals(""_null_"")) {"
47854,./TargetProjects/cocoon/blocks/cocoon-xsp/cocoon-xsp-impl/src/main/java/org/apache/cocoon/components/language/markup/xsp/XSPCookieHelper.java,161,,"                XSPObjectHelper.start(URI, PREFIX, contentHandler, ""cookie"");"
47855,./TargetProjects/cocoon/blocks/cocoon-xsp/cocoon-xsp-impl/src/main/java/org/apache/cocoon/components/language/markup/xsp/XSPRequestHelper.java,160,,"        XSPObjectHelper.addAttribute(attr, ""name"", name);"
47856,./TargetProjects/cocoon/blocks/cocoon-xsp/cocoon-xsp-impl/src/main/java/org/apache/cocoon/components/language/markup/xsp/XSPRequestHelper.java,206,,"            ""parameter-values"", attr);"
47857,./TargetProjects/cocoon/core/cocoon-blocks-fw/cocoon-blocks-fw-impl/src/main/java/org/apache/cocoon/blocks/BlockContext.java,116,,"        if (!(blockContextURL.startsWith(""file:"") || blockContextURL.startsWith(""/"")"
47858,./TargetProjects/cocoon/core/cocoon-cli/src/main/java/org/apache/cocoon/bean/CocoonWrapper.java,313,,"        headers.put(""user-agent"", userAgent);"
47859,./TargetProjects/cocoon/core/cocoon-cli/src/main/java/org/apache/cocoon/bean/CocoonWrapper.java,314,,"        headers.put(""accept"", accept);"
47860,./TargetProjects/cocoon/core/cocoon-cli/src/main/java/org/apache/cocoon/bean/helpers/BeanConfigurator.java,164,,"                        throw new IllegalArgumentException(""Cannot have ""+NODE_CONTEXT_DIR+"" as both element and attribute"");"
47861,./TargetProjects/cocoon/core/cocoon-cli/src/main/java/org/apache/cocoon/bean/helpers/BeanConfigurator.java,164,,"                        throw new IllegalArgumentException(""Cannot have ""+NODE_CONTEXT_DIR+"" as both element and attribute"");"
47862,./TargetProjects/cocoon/core/cocoon-cli/src/main/java/org/apache/cocoon/bean/helpers/BeanConfigurator.java,237,,"            throw new IllegalArgumentException(""Unexpected children of <"" + NODE_LOGGING + ""> node"");"
47863,./TargetProjects/cocoon/core/cocoon-cli/src/main/java/org/apache/cocoon/bean/helpers/BeanConfigurator.java,237,,"            throw new IllegalArgumentException(""Unexpected children of <"" + NODE_LOGGING + ""> node"");"
47864,./TargetProjects/cocoon/core/cocoon-cli/src/main/test/org/apache/cocoon/environment/commandline/test/CommandLineContextTestCase.java,68,,"        new File(commandLineContextDir, ""foo"" + File.separator + ""bar"").mkdirs();"
47865,./TargetProjects/cocoon/core/cocoon-cli/src/main/test/org/apache/cocoon/environment/commandline/test/CommandLineContextTestCase.java,89,,"                new String[]{""foo/bar"", commandLineContextDir + File.separator + ""foo/bar""},"
47866,./TargetProjects/cocoon/core/cocoon-cli/src/main/test/org/apache/cocoon/environment/commandline/test/CommandLineContextTestCase.java,100,,"            String message = ""Test "" + ""'"" + test + ""'"";"
47867,./TargetProjects/cocoon/core/cocoon-core/src/main/java/org/apache/cocoon/acting/LocaleAction.java,206,,"            getLogger().debug((this.storeInRequest ? ""will"" : ""won't"") + "" set values in request"");"
47868,./TargetProjects/cocoon/core/cocoon-core/src/main/java/org/apache/cocoon/acting/LocaleAction.java,206,,"            getLogger().debug((this.storeInRequest ? ""will"" : ""won't"") + "" set values in request"");"
47869,./TargetProjects/cocoon/core/cocoon-core/src/main/java/org/apache/cocoon/components/source/helpers/DelaySourceRefresher.java,219,,"            String key = NetUtils.decode(conf.getAttribute(ATTR_KEY), ""utf-8"");"
47870,./TargetProjects/cocoon/core/cocoon-core/src/main/java/org/apache/cocoon/i18n/XMLResourceBundle.java,286,,"            getLogger().error(""Bundle <"" + this.sourceURI + ""> not loaded: Invalid URI"", e);"
47871,./TargetProjects/cocoon/core/cocoon-core/src/main/java/org/apache/cocoon/i18n/XMLResourceBundle.java,291,,"                getLogger().info(""Bundle <"" + sourceURI + ""> not loaded: Source URI not found"", e);"
47872,./TargetProjects/cocoon/core/cocoon-core/src/main/java/org/apache/cocoon/matching/LocaleMatcher.java,213,,"            getLogger().debug((this.storeInRequest ? ""will"" : ""won't"") + "" set values in request"");"
47873,./TargetProjects/cocoon/core/cocoon-core/src/main/java/org/apache/cocoon/matching/LocaleMatcher.java,213,,"            getLogger().debug((this.storeInRequest ? ""will"" : ""won't"") + "" set values in request"");"
47874,./TargetProjects/cocoon/core/cocoon-core/src/main/java/org/apache/cocoon/servlet/multipart/MultipartParser.java,151,,"            this.uploadStatus.put(""filename"", """");"
47875,./TargetProjects/cocoon/core/cocoon-core/src/main/java/org/apache/cocoon/transformation/CIncludeTransformer.java,148,,"    public static final String CINCLUDE_NAME_ELEMENT          = ""name"";"
47876,./TargetProjects/cocoon/core/cocoon-core/src/main/java/org/apache/cocoon/transformation/CIncludeTransformer.java,149,,"    public static final String CINCLUDE_VALUE_ELEMENT         = ""value"";"
47877,./TargetProjects/cocoon/core/cocoon-core/src/main/java/org/apache/cocoon/transformation/CIncludeTransformer.java,295,,"            stack.push(""end"");"
47878,./TargetProjects/cocoon/core/cocoon-core/src/main/java/org/apache/cocoon/transformation/I18nTransformer.java,1294,,"                        + ""inside of other i18n elements."");"
47879,./TargetProjects/cocoon/core/cocoon-core/src/main/java/org/apache/cocoon/transformation/IncludeTransformer.java,536,,"                    getLogger().info(""Failed to load <"" + this.source + "">, using fallback."", e);"
47880,./TargetProjects/cocoon/core/cocoon-core/src/main/java/org/apache/cocoon/transformation/IncludeTransformer.java,803,,"                        throw new SAXException(""Element "" + INCLUDE_ELEMENT + "" nested in another one."");"
47881,./TargetProjects/cocoon/core/cocoon-core/src/main/java/org/apache/cocoon/transformation/IncludeTransformer.java,810,,"                        throw new SAXException(""Attribute '"" + SRC_ATTRIBUTE + ""' empty or missing."");"
47882,./TargetProjects/cocoon/core/cocoon-core/src/main/java/org/apache/cocoon/transformation/SimpleFormInstanceExtractionTransformer.java,101,,"    String qname = ""name"";"
47883,./TargetProjects/cocoon/core/cocoon-core/src/main/java/org/apache/cocoon/transformation/SimpleFormTransformer.java,355,,"        this.defaultInput = this.defaultInputConf.getAttribute(""name"", this.defaultInput);"
47884,./TargetProjects/cocoon/core/cocoon-core/src/main/java/org/apache/cocoon/transformation/SimpleFormTransformer.java,501,,"        String checked = attributes.getValue(""checked"");"
47885,./TargetProjects/cocoon/core/cocoon-core/src/main/java/org/apache/cocoon/transformation/SimpleFormTransformer.java,502,,"        String value = attributes.getValue(""value"");"
47886,./TargetProjects/cocoon/core/cocoon-core/src/main/java/org/apache/cocoon/transformation/SimpleFormTransformer.java,509,,"                    + "" attributes """
47887,./TargetProjects/cocoon/core/cocoon-core/src/main/java/org/apache/cocoon/transformation/SimpleFormTransformer.java,513,,"                getLogger().debug(""replacing"");"
47888,./TargetProjects/cocoon/core/cocoon-core/src/main/java/org/apache/cocoon/transformation/SimpleFormTransformer.java,662,,"            String selected = attributes.getValue(""selected"");"
47889,./TargetProjects/cocoon/core/cocoon-core/src/main/java/org/apache/cocoon/xml/DocumentHandlerAdapter.java,89,,"            throw new SAXException(""ContentHandler not set"");"
47890,./TargetProjects/cocoon/core/cocoon-core/src/main/java/org/apache/cocoon/xml/DocumentHandlerWrapper.java,101,,"            throw new SAXException(""DocumentHandler not set"");"
47891,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/SitemapComponentTestCase.java,117,,"            component.setRole(typeClassName + ""Selector"");"
47892,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/SitemapComponentTestCase.java,152,,"            assertNotNull(""Test lookup of source resolver"", resolver);"
47893,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/SitemapComponentTestCase.java,284,,"            assertNotNull(""Test lookup of parser"", parser);"
47894,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/SitemapComponentTestCase.java,343,,"            assertNotNull(""Test for component manager"", this.getManager());"
47895,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/acting/LocaleActionTestCase.java,62,,"        assertNotNull(""Action should always succeed"", result);"
47896,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/acting/LocaleActionTestCase.java,63,,"        assertEquals(""Test for locale"", ""en_US"", result.get(""locale""));"
47897,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/acting/LocaleActionTestCase.java,63,,"        assertEquals(""Test for locale"", ""en_US"", result.get(""locale""));"
47898,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/acting/LocaleActionTestCase.java,64,,"        assertEquals(""Test for language"", ""en"", result.get(""language""));"
47899,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/acting/LocaleActionTestCase.java,64,,"        assertEquals(""Test for language"", ""en"", result.get(""language""));"
47900,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/acting/LocaleActionTestCase.java,65,,"        assertEquals(""Test for country"", ""US"", result.get(""country""));"
47901,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/acting/LocaleActionTestCase.java,65,,"        assertEquals(""Test for country"", ""US"", result.get(""country""));"
47902,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/acting/LocaleActionTestCase.java,66,,"        assertEquals(""Test for variant"", """", result.get(""variant""));"
47903,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/acting/LocaleActionTestCase.java,66,,"        assertEquals(""Test for variant"", """", result.get(""variant""));"
47904,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/acting/LocaleActionTestCase.java,79,,"        result = act(""locale3"", null, parameters);"
47905,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/acting/LocaleActionTestCase.java,97,,"        Cookie mockCookie = new Cookie(""locale"", ""no_NO_B"");"
47906,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/acting/LocaleActionTestCase.java,145,,"        assertNull(""Test for request attribute"", getRequest().getAttribute(""locale""));"
47907,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/acting/LocaleActionTestCase.java,146,,"        assertNull(""Test for session"", getRequest().getSession(false));"
47908,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/acting/LocaleActionTestCase.java,147,,"        assertTrue(""Test for cookie"", getResponse().getCookies().isEmpty());"
47909,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/acting/RequestParamActionTestCase.java,57,,"        assertEquals(""Test for parameter"", ""test.xml?abc=def&ghi=jkl"", result.get(""requestURI""));"
47910,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/components/source/impl/CachingSourceTestCase.java,72,,"        testResolveURI(""cached"", URI);"
47911,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/components/source/impl/CachingSourceTestCase.java,146,,"        source = (CachingSource) resolver.resolveURI(scheme + "":"" + uri + ""?cocoon:cache-expires=1"");"
47912,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/components/treeprocessor/variables/PreparedVariableResolverTestCase.java,52,,"        request.addParameter(""foo"", ""bar"");"
47913,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/components/treeprocessor/variables/PreparedVariableResolverTestCase.java,53,,"        request.addParameter(""bar"", ""123"");"
47914,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/components/treeprocessor/variables/PreparedVariableResolverTestCase.java,56,,"        context.pushMap(""sitemap"", sitemapElements);"
47915,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/components/treeprocessor/variables/PreparedVariableResolverTestCase.java,79,,"        context.pushMap(""label"", sitemapElements);"
47916,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/components/treeprocessor/variables/PreparedVariableResolverTestCase.java,88,,"        sitemapElements.put(""1"", ""abc"");"
47917,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/matching/CookieMatcherTestCase.java,57,,"        Cookie mockCookie = new Cookie(""cookieName"", ""cookieValue"");"
47918,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/matching/WildcardURIMatcherTestCase.java,32,,"        Map result = match(""wildcard-uri"", ""**"", parameters);"
47919,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/matching/WildcardURIMatcherTestCase.java,33,,"        assertNotNull(""Test if resource exists"", result);"
47920,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/selection/HostSelectorTestCase.java,56,,"        getRequest().setHeader(""Host"", host );"
47921,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/selection/ParameterSelectorTestCase.java,57,,"        result = this.select( ""parameter"", parameterName, parameters );"
47922,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/selection/RegexpHeaderSelectorTestCase.java,66,,"        assertTrue( ""Test is "" + REGEXP_HEADER_SELECTOR + "" selects successfully"", result );"
47923,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/selection/RegexpHeaderSelectorTestCase.java,70,,"        assertTrue( ""Test is "" + REGEXP_HEADER_SELECTOR + "" does not select successfully"", !result );"
47924,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/selection/RegexpRequestParameterSelectorTestCase.java,56,,"        result = this.select( ""regexp-request-parameter"", ""empty"", parameters );"
47925,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/selection/RegexpRequestParameterSelectorTestCase.java,62,,"        assertTrue( ""Test is regexp-request-parameter does not select successfully"", !result );"
47926,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/selection/RequestAttributeSelectorTestCase.java,57,,"        result = this.select( ""request-attribute"", attributeValue, parameters );"
47927,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/selection/RequestParameterSelectorTestCase.java,57,,"        result = this.select( ""request-parameter"", parameterValue, parameters );"
47928,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/selection/ResourceExistsSelectorTestCase.java,57,,"        result = this.select( ""resource-exists"", expression, parameters );"
47929,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/selection/SessionAttributeSelectorTestCase.java,61,,"        result = this.select( ""session-attribute"", attributeValue, parameters );"
47930,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/selection/SimpleSelectorTestCase.java,57,,"        result = this.select( ""simple"", value, parameters );"
47931,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/transformation/CIncludeTransformerTestCase.java,36,,"                             ""cinclude""};"
47932,./TargetProjects/cocoon/core/cocoon-core/src/test/java/org/apache/cocoon/transformation/FilterTransformerTestCase.java,36,,"                             ""filter""};"
47933,./TargetProjects/cocoon/core/cocoon-expression-language/cocoon-expression-language-impl/src/test/java/org/apache/cocoon/el/impl/DefaultExpressionFactoryTestCase.java,77,,"        assertNotNull(""Test expression compilation"", expression);"
47934,./TargetProjects/cocoon/core/cocoon-expression-language/cocoon-expression-language-impl/src/test/java/org/apache/cocoon/el/impl/objectmodel/ObjectModelImplTestCase.java,37,,"        objectModel.put(""foo1"", ""bar1"");"
47935,./TargetProjects/cocoon/core/cocoon-expression-language/cocoon-expression-language-impl/src/test/java/org/apache/cocoon/el/impl/objectmodel/ObjectModelImplTestCase.java,38,,"        assertEquals(""bar2"", objectModel.put(""foo2"", ""bar2"")); "
47936,./TargetProjects/cocoon/core/cocoon-expression-language/cocoon-expression-language-impl/src/test/java/org/apache/cocoon/el/impl/objectmodel/ObjectModelImplTestCase.java,38,,"        assertEquals(""bar2"", objectModel.put(""foo2"", ""bar2"")); "
47937,./TargetProjects/cocoon/core/cocoon-expression-language/cocoon-expression-language-impl/src/test/java/org/apache/cocoon/el/impl/objectmodel/ObjectModelImplTestCase.java,44,,"        objectModel.put(""foo"", ""bar1"");"
47938,./TargetProjects/cocoon/core/cocoon-expression-language/cocoon-expression-language-impl/src/test/java/org/apache/cocoon/el/impl/objectmodel/ObjectModelImplTestCase.java,79,,"        objectModel.put(""abc"", ""xyz"");"
47939,./TargetProjects/cocoon/core/cocoon-expression-language/cocoon-expression-language-impl/src/test/java/org/apache/cocoon/el/impl/objectmodel/ObjectModelImplTestCase.java,79,,"        objectModel.put(""abc"", ""xyz"");"
47940,./TargetProjects/cocoon/core/cocoon-expression-language/cocoon-expression-language-impl/src/test/java/org/apache/cocoon/el/impl/objectmodel/ObjectModelImplTestCase.java,94,,"        objectModel.put(""foo"", ""bar"");"
47941,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/components/source/impl/TraversableContextSource.java,131,,"                uri = ""context:/"" + uri;"
47942,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/components/source/impl/TraversableContextSource.java,136,,"                    throw new SourceException(""Unable to get source for: "" + uri);"
47943,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/generation/CalendarGenerator.java,221,,"        attributes.addAttribute("""", YEAR_ATTR_NAME, YEAR_ATTR_NAME, ""CDATA"", String.valueOf(year));"
47944,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/generation/DirectoryGenerator.java,435,,"                                ""CDATA"", path.getName());"
47945,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/generation/LinkStatusGenerator.java,540,,"                HREF_ATTR_NAME, ""CDATA"", url.toString());"
47946,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/generation/MP3DirectoryGenerator.java,107,,"            attributes.addAttribute("""", MP3_TITLE_ATTR_NAME, MP3_TITLE_ATTR_NAME, ""CDATA"", s);"
47947,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/generation/MP3DirectoryGenerator.java,244,,"        {""free format"", ""32"", ""48"", ""56"", ""64"", ""80"", ""96"", ""112"", ""128"", ""144"", ""160"", ""176"", ""192"", ""224"", ""256"", ""forbidden""},"
47948,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/generation/MP3DirectoryGenerator.java,244,,"        {""free format"", ""32"", ""48"", ""56"", ""64"", ""80"", ""96"", ""112"", ""128"", ""144"", ""160"", ""176"", ""192"", ""224"", ""256"", ""forbidden""},"
47949,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/generation/MP3DirectoryGenerator.java,244,,"        {""free format"", ""32"", ""48"", ""56"", ""64"", ""80"", ""96"", ""112"", ""128"", ""144"", ""160"", ""176"", ""192"", ""224"", ""256"", ""forbidden""},"
47950,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/generation/MP3DirectoryGenerator.java,244,,"        {""free format"", ""32"", ""48"", ""56"", ""64"", ""80"", ""96"", ""112"", ""128"", ""144"", ""160"", ""176"", ""192"", ""224"", ""256"", ""forbidden""},"
47951,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/generation/MP3DirectoryGenerator.java,244,,"        {""free format"", ""32"", ""48"", ""56"", ""64"", ""80"", ""96"", ""112"", ""128"", ""144"", ""160"", ""176"", ""192"", ""224"", ""256"", ""forbidden""},"
47952,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/generation/MP3DirectoryGenerator.java,244,,"        {""free format"", ""32"", ""48"", ""56"", ""64"", ""80"", ""96"", ""112"", ""128"", ""144"", ""160"", ""176"", ""192"", ""224"", ""256"", ""forbidden""},"
47953,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/generation/MP3DirectoryGenerator.java,244,,"        {""free format"", ""32"", ""48"", ""56"", ""64"", ""80"", ""96"", ""112"", ""128"", ""144"", ""160"", ""176"", ""192"", ""224"", ""256"", ""forbidden""},"
47954,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/generation/MP3DirectoryGenerator.java,244,,"        {""free format"", ""32"", ""48"", ""56"", ""64"", ""80"", ""96"", ""112"", ""128"", ""144"", ""160"", ""176"", ""192"", ""224"", ""256"", ""forbidden""},"
47955,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/generation/RequestGenerator.java,128,,"                attribute(attr, ""name"", header);"
47956,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/generation/RequestGenerator.java,141,,"            start(""parameter"", attr);"
47957,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/generation/RequestGenerator.java,145,,"                    start(""value"", attr);"
47958,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/generation/TraversableGenerator.java,533,,"                                ""CDATA"", source.getName());"
47959,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/serialization/TextSerializer.java,68,,"        this.format.put(OutputKeys.METHOD, ""text"");"
47960,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/transformation/LogTransformer.java,244,,"        this.log (""skippedEntity"", ""name=""+name);"
47961,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/transformation/SourceWritingTransformer.java,339,,"                && attr.getValue(CREATE_ATTRIBUTE).equals(""false"")) {"
47962,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/transformation/SourceWritingTransformer.java,342,,"                this.stack.push(""true""); // default value"
47963,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/transformation/SourceWritingTransformer.java,351,,"            this.stack.push(""END"");"
47964,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/transformation/SourceWritingTransformer.java,527,,"                getLogger().debug(""FAIL exception: "" + se, se);"
47965,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/transformation/pagination/Pagesheet.java,247,,"                    if (a.getValue(""type"").equals(""element"")) {"
47966,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/transformation/pagination/Paginator.java,55,,"    public static final String PAGINATE_PREFIX = ""page"";"
47967,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/transformation/pagination/Paginator.java,143,,"            this.item = par.getParameterAsInteger(""item"", 0);"
47968,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/transformation/pagination/Paginator.java,254,,"                                  PAGINATE_PREFIX_TOKEN+""item"", ""CDATA"","
47969,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/transformation/pagination/Paginator.java,305,,"                    atts.addAttribute("""", ""current"", ""current"", ""CDATA"","
47970,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/transformation/pagination/Paginator.java,307,,"                    atts.addAttribute("""", ""total"", ""total"", ""CDATA"","
47971,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/transformation/pagination/Paginator.java,309,,"                    atts.addAttribute("""", ""current-uri"", ""current-uri"","
47972,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/transformation/pagination/Paginator.java,311,,"                    atts.addAttribute("""", ""clean-uri"", ""clean-uri"","
47973,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/transformation/pagination/Paginator.java,320,,"                        atts.addAttribute("""", ""type"", ""type"", ""CDATA"","
47974,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/transformation/pagination/Paginator.java,322,,"                        atts.addAttribute("""", ""uri"", ""uri"", ""CDATA"","
47975,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/transformation/pagination/Paginator.java,325,,"                        super.startElement(PAGINATE_URI, ""link"","
47976,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/transformation/pagination/Paginator.java,382,,"                atts.addAttribute("""", ""range"", ""range"", ""CDATA"","
47977,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-components/src/main/java/org/apache/cocoon/transformation/pagination/Paginator.java,391,,"                                            ""range-link"","
47978,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-impl/src/main/java/org/apache/cocoon/components/pipeline/AbstractProcessingPipeline.java,158,,"        final String expiresValue = params.getParameter(""expires"", null);"
47979,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-impl/src/main/java/org/apache/cocoon/components/pipeline/AbstractProcessingPipeline.java,220,,"            throw ProcessingException.throwLocated(""Lookup of generator '"" + role + ""' failed"", ce, getLocation(param));"
47980,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-impl/src/main/java/org/apache/cocoon/components/pipeline/impl/AbstractCachingProcessingPipeline.java,564,,"                            ""' using key: "" + this.fromCacheKey);"
47981,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-impl/src/main/java/org/apache/cocoon/components/sax/AbstractXMLByteStreamInterpreter.java,315,,"        else throw new SAXException(""Unrecognized file format (."" + valid + "","" + ch + "")"");"
47982,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-impl/src/main/java/org/apache/cocoon/components/source/util/SourceUtil.java,536,,"	                                           ""' is not a correct URI"");"
47983,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-impl/src/main/java/org/apache/cocoon/serialization/AbstractTextSerializer.java,430,,"            handler.startElement(uri, ""element"", ""element"", XMLUtils.EMPTY_ATTRIBUTES);"
47984,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-impl/src/main/java/org/apache/cocoon/transformation/AbstractSAXTransformer.java,816,,"        builder.startElement("""", ""cocoon"", ""cocoon"", EMPTY_ATTRIBUTES);"
47985,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-impl/src/main/java/org/apache/cocoon/xml/ImmutableAttributesImpl.java,37,,"        throw new UnsupportedOperationException(""immutable attributes"");"
47986,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-impl/src/main/java/org/apache/cocoon/xml/dom/DOMStreamer.java,289,,"                        if (attrName.equals(""xmlns"") || attrName.startsWith(""xmlns:"")) {"
47987,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-impl/src/main/java/org/apache/cocoon/xml/dom/DOMUtil.java,275,,"            builder.startElement("""", ""root"", ""root"", XMLUtils.EMPTY_ATTRIBUTES);"
47988,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-impl/src/main/java/org/apache/cocoon/xml/dom/DomHelper.java,191,,"                    ""\"" at "" + DomHelper.getLocation(element));"
47989,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-impl/src/main/java/org/apache/cocoon/xml/xlink/ExtendedXLinkPipe.java,64,,"                        ""href"","
47990,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-impl/src/main/java/org/apache/cocoon/xml/xlink/ExtendedXLinkPipe.java,70,,"                        ""src"" }));"
47991,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-impl/src/test/java/org/apache/cocoon/caching/CachingOutputStreamTestCase.java,41,,"        assertEquals(""Length of cached content is wrong:"", content.length, cachedContent.length);"
47992,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-impl/src/test/java/org/apache/cocoon/caching/CachingOutputStreamTestCase.java,42,,"        assertTrue(""Cached content differs"", Arrays.equals(content, cachedContent));"
47993,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-impl/src/test/java/org/apache/cocoon/xml/AbstractXMLTestCase.java,54,,"        consumer.startElement("""", ""root"", ""root"", atts);"
47994,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-impl/src/test/java/org/apache/cocoon/xml/dom/DOMBuilderStreamerTestCase.java,48,,"        builder.startElement("""", ""root"", ""root"", atts);"
47995,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-impl/src/test/java/org/apache/cocoon/xml/dom/DOMBuilderStreamerTestCase.java,62,,"        builder.startElement("""", ""node"", ""node"", atts);"
47996,./TargetProjects/cocoon/core/cocoon-pipeline/cocoon-pipeline-impl/src/test/java/org/apache/cocoon/xml/dom/DOMBuilderTestCase.java,55,,"        builder.startElement("""", ""test"", ""test"", attrs);"
47997,./TargetProjects/cocoon/core/cocoon-servlet-service/cocoon-servlet-service-components/src/main/java/org/apache/cocoon/servletservice/components/ServletSource.java,175,,"                logger.debug(""Exception occured while making servlet request"", e);"
47998,./TargetProjects/cocoon/core/cocoon-sitemap/cocoon-sitemap-components/src/main/java/org/apache/cocoon/acting/InputModuleAction.java,90,,"                ""single-value"","
47999,./TargetProjects/cocoon/core/cocoon-sitemap/cocoon-sitemap-components/src/main/java/org/apache/cocoon/components/modules/input/ChainMetaModule.java,164,,"                    if (debug) getLogger().debug(""read from ""+this.inputs[i].name+"" attribute ""+attr+"" as ""+value);"
