74000,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/filter/GenericFilterTest.java,59,,"                new Object[]{""getPerson"", new String[]{Person.class.getCanonicalName()}, new Object[]{person}});"
74001,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/filter/GenericFilterTest.java,61,,"        URL url = URL.valueOf(""test://test:11/org.apache.dubbo.rpc.support.DemoService?"" +"
74002,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/filter/GenericFilterTest.java,62,,"                ""accesslog=true&group=dubbo&version=1.1"");"
74003,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/filter/GenericFilterTest.java,64,,"        when(invoker.invoke(any(Invocation.class))).thenReturn(AsyncRpcResult.newDefaultAsyncResult(new Person(""person"", 10), invocation));"
74004,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/filter/GenericImplFilterTest.java,52,,"                ""org.apache.dubbo.rpc.support.DemoService:dubbo"", new Class[]{Person.class}, new Object[]{new Person(""dubbo"", 10)});"
74005,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/filter/TokenFilterTest.java,48,,"        when(invoker.invoke(any(Invocation.class))).thenReturn(new AppResponse(""result""));"
74006,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/support/MockInvokerTest.java,44,,"        Assertions.assertEquals(""foo"", MockInvoker.parseMockValue(""foo""));"
74007,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/support/MockInvokerTest.java,58,,"        URL url = URL.valueOf(""remote://1.2.3.4/"" + String.class.getName());"
74008,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/support/MockInvokerTest.java,115,,"                .getMockObject(""default"", String.class));"
74009,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/support/RpcUtilsTest.java,57,,"        Invocation inv = new RpcInvocation(""test"", ""DemoService"", """", new Class[] {}, new String[] {}, attachments);"
74010,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/support/RpcUtilsTest.java,57,,"        Invocation inv = new RpcInvocation(""test"", ""DemoService"", """", new Class[] {}, new String[] {}, attachments);"
74011,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/support/RpcUtilsTest.java,121,,"                ""test://127.0.0.1:1/org.apache.dubbo.rpc.support.DemoService?interface=org.apache.dubbo.rpc.support.DemoService""));"
74012,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/support/RpcUtilsTest.java,256,,"        RpcInvocation inv5 = new RpcInvocation(""$invoke"", serviceName, """","
74013,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-dubbo/src/test/java/org/apache/dubbo/rpc/protocol/dubbo/ArgumentCallbackTest.java,119,,"                System.out.println(""Recived callback: "" + msg);"
74014,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-dubbo/src/test/java/org/apache/dubbo/rpc/protocol/dubbo/ArgumentCallbackTest.java,123,,"        }, ""other custom args"", 10, 100);"
74015,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-dubbo/src/test/java/org/apache/dubbo/rpc/protocol/dubbo/DubboInvokerAvailableTest.java,66,,"        URL url = URL.valueOf(""dubbo://127.0.0.1:"" + port + ""/org.apache.dubbo.rpc.protocol.dubbo.IDemoService"");"
74016,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-dubbo/src/test/java/org/apache/dubbo/rpc/protocol/dubbo/DubboLazyConnectTest.java,55,,"            URL url = URL.valueOf(""dubbo://127.0.0.1:"" + port + ""/org.apache.dubbo.rpc.protocol.dubbo.IDemoService"");"
74017,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-dubbo/src/test/java/org/apache/dubbo/rpc/protocol/dubbo/DubboProtocolTest.java,79,,"        protocol.export(proxy.getInvoker(service, DemoService.class, URL.valueOf(""dubbo://127.0.0.1:"" + port + ""/"" + DemoService.class.getName() + ""?codec=exchange"")));"
74018,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-dubbo/src/test/java/org/apache/dubbo/rpc/protocol/dubbo/DubboProtocolTest.java,79,,"        protocol.export(proxy.getInvoker(service, DemoService.class, URL.valueOf(""dubbo://127.0.0.1:"" + port + ""/"" + DemoService.class.getName() + ""?codec=exchange"")));"
74019,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-dubbo/src/test/java/org/apache/dubbo/rpc/protocol/dubbo/DubboProtocolTest.java,80,,"        service = proxy.getProxy(protocol.refer(DemoService.class, URL.valueOf(""dubbo://127.0.0.1:"" + port + ""/"" + DemoService.class.getName() + ""?codec=exchange"").addParameter(""timeout"","
74020,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-dubbo/src/test/java/org/apache/dubbo/rpc/protocol/dubbo/ReferenceCountExchangeClientTest.java,143,,"        Assertions.assertEquals(""hello"", helloService.hello());"
74021,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-dubbo/src/test/java/org/apache/dubbo/rpc/protocol/dubbo/decode/DubboTelnetDecodeTest.java,92,,"            Codec2 codec = ExtensionLoader.getExtensionLoader(Codec2.class).getExtension(""dubbo"");"
74022,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-dubbo/src/test/java/org/apache/dubbo/rpc/protocol/dubbo/decode/DubboTelnetDecodeTest.java,93,,"            URL url = new ServiceConfigURL(""dubbo"", ""localhost"", 22226);"
74023,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-dubbo/src/test/java/org/apache/dubbo/rpc/protocol/dubbo/decode/DubboTelnetDecodeTest.java,111,,"                    .addLast(""decoder"", adapter.getDecoder())"
74024,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-dubbo/src/test/java/org/apache/dubbo/rpc/protocol/dubbo/decode/DubboTelnetDecodeTest.java,112,,"                    .addLast(""handler"", mockHandler);"
74025,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-dubbo/src/test/java/org/apache/dubbo/rpc/protocol/dubbo/support/EnumBak.java,44,,"        URL serviceurl = URL.valueOf(""dubbo://127.0.0.1:"" + port + ""/test?proxy=jdk"""
74026,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-dubbo/src/test/java/org/apache/dubbo/rpc/protocol/dubbo/support/EnumBak.java,92,,"        URL serviceurl = URL.valueOf(""dubbo://127.0.0.1:"" + port + ""/test?timeout="" + Integer.MAX_VALUE"
74027,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-grpc/src/test/java/org/apache/dubbo/rpc/protocol/grpc/support/DubboGreeterGrpc.java,98,,"                ""No need to override this method, extend XxxImplBase and override all methods it allows."");"
74028,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-injvm/src/test/java/org/apache/dubbo/rpc/protocol/injvm/InjvmProtocolTest.java,73,,"        Invoker<?> invoker = proxy.getInvoker(service, DemoService.class, URL.valueOf(""injvm://127.0.0.1/TestService"").addParameter(INTERFACE_KEY, DemoService.class.getName()));"
74029,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-injvm/src/test/java/org/apache/dubbo/rpc/protocol/injvm/InjvmProtocolTest.java,112,,"        url = URL.valueOf(""fake://127.0.0.1/TestService"").addParameter(SCOPE_KEY, SCOPE_LOCAL);"
74030,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-rest/src/test/java/org/apache/dubbo/rpc/protocol/rest/RestProtocolTest.java,52,,"    private final URL exportUrl = URL.valueOf(""rest://127.0.0.1:"" + availablePort + ""/rest?interface=org.apache.dubbo.rpc.protocol.rest.DemoService"");"
74031,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-rest/src/test/java/org/apache/dubbo/rpc/protocol/rest/RestProtocolTest.java,132,,"        URL nettyUrl = exportUrl.addParameter(SERVER_KEY, ""netty"");"
74032,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-triple/src/test/java/org/apache/dubbo/rpc/protocol/tri/TriplePathResolverTest.java,66,,"        PATH_RESOLVER.add(""/abc"", INVOKER);"
74033,./TargetProjects/dubbo/dubbo-spring-boot/dubbo-spring-boot-autoconfigure/src/test/java/org/apache/dubbo/spring/boot/env/DubboDefaultPropertiesEnvironmentPostProcessorTest.java,53,,"        PropertySource defaultPropertySource = propertySources.get(""defaultProperties"");"
74034,./TargetProjects/dubbo/dubbo-spring-boot/dubbo-spring-boot-autoconfigure/src/test/java/org/apache/dubbo/spring/boot/env/DubboDefaultPropertiesEnvironmentPostProcessorTest.java,59,,"        environment.setProperty(""spring.application.name"", ""demo-dubbo-application"");"
74035,./TargetProjects/dubbo/dubbo-spring-boot/dubbo-spring-boot-autoconfigure/src/test/java/org/apache/dubbo/spring/boot/env/DubboDefaultPropertiesEnvironmentPostProcessorTest.java,62,,"        Object dubboApplicationName = defaultPropertySource.getProperty(""dubbo.application.name"");"
74036,./TargetProjects/dubbo/dubbo-spring-boot/dubbo-spring-boot-compatible/autoconfigure/src/test/java/org/apache/dubbo/spring/boot/env/DubboDefaultPropertiesEnvironmentPostProcessorTest.java,53,,"        PropertySource defaultPropertySource = propertySources.get(""defaultProperties"");"
74037,./TargetProjects/dubbo/dubbo-spring-boot/dubbo-spring-boot-compatible/autoconfigure/src/test/java/org/apache/dubbo/spring/boot/env/DubboDefaultPropertiesEnvironmentPostProcessorTest.java,59,,"        environment.setProperty(""spring.application.name"", ""demo-dubbo-application"");"
74038,./TargetProjects/dubbo/dubbo-spring-boot/dubbo-spring-boot-compatible/autoconfigure/src/test/java/org/apache/dubbo/spring/boot/env/DubboDefaultPropertiesEnvironmentPostProcessorTest.java,62,,"        Object dubboApplicationName = defaultPropertySource.getProperty(""dubbo.application.name"");"
74039,./TargetProjects/dubbo-admin/dubbo-admin-server/src/main/java/org/apache/dubbo/admin/common/util/RouteUtils.java,112,,"                    throw new ParseException(""Illegal route rule \"""""
74040,./TargetProjects/dubbo-admin/dubbo-admin-server/src/main/java/org/apache/dubbo/admin/common/util/RouteUtils.java,113,,"                            + rule + ""\"", The error char '"" + separator"
74041,./TargetProjects/dubbo-admin/dubbo-admin-server/src/main/java/org/apache/dubbo/admin/common/util/RouteUtils.java,114,,"                            + ""' at index "" + matcher.start() + "" before \"""""
74042,./TargetProjects/dubbo-admin/dubbo-admin-server/src/main/java/org/apache/dubbo/admin/common/util/RouteUtils.java,114,,"                            + ""' at index "" + matcher.start() + "" before \"""""
74043,./TargetProjects/dubbo-admin/dubbo-admin-server/src/main/java/org/apache/dubbo/admin/common/util/RouteUtils.java,115,,"                            + content + ""\""."", matcher.start());"
74044,./TargetProjects/dubbo-admin/dubbo-admin-server/src/main/java/org/apache/dubbo/admin/common/util/RouteUtils.java,259,,"            sb.append("" =>"");"
74045,./TargetProjects/dubbo-admin/dubbo-admin-server/src/main/java/org/apache/dubbo/admin/controller/TagRoutesController.java,64,,"        if (providerService.findVersionInApplication(app).equals(""2.6"")) {"
74046,./TargetProjects/dubbo-admin/dubbo-admin-server/src/main/java/org/apache/dubbo/admin/registry/metadata/impl/RedisMetaDataCollector.java,97,,"                logger.error(""Failed to get "" + identifier + "" from redis cluster, cause: "" + e.getMessage(), e);"
74047,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/common/util/CoderUtilTest.java,32,,"        String input = ""dubbo"";"
74048,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/config/ConfigCenterTest.java,72,,"        ReflectionTestUtils.setField(configCenter, ""username"", ""username"");"
74049,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/config/ConfigCenterTest.java,73,,"        ReflectionTestUtils.setField(configCenter, ""password"", ""password"");"
74050,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/config/ConfigCenterTest.java,79,,"        zkClient.createContainers(""/dubbo/config/dubbo/dubbo.properties"");"
74051,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/config/ConfigCenterTest.java,82,,"        Object registryUrl = ReflectionTestUtils.getField(configCenter, ""registryUrl"");"
74052,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/config/ConfigCenterTest.java,89,,"        Object metadataUrl = ReflectionTestUtils.getField(configCenter, ""metadataUrl"");"
74053,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/controller/AccessesControllerTest.java,70,,"        response = restTemplate.getForEntity(url(""/api/{env}/rules/access""), String.class, env);"
74054,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/controller/AccessesControllerTest.java,97,,"        ResponseEntity<String> response = restTemplate.getForEntity(url(""/api/{env}/rules/access/{id}""), String.class, env, id);"
74055,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/controller/ConditionRoutesControllerTest.java,71,,"        url(""/api/{env}/rules/route/condition""), dto, String.class, env"
74056,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/controller/ConditionRoutesControllerTest.java,114,,"    String service = ""org.apache.dubbo.demo.DemoService"";"
74057,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/controller/ConditionRoutesControllerTest.java,115,,"    String content = ""conditions:\n"""
74058,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/controller/ConditionRoutesControllerTest.java,116,,"        + ""- => host != 172.22.3.111\n"""
74059,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/controller/ConditionRoutesControllerTest.java,117,,"        + ""- => host != 172.22.3.112\n"""
74060,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/controller/ConditionRoutesControllerTest.java,118,,"        + ""enabled: true\n"""
74061,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/controller/ConditionRoutesControllerTest.java,119,,"        + ""force: true\n"""
74062,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/controller/ConditionRoutesControllerTest.java,120,,"        + ""key: "" + service + ""\n"""
74063,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/controller/ConditionRoutesControllerTest.java,121,,"        + ""priority: 0\n"""
74064,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/controller/ConditionRoutesControllerTest.java,122,,"        + ""runtime: false\n"""
74065,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/controller/ConditionRoutesControllerTest.java,123,,"        + ""scope: service"";"
74066,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/controller/ConditionRoutesControllerTest.java,124,,"    String path = ""/dubbo/config/dubbo/"" + service + ""::.condition-router"";"
74067,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/controller/ConditionRoutesControllerTest.java,124,,"    String path = ""/dubbo/config/dubbo/"" + service + ""::.condition-router"";"
74068,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/controller/ConditionRoutesControllerTest.java,136,,"        url(""/api/{env}/rules/route/condition/{id}""), HttpMethod.PUT,"
74069,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/controller/ConditionRoutesControllerTest.java,200,,"            url(""/api/{env}/rules/route/condition/{id}"" + ""?scope=service""), HttpMethod.DELETE,"
74070,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/controller/ConditionRoutesControllerTest.java,210,,"    String application = ""test-application"";"
74071,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/controller/ConditionRoutesControllerTest.java,220,,"    String path = ""/dubbo/config/dubbo/"" + application + "".condition-router"";"
74072,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/controller/ConditionRoutesControllerTest.java,227,,"            url(""/api/{env}/rules/route/condition/{service}"" + ""?scope=application""), HttpMethod.DELETE,"
74073,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/controller/LoadBalanceControllerTest.java,74,,"        response = restTemplate.postForEntity(url(""/api/{env}/rules/balancing""), balancingDTO, String.class, env);"
74074,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/controller/LoadBalanceControllerTest.java,75,,"        assertFalse(""should return a fail response, when service and application are all blank"", (Boolean) objectMapper.readValue(response.getBody(), Map.class).get(""success""));"
74075,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/controller/LoadBalanceControllerTest.java,77,,"        balancingDTO.setApplication(""test application"");"
74076,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/controller/LoadBalanceControllerTest.java,96,,"        response = restTemplate.exchange(url(""/api/{env}/rules/balancing/{id}""), HttpMethod.PUT, new HttpEntity<>(balancingDTO, null), String.class, env, id);"
74077,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/controller/ManagementControllerTest.java,60,,"    configDTO.setConfig(""key1=val1\nkey2=val2"");"
74078,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/controller/ManagementControllerTest.java,98,,"        url(""/api/{env}/manage/config/{key}""), HttpMethod.PUT,"
74079,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/controller/ServiceControllerTest.java,74,,"        }, ""whatever"""
74080,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/registry/config/impl/ZookeeperConfigurationTest.java,58,,"        configuration.setConfig(""test_key"", ""test_value"");"
74081,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/registry/config/impl/ZookeeperConfigurationTest.java,58,,"        configuration.setConfig(""test_key"", ""test_value"");"
74082,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/registry/config/impl/ZookeeperConfigurationTest.java,60,,"        assertEquals(null, configuration.getConfig(""not_exist_key""));"
74083,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/registry/config/impl/ZookeeperConfigurationTest.java,63,,"        configuration.setConfig(""test_group"", ""test_key"", ""test_group_value"");"
74084,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/registry/config/impl/ZookeeperConfigurationTest.java,83,,"        configuration.setConfig(""test_delete"", ""test_value"");"
74085,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/service/RegistryServerSyncTest.java,76,,"        when(consumerUrl.getServiceInterface()).thenReturn(""org.apache.dubbo.consumer"");"
74086,./TargetProjects/dubbo-admin/dubbo-admin-server/src/test/java/org/apache/dubbo/admin/service/RegistryServerSyncTest.java,80,,"        when(providerUrl.getServiceInterface()).thenReturn(""org.apache.dubbo.provider"");"
74087,./TargetProjects/dubbo-hessian-lite/src/main/java/com/alibaba/com/caucho/hessian/io/Hessian2Input.java,1558,,"                    throw expect(""string"", tag);"
74088,./TargetProjects/dubbo-hessian-lite/src/main/java/com/alibaba/com/caucho/hessian/io/Hessian2Input.java,2003,,"                throw expect(""binary"", tag);"
74089,./TargetProjects/dubbo-hessian-lite/src/main/java/com/alibaba/com/caucho/hessian/io/Hessian2Input.java,3556,,"            return error(""expected "" + expect + "" at end of file"");"
74090,./TargetProjects/dubbo-hessian-lite/src/main/java/com/alibaba/com/caucho/hessian/io/HessianDebugState.java,568,,"                    return new LongState(this, ""long"", ch - 0xf8, 7);"
74091,./TargetProjects/dubbo-hessian-lite/src/main/java/com/alibaba/com/caucho/hessian/io/HessianDebugState.java,1347,,"                printObject(""map "" + type + "" (#"" + _refId + "")"");"
74092,./TargetProjects/dubbo-hessian-lite/src/test/java/com/alibaba/com/caucho/hessian/io/Hessian1StringShortTest.java,43,,"        stringShortMap.put(""first"", (short)0);"
74093,./TargetProjects/dubbo-hessian-lite/src/test/java/com/alibaba/com/caucho/hessian/io/Hessian1StringShortTest.java,44,,"        stringShortMap.put(""last"", (short)60);"
74094,./TargetProjects/dubbo-hessian-lite/src/test/java/com/alibaba/com/caucho/hessian/io/Hessian2StringShortTest.java,41,,"        stringShortMap.put(""first"", (short) 0);"
74095,./TargetProjects/dubbo-hessian-lite/src/test/java/com/alibaba/com/caucho/hessian/io/Hessian2StringShortTest.java,42,,"        stringShortMap.put(""last"", (short) 60);"
74096,./TargetProjects/dubbo-hessian-lite/src/test/java/com/alibaba/com/caucho/hessian/io/HessianJavaSerializeTest.java,40,,"        baseUser.setUserName(""tom"");"
74097,./TargetProjects/dubbo-hessian-lite/src/test/java/com/alibaba/com/caucho/hessian/io/java8/Java8TimeSerializerTest.java,59,,"            Method m = c.getDeclaredMethod(""now"");"
74098,./TargetProjects/dubbo-samples/dubbo-samples-annotation/src/main/java/org/apache/dubbo/samples/annotation/AnnotationConsumerBootstrap.java,34,,"        System.out.println(""hello : "" + annotationAction.doSayHello(""world""));"
74099,./TargetProjects/dubbo-samples/dubbo-samples-annotation/src/main/java/org/apache/dubbo/samples/annotation/action/AnnotationAction.java,55,,"            return ""Throw Exception"";"
74100,./TargetProjects/dubbo-samples/dubbo-samples-annotation/src/test/java/org/apache/dubbo/samples/annotation/AnnotationServicesIT.java,38,,"        Assert.assertEquals(""Annotation, hello dubbo"", annotationAction.doSayHello(""dubbo""));"
74101,./TargetProjects/dubbo-samples/dubbo-samples-cloud-native/dubbo-call-sc/dubbo-sc-provider/src/main/java/org/apache/dubbo/samples/microservices/sc/controller/PropertyController.java,52,,"        return ""<h3>applicationProperty:</h3> "" + applicationProperty + ""</br>"""
74102,./TargetProjects/dubbo-samples/dubbo-samples-cloud-native/dubbo-call-scdubbo/dubbo-scdubbo-provider/src/main/java/org/apache/dubbo/samples/microservices/sc/controller/PropertyController.java,36,,"        return ""<h3>applicationProperty:</h3> "" + applicationProperty + ""</br>"""
74103,./TargetProjects/dubbo-samples/dubbo-samples-cloud-native/dubbo-servicediscovery-migration/dubbo-servicediscovery-migration-consumer/src/test/java/org/apache/dubbo/demo/consumer/DemoServiceIT.java,71,,"        Assert.assertTrue(demoServiceFromNormal.sayHello(""client"").contains(""registry-type: normal""));"
74104,./TargetProjects/dubbo-samples/dubbo-samples-cloud-native/dubbo-servicediscovery-migration/dubbo-servicediscovery-migration-consumer/src/test/java/org/apache/dubbo/demo/consumer/DemoServiceIT.java,86,,"        Assert.assertTrue(demoServiceFromService.sayHello(""client"").contains(""registry-type: service""));"
74105,./TargetProjects/dubbo-samples/dubbo-samples-cloud-native/sc-call-dubbo/sc-dubbo-consumer/src/main/java/org/apache/dubbo/samples/microservices/sc/controller/PropertyController.java,52,,"        return ""<h3>applicationProperty:</h3> "" + applicationProperty + ""</br>"""
74106,./TargetProjects/dubbo-samples/dubbo-samples-generic/dubbo-samples-generic-call/dubbo-samples-generic-call-consumer/src/main/java/org/apache/dubbo/samples/generic/call/GenericCallConsumer.java,60,,"        Object result = genericService.$invoke(""sayHello"", new String[]{""java.lang.String""}, new Object[]{""world""});"
74107,./TargetProjects/dubbo-samples/dubbo-samples-generic/dubbo-samples-generic-call/dubbo-samples-generic-call-consumer/src/main/java/org/apache/dubbo/samples/generic/call/GenericCallConsumer.java,60,,"        Object result = genericService.$invoke(""sayHello"", new String[]{""java.lang.String""}, new Object[]{""world""});"
74108,./TargetProjects/dubbo-samples/dubbo-samples-generic/dubbo-samples-generic-call/dubbo-samples-generic-call-provider/src/test/java/org/apache/dubbo/samples/generic/call/HelloServiceIT.java,59,,"        Object result = genericService.$invoke(""sayHello"", new String[]{""java.lang.String""}, new Object[]{""world""});"
74109,./TargetProjects/dubbo-samples/dubbo-samples-generic/dubbo-samples-generic-call/dubbo-samples-generic-call-provider/src/test/java/org/apache/dubbo/samples/generic/call/HelloServiceIT.java,59,,"        Object result = genericService.$invoke(""sayHello"", new String[]{""java.lang.String""}, new Object[]{""world""});"
74110,./TargetProjects/dubbo-samples/dubbo-samples-governance/dubbo-samples-applevel-override/src/main/java/org/apache/dubbo/samples/governance/ZKTools.java,53,,"                ""  parameters:\n"" +"
74111,./TargetProjects/dubbo-samples/dubbo-samples-governance/dubbo-samples-applevel-override/src/test/java/org/apache/dubbo/samples/governance/DemoServiceIT.java,51,,"            String result = demoService.sayHello(""world"");"
74112,./TargetProjects/dubbo-samples/dubbo-samples-governance/dubbo-samples-servicelevel-override/src/test/java/org/apache/dubbo/samples/governance/DemoServiceApplicationLevelIT.java,59,,"        demoService.sayHello(""world"", 1500);"
74113,./TargetProjects/dubbo-samples/dubbo-samples-governance/dubbo-samples-servicelevel-override/src/test/java/org/apache/dubbo/samples/governance/DemoServiceInterfaceLevelIT.java,59,,"        demoService.sayHello(""world"", 1200);"
74114,./TargetProjects/dubbo-samples/dubbo-samples-metadata-report/dubbo-samples-metadata-report-configcenter/src/test/java/org/apache/dubbo/samples/metadatareport/configcenter/MetadataIT.java,101,,"        String result = ZKTools.getMetadata(""/dubbo"", AnnotationService.class.getName(), ""1.1.1"", ""d-test"","
74115,./TargetProjects/dubbo-samples/dubbo-samples-metadata-report/dubbo-samples-metadata-report-configcenter/src/test/java/org/apache/dubbo/samples/metadatareport/configcenter/MetadataIT.java,101,,"        String result = ZKTools.getMetadata(""/dubbo"", AnnotationService.class.getName(), ""1.1.1"", ""d-test"","
74116,./TargetProjects/dubbo-samples/dubbo-samples-metadata-report/dubbo-samples-metadata-report-local-annotation/src/test/java/org/apache/dubbo/samples/metadatareport/local/annotation/MetadataIT.java,99,,"        String result = ZkUtil.getMetadata(""/dubbo"", AnnotationService.class.getName(), ""1.1.8"", ""d-test"","
74117,./TargetProjects/dubbo-samples/dubbo-samples-metadata-report/dubbo-samples-metadata-report-local-annotation/src/test/java/org/apache/dubbo/samples/metadatareport/local/annotation/MetadataIT.java,99,,"        String result = ZkUtil.getMetadata(""/dubbo"", AnnotationService.class.getName(), ""1.1.8"", ""d-test"","
74118,./TargetProjects/dubbo-samples/dubbo-samples-resilience4j/dubbo-samples-resilience4j-springboot2/src/main/java/org/apache/dubbo/samples/resilience4jboot2/consumer/action/CircuitBreakerAction.java,45,,"                    doSayCircuitBreaker(""off"", ""circuitBreaker"", 20, ++i);"
74119,./TargetProjects/dubbo-samples/dubbo-samples-resilience4j/dubbo-samples-resilience4j-springboot2/src/main/java/org/apache/dubbo/samples/resilience4jboot2/consumer/action/CircuitBreakerAction.java,45,,"                    doSayCircuitBreaker(""off"", ""circuitBreaker"", 20, ++i);"
74120,./TargetProjects/dubbo-samples/dubbo-samples-resilience4j/dubbo-samples-resilience4j-springboot2/src/main/java/org/apache/dubbo/samples/resilience4jboot2/consumer/action/CircuitBreakerAction.java,47,,"                    doSayCircuitBreaker(""half"", ""circuitBreaker"", 30, ++i);"
74121,./TargetProjects/dubbo-samples/dubbo-samples-resilience4j/dubbo-samples-resilience4j-springboot2/src/main/java/org/apache/dubbo/samples/resilience4jboot2/consumer/action/CircuitBreakerAction.java,98,,"                System.err.println(""== "" + l + "":"" + i + "" "" + t.toString());"
74122,./TargetProjects/dubbo-samples/dubbo-samples-rest/src/main/java/org/apache/dubbo/samples/rest/NonDubboRestConsumer.java,35,,"        registerUser(""http://localhost:"" + port + ""/services/users/register.json"", MediaType.APPLICATION_JSON_TYPE);"
74123,./TargetProjects/dubbo-samples/dubbo-samples-tengine/dubbo-samples-tengine-provider/src/main/java/org/apache/dubbo/samples/tengine/provider/DemoServiceImpl.java,49,,"        ret.put(""body"", ""dubbo success\n"");"
74124,./TargetProjects/dubbo-samples/dubbo-samples-tengine/dubbo-samples-tengine-provider/src/main/java/org/apache/dubbo/samples/tengine/provider/DemoServiceImpl.java,50,,"        ret.put(""status"", ""200"");"
74125,./TargetProjects/dubbo-samples/dubbo-samples-thrift/dubbo-samples-thrift-api/src/main/java/org/apache/dubbo/samples/rpc/nativethrift/api/DemoService.java,79,,"      sendBase(""echoBool"", args);"
74126,./TargetProjects/dubbo-samples/dubbo-samples-thrift/dubbo-samples-thrift-api/src/main/java/org/apache/dubbo/samples/rpc/nativethrift/api/DemoService.java,102,,"      sendBase(""echoByte"", args);"
74127,./TargetProjects/dubbo-samples/dubbo-samples-thrift/dubbo-samples-thrift-api/src/main/java/org/apache/dubbo/samples/rpc/nativethrift/api/DemoService.java,125,,"      sendBase(""echoI16"", args);"
74128,./TargetProjects/dubbo-samples/dubbo-samples-thrift/dubbo-samples-thrift-api/src/main/java/org/apache/dubbo/samples/rpc/nativethrift/api/DemoService.java,148,,"      sendBase(""echoI32"", args);"
74129,./TargetProjects/dubbo-samples/dubbo-samples-thrift/dubbo-samples-thrift-api/src/main/java/org/apache/dubbo/samples/rpc/nativethrift/api/DemoService.java,171,,"      sendBase(""echoI64"", args);"
74130,./TargetProjects/dubbo-samples/dubbo-samples-thrift/dubbo-samples-thrift-api/src/main/java/org/apache/dubbo/samples/rpc/nativethrift/api/DemoService.java,194,,"      sendBase(""echoDouble"", args);"
74131,./TargetProjects/dubbo-samples/dubbo-samples-thrift/dubbo-samples-thrift-api/src/main/java/org/apache/dubbo/samples/rpc/nativethrift/api/DemoService.java,217,,"      sendBase(""echoString"", args);"
74132,./TargetProjects/dubbo-samples/dubbo-samples-thrift/dubbo-samples-thrift-api/src/main/java/org/apache/dubbo/samples/rpc/nativethrift/api/DemoService.java,272,,"          throw new java.lang.IllegalStateException(""Method call not finished!"");"
74133,./TargetProjects/dubbo-samples/dubbo-samples-thrift/dubbo-samples-thrift-api/src/main/java/org/apache/dubbo/samples/rpc/nativethrift/api/DemoService.java,718,,"              _LOGGER.error(""TTransportException writing to internal frame buffer"", e);"
74134,./TargetProjects/dubbo-samples/dubbo-samples-thrift/dubbo-samples-thrift-api/src/main/java/org/apache/dubbo/samples/rpc/nativethrift/api/DemoService.java,721,,"              _LOGGER.error(""Exception writing to internal frame buffer"", e);"
74135,./TargetProjects/dubbo-samples/dubbo-samples-thrift/dubbo-samples-thrift-api/src/main/java/org/apache/dubbo/samples/rpc/nativethrift/api/DemoService.java,730,,"              _LOGGER.error(""TTransportException inside handler"", e);"
74136,./TargetProjects/dubbo-samples/dubbo-samples-thrift/dubbo-samples-thrift-api/src/main/java/org/apache/dubbo/samples/rpc/nativethrift/api/DemoService.java,734,,"              _LOGGER.error(""TApplicationException inside handler"", e);"
74137,./TargetProjects/dubbo-samples/dubbo-samples-thrift/dubbo-samples-thrift-api/src/main/java/org/apache/dubbo/samples/rpc/nativethrift/api/DemoService.java,738,,"              _LOGGER.error(""Exception inside handler"", e);"
74138,./TargetProjects/dubbo-samples/dubbo-samples-thrift/dubbo-samples-thrift-api/src/main/java/org/apache/dubbo/samples/rpc/nativethrift/api/DemoService.java,1137,,"    private static final org.apache.thrift.protocol.TField ARG_FIELD_DESC = new org.apache.thrift.protocol.TField(""arg"", org.apache.thrift.protocol.TType.BOOL, (short)1);"
74139,./TargetProjects/dubbo-samples/dubbo-samples-thrift/dubbo-samples-thrift-api/src/main/java/org/apache/dubbo/samples/rpc/nativethrift/api/DemoService.java,1175,,"        if (fields == null) throw new java.lang.IllegalArgumentException(""Field "" + fieldId + "" doesn't exist!"");"
74140,./TargetProjects/dubbo-samples/dubbo-samples-thrift/dubbo-samples-thrift-api/src/main/java/org/apache/dubbo/samples/rpc/nativethrift/api/DemoService.java,1175,,"        if (fields == null) throw new java.lang.IllegalArgumentException(""Field "" + fieldId + "" doesn't exist!"");"
74141,./TargetProjects/dubbo-samples/dubbo-samples-thrift/dubbo-samples-thrift-api/src/main/java/org/apache/dubbo/samples/rpc/nativethrift/api/DemoService.java,1379,,"      sb.append(""arg:"");"
74142,./TargetProjects/dubbo-samples/dubbo-samples-thrift/dubbo-samples-thrift-api/src/main/java/org/apache/dubbo/samples/rpc/nativethrift/api/DemoService.java,1445,,"          throw new org.apache.thrift.protocol.TProtocolException(""Required field 'arg' was not found in serialized data! Struct: "" + toString());"
74143,./TargetProjects/dubbo-samples/dubbo-samples-thrift/dubbo-samples-thrift-api/src/main/java/org/apache/dubbo/samples/rpc/nativethrift/api/DemoService.java,1493,,"    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField(""success"", org.apache.thrift.protocol.TType.BOOL, (short)0);"
74144,./TargetProjects/dubbo-samples/dubbo-samples-thrift/dubbo-samples-thrift-api/src/main/java/org/apache/dubbo/samples/rpc/nativethrift/api/DemoService.java,1735,,"      sb.append(""success:"");"
74145,./TargetProjects/dubbo-samples/dubbo-samples-transaction/src/test/java/org/apache/dubbo/samples/service/BusinessIT.java,49,,"        int before = storageService.queryCount(""C00321"");"
74146,./TargetProjects/dubbo-samples/test/dubbo-scenario-builder/src/main/java/org/apache/dubbo/scenario/builder/ConfigurationImpl.java,338,,"                        healthcheck.putIfAbsent(""test"", Arrays.asList(""CMD"", ""/usr/local/dubbo/healthcheck.sh""));"
74147,./TargetProjects/dubbo-samples/test/dubbo-scenario-builder/src/test/java/org/apache/dubbo/scenario/builder/VersionMatcherTest.java,41,,"        candidateVersions += ""spring-boot.version:1.5.13.RELEASE,2.1.1.RELEASE;"";"
74148,./TargetProjects/dubbo-samples/test/dubbo-scenario-builder/src/test/java/org/apache/dubbo/scenario/builder/VersionMatcherTest.java,52,,"        String caseVersionRules = ""# SpringBoot app\n"" +"
74149,./TargetProjects/dubbo-samples/test/dubbo-scenario-builder/src/test/java/org/apache/dubbo/scenario/builder/VersionMatcherTest.java,70,,"                ""spring-boot.version= 2.0.8.RELEASE \n\n\n"";"
74150,./TargetProjects/dubbo-samples/test/dubbo-scenario-builder/src/test/java/org/apache/dubbo/scenario/builder/VersionMatcherTest.java,73,,"        candidateVersions += ""spring.version:4.1.13.RELEASE,5.3.2;"";"
74151,./TargetProjects/dubbo-samples/test/dubbo-scenario-builder/src/test/java/org/apache/dubbo/scenario/builder/VersionMatcherTest.java,87,,"        String candidateVersions = ""dubbo.version:2.7.8,2.7.9-SNAPSHOT,3.0.0;"";"
74152,./TargetProjects/dubbo-samples/test/dubbo-scenario-builder/src/test/java/org/apache/dubbo/scenario/builder/VersionMatcherTest.java,94,,"        Assert.assertFalse(versionMatrix.contains(""-Ddubbo.version=2.7.9-SNAPSHOT""));"
74153,./TargetProjects/dubbo-samples/test/dubbo-scenario-builder/src/test/java/org/apache/dubbo/scenario/builder/VersionMatcherTest.java,108,,"        Assert.assertTrue(versionMatrix.contains(""-Ddubbo.version=2.7.8""));"
74154,./TargetProjects/dubbo-samples/test/dubbo-scenario-builder/src/test/java/org/apache/dubbo/scenario/builder/VersionMatcherTest.java,109,,"        Assert.assertTrue(versionMatrix.contains(""-Ddubbo.version=3.0.0""));"
74155,./TargetProjects/dubbo-samples/test/dubbo-scenario-builder/src/test/java/org/apache/dubbo/scenario/builder/VersionMatcherTest.java,149,,"                ""dubbo.version= "" + matchRule + "", 3.* \n"" +"
74156,./TargetProjects/dubbo-samples/test/dubbo-scenario-builder/src/test/java/org/apache/dubbo/scenario/builder/VersionMatcherTest.java,149,,"                ""dubbo.version= "" + matchRule + "", 3.* \n"" +"
74157,./TargetProjects/dubbo-samples/test/dubbo-scenario-builder/src/test/java/org/apache/dubbo/scenario/builder/VersionMatcherTest.java,158,,"            Assert.fail(""Invalid range match rule should not pass through"");"
74158,./TargetProjects/dubbo-spi-extensions/dubbo-api-docs/dubbo-api-docs-examples/examples-api/src/main/java/org/apache/dubbo/apidocs/examples/params/DemoParamBean1.java,30,,"            ""说明测试说明测试说明测试说明测试说明测试说明测试说明测试说明测试说明测试说明测试说明测试说明测试说明测试说明测试说明测"" +"
74159,./TargetProjects/dubbo-spi-extensions/dubbo-api-docs/dubbo-api-docs-examples/examples-provider/src/main/java/org/apache/dubbo/apidocs/examples/api/impl/QuickStartDemoImpl.java,47,,"    @ApiDoc(value = ""quick start demo"", version = ""v0.1"", description = ""this api is a quick start demo"", responseClassDescription=""A quick star response bean"")"
74160,./TargetProjects/dubbo-spring-boot-project/dubbo-spring-boot-autoconfigure/src/test/java/org/apache/dubbo/spring/boot/env/DubboDefaultPropertiesEnvironmentPostProcessorTest.java,53,,"        PropertySource defaultPropertySource = propertySources.get(""defaultProperties"");"
74161,./TargetProjects/dubbo-spring-boot-project/dubbo-spring-boot-autoconfigure/src/test/java/org/apache/dubbo/spring/boot/env/DubboDefaultPropertiesEnvironmentPostProcessorTest.java,59,,"        environment.setProperty(""spring.application.name"", ""demo-dubbo-application"");"
74162,./TargetProjects/dubbo-spring-boot-project/dubbo-spring-boot-autoconfigure/src/test/java/org/apache/dubbo/spring/boot/env/DubboDefaultPropertiesEnvironmentPostProcessorTest.java,62,,"        Object dubboApplicationName = defaultPropertySource.getProperty(""dubbo.application.name"");"
74163,./TargetProjects/dubbo-spring-boot-project/dubbo-spring-boot-compatible/autoconfigure/src/test/java/org/apache/dubbo/spring/boot/env/DubboDefaultPropertiesEnvironmentPostProcessorTest.java,53,,"        PropertySource defaultPropertySource = propertySources.get(""defaultProperties"");"
74164,./TargetProjects/dubbo-spring-boot-project/dubbo-spring-boot-compatible/autoconfigure/src/test/java/org/apache/dubbo/spring/boot/env/DubboDefaultPropertiesEnvironmentPostProcessorTest.java,59,,"        environment.setProperty(""spring.application.name"", ""demo-dubbo-application"");"
74165,./TargetProjects/dubbo-spring-boot-project/dubbo-spring-boot-compatible/autoconfigure/src/test/java/org/apache/dubbo/spring/boot/env/DubboDefaultPropertiesEnvironmentPostProcessorTest.java,62,,"        Object dubboApplicationName = defaultPropertySource.getProperty(""dubbo.application.name"");"
74166,./TargetProjects/dubbo-spring-boot-project/dubbo-spring-boot-compatible/autoconfigure/src/test/java/org/apache/dubbo/spring/boot/util/DubboUtilsTest.java,95,,"        environment.setProperty(DUBBO_CONFIG_PREFIX + MULTIPLE_CONFIG_PROPERTY_NAME, ""true"");"
74167,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/coordination/model/Tuple2StreamMetadataTest.java,30,,"        activeStreamNames.add(""defaultStringStream"");"
74168,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/coordination/model/WorkSlotTest.java,30,,"        workSlot.setBoltId(""setBoltId"");"
74169,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/coordination/model/WorkSlotTest.java,31,,"        workSlot.setTopologyName(""setTopologyName"");"
74170,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/coordination/model/internal/PolicyAssignmentTest.java,26,,"        PolicyAssignment policyAssignment = new PolicyAssignment(""policy"", ""queue"");"
74171,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/coordination/model/internal/PolicyAssignmentTest.java,26,,"        PolicyAssignment policyAssignment = new PolicyAssignment(""policy"", ""queue"");"
74172,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/engine/coordinator/PolicyDefinitionTest.java,31,,"        def.setValue(""test"");"
74173,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/engine/coordinator/PolicyDefinitionTest.java,32,,"        def.setType(""siddhi"");"
74174,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/engine/coordinator/PolicyDefinitionTest.java,33,,"        def.setHandlerClass(""setHandlerClass"");"
74175,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/engine/coordinator/PolicyDefinitionTest.java,35,,"        def.setOutputStreams(Arrays.asList(""outputStream""));"
74176,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/engine/coordinator/PolicyDefinitionTest.java,36,,"        def.setInputStreams(Arrays.asList(""inputStream""));"
74177,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/engine/coordinator/PolicyDefinitionTest.java,72,,"        pd.setDescription(String.format(""Test policy for stream %s"", ""streamName""));"
74178,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/engine/coordinator/StreamColumnTest.java,43,,"        new StreamColumn.Builder().name(""salary"").type(StreamColumn.Type.LONG).defaultValue(""eagle"").required(true).build();"
74179,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/engine/coordinator/StreamColumnTest.java,43,,"        new StreamColumn.Builder().name(""salary"").type(StreamColumn.Type.LONG).defaultValue(""eagle"").required(true).build();"
74180,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/engine/coordinator/StreamColumnTest.java,49,,"        streamColumn.setNodataExpression(""PT1M,dynamic,1,salary"");"
74181,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/engine/coordinator/StreamColumnTest.java,125,,"        StreamColumn streamBoolColumn = new StreamColumn.Builder().name(""isYhd"").type(StreamColumn.Type.BOOL).defaultValue(""eagle"").required(false).build();"
74182,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/engine/coordinator/StreamColumnTest.java,126,,"        streamBoolColumn.setNodataExpression(""PT1M,dynamic,1,isYhd"");"
74183,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/engine/model/StreamEventBuilderTest.java,40,,"        streamColumns.add(new StreamColumn.Builder().name(""name"").type(StreamColumn.Type.STRING).build());"
74184,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/engine/model/StreamEventBuilderTest.java,41,,"        streamColumns.add(new StreamColumn.Builder().name(""host"").type(StreamColumn.Type.STRING).build());"
74185,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/engine/model/StreamEventBuilderTest.java,42,,"        streamColumns.add(new StreamColumn.Builder().name(""flag"").type(StreamColumn.Type.BOOL).build());"
74186,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/engine/model/StreamEventBuilderTest.java,43,,"        streamColumns.add(new StreamColumn.Builder().name(""value"").type(StreamColumn.Type.DOUBLE).build());"
74187,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/engine/model/StreamEventBuilderTest.java,44,,"        streamColumns.add(new StreamColumn.Builder().name(""data"").type(StreamColumn.Type.LONG).build());"
74188,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/engine/model/StreamEventBuilderTest.java,45,,"        streamColumns.add(new StreamColumn.Builder().name(""salary"").type(StreamColumn.Type.FLOAT).build());"
74189,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/engine/model/StreamEventBuilderTest.java,46,,"        streamColumns.add(new StreamColumn.Builder().name(""object"").type(StreamColumn.Type.OBJECT).build());"
74190,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/engine/model/StreamEventBuilderTest.java,47,,"        streamColumns.add(new StreamColumn.Builder().name(""int"").type(StreamColumn.Type.INT).build());"
74191,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/engine/model/StreamEventBuilderTest.java,52,,"        StreamEvent streamEvent = streamEventBuilder.schema(streamDefinition).streamId(""streamId"").metaVersion(""metaVersion"").timestamep(1478667686971l).build();"
74192,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/engine/model/StreamEventBuilderTest.java,52,,"        StreamEvent streamEvent = streamEventBuilder.schema(streamDefinition).streamId(""streamId"").metaVersion(""metaVersion"").timestamep(1478667686971l).build();"
74193,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/engine/model/StreamEventBuilderTest.java,54,,"        Object[] data = new Object[]{""namevalue"", ""hostvalue"", ""1"", 10.0, 1, -0.2, ""{\""name\"":\""heap.COMMITTED\"", \""Value\"":\""175636480\""}"", 4};"
74194,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/engine/model/StreamEventBuilderTest.java,54,,"        Object[] data = new Object[]{""namevalue"", ""hostvalue"", ""1"", 10.0, 1, -0.2, ""{\""name\"":\""heap.COMMITTED\"", \""Value\"":\""175636480\""}"", 4};"
74195,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/engine/model/StreamEventBuilderTest.java,54,,"        Object[] data = new Object[]{""namevalue"", ""hostvalue"", ""1"", 10.0, 1, -0.2, ""{\""name\"":\""heap.COMMITTED\"", \""Value\"":\""175636480\""}"", 4};"
74196,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/engine/model/StreamEventTest.java,40,,"        Object[] data = new Object[]{""namevalue"", ""hostvalue"", ""1"", 10.0, 1, -0.2, ""{\""name\"":\""heap.COMMITTED\"", \""Value\"":\""175636480\""}"", 4};"
74197,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/engine/model/StreamEventTest.java,66,,"        streamColumns.add(new StreamColumn.Builder().name(""name"").type(StreamColumn.Type.STRING).build());"
74198,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/engine/model/StreamEventTest.java,67,,"        streamColumns.add(new StreamColumn.Builder().name(""host"").type(StreamColumn.Type.STRING).build());"
74199,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/engine/model/StreamEventTest.java,68,,"        streamColumns.add(new StreamColumn.Builder().name(""flag"").type(StreamColumn.Type.BOOL).build());"
74200,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/engine/model/StreamEventTest.java,69,,"        streamColumns.add(new StreamColumn.Builder().name(""value"").type(StreamColumn.Type.DOUBLE).build());"
74201,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/engine/model/StreamEventTest.java,70,,"        streamColumns.add(new StreamColumn.Builder().name(""data"").type(StreamColumn.Type.LONG).build());"
74202,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/engine/model/StreamEventTest.java,71,,"        streamColumns.add(new StreamColumn.Builder().name(""salary"").type(StreamColumn.Type.FLOAT).build());"
74203,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/engine/model/StreamEventTest.java,72,,"        streamColumns.add(new StreamColumn.Builder().name(""object"").type(StreamColumn.Type.OBJECT).build());"
74204,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/engine/model/StreamEventTest.java,73,,"        streamColumns.add(new StreamColumn.Builder().name(""int"").type(StreamColumn.Type.INT).build());"
74205,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/metric/MetricSystemTest.java,70,,"        Assert.assertEquals(metricEvent.get(""name""), ""test"");"
74206,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/metric/MetricSystemTest.java,71,,"        Assert.assertNotNull(metricEvent.get(""timestamp""));"
74207,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/metric/MetricSystemTest.java,181,,"        metrics.put(""uptime"", (Gauge) () -> ""testuptime"");"
74208,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/metric/MetricSystemTest.java,182,,"        metrics.put(""vendor"", (Gauge) () -> ""testvendor"");"
74209,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/metric/MetricSystemTest.java,351,,"                ""    }"" + END_LINE + """" +"
74210,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/util/ConfigUtilsTest.java,54,,"                ""      }"" + END_LINE + """" +"
74211,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-common/src/test/java/org/apache/eagle/alert/util/TimePeriodUtilsTest.java,60,,"        expect = DateTimeUtil.humanDateToSeconds(""2015-07-01 03:00:00"");"
74212,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-coordinator/src/main/java/org/apache/eagle/alert/coordinator/provider/NodataMetadataGenerator.java,150,,"                String publishmentName = policyName + ""_publish"";"
74213,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-coordinator/src/main/java/org/apache/eagle/alert/coordinator/provider/NodataMetadataGenerator.java,157,,"                    publishments.put(publishmentName + ""_email"", buildEmailAlertPublishment(config,"
74214,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-coordinator/src/test/java/org/apache/alert/coordinator/ScheduleContextBuilderTest.java,75,,"        String alertBolt0 = TOPO1 + ""-alert-"" + ""0"";"
74215,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-coordinator/src/test/java/org/apache/alert/coordinator/SchedulerTest.java,147,,"                    Assert.assertEquals(Arrays.asList(""col1""), par.getColumns());"
74216,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/main/java/org/apache/eagle/alert/engine/coordinator/impl/ZKMetadataChangeNotifyService.java,126,,"                    LOG.error("" alert spec for version {} not found for topology {} !"", version, topologyId);"
74217,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/main/java/org/apache/eagle/alert/engine/publisher/email/EagleMailClient.java,101,,"            LOG.info(""Failed to send mail, got an AddressException: "" + e.getMessage(), e);"
74218,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/main/java/org/apache/eagle/alert/engine/publisher/impl/AlertKafkaPublisher.java,47,,"    @SuppressWarnings(""rawtypes"")"
74219,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/absence/TestAbsenceDriver.java,53,,"        driver.process(Arrays.asList(""host2""), baseOccurTime);"
74220,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/absence/TestAbsenceWindowGenerator.java,44,,"        DateFormat df = new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss"");"
74221,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/absence/TestAbsenceWindowGenerator.java,45,,"        df.setTimeZone(TimeZone.getTimeZone(""UTC""));"
74222,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/absence/TestAbsenceWindowProcessor.java,38,,"        processor.process(Arrays.asList(""host2""), 90);"
74223,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/evaluator/SiddhiCEPPolicyEventHandlerTest.java,58,,"        handler = new SiddhiPolicyHandler(createDefinition(""sampleStream_1"", ""sampleStream_2""), 0);"
74224,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/evaluator/SiddhiCEPPolicyEventHandlerTest.java,58,,"        handler = new SiddhiPolicyHandler(createDefinition(""sampleStream_1"", ""sampleStream_2""), 0);"
74225,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/evaluator/SiddhiCEPPolicyEventHandlerTest.java,71,,"                put(""name"", ""cpu"");"
74226,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/evaluator/SiddhiCEPPolicyEventHandlerTest.java,71,,"                put(""name"", ""cpu"");"
74227,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/evaluator/SiddhiCEPPolicyEventHandlerTest.java,72,,"                put(""value"", 60.0);"
74228,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/interpreter/PolicyInterpreterTest.java,72,,"        Assert.assertTrue(executionPlan.getOutputStreams().containsKey(""HDFS_AUDIT_LOG_ENRICHED_STREAM_SANDBOX_OUT_1""));"
74229,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/interpreter/PolicyInterpreterTest.java,73,,"        Assert.assertTrue(executionPlan.getOutputStreams().containsKey(""HDFS_AUDIT_LOG_ENRICHED_STREAM_SANDBOX_OUT_2""));"
74230,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/interpreter/PolicyInterpreterTest.java,96,,"        policyDefinition.setName(""test_policy"");"
74231,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/interpreter/PolicyInterpreterTest.java,97,,"        policyDefinition.setInputStreams(Collections.singletonList(""INPUT_STREAM_1""));"
74232,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/interpreter/PolicyInterpreterTest.java,98,,"        policyDefinition.setOutputStreams(Collections.singletonList(""OUTPUT_STREAM_1""));"
74233,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/interpreter/PolicyInterpreterTest.java,101,,"        definition.setType(""siddhi"");"
74234,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/interpreter/PolicyInterpreterTest.java,110,,"                put(""INPUT_STREAM_2"", mockStreamDefinition(""INPUT_STREAM_2""));"
74235,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/interpreter/PolicyInterpreterTest.java,157,,"        definition.setValue(""from INPUT_STREAM_1[value > 90.0] select * group by name insert into OUTPUT_STREAM_1;"");"
74236,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/interpreter/PolicyInterpreterTest.java,419,,"        policyDefinition.setInputStreams(Collections.singletonList(""HADOOP_JMX_METRIC_STREAM_1""));"
74237,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/interpreter/PolicyInterpreterTest.java,420,,"        policyDefinition.setOutputStreams(Collections.singletonList(""HADOOP_JMX_METRIC_STREAM_1_MISS_BLOCKS_OUT""));"
74238,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/interpreter/PolicyInterpreterTest.java,445,,"        Assert.assertArrayEquals(new String[]{""metric""}, validation.getPolicyExecutionPlan().getStreamPartitions().get(0).getColumns().toArray());"
74239,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/mock/MockSampleMetadataFactory.java,40,,"        mockStreamMetadataServiceInstance.registerStream(""sampleStream_1"", createSampleStreamDefinition(""sampleStream_1""));"
74240,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/mock/MockSampleMetadataFactory.java,41,,"        mockStreamMetadataServiceInstance.registerStream(""sampleStream_2"", createSampleStreamDefinition(""sampleStream_2""));"
74241,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/mock/MockSampleMetadataFactory.java,55,,"        streamColumns.add(new StreamColumn.Builder().name(""name"").type(StreamColumn.Type.STRING).build());"
74242,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/nodata/TestDistinctValuesInTimeBatchWindow.java,55,,"        sendEventToWindow(window, now, ""host1"", 95.5);"
74243,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/nodata/TestNoDataPolicyHandler.java,62,,"        handler.send(buildStreamEvt(0, ""host2"", 12.6));"
74244,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/nodata/TestNoDataPolicyTimeBatchHandler.java,65,,"        handler.send(buildStreamEvt(now, ""host2"", 12.6));"
74245,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/publisher/AlertKafkaPublisherTest.java,77,,"        kafkaClientConfig.add(ImmutableMap.of(""name"", ""producer.type"", ""value"", ""async""));"
74246,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/publisher/AlertKafkaPublisherTest.java,77,,"        kafkaClientConfig.add(ImmutableMap.of(""name"", ""producer.type"", ""value"", ""async""));"
74247,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/publisher/dedup/DefaultDedupWithoutStateTest.java,69,,"                        System.out.println("">>>"" + Joiner.on("","").join(result));"
74248,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/publisher/dedup/DefaultDeduplicatorTest.java,50,,"            System.currentTimeMillis(), ""host1"", ""testPolicy-host1-01"", ""OPEN"", 0, 0"
74249,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/publisher/dedup/DefaultDeduplicatorTest.java,50,,"            System.currentTimeMillis(), ""host1"", ""testPolicy-host1-01"", ""OPEN"", 0, 0"
74250,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/publisher/dedup/DefaultDeduplicatorTest.java,50,,"            System.currentTimeMillis(), ""host1"", ""testPolicy-host1-01"", ""OPEN"", 0, 0"
74251,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/publisher/template/VelocityTemplateTest.java,56,,"        repo.putStringResource(""alert_template"", """");"
74252,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/router/TestAlertBolt.java,94,,"                Assert.assertEquals(""testAlertStream"", ((PublishPartition) tuple.get(0)).getStreamId());"
74253,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/router/TestAlertBolt.java,95,,"                Assert.assertEquals(""testAlertPublish"", ((PublishPartition) tuple.get(0)).getPublishId());"
74254,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/router/TestAlertBolt.java,97,,"                System.out.println(String.format(""collector received: [streamId=[%s], tuple=[%s] "", ((PublishPartition) tuple.get(0)).getStreamId(), tuple));"
74255,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/router/TestAlertBolt.java,139,,"        spec.setVersion(""version1"");"
74256,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/router/TestAlertBolt.java,149,,"        spec.addBoltPolicy(""alertBolt1"", pd.getName());"
74257,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/router/TestAlertBolt.java,157,,"        when(context.getComponentId(taskId)).thenReturn(""comp1"");"
74258,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/router/TestAlertBolt.java,158,,"        when(context.getComponentOutputFields(""comp1"", ""default"")).thenReturn(new Fields(""f0""));"
74259,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/router/TestAlertBolt.java,275,,"            def.setName(""policy-definition"");"
74260,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/router/TestAlertBolt.java,561,,"                Assert.assertTrue(""symptomaticAlertOutputStream"".equals((String) tuple.get(0))"
74261,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/router/TestAlertBolt.java,562,,"                    || ""deviceDownAlertStream"".equals((String) tuple.get(0)));"
74262,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/router/TestAlertBolt.java,593,,"        sp.setStreamId(""correlatedStream"");"
74263,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/router/TestAlertPublisherBolt.java,66,,"        AlertStreamEvent event = create(""testAlertStream"");"
74264,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/router/TestAlertPublisherBolt.java,77,,"        policy.setName(""policy1"");"
74265,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/router/TestAlertPublisherBolt.java,213,,"        AlertStreamEvent event1 = createWithStreamDef(""host1"", ""testapp1"", ""OPEN"");"
74266,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/router/TestAlertPublisherBolt.java,213,,"        AlertStreamEvent event1 = createWithStreamDef(""host1"", ""testapp1"", ""OPEN"");"
74267,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/router/TestAlertPublisherBolt.java,309,,"        deduplication.setOutputStreamId(""stream"");"
74268,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/router/TestAlertPublisherBolt.java,319,,"        policy2.setName(""policy2"");"
74269,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/runner/TestStreamRouterBolt.java,170,,"        when(context.getComponentOutputFields(""comp1"", ""default"")).thenReturn(new Fields(""f0""));"
74270,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/serialization/JavaSerializationTest.java,43,,"        partitionedEvent.setPartition(createSampleStreamGroupbyPartition(""sampleStream"", Arrays.asList(""name"", ""host"")));"
74271,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/serialization/JavaSerializationTest.java,43,,"        partitionedEvent.setPartition(createSampleStreamGroupbyPartition(""sampleStream"", Arrays.asList(""name"", ""host"")));"
74272,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/serialization/PartitionedEventSerializerTest.java,186,,"        LOG.info(""Bit Set Byte[]: {}"", bitSet.toByteArray());"
74273,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/serialization/PartitionedEventSerializerTest.java,189,,"        LOG.info(""BitSet[1]: {}"", bitSet.get(1));"
74274,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/siddhi/SiddhiPolicyTest.java,79,,"        runtime.addCallback(""syslog_severity_check_output"", sc);"
74275,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/siddhi/SiddhiPolicyTest.java,107,,"                Assert.assertTrue(hosts.contains(""HOSTNAME-"" + 0));"
74276,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/siddhi/SiddhiPolicyTest.java,151,,"            e.setData(new Object[] {""facitliy"", ""SEVERITY_EMERG"", ""HOSTNAME-"" + i % 4, ""MSGID-..."", ""Timestamp"", ""conn-sss"", ""op-msg-Abort"", ""msgId.."", ""command-..."", ""name-"", ""namespace"", System.currentTimeMillis()});"
74277,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/siddhi/SiddhiPolicyTest.java,151,,"            e.setData(new Object[] {""facitliy"", ""SEVERITY_EMERG"", ""HOSTNAME-"" + i % 4, ""MSGID-..."", ""Timestamp"", ""conn-sss"", ""op-msg-Abort"", ""msgId.."", ""command-..."", ""name-"", ""namespace"", System.currentTimeMillis()});"
74278,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/siddhi/SiddhiPolicyTest.java,151,,"            e.setData(new Object[] {""facitliy"", ""SEVERITY_EMERG"", ""HOSTNAME-"" + i % 4, ""MSGID-..."", ""Timestamp"", ""conn-sss"", ""op-msg-Abort"", ""msgId.."", ""command-..."", ""name-"", ""namespace"", System.currentTimeMillis()});"
74279,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/siddhi/SiddhiPolicyTest.java,151,,"            e.setData(new Object[] {""facitliy"", ""SEVERITY_EMERG"", ""HOSTNAME-"" + i % 4, ""MSGID-..."", ""Timestamp"", ""conn-sss"", ""op-msg-Abort"", ""msgId.."", ""command-..."", ""name-"", ""namespace"", System.currentTimeMillis()});"
74280,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/siddhi/SiddhiPolicyTest.java,151,,"            e.setData(new Object[] {""facitliy"", ""SEVERITY_EMERG"", ""HOSTNAME-"" + i % 4, ""MSGID-..."", ""Timestamp"", ""conn-sss"", ""op-msg-Abort"", ""msgId.."", ""command-..."", ""name-"", ""namespace"", System.currentTimeMillis()});"
74281,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/siddhi/SiddhiPolicyTest.java,151,,"            e.setData(new Object[] {""facitliy"", ""SEVERITY_EMERG"", ""HOSTNAME-"" + i % 4, ""MSGID-..."", ""Timestamp"", ""conn-sss"", ""op-msg-Abort"", ""msgId.."", ""command-..."", ""name-"", ""namespace"", System.currentTimeMillis()});"
74282,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/siddhi/SiddhiPolicyTest.java,151,,"            e.setData(new Object[] {""facitliy"", ""SEVERITY_EMERG"", ""HOSTNAME-"" + i % 4, ""MSGID-..."", ""Timestamp"", ""conn-sss"", ""op-msg-Abort"", ""msgId.."", ""command-..."", ""name-"", ""namespace"", System.currentTimeMillis()});"
74283,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/siddhi/SiddhiPolicyTest.java,151,,"            e.setData(new Object[] {""facitliy"", ""SEVERITY_EMERG"", ""HOSTNAME-"" + i % 4, ""MSGID-..."", ""Timestamp"", ""conn-sss"", ""op-msg-Abort"", ""msgId.."", ""command-..."", ""name-"", ""namespace"", System.currentTimeMillis()});"
74284,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/siddhi/SiddhiPolicyTest.java,151,,"            e.setData(new Object[] {""facitliy"", ""SEVERITY_EMERG"", ""HOSTNAME-"" + i % 4, ""MSGID-..."", ""Timestamp"", ""conn-sss"", ""op-msg-Abort"", ""msgId.."", ""command-..."", ""name-"", ""namespace"", System.currentTimeMillis()});"
74285,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/siddhi/extension/AttributeCollectAggregatorTest.java,87,,"            e = new Event(base, new Object[] {base, ""host"" + r.nextInt(), ""nova""});"
74286,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/sorter/StreamSortHandlerTest.java,81,,"        StreamTimeClockInLocalMemory timeClock = new StreamTimeClockInLocalMemory(""sampleStream_1"");"
74287,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/sorter/StreamWindowTestSuite.java,38,,"    private final long start = DateTimeUtil.humanDateToMillisecondsWithoutException(""2016-05-04 00:00:00,000"");"
74288,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/sorter/StreamWindowTestSuite.java,71,,"        StreamTimeClock clock = new StreamTimeClockInLocalMemory(""sampleStream_1"");"
74289,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/sorter/StreamWindowTestSuite.java,72,,"        clock.moveForward(DateTimeUtil.humanDateToMillisecondsWithoutException(""2016-05-04 00:00:30,000""));"
74290,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/sorter/TreeMultisetComparatorTest.java,47,,"        sp.setStreamId(""testStreamId"");"
74291,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/topology/TestMetadataSpecSerDeser.java,44,,"        List<String> topics = Arrays.asList(""testTopic3"", ""testTopic4"", ""testTopic5"");"
74292,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/topology/TestMetadataSpecSerDeser.java,44,,"        List<String> topics = Arrays.asList(""testTopic3"", ""testTopic4"", ""testTopic5"");"
74293,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/topology/TestMetadataSpecSerDeser.java,44,,"        List<String> topics = Arrays.asList(""testTopic3"", ""testTopic4"", ""testTopic5"");"
74294,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/topology/TestMetadataSpecSerDeser.java,51,,"                column.setName(""value"");"
74295,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-engine/src/test/java/org/apache/eagle/alert/engine/topology/TestMetadataSpecSerDeser.java,77,,"        String topologyName = ""testTopology"";"
74296,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-metadata-parent/alert-metadata-service/src/main/java/org/apache/eagle/service/metadata/resource/MetadataResource.java,283,,"    public OpResult removePolicy(@PathParam(""policyId"") String policyId) {"
74297,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-metadata-parent/alert-metadata-service/src/test/java/org/apache/eagle/service/topology/resource/impl/TopologyMgmtResourceImplTest.java,94,,"        Topology topology = new Topology(""test"", 1, 1);"
74298,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-metadata-parent/alert-metadata/src/main/java/org/apache/eagle/alert/metadata/impl/MongoMetadataDaoImpl.java,191,,"        doc1.append(""version"", new BsonInt32(1));"
74299,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-metadata-parent/alert-metadata/src/main/java/org/apache/eagle/alert/metadata/impl/MongoMetadataDaoImpl.java,470,,"                    LOG.error(""deserialize config item failed!"", e);"
74300,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-metadata-parent/alert-metadata/src/test/java/org/apache/eagle/alert/metadata/impl/InMemoryTest.java,56,,"        cluster1.setName(""test1"");"
74301,./TargetProjects/eagle/eagle-core/eagle-alert-parent/eagle-alert/alert-metadata-parent/alert-metadata/src/test/java/org/apache/eagle/alert/metadata/impl/JdbcImplTest.java,73,,"            publishment.setName(""pub-"");"
74302,./TargetProjects/eagle/eagle-core/eagle-app/eagle-app-base/src/main/java/org/apache/eagle/app/environment/impl/SparkExecutionRuntime.java,28,,"        throw new RuntimeException(""Not implemented yet"");"
74303,./TargetProjects/eagle/eagle-core/eagle-app/eagle-app-base/src/main/java/org/apache/eagle/app/environment/impl/StormExecutionRuntime.java,140,,"        LOG.info(""Starting {} ({}), mode: {}"",topologyName, executor.getClass().getCanonicalName(), config.getString(""mode""));"
74304,./TargetProjects/eagle/eagle-core/eagle-app/eagle-app-base/src/main/java/org/apache/eagle/app/messaging/MetricStreamPersist.java,60,,"        this.batchSize = config.hasPath(""service.batchSize"") ? config.getInt(""service.batchSize"") : 1;"
74305,./TargetProjects/eagle/eagle-core/eagle-app/eagle-app-base/src/main/java/org/apache/eagle/app/utils/DynamicJarPathFinder.java,59,,"        if (!uri.startsWith(""jar:file:"")) {"
74306,./TargetProjects/eagle/eagle-core/eagle-app/eagle-app-base/src/test/java/org/apache/eagle/app/ApplicationProviderServiceTest.java,48,,"        assertEquals(""/apps/test_web_app"",providerManager.getApplicationDescByType(""TEST_WEB_APPLICATION"").getViewPath());"
74307,./TargetProjects/eagle/eagle-core/eagle-app/eagle-app-base/src/test/java/org/apache/eagle/app/environment/builder/CounterToRateFunctionTest.java,39,,"        event.put(""timestamp"", ts);"
74308,./TargetProjects/eagle/eagle-core/eagle-app/eagle-app-base/src/test/java/org/apache/eagle/app/environment/builder/CounterToRateFunctionTest.java,40,,"        event.put(""metric"", ""hadoop.hbase.regionserver.server.totalrequestcount"");"
74309,./TargetProjects/eagle/eagle-core/eagle-app/eagle-app-base/src/test/java/org/apache/eagle/app/environment/builder/CounterToRateFunctionTest.java,41,,"        event.put(""component"", ""hbasemaster"");"
74310,./TargetProjects/eagle/eagle-core/eagle-app/eagle-app-base/src/test/java/org/apache/eagle/app/environment/builder/CounterToRateFunctionTest.java,42,,"        event.put(""site"", ""sandbox"");"
74311,./TargetProjects/eagle/eagle-core/eagle-app/eagle-app-base/src/test/java/org/apache/eagle/app/environment/builder/CounterToRateFunctionTest.java,43,,"        event.put(""value"", value);"
74312,./TargetProjects/eagle/eagle-core/eagle-app/eagle-app-base/src/test/java/org/apache/eagle/app/environment/builder/CounterToRateFunctionTest.java,44,,"        event.put(""host"", ""xxx-xxx.int.xxx.com"");"
74313,./TargetProjects/eagle/eagle-core/eagle-app/eagle-app-base/src/test/java/org/apache/eagle/app/environment/builder/CounterToRateFunctionTest.java,89,,"        Assert.assertEquals(""xxx-xxx.int.xxx.com-hbasemaster-sandbox-hadoop.hbase.regionserver.server.totalrequestcount"", metric.getMetricName());"
74314,./TargetProjects/eagle/eagle-core/eagle-app/eagle-app-base/src/test/java/org/apache/eagle/app/messaging/MetricStreamPersistTest.java,53,,"            .namedByField(""metric"")"
74315,./TargetProjects/eagle/eagle-core/eagle-app/eagle-app-base/src/test/java/org/apache/eagle/app/messaging/MetricStreamPersistTest.java,54,,"            .eventTimeByField(""timestamp"")"
74316,./TargetProjects/eagle/eagle-core/eagle-app/eagle-app-base/src/test/java/org/apache/eagle/app/messaging/MetricStreamPersistTest.java,55,,"            .dimensionFields(""host"", ""component"", ""site"")"
74317,./TargetProjects/eagle/eagle-core/eagle-app/eagle-app-base/src/test/java/org/apache/eagle/app/messaging/MetricStreamPersistTest.java,55,,"            .dimensionFields(""host"", ""component"", ""site"")"
74318,./TargetProjects/eagle/eagle-core/eagle-app/eagle-app-base/src/test/java/org/apache/eagle/app/messaging/MetricStreamPersistTest.java,55,,"            .dimensionFields(""host"", ""component"", ""site"")"
74319,./TargetProjects/eagle/eagle-core/eagle-app/eagle-app-base/src/test/java/org/apache/eagle/app/messaging/MetricStreamPersistTest.java,57,,"            .valueField(""value"");"
74320,./TargetProjects/eagle/eagle-core/eagle-app/eagle-app-base/src/test/java/org/apache/eagle/app/service/TestApplicationManagementServiceImpl.java,94,,"        startOperation = new ApplicationOperations.StartOperation(null, ""TEST_APPLICATION_SANDBOX"");"
74321,./TargetProjects/eagle/eagle-core/eagle-common/src/main/java/org/apache/eagle/common/DateTimeUtil.java,47,,"        SimpleDateFormat sdf = new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss"");"
74322,./TargetProjects/eagle/eagle-core/eagle-common/src/main/java/org/apache/eagle/common/DateTimeUtil.java,73,,"        SimpleDateFormat sdf = new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss,SSS"");"
74323,./TargetProjects/eagle/eagle-core/eagle-common/src/main/java/org/apache/eagle/common/mail/EagleMailClient.java,100,,"            LOG.info(""Failed to send mail, got an AddressException: "" + e.getMessage(), e);"
74324,./TargetProjects/eagle/eagle-core/eagle-common/src/main/java/org/apache/eagle/common/rest/RESTResponse.java,169,,"                LOGGER.error(""Exception: "" + ex.getMessage(), ex);"
74325,./TargetProjects/eagle/eagle-core/eagle-common/src/test/java/org/apache/eagle/common/agg/TestSiddhiAggregator.java,79,,"        aggregator.add(new Object[] {""host1"", 1000L, ""missingblocks"", ""site1"", 10.0});"
74326,./TargetProjects/eagle/eagle-core/eagle-common/src/test/java/org/apache/eagle/common/agg/TestSiddhiAggregator.java,79,,"        aggregator.add(new Object[] {""host1"", 1000L, ""missingblocks"", ""site1"", 10.0});"
74327,./TargetProjects/eagle/eagle-core/eagle-common/src/test/java/org/apache/eagle/common/agg/TestSiddhiAggregator.java,79,,"        aggregator.add(new Object[] {""host1"", 1000L, ""missingblocks"", ""site1"", 10.0});"
74328,./TargetProjects/eagle/eagle-core/eagle-common/src/test/java/org/apache/eagle/common/agg/TestSiddhiAggregator.java,80,,"        aggregator.add(new Object[] {""host2"", 2000L, ""missingblocks"", ""site1"", 16.0});"
74329,./TargetProjects/eagle/eagle-core/eagle-common/src/test/java/org/apache/eagle/common/agg/TestStreamAggregator.java,51,,"        aggregator.add(new Object[] {""host1"", 1000L, ""missingblocks"", ""site1"", 10.0});"
74330,./TargetProjects/eagle/eagle-core/eagle-common/src/test/java/org/apache/eagle/common/agg/TestStreamAggregator.java,51,,"        aggregator.add(new Object[] {""host1"", 1000L, ""missingblocks"", ""site1"", 10.0});"
74331,./TargetProjects/eagle/eagle-core/eagle-common/src/test/java/org/apache/eagle/common/agg/TestStreamAggregator.java,51,,"        aggregator.add(new Object[] {""host1"", 1000L, ""missingblocks"", ""site1"", 10.0});"
74332,./TargetProjects/eagle/eagle-core/eagle-common/src/test/java/org/apache/eagle/common/agg/TestStreamAggregator.java,52,,"        aggregator.add(new Object[] {""host2"", 2000L, ""missingblocks"", ""site1"", 16.0});"
74333,./TargetProjects/eagle/eagle-core/eagle-metadata/eagle-metadata-base/src/test/java/org/apache/eagle/metadata/model/TestConfiguration.java,33,,"        Assert.assertTrue(configuration.hasProperty(""testkey1""));"
74334,./TargetProjects/eagle/eagle-core/eagle-metadata/eagle-metadata-base/src/test/java/org/apache/eagle/metadata/service/TestApplicationEntityServiceMemoryImpl.java,41,,"        siteEntity.setSiteId(""testsiteid"");"
74335,./TargetProjects/eagle/eagle-core/eagle-metadata/eagle-metadata-base/src/test/java/org/apache/eagle/metadata/service/TestApplicationEntityServiceMemoryImpl.java,42,,"        siteEntity.setSiteName(""testsitename"");"
74336,./TargetProjects/eagle/eagle-core/eagle-metadata/eagle-metadata-base/src/test/java/org/apache/eagle/metadata/service/TestApplicationEntityServiceMemoryImpl.java,43,,"        siteEntity.setDescription(""testdesc"");"
74337,./TargetProjects/eagle/eagle-core/eagle-metadata/eagle-metadata-base/src/test/java/org/apache/eagle/metadata/service/TestApplicationEntityServiceMemoryImpl.java,45,,"        applicationDesc.setType(""type1"");"
74338,./TargetProjects/eagle/eagle-core/eagle-metadata/eagle-metadata-base/src/test/java/org/apache/eagle/metadata/service/TestSiteEntityServiceMemoryImpl.java,36,,"        siteEntity.setSiteId(""testsiteid"");"
74339,./TargetProjects/eagle/eagle-core/eagle-metadata/eagle-metadata-base/src/test/java/org/apache/eagle/metadata/service/TestSiteEntityServiceMemoryImpl.java,37,,"        siteEntity.setSiteName(""testsitename"");"
74340,./TargetProjects/eagle/eagle-core/eagle-metadata/eagle-metadata-base/src/test/java/org/apache/eagle/metadata/service/TestSiteEntityServiceMemoryImpl.java,38,,"        siteEntity.setDescription(""testdesc"");"
74341,./TargetProjects/eagle/eagle-core/eagle-metadata/eagle-metadata-base/src/test/java/org/apache/eagle/metadata/utils/PolicyIdConversionsTest.java,27,,"        Assert.assertEquals(""mock_policy_test"", PolicyIdConversions.generateUniquePolicyId(""test"", ""mock_policy""));"
74342,./TargetProjects/eagle/eagle-core/eagle-metadata/eagle-metadata-jdbc/src/test/java/org/apache/eagle/metadata/store/jdbc/ApplicationEntityServiceJDBCImplTest.java,52,,"        siteEntity.setSiteId(""testsiteid"");"
74343,./TargetProjects/eagle/eagle-core/eagle-metadata/eagle-metadata-jdbc/src/test/java/org/apache/eagle/metadata/store/jdbc/ApplicationEntityServiceJDBCImplTest.java,53,,"        siteEntity.setSiteName(""testsitename"");"
74344,./TargetProjects/eagle/eagle-core/eagle-metadata/eagle-metadata-jdbc/src/test/java/org/apache/eagle/metadata/store/jdbc/ApplicationEntityServiceJDBCImplTest.java,54,,"        siteEntity.setDescription(""testdesc"");"
74345,./TargetProjects/eagle/eagle-core/eagle-metadata/eagle-metadata-jdbc/src/test/java/org/apache/eagle/metadata/store/jdbc/ApplicationEntityServiceJDBCImplTest.java,59,,"        ApplicationDesc applicationDesc = applicationProviderService.getApplicationDescByType(""TEST_APP"");"
74346,./TargetProjects/eagle/eagle-core/eagle-metadata/eagle-metadata-jdbc/src/test/java/org/apache/eagle/metadata/store/jdbc/SiteEntityServiceJDBCImplTest.java,37,,"        siteEntity.setSiteId(""testsiteid"");"
74347,./TargetProjects/eagle/eagle-core/eagle-metadata/eagle-metadata-jdbc/src/test/java/org/apache/eagle/metadata/store/jdbc/SiteEntityServiceJDBCImplTest.java,38,,"        siteEntity.setSiteName(""testsitename"");"
74348,./TargetProjects/eagle/eagle-core/eagle-metadata/eagle-metadata-jdbc/src/test/java/org/apache/eagle/metadata/store/jdbc/SiteEntityServiceJDBCImplTest.java,39,,"        siteEntity.setDescription(""testdesc"");"
74349,./TargetProjects/eagle/eagle-core/eagle-query/eagle-antlr/src/test/java/org/apache/eagle/query/parser/test/TestEagleQueryParser.java,41,,"        Assert.assertEquals(""@cluster"", or.getANDExprList().get(0).getAtomicExprList().get(0).getKey());"
74350,./TargetProjects/eagle/eagle-core/eagle-query/eagle-antlr/src/test/java/org/apache/eagle/query/parser/test/TestEagleQueryParser.java,60,,"        Assert.assertEquals(""@field1"", or.getANDExprList().get(0).getAtomicExprList().get(0).getKey());"
74351,./TargetProjects/eagle/eagle-core/eagle-query/eagle-antlr/src/test/java/org/apache/eagle/query/parser/test/TestEagleQueryParser.java,139,,"        Assert.assertEquals(""abc"", or.getANDExprList().get(0).getAtomicExprList().get(0).getValue());"
74352,./TargetProjects/eagle/eagle-core/eagle-query/eagle-antlr/src/test/java/org/apache/eagle/query/parser/test/TestEagleQueryParser.java,142,,"        Assert.assertEquals(""@host"", or.getANDExprList().get(0).getAtomicExprList().get(1).getKey());"
74353,./TargetProjects/eagle/eagle-core/eagle-query/eagle-antlr/src/test/java/org/apache/eagle/query/parser/test/TestEagleQueryParser.java,143,,"        Assert.assertEquals(""dc123.xyz.com"", or.getANDExprList().get(0).getAtomicExprList().get(1).getValue());"
74354,./TargetProjects/eagle/eagle-core/eagle-query/eagle-antlr/src/test/java/org/apache/eagle/query/parser/test/TestEagleQueryParser.java,366,,"        Assert.assertEquals(""@name"", or.getANDExprList().get(0).getAtomicExprList().get(0).getKey());"
74355,./TargetProjects/eagle/eagle-core/eagle-query/eagle-antlr/src/test/java/org/apache/eagle/query/parser/test/TestEagleQueryParser.java,367,,"        Assert.assertEquals(""jame"", or.getANDExprList().get(0).getAtomicExprList().get(0).getValue());"
74356,./TargetProjects/eagle/eagle-core/eagle-query/eagle-antlr/src/test/java/org/apache/eagle/query/parser/test/TestEagleQueryParser.java,445,,"        Assert.assertEquals(""NULL"", or.getANDExprList().get(0).getAtomicExprList().get(0).getValue());"
74357,./TargetProjects/eagle/eagle-core/eagle-query/eagle-antlr/src/test/java/org/apache/eagle/query/parser/test/TestEagleQueryParser.java,460,,"        Assert.assertEquals(""IS NOT"", or.getANDExprList().get(0).getAtomicExprList().get(0).getOp().toString());"
74358,./TargetProjects/eagle/eagle-core/eagle-query/eagle-audit-base/src/main/java/org/apache/eagle/audit/dao/ServiceAuditDAOImpl.java,45,,"			String query = AuditConstants.AUDIT_SERVICE_ENDPOINT + ""[@serviceName=\""AlertDefinitionService\"" AND @site=\"""" + site + ""\"" AND @application=\"""" + application + ""\""]{*}"";"
74359,./TargetProjects/eagle/eagle-core/eagle-query/eagle-audit-base/src/main/java/org/apache/eagle/audit/dao/ServiceAuditDAOImpl.java,49,,"                throw new Exception(""Exception in querying eagle service: "" + response.getException());"
74360,./TargetProjects/eagle/eagle-core/eagle-query/eagle-audit-base/src/main/java/org/apache/eagle/audit/dao/ServiceAuditDAOImpl.java,53,,"			LOG.error(""Exception in retrieving audit entry: "" + exception);"
74361,./TargetProjects/eagle/eagle-core/eagle-query/eagle-audit-base/src/test/java/org/apache/eagle/audit/entity/TestGenericAuditEntity.java,49,,"        tags1.put(AuditConstants.AUDIT_COLUMN_SERVICE_NAME, ""testService"");"
74362,./TargetProjects/eagle/eagle-core/eagle-query/eagle-audit-base/src/test/java/org/apache/eagle/audit/entity/TestGenericAuditEntity.java,50,,"        tags1.put(AuditConstants.AUDIT_COLUMN_USER_ID, ""eagle1"");"
74363,./TargetProjects/eagle/eagle-core/eagle-query/eagle-audit-base/src/test/java/org/apache/eagle/audit/entity/TestGenericAuditEntity.java,51,,"        tags1.put(AuditConstants.AUDIT_COLUMN_OPERATION, ""UPDATE"");"
74364,./TargetProjects/eagle/eagle-core/eagle-query/eagle-audit-base/src/test/java/org/apache/eagle/audit/listener/TestAuditSupport.java,37,,"        Field mapField = AuditSupport.class.getDeclaredField(""map"");"
74365,./TargetProjects/eagle/eagle-core/eagle-query/eagle-client-base/src/main/java/org/apache/eagle/service/client/impl/EagleServiceClientImpl.java,92,,"        checkNotNull(serviceName, ""serviceName"");"
74366,./TargetProjects/eagle/eagle-core/eagle-query/eagle-client-base/src/main/java/org/apache/eagle/service/client/impl/EagleServiceClientImpl.java,93,,"        checkNotNull(entities, ""entities"");"
74367,./TargetProjects/eagle/eagle-core/eagle-query/eagle-client-base/src/main/java/org/apache/eagle/service/client/impl/EagleServiceClientImpl.java,153,,"    @SuppressWarnings(""unchecked"")"
74368,./TargetProjects/eagle/eagle-core/eagle-query/eagle-client-base/src/test/java/org/apache/eagle/service/client/TestEagleServiceClientImpl.java,44,,"                put(""cluster"", ""cluster4ut"");"
74369,./TargetProjects/eagle/eagle-core/eagle-query/eagle-client-base/src/test/java/org/apache/eagle/service/client/TestEagleServiceClientImpl.java,44,,"                put(""cluster"", ""cluster4ut"");"
74370,./TargetProjects/eagle/eagle-core/eagle-query/eagle-client-base/src/test/java/org/apache/eagle/service/client/TestEagleServiceClientImpl.java,45,,"                put(""datacenter"", ""datacenter4ut"");"
74371,./TargetProjects/eagle/eagle-core/eagle-query/eagle-client-base/src/test/java/org/apache/eagle/service/client/TestEagleServiceClientImpl.java,45,,"                put(""datacenter"", ""datacenter4ut"");"
74372,./TargetProjects/eagle/eagle-core/eagle-query/eagle-client-base/src/test/java/org/apache/eagle/service/client/TestEagleServiceClientImpl.java,63,,"        response = client.create(entities,""TestTimeSeriesAPIEntity"");"
74373,./TargetProjects/eagle/eagle-core/eagle-query/eagle-client-base/src/test/java/org/apache/eagle/service/client/TestEagleServiceClientImpl.java,66,,"        response = client.search(""TestTimeSeriesAPIEntity[]{*}"")"
74374,./TargetProjects/eagle/eagle-core/eagle-query/eagle-client-base/src/test/java/org/apache/eagle/service/client/TestEagleServiceClientImpl.java,192,,"            entity.setPrefix(""unit.test.metrics"");"
74375,./TargetProjects/eagle/eagle-core/eagle-query/eagle-client-base/src/test/java/org/apache/eagle/service/jackson/TestJacksonMarshalling.java,46,,"	    	LOG.error(""Cannot marshall"", ex);"
74376,./TargetProjects/eagle/eagle-core/eagle-query/eagle-client-base/src/test/java/org/apache/eagle/service/jackson/TestJacksonMarshalling.java,115,,"		map.put(Arrays.asList(""cluster1"",""dc1""), ""123"");"
74377,./TargetProjects/eagle/eagle-core/eagle-query/eagle-entity-base/src/main/java/org/apache/eagle/log/entity/meta/MapSerDeser.java,119,,"                    throw new IllegalArgumentException(""Unsupported class: "" + keyClass.getName());"
74378,./TargetProjects/eagle/eagle-core/eagle-query/eagle-entity-base/src/test/java/org/apache/eagle/log/entity/TestHBaseWriteEntitiesPerformance.java,69,,"            LOG.debug(""Start to write "" + count + "" entities"");"
74379,./TargetProjects/eagle/eagle-core/eagle-query/eagle-entity-base/src/test/java/org/apache/eagle/log/entity/TestHBaseWritePerformance.java,54,,"        System.out.println(""Case 1: "" + (endTime - startTime) + "" ms"");"
74380,./TargetProjects/eagle/eagle-core/eagle-query/eagle-entity-base/src/test/java/org/apache/eagle/log/entity/TestTestLogAPIEntity.java,215,,"        newPart[0] = ""cluster"";"
74381,./TargetProjects/eagle/eagle-core/eagle-query/eagle-entity-base/src/test/java/org/apache/eagle/log/entity/TestTestLogAPIEntity.java,216,,"        newPart[1] = ""datacenter"";"
74382,./TargetProjects/eagle/eagle-core/eagle-query/eagle-entity-base/src/test/java/org/apache/eagle/log/entity/TestTestLogAPIEntity.java,230,,"            e.getTags().put(""cluster"", ""test4UT"");"
74383,./TargetProjects/eagle/eagle-core/eagle-query/eagle-entity-base/src/test/java/org/apache/eagle/log/entity/TestTestLogAPIEntity.java,231,,"            e.getTags().put(""datacenter"", ""dc1"");"
74384,./TargetProjects/eagle/eagle-core/eagle-query/eagle-entity-base/src/test/java/org/apache/eagle/log/entity/filter/TestEntityQualifierHelper.java,119,,"        Assert.assertEquals(""-1.5"", set.toArray()[0]);"
74385,./TargetProjects/eagle/eagle-core/eagle-query/eagle-entity-base/src/test/java/org/apache/eagle/log/entity/meta/TestListSerDeser.java,33,,"        sources.add(""value1"");"
74386,./TargetProjects/eagle/eagle-core/eagle-query/eagle-entity-base/src/test/java/org/apache/eagle/log/entity/meta/TestListSerDeser.java,34,,"        sources.add(""value2"");"
74387,./TargetProjects/eagle/eagle-core/eagle-query/eagle-entity-base/src/test/java/org/apache/eagle/log/entity/meta/TestListSerDeser.java,35,,"        sources.add(""value3"");"
74388,./TargetProjects/eagle/eagle-core/eagle-query/eagle-entity-base/src/test/java/org/apache/eagle/log/entity/meta/TestMapSerDeser.java,33,,"        sources.put(""test1"", ""value1"");"
74389,./TargetProjects/eagle/eagle-core/eagle-query/eagle-entity-base/src/test/java/org/apache/eagle/log/entity/meta/TestMapSerDeser.java,34,,"        sources.put(""test2"", null);"
74390,./TargetProjects/eagle/eagle-core/eagle-query/eagle-entity-base/src/test/java/org/apache/eagle/log/entity/meta/TestMapSerDeser.java,35,,"        sources.put(""test3"", ""value3"");"
74391,./TargetProjects/eagle/eagle-core/eagle-query/eagle-entity-base/src/test/java/org/apache/eagle/log/expression/TestExpressionParser.java,34,,"        String exprStr = ""mapProgress"";"
74392,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/main/java/org/apache/eagle/query/ListQueryCompiler.java,185,,"            throw new EagleQueryParseException(entityName + "" entity does not exist! "" + errMsg);"
74393,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/TestListQueryCompiler.java,46,,"        partitions[0] = ""cluster"";"
74394,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/TestListQueryCompiler.java,47,,"        partitions[1] = ""datacenter"";"
74395,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/TestListQueryCompiler.java,69,,"        Assert.assertTrue(outputFields.contains(""field1""));"
74396,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/raw/TestGroupbyKey.java,49,,"        key1.addValue(""hello"".getBytes());"
74397,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/raw/TestRawAggregator.java,49,,"        q.setDisplayName(""numHosts"");"
74398,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/raw/TestRawAggregator.java,55,,"        q.setDisplayName(""numClusters"");"
74399,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/raw/TestRawAggregator.java,64,,"        qualifiers.put(""cluster"", cluster == null ? null : cluster.getBytes());"
74400,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/raw/TestRawAggregator.java,65,,"        qualifiers.put(""datacenter"", datacenter == null ? null : datacenter.getBytes());"
74401,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/raw/TestRawAggregator.java,66,,"        qualifiers.put(""rack"", rack == null ? null : rack.getBytes());"
74402,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/raw/TestRawAggregator.java,75,,"        entities.add(createQualifiers(""cluster1"", ""dc1"", ""rack123"", 12, 2));"
74403,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/raw/TestRawAggregator.java,75,,"        entities.add(createQualifiers(""cluster1"", ""dc1"", ""rack123"", 12, 2));"
74404,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/raw/TestRawAggregator.java,75,,"        entities.add(createQualifiers(""cluster1"", ""dc1"", ""rack123"", 12, 2));"
74405,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/raw/TestRawAggregator.java,77,,"        entities.add(createQualifiers(""cluster1"", ""dc1"", ""rack128"", 10, 0));"
74406,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/raw/TestRawAggregator.java,78,,"        entities.add(createQualifiers(""cluster2"", ""dc1"", ""rack125"", 9, 2));"
74407,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/raw/TestRawAggregator.java,78,,"        entities.add(createQualifiers(""cluster2"", ""dc1"", ""rack125"", 9, 2));"
74408,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/raw/TestRawAggregator.java,79,,"        entities.add(createQualifiers(""cluster2"", ""dc1"", ""rack126"", 15, 2));"
74409,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/raw/TestRawAggregator.java,97,,"            LOG.error(""Can not aggregate"", ex);"
74410,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/raw/TestRawAggregator.java,138,,"        entities.add(createQualifiers(""cluster1"", ""dc2"", ""rack128"", 10, 0));"
74411,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/raw/TestRawAggregator.java,315,,"            Assert.assertEquals(result.get(Arrays.asList(""cluster2"", ""unassigned"")).get(0), total, 0.0000000000000000000000001);"
74412,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestAggregator.java,99,,"            List<String> groupbys = Arrays.asList(Aggregator.GROUPBY_ROOT_FIELD_NAME, ""cluster"");"
74413,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestAggregator.java,106,,"            entity.getTags().put(""category"", ""checkHadoopFS"");"
74414,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestAggregator.java,106,,"            entity.getTags().put(""category"", ""checkHadoopFS"");"
74415,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestAggregator.java,107,,"            entity.getTags().put(""rack"", ""rack123"");"
74416,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestAggregator.java,111,,"            entity.setStatus(""live"");"
74417,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestAggregator.java,117,,"            entity2.getTags().put(""rack"", ""rack124"");"
74418,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestAggregator.java,118,,"            entity2.getTags().put(""cluster"", ""cluster2"");"
74419,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestAggregator.java,121,,"            entity2.setStatus(""dead"");"
74420,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestAggregator.java,167,,"            LOG.error(""Test aggregator fails"", ex);"
74421,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestBucketQuery.java,50,,"        e1.getTags().put(""cluster"", ""cluster1"");"
74422,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestBucketQuery.java,50,,"        e1.getTags().put(""cluster"", ""cluster1"");"
74423,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestBucketQuery.java,51,,"        e1.getTags().put(""rack"", ""rack123"");"
74424,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestBucketQuery.java,51,,"        e1.getTags().put(""rack"", ""rack123"");"
74425,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestBucketQuery.java,81,,"            Assert.fail(""can not serialize bucket query result"");"
74426,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestBucketQuery2.java,50,,"        e1.getTags().put(""cluster"", ""cluster1"");"
74427,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestBucketQuery2.java,50,,"        e1.getTags().put(""cluster"", ""cluster1"");"
74428,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestBucketQuery2.java,51,,"        e1.getTags().put(""rack"", ""rack123"");"
74429,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestBucketQuery2.java,51,,"        e1.getTags().put(""rack"", ""rack123"");"
74430,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestBucketQuery2.java,80,,"            Assert.fail(""can not serialize bucket query result"");"
74431,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestFlatAggregator.java,60,,"            put(""cluster"", cluster);"
74432,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestFlatAggregator.java,61,,"            put(""datacenter"", datacenter);"
74433,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestFlatAggregator.java,62,,"            put(""rack"", rack);"
74434,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestFlatAggregator.java,73,,"        entities[0] = createEntity(""cluster1"", ""dc1"", ""rack123"", 12, 2);"
74435,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestFlatAggregator.java,73,,"        entities[0] = createEntity(""cluster1"", ""dc1"", ""rack123"", 12, 2);"
74436,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestFlatAggregator.java,73,,"        entities[0] = createEntity(""cluster1"", ""dc1"", ""rack123"", 12, 2);"
74437,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestFlatAggregator.java,75,,"        entities[2] = createEntity(""cluster1"", ""dc1"", ""rack128"", 10, 0);"
74438,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestFlatAggregator.java,76,,"        entities[3] = createEntity(""cluster2"", ""dc1"", ""rack125"", 9, 2);"
74439,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestFlatAggregator.java,76,,"        entities[3] = createEntity(""cluster2"", ""dc1"", ""rack125"", 9, 2);"
74440,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestFlatAggregator.java,77,,"        entities[4] = createEntity(""cluster2"", ""dc1"", ""rack126"", 15, 2);"
74441,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestFlatAggregator.java,79,,"        FlatAggregator agg = new FlatAggregator(new ArrayList<String>(), Arrays.asList(AggregateFunctionType.sum), Arrays.asList(""numHosts""));"
74442,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestFlatAggregator.java,89,,"            LOG.error(""Can not aggregate"", ex);"
74443,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestFlatAggregator.java,93,,"        agg = new FlatAggregator(new ArrayList<String>(), Arrays.asList(AggregateFunctionType.sum), Arrays.asList(""numClusters""));"
74444,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestFlatAggregator.java,128,,"        entities[4] = createEntity(""cluster2"", ""dc2"", ""rack126"", 15, 2);"
74445,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestFlatAggregator.java,250,,"            Assert.assertEquals(result.get(Arrays.asList(""cluster2"", ""unassigned"")).get(0), (double)(entities[5].getNumHosts()), 0.001);"
74446,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestHierarchicalAggregator.java,49,,"            put(""cluster"", cluster);"
74447,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestHierarchicalAggregator.java,50,,"            put(""datacenter"", datacenter);"
74448,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestHierarchicalAggregator.java,87,,"        entities[0] = createEntity(""cluster1"", ""dc1"", ""rack123"", 12, 2);"
74449,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestHierarchicalAggregator.java,87,,"        entities[0] = createEntity(""cluster1"", ""dc1"", ""rack123"", 12, 2);"
74450,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestHierarchicalAggregator.java,87,,"        entities[0] = createEntity(""cluster1"", ""dc1"", ""rack123"", 12, 2);"
74451,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestHierarchicalAggregator.java,89,,"        entities[2] = createEntity(""cluster1"", ""dc1"", ""rack128"", 10, 0);"
74452,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestHierarchicalAggregator.java,90,,"        entities[3] = createEntity(""cluster2"", ""dc1"", ""rack125"", 9, 2);"
74453,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestHierarchicalAggregator.java,90,,"        entities[3] = createEntity(""cluster2"", ""dc1"", ""rack125"", 9, 2);"
74454,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestHierarchicalAggregator.java,91,,"        entities[4] = createEntity(""cluster2"", ""dc1"", ""rack126"", 15, 2);"
74455,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestHierarchicalAggregator.java,92,,"        HierarchicalAggregator agg = new HierarchicalAggregator(new ArrayList<String>(), Arrays.asList(AggregateFunctionType.sum), Arrays.asList(""numHosts""));"
74456,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestHierarchicalAggregator.java,98,,"            writeToJson(""After aggregate"", result);"
74457,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestHierarchicalAggregator.java,108,,"            writeToJson(""After sort"" ,result);"
74458,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestHierarchicalAggregator.java,113,,"            LOG.error(""Can not aggregate"", ex);"
74459,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestHierarchicalAggregator.java,123,,"        entities[2] = createEntity(""cluster1"", ""dc2"", ""rack128"", 10, 0);"
74460,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestPostFlatAggregateSort.java,75,,"            logger.error(""fail with mapping"", ex);"
74461,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestTimeSeriesAggregator.java,55,,"        entities[0] = createEntity(""cluster1"", ""dc1"", ""rack123"", 12, 2, 1386120000*1000); // bucket 0"
74462,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestTimeSeriesAggregator.java,55,,"        entities[0] = createEntity(""cluster1"", ""dc1"", ""rack123"", 12, 2, 1386120000*1000); // bucket 0"
74463,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestTimeSeriesAggregator.java,58,,"        entities[3] = createEntity(""cluster2"", ""dc1"", ""rack125"", 9,   2, 1386122122*1000); // bucket 35"
74464,./TargetProjects/eagle/eagle-core/eagle-query/eagle-query-base/src/test/java/org/apache/eagle/query/aggregate/test/TestTimeSeriesAggregator.java,89,,"            LOG.error(""Can not aggregate"", ex);"
74465,./TargetProjects/eagle/eagle-core/eagle-query/eagle-service-base/src/main/java/org/apache/eagle/service/generic/GenericEntityServiceResource.java,87,,"                LOG.error(""Data storage is null"");"
74466,./TargetProjects/eagle/eagle-core/eagle-query/eagle-service-base/src/main/java/org/apache/eagle/service/generic/GenericEntityServiceResource.java,122,,"                                                 @QueryParam(""serviceName"") String serviceName){"
74467,./TargetProjects/eagle/eagle-core/eagle-query/eagle-service-base/src/main/java/org/apache/eagle/service/generic/GenericEntityServiceResource.java,131,,"                throw new IllegalArgumentException(""entity definition of service ""+serviceName+"" not found"");"
74468,./TargetProjects/eagle/eagle-core/eagle-query/eagle-service-base/src/main/java/org/apache/eagle/service/generic/GenericEntityServiceResource.java,131,,"                throw new IllegalArgumentException(""entity definition of service ""+serviceName+"" not found"");"
74469,./TargetProjects/eagle/eagle-core/eagle-query/eagle-service-base/src/main/java/org/apache/eagle/service/generic/GenericEntityServiceResource.java,163,,"    public GenericServiceAPIResponseEntity create(@FormDataParam(""file"") InputStream fileInputStream,"
74470,./TargetProjects/eagle/eagle-core/eagle-query/eagle-service-base/src/main/java/org/apache/eagle/service/generic/ListQueryResource.java,51,,"	public ListQueryAPIResponseEntity listQuery(@QueryParam(""query"") String query,"
74471,./TargetProjects/eagle/eagle-core/eagle-query/eagle-service-base/src/main/java/org/apache/eagle/service/generic/ListQueryResource.java,52,,"												@QueryParam(""startTime"") String startTime, @QueryParam(""endTime"") String endTime,"
74472,./TargetProjects/eagle/eagle-core/eagle-query/eagle-service-base/src/main/java/org/apache/eagle/service/generic/ListQueryResource.java,52,,"												@QueryParam(""startTime"") String startTime, @QueryParam(""endTime"") String endTime,"
74473,./TargetProjects/eagle/eagle-core/eagle-query/eagle-service-base/src/main/java/org/apache/eagle/service/generic/ListQueryResource.java,53,,"												@QueryParam(""pageSize"") int pageSize, @QueryParam(""startRowkey"") String startRowkey,"
74474,./TargetProjects/eagle/eagle-core/eagle-query/eagle-service-base/src/main/java/org/apache/eagle/service/generic/ListQueryResource.java,53,,"												@QueryParam(""pageSize"") int pageSize, @QueryParam(""startRowkey"") String startRowkey,"
74475,./TargetProjects/eagle/eagle-core/eagle-query/eagle-service-base/src/main/java/org/apache/eagle/service/generic/ListQueryResource.java,54,,"												@QueryParam(""treeAgg"") boolean treeAgg, @QueryParam(""timeSeries"") boolean timeSeries,"
74476,./TargetProjects/eagle/eagle-core/eagle-query/eagle-service-base/src/main/java/org/apache/eagle/service/generic/ListQueryResource.java,54,,"												@QueryParam(""treeAgg"") boolean treeAgg, @QueryParam(""timeSeries"") boolean timeSeries,"
74477,./TargetProjects/eagle/eagle-core/eagle-query/eagle-service-base/src/main/java/org/apache/eagle/service/generic/ListQueryResource.java,55,,"												@QueryParam(""intervalmin"") long intervalmin, @QueryParam(""top"") int top,"
74478,./TargetProjects/eagle/eagle-core/eagle-query/eagle-service-base/src/main/java/org/apache/eagle/service/generic/ListQueryResource.java,55,,"												@QueryParam(""intervalmin"") long intervalmin, @QueryParam(""top"") int top,"
74479,./TargetProjects/eagle/eagle-core/eagle-query/eagle-service-base/src/main/java/org/apache/eagle/service/generic/ListQueryResource.java,56,,"												@QueryParam(""filterIfMissing"") boolean filterIfMissing,"
74480,./TargetProjects/eagle/eagle-core/eagle-query/eagle-service-base/src/main/java/org/apache/eagle/service/generic/ListQueryResource.java,57,,"												@QueryParam(""parallel"") int parallel,"
74481,./TargetProjects/eagle/eagle-core/eagle-query/eagle-service-base/src/main/java/org/apache/eagle/service/generic/ListQueryResource.java,264,,"					LOG.info(""Output: ALL"");"
74482,./TargetProjects/eagle/eagle-core/eagle-query/eagle-service-base/src/main/java/org/apache/eagle/service/generic/ListQueryResource.java,266,,"					LOG.info(""Output: "" + StringUtils.join(condition.getOutputFields(), "", ""));"
74483,./TargetProjects/eagle/eagle-core/eagle-query/eagle-service-base/src/test/java/org/apache/eagle/service/generic/TestGenericEntityServiceResource.java,98,,"        EntityDefinition ed = EntityDefinitionManager.getEntityByServiceName(""TestTimeSeriesAPIEntity"");"
74484,./TargetProjects/eagle/eagle-core/eagle-query/eagle-service-base/src/test/java/org/apache/eagle/service/generic/TestGenericEntityServiceResource.java,121,,"        identifiers.add(""test"");"
74485,./TargetProjects/eagle/eagle-core/eagle-query/eagle-service-base/src/test/java/org/apache/eagle/service/generic/TestGenericEntityServiceResource.java,164,,"        GenericServiceAPIResponseEntity responseEntity = resources.client().resource(""/entities/rowkey"").queryParam(""value"", ""test"").queryParam(""serviceName"", ""TestTimeSeriesAPIEntity"").get(GenericServiceAPIResponseEntity.class);"
74486,./TargetProjects/eagle/eagle-core/eagle-query/eagle-service-base/src/test/java/org/apache/eagle/service/generic/TestGenericEntityServiceResource.java,164,,"        GenericServiceAPIResponseEntity responseEntity = resources.client().resource(""/entities/rowkey"").queryParam(""value"", ""test"").queryParam(""serviceName"", ""TestTimeSeriesAPIEntity"").get(GenericServiceAPIResponseEntity.class);"
74487,./TargetProjects/eagle/eagle-core/eagle-query/eagle-service-base/src/test/java/org/apache/eagle/service/generic/TestListQueryResource.java,113,,"			e.getTags().put(""cluster"", ""test4UT"");"
74488,./TargetProjects/eagle/eagle-core/eagle-query/eagle-service-base/src/test/java/org/apache/eagle/service/generic/TestListQueryResource.java,114,,"			e.getTags().put(""datacenter"", ""dc1"");"
74489,./TargetProjects/eagle/eagle-core/eagle-query/eagle-service-base/src/test/java/org/apache/eagle/service/generic/TestListQueryResource.java,142,,"			e.setPrefix(""eagle.metric.test"");"
74490,./TargetProjects/eagle/eagle-core/eagle-query/eagle-service-base/src/test/java/org/apache/eagle/service/generic/TestListQueryResource.java,176,,"		query = ""GenericMetricService[@cluster=\""test4UT\"" AND @datacenter=\""dc1\""]<@cluster>{max(value)}"";"
74491,./TargetProjects/eagle/eagle-core/eagle-query/eagle-service-base/src/test/java/org/apache/eagle/service/generic/TestListQueryResource.java,181,,"		query = ""GenericMetricService[@cluster=\""test4UT\"" AND @datacenter=\""dc1\""]<@cluster>{min(value)}"";"
74492,./TargetProjects/eagle/eagle-core/eagle-query/eagle-service-base/src/test/java/org/apache/eagle/service/generic/TestListQueryResource.java,379,,"		Assert.assertTrue(""Support is null, should success: ""+query,response.isSuccess());"
74493,./TargetProjects/eagle/eagle-core/eagle-query/eagle-storage-base/src/main/java/org/apache/eagle/storage/DataStorageManager.java,50,,"            throw new IllegalDataStorageTypeException(""data storage provider of type: "" + type + "" is null"");"
74494,./TargetProjects/eagle/eagle-core/eagle-query/eagle-storage-hbase/src/main/java/org/apache/eagle/storage/hbase/query/coprocessor/generated/AggregateProtos.java,3916,,"              throw new java.lang.AssertionError(""Can't get here."");"
74495,./TargetProjects/eagle/eagle-core/eagle-query/eagle-storage-hbase/src/main/java/org/apache/eagle/storage/hbase/query/coprocessor/generated/AggregateProtos.java,3926,,"              ""descriptor for wrong service type."");"
74496,./TargetProjects/eagle/eagle-core/eagle-query/eagle-storage-hbase/src/main/java/org/apache/eagle/storage/hbase/tools/CoprocessorTool.java,111,,"        cmdOptions.addOption(""table"", true, ""HBase table name, separated with comma, for example, table1,table2,.."");"
74497,./TargetProjects/eagle/eagle-core/eagle-query/eagle-storage-hbase/src/main/java/org/apache/eagle/storage/hbase/tools/CoprocessorTool.java,112,,"        cmdOptions.addOption(""jar"", true, ""Coprocessor target jar path"");"
74498,./TargetProjects/eagle/eagle-core/eagle-query/eagle-storage-hbase/src/main/java/org/apache/eagle/storage/hbase/tools/CoprocessorTool.java,113,,"        cmdOptions.addOption(""localJar"", true, ""Coprocessor local source jar path"");"
74499,./TargetProjects/eagle/eagle-core/eagle-query/eagle-storage-hbase/src/main/java/org/apache/eagle/storage/hbase/tools/CoprocessorTool.java,114,,"        cmdOptions.addOption(""config"", true, ""Configuration file"");"
74500,./TargetProjects/eagle/eagle-core/eagle-query/eagle-storage-hbase/src/test/java/org/apache/eagle/storage/hbase/aggregate/coprocessor/TestGroupAggregateClient.java,106,,"            e.getTags().put(""cluster"", ""test4UT"");"
74501,./TargetProjects/eagle/eagle-core/eagle-query/eagle-storage-hbase/src/test/java/org/apache/eagle/storage/hbase/aggregate/coprocessor/TestGroupAggregateClient.java,107,,"            e.getTags().put(""datacenter"", ""dc1"");"
74502,./TargetProjects/eagle/eagle-core/eagle-query/eagle-storage-hbase/src/test/java/org/apache/eagle/storage/hbase/aggregate/coprocessor/TestGroupAggregateClient.java,123,,"            EntityDefinition ed = EntityDefinitionManager.getEntityByServiceName(""TestLogAPIEntity"");"
74503,./TargetProjects/eagle/eagle-core/eagle-query/eagle-storage-hbase/src/test/java/org/apache/eagle/storage/hbase/aggregate/coprocessor/TestGroupAggregateClient.java,124,,"            List<GroupbyKeyValue> result = client.aggregate(table, ed, scan, Arrays.asList(""cluster"", ""datacenter""), Arrays.asList(AggregateFunctionType.count), Arrays.asList(""field2"")).getKeyValues();"
74504,./TargetProjects/eagle/eagle-core/eagle-query/eagle-storage-hbase/src/test/java/org/apache/eagle/storage/hbase/aggregate/coprocessor/TestGroupAggregateTimeSeriesClient.java,114,,"            e.getTags().put(""cluster"", ""test4UT"");"
74505,./TargetProjects/eagle/eagle-core/eagle-query/eagle-storage-hbase/src/test/java/org/apache/eagle/storage/hbase/aggregate/coprocessor/TestGroupAggregateTimeSeriesClient.java,115,,"            e.getTags().put(""datacenter"", ""dc1"");"
74506,./TargetProjects/eagle/eagle-core/eagle-query/eagle-storage-hbase/src/test/java/org/apache/eagle/storage/hbase/aggregate/coprocessor/TestGroupAggregateTimeSeriesClient.java,143,,"            List<GroupbyKeyValue> result = client.aggregate(table, ed, scan, Arrays.asList(""cluster"", ""datacenter""), Arrays.asList(AggregateFunctionType.max), Arrays.asList(""field2""), true, startTime, System.currentTimeMillis(), 10).getKeyValues();"
74507,./TargetProjects/eagle/eagle-core/eagle-query/eagle-storage-hbase/src/test/java/org/apache/eagle/storage/hbase/it/CoprocessorITSuite.java,95,,"            e.getTags().put(""cluster"", ""test4UT"");"
74508,./TargetProjects/eagle/eagle-core/eagle-query/eagle-storage-hbase/src/test/java/org/apache/eagle/storage/hbase/it/CoprocessorITSuite.java,96,,"            e.getTags().put(""datacenter"", ""dc1"");"
74509,./TargetProjects/eagle/eagle-core/eagle-query/eagle-storage-hbase/src/test/java/org/apache/eagle/storage/hbase/it/CoprocessorITSuite.java,119,,"            EntityDefinition ed = EntityDefinitionManager.getEntityByServiceName(""TestLogAPIEntity"");"
74510,./TargetProjects/eagle/eagle-core/eagle-query/eagle-storage-hbase/src/test/java/org/apache/eagle/storage/hbase/it/CoprocessorITSuite.java,123,,"                    Collections.singletonList(""field2"")).getKeyValues();"
74511,./TargetProjects/eagle/eagle-core/eagle-query/eagle-storage-jdbc/src/main/java/org/apache/eagle/storage/jdbc/entity/impl/JdbcEntityReaderImpl.java,81,,"            LOG.error(""Failed to query by: ""+displaySql+"", due to: ""+ex.getMessage(),ex);"
74512,./TargetProjects/eagle/eagle-core/eagle-query/eagle-storage-jdbc/src/test/java/org/apache/eagle/storage/jdbc/criteria/TestQueryCriteriaBuilder.java,50,,"        rawQuery.setStartTime(""2015-01-06 01:40:02"");"
74513,./TargetProjects/eagle/eagle-core/eagle-query/eagle-storage-jdbc/src/test/java/org/apache/eagle/storage/jdbc/criteria/TestTorque.java,47,,"        configuration.addProperty(""torque.database.default"",""eagle"");"
74514,./TargetProjects/eagle/eagle-core/eagle-query/eagle-storage-jdbc/src/test/java/org/apache/eagle/storage/jdbc/criteria/TestTorque.java,63,,"        crit.addSelectColumn(new ColumnImpl(""column1""));"
74515,./TargetProjects/eagle/eagle-jpm/eagle-jpm-aggregation/src/main/java/org/apache/eagle/jpm/aggregation/state/AggregationTimeManager.java,73,,"                return Long.parseLong(new String(curator.getData().forPath(path), ""UTF-8""));"
74516,./TargetProjects/eagle/eagle-jpm/eagle-jpm-mr-history/src/main/java/org/apache/eagle/jpm/mr/history/zkres/JobHistoryZKStateManager.java,137,,"                    String date = new String(curator.getData().forPath(path + ""/"" + partition), ""UTF-8"");"
74517,./TargetProjects/eagle/eagle-jpm/eagle-jpm-mr-running/src/test/java/org/apache/eagle/jpm/mr/running/MRRunningJobApplicationTest.java,105,,"        Assert.assertTrue(appIdToMRJobParser.get(""application_1479206441898_30784"") != null);"
74518,./TargetProjects/eagle/eagle-jpm/eagle-jpm-mr-running/src/test/java/org/apache/eagle/jpm/mr/running/MRRunningJobApplicationTest.java,119,,"        Assert.assertTrue(appIdToMRJobParser1.get(""application_1479206441898_35341"") != null);"
74519,./TargetProjects/eagle/eagle-jpm/eagle-jpm-mr-running/src/test/java/org/apache/eagle/jpm/mr/running/MRRunningJobManagerTest.java,117,,"                        mrRunningJobManager.delete(""yarnAppId"", ""jobId"");"
74520,./TargetProjects/eagle/eagle-jpm/eagle-jpm-mr-running/src/test/java/org/apache/eagle/jpm/mr/running/parser/MRJobParserTest.java,117,,"        mockInputJobSteam(""/mrjob_30784.json"", JOB_URL);"
74521,./TargetProjects/eagle/eagle-jpm/eagle-jpm-mr-running/src/test/java/org/apache/eagle/jpm/mr/running/parser/MRJobParserTest.java,119,,"        mockGetConnection(""/mrconf_30784.xml"");"
74522,./TargetProjects/eagle/eagle-jpm/eagle-jpm-mr-running/src/test/java/org/apache/eagle/jpm/mr/running/parser/MRJobParserTest.java,126,,"        InputStream previousmrrunningapp = this.getClass().getResourceAsStream(""/previousmrrunningapp.json"");"
74523,./TargetProjects/eagle/eagle-jpm/eagle-jpm-service/src/main/java/org/apache/eagle/service/jpm/MRJobExecutionResource.java,130,,"                                                          @QueryParam(""site"") String site) {"
74524,./TargetProjects/eagle/eagle-jpm/eagle-jpm-service/src/main/java/org/apache/eagle/service/jpm/MRTaskExecutionResource.java,48,,"    public MRJobTaskCountResponse.TaskCountPerJobResponse getTaskCountsGroupByDuration(@QueryParam(""site"") String site,"
74525,./TargetProjects/eagle/eagle-jpm/eagle-jpm-service/src/main/java/org/apache/eagle/service/jpm/MRTaskExecutionResource.java,63,,"        String query = String.format(""%s[@site=\""%s\"" AND @jobId=\""%s\""]{*}"", Constants.MR_TASK_EXECUTION_SERVICE_NAME, site, jobId);"
74526,./TargetProjects/eagle/eagle-jpm/eagle-jpm-service/src/test/java/org/apache/eagle/service/jpm/count/TestMRJobCountImpl.java,69,,"        helper.countJob(jobCounts, 5, 10, intervalSecs, ""hive"");"
74527,./TargetProjects/eagle/eagle-jpm/eagle-jpm-spark-history/src/main/java/org/apache/eagle/jpm/spark/history/crawl/JHFSparkEventReader.java,162,,"        long appStartTime = JSONUtils.getLong(event, ""Timestamp"", lastEventTime);"
74528,./TargetProjects/eagle/eagle-jpm/eagle-jpm-spark-history/src/main/java/org/apache/eagle/jpm/spark/history/crawl/JHFSparkEventReader.java,182,,"        String executorID = (String) event.get(""Executor ID"");"
74529,./TargetProjects/eagle/eagle-jpm/eagle-jpm-spark-history/src/main/java/org/apache/eagle/jpm/spark/history/crawl/JHFSparkEventReader.java,270,,"        task.getTags().put(SparkJobTagName.SPARK_SATGE_ID.toString(), Long.toString(JSONUtils.getLong(event, ""Stage ID"")));"
74530,./TargetProjects/eagle/eagle-jpm/eagle-jpm-spark-history/src/main/java/org/apache/eagle/jpm/spark/history/crawl/JHFSparkEventReader.java,271,,"        task.getTags().put(SparkJobTagName.SPARK_STAGE_ATTEMPT_ID.toString(), Long.toString(JSONUtils.getLong(event, ""Stage Attempt ID"")));"
74531,./TargetProjects/eagle/eagle-jpm/eagle-jpm-spark-history/src/main/java/org/apache/eagle/jpm/spark/history/status/JobHistoryZKStateManager.java,114,,"                            curator.setData().forPath(path, ZKStateConstant.AppStatus.INIT.toString().getBytes(""UTF-8""));"
74532,./TargetProjects/eagle/eagle-jpm/eagle-jpm-spark-history/src/main/java/org/apache/eagle/jpm/spark/history/status/JobHistoryZKStateManager.java,137,,"        String appPath = zkRoot + ""/jobs/"" + appId + ""/info"";"
74533,./TargetProjects/eagle/eagle-jpm/eagle-jpm-spark-running/src/main/java/org/apache/eagle/jpm/spark/running/parser/SparkApplicationParser.java,290,,"            LOG.warn(""fetch spark application from {} failed, {}"", appURL, e);"
74534,./TargetProjects/eagle/eagle-jpm/eagle-jpm-util/src/main/java/org/apache/eagle/jpm/util/jobrecover/RunningJobManager.java,134,,"                LOG.error(""fail releasing lock"", e);"
74535,./TargetProjects/eagle/eagle-jpm/eagle-jpm-util/src/test/java/org/apache/eagle/jpm/util/JSONUtilsTest.java,53,,"        Assert.assertEquals(2000, JSONUtils.getLong(jsonObject, ""salary""));"
74536,./TargetProjects/eagle/eagle-jpm/eagle-jpm-util/src/test/java/org/apache/eagle/jpm/util/resourcefetch/RMResourceFetcherTest.java,44,,"        String[] rmBasePaths = new String[]{""http://www.xxx.com:8088"", ""http://www.yyy.com:8088""};"
74537,./TargetProjects/eagle/eagle-jpm/eagle-jpm-util/src/test/java/org/apache/eagle/jpm/util/resourcefetch/RMResourceFetcherTest.java,44,,"        String[] rmBasePaths = new String[]{""http://www.xxx.com:8088"", ""http://www.yyy.com:8088""};"
74538,./TargetProjects/eagle/eagle-jpm/eagle-jpm-util/src/test/java/org/apache/eagle/jpm/util/resourcefetch/RMResourceFetcherTest.java,48,,"        when(InputStreamUtils.getInputStream(""http://www.xxx.com:8088/ws/v1/cluster?anonymous=true"", null, Constants.CompressionType.NONE)).thenReturn(clusterInfoStream);"
74539,./TargetProjects/eagle/eagle-jpm/eagle-jpm-util/src/test/java/org/apache/eagle/jpm/util/resourcefetch/ha/HAURLSelectorImplTest.java,46,,"        String[] rmBasePaths = new String[]{""http://www.xxx.com:8088"", ""http://www.yyy.com:8088""};"
74540,./TargetProjects/eagle/eagle-jpm/eagle-jpm-util/src/test/java/org/apache/eagle/jpm/util/resourcefetch/ha/HAURLSelectorImplTest.java,46,,"        String[] rmBasePaths = new String[]{""http://www.xxx.com:8088"", ""http://www.yyy.com:8088""};"
74541,./TargetProjects/eagle/eagle-jpm/eagle-jpm-util/src/test/java/org/apache/eagle/jpm/util/resourcefetch/url/JobListServiceURLBuilderImplTest.java,28,,"        String finalUrl = jobListServiceURLBuilderImpl.build(""http://www.xxx.com:8088/"", JobState.RUNNING.toString());"
74542,./TargetProjects/eagle/eagle-jpm/eagle-jpm-util/src/test/java/org/apache/eagle/jpm/util/resourcefetch/url/URLUtilTest.java,27,,"        Assert.assertEquals(""http://www.xxx.com:8088"", url);"
74543,./TargetProjects/eagle/eagle-jpm/eagle-jpm-web/src/test/java/org/apache/eagle/app/jpm/JPMWebApplicationTest.java,46,,"        ApplicationOperations.InstallOperation installDependency1 = new ApplicationOperations.InstallOperation(""test_site"", ""MR_RUNNING_JOB_APP"", ApplicationEntity.Mode.LOCAL);"
74544,./TargetProjects/eagle/eagle-metric/eagle-hbase-web/src/test/org/apache/eagle/metric/HBaseMetricWebApplicationProviderTest.java,45,,"        ApplicationOperations.InstallOperation installDependency1 = new ApplicationOperations.InstallOperation(""test_site"", ""TOPOLOGY_HEALTH_CHECK_APP"", ApplicationEntity.Mode.LOCAL);"
74545,./TargetProjects/eagle/eagle-metric/eagle-hdfs-web/src/test/org/apache/eagle/metric/HdfsMetricWebApplicationProviderTest.java,46,,"        ApplicationOperations.InstallOperation installDependency1 = new ApplicationOperations.InstallOperation(""test_site"", ""TOPOLOGY_HEALTH_CHECK_APP"", ApplicationEntity.Mode.LOCAL);"
74546,./TargetProjects/eagle/eagle-security/eagle-security-common/src/main/java/org/apache/eagle/security/service/SecurityExternalMetadataResource.java,43,,"    @Produces(""application/json"")"
74547,./TargetProjects/eagle/eagle-security/eagle-security-hdfs-auditlog/src/test/java/org/apache/eagle/security/auditlog/TestSiddhiPattern.java,56,,"        inputHandler.send(new Object[]{curTime, ""user"", ""/tmp/private"", ""getfileinfo""});"
74548,./TargetProjects/eagle/eagle-security/eagle-security-hdfs-auditlog/src/test/java/org/apache/eagle/security/auditlog/TestSiddhiPattern.java,56,,"        inputHandler.send(new Object[]{curTime, ""user"", ""/tmp/private"", ""getfileinfo""});"
74549,./TargetProjects/eagle/eagle-security/eagle-security-hdfs-auditlog/src/test/java/org/apache/eagle/security/auditlog/TestSiddhiPattern.java,56,,"        inputHandler.send(new Object[]{curTime, ""user"", ""/tmp/private"", ""getfileinfo""});"
74550,./TargetProjects/eagle/eagle-security/eagle-security-hdfs-auditlog/src/test/java/org/apache/eagle/security/auditlog/TestSiddhiPattern.java,57,,"        inputHandler.send(new Object[]{curTime, ""user"", ""/tmp/private"", ""append""});"
74551,./TargetProjects/eagle/eagle-security/eagle-security-hdfs-auditlog/src/test/java/org/apache/eagle/security/auditlog/TestSiddhiPattern.java,58,,"        inputHandler.send(new Object[]{curTime, ""user"", ""/tmp/private1"", ""getfileinfo""});"
74552,./TargetProjects/eagle/eagle-security/eagle-security-hdfs-auditlog/src/test/java/org/apache/eagle/security/auditlog/TestUserCommandReassembler.java,88,,"        assembler.flatMap(Arrays.asList(""user1"", parseEvent(e1)), collector);"
74553,./TargetProjects/eagle/eagle-security/eagle-security-hive-web/src/test/java/org/apache/eagle/service/security/hive/TestHiveMetadataDAO.java,30,,"        config.setUser(""hive"");"
74554,./TargetProjects/eagle/eagle-security/eagle-security-hive-web/src/test/java/org/apache/eagle/service/security/hive/TestHiveMetadataDAO.java,34,,"        System.out.println(impl.getTables(""xademo""));"
74555,./TargetProjects/eagle/eagle-security/eagle-security-hive/src/test/java/org/apache/eagle/security/hive/ql/TestParser.java,80,,"    String expectedOperation = ""SELECT"";"
74556,./TargetProjects/eagle/eagle-security/eagle-security-hive/src/test/java/org/apache/eagle/security/hive/ql/TestParser.java,81,,"    String expectedInsertTable = ""TOK_TMP_FILE"";"
74557,./TargetProjects/eagle/eagle-security/eagle-security-oozie-web/src/main/java/org/apache/eagle/service/security/oozie/dao/OozieSensitivityMetadataDAOImpl.java,48,,"            if (entity.getTags().containsKey(""oozieResource"")) {"
74558,./TargetProjects/eagle/eagle-security/eagle-security-oozie-web/src/test/java/org/apache/eagle/service/security/oozie/dao/TestOozieSensitivityMetadataDAOImpl.java,44,,"        String[] sites = new String[]{""test"", ""test""};"
74559,./TargetProjects/eagle/eagle-security/eagle-security-oozie-web/src/test/java/org/apache/eagle/service/security/oozie/dao/TestOozieSensitivityMetadataDAOImpl.java,50,,"        Assert.assertTrue(allOozieSensitivityMap.get(""test"").containsKey(""0007197-160509174709457-oozie-oozi-C""));"
74560,./TargetProjects/eagle/eagle-security/eagle-security-oozie-web/src/test/java/org/apache/eagle/service/security/oozie/dao/TestOozieSensitivityMetadataDAOImpl.java,51,,"        Assert.assertEquals(""pms job"", allOozieSensitivityMap.get(""test"").get(""0007197-160509174709457-oozie-oozi-C""));"
74561,./TargetProjects/eagle/eagle-security/eagle-security-oozie-web/src/test/java/org/apache/eagle/service/security/oozie/dao/TestOozieSensitivityMetadataDAOImpl.java,52,,"        Assert.assertTrue(allOozieSensitivityMap.get(""test"").containsKey(""0007189-160509174709457-oozie-oozi-C""));"
74562,./TargetProjects/eagle/eagle-security/eagle-security-oozie-web/src/test/java/org/apache/eagle/service/security/oozie/dao/TestOozieSensitivityMetadataDAOImpl.java,53,,"        Assert.assertEquals(""tandem job"", allOozieSensitivityMap.get(""test"").get(""0007189-160509174709457-oozie-oozi-C""));"
74563,./TargetProjects/eagle/eagle-security/eagle-security-oozie-web/src/test/java/org/apache/eagle/service/security/oozie/dao/TestOozieSensitivityMetadataDAOImpl.java,60,,"        String[] sites = new String[]{""test"", ""test1""};"
74564,./TargetProjects/eagle/eagle-server/src/test/java/org/apache/eagle/server/security/authenticator/LdapBasicAuthenticatorTest.java,78,,"        String username = ""username"";"
74565,./TargetProjects/eagle/eagle-server/src/test/java/org/apache/eagle/server/security/authenticator/LdapBasicAuthenticatorTest.java,79,,"        String secretPhrase = ""secret-phrase"";"
74566,./TargetProjects/eagle/eagle-server/src/test/java/org/apache/eagle/server/security/resource/BasicAuthenticationTestCase.java,45,,"            .header(""Authorization"", USER_AUTH_KEY)"
74567,./TargetProjects/empire-db/empire-db-codegen/src/main/java/org/apache/empire/db/codegen/CodeGenParser.java,403,,"		DataType empireType = getEmpireDataType(rs.getInt(""DATA_TYPE""));"
74568,./TargetProjects/empire-db/empire-db-codegen/src/main/java/org/apache/empire/db/codegen/CodeGenWriter.java,210,,"		File file = new File(baseDir, config.getDbClassName() + "".java"");"
74569,./TargetProjects/empire-db/empire-db-codegen/src/main/java/org/apache/empire/db/codegen/CodeGenWriter.java,213,,"		context.put(""parser"", writerService);"
74570,./TargetProjects/empire-db/empire-db-codegen/src/main/java/org/apache/empire/db/codegen/CodeGenWriter.java,215,,"		context.put(""basePackageName"", config.getPackageName());"
74571,./TargetProjects/empire-db/empire-db-codegen/src/main/java/org/apache/empire/db/codegen/CodeGenWriter.java,216,,"		context.put(""dbClassName"", config.getDbClassName());"
74572,./TargetProjects/empire-db/empire-db-codegen/src/main/java/org/apache/empire/db/codegen/CodeGenWriter.java,217,,"		context.put(""tablePackageName"", config.getTablePackageName());"
74573,./TargetProjects/empire-db/empire-db-codegen/src/main/java/org/apache/empire/db/codegen/CodeGenWriter.java,221,,"		context.put(""baseTableClassName"", config.getTableBaseName());"
74574,./TargetProjects/empire-db/empire-db-examples/empire-db-example-advanced/src/main/java/org/apache/empire/samples/db/advanced/SampleAdvApp.java,151,,"            System.out.println(""--------------------------------------------------------"");"
74575,./TargetProjects/empire-db/empire-db-jsf2/src/main/java/org/apache/empire/jsf2/components/ControlTag.java,153,,"            String colSpan = helper.getTagAttributeString(""colspan"");"
74576,./TargetProjects/empire-db/empire-db-jsf2/src/main/java/org/apache/empire/jsf2/controls/InputControl.java,72,,"    public static final String  HTML_ATTR_STYLE       = ""style"";"
74577,./TargetProjects/empire-db/empire-db-jsf2/src/main/java/org/apache/empire/jsf2/pages/PageELResolver.java,50,,"        if (base==null && property.equals(""page""))"
74578,./TargetProjects/empire-db/empire-db-jsf2/src/main/java/org/apache/empire/jsf2/utils/TagEncodingHelper.java,199,,"                throw new InvalidArgumentException(""column"", resolver);"
74579,./TargetProjects/empire-db/empire-db-jsf2/src/main/java/org/apache/empire/jsf2/utils/TagEncodingHelper.java,535,,"        Object rec = getTagAttributeValue(""record"");"
74580,./TargetProjects/empire-db/empire-db-jsf2/src/main/java/org/apache/empire/jsf2/utils/TagEncodingHelper.java,716,,"                    value = findValueExpression(""value"", false);"
74581,./TargetProjects/empire-db/empire-db-struts2/src/main/java/org/apache/empire/struts2/html/DefaultHtmlTagDictionary.java,34,,"    private static final FlexDivRenderInfo flexDivDefault = new FlexDivRenderInfo(""div"", null, null, null);"
74582,./TargetProjects/empire-db/empire-db-struts2/src/main/java/org/apache/empire/struts2/html/DefaultHtmlTagDictionary.java,127,,"        return ""span"";"
74583,./TargetProjects/empire-db/empire-db-struts2/src/main/java/org/apache/empire/struts2/html/DefaultHtmlTagDictionary.java,439,,"        return ""&nbsp;"";"
74584,./TargetProjects/empire-db/empire-db-struts2/src/main/java/org/apache/empire/struts2/jsp/components/CalendarComponent.java,97,,"            table.addAttribute(""class"", this.cssClass);"
74585,./TargetProjects/empire-db/empire-db-struts2/src/main/java/org/apache/empire/struts2/jsp/components/InputControlComponent.java,109,,"            label.addAttribute(""class"", StringUtils.coalesce(this.labelClass, this.cssClass));"
74586,./TargetProjects/empire-db/empire-db-struts2/src/main/java/org/apache/empire/struts2/web/UrlHelperEx.java,43,,"    @SuppressWarnings(""rawtypes"")"
74587,./TargetProjects/empire-db/empire-db-struts2/src/main/java/org/apache/empire/struts2/web/UrlHelperEx.java,81,,"                    if ((scheme.equals(""http"") && (httpPort != DEFAULT_HTTP_PORT)) || (scheme.equals(""https"") && httpsPort != DEFAULT_HTTPS_PORT)) {"
74588,./TargetProjects/empire-db/empire-db-struts2/src/main/java/org/apache/empire/struts2/web/portlet/PortletRequestWrapper.java,89,,"    @SuppressWarnings(""unchecked"")"
74589,./TargetProjects/empire-db/empire-db-struts2/src/main/java/org/apache/empire/struts2/web/servlet/ServletRequestWrapper.java,88,,"    @SuppressWarnings(""unchecked"")"
74590,./TargetProjects/empire-db/empire-db/src/main/java/org/apache/empire/commons/ObjectUtils.java,911,,"            throw new InvalidArgumentException(""object"", object);"
74591,./TargetProjects/empire-db/empire-db/src/main/java/org/apache/empire/db/DBDDLGenerator.java,230,,"                    throw new NotImplementedException(this, ""getDDLScript."" + dbo.getClass().getName() + ""."" + type);"
74592,./TargetProjects/empire-db/empire-db/src/main/java/org/apache/empire/db/DBDatabase.java,886,,"                log.debug(""Executing: "" + sqlCmd);"
74593,./TargetProjects/empire-db/empire-db/src/main/java/org/apache/empire/db/DBDatabase.java,890,,"                throw new UnexpectedReturnValueException(rs, ""driver.executeQuery()"");"
74594,./TargetProjects/empire-db/empire-db/src/main/java/org/apache/empire/db/DBDatabase.java,904,,"                log.warn(""Long running query took {} seconds for statement {}."", queryTime / 1000, sqlCmd);"
74595,./TargetProjects/empire-db/empire-db/src/main/java/org/apache/empire/db/DBDatabase.java,1425,,"                throw new InvalidArgumentException(""conn"", conn);"
74596,./TargetProjects/empire-db/empire-db/src/main/java/org/apache/empire/db/DBRecord.java,391,,"            throw new InvalidArgumentException(""index"", index);"
74597,./TargetProjects/empire-db/empire-db/src/main/java/org/apache/empire/db/DBRecordData.java,437,,"        {   log.error(bean.getClass().getName() + "": unable to set property '"" + property + ""'"");"
74598,./TargetProjects/empire-db/empire-db/src/main/java/org/apache/empire/db/DBRowSet.java,844,,"                log.error(""updateRecord: ""  + name + "" no primary key defined!"");"
74599,./TargetProjects/empire-db/empire-db/src/main/java/org/apache/empire/db/DBSQLScript.java,167,,"            throw new InvalidArgumentException(""cmd"", cmd);"
74600,./TargetProjects/empire-db/empire-db/src/main/java/org/apache/empire/db/DBSQLScript.java,211,,"            throw new InvalidArgumentException(""index"", i);"
74601,./TargetProjects/empire-db/empire-db/src/main/java/org/apache/empire/db/oracle/OracleDataDictionnary.java,206,,"            log.warn(""WRONG DATA TYPE: \t"" + column.getFullName() + "" is set to "" + column.getDataType() +"
74602,./TargetProjects/empire-db/empire-db/src/main/java/org/apache/empire/db/oracle/OracleDataDictionnary.java,207,,"                     "" instead of "" + colInfo.getDataType());"
74603,./TargetProjects/empire-db/empire-db/src/main/java/org/apache/empire/db/oracle/OracleSYSDatabase.java,51,,"            C_OWNER = addColumn(""OWNER"", DataType.VARCHAR, 50, false);"
74604,./TargetProjects/empire-db/empire-db/src/main/java/org/apache/empire/db/oracle/OracleSYSDatabase.java,52,,"            C_TABLE_NAME = addColumn(""TABLE_NAME"", DataType.VARCHAR, 50, false);"
74605,./TargetProjects/empire-db/empire-db/src/main/java/org/apache/empire/db/validation/DBModelErrorLogger.java,81,,"        DBModelErrorLogger.log.error(""The column "" + col.getFullName() + "" type of {} does not match the database type of {}."", col.getDataType(), type);"
74606,./TargetProjects/empire-db/empire-db/src/test/java/org/apache/empire/commons/AttributesTest.java,49,,"		attributes.set(""test"", Integer.valueOf(123));"
74607,./TargetProjects/empire-db/empire-db/src/test/java/org/apache/empire/commons/ObjectUtilsTest.java,69,,"		assertTrue(ObjectUtils.compareEqual(""abc"", String.valueOf(""abc"")));"
74608,./TargetProjects/empire-db/empire-db/src/test/java/org/apache/empire/commons/ObjectUtilsTest.java,94,,"				return ""JUnit"";"
74609,./TargetProjects/empire-db/empire-db/src/test/java/org/apache/empire/commons/ObjectUtilsTest.java,125,,"		assertEquals(""preferred"", ObjectUtils.coalesce(""preferred"", null));"
74610,./TargetProjects/empire-db/empire-db/src/test/java/org/apache/empire/commons/ObjectUtilsTest.java,143,,"		assertEquals(456, ObjectUtils.getInteger(""456"", 123));"
74611,./TargetProjects/empire-db/empire-db/src/test/java/org/apache/empire/commons/OptionEntryTest.java,31,,"		OptionEntry entry = new OptionEntry(Boolean.TRUE, ""junit"");"
74612,./TargetProjects/empire-db/empire-db/src/test/java/org/apache/empire/commons/OptionsTest.java,54,,"        options.add(new Object(), ""text"", true);"
74613,./TargetProjects/empire-db/empire-db/src/test/java/org/apache/empire/commons/OptionsTest.java,151,,"        options.add(Integer.valueOf(""123""), ""text"", true);"
74614,./TargetProjects/empire-db/empire-db/src/test/java/org/apache/empire/commons/OptionsTest.java,180,,"        options.add(Integer.valueOf(456), ""text2"", true);"
74615,./TargetProjects/empire-db/empire-db/src/test/java/org/apache/empire/commons/OptionsTest.java,279,,"        options.add(Integer.valueOf(1), ""txt"", false);"
74616,./TargetProjects/empire-db/empire-db/src/test/java/org/apache/empire/commons/OptionsTest.java,293,,"        options.add(Integer.valueOf(2), ""txt2"", false);"
74617,./TargetProjects/empire-db/empire-db/src/test/java/org/apache/empire/commons/StringUtilsTest.java,34,,"		assertEquals(""default"",StringUtils.toString(null, ""default""));"
74618,./TargetProjects/empire-db/empire-db/src/test/java/org/apache/empire/commons/StringUtilsTest.java,35,,"		assertEquals(""123"",StringUtils.toString(Long.valueOf(""123""), ""456""));"
74619,./TargetProjects/empire-db/empire-db/src/test/java/org/apache/empire/commons/StringUtilsTest.java,42,,"		assertEquals(""test"",StringUtils.toString(""test""));"
74620,./TargetProjects/empire-db/empire-db/src/test/java/org/apache/empire/commons/StringUtilsTest.java,52,,"		assertEquals(""123/12.3"",StringUtils.toString(new Number[]{Integer.valueOf(""123""), Double.valueOf(""12.3"")}, ""default""));"
74621,./TargetProjects/empire-db/empire-db/src/test/java/org/apache/empire/commons/StringUtilsTest.java,66,,"		assertEquals(""null"",StringUtils.valueOf((Object)null));"
74622,./TargetProjects/empire-db/empire-db/src/test/java/org/apache/empire/commons/StringUtilsTest.java,144,,"		assertEquals(""test null test"", StringUtils.replace(""test null test"", null, """"));"
74623,./TargetProjects/empire-db/empire-db/src/test/java/org/apache/empire/commons/StringUtilsTest.java,145,,"		assertEquals(""test  test"", StringUtils.replace(""test a test"", ""a"", null));"
74624,./TargetProjects/empire-db/empire-db/src/test/java/org/apache/empire/commons/StringUtilsTest.java,146,,"		assertEquals(""test test"", StringUtils.replace(""test test"", """", ""oops""));"
74625,./TargetProjects/empire-db/empire-db/src/test/java/org/apache/empire/commons/StringUtilsTest.java,146,,"		assertEquals(""test test"", StringUtils.replace(""test test"", """", ""oops""));"
74626,./TargetProjects/empire-db/empire-db/src/test/java/org/apache/empire/db/hsql/DBDatabaseDriverHSqlTest.java,63,,"        dep.setValue(db.DEPARTMENT.BUSINESS_UNIT, ""test"");"
74627,./TargetProjects/empire-db/empire-db/src/test/java/org/apache/empire/db/mysql/DBDatabaseDriverMySQLTest.java,74,,"        assertEquals(""CAST(? AS UNSIGNED)"", driver.getConvertPhrase(DataType.BOOL, null, ""test""));"
74628,./TargetProjects/empire-db/empire-db/src/test/java/org/apache/empire/db/mysql/DBDatabaseDriverMySQLTest.java,81,,"        assertEquals(""CAST(? AS DECIMAL)"", driver.getConvertPhrase(DataType.DECIMAL, null, null));"
74629,./TargetProjects/empire-db/empire-db/src/test/java/org/apache/empire/db/sqlite/DBDatabaseDriverSQLiteTest.java,64,,"        dep.setValue(db.DEPARTMENT.BUSINESS_UNIT, ""test"");"
74630,./TargetProjects/etch/binding-c/compiler/src/main/java/org/apache/etch/bindings/c/compiler/Compiler.java,621,,"		context.put(""now"", new Date());"
74631,./TargetProjects/etch/binding-c/compiler/src/main/java/org/apache/etch/bindings/c/compiler/Compiler.java,622,,"		context.put(""version"", VERSION);"
74632,./TargetProjects/etch/binding-c/compiler/src/main/java/org/apache/etch/bindings/c/compiler/Compiler.java,623,,"		context.put(""helper"", this);"
74633,./TargetProjects/etch/binding-c/compiler/src/main/java/org/apache/etch/bindings/c/compiler/Compiler.java,624,,"		context.put(""intf"", intf);"
74634,./TargetProjects/etch/binding-c/compiler/src/main/java/org/apache/etch/bindings/c/compiler/Compiler.java,667,,"		context.put(""suffix"", MsgDirHelper.getSuffix(mc).toLowerCase());"
74635,./TargetProjects/etch/binding-c/compiler/src/main/java/org/apache/etch/bindings/c/compiler/Compiler.java,668,,"		context.put(""hasBaseClass"", hasBaseClass);"
74636,./TargetProjects/etch/binding-c/compiler/src/main/java/org/apache/etch/bindings/c/compiler/Compiler.java,717,,"		context.put(""methodList"", new ArrayList<String>());"
74637,./TargetProjects/etch/binding-c/compiler/src/main/java/org/apache/etch/bindings/c/compiler/Compiler.java,1621,,"		if(b.bindingName().equals(""etch_date""))"
74638,./TargetProjects/etch/binding-c/compiler/src/main/java/org/apache/etch/bindings/c/compiler/Compiler.java,1623,,"		if(b.bindingName().equals(""etch_arraylist""))"
74639,./TargetProjects/etch/binding-c/compiler/src/main/java/org/apache/etch/bindings/c/compiler/Compiler.java,1625,,"		if(b.bindingName().equals(""etch_hashtable""))"
74640,./TargetProjects/etch/binding-c/compiler/src/main/java/org/apache/etch/bindings/c/compiler/Compiler.java,1627,,"		if(b.bindingName().equals(""etch_set""))"
74641,./TargetProjects/etch/binding-cpp/compiler/src/main/java/org/apache/etch/bindings/cpp/compiler/Compiler.java,395,,"    context.put(""now"", new Date());"
74642,./TargetProjects/etch/binding-cpp/compiler/src/main/java/org/apache/etch/bindings/cpp/compiler/Compiler.java,396,,"    context.put(""version"", VERSION);"
74643,./TargetProjects/etch/binding-cpp/compiler/src/main/java/org/apache/etch/bindings/cpp/compiler/Compiler.java,397,,"    context.put(""helper"", this);"
74644,./TargetProjects/etch/binding-cpp/compiler/src/main/java/org/apache/etch/bindings/cpp/compiler/Compiler.java,398,,"    context.put(""intf"", intf);"
74645,./TargetProjects/etch/binding-cpp/compiler/src/main/java/org/apache/etch/bindings/cpp/compiler/Compiler.java,400,,"    context.put(""suffix"", MsgDirHelper.getSuffix(mc).toLowerCase());"
74646,./TargetProjects/etch/binding-cpp/compiler/src/main/java/org/apache/etch/bindings/cpp/compiler/Compiler.java,401,,"    context.put(""hasBaseClass"", hasBaseClass);"
74647,./TargetProjects/etch/binding-cpp/compiler/src/main/java/org/apache/etch/bindings/cpp/compiler/Compiler.java,642,,"    context.put(""inc"", this.getVfName(intf) + fnSuffixH);"
74648,./TargetProjects/etch/binding-cpp/compiler/src/main/java/org/apache/etch/bindings/cpp/compiler/Compiler.java,644,,"    context.put(""namespace"", this.cppNamespace(intf));"
74649,./TargetProjects/etch/binding-cpp/compiler/src/main/java/org/apache/etch/bindings/cpp/compiler/Compiler.java,745,,"    context.put(""methodList"", new ArrayList<String>());"
74650,./TargetProjects/etch/binding-csharp/compiler/src/main/java/org/apache/etch/bindings/csharp/compiler/Compiler.java,388,,"		context.put(""now"", new Date());"
74651,./TargetProjects/etch/binding-csharp/compiler/src/main/java/org/apache/etch/bindings/csharp/compiler/Compiler.java,389,,"		context.put(""version"", VERSION);"
74652,./TargetProjects/etch/binding-csharp/compiler/src/main/java/org/apache/etch/bindings/csharp/compiler/Compiler.java,390,,"		context.put(""helper"", this);"
74653,./TargetProjects/etch/binding-csharp/compiler/src/main/java/org/apache/etch/bindings/csharp/compiler/Compiler.java,391,,"		context.put(""intf"", intf);"
74654,./TargetProjects/etch/binding-csharp/compiler/src/main/java/org/apache/etch/bindings/csharp/compiler/Compiler.java,393,,"		context.put(""suffix"", MsgDirHelper.getSuffix(mc).toLowerCase());"
74655,./TargetProjects/etch/binding-csharp/compiler/src/main/java/org/apache/etch/bindings/csharp/compiler/Compiler.java,394,,"		context.put(""hasBaseClass"", hasBaseClass);"
74656,./TargetProjects/etch/binding-csharp/compiler/src/main/java/org/apache/etch/bindings/csharp/compiler/Compiler.java,1059,,"		return moduleName + ""."" + ""types"" + ""."" + serviceName + ""."" + enumName;"
74657,./TargetProjects/etch/binding-go/compiler/src/main/java/org/apache/etch/bindings/go/compiler/Compiler.java,363,,"		context.put(""now"", new Date());"
74658,./TargetProjects/etch/binding-go/compiler/src/main/java/org/apache/etch/bindings/go/compiler/Compiler.java,364,,"		context.put(""version"", VERSION);"
74659,./TargetProjects/etch/binding-go/compiler/src/main/java/org/apache/etch/bindings/go/compiler/Compiler.java,365,,"		context.put(""helper"", this);"
74660,./TargetProjects/etch/binding-go/compiler/src/main/java/org/apache/etch/bindings/go/compiler/Compiler.java,366,,"		context.put(""intf"", intf);"
74661,./TargetProjects/etch/binding-go/compiler/src/main/java/org/apache/etch/bindings/go/compiler/Compiler.java,368,,"		context.put(""suffix"", MsgDirHelper.getSuffix(mc).toLowerCase());"
74662,./TargetProjects/etch/binding-go/compiler/src/main/java/org/apache/etch/bindings/go/compiler/Compiler.java,369,,"		context.put(""hasBaseClass"", hasBaseClass);"
74663,./TargetProjects/etch/binding-java/compiler/src/main/java/org/apache/etch/bindings/java/compiler/Compiler.java,369,,"		context.put(""now"", new Date());"
74664,./TargetProjects/etch/binding-java/compiler/src/main/java/org/apache/etch/bindings/java/compiler/Compiler.java,370,,"		context.put(""version"", VERSION);"
74665,./TargetProjects/etch/binding-java/compiler/src/main/java/org/apache/etch/bindings/java/compiler/Compiler.java,371,,"		context.put(""helper"", this);"
74666,./TargetProjects/etch/binding-java/compiler/src/main/java/org/apache/etch/bindings/java/compiler/Compiler.java,372,,"		context.put(""intf"", intf);"
74667,./TargetProjects/etch/binding-java/compiler/src/main/java/org/apache/etch/bindings/java/compiler/Compiler.java,374,,"		context.put(""suffix"", MsgDirHelper.getSuffix(mc).toLowerCase());"
74668,./TargetProjects/etch/binding-java/compiler/src/main/java/org/apache/etch/bindings/java/compiler/Compiler.java,375,,"		context.put(""hasBaseClass"", hasBaseClass);"
74669,./TargetProjects/etch/binding-java/runtime/src/main/java/org/apache/etch/bindings/java/support/TransportFactory.java,193,,"				String.format( ""Constructor %s(TransportMessage, URL, Resources) for filter name '%s' failed"","
74670,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/msg/TestComboValidator.java,41,,"		test( 0, ""(int[0] OR boolean[0])"", true, 123456789012L );"
74671,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/msg/TestIdName.java,38,,"		assertEquals( 1, new IdName( 1, ""foo"" ).getId() );"
74672,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/msg/TestIdName.java,39,,"		assertEquals( 1, new IdName( 1, ""bar"" ).getId() );"
74673,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/support/TestDefaultValueFactory.java,49,,"			vf.getType( ""_Etch_RuntimeException"" ),"
74674,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/support/TestDefaultValueFactory.java,54,,"			vf.getType( ""_Etch_AuthException"" ),"
74675,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/support/TestDefaultValueFactory.java,55,,"			vf.getType( ""_exception"" ),"
74676,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/support/TestDefaultValueFactory.java,100,,"			""abc"""
74677,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/support/TestDefaultValueFactory.java,291,,"		Type mt_foo = new Type( ""foo"" );"
74678,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/support/TestRemoteBase.java,48,,"	private final Type mt = new Type( ""foo"" );"
74679,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/support/TestTypeValidator.java,44,,"		MyTypeValidator v = new MyTypeValidator( int.class, null, 0, ""abc"" );"
74680,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/support/TestTypeValidator.java,54,,"		MyTypeValidator v = new MyTypeValidator( boolean.class, null, 0, ""def"" );"
74681,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/support/TestTypeValidator.java,64,,"		MyTypeValidator v = new MyTypeValidator( null, int.class, 1, ""ghi"" );"
74682,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/support/TestValidator_boolean.java,157,,"		testbadvalue( 0, ""abc"" );"
74683,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/support/TestValidator_byte.java,204,,"		testbadvalue( 0, ""abc"" );"
74684,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/support/TestValidator_double.java,160,,"		testbadvalue( 0, ""abc"" );"
74685,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/support/TestValidator_float.java,160,,"		testbadvalue( 0, ""abc"" );"
74686,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/support/TestValidator_int.java,224,,"		testbadvalue( 0, ""abc"" );"
74687,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/support/TestValidator_long.java,228,,"		testbadvalue( 0, ""abc"" );"
74688,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/support/TestValidator_object.java,122,,"		testgoodvalue( 0, ""abc"" );"
74689,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/support/TestValidator_short.java,217,,"		testbadvalue( 0, ""abc"" );"
74690,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/support/TestValidator_string.java,119,,"		testgoodvalue( 0, ""abc"" );"
74691,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/support/TestValidator_void.java,40,,"		test( 0, ""void[0]"", null, 1 );"
74692,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/support/TestValidators.java,209,,"			new String[][] { { ""abc"", ""abc"" }, { ""abc"", ""abc"" } } );"
74693,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/transport/TestArrayValue.java,74,,"		ArrayValue av = new ArrayValue( new Object[] { false, (byte) 1, (short) 2, 3, (long) 4, (float) 1.5, 1.6, ""abc"", null, dt } );"
74694,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/transport/TestMessagizer.java,239,,"		Object QUERY = ""foo"";"
74695,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/transport/TestMessagizer.java,240,,"		Object RESULT = ""bar"";"
74696,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/transport/TestPlainMailboxManager.java,456,,"		Object QUERY = ""foo"";"
74697,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/transport/TestPlainMailboxManager.java,457,,"		Object RESULT = ""bar"";"
74698,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/transport/filters/TestKeepAlive.java,67,,"		String uri = ""tcp://localhost:4801?filter=KeepAlive"";"
74699,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/transport/filters/TestLogger.java,65,,"		String uri = ""tcp://localhost:4802?filter=Logger"";"
74700,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/transport/filters/TestPwAuth.java,71,,"		final PwAuth pwAuth = newPwAuth( ""tcp://fred:1234@host:9999"" );"
74701,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/transport/filters/TestPwAuth.java,97,,"		assertEquals( ""fred"", pwAuth.transportQuery( PwAuth.USER ) );"
74702,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/transport/filters/TestPwAuth.java,98,,"		assertEquals( ""1234"", pwAuth.transportQuery( PwAuth.PASSWORD ) );"
74703,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/transport/filters/TestPwAuth.java,147,,"		final PwAuth pwAuth = newPwAuth( ""tcp://host:9999"" );"
74704,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/transport/fmt/binary/TestBinaryTaggedDataInOut.java,86,,"		BinaryTaggedDataOutput btdo = new BinaryTaggedDataOutput( vf, ""none:"" );"
74705,./TargetProjects/etch/binding-java/runtime/src/test/java/org/apache/etch/bindings/java/transport/fmt/binary/TestBinaryTaggedDataInOut.java,638,,"		@SuppressWarnings(""unused"")"
74706,./TargetProjects/etch/binding-python/compiler/src/main/java/org/apache/etch/bindings/python/compiler/Compiler.java,503,,"		context.put( ""now"", new Date() );"
74707,./TargetProjects/etch/binding-python/compiler/src/main/java/org/apache/etch/bindings/python/compiler/Compiler.java,504,,"		context.put( ""version"", VERSION );"
74708,./TargetProjects/etch/binding-python/compiler/src/main/java/org/apache/etch/bindings/python/compiler/Compiler.java,505,,"		context.put( ""helper"", this );"
74709,./TargetProjects/etch/binding-python/compiler/src/main/java/org/apache/etch/bindings/python/compiler/Compiler.java,506,,"		context.put( ""intf"", intf );"
74710,./TargetProjects/etch/binding-python/compiler/src/main/java/org/apache/etch/bindings/python/compiler/Compiler.java,529,,"		context.put( ""suffix"", MsgDirHelper.getSuffix( mc ) );"
74711,./TargetProjects/etch/binding-python/compiler/src/main/java/org/apache/etch/bindings/python/compiler/Compiler.java,530,,"		context.put( ""hasBaseClass"", hasBaseClass );"
74712,./TargetProjects/etch/binding-python/compiler/src/main/java/org/apache/etch/bindings/python/compiler/Compiler.java,1021,,"		return moduleName + ""."" + ""types"" + ""."" + serviceName + ""."" + enumName;"
74713,./TargetProjects/etch/compiler/src/main/java/org/apache/etch/compiler/EtchHelper.java,358,,"						s = st.nextToken( ""\r\n"" ).trim();"
74714,./TargetProjects/etch/compiler/src/main/java/org/apache/etch/compiler/ast/Extern.java,81,,"		org.apache.etch.compiler.opt.Extern opt = (org.apache.etch.compiler.opt.Extern) getOpt( ""Extern.""+lang );"
74715,./TargetProjects/etch/compiler/src/test/java/org/apache/etch/compiler/TestMapWords.java,236,,"		firstMapping.put(""key18"", ""xkey18"");"
74716,./TargetProjects/etch/compiler/src/test/java/org/apache/etch/compiler/TestMapWords.java,244,,"		firstSecondMapping.put(""key1"", ""foo"");"
74717,./TargetProjects/etch/compiler/src/test/java/org/apache/etch/compiler/TestMapWords.java,289,,"		assertEquals(firstMapping.get(""key2""), myMap.get(""key2""));"
74718,./TargetProjects/etch/compiler/src/test/java/org/apache/etch/compiler/TestMapWords.java,290,,"		assertEquals(firstMapping.get(""key3""), myMap.get(""key3""));"
74719,./TargetProjects/etch/compiler/src/test/java/org/apache/etch/compiler/TestMapWords.java,291,,"		assertEquals(firstMapping.get(""key4""), myMap.get(""key4""));"
74720,./TargetProjects/etch/compiler/src/test/java/org/apache/etch/compiler/TestMapWords.java,294,,"		assertEquals(firstMapping.get(""key6""), myMap.get(""key6""));"
74721,./TargetProjects/etch/compiler/src/test/java/org/apache/etch/compiler/TestMapWords.java,295,,"		assertEquals(firstMapping.get(""key7""), myMap.get(""key7""));"
74722,./TargetProjects/etch/compiler/src/test/java/org/apache/etch/compiler/TestMapWords.java,296,,"		assertEquals(firstMapping.get(""key8""), myMap.get(""key8""));"
74723,./TargetProjects/etch/compiler/src/test/java/org/apache/etch/compiler/TestMapWords.java,297,,"		assertEquals(firstMapping.get(""key10""), myMap.get(""key10""));"
74724,./TargetProjects/etch/compiler/src/test/java/org/apache/etch/compiler/TestMapWords.java,298,,"		assertEquals(firstMapping.get(""key11""), myMap.get(""key11""));"
74725,./TargetProjects/etch/compiler/src/test/java/org/apache/etch/compiler/TestMapWords.java,299,,"		assertEquals(firstMapping.get(""key13""), myMap.get(""key13""));"
74726,./TargetProjects/etch/compiler/src/test/java/org/apache/etch/compiler/TestMapWords.java,300,,"		assertEquals(firstMapping.get(""key14""), myMap.get(""key14""));"
74727,./TargetProjects/etch/compiler/src/test/java/org/apache/etch/compiler/TestMapWords.java,301,,"		assertEquals(firstMapping.get(""key15""), myMap.get(""key15""));"
74728,./TargetProjects/etch/compiler/src/test/java/org/apache/etch/compiler/TestMapWords.java,340,,"		assertEquals(firstMapping.get(""key19""), myMap.get(""key19""));"
74729,./TargetProjects/etch/compiler/src/test/java/org/apache/etch/compiler/TestMapWords.java,341,,"		assertEquals(firstMapping.get(""key20""), myMap.get(""key20""));"
74730,./TargetProjects/etch/compiler/src/test/java/org/apache/etch/compiler/TestMapWords.java,342,,"		assertEquals(firstMapping.get(""key21""), myMap.get(""key21""));"
74731,./TargetProjects/etch/examples/chat/src/main/java/org/apache/etch/examples/chat/MainChatClient.java,172,,"			System.out.println( ""failed: ""+e.getMessage() );"
74732,./TargetProjects/etch/examples/distmap/src/main/java/org/apache/etch/examples/distmap/MainDistributedHashTableClient.java,71,,"		Log.report(""putObject"", ""boolean value"", myBool1);"
74733,./TargetProjects/etch/examples/distmap/src/main/java/org/apache/etch/examples/distmap/MainDistributedHashTableClient.java,103,,"		Log.report(""getObject"", ""myBool1"", myObj);"
74734,./TargetProjects/etch/examples/distmap/src/main/java/org/apache/etch/examples/distmap/MainDistributedHashTableClient.java,128,,"		Log.report(""removeObject"", ""boolean value"", myObj);"
74735,./TargetProjects/etch/examples/distmap/src/test/java/org/apache/etch/examples/distmap/TestRemoteDistributedHashTableServer.java,138,,"		Object myObj = server.putObject(""boolean1"", myBool1);"
74736,./TargetProjects/etch/examples/distmap/src/test/java/org/apache/etch/examples/distmap/TestRemoteDistributedHashTableServer.java,158,,"		Object myObj = server.putObject(""byte1"", myByte1);"
74737,./TargetProjects/etch/examples/distmap/src/test/java/org/apache/etch/examples/distmap/TestRemoteDistributedHashTableServer.java,178,,"		Object myObj = server.putObject(""short1"", myShort1);"
74738,./TargetProjects/etch/examples/distmap/src/test/java/org/apache/etch/examples/distmap/TestRemoteDistributedHashTableServer.java,198,,"		Object myObj = server.putObject(""int1"", myInt1);"
74739,./TargetProjects/etch/examples/distmap/src/test/java/org/apache/etch/examples/distmap/TestRemoteDistributedHashTableServer.java,218,,"		Object myObj = server.putObject(""long1"", myLong1);"
74740,./TargetProjects/etch/examples/distmap/src/test/java/org/apache/etch/examples/distmap/TestRemoteDistributedHashTableServer.java,238,,"		Object myObj = server.putObject(""float1"", myFloat1);"
74741,./TargetProjects/etch/examples/distmap/src/test/java/org/apache/etch/examples/distmap/TestRemoteDistributedHashTableServer.java,258,,"		Object myObj = server.putObject(""double1"", myDouble1);"
74742,./TargetProjects/etch/examples/distmap/src/test/java/org/apache/etch/examples/distmap/TestRemoteDistributedHashTableServer.java,278,,"		Object myObj = server.putObject(""string1"", myString1);"
74743,./TargetProjects/etch/examples/distmap/src/test/java/org/apache/etch/examples/distmap/TestRemoteDistributedHashTableServer.java,307,,"		server.putObject(""string2"", ""xyz"");"
74744,./TargetProjects/etch/examples/distmap/src/test/java/org/apache/etch/examples/distmap/TestRemoteDistributedHashTableServer.java,309,,"		server.putObject(""int2"", 125);"
74745,./TargetProjects/etch/interoptester/src/main/java/org/apache/etch/interoptester/Run.java,158,,"				System.out.println( ""Run.run: name ""+name+"" test ""+test+"", disabled"" );"
74746,./TargetProjects/etch/interoptester/src/main/java/org/apache/etch/interoptester/Run.java,158,,"				System.out.println( ""Run.run: name ""+name+"" test ""+test+"", disabled"" );"
74747,./TargetProjects/etch/interoptester/src/test/java/org/apache/etch/interoptester/TestEnv.java,41,,"		args.put( ""bar"", ""123"" );"
74748,./TargetProjects/etch/interoptester/src/test/java/org/apache/etch/interoptester/TestEnv.java,79,,"		assertEquals( ""foo"", e.name() );"
74749,./TargetProjects/etch/interoptester/src/test/java/org/apache/etch/interoptester/TestParam.java,71,,"		assertEquals( ""foo"", p.name() );"
74750,./TargetProjects/etch/interoptester/src/test/java/org/apache/etch/interoptester/TestRun.java,80,,"		assertEquals( ""foo"", r.test() );"
74751,./TargetProjects/etch/interoptester/src/test/java/org/apache/etch/interoptester/TestRun.java,90,,"		assertEquals( ""bar"", r.test() );"
74752,./TargetProjects/etch/interoptester/src/test/java/org/apache/etch/interoptester/TestRun.java,179,,"		assertEquals( ""234"", test.args.get( ""abc"" ) );"
74753,./TargetProjects/etch/interoptester/src/test/java/org/apache/etch/interoptester/TestRun.java,201,,"		args.put( ""abc"", ""123"" );"
74754,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestInheritance.java,432,,"		@SuppressWarnings(""unchecked"")"
74755,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestInheritanceXml.java,82,,"		String moduleName = list.item(0).getAttributes().getNamedItem(""name"").getNodeValue();"
74756,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestInheritanceXml.java,89,,"		assertTrue(onlyChildNodesOfName(list.item(0), new String[] {""description"", ""service""}));"
74757,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestInheritanceXml.java,162,,"		checkStructProperties(structNode, ""S1"", ""-1054787880"", ""org.apache.etch.tests.Inheritance.S1"", "
74758,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestInheritanceXml.java,164,,"		checkStructValueProperties(structNode, ""a"", ""352988316"", ""a"", ""int"", ""true"", ""false"", null, ""blah about a."");"
74759,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestInheritanceXml.java,164,,"		checkStructValueProperties(structNode, ""a"", ""352988316"", ""a"", ""int"", ""true"", ""false"", null, ""blah about a."");"
74760,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestInheritanceXml.java,164,,"		checkStructValueProperties(structNode, ""a"", ""352988316"", ""a"", ""int"", ""true"", ""false"", null, ""blah about a."");"
74761,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestInheritanceXml.java,169,,"		checkStructProperties(structNode, ""S2"", ""-1054787879"", ""org.apache.etch.tests.Inheritance.S2"", "
74762,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestInheritanceXml.java,176,,"		checkStructProperties(structNode, ""S3"", ""-1054787878"", ""org.apache.etch.tests.Inheritance.S3"", "
74763,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestInheritanceXml.java,249,,"				""none"", ""false"", ""server"", null, ""Blah about f1."", null);"
74764,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestInheritanceXml.java,249,,"				""none"", ""false"", ""server"", null, ""Blah about f1."", null);"
74765,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestInheritanceXml.java,251,,"		checkMethodFieldProperties(methodNode, ""v"", ""352988337"", ""v"", ""object"", ""true"", ""false"", null, ""a value."");"
74766,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestInheritanceXml.java,251,,"		checkMethodFieldProperties(methodNode, ""v"", ""352988337"", ""v"", ""object"", ""true"", ""false"", null, ""a value."");"
74767,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestInheritanceXml.java,251,,"		checkMethodFieldProperties(methodNode, ""v"", ""352988337"", ""v"", ""object"", ""true"", ""false"", null, ""a value."");"
74768,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestInheritanceXml.java,253,,"				""object"", ""true"", ""false"", null, ""the same value."");"
74769,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestInheritanceXml.java,258,,"				""none"", ""true"", ""client"", ""0"", null, ""result"");"
74770,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestInheritanceXml.java,258,,"				""none"", ""true"", ""client"", ""0"", null, ""result"");"
74771,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestInheritanceXml.java,260,,"		checkMethodFieldProperties(methodNode, ""result"", ""-2130379326"", ""result"", "
74772,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestInheritanceXml.java,398,,"		assertTrue(onlyAttrsOfName(structNode, new String[] {""name"", ""typeId"", ""typeName"", ""baseType""}));"
74773,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestInheritanceXml.java,398,,"		assertTrue(onlyAttrsOfName(structNode, new String[] {""name"", ""typeId"", ""typeName"", ""baseType""}));"
74774,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestInheritanceXml.java,398,,"		assertTrue(onlyAttrsOfName(structNode, new String[] {""name"", ""typeId"", ""typeName"", ""baseType""}));"
74775,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestInheritanceXml.java,401,,"		assertTrue(onlyChildNodesOfName(structNode, new String[] {""description"", ""field""}));"
74776,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestInheritanceXml.java,464,,"		assertTrue(onlyAttrsOfName(fieldNode, new String[] {""name"", ""fieldId"", ""fieldName"", ""type"", ""isPrimitiveType"","
74777,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestInheritanceXml.java,464,,"		assertTrue(onlyAttrsOfName(fieldNode, new String[] {""name"", ""fieldId"", ""fieldName"", ""type"", ""isPrimitiveType"","
74778,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestInheritanceXml.java,464,,"		assertTrue(onlyAttrsOfName(fieldNode, new String[] {""name"", ""fieldId"", ""fieldName"", ""type"", ""isPrimitiveType"","
74779,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestInheritanceXml.java,464,,"		assertTrue(onlyAttrsOfName(fieldNode, new String[] {""name"", ""fieldId"", ""fieldName"", ""type"", ""isPrimitiveType"","
74780,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestInheritanceXml.java,465,,"			""isArray"", ""dimension""}));"
74781,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestInheritanceXml.java,465,,"			""isArray"", ""dimension""}));"
74782,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestMixin.java,222,,"		DefaultValueFactory vf = new ValueFactoryBaz( ""tcp:"" );"
74783,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestMixinXml.java,84,,"		String moduleName = list.item(0).getAttributes().getNamedItem(""name"").getNodeValue();"
74784,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestMixinXml.java,91,,"		assertTrue(onlyChildNodesOfName(list.item(0), new String[] {""description"", ""service""}));"
74785,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestMixinXml.java,177,,"		checkStructProperties(structNode, ""FooData"", ""-86983438"", ""org.apache.etch.tests.Foo.FooData"", ""null"", null);"
74786,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestMixinXml.java,178,,"		checkStructValueProperties(structNode, ""code"", ""-325551150"", ""code"", ""int"", ""true"", ""false"", null, null);"
74787,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestMixinXml.java,178,,"		checkStructValueProperties(structNode, ""code"", ""-325551150"", ""code"", ""int"", ""true"", ""false"", null, null);"
74788,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestMixinXml.java,178,,"		checkStructValueProperties(structNode, ""code"", ""-325551150"", ""code"", ""int"", ""true"", ""false"", null, null);"
74789,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestMixinXml.java,180,,"		checkStructValueProperties(structNode, ""barData"", ""-780728328"", ""barData"", ""org.apache.etch.tests.Bar.BarData"", ""false"", ""false"", null, null);"
74790,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestMixinXml.java,180,,"		checkStructValueProperties(structNode, ""barData"", ""-780728328"", ""barData"", ""org.apache.etch.tests.Bar.BarData"", ""false"", ""false"", null, null);"
74791,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestMixinXml.java,180,,"		checkStructValueProperties(structNode, ""barData"", ""-780728328"", ""barData"", ""org.apache.etch.tests.Bar.BarData"", ""false"", ""false"", null, null);"
74792,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestMixinXml.java,181,,"		checkStructValueProperties(structNode, ""bazData"", ""-254148608"", ""bazData"", ""org.apache.etch.tests.Baz.BazData"", ""false"", ""false"", null, null);"
74793,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestMixinXml.java,181,,"		checkStructValueProperties(structNode, ""bazData"", ""-254148608"", ""bazData"", ""org.apache.etch.tests.Baz.BazData"", ""false"", ""false"", null, null);"
74794,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestMixinXml.java,181,,"		checkStructValueProperties(structNode, ""bazData"", ""-254148608"", ""bazData"", ""org.apache.etch.tests.Baz.BazData"", ""false"", ""false"", null, null);"
74795,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestMixinXml.java,243,,"		checkMethodProperties(methodNode, ""foo1"", ""2107096233"", ""org.apache.etch.tests.Foo.foo1"", ""none"", ""false"", ""both"", null, null, null);"
74796,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestMixinXml.java,243,,"		checkMethodProperties(methodNode, ""foo1"", ""2107096233"", ""org.apache.etch.tests.Foo.foo1"", ""none"", ""false"", ""both"", null, null, null);"
74797,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestMixinXml.java,245,,"		checkMethodFieldProperties(methodNode, ""fooData"", ""-1798637973"", ""fooData"", "
74798,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestMixinXml.java,247,,"		checkResult(methodNode, ""222044908"", ""org.apache.etch.tests.Foo._result_foo1"", ""boolean"", ""true"", ""false"", null, null);"
74799,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestMixinXml.java,252,,"				""none"", ""true"", ""both"", ""0"", null, ""result"");"
74800,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestMixinXml.java,254,,"		checkMethodFieldProperties(methodNode, ""result"", ""-2130379326"", ""result"","
74801,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestMixinXml.java,259,,"		checkMethodProperties(methodNode, ""foo2"", ""2107096234"", ""org.apache.etch.tests.Foo.foo2"", ""none"", ""false"", ""server"", null, "
74802,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestMixinXml.java,269,,"				""none"", ""true"", ""client"", ""0"", null, ""result"");"
74803,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestMixinXml.java,397,,"		assertTrue(onlyAttrsOfName(node, new String[] {""name"", ""typeId"", ""typeName""}));"
74804,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestMixinXml.java,397,,"		assertTrue(onlyAttrsOfName(node, new String[] {""name"", ""typeId"", ""typeName""}));"
74805,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestMixinXml.java,479,,"		assertTrue(onlyChildNodesOfName(structNode, new String[] {""description"", ""field""}));"
74806,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestMixinXml.java,542,,"		assertTrue(onlyAttrsOfName(fieldNode, new String[] {""name"", ""fieldId"", ""fieldName"", ""type"", ""isPrimitiveType"","
74807,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestMixinXml.java,542,,"		assertTrue(onlyAttrsOfName(fieldNode, new String[] {""name"", ""fieldId"", ""fieldName"", ""type"", ""isPrimitiveType"","
74808,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestMixinXml.java,542,,"		assertTrue(onlyAttrsOfName(fieldNode, new String[] {""name"", ""fieldId"", ""fieldName"", ""type"", ""isPrimitiveType"","
74809,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestMixinXml.java,542,,"		assertTrue(onlyAttrsOfName(fieldNode, new String[] {""name"", ""fieldId"", ""fieldName"", ""type"", ""isPrimitiveType"","
74810,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestMixinXml.java,543,,"			""isArray"", ""dimension""}));"
74811,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestMixinXml.java,543,,"			""isArray"", ""dimension""}));"
74812,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestRemoteTest1DotJava.java,308,,"			svc.xresult = new Excp1( ""foo"", 2 );"
74813,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestRemoteTest1DotJava.java,331,,"			svc.xresult = new Excp1( ""bar"", 3 );"
74814,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestRemoteTest1DotJava.java,934,,"		String a = ""abc"";"
74815,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestStubTest1DotJava.java,411,,"		msg.put( ValueFactoryTest1._mf_o, ""raw"" );"
74816,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestTest1DotJava.java,178,,"		Test1.Excp1 e = new Test1.Excp1( ""foo"", 23 );"
74817,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestTest1DotJava.java,190,,"		e.msg = ""bar"";"
74818,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestValueFactoryTest1DotJava.java,212,,"		testS3Export(""boolean"", Test1.BOOL1);"
74819,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestValueFactoryTest1DotJava.java,213,,"		testS3Export(""byte"", Test1.BYTE5);"
74820,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestValueFactoryTest1DotJava.java,214,,"		testS3Export(""short"", Test1.SHORT5);"
74821,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestValueFactoryTest1DotJava.java,215,,"		testS3Export(""int"", Test1.INT5);"
74822,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestValueFactoryTest1DotJava.java,216,,"		testS3Export(""long"", Test1.LONG5);"
74823,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestValueFactoryTest1DotJava.java,217,,"		testS3Export(""float"", Test1.FLOAT5);"
74824,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestValueFactoryTest1DotJava.java,218,,"		testS3Export(""double"", Test1.DOUBLE5);"
74825,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestValueFactoryTest1DotJava.java,219,,"		testS3Export(""string"", Test1.STRING3);"
74826,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestXml.java,84,,"		String moduleName = list.item(0).getAttributes().getNamedItem(""name"").getNodeValue();"
74827,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestXml.java,91,,"		assertTrue(onlyChildNodesOfName(list.item(0), new String[] {""description"", ""service""}));"
74828,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestXml.java,127,,"		checkConstProperties(list.item(nodeCount++), ""BOOL1"", getTypeName(EtchGrammarConstants.BOOLEAN), ""false"", null);"
74829,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestXml.java,128,,"		checkConstProperties(list.item(nodeCount++), ""BOOL2"", getTypeName(EtchGrammarConstants.BOOLEAN), ""true"", null);"
74830,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestXml.java,233,,"		checkStructValueProperties(structNode, ""x"", ""352988339"", ""x"", ""int"", ""true"", ""false"", null, ""value"");"
74831,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestXml.java,233,,"		checkStructValueProperties(structNode, ""x"", ""352988339"", ""x"", ""int"", ""true"", ""false"", null, ""value"");"
74832,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestXml.java,445,,"		assertTrue(onlyAttrsOfName(node, new String[] {""name"", ""type"", ""value""}));"
74833,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestXml.java,473,,"		assertTrue(onlyAttrsOfName(node, new String[] {""name"", ""typeId"", ""typeName""}));"
74834,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestXml.java,473,,"		assertTrue(onlyAttrsOfName(node, new String[] {""name"", ""typeId"", ""typeName""}));"
74835,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestXml.java,638,,"		assertTrue(onlyAttrsOfName(structNode, new String[] {""name"", ""typeId"", ""typeName"", ""baseType""}));"
74836,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestXml.java,641,,"		assertTrue(onlyChildNodesOfName(structNode, new String[] {""description"", ""field""}));"
74837,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestXml.java,704,,"		assertTrue(onlyAttrsOfName(fieldNode, new String[] {""name"", ""fieldId"", ""fieldName"", ""type"", ""isPrimitiveType"", ""isArray"", ""dimension""}));"
74838,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestXml.java,704,,"		assertTrue(onlyAttrsOfName(fieldNode, new String[] {""name"", ""fieldId"", ""fieldName"", ""type"", ""isPrimitiveType"", ""isArray"", ""dimension""}));"
74839,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestXml.java,704,,"		assertTrue(onlyAttrsOfName(fieldNode, new String[] {""name"", ""fieldId"", ""fieldName"", ""type"", ""isPrimitiveType"", ""isArray"", ""dimension""}));"
74840,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestXml.java,704,,"		assertTrue(onlyAttrsOfName(fieldNode, new String[] {""name"", ""fieldId"", ""fieldName"", ""type"", ""isPrimitiveType"", ""isArray"", ""dimension""}));"
74841,./TargetProjects/etch/tests/src/test/java/org/apache/etch/tests/TestXml.java,704,,"		assertTrue(onlyAttrsOfName(fieldNode, new String[] {""name"", ""fieldId"", ""fieldName"", ""type"", ""isPrimitiveType"", ""isArray"", ""dimension""}));"
74842,./TargetProjects/etch/util/src/main/java/org/apache/etch/util/Log.java,1424,,"				wtr.write( "" : "" );"
74843,./TargetProjects/etch/util/src/main/java/org/apache/etch/util/URL.java,543,,"	@SuppressWarnings(""unchecked"")"
74844,./TargetProjects/etch/util/src/main/java/org/apache/etch/util/core/xml/XmlParser.java,192,,"			ParseException pe = new ParseException( ""caught exception"", e );"
74845,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/TestMonitor.java,59,,"		testconstruct2( null, ""abc"" );"
74846,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/TestUrl1.java,51,,"	String defScheme = ""tcp"";"
74847,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/TestUrl1.java,188,,"		URL url = new URL(""tcp://localhost:10000"");"
74848,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/TestUrl1.java,203,,"		url.addParam(""param1=value1"");"
74849,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/TestUrl1.java,204,,"		assertEquals(""param1=value1"", url.getParam(""param1=""));"
74850,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/TestUrl1.java,219,,"		assertEquals(""param2=value2"", url.getParam(""param2=""));"
74851,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/TestUrl1.java,271,,"		String name = ""term1"";"
74852,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/TestUrl1.java,344,,"		String value = ""value1"";"
74853,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/TestUrl1.java,493,,"		assertFalse(url.getBooleanTerm(""term2""));"
74854,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/TestUrl1.java,525,,"		assertFalse(url.getBooleanTerm(""term3"",true));"
74855,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/TestUrl1.java,574,,"		assertEquals(null, url.getDoubleTerm(""DNE""));"
74856,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/TestUrl1.java,760,,"		URL url = new URL(""tcp://admin:metreos@localhost:10000"");"
74857,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/TestUrl1.java,840,,"		assertEquals(""default"", url.getTerm(""term1"",""default""));"
74858,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/TestUrl1.java,1405,,"		url.setFragment(""fragment1"");"
74859,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/TestUrl1.java,1466,,"		url.setHost(""host1"");"
74860,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/TestUrl1.java,1526,,"		url.setPassword(""password1"");"
74861,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/TestUrl1.java,1644,,"		url.setScheme(""scheme1"");"
74862,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/TestUrl1.java,1704,,"		url.setUri(""uri1"");"
74863,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/TestUrl1.java,1766,,"		url.setUser(""user1"");"
74864,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/TestUrl1.java,1824,,"		assertEquals( ""null:"", new URL().toString() );"
74865,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/cmd/TestCommandParser.java,255,,"		main( new String[] { ""-f"", ""abc"" } );"
74866,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/cmd/TestCommandParser.java,283,,"		main( new String[] { ""-B"", ""def"" } );"
74867,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/cmd/TestCommandParser.java,367,,"		main( new String[] { ""--foo"", ""abc"" } );"
74868,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/cmd/TestCommandParser.java,505,,"		main( new String[] { ""abc"", ""def"", ""ghi"" } );"
74869,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/cmd/TestCommandParser.java,519,,"		main( new String[] { ""abc"", ""def"", ""ghi"", ""jkl"" } );"
74870,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/core/io/TestPacketizer.java,687,,"		Object QUERY = ""foo"";"
74871,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/core/io/TestPacketizer.java,688,,"		Object RESULT = ""bar"";"
74872,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/core/io/TestTcpConnection.java,85,,"		new TcpConnection( null, ""tcp:"", null );"
74873,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/core/io/TestTcpConnection.java,92,,"		Socket s = new Socket( ""127.0.0.1"", port );"
74874,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/core/io/TestTcpConnection.java,340,,"		TcpTransport c = new TcpConnection( null, ""tcp://127.0.0.1:""+port, null );"
74875,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/core/io/TestTcpListener.java,75,,"		TcpListener l = new TcpListener( ""tcp://0.0.0.0:0"", null );"
74876,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/core/io/TestTcpListener.java,155,,"		assertEquals( ""127.0.0.1"", a.getAddress().getHostAddress().toString() );"
74877,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/core/nio/TestTcp2Connection.java,105,,"		new Tcp2Connection( ""tcp:"", r );"
74878,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/core/nio/TestTcp2Connection.java,112,,"		SocketChannel s = newSocketChannel( ""127.0.0.1"", port );"
74879,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/core/nio/TestTcp2Connection.java,115,,"		r.put( ""connection"", s );"
74880,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/core/nio/TestTcp2Connection.java,379,,"		Tcp2Connection c = new Tcp2Connection( ""tcp://127.0.0.1:""+port, r );"
74881,./TargetProjects/etch/util/src/test/java/org/apache/etch/util/core/nio/TestTcp2Listener.java,191,,"		assertEquals( ""127.0.0.1"", a.getAddress().getHostAddress().toString() );"
74882,./TargetProjects/falcon/addons/adf/src/main/java/org/apache/falcon/adfservice/ADFHiveJob.java,77,,"                throw new FalconException(""JSON object "" + ADFJsonConstants.ADF_REQUEST_TABLE_NAME + "" cannot"""
74883,./TargetProjects/falcon/addons/adf/src/main/java/org/apache/falcon/adfservice/ADFHiveJob.java,97,,"            throw new FalconException(""JSON object table "" + tableName + "" not found in ADF request."");"
74884,./TargetProjects/falcon/addons/adf/src/main/java/org/apache/falcon/adfservice/ADFJob.java,90,,"                throw new FalconException(""JSON object "" + ADFJsonConstants.ADF_REQUEST_ACTIVITY + "" not found in ADF"""
74885,./TargetProjects/falcon/addons/adf/src/main/java/org/apache/falcon/adfservice/ADFJob.java,170,,"                        + "" in ADF request."");"
74886,./TargetProjects/falcon/addons/adf/src/main/java/org/apache/falcon/adfservice/ADFJob.java,188,,"                throw new FalconException(""JSON object "" + ADFJsonConstants.ADF_REQUEST_EXTENDED_PROPERTIES + "" not"""
74887,./TargetProjects/falcon/addons/adf/src/main/java/org/apache/falcon/adfservice/ADFJob.java,189,,"                        + "" found in ADF request."");"
74888,./TargetProjects/falcon/addons/adf/src/main/java/org/apache/falcon/adfservice/ADFProviderService.java,114,,"                    + "" property not set in startup properties. Please add it."");"
74889,./TargetProjects/falcon/addons/hdfs-snapshot-mirroring/src/test/java/org/apache/falcon/snapshots/replication/HdfsSnapshotReplicatorTest.java,116,,"        Path dir1 = new Path(sourceDir, ""dir1"");"
74890,./TargetProjects/falcon/addons/hdfs-snapshot-mirroring/src/test/java/org/apache/falcon/snapshots/replication/HdfsSnapshotReplicatorTest.java,118,,"        miniDfs.createSnapshot(sourceDir, ""snapshot1"");"
74891,./TargetProjects/falcon/addons/hdfs-snapshot-mirroring/src/test/java/org/apache/falcon/snapshots/replication/HdfsSnapshotReplicatorTest.java,127,,"        miniDfs.createSnapshot(sourceDir, ""snapshot2"");"
74892,./TargetProjects/falcon/addons/hdfs-snapshot-mirroring/src/test/java/org/apache/falcon/snapshots/replication/HdfsSnapshotReplicatorTest.java,136,,"        miniDfs.createSnapshot(sourceDir, ""snapshot3"");"
74893,./TargetProjects/falcon/addons/hdfs-snapshot-mirroring/src/test/java/org/apache/falcon/snapshots/retention/HdfsSnapshotEvictorTest.java,72,,"        evictSnapshots(miniDfs, evictionDir.toString(), ""minutes(1)"", NUM_FILES + 1);"
74894,./TargetProjects/falcon/addons/hivedr/src/test/java/org/apache/falcon/hive/DBReplicationStatusTest.java,45,,"        dbReplicationStatus = new ReplicationStatus(""source"", ""target"", ""jobname"","
74895,./TargetProjects/falcon/addons/hivedr/src/test/java/org/apache/falcon/hive/DBReplicationStatusTest.java,45,,"        dbReplicationStatus = new ReplicationStatus(""source"", ""target"", ""jobname"","
74896,./TargetProjects/falcon/addons/hivedr/src/test/java/org/apache/falcon/hive/DBReplicationStatusTest.java,45,,"        dbReplicationStatus = new ReplicationStatus(""source"", ""target"", ""jobname"","
74897,./TargetProjects/falcon/addons/hivedr/src/test/java/org/apache/falcon/hive/DBReplicationStatusTest.java,48,,"                ""default1"", ""Table1"", ReplicationStatus.Status.SUCCESS, 20L);"
74898,./TargetProjects/falcon/addons/hivedr/src/test/java/org/apache/falcon/hive/DBReplicationStatusTest.java,57,,"                + ""        \""sourceUri\"": \""source\"",\n"" + ""        \""targetUri\"": \""target\"",\n"""
74899,./TargetProjects/falcon/addons/hivedr/src/test/java/org/apache/falcon/hive/DBReplicationStatusTest.java,57,,"                + ""        \""sourceUri\"": \""source\"",\n"" + ""        \""targetUri\"": \""target\"",\n"""
74900,./TargetProjects/falcon/addons/hivedr/src/test/java/org/apache/falcon/hive/DBReplicationStatusTest.java,58,,"                + ""        \""jobName\"": \""jobname\"",\n"" + ""        \""database\"": \""default1\"",\n"""
74901,./TargetProjects/falcon/addons/hivedr/src/test/java/org/apache/falcon/hive/DBReplicationStatusTest.java,59,,"                + ""        \""status\"": \""FAILURE\"",\n"" + ""        \""eventId\"": 20\n"" + ""    },\n"""
74902,./TargetProjects/falcon/addons/hivedr/src/test/java/org/apache/falcon/hive/DBReplicationStatusTest.java,84,,"        Assert.assertEquals(dbStatus.getTableStatuses().get(""table1"").getEventId(), 20);"
74903,./TargetProjects/falcon/addons/hivedr/src/test/java/org/apache/falcon/hive/DBReplicationStatusTest.java,86,,"        Assert.assertEquals(dbStatus.getTableStatuses().get(""table2"").getEventId(), -1);"
74904,./TargetProjects/falcon/addons/hivedr/src/test/java/org/apache/falcon/hive/DBReplicationStatusTest.java,88,,"        Assert.assertEquals(dbStatus.getTableStatuses().get(""table3"").getEventId(), 10);"
74905,./TargetProjects/falcon/addons/hivedr/src/test/java/org/apache/falcon/hive/HiveDRStatusStoreTest.java,62,,"        ReplicationStatus dbStatus = new ReplicationStatus(""source"", ""target"", ""jobname"","
74906,./TargetProjects/falcon/addons/hivedr/src/test/java/org/apache/falcon/hive/HiveDRStatusStoreTest.java,62,,"        ReplicationStatus dbStatus = new ReplicationStatus(""source"", ""target"", ""jobname"","
74907,./TargetProjects/falcon/addons/hivedr/src/test/java/org/apache/falcon/hive/HiveDRStatusStoreTest.java,62,,"        ReplicationStatus dbStatus = new ReplicationStatus(""source"", ""target"", ""jobname"","
74908,./TargetProjects/falcon/addons/hivedr/src/test/java/org/apache/falcon/hive/HiveDRStatusStoreTest.java,63,,"                ""Default1"", null, ReplicationStatus.Status.SUCCESS, 20L);"
74909,./TargetProjects/falcon/addons/hivedr/src/test/java/org/apache/falcon/hive/HiveDRStatusStoreTest.java,65,,"                ""Default1"", ""table1"", ReplicationStatus.Status.SUCCESS, 20L);"
74910,./TargetProjects/falcon/addons/hivedr/src/test/java/org/apache/falcon/hive/HiveDRStatusStoreTest.java,67,,"                ""default1"", ""Table2"", ReplicationStatus.Status.INIT, -1L);"
74911,./TargetProjects/falcon/addons/hivedr/src/test/java/org/apache/falcon/hive/HiveDRStatusStoreTest.java,71,,"                ""default1"", ""table4"", ReplicationStatus.Status.FAILURE, 18L);"
74912,./TargetProjects/falcon/addons/hivedr/src/test/java/org/apache/falcon/hive/HiveDRStatusStoreTest.java,88,,"        ReplicationStatus dbStatus = new ReplicationStatus(""source"", ""target"", ""jobname2"","
74913,./TargetProjects/falcon/addons/hivedr/src/test/java/org/apache/falcon/hive/HiveDRStatusStoreTest.java,89,,"                ""default2"", null, ReplicationStatus.Status.SUCCESS, 20L);"
74914,./TargetProjects/falcon/addons/hivedr/src/test/java/org/apache/falcon/hive/HiveDRStatusStoreTest.java,95,,"                ""default2"", ""table3"", ReplicationStatus.Status.FAILURE, 15L);"
74915,./TargetProjects/falcon/addons/hivedr/src/test/java/org/apache/falcon/hive/HiveDRStatusStoreTest.java,219,,"        ReplicationStatus dbStatus = new ReplicationStatus(""source"", ""target"", ""deleteJob"","
74916,./TargetProjects/falcon/addons/hivedr/src/test/java/org/apache/falcon/hive/HiveDRStatusStoreTest.java,220,,"                ""deleteDB"", null, ReplicationStatus.Status.SUCCESS, 20L);"
74917,./TargetProjects/falcon/addons/hivedr/src/test/java/org/apache/falcon/hive/HiveDRStatusStoreTest.java,282,,"                ""jobname3"", ""default3"");"
74918,./TargetProjects/falcon/addons/hivedr/src/test/java/org/apache/falcon/hive/HiveDRTest.java,140,,"                new String(Base64.decodeBase64(event.split(DelimiterUtils.FIELD_DELIM)[0]), ""UTF-8""));"
74919,./TargetProjects/falcon/addons/hivedr/src/test/java/org/apache/falcon/hive/ReplicationStatusTest.java,46,,"        String expected = ""{\n    \""sourceUri\"": \""source\"",\n"""
74920,./TargetProjects/falcon/addons/hivedr/src/test/java/org/apache/falcon/hive/ReplicationStatusTest.java,62,,"                + ""    \""targetUri\"": \""target\"",\n    \""jobName\"": \""testJob\"",\n"""
74921,./TargetProjects/falcon/client/src/main/java/org/apache/falcon/ResponseHelper.java,47,,"        sb.append(""Consolidated Status: "").append(result.getStatus())"
74922,./TargetProjects/falcon/client/src/main/java/org/apache/falcon/ResponseHelper.java,56,,"        sb.append(""\nAdditional Information:\n"");"
74923,./TargetProjects/falcon/client/src/main/java/org/apache/falcon/ResponseHelper.java,57,,"        sb.append(""Response: "").append(result.getMessage());"
74924,./TargetProjects/falcon/client/src/main/java/org/apache/falcon/ResponseHelper.java,58,,"        sb.append(""Request Id: "").append(result.getRequestId());"
74925,./TargetProjects/falcon/client/src/main/java/org/apache/falcon/ResponseHelper.java,133,,"                formatter.format(""%-16s"", instance.getCluster() != null ? instance.getCluster() : ""-"");"
74926,./TargetProjects/falcon/client/src/main/java/org/apache/falcon/client/FalconClient.java,814,,"            return resource.header(""Cookie"", AUTH_COOKIE_EQ + authenticationToken)"
74927,./TargetProjects/falcon/common-types/src/main/java/org/apache/falcon/entity/v0/EntityType.java,40,,"    FEED(Feed.class, ""/feed-0.1.xsd"", ""name""),"
74928,./TargetProjects/falcon/common/src/main/java/org/apache/falcon/entity/EntityUtil.java,106,,"            format.setTimeZone(TimeZone.getTimeZone(""UTC""));"
74929,./TargetProjects/falcon/common/src/main/java/org/apache/falcon/entity/EntityUtil.java,620,,"        throw new IllegalArgumentException(""Unhandled type: "" + entity.getEntityType());"
74930,./TargetProjects/falcon/common/src/main/java/org/apache/falcon/entity/EntityUtil.java,706,,"                    .getProperty(""feed.retry.allowed"", ""true"")"
74931,./TargetProjects/falcon/common/src/main/java/org/apache/falcon/entity/FeedHelper.java,115,,"        throw new FalconException(""Both catalog and locations are not defined."");"
74932,./TargetProjects/falcon/common/src/main/java/org/apache/falcon/entity/parser/ClusterEntityParser.java,294,,"                            + "" for cluster "" + cluster.getName());"
74933,./TargetProjects/falcon/common/src/main/java/org/apache/falcon/expression/ExpressionHelper.java,64,,"            format.setTimeZone(TimeZone.getTimeZone(""UTC""));"
74934,./TargetProjects/falcon/common/src/main/java/org/apache/falcon/expression/ExpressionHelper.java,125,,"        vars.put(FeedDataPath.VARS.MONTH.name(), String.format(""%02d"", (cal.get(Calendar.MONTH) + 1)));"
74935,./TargetProjects/falcon/common/src/main/java/org/apache/falcon/hadoop/HadoopClientFactory.java,91,,"            throw new FalconException(""Exception while getting FileSystem for: "" + uri, e);"
74936,./TargetProjects/falcon/common/src/main/java/org/apache/falcon/hadoop/HadoopClientFactory.java,105,,"        Validate.notNull(conf, ""configuration cannot be null"");"
74937,./TargetProjects/falcon/common/src/main/java/org/apache/falcon/metadata/MetadataMappingService.java,154,,"                    + ""Please check Configuration twiki or """
74938,./TargetProjects/falcon/common/src/main/java/org/apache/falcon/metadata/MetadataMappingService.java,155,,"                    + ""the section Graph Database Properties in startup.properties """
74939,./TargetProjects/falcon/common/src/main/java/org/apache/falcon/tools/FalconStateStoreDBCLI.java,124,,"            System.err.println(""--------------------------------------"");"
74940,./TargetProjects/falcon/common/src/main/java/org/apache/falcon/tools/FalconStateStoreDBCLI.java,137,,"        String falconVersion = BuildProperties.get().getProperty(""project.version"");"
74941,./TargetProjects/falcon/common/src/main/java/org/apache/falcon/tools/FalconStateStoreDBCLI.java,176,,"        System.out.println(""DONE"");"
74942,./TargetProjects/falcon/common/src/main/java/org/apache/falcon/workflow/WorkflowJobEndNotificationService.java,116,,"                LOG.error(""Error in listener {}"", listener.getClass().getName(), t);"
74943,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/cleanup/LogCleanupServiceTest.java,48,,"    private final Path instanceLogPath = new Path(""/projects/falcon/staging/falcon/workflows/process/"""
74944,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/cleanup/LogCleanupServiceTest.java,49,,"        + ""sample"" + ""/logs/job-2010-01-01-01-00/000"");"
74945,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/CatalogStorageTest.java,36,,"        String table = ""catalog:clicksdb:clicks#ds=${YEAR}-${MONTH}-${DAY};region=us"";"
74946,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/CatalogStorageTest.java,51,,"        Assert.assertEquals(""us"", storage.getPartitionValue(""region""));"
74947,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/CatalogStorageTest.java,53,,"        Assert.assertNull(storage.getPartitionValue(""unknown""));"
74948,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/CatalogStorageTest.java,78,,"        Assert.assertEquals(""thrift://localhost:49083"", storage.getCatalogUrl());"
74949,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/ColoClusterRelationTest.java,43,,"        Cluster cluster1 = newCluster(""cluster1"", ""colo1"");"
74950,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/EntityUtilTest.java,78,,"        Feed view = EntityUtil.getClusterView(feed, ""testCluster"");"
74951,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/EntityUtilTest.java,87,,"        Date startTime = SchemaHelper.parseDateUTC(""2016-09-30T15:24Z"");"
74952,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/EntityUtilTest.java,142,,"        Frequency frequency = new Frequency(""hours(1)"");"
74953,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/EntityUtilTest.java,216,,"        Frequency frequency = Frequency.fromString(""minutes(1)"");"
74954,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/EntityUtilTest.java,224,,"        Date start = getDate(""2010-01-01 01:01 UTC"");"
74955,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FeedDataPathTest.java,36,,"        Assert.assertFalse(""010"".matches(monthPattern));"
74956,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FeedDataPathTest.java,37,,"        Assert.assertFalse(""10 "".matches(monthPattern));"
74957,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FeedDataPathTest.java,38,,"        Assert.assertFalse("" 10"".matches(monthPattern));"
74958,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FeedHelperTest.java,102,,"        Feed feed = publishFeed(cluster, ""minutes(5)"", ""2011-02-28 10:00 UTC"", ""2016-02-28 10:00 UTC"");"
74959,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FeedHelperTest.java,102,,"        Feed feed = publishFeed(cluster, ""minutes(5)"", ""2011-02-28 10:00 UTC"", ""2016-02-28 10:00 UTC"");"
74960,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FeedHelperTest.java,102,,"        Feed feed = publishFeed(cluster, ""minutes(5)"", ""2011-02-28 10:00 UTC"", ""2016-02-28 10:00 UTC"");"
74961,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FeedHelperTest.java,103,,"        Process process = prepareProcess(cluster, ""minutes(10)"", ""2012-02-28 10:37 UTC"", ""2012-02-28 10:47 UTC"");"
74962,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FeedHelperTest.java,103,,"        Process process = prepareProcess(cluster, ""minutes(10)"", ""2012-02-28 10:37 UTC"", ""2012-02-28 10:47 UTC"");"
74963,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FeedHelperTest.java,103,,"        Process process = prepareProcess(cluster, ""minutes(10)"", ""2012-02-28 10:37 UTC"", ""2012-02-28 10:47 UTC"");"
74964,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FeedHelperTest.java,106,,"        outFeed.setName(""outputFeed"");"
74965,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FeedHelperTest.java,108,,"        outFeed.setInstance(""now(0,0)"");"
74966,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FeedHelperTest.java,189,,"        inFeed.setName(""inputFeed"");"
74967,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FeedHelperTest.java,191,,"        inFeed.setStart(""now(0, -20)"");"
74968,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FeedHelperTest.java,192,,"        inFeed.setEnd(""now(0, 0)"");"
74969,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FeedHelperTest.java,288,,"        cluster.setName(""name"");"
74970,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FeedHelperTest.java,387,,"        Feed feed = publishFeed(cluster, ""days(1)"", ""2011-02-28 10:00 UTC"", ""2016-02-28 10:00 UTC"");"
74971,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FeedHelperTest.java,391,,"        Process process = prepareProcess(cluster, ""days(1)"", ""2012-02-28 10:00 UTC"", ""2016-02-28 10:00 UTC"");"
74972,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FeedHelperTest.java,402,,"        SchedulableEntityInstance result = FeedHelper.getProducerInstance(feed, getDate(""2013-02-28 10:00 UTC""),"
74973,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FeedHelperTest.java,515,,"        Feed feed = publishFeed(cluster, ""hours(1)"", ""2012-02-28 00:00 UTC"", ""2016-02-28 00:00 UTC"");"
74974,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FeedHelperTest.java,515,,"        Feed feed = publishFeed(cluster, ""hours(1)"", ""2012-02-28 00:00 UTC"", ""2016-02-28 00:00 UTC"");"
74975,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FeedHelperTest.java,515,,"        Feed feed = publishFeed(cluster, ""hours(1)"", ""2012-02-28 00:00 UTC"", ""2016-02-28 00:00 UTC"");"
74976,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FeedHelperTest.java,530,,"                getDate(""2012-02-28 09:00 UTC""), cluster);"
74977,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FeedHelperTest.java,548,,"        Process process = prepareProcess(cluster, ""minutes(10)"", ""2012-02-28 09:37 UTC"", ""2016-02-28 10:00 UTC"");"
74978,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FeedHelperTest.java,627,,"        Feed feed = publishFeed(cluster, ""hours(1)"", ""2012-02-27 00:00 UTC"", ""2016-02-28 00:00 UTC"");"
74979,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FeedHelperTest.java,628,,"        Process process = prepareProcess(cluster, ""hours(1)"", ""2012-02-27 10:00 UTC"", ""2016-02-28 10:00 UTC"");"
74980,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FeedHelperTest.java,783,,"        retentionStage.setFrequency(new Frequency(""hours(4)""));"
74981,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FeedHelperTest.java,909,,"        Feed feed = importFeedSnapshot(cluster, ""hours(1)"", ""2012-02-07 00:00 UTC"", ""2020-02-25 00:00 UTC"");"
74982,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FeedHelperTest.java,909,,"        Feed feed = importFeedSnapshot(cluster, ""hours(1)"", ""2012-02-07 00:00 UTC"", ""2020-02-25 00:00 UTC"");"
74983,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FileSystemStorageTest.java,75,,"        location.setPath(""/foo/bar"");"
74984,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FileSystemStorageTest.java,115,,"        FileSystemStorage storage = new FileSystemStorage(""jail://global:00"", locations);"
74985,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FileSystemStorageTest.java,127,,"        FileSystemStorage storage = new FileSystemStorage(""hdfs://localhost:41020"", locations);"
74986,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FileSystemStorageTest.java,221,,"            {""hdfs://h:0"", ""localDC/rc/billing/ua2"", ""hdfs://h:0/user/"" + USER + ""/localDC/rc/billing/ua2""},"
74987,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FileSystemStorageTest.java,221,,"            {""hdfs://h:0"", ""localDC/rc/billing/ua2"", ""hdfs://h:0/user/"" + USER + ""/localDC/rc/billing/ua2""},"
74988,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FileSystemStorageTest.java,221,,"            {""hdfs://h:0"", ""localDC/rc/billing/ua2"", ""hdfs://h:0/user/"" + USER + ""/localDC/rc/billing/ua2""},"
74989,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FileSystemStorageTest.java,221,,"            {""hdfs://h:0"", ""localDC/rc/billing/ua2"", ""hdfs://h:0/user/"" + USER + ""/localDC/rc/billing/ua2""},"
74990,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FileSystemStorageTest.java,222,,"            {""hdfs://h:0/"", ""localDC/rc/billing/ua2"", ""hdfs://h:0/user/"" + USER + ""/localDC/rc/billing/ua2""},"
74991,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FileSystemStorageTest.java,223,,"            {""hdfs://h:0"", ""localDC/rc/billing/ua2/"", ""hdfs://h:0/user/"" + USER + ""/localDC/rc/billing/ua2""},"
74992,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FileSystemStorageTest.java,225,,"            {""hdfs://h:0"", ""localDC/rc/billing/ua2//"", ""hdfs://h:0/user/"" + USER + ""/localDC/rc/billing/ua2""},"
74993,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FileSystemStorageTest.java,227,,"            {""${nameNode}"", ""localDC/rc/billing/ua2"", ""${nameNode}/user/"" + USER + ""/localDC/rc/billing/ua2""},"
74994,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FileSystemStorageTest.java,227,,"            {""${nameNode}"", ""localDC/rc/billing/ua2"", ""${nameNode}/user/"" + USER + ""/localDC/rc/billing/ua2""},"
74995,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FileSystemStorageTest.java,228,,"            {""${nameNode}/"", ""localDC/rc/billing/ua2"", ""${nameNode}/user/"" + USER + ""/localDC/rc/billing/ua2""},"
74996,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FileSystemStorageTest.java,234,,"            {""${nameNode}"", ""s3://h:p/localDC/rc/billing/ua2//"", ""s3://h:p/localDC/rc/billing/ua2""},"
74997,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/FileSystemStorageTest.java,234,,"            {""${nameNode}"", ""s3://h:p/localDC/rc/billing/ua2//"", ""s3://h:p/localDC/rc/billing/ua2""},"
74998,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/ProcessHelperTest.java,69,,"        Feed feed = publishFeed(cluster, ""minutes(5)"", ""2012-02-27 10:00 UTC"", ""2016-02-28 10:00 UTC"");"
74999,./TargetProjects/falcon/common/src/test/java/org/apache/falcon/entity/ProcessHelperTest.java,69,,"        Feed feed = publishFeed(cluster, ""minutes(5)"", ""2012-02-27 10:00 UTC"", ""2016-02-28 10:00 UTC"");"
