173000,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/LogTest.java,64,,"        File f = new File(workDir, ""testcat1"");"
173001,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/LogTest.java,65,,"        write(f, ""initial content"");"
173002,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/LogTest.java,74,,"        write(f, ""modification"");"
173003,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/LogTest.java,92,,"        write(f, ""modification1"");"
173004,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/LogTest.java,97,,"        write(f, ""modification2"");"
173005,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/LogTest.java,101,,"        write(f, ""modification3"");"
173006,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/LogTest.java,105,,"        write(f, ""modification4"");"
173007,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/LogTest.java,176,,"        write(new File(workDir, "".git/HEAD""), ""ref: refs/heads/A"");"
173008,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/LogTest.java,513,,"        client.createBranch(""b"", ""master"", NULL_PROGRESS_MONITOR);"
173009,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/LogTest.java,518,,"        GitRevisionInfo revisionBranch = client.commit(files, ""modification on branch"", null, null, NULL_PROGRESS_MONITOR);"
173010,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/LogTest.java,657,,"        write(f, ""init"");"
173011,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/LogTest.java,726,,"        client.createBranch(""newbranch"", ""master"", NULL_PROGRESS_MONITOR);"
173012,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/LogTest.java,795,,"        client.commit(files, ""short message"", null, null, NULL_PROGRESS_MONITOR);"
173013,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/LogTest.java,823,,"        GitRevisionInfo c1 = client.commit(files, ""m1"", new GitUser(""another"", ""netbeans.org""), new GitUser(""another"", ""netbeans.org""), NULL_PROGRESS_MONITOR);"
173014,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/MergeTest.java,64,,"        File f = new File(workDir, ""file"");"
173015,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/MergeTest.java,65,,"        write(f, ""init"");"
173016,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/MergeTest.java,89,,"        GitRevisionInfo info = client.commit(new File[] { f }, ""change on branch"", null, null, NULL_PROGRESS_MONITOR);"
173017,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/MergeTest.java,174,,"        GitRevisionInfo masterInfo = client.commit(new File[] { f }, ""change on master"", null, null, NULL_PROGRESS_MONITOR);"
173018,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/PullTest.java,89,,"            GitPullResult result = client.pull(otherWT.toURI().toString(), Arrays.asList(new String[] { ""+refs/heads/*:refs/remotes/origin/*"" }), ""origin/idontexistbranch"", NULL_PROGRESS_MONITOR);"
173019,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/PullTest.java,104,,"        GitPullResult result = client.pull(otherWT.toURI().toString(), Arrays.asList(new String[] { ""+refs/heads/*:refs/remotes/origin/*"" }), ""origin/master"", NULL_PROGRESS_MONITOR);"
173020,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/PullTest.java,108,,"        assertTrue(branches.get(""origin/"" + BRANCH_NAME).isRemote());"
173021,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/PullTest.java,112,,"        assertUpdate(updates.get(""origin/master""), ""origin/master"", ""master"", masterInfo.getRevision(), null, new URIish(otherWT.toURI().toURL()).toString(), Type.BRANCH, GitRefUpdateResult.NEW);"
173022,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/PullTest.java,177,,"        write(f2, ""hi, i am new"");"
173023,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/PullTest.java,179,,"        String localCommitId = client.commit(new File[] { f2 }, ""local change"", null, null, NULL_PROGRESS_MONITOR).getRevision();"
173024,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/PushTest.java,74,,"        String id = getClient(workDir).commit(new File[] { f }, ""bbb"", null, null, NULL_PROGRESS_MONITOR).getRevision();"
173025,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/PushTest.java,75,,"        Map<String, GitTransportUpdate> updates = getClient(workDir).push(remoteUri, Arrays.asList(new String[] { ""refs/heads/master:refs/heads/master"" }), Collections.<String>emptyList(), NULL_PROGRESS_MONITOR).getRemoteRepositoryUpdates();"
173026,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/PushTest.java,78,,"        assertEquals(id, remoteBranches.get(""master"").getId());"
173027,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/PushTest.java,83,,"        write(f, ""huhu"");"
173028,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/PushTest.java,106,,"        assertUpdate(updates.get(""newbranch""), ""master"", ""newbranch"", id, null, new URIish(remoteUri).toString(), Type.BRANCH, GitRefUpdateResult.OK);"
173029,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/PushTest.java,157,,"        assertEquals(id, branches.get(""origin/master"").getId());"
173030,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/PushTest.java,189,,"        cfg.setString(ConfigConstants.CONFIG_REMOTE_SECTION, ""origin"", ConfigConstants.CONFIG_KEY_URL, new URIish(remoteUri).toString());"
173031,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/PushTest.java,248,,"        getClient(workDir).createBranch(""localbranch"", id, NULL_PROGRESS_MONITOR);"
173032,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/PushTest.java,290,,"        GitTag tag = getClient(workDir).createTag(""my-tag"", id, ""tag message"", false, false, NULL_PROGRESS_MONITOR);"
173033,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/RebaseTest.java,69,,"        File f = new File(workDir, ""file"");"
173034,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/RebaseTest.java,70,,"        write(f, ""init"");"
173035,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/RebaseTest.java,87,,"        GitRevisionInfo commit = client.commit(new File[] { f }, ""change on branch"", null, null, NULL_PROGRESS_MONITOR);"
173036,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/RebaseTest.java,105,,"        GitRevisionInfo master = client.commit(new File[] { f2 }, ""change on master"", null, null, NULL_PROGRESS_MONITOR);"
173037,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/RemotesTest.java,56,,"        File otherWT = new File(workDir.getParentFile(), ""repo2"");"
173038,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/RemotesTest.java,64,,"        RemoteConfig cfg = new RemoteConfig(repository.getConfig(), ""origin"");"
173039,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/RemotesTest.java,66,,"        cfg.addFetchRefSpec(new RefSpec(""+refs/heads/*:refs/remotes/origin/*""));"
173040,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/RemotesTest.java,72,,"        client.createBranch(""master"", ""origin/master"", NULL_PROGRESS_MONITOR);"
173041,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/RemotesTest.java,73,,"        client.createBranch(""nova"", ""origin/master"", NULL_PROGRESS_MONITOR);"
173042,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/RemotesTest.java,76,,"        assertEquals(""+refs/heads/*:refs/remotes/origin/*"", config.getString(""remote"", ""origin"", ""fetch""));"
173043,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/RemotesTest.java,77,,"        assertEquals(""origin"", config.getString(""branch"", ""master"", ""remote""));"
173044,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/RemotesTest.java,78,,"        assertEquals(""refs/heads/master"", config.getString(""branch"", ""master"", ""merge""));"
173045,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/RemotesTest.java,103,,"                Arrays.asList(""refs/remotes/origin/*:+refs/heads/*""));"
173046,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/RemoveTest.java,56,,"        File file = new File(workDir, ""toRemove"");"
173047,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/RemoveTest.java,131,,"        File file = new File(folder, ""file"");"
173048,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/RemoveTest.java,138,,"        File file2 = new File(folder1, ""file2"");"
173049,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/RenameTest.java,54,,"        File folder = new File(workDir, ""folder"");"
173050,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/RenameTest.java,78,,"        File target = new File(workDir, ""target"");"
173051,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/RenameTest.java,138,,"        File file = new File(workDir, ""file"");"
173052,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/RenameTest.java,139,,"        write(file, ""hello"");"
173053,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/RenameTest.java,187,,"        write(file, ""aaa"");"
173054,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/RenameTest.java,317,,"        File file2 = new File(folder, ""file2"");"
173055,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/ResetTest.java,65,,"        File file1 = new File(workDir, ""file1"");"
173056,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/ResetTest.java,66,,"        write(file1, ""blablablabla"");"
173057,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/ResetTest.java,67,,"        File file2 = new File(workDir, ""file2"");"
173058,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/ResetTest.java,68,,"        write(file2, ""blablablabla in file2"");"
173059,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/ResetTest.java,78,,"        write(file1, ""change in content"");"
173060,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/ResetTest.java,331,,"        client.reset(new File[] { folder }, ""HEAD"", false, NULL_PROGRESS_MONITOR);"
173061,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/ResetTest.java,356,,"        File file2 = new File(file, ""file"");"
173062,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/ResetTest.java,445,,"        runExternally(workDir, Arrays.asList(""git.cmd"", ""add"", ""f""));"
173063,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/ResetTest.java,446,,"        List<String> res = runExternally(workDir, Arrays.asList(""git.cmd"", ""status"", ""-s""));"
173064,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/RevertTest.java,53,,"        write(f, ""init"");"
173065,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/RevertTest.java,58,,"        write(f, ""change"");"
173066,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/RevertTest.java,60,,"        GitRevisionInfo commit = getClient(workDir).commit(files, ""modification"", null, null, NULL_PROGRESS_MONITOR);"
173067,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/RevertTest.java,64,,"        assertEquals(""Revert \""modification\""\n\nThis reverts commit "" + commit.getRevision() + ""."", getClient(workDir).log(""master"", NULL_PROGRESS_MONITOR).getFullMessage());"
173068,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/RevertTest.java,100,,"        write(f, ""z\nb\ny"");"
173069,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/SetUpstreamBranchTest.java,86,,"        assertTrue(branches.containsKey(""origin/master""));"
173070,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/SetUpstreamBranchTest.java,87,,"        assertNull(branches.get(""master"").getTrackedBranch());"
173071,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/SetUpstreamBranchTest.java,106,,"        client.setRemote(new GitRemoteConfig(""origin"","
173072,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/StashTest.java,52,,"        File file1 = new File(workDir, ""file"");"
173073,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/StashTest.java,56,,"        write(file1, ""file1"");"
173074,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/StashTest.java,62,,"        write(file1, ""modification 1"");"
173075,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/StashTest.java,64,,"        write(file2, ""modification 2"");"
173076,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/StatusTest.java,69,,"        write(new File(workDir, "".gitignore""), ""ignored"");"
173077,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/StatusTest.java,69,,"        write(new File(workDir, "".gitignore""), ""ignored"");"
173078,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/StatusTest.java,70,,"        File untracked = new File(workDir, ""untracked"");"
173079,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/StatusTest.java,74,,"        File added_uptodate = new File(workDir, ""added-uptodate"");"
173080,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/StatusTest.java,93,,"        write(modified_reset, ""modified_reset"");"
173081,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/StatusTest.java,101,,"        write(deleted_untracked, ""deleted_untracked"");"
173082,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/SubmoduleTest.java,81,,"        RemoteConfig cfg = new RemoteConfig(repository.getConfig(), ""origin"");"
173083,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/SubmoduleTest.java,85,,"        client.push(""origin"", Arrays.asList(""refs/heads/master:refs/heads/master""),"
173084,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/SubmoduleTest.java,86,,"                Arrays.asList(""+refs/heads/master:refs/remotes/origin/master""), NULL_PROGRESS_MONITOR);"
173085,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/TagTest.java,59,,"        write(f, ""init"");"
173086,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/TagTest.java,60,,"        GitRevisionInfo commit = client.commit(files, ""init commit"", null, null, NULL_PROGRESS_MONITOR);"
173087,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/TagTest.java,61,,"        GitTag tag = client.createTag(""tag-name"", commit.getRevision(), ""tag message\nfor tag-name"", false, false, NULL_PROGRESS_MONITOR);"
173088,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/TagTest.java,61,,"        GitTag tag = client.createTag(""tag-name"", commit.getRevision(), ""tag message\nfor tag-name"", false, false, NULL_PROGRESS_MONITOR);"
173089,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/TagTest.java,91,,"        client.createTag(""tag-name"", commit.getRevision(), ""tag message"", false, false, NULL_PROGRESS_MONITOR);"
173090,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/TagTest.java,92,,"        client.createTag(""tag-name-2"", commit.getRevision(), ""second tag message"", false, false, NULL_PROGRESS_MONITOR);"
173091,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/UnignoreTest.java,52,,"        File f = new File(workDir, ""file"");"
173092,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/UnignoreTest.java,135,,"        File f = new File(new File(new File(workDir, ""sf1""), ""sf2""), ""file"");"
173093,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/UnignoreTest.java,135,,"        File f = new File(new File(new File(workDir, ""sf1""), ""sf2""), ""file"");"
173094,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/UnignoreTest.java,178,,"        write(gitIgnore, ""!/sf1/sf2/file"");"
173095,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/UpdateRefTest.java,52,,"        write(f, ""init"");"
173096,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/UpdateRefTest.java,61,,"        GitRevisionInfo info = client.log(""HEAD"", NULL_PROGRESS_MONITOR);"
173097,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/UpdateRefTest.java,63,,"        client.reset(""HEAD~1"", GitClient.ResetType.HARD, NULL_PROGRESS_MONITOR);"
173098,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/UpdateRefTest.java,84,,"        GitRefUpdateResult res = client.updateReference(""master"", info.getRevision(), NULL_PROGRESS_MONITOR);"
173099,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/commands/UpdateRefTest.java,101,,"        client.createBranch(""BRANCH"", ""HEAD"", NULL_PROGRESS_MONITOR);"
173100,./TargetProjects/netbeans/ide/libs.git/test/unit/src/org/netbeans/libs/git/jgit/factory/CreateClientTest.java,74,,"        File gitFolder = new File(subRepo, "".git"");"
173101,./TargetProjects/netbeans/ide/libs.graalsdk/test/unit/src/org/netbeans/libs/graalsdk/GraalEnginesTest.java,101,,"        assumeNotNull(""Need python"", Scripting.createManager().getEngineByMimeType(""text/x-python""));"
173102,./TargetProjects/netbeans/ide/libs.graalsdk/test/unit/src/org/netbeans/libs/graalsdk/GraalEnginesTest.java,101,,"        assumeNotNull(""Need python"", Scripting.createManager().getEngineByMimeType(""text/x-python""));"
173103,./TargetProjects/netbeans/ide/libs.graalsdk/test/unit/src/org/netbeans/libs/graalsdk/GraalEnginesTest.java,133,,"        ScriptEngine js = Scripting.createManager().getEngineByName(""GraalVM:js"");"
173104,./TargetProjects/netbeans/ide/libs.graalsdk/test/unit/src/org/netbeans/libs/graalsdk/GraalEnginesTest.java,363,,"        js.getContext().setAttribute(""allowAllAccess"", true, ScriptContext.GLOBAL_SCOPE);"
173105,./TargetProjects/netbeans/ide/libs.graalsdk/test/unit/src/org/netbeans/libs/graalsdk/ScriptingTutorial.java,133,,"                + ""})\n"");"
173106,./TargetProjects/netbeans/ide/libs.graalsdk/test/unit/src/org/netbeans/libs/graalsdk/ScriptingTutorial.java,261,,"            + ""  }\n"""
173107,./TargetProjects/netbeans/ide/libs.graalsdk/test/unit/src/org/netbeans/libs/graalsdk/ScriptingTutorial.java,275,,"        Object jsObject = ((Invocable)engine).invokeMethod(jsFunction, ""call"");"
173108,./TargetProjects/netbeans/ide/libs.graalsdk/test/unit/src/org/netbeans/libs/graalsdk/ScriptingTutorial.java,415,,"            + ""     }\n"""
173109,./TargetProjects/netbeans/ide/localhistory/test/qa-functional/src/org/netbeans/test/localhistory/LocalHistoryViewTest.java,108,,"        node.performPopupAction(""Open"");"
173110,./TargetProjects/netbeans/ide/localhistory/test/unit/src/org/netbeans/modules/localhistory/InterceptorTest.java,86,,"        File f = new File(getWorkDir(), ""file"");"
173111,./TargetProjects/netbeans/ide/localhistory/test/unit/src/org/netbeans/modules/localhistory/InterceptorTest.java,88,,"        LogHandler lh = new LogHandler(""finnished copy file "" + getPath(f), LogHandler.Compare.STARTS_WITH);"
173112,./TargetProjects/netbeans/ide/localhistory/test/unit/src/org/netbeans/modules/localhistory/store/CleanupTest.java,46,,"        File folder = new File(getDataDir(), ""datafolder"");        "
173113,./TargetProjects/netbeans/ide/localhistory/test/unit/src/org/netbeans/modules/localhistory/store/CleanupTest.java,50,,"        File file1 = new File(folder, ""file1"");"
173114,./TargetProjects/netbeans/ide/localhistory/test/unit/src/org/netbeans/modules/localhistory/store/CleanupTest.java,62,,"        createFile(store, file1, ts, ""data1"");"
173115,./TargetProjects/netbeans/ide/localhistory/test/unit/src/org/netbeans/modules/localhistory/store/CleanupTest.java,63,,"        createFile(store, file2, ts, ""data2"");"
173116,./TargetProjects/netbeans/ide/localhistory/test/unit/src/org/netbeans/modules/localhistory/store/CleanupTest.java,74,,"        changeFile(store, file1, ts, ""data1.1"");"
173117,./TargetProjects/netbeans/ide/localhistory/test/unit/src/org/netbeans/modules/localhistory/store/CleanupTest.java,75,,"        changeFile(store, file2, ts, ""data2.1"");"
173118,./TargetProjects/netbeans/ide/localhistory/test/unit/src/org/netbeans/modules/localhistory/store/CleanupTest.java,230,,"        lh.reset(); ts2days = changeFile(store, file1, ts2days, ""data1.2""); lh.waitUntilDone();"
173119,./TargetProjects/netbeans/ide/localhistory/test/unit/src/org/netbeans/modules/localhistory/store/LHTestCase.java,87,,"            fail(""no files in store folder for file "" + file.getAbsolutePath() + "" store folder "" + storeFolder.getAbsolutePath());"
173120,./TargetProjects/netbeans/ide/localhistory/test/unit/src/org/netbeans/modules/localhistory/store/LHTestCase.java,158,,"                fail(""storeDataFile.isFile value in file "" + file.getAbsolutePath() + "" is "" + f + "" instead of "" + isFile);"
173121,./TargetProjects/netbeans/ide/localhistory/test/unit/src/org/netbeans/modules/localhistory/store/LHTestCase.java,158,,"                fail(""storeDataFile.isFile value in file "" + file.getAbsolutePath() + "" is "" + f + "" instead of "" + isFile);"
173122,./TargetProjects/netbeans/ide/localhistory/test/unit/src/org/netbeans/modules/localhistory/store/StoreTest.java,194,,"        File file = new File(dataDir, ""file1"");"
173123,./TargetProjects/netbeans/ide/localhistory/test/unit/src/org/netbeans/modules/localhistory/store/StoreTest.java,195,,"        ts = createFile(store, file, ts, ""data"");"
173124,./TargetProjects/netbeans/ide/localhistory/test/unit/src/org/netbeans/modules/localhistory/store/StoreTest.java,200,,"        file = new File(dataDir, ""file2"");"
173125,./TargetProjects/netbeans/ide/localhistory/test/unit/src/org/netbeans/modules/localhistory/store/StoreTest.java,230,,"        LogHandler lh = new LogHandler(""copied file"", LogHandler.Compare.STARTS_WITH);"
173126,./TargetProjects/netbeans/ide/localhistory/test/unit/src/org/netbeans/modules/localhistory/store/StoreTest.java,250,,"        ts = changeFile(store, file, ts, ""data2"");"
173127,./TargetProjects/netbeans/ide/localhistory/test/unit/src/org/netbeans/modules/localhistory/store/StoreTest.java,329,,"        createFile(store, file1, ts, ""data1"");"
173128,./TargetProjects/netbeans/ide/localhistory/test/unit/src/org/netbeans/modules/localhistory/store/StoreTest.java,337,,"        lh.reset(); changeFile(store, file1, ts, ""data1.1""); lh.waitUntilDone();"
173129,./TargetProjects/netbeans/ide/localhistory/test/unit/src/org/netbeans/modules/localhistory/store/StoreTest.java,338,,"        lh.reset(); changeFile(store, file2, ts, ""data2.1""); lh.waitUntilDone();"
173130,./TargetProjects/netbeans/ide/localhistory/test/unit/src/org/netbeans/modules/localhistory/store/StoreTest.java,383,,"        write(file1, ""data1.2"".getBytes());"
173131,./TargetProjects/netbeans/ide/localtasks/src/org/netbeans/modules/localtasks/task/LocalTask.java,151,,"            + ""<tr><td><b>"" + Bundle.LBL_Task_tooltip_statusLabel() + "":</b></td><td>"" + status + ""</td></tr>""; //NOI18N"
173132,./TargetProjects/netbeans/ide/localtasks/src/org/netbeans/modules/localtasks/task/LocalTask.java,151,,"            + ""<tr><td><b>"" + Bundle.LBL_Task_tooltip_statusLabel() + "":</b></td><td>"" + status + ""</td></tr>""; //NOI18N"
173133,./TargetProjects/netbeans/ide/localtasks/src/org/netbeans/modules/localtasks/task/LocalTask.java,151,,"            + ""<tr><td><b>"" + Bundle.LBL_Task_tooltip_statusLabel() + "":</b></td><td>"" + status + ""</td></tr>""; //NOI18N"
173134,./TargetProjects/netbeans/ide/localtasks/src/org/netbeans/modules/localtasks/task/TaskPanel.java,335,,"        referencesPanel.setBackground(javax.swing.UIManager.getDefaults().getColor(""TextArea.background""));"
173135,./TargetProjects/netbeans/ide/lsp.client/src/org/netbeans/modules/lsp/client/LSPBindings.java,163,,"    @SuppressWarnings(""AccessingNonPublicFieldOfAnotherObject"")"
173136,./TargetProjects/netbeans/ide/lsp.client/src/org/netbeans/modules/lsp/client/options/LanguageStorage.java,104,,"                    FileObject syntax = FileUtil.getConfigFile(""Editors/"" + description.mimeType + ""/syntax.json"");"
173137,./TargetProjects/netbeans/ide/lsp.client/src/org/netbeans/modules/lsp/client/options/LanguageStorage.java,120,,"                    FileObject loader = FileUtil.getConfigFile(""Loaders/"" + description.mimeType + ""/Factories/data-object.instance"");"
173138,./TargetProjects/netbeans/ide/lsp.client/test/unit/src/org/netbeans/modules/lsp/client/LSPBindingsTest.java,61,,"        assertEquals(""application/mock-txt"", file.getMIMEType());"
173139,./TargetProjects/netbeans/ide/lsp.client/test/unit/src/org/netbeans/modules/lsp/client/UtilsTest.java,61,,"            out.write((""0123456789\n"" +"
173140,./TargetProjects/netbeans/ide/lsp.client/test/unit/src/org/netbeans/modules/lsp/client/UtilsTest.java,65,,"                       ""0123456789\n"").getBytes(""UTF-8""));"
173141,./TargetProjects/netbeans/ide/lsp.client/test/unit/src/org/netbeans/modules/lsp/client/UtilsTest.java,85,,"                      ""01b6789\n"" +"
173142,./TargetProjects/netbeans/ide/lsp.client/test/unit/src/org/netbeans/modules/lsp/client/UtilsTest.java,86,,"                      ""012a6789\n"" +"
173143,./TargetProjects/netbeans/ide/lsp.client/test/unit/src/org/netbeans/modules/lsp/client/UtilsTest.java,87,,"                      ""0c456789\n"","
173144,./TargetProjects/netbeans/ide/lsp.client/test/unit/src/org/netbeans/modules/lsp/client/UtilsTest.java,159,,"        doTestDefaultIndent(""   if (true) {\n"" +"
173145,./TargetProjects/netbeans/ide/lsp.client/test/unit/src/org/netbeans/modules/lsp/client/bindings/refactoring/RenameRefactoringTest.java,116,,"        RenameParams renameParams = new RenameParams(new TextDocumentIdentifier(uri), new Position(1, 8), ""newName"");"
173146,./TargetProjects/netbeans/ide/lsp.client/test/unit/src/org/netbeans/modules/lsp/client/bindings/refactoring/RenameRefactoringTest.java,127,,"                String file2URI = file1URI.replace(""data1"", ""data2"");"
173147,./TargetProjects/netbeans/ide/lsp.client/test/unit/src/org/netbeans/modules/lsp/client/bindings/refactoring/RenameRefactoringTest.java,184,,"                    ""  other newName\n"","
173148,./TargetProjects/netbeans/ide/lsp.client/test/unit/src/org/netbeans/modules/lsp/client/options/LanguageStorageTest.java,95,,"        LanguageStorage.store(Arrays.asList(new LanguageDescription(""t"", ""txt"", FileUtil.toFile(grammar).getAbsolutePath(), null, ""txt"", null)));"
173149,./TargetProjects/netbeans/ide/markdown/src/org/netbeans/modules/markdown/MarkdownDataObject.java,55,,"            path = ""Loaders/text/"" + MarkdownDataObject.MIME_TYPE + ""/Actions"","
173150,./TargetProjects/netbeans/ide/markdown/src/org/netbeans/modules/markdown/MarkdownDataObject.java,55,,"            path = ""Loaders/text/"" + MarkdownDataObject.MIME_TYPE + ""/Actions"","
173151,./TargetProjects/netbeans/ide/markdown/src/org/netbeans/modules/markdown/MarkdownDataObject.java,56,,"            id = @ActionID(category = ""System"", id = ""org.openide.actions.OpenAction""),"
173152,./TargetProjects/netbeans/ide/mercurial/src/org/netbeans/modules/mercurial/api/Mercurial.java,82,,"        assert !SwingUtilities.isEventDispatchThread() : ""Accessing remote repository. Do not call in awt!"";"
173153,./TargetProjects/netbeans/ide/mercurial/src/org/netbeans/modules/mercurial/api/Mercurial.java,182,,"            org.netbeans.modules.mercurial.Mercurial.LOG.log(Level.WARNING, ""Mercurial client is unavailable"");"
173154,./TargetProjects/netbeans/ide/mercurial/src/org/netbeans/modules/mercurial/ui/commit/CommitAction.java,462,,"                panel.setErrorLabel(""<html><font color=\"""" + ERROR_COLOR + ""\"">"" + msg + ""</font></html>"");  // NOI18N"
173155,./TargetProjects/netbeans/ide/mercurial/src/org/netbeans/modules/mercurial/ui/commit/CommitAction.java,462,,"                panel.setErrorLabel(""<html><font color=\"""" + ERROR_COLOR + ""\"">"" + msg + ""</font></html>"");  // NOI18N"
173156,./TargetProjects/netbeans/ide/mercurial/src/org/netbeans/modules/mercurial/ui/commit/CommitAction.java,462,,"                panel.setErrorLabel(""<html><font color=\"""" + ERROR_COLOR + ""\"">"" + msg + ""</font></html>"");  // NOI18N"
173157,./TargetProjects/netbeans/ide/mercurial/src/org/netbeans/modules/mercurial/ui/diff/ExportDiffChangesAction.java,212,,"            out.write((""# "" + PATCH_FILE_HEADER + sep).getBytes(""utf8""));  // NOI18N"
173158,./TargetProjects/netbeans/ide/mercurial/src/org/netbeans/modules/mercurial/ui/log/DiffResultsView.java,81,,"        setBottomComponent(new NoContentPanel(NbBundle.getMessage(DiffResultsView.class, ""MSG_DiffPanel_NoRevisions""))); // NOI18N"
173159,./TargetProjects/netbeans/ide/mercurial/src/org/netbeans/modules/mercurial/ui/log/RepositoryRevision.java,158,,"        ""# {0} - revision id"", ""MSG_SearchHistory.pushing=Pushing {0}"","
173160,./TargetProjects/netbeans/ide/mercurial/src/org/netbeans/modules/mercurial/ui/log/RevisionNode.java,180,,"        @SuppressWarnings(""unchecked"")"
173161,./TargetProjects/netbeans/ide/mercurial/src/org/netbeans/modules/mercurial/ui/log/SearchCriteriaPanel.java,74,,"        fromInfoLabel.setText(NbBundle.getMessage(SearchCriteriaPanel.class, ""CTL_FromToOutOrIncomingHint""));"
173162,./TargetProjects/netbeans/ide/mercurial/src/org/netbeans/modules/mercurial/ui/merge/MergeAction.java,81,,"            logger.outputInRed( NbBundle.getMessage(MergeAction.class,""MSG_MERGE_TITLE"")); // NOI18N"
173163,./TargetProjects/netbeans/ide/mercurial/src/org/netbeans/modules/mercurial/ui/status/HgVersioningTopComponent.java,74,,"        putClientProperty(""SlidingName"", NbBundle.getMessage(HgVersioningTopComponent.class, ""CTL_Versioning_TopComponent_Title"")); //NOI18N"
173164,./TargetProjects/netbeans/ide/mercurial/src/org/netbeans/modules/mercurial/util/HgCommand.java,547,,"                    handleError(command, list, NbBundle.getMessage(HgCommand.class, ""MSG_COMMAND_ABORTED""),"
173165,./TargetProjects/netbeans/ide/mercurial/src/org/netbeans/modules/mercurial/util/HgCommand.java,1249,,"                handleError(null, list, NbBundle.getMessage(HgCommand.class, ""MSG_NO_REPOSITORY_ERR""), logger); //NOI18N"
173166,./TargetProjects/netbeans/ide/mercurial/src/org/netbeans/modules/mercurial/util/HgCommand.java,1423,,"            Mercurial.LOG.log(Level.WARNING, ""command: {0}"", HgUtils.replaceHttpPassword(command)); // NOI18N"
173167,./TargetProjects/netbeans/ide/mercurial/src/org/netbeans/modules/mercurial/util/HgCommand.java,1895,,"            epochPlusOneDate = new SimpleDateFormat(""yyyy-MM-dd"").parse(HG_EPOCH_PLUS_ONE_YEAR); // NOI18N"
173168,./TargetProjects/netbeans/ide/mercurial/src/org/netbeans/modules/mercurial/util/HgCommand.java,2230,,"                    throw (new HgException (NbBundle.getMessage(HgCommand.class, ""MSG_UNABLE_TO_CREATE_PARENT_DIR""))); // NOI18N"
173169,./TargetProjects/netbeans/ide/mercurial/src/org/netbeans/modules/mercurial/util/HgCommand.java,2234,,"            Mercurial.LOG.log(Level.WARNING, ""File.mkdir() for : {0} threw SecurityException {1}"", new Object[]{parentTarget.getAbsolutePath(), e.getMessage()}); // NOI18N"
173170,./TargetProjects/netbeans/ide/mercurial/src/org/netbeans/modules/mercurial/util/HgUtils.java,1133,,"                return NbBundle.getMessage(SyncFileNode.class, ""LBL_Location_NotInRepository""); // NOI18N"
173171,./TargetProjects/netbeans/ide/mercurial/test/qa-functional/src/org/netbeans/test/mercurial/main/commit/CommitDataTest.java,106,,"            TestKit.createNewElement(PROJECT_NAME, ""javaapp"", ""NewClass"");"
173172,./TargetProjects/netbeans/ide/mercurial/test/qa-functional/src/org/netbeans/test/mercurial/main/commit/CommitDataTest.java,108,,"            Node nodeFile = new Node(new SourcePackagesNode(PROJECT_NAME), ""javaapp"" + ""|NewClass.java"");"
173173,./TargetProjects/netbeans/ide/mercurial/test/qa-functional/src/org/netbeans/test/mercurial/main/commit/CommitUiTest.java,93,,"            co.selectCommitAction(""NewClass.java"", ""Commit"");"
173174,./TargetProjects/netbeans/ide/mercurial/test/qa-functional/src/org/netbeans/test/mercurial/main/commit/CommitUiTest.java,93,,"            co.selectCommitAction(""NewClass.java"", ""Commit"");"
173175,./TargetProjects/netbeans/ide/mercurial/test/qa-functional/src/org/netbeans/test/mercurial/main/commit/IgnoreTest.java,110,,"            Node node = new Node(new SourcePackagesNode(PROJECT_NAME), ""javaappignunign|NewClassIgnUnign"");"
173176,./TargetProjects/netbeans/ide/mercurial/test/qa-functional/src/org/netbeans/test/mercurial/utils/TestKit.java,69,,"	public static final String PROJECT_CATEGORY = ""Java"";"
173177,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/ExternalChangesTest.java,113,,"        addNoTSRefreshCommand(""commit"");"
173178,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/ExternalChangesTest.java,147,,"        new File(workdir, "".hg"").setLastModified(System.currentTimeMillis());"
173179,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/ExternalChangesTest.java,196,,"        final File lockFile = new File(hgFolder, ""wlock"");"
173180,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/ExternalChangesTest.java,197,,"        Logger GESTURES_LOG = Logger.getLogger(""org.netbeans.ui.vcs"");"
173181,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/ExternalChangesTest.java,271,,"        Mercurial.getInstance().runWithoutExternalEvents(workdir, ""MY_COMMAND"", new Callable<Void>() {"
173182,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/FileStatusCacheTest.java,78,,"        write(f1, ""hello"");"
173183,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/InterceptorTest.java,66,,"        File folder = createFolder(""folder"");"
173184,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/InterceptorTest.java,67,,"        File file = createFile(folder, ""file"");"
173185,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/InterceptorTest.java,94,,"        String attr = (String) fo.getAttribute(""ProvidedExtensions.RemoteLocation"");"
173186,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/InterceptorTest.java,183,,"        File fileA1 = new File(folderA, ""file1"");"
173187,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/InterceptorTest.java,184,,"        File fileA2 = new File(folderA, ""file2"");"
173188,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/InterceptorTest.java,247,,"        File copy = new File(folder, ""copy"");"
173189,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/InterceptorTest.java,257,,"        File target = createFolder(""target"");"
173190,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/InterceptorTest.java,572,,"        File folder = createFolder(""ignoredFolder"");"
173191,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/InterceptorTest.java,574,,"        File toFolder = createFolder(folder, ""toFolder"");"
173192,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/InterceptorTest.java,926,,"        File subfolder1 = createFolder(folder, ""subfolder1"");"
173193,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/InterceptorTest.java,935,,"        File subfolder2 = createFolder(folder, ""subfolder2"");"
173194,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/commands/RebaseCommandTest.java,49,,"        File f = new File(root, ""file"");"
173195,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/commands/RebaseCommandTest.java,63,,"        write(f, ""a\nb\nc"");"
173196,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/commands/RebaseCommandTest.java,69,,"        write(f, ""x\nb\nc"");"
173197,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/commands/StatusCommandTest.java,48,,"        File f = new File(root, ""empty"");"
173198,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/commands/StatusCommandTest.java,49,,"        write(f, ""init"");"
173199,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/getTopmostTest.java,53,,"        File hgr1 = createFolder(r1, "".hg"");"
173200,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/ui/annotate/AnnotateActionTest.java,55,,"            assertFalse(""Testcase "" + idx + "" resulted in FakeAnnotationLine"", result.getClass().getName().contains(""FakeAnnotationLine""));"
173201,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/ui/annotate/AnnotateActionTest.java,160,,"        testInput.add(new AnnotateTestCase(""simpleuser 0 simplefile:1: Simplefile"", ""simpleuser"", ""0"", ""simplefile"", 1, ""Simplefile""));"
173202,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/ui/annotate/AnnotateActionTest.java,160,,"        testInput.add(new AnnotateTestCase(""simpleuser 0 simplefile:1: Simplefile"", ""simpleuser"", ""0"", ""simplefile"", 1, ""Simplefile""));"
173203,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/ui/annotate/AnnotateActionTest.java,161,,"        testInput.add(new AnnotateTestCase(""simpleuser 0 file with space:1: File with space"", ""simpleuser"", ""0"", ""file with space"", 1, ""File with space""));"
173204,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/ui/annotate/AnnotateActionTest.java,162,,"        testInput.add(new AnnotateTestCase(""simpleuser 0 file : with colon:1: File with colon"", ""simpleuser"", ""0"", ""file : with colon"", 1, ""File with colon""));"
173205,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/ui/annotate/AnnotateActionTest.java,163,,"        testInput.add(new AnnotateTestCase(""simpleuser 0 .fileWithLeadingDot:1: File with leading dot"", ""simpleuser"", ""0"", "".fileWithLeadingDot"", 1, ""File with leading dot""));"
173206,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/ui/annotate/AnnotateActionTest.java,164,,"        testInput.add(new AnnotateTestCase(""simpleuser 0  leading and trailing space :1: File with leading and trailing space"", ""simpleuser"", ""0"", "" leading and trailing space "", 1, ""File with leading and trailing space""));"
173207,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/ui/annotate/AnnotateActionTest.java,165,,"        testInput.add(new AnnotateTestCase(""simple:user 1 simplefile:1: User with colon"", ""simple:user"", ""1"", ""simplefile"", 1, ""User with colon""));"
173208,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/ui/annotate/AnnotateActionTest.java,165,,"        testInput.add(new AnnotateTestCase(""simple:user 1 simplefile:1: User with colon"", ""simple:user"", ""1"", ""simplefile"", 1, ""User with colon""));"
173209,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/ui/annotate/AnnotateActionTest.java,170,,"        testInput.add(new AnnotateTestCase(""simple 2 simplefile:1: User with colon and space"", ""simple"", ""2"", ""simplefile"", 1, ""User with colon and space""));"
173210,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/ui/annotate/AnnotateActionTest.java,170,,"        testInput.add(new AnnotateTestCase(""simple 2 simplefile:1: User with colon and space"", ""simple"", ""2"", ""simplefile"", 1, ""User with colon and space""));"
173211,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/ui/annotate/AnnotateActionTest.java,175,,"        testInput.add(new AnnotateTestCase(""simple\\ 3 simplefile:1: User with colon and space 2"", ""simple\\"", ""3"", ""simplefile"", 1, ""User with colon and space 2""));"
173212,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/ui/annotate/AnnotateActionTest.java,175,,"        testInput.add(new AnnotateTestCase(""simple\\ 3 simplefile:1: User with colon and space 2"", ""simple\\"", ""3"", ""simplefile"", 1, ""User with colon and space 2""));"
173213,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/ui/annotate/AnnotateActionTest.java,180,,"        testInput.add(new AnnotateTestCase(""complex:email 4 simplefile:1: Complex user"", ""complex:email"", ""4"", ""simplefile"", 1, ""Complex user""));"
173214,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/ui/annotate/AnnotateActionTest.java,180,,"        testInput.add(new AnnotateTestCase(""complex:email 4 simplefile:1: Complex user"", ""complex:email"", ""4"", ""simplefile"", 1, ""Complex user""));"
173215,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/ui/repository/HgURLTest.java,46,,"        verifyAddAuthenticationMethod(""http://server/path"", ""username"", null,"
173216,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/ui/repository/HgURLTest.java,46,,"        verifyAddAuthenticationMethod(""http://server/path"", ""username"", null,"
173217,./TargetProjects/netbeans/ide/mercurial/test/unit/src/org/netbeans/modules/mercurial/ui/repository/HgURLTest.java,49,,"        verifyAddAuthenticationMethod(""http://server/path"", ""username"", ""password"","
173218,./TargetProjects/netbeans/ide/mylyn.util/src/org/netbeans/modules/mylyn/util/MylynSupport.java,183,,"                : ""Did you forget to implement RepositoryConnectorProvider?"";"
173219,./TargetProjects/netbeans/ide/notifications/src/org/netbeans/modules/notifications/BalloonManager.java,431,,"            g2d.setColor( UIManager.getColor( ""ToolTip.background"" ) ); //NOI18N"
173220,./TargetProjects/netbeans/ide/notifications/src/org/netbeans/modules/notifications/filter/NotificationFilter.java,80,,"        if (prefs.getBoolean(prefix + ""_types"", false)) { //NOI18N"
173221,./TargetProjects/netbeans/ide/notifications/test/unit/src/org/netbeans/modules/notifications/filter/FilterRepositoryTest.java,83,,"        filter.setName(""EMPTY"");"
173222,./TargetProjects/netbeans/ide/notifications/test/unit/src/org/netbeans/modules/notifications/filter/NotificationFilterTest.java,48,,"        categoryFilter.setEnabled(""default_category_error"", false);"
173223,./TargetProjects/netbeans/ide/notifications/test/unit/src/org/netbeans/modules/notifications/filter/TestPreferences.java,58,,"        throw new UnsupportedOperationException(""Not supported yet."");"
173224,./TargetProjects/netbeans/ide/notifications/test/unit/src/org/netbeans/modules/notifications/filter/UtilTest.java,36,,"        assertEquals(""No Filter"", Util.getString(""no-filter""));"
173225,./TargetProjects/netbeans/ide/o.openidex.util/test/unit/src/org/openidex/search/DummyDataObject.java,63,,"        throw new UnsupportedOperationException(""Not supported yet."");"
173226,./TargetProjects/netbeans/ide/o.openidex.util/test/unit/src/org/openidex/search/SearchHistoryTest.java,93,,"        assertFalse(""Only the expected change is fired"", fired[1]);"
173227,./TargetProjects/netbeans/ide/o.openidex.util/test/unit/src/org/openidex/search/SearchHistoryTest.java,150,,"        SearchPattern pattern_one = SearchPattern.create(""one"",false, false, false);"
173228,./TargetProjects/netbeans/ide/o.openidex.util/test/unit/src/org/openidex/search/SearchHistoryTest.java,158,,"        SearchPattern pattern_two = SearchPattern.create(""two"",false, false, false);"
173229,./TargetProjects/netbeans/ide/o.openidex.util/test/unit/src/org/openidex/search/SearchHistoryTest.java,159,,"        SearchPattern pattern_TwO = SearchPattern.create(""TwO"",false, false, false);"
173230,./TargetProjects/netbeans/ide/options.editor/src/org/netbeans/modules/options/indentation/IndentationPanel.java,175,,"        cboLineWrap.setModel(new DefaultComboBoxModel(new Object [] { ""none"", ""words"", ""chars"" })); //NOI18N"
173231,./TargetProjects/netbeans/ide/options.editor/test/unit/src/org/netbeans/modules/options/editor/EditorOptionsTest.java,164,,"            assertFalse (""isChanged should be false if there is no change! (controller = "" + pc + "")"", pc.isChanged ());"
173232,./TargetProjects/netbeans/ide/options.editor/test/unit/src/org/netbeans/modules/options/editor/EditorOptionsTest.java,165,,"            assertTrue (""isvalid should be true if there is no change! (controller = "" + pc + "")"", pc.isValid ());"
173233,./TargetProjects/netbeans/ide/options.editor/test/unit/src/org/netbeans/modules/options/indentation/ProxyPreferencesTest.java,42,,"        orig.put(""key-1"", ""value-1"");"
173234,./TargetProjects/netbeans/ide/options.editor/test/unit/src/org/netbeans/modules/options/indentation/ProxyPreferencesTest.java,45,,"        assertEquals(""Wrong value"", ""value-1"", test.get(""key-1"", null));"
173235,./TargetProjects/netbeans/ide/options.editor/test/unit/src/org/netbeans/modules/options/indentation/ProxyPreferencesTest.java,50,,"        assertNull(""Original contains value"", orig.get(""key-1"", null));"
173236,./TargetProjects/netbeans/ide/options.editor/test/unit/src/org/netbeans/modules/options/indentation/ProxyPreferencesTest.java,53,,"        test.put(""key-1"", ""xyz"");"
173237,./TargetProjects/netbeans/ide/options.editor/test/unit/src/org/netbeans/modules/options/indentation/ProxyPreferencesTest.java,107,,"        checkContains(orig, origTree, ""Orig"");"
173238,./TargetProjects/netbeans/ide/options.editor/test/unit/src/org/netbeans/modules/options/indentation/ProxyPreferencesTest.java,114,,"        checkContains(test, newTree, ""Test"");"
173239,./TargetProjects/netbeans/ide/options.editor/test/unit/src/org/netbeans/modules/options/indentation/ProxyPreferencesTest.java,151,,"        orig.put(""key-2"", ""value-2"");"
173240,./TargetProjects/netbeans/ide/options.editor/test/unit/src/org/netbeans/modules/options/indentation/ProxyPreferencesTest.java,172,,"        Preferences origChild = orig.node(""child"");"
173241,./TargetProjects/netbeans/ide/options.editor/test/unit/src/org/netbeans/modules/options/indentation/ProxyPreferencesTest.java,385,,"            assertNotNull(msg + ""; Expected:"" + expected.absolutePath() + "" has no '"" + key + ""'"", expectedValue);"
173242,./TargetProjects/netbeans/ide/parsing.api/src/org/netbeans/modules/parsing/api/ParserManager.java,77,,"        Parameters.notNull(""userTask"", userTask);   //NOI18N"
173243,./TargetProjects/netbeans/ide/parsing.api/src/org/netbeans/modules/parsing/api/ParserManager.java,240,,"            throw new UnsupportedOperationException(""Read only collection.""); //NOI18N"
173244,./TargetProjects/netbeans/ide/parsing.api/src/org/netbeans/modules/parsing/impl/TaskProcessor.java,146,,"        Parameters.notNull(""task"", task);"
173245,./TargetProjects/netbeans/ide/parsing.api/test/unit/src/org/netbeans/modules/parsing/api/ParserManagerTest.java,64,,"            MimePath.get (""text/foo""), new FooParserFactory());"
173246,./TargetProjects/netbeans/ide/parsing.api/test/unit/src/org/netbeans/modules/parsing/api/RunUserActionTaskTest.java,68,,"            MimePath.get (""text/foo""), "
173247,./TargetProjects/netbeans/ide/parsing.api/test/unit/src/org/netbeans/modules/parsing/api/RunUserActionTaskTest.java,78,,"                                    snapshot.create (10, 10, ""text/boo"")"
173248,./TargetProjects/netbeans/ide/parsing.api/test/unit/src/org/netbeans/modules/parsing/api/RunUserActionTaskTest.java,101,,"                    assertEquals (""stovaci fi"", snapshots[0].getText ().toString ());"
173249,./TargetProjects/netbeans/ide/parsing.api/test/unit/src/org/netbeans/modules/parsing/api/RunUserActionTaskTest.java,137,,"        FileUtil.setMIMEType (""foo"", ""text/foo"");"
173250,./TargetProjects/netbeans/ide/parsing.api/test/unit/src/org/netbeans/modules/parsing/api/RunUserActionTaskTest.java,139,,"        FileObject testFile = FileUtil.createData (workDir, ""bla.foo"");"
173251,./TargetProjects/netbeans/ide/parsing.api/test/unit/src/org/netbeans/modules/parsing/api/RunUserActionTaskTest.java,142,,"        writer.append (""Toto je testovaci file, na kterem se budou delat hnusne pokusy!!!"");"
173252,./TargetProjects/netbeans/ide/parsing.api/test/unit/src/org/netbeans/modules/parsing/api/SnapshotTest.java,500,,"            originalSnapshot.create (18, 4, ""text/jedna""),"
173253,./TargetProjects/netbeans/ide/parsing.api/test/unit/src/org/netbeans/modules/parsing/api/SourceTest.java,58,,"        FileUtil.setMIMEType(""txt"", ""text/plain"");  //NOI18N"
173254,./TargetProjects/netbeans/ide/parsing.api/test/unit/src/org/netbeans/modules/parsing/api/SourceTest.java,86,,"        FileObject file = createFileObject(""plain.txt"", ""Hey dude!"", ""\n"");"
173255,./TargetProjects/netbeans/ide/parsing.api/test/unit/src/org/netbeans/modules/parsing/api/SourceTest.java,88,,"        assertNotNull(""No Source for "" + file, source);"
173256,./TargetProjects/netbeans/ide/parsing.api/test/unit/src/org/netbeans/modules/parsing/api/SourceTest.java,187,,"        FileObject file = createFileObject(""empty.txt"", """", ""\n"");"
173257,./TargetProjects/netbeans/ide/parsing.api/test/unit/src/org/netbeans/modules/parsing/api/SourceTest.java,190,,"        assertSame(""Wrong FileObject"", file, source.getFileObject());"
173258,./TargetProjects/netbeans/ide/parsing.api/test/unit/src/org/netbeans/modules/parsing/api/SourceTest.java,191,,"        assertSame(""Inconsistent Source.create(FileObject)"", source, Source.create(file));"
173259,./TargetProjects/netbeans/ide/parsing.api/test/unit/src/org/netbeans/modules/parsing/impl/CachingTest.java,135,,"                            test.check (""foo parse "" + i + "" (Snapshot "" + test.get (snapshot) + "", "" + task + "", "" + event + ""), \n"");"
173260,./TargetProjects/netbeans/ide/parsing.api/test/unit/src/org/netbeans/modules/parsing/impl/CachingTest.java,135,,"                            test.check (""foo parse "" + i + "" (Snapshot "" + test.get (snapshot) + "", "" + task + "", "" + event + ""), \n"");"
173261,./TargetProjects/netbeans/ide/parsing.api/test/unit/src/org/netbeans/modules/parsing/impl/CancelSupportTest.java,131,,"        assertTrue(""Task cancelled"", task.isABCancelled()); //NOI18N"
173262,./TargetProjects/netbeans/ide/parsing.api/test/unit/src/org/netbeans/modules/parsing/impl/CaretSchelulerTest.java,105,,"                            test.check (""foo parse "" + i + "" (Snapshot "" + test.get (snapshot) + "", "" + task + "", "" + event + ""), \n"");"
173263,./TargetProjects/netbeans/ide/parsing.api/test/unit/src/org/netbeans/modules/parsing/impl/CaretSchelulerTest.java,105,,"                            test.check (""foo parse "" + i + "" (Snapshot "" + test.get (snapshot) + "", "" + task + "", "" + event + ""), \n"");"
173264,./TargetProjects/netbeans/ide/parsing.api/test/unit/src/org/netbeans/modules/parsing/impl/EmbeddingTest.java,132,,"                            test.check (""foo parse "" + i + "" (Snapshot "" + test.get (snapshot) + "", "" + task + "", "" + event + ""), \n"");"
173265,./TargetProjects/netbeans/ide/parsing.api/test/unit/src/org/netbeans/modules/parsing/impl/EmbeddingTest.java,132,,"                            test.check (""foo parse "" + i + "" (Snapshot "" + test.get (snapshot) + "", "" + task + "", "" + event + ""), \n"");"
173266,./TargetProjects/netbeans/ide/parsing.api/test/unit/src/org/netbeans/modules/parsing/impl/EmbeddingTest.java,200,,"                                test.check (""foo task1 "" + i + "" ("" + result + "", SchedulerEvent "" + test.get (event) + ""), \n"");"
173267,./TargetProjects/netbeans/ide/parsing.api/test/unit/src/org/netbeans/modules/parsing/impl/TaskProcessorTest.java,124,,"        FileUtil.setMIMEType(""foo"", ""text/foo"");"
173268,./TargetProjects/netbeans/ide/parsing.api/test/unit/src/org/netbeans/modules/parsing/impl/TaskProcessorTest.java,124,,"        FileUtil.setMIMEType(""foo"", ""text/foo"");"
173269,./TargetProjects/netbeans/ide/parsing.api/test/unit/src/org/netbeans/modules/parsing/impl/TaskProcessorTest.java,165,,"        final FileObject file = FileUtil.createData(new File(workingDir,""test.foo""));"
173270,./TargetProjects/netbeans/ide/parsing.api/test/unit/src/org/netbeans/modules/parsing/impl/TwoFiles156606Test.java,114,,"                            test.check (""foo parse "" + i + "" (Snapshot "" + test.get (snapshot) + "", "" + task + "", "" + event + "" "" + test.get (event) + ""), \n"");"
173271,./TargetProjects/netbeans/ide/parsing.api/test/unit/src/org/netbeans/modules/parsing/impl/TwoFiles156606Test.java,114,,"                            test.check (""foo parse "" + i + "" (Snapshot "" + test.get (snapshot) + "", "" + task + "", "" + event + "" "" + test.get (event) + ""), \n"");"
173272,./TargetProjects/netbeans/ide/parsing.indexing/src/org/netbeans/modules/parsing/impl/indexing/IndexerCache.java,105,,"        @SuppressWarnings(""unchecked"")"
173273,./TargetProjects/netbeans/ide/parsing.indexing/src/org/netbeans/modules/parsing/impl/indexing/LogContext.java,1003,,"        sb.append(""\nScanned roots: "").append(scannedSourceRoots.values().toString().replaceAll("","", ""\n\t""))."
173274,./TargetProjects/netbeans/ide/parsing.indexing/src/org/netbeans/modules/parsing/impl/indexing/LongHashMap.java,192,,"        @SuppressWarnings(""unchecked"")"
173275,./TargetProjects/netbeans/ide/parsing.indexing/src/org/netbeans/modules/parsing/impl/indexing/PathRecognizerRegistry.java,49,,"    @SuppressWarnings(""unchecked"")"
173276,./TargetProjects/netbeans/ide/parsing.indexing/src/org/netbeans/modules/parsing/impl/indexing/PathRegistry.java,91,,"        value=""DMI_COLLECTION_OF_URLS"","
173277,./TargetProjects/netbeans/ide/parsing.indexing/src/org/netbeans/modules/parsing/impl/indexing/PathRegistry.java,92,,"        justification=""URLs have never host part"")"
173278,./TargetProjects/netbeans/ide/parsing.indexing/src/org/netbeans/modules/parsing/impl/indexing/PathRegistry.java,564,,"    @SuppressWarnings(""ReturnOfCollectionOrArrayField"")"
173279,./TargetProjects/netbeans/ide/parsing.indexing/src/org/netbeans/modules/parsing/impl/indexing/ProxyBinaryIndexerFactory.java,55,,"            value=""DMI_COLLECTION_OF_URLS"","
173280,./TargetProjects/netbeans/ide/parsing.indexing/src/org/netbeans/modules/parsing/impl/indexing/RepositoryUpdater.java,172,,"    @SuppressWarnings(""AccessingNonPublicFieldOfAnotherObject"")"
173281,./TargetProjects/netbeans/ide/parsing.indexing/src/org/netbeans/modules/parsing/impl/indexing/RepositoryUpdater.java,331,,"        value=""DMI_COLLECTION_OF_URLS"","
173282,./TargetProjects/netbeans/ide/parsing.indexing/src/org/netbeans/modules/parsing/impl/indexing/RepositoryUpdater.java,332,,"        justification=""URLs have never host part"")"
173283,./TargetProjects/netbeans/ide/parsing.indexing/src/org/netbeans/modules/parsing/impl/indexing/RepositoryUpdater.java,699,,"                            ""Ignoring event from non existing FileObject {0}"",  //NOI18N"
173284,./TargetProjects/netbeans/ide/parsing.indexing/src/org/netbeans/modules/parsing/impl/indexing/RepositoryUpdater.java,788,,"                    processed ? ""processed"" : ""ignored"",    //NOI18N"
173285,./TargetProjects/netbeans/ide/parsing.indexing/src/org/netbeans/modules/parsing/impl/indexing/RepositoryUpdater.java,788,,"                    processed ? ""processed"" : ""ignored"",    //NOI18N"
173286,./TargetProjects/netbeans/ide/parsing.indexing/src/org/netbeans/modules/parsing/impl/indexing/RepositoryUpdater.java,1073,,"                @SuppressWarnings(""unchecked"")"
173287,./TargetProjects/netbeans/ide/parsing.indexing/src/org/netbeans/modules/parsing/impl/indexing/RepositoryUpdater.java,1674,,"    value=""DMI_BLOCKING_METHODS_ON_URL"","
173288,./TargetProjects/netbeans/ide/parsing.indexing/src/org/netbeans/modules/parsing/impl/indexing/RepositoryUpdater.java,4056,,"                    LOGGER.log(Level.FINE, ""Cancelling {0}, because of {1}"", new Object[]{this, newWork}); //NOI18N"
173289,./TargetProjects/netbeans/ide/parsing.indexing/src/org/netbeans/modules/parsing/impl/indexing/RepositoryUpdater.java,6419,,"            sb.append(""  initialRoots2Deps("").append(initialRoots2Deps.size()).append("")=\n""); //NOI18N"
173290,./TargetProjects/netbeans/ide/parsing.indexing/src/org/netbeans/modules/parsing/impl/indexing/RepositoryUpdater.java,6522,,"        @SuppressWarnings(""ReturnOfCollectionOrArrayField"") //Collection already unmodifiable"
173291,./TargetProjects/netbeans/ide/parsing.indexing/src/org/netbeans/modules/parsing/impl/indexing/RootsListener.java,109,,"    value=""DMI_COLLECTION_OF_URLS"","
173292,./TargetProjects/netbeans/ide/parsing.indexing/src/org/netbeans/modules/parsing/impl/indexing/RootsListener.java,110,,"    justification=""URLs have never host part"")"
173293,./TargetProjects/netbeans/ide/parsing.indexing/src/org/netbeans/modules/parsing/spi/indexing/Indexable.java,267,,"            Parameters.notNull(""indexer"", indexer);     //NOI18N"
173294,./TargetProjects/netbeans/ide/parsing.indexing/src/org/netbeans/modules/parsing/spi/indexing/support/QuerySupport.java,133,,"            LOG.fine(""----""); //NOI18N"
173295,./TargetProjects/netbeans/ide/parsing.indexing/src/org/netbeans/modules/parsing/spi/indexing/support/QuerySupport.java,152,,"    @org.netbeans.api.annotations.common.SuppressWarnings(value={""DMI_COLLECTION_OF_URLS""}, justification=""URLs have never host part"")"
173296,./TargetProjects/netbeans/ide/parsing.indexing/src/org/netbeans/modules/parsing/spi/indexing/support/QuerySupport.java,152,,"    @org.netbeans.api.annotations.common.SuppressWarnings(value={""DMI_COLLECTION_OF_URLS""}, justification=""URLs have never host part"")"
173297,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/ClusteredIndexablesCacheTest.java,173,,"            Collection<? extends IndexResult> res = qs.query(""_sn"", """", QuerySupport.Kind.PREFIX, (String[]) null);   //NOI18N"
173298,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/ClusteredIndexablesTest.java,74,,"            SPIAccessor.getInstance().create(new TestIndexable(""foo/indexable1"", ""text/plain"")),"
173299,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/ClusteredIndexablesTest.java,83,,"            SPIAccessor.getInstance().create(new TestIndexable(""xml/indexable1"", ""text/xml"")),"
173300,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/ConstrainedBinaryIndexerTest.java,397,,"        URL root = createArchive (getWorkDir(), ""tr.jar"", new String[0]); //NOI18N"
173301,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/DocumentStoreTest.java,78,,"                    String.format(""%s%d"", path, i)),i));        //NOI18N"
173302,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/DocumentStoreTest.java,86,,"            assertEquals(1, doc.getValues(""val"").length);                       //NOI18N"
173303,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/DocumentStoreTest.java,88,,"            assertEquals(1, doc.getValues(""bin"").length);                       //NOI18N"
173304,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/DocumentStoreTest.java,90,,"            assertEquals(1, doc.getValues(""hex"").length);                       //NOI18N"
173305,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/EmbeddedIndexerTest.java,182,,"        Collection<? extends IndexResult> res = sup.query(""_sn"", srcFile.getNameExt(), QuerySupport.Kind.EXACT, (String[]) null);"
173306,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/FileListWorkOrderingTest.java,106,,"        final Logger logger = Logger.getLogger(RepositoryUpdater.class.getName()+"".tests""); //NOI18N"
173307,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/FileListWorkOrderingTest.java,254,,"                          LogContext.create(LogContext.EventType.PATH, ""Test""));    //NOI18N"
173308,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/FileObjectCrawlerTest.java,89,,"        final FileObject src = FileUtil.createFolder(FileUtil.toFileObject(getWorkDir()), ""src"");"
173309,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/FileObjectCrawlerTest.java,127,,"        assertCollectedFiles(""Wrong files collected"", crawler.getAllResources(),"
173310,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/FileObjectCrawlerTest.java,144,,"                ""org/pckg1/file1.txt"","
173311,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/FileObjectCrawlerTest.java,145,,"                ""org/pckg1/pckg2/file1.txt"","
173312,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/FileObjectCrawlerTest.java,146,,"                ""org/pckg1/pckg2/file2.txt"","
173313,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/FileObjectCrawlerTest.java,204,,"        assertCollectedFiles(""Wrong all files collected"", crawler1.getAllResources(), paths);"
173314,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/FileObjectCrawlerTest.java,341,,"                ""org/bar/file1.txt"","
173315,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/FileObjectCrawlerTest.java,342,,"                ""org/foo/file2.txt"","
173316,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/FileObjectCrawlerTest.java,367,,"                ""org/me/prj/foo/file2.txt"","
173317,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/FileObjectCrawlerTest.java,368,,"                ""org/me/prj/bar/file3.txt"","
173318,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/IndexerVersionsTest.java,144,,"        assertNotNull(CacheFolder.getDataFolder(srcRoot1.getURL()).getFileObject(String.format(""%s/%d"", indexerFactory.getIndexerName(), firstVersion)));"
173319,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/RefreshWorkTest.java,118,,"        assertTrue(""Work has not finished"", rw.getDone());"
173320,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/RefreshWorkTest.java,120,,"        assertTrue(""Expecting "" + rootAUrl + "" to be scanned"", indexer.indexedFiles.containsKey(rootAUrl));"
173321,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/RefreshWorkTest.java,120,,"        assertTrue(""Expecting "" + rootAUrl + "" to be scanned"", indexer.indexedFiles.containsKey(rootAUrl));"
173322,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/RefreshWorkTest.java,122,,"        assertFalse(""Expecting "" + rootCUrl + "" not to be scanned"", indexer.indexedFiles.containsKey(rootCUrl));"
173323,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/RepositoryUpdater2Test.java,135,,"        MockMimeLookup.setInstances(MimePath.parse(""text/plain""));"
173324,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/RepositoryUpdater2Test.java,151,,"        FileUtil.setMIMEType(""txt"", ""text/plain"");"
173325,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/RepositoryUpdater2Test.java,152,,"        final FileObject srcRoot1 = workDir.createFolder(""src1"");"
173326,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/RepositoryUpdater2Test.java,153,,"        final FileObject file1 = srcRoot1.createData(""file1.txt"");"
173327,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/RepositoryUpdater2Test.java,155,,"        final FileObject srcRoot2 = workDir.createFolder(""src2"");"
173328,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/RepositoryUpdater2Test.java,156,,"        final FileObject file2 = srcRoot2.createData(""file2.txt"");"
173329,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/RepositoryUpdater2Test.java,327,,"        assertEquals(""No roots should be indexed yet"", 0, indexer.indexedRoots.size());"
173330,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/RepositoryUpdater2Test.java,856,,"        assertEquals(""Wrong number of roots"", 2, indexer.indexed.size());"
173331,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/RepositoryUpdaterTest.java,241,,"        FileUtil.setMIMEType(""jar"", JARMIME);"
173332,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/RepositoryUpdaterTest.java,266,,"        FileUtil.setMIMEType(""foo"", MIME);"
173333,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/RepositoryUpdaterTest.java,275,,"        FileUtil.setMIMEType(""emb"", EMIME);"
173334,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/RepositoryUpdaterTest.java,291,,"        final Logger logger = Logger.getLogger(RepositoryUpdater.class.getName()+"".tests"");"
173335,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/RepositoryUpdaterTest.java,1053,,"        assertTrue(""RefreshWork didn't absorb FileListWork"", rw.absorb(flw));"
173336,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/RepositoryUpdaterTest.java,1790,,"                        case ""scanSources"": //NOI18N"
173337,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/RepositoryUpdaterTest.java,1985,,"        FileUtil.createData(rootFo, ""a.foo"");   //NOI18N"
173338,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/RepositoryUpdaterTest.java,2046,,"            h.expect(""reportScanOfFile:"",""INDEXING_FINISHED"");   //NOI18N"
173339,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/RepositoryUpdaterTest.java,2134,,"            h.expect(""INDEXING_STARTED"",""INDEXING_FINISHED"");   //NOI18N"
173340,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/VisibilityChangeTest.java,113,,"        src1file1 = src1.createData(""test"", FOO_EXT);   //NOI18N"
173341,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/VisibilityChangeTest.java,115,,"        src1file2 = src1.createData(""test2"", FOO_EXT);  //NOI18N"
173342,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/VisibilityChangeTest.java,142,,"        final Logger logger = Logger.getLogger(RepositoryUpdater.class.getName()+"".tests""); //NOI18N"
173343,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/errors/TaskProviderTest.java,142,,"            throw new UnsupportedOperationException(""Not supported yet."");"
173344,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/impl/indexing/lucene/LuceneIndexTest.java,69,,"            docwrap.addPair(""bin"", Integer.toBinaryString(i), true, true);"
173345,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/spi/indexing/support/IndexingSupportTest.java,98,,"                ""fooIndexer"","
173346,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/spi/indexing/support/IndexingSupportTest.java,151,,"        doc1.addPair(""class"", ""String"", true, true);"
173347,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/spi/indexing/support/IndexingSupportTest.java,151,,"        doc1.addPair(""class"", ""String"", true, true);"
173348,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/spi/indexing/support/IndexingSupportTest.java,152,,"        doc1.addPair(""package"", ""java.lang"", true, true);"
173349,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/spi/indexing/support/IndexingSupportTest.java,152,,"        doc1.addPair(""package"", ""java.lang"", true, true);"
173350,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/spi/indexing/support/IndexingSupportTest.java,157,,"        doc2.addPair(""class"", ""Object"", true, true);"
173351,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/spi/indexing/support/IndexingSupportTest.java,159,,"        doc2.addPair(""flag"", ""true"", true, true);"
173352,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/spi/indexing/support/IndexingSupportTest.java,159,,"        doc2.addPair(""flag"", ""true"", true, true);"
173353,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/spi/indexing/support/IndexingSupportTest.java,331,,"        doc3.addPair(""package"", ""org.omg.CORBA"", true, true);"
173354,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/spi/indexing/support/IndexingSupportTest.java,336,,"        doc4.addPair(""class"", ""Integer"", true, true);"
173355,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/spi/indexing/support/IndexingSupportTest.java,450,,"        assertFalse(""Expecting getIndex not called"", lif.getIndexCalled);"
173356,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/spi/indexing/support/IndexingSupportTest.java,477,,"        ca.put(""name"",Collections.<String>singleton(f1.getName()));            //NOI18N"
173357,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/spi/indexing/support/QuerySupportLifeLock230220Test.java,138,,"                ""key"",  //NOI18N"
173358,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/spi/indexing/support/QuerySupportTest.java,99,,"        final FileObject src1 = FileUtil.createFolder(wd,""src1"");   //NOI18N"
173359,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/spi/indexing/support/QuerySupportTest.java,101,,"        final FileObject src2 = FileUtil.createFolder(wd,""src2"");   //NOI18N"
173360,./TargetProjects/netbeans/ide/parsing.indexing/test/unit/src/org/netbeans/modules/parsing/spi/indexing/support/QuerySupportTest.java,103,,"        final FileObject src3 = FileUtil.createFolder(wd,""src3"");   //NOI18N"
173361,./TargetProjects/netbeans/ide/parsing.lucene/src/org/netbeans/modules/parsing/lucene/support/IndexManager.java,262,,"        Parameters.notNull(""cacheFolder"", cacheFolder); //NOI18N"
173362,./TargetProjects/netbeans/ide/parsing.lucene/src/org/netbeans/modules/parsing/lucene/support/IndexManager.java,351,,"        Parameters.notNull(""cache"", cache);     //NOI18N"
173363,./TargetProjects/netbeans/ide/parsing.lucene/test/unit/src/org/netbeans/modules/parsing/lucene/DocumentIndexPerfTest.java,66,,"                Query q = Queries.createQuery(""bin"", ""bin"", ""101.*1"", Queries.QueryKind.REGEXP);  //NOI18N"
173364,./TargetProjects/netbeans/ide/parsing.lucene/test/unit/src/org/netbeans/modules/parsing/lucene/DocumentIndexPerfTest.java,70,,"                    index.query(q, c, ""bin"",""hex""); //NOI18N"
173365,./TargetProjects/netbeans/ide/parsing.lucene/test/unit/src/org/netbeans/modules/parsing/lucene/IndexTransactionTest.java,85,,"                new StrToDocConvertor(""resources""),"
173366,./TargetProjects/netbeans/ide/parsing.lucene/test/unit/src/org/netbeans/modules/parsing/lucene/IndexTransactionTest.java,146,,"        IndexDocument doc = IndexManager.createDocument(""manicka"");"
173367,./TargetProjects/netbeans/ide/parsing.lucene/test/unit/src/org/netbeans/modules/parsing/lucene/IndexTransactionTest.java,147,,"        doc.addPair(""name"", ""manicka"", true, false);"
173368,./TargetProjects/netbeans/ide/parsing.lucene/test/unit/src/org/netbeans/modules/parsing/lucene/IndexTransactionTest.java,148,,"        doc.addPair(""age"", ""10"", true, true);"
173369,./TargetProjects/netbeans/ide/parsing.lucene/test/unit/src/org/netbeans/modules/parsing/lucene/IndexTransactionTest.java,160,,"        IndexDocument doc2 = IndexManager.createDocument(""hurvinek"");"
173370,./TargetProjects/netbeans/ide/parsing.lucene/test/unit/src/org/netbeans/modules/parsing/lucene/LuceneIndexTest.java,84,,"                new StrToDocConvertor(""resources""),"
173371,./TargetProjects/netbeans/ide/parsing.lucene/test/unit/src/org/netbeans/modules/parsing/lucene/LuceneIndexTest.java,85,,"                new StrToQueryCovertor(""resource""),"
173372,./TargetProjects/netbeans/ide/parsing.lucene/test/unit/src/org/netbeans/modules/parsing/lucene/RawIndexPerfTest.java,115,,"        return new TermQuery(new Term(""dec"", String.valueOf(i)));"
173373,./TargetProjects/netbeans/ide/parsing.lucene/test/unit/src/org/netbeans/modules/parsing/lucene/RecordOwnerLockFactoryTest.java,47,,"        final Lock lock = lockFactory.makeLock(""test""); //NOI18N"
173374,./TargetProjects/netbeans/ide/parsing.lucene/test/unit/src/org/netbeans/modules/parsing/lucene/RecordOwnerLockFactoryTest.java,81,,"        final Lock lock3 = lockFactory.makeLock(""test3"");   //NOI18N"
173375,./TargetProjects/netbeans/ide/parsing.nb/test/unit/src/org/netbeans/modules/parsing/nb/DocumentModification1Test.java,144,,"                            test.check (""foo parse "" + i + "" (Snapshot "" + test.get (snapshot) + "", "" + task + "", "" + event + ""), \n"");"
173376,./TargetProjects/netbeans/ide/parsing.nb/test/unit/src/org/netbeans/modules/parsing/nb/DocumentModification1Test.java,144,,"                            test.check (""foo parse "" + i + "" (Snapshot "" + test.get (snapshot) + "", "" + task + "", "" + event + ""), \n"");"
173377,./TargetProjects/netbeans/ide/parsing.nb/test/unit/src/org/netbeans/modules/parsing/nb/DocumentModification1Test.java,153,,"                                    test.check (""foo invalidate "" + i + "", \n"");"
173378,./TargetProjects/netbeans/ide/parsing.nb/test/unit/src/org/netbeans/modules/parsing/nb/DocumentModification2Test.java,133,,"                            test.check (""foo parse "" + i + "" (Snapshot "" + test.get (snapshot) + "", "" + task + "", "" + event + ""), \n"");"
173379,./TargetProjects/netbeans/ide/parsing.nb/test/unit/src/org/netbeans/modules/parsing/nb/DocumentModification2Test.java,133,,"                            test.check (""foo parse "" + i + "" (Snapshot "" + test.get (snapshot) + "", "" + task + "", "" + event + ""), \n"");"
173380,./TargetProjects/netbeans/ide/parsing.nb/test/unit/src/org/netbeans/modules/parsing/nb/DocumentModificationNoLexerTest.java,130,,"                            test.check (""foo parse "" + i + "" (Snapshot "" + test.get (snapshot) + "", "" + task + "", "" + event + ""), \n"");"
173381,./TargetProjects/netbeans/ide/parsing.nb/test/unit/src/org/netbeans/modules/parsing/nb/DocumentModificationNoLexerTest.java,130,,"                            test.check (""foo parse "" + i + "" (Snapshot "" + test.get (snapshot) + "", "" + task + "", "" + event + ""), \n"");"
173382,./TargetProjects/netbeans/ide/parsing.nb/test/unit/src/org/netbeans/modules/parsing/nb/FileModificationTest.java,120,,"                            test.check (""foo parse "" + i + "" (Snapshot "" + test.get (snapshot) + "", "" + task + "", "" + event + "" "" + test.get (event) + ""), \n"");"
173383,./TargetProjects/netbeans/ide/parsing.nb/test/unit/src/org/netbeans/modules/parsing/nb/FileModificationTest.java,120,,"                            test.check (""foo parse "" + i + "" (Snapshot "" + test.get (snapshot) + "", "" + task + "", "" + event + "" "" + test.get (event) + ""), \n"");"
173384,./TargetProjects/netbeans/ide/parsing.nb/test/unit/src/org/netbeans/modules/parsing/nb/TaskProcessorSuspendTest.java,63,,"        FileUtil.setMIMEType(""foo"", ""text/foo"");    //NOI18N"
173385,./TargetProjects/netbeans/ide/project.ant.ui/src/org/netbeans/modules/project/ant/ui/FileChooserAccessory.java,539,,"        rbRelative.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(FileChooserAccessory.class, ""ACSD_FileChooserAccessory_NA"")); // NOI18N"
173386,./TargetProjects/netbeans/ide/project.ant.ui/src/org/netbeans/modules/project/ant/ui/VariablePanel.java,123,,"        jLabel1.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(VariablePanel.class, ""ACSD_VariablePanel_NA"")); // NOI18N"
173387,./TargetProjects/netbeans/ide/project.ant.ui/src/org/netbeans/modules/project/ant/ui/VariablesPanel.java,173,,"        tree.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(VariablesPanel.class, ""ACSD_VariablesPanel_NA"")); // NOI18N"
173388,./TargetProjects/netbeans/ide/project.ant.ui/src/org/netbeans/spi/project/support/ant/ui/LicenseHeadersPanel.java,339,,"                if (displayName.startsWith(""license-"")) {"
173389,./TargetProjects/netbeans/ide/project.ant.ui/test/unit/src/org/netbeans/modules/project/ant/ui/VariablesModelTest.java,62,,"        model.add(""TEST_BASE_2"", var2);"
173390,./TargetProjects/netbeans/ide/project.ant.ui/test/unit/src/org/netbeans/spi/project/support/ant/ui/StoreGroupTest.java,68,,"            new String[] { ""propTrue"", ""true"", ""false"", ""true"" },"
173391,./TargetProjects/netbeans/ide/project.ant.ui/test/unit/src/org/netbeans/spi/project/support/ant/ui/StoreGroupTest.java,68,,"            new String[] { ""propTrue"", ""true"", ""false"", ""true"" },"
173392,./TargetProjects/netbeans/ide/project.ant.ui/test/unit/src/org/netbeans/spi/project/support/ant/ui/StoreGroupTest.java,100,,"            assertEquals( ""Button ["" + i + ""] has to have correct value."", Boolean.valueOf( TEST_PROPERTIES[i][3] ).booleanValue(), buttons[i].isSelected() );"
173393,./TargetProjects/netbeans/ide/project.ant/src/org/netbeans/modules/project/ant/ProjectLibraryProvider.java,186,,"                return f.isDirectory() || (f.getName().endsWith("".properties"") && !f.getName().endsWith(""-private.properties"")); // NOI18N"
173394,./TargetProjects/netbeans/ide/project.ant/src/org/netbeans/modules/project/ant/ProjectLibraryProvider.java,323,,"                replaceProperty(f, true, ""libs."" + name + "".classpath"", """"); // NOI18N"
173395,./TargetProjects/netbeans/ide/project.ant/src/org/netbeans/modules/project/ant/ProjectLibraryProvider.java,390,,"                        value = value.replace(""${base}"", basedir); // NOI18N"
173396,./TargetProjects/netbeans/ide/project.ant/src/org/netbeans/spi/project/support/ant/GlobFileBuiltQuery.java,132,,"                    LOG.log(Level.FINE, ""{0} evaluates to null"", fromPrefixes[i]);"
173397,./TargetProjects/netbeans/ide/project.ant/src/org/netbeans/spi/project/support/ant/ReferenceHelper.java,205,,"                String forProjName = findReferenceID(projName, ""project."", forProjDir.getAbsolutePath());"
173398,./TargetProjects/netbeans/ide/project.ant/src/org/netbeans/spi/project/support/ant/ReferenceHelper.java,978,,"                    String prop = findReferenceID(fileID, ""file.reference."", normalizedFile.getAbsolutePath()); // NOI18N"
173399,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/api/project/ant/AntBuildExtenderTest.java,88,,"        instance.addExtension(""milos"", extension1);"
173400,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/modules/project/ant/AntBasedProjectFactorySingletonTest.java,94,,"        TestFileUtils.writeFile(projdir, ""nbproject/project.xml"", content.replace(""</project>"", ""<bogus/>\n</project>""));"
173401,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/modules/project/ant/AntBasedProjectFactorySingletonTest.java,170,,"                ""   <c/>\n"" +"
173402,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/modules/project/ant/AntBasedProjectFactorySingletonTest.java,172,,"                ""   <b/>\n"" +"
173403,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/modules/project/ant/ProjectLibraryProviderTest.java,115,,"        assertEquals(matcher.group(2), ""classpath"");"
173404,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/modules/project/ant/ProjectLibraryProviderTest.java,146,,"        Library lib = LibraryManager.forLocation(new URL(base, ""libs/my%20libraries.properties"")).getLibrary(""jgraph"");"
173405,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/modules/project/ant/ProjectLibraryProviderTest.java,151,,"        assertEquals(""j2se"", lib.getType());"
173406,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/modules/project/ant/ProjectLibraryProviderTest.java,153,,"        assertEquals(Arrays.asList(new URL(""jar:""+base.toExternalForm()+""libs/jgraph.jar!/""), new URL(""jar:""+base.toExternalForm()+""extra%20libs/jgraph-extras.jar!/"")), lib.getContent(""classpath""));"
173407,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/modules/project/ant/ProjectLibraryProviderTest.java,154,,"        assertEquals(Arrays.asList(new URI(""api/jgraph-docs/""), new URI(""api/jgraph-docs.zip!/docs/api/"")), lib.getURIContent(""javadoc""));"
173408,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/modules/project/ant/ProjectLibraryProviderTest.java,155,,"        assertEquals(Collections.emptyList(), lib.getContent(""src""));"
173409,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/modules/project/ant/ProjectLibraryProviderTest.java,163,,"        writeProperties(""libs/libraries.properties"","
173410,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/modules/project/ant/ProjectLibraryProviderTest.java,168,,"        storeDefs(project, ""../libs/libraries.properties"");"
173411,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/modules/project/ant/ProjectLibraryProviderTest.java,180,,"                ""libs.jgraph.classpath="" + new File(getWorkDir(), ""jgraph-api""));"
173412,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/modules/project/ant/ProjectLibraryProviderTest.java,231,,"        writeProperties(""libraries.properties"","
173413,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/modules/project/ant/ProjectLibraryProviderTest.java,275,,"        Library lib = mgr.createURILibrary(""j2se"", ""javahelp"", content);"
173414,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/modules/project/ant/ProjectLibraryProviderTest.java,473,,"        new File(this.getWorkDir(), ""sources"").mkdir();"
173415,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/modules/project/ant/ProjectLibraryProviderTest.java,483,,"        LibraryImplementation l1 = LibrariesSupport.createLibraryImplementation(""j2test"", new String[]{""jars"", ""sources""});"
173416,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/modules/project/ant/ProjectLibraryProviderTest.java,483,,"        LibraryImplementation l1 = LibrariesSupport.createLibraryImplementation(""j2test"", new String[]{""jars"", ""sources""});"
173417,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,99,,"        TestUtil.createFileFromContent(AntProjectHelperTest.class.getResource(""data/project.xml""), projdir, ""nbproject/project.xml"");"
173418,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,119,,"        assertEquals(""found something in project lookup"", ""hello"", p.getLookup().lookup(String.class));"
173419,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,129,,"        assertEquals(""correct element name"", ""data"", data.getLocalName());"
173420,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,130,,"        assertEquals(""correct element namespace"", ""urn:test:shared"", data.getNamespaceURI());"
173421,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,169,,"        Element config = XMLUtil.findElement(root, ""configuration"", AntProjectHelper.PROJECT_NS);"
173422,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,194,,"        assertNotNull(""getProperties should never return null"", ep);"
173423,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,196,,"        assertEquals(""shared.prop correct"", ""value1"", ep.get(""shared.prop""));"
173424,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,196,,"        assertEquals(""shared.prop correct"", ""value1"", ep.get(""shared.prop""));"
173425,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,197,,"        assertEquals(""overridden.prop correct"", ""value3"", ep.get(""overridden.prop""));"
173426,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,197,,"        assertEquals(""overridden.prop correct"", ""value3"", ep.get(""overridden.prop""));"
173427,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,201,,"        assertEquals(""private.prop correct"", ""value2"", ep.get(""private.prop""));"
173428,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,202,,"        assertEquals(""overridden.prop correct"", ""value4"", ep.get(""overridden.prop""));"
173429,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,220,,"        assertEquals(""derived.prop correct"", ""value2:value1:${undefined.prop}"", pev.getProperty(""derived.prop""));"
173430,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,220,,"        assertEquals(""derived.prop correct"", ""value2:value1:${undefined.prop}"", pev.getProperty(""derived.prop""));"
173431,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,221,,"        assertEquals(""tempdir correct"", System.getProperty(""java.io.tmpdir"") + ""/foo"", pev.getProperty(""tempdir""));"
173432,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,222,,"        assertEquals(""global.prop correct"", ""value5"", pev.getProperty(""global.prop""));"
173433,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,242,,"        p.setProperty(""global.prop.2"", ""globalvalue2"");"
173434,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,268,,"        p.setProperty(""user.properties.file"", ""../userdir/build.properties""); // same"
173435,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,333,,"        assertEquals(""simple relative path resolves"", new File(projdirF, ""foo""), h.resolveFile(""foo""));"
173436,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,341,,"        assertEquals(""Unix-style ../ resolves up and down"", projdirF, h.resolveFile(""../proj""));"
173437,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,342,,"        assertEquals(""DOS-style ..\\ resolves up and down"", projdirF, h.resolveFile(""..\\proj""));"
173438,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,390,,"        ep.put(""testprop"", ""testval"");"
173439,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,390,,"        ep.put(""testprop"", ""testval"");"
173440,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,398,,"        assertEquals(""correct helper"", h, evs[0].getHelper());"
173441,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,399,,"        assertEquals(""correct path"", AntProjectHelper.PROJECT_PROPERTIES_PATH, evs[0].getPath());"
173442,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,400,,"        assertTrue(""expected change"", evs[0].isExpected());"
173443,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,442,,"        Element nue = data.getOwnerDocument().createElementNS(""urn:test:shared"", ""misc"");"
173444,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,494,,"        data = aux.getConfigurationFragment(""data"", ""urn:test:shared-aux"", true);"
173445,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,530,,"        stuff.setAttribute(""attr"", ""val"");"
173446,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,530,,"        stuff.setAttribute(""attr"", ""val"");"
173447,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,550,,"        data = aux.getConfigurationFragment(""data"", ""urn:test:private-aux"", false);"
173448,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,554,,"        stuff = XMLUtil.findElement(data, ""aux-private-stuff"", ""urn:test:private-aux"");"
173449,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,587,,"        data = temp.createElementNS(""urn:test:whatever"", ""hello"");"
173450,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,620,,"        data = temp.createElementNS(""namespace"", ""ccc"");"
173451,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/AntProjectHelperTest.java,803,,"            TestFileUtils.writeFile(projdir, ""nbproject/project.xml"", content.replace(""</project>"", bogus + ""</project>"").replace(""<name>somename</name>"", ""<name>newname</name>""));"
173452,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/EditablePropertiesTest.java,54,,"        assertEquals(""No lines added"", 0, res[1]);"
173453,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/EditablePropertiesTest.java,55,,"        assertEquals(""No lines removed"", 0, res[2]);"
173454,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/EditablePropertiesTest.java,71,,"        assertEquals(""No lines modified"", 0, res[0]);"
173455,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/FilterPropertyProviderTest.java,44,,"        mpp.defs.put(""foo"", ""bar"");"
173456,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/GeneratedFilesHelperTest.java,143,,"        File buildXml= FileUtil.toFile(projdir.getFileObject(""build.xml""));"
173457,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/GeneratedFilesHelperTest.java,144,,"        assertEquals(""one replacement"", 1, AntBasedTestUtil.replaceInFile(buildXml, ""name=\""somename\"""", ""name=\""someothername\""""));"
173458,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/GeneratedFilesHelperTest.java,185,,"        String crcNl = GeneratedFilesHelper.computeCrc32(new ByteArrayInputStream(testDataNl.getBytes(""UTF-8"")));"
173459,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/GlobFileBuiltQueryTest.java,79,,"        foo = TestUtil.createFileFromContent(null, prj, ""src/pkg/Foo.java"");"
173460,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/GlobFileBuiltQueryTest.java,110,,"        FileObject fooClass = TestUtil.createFileFromContent(null, prj, ""build/classes/pkg/Foo.class"");"
173461,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/GlobFileBuiltQueryTest.java,154,,"        fooL.msg(""change in Foo.java"").expectEvent(WAIT);"
173462,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/GlobFileBuiltQueryTest.java,225,,"        bazL.msg(""got change"").expectEvent(WAIT);"
173463,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/PathMatcherTest.java,51,,"        assertMatches(""foo/"", null, ""foo/"");"
173464,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/PathMatcherTest.java,52,,"        assertDoesNotMatch(""foo/"", null, ""foo"");"
173465,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/PathMatcherTest.java,53,,"        assertMatches(""foo/"", null, ""foo/bar"");"
173466,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/PathMatcherTest.java,54,,"        assertMatches(""foo/"", null, ""foo/bar/"");"
173467,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/PathMatcherTest.java,66,,"        assertMatches(""foo/**"", null, ""foo/"");"
173468,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/PathMatcherTest.java,72,,"        assertMatches(""foo*bar"", null, ""foobar"");"
173469,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/PathMatcherTest.java,83,,"        assertMatches(""**"", ""**/b/*"", ""a/"");"
173470,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/PathMatcherTest.java,99,,"        assertMatches(""foo bar"", null, ""foo"");"
173471,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/PathMatcherTest.java,100,,"        assertMatches(""foo bar"", null, ""bar"");"
173472,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/PathMatcherTest.java,147,,"        PathMatcher m = assertIncludedRoots(""**/bar/"", null, ""foo/bar/baz"", ""foo/bar/"");"
173473,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/PropertyUtilsTest.java,69,,"                Arrays.asList(new String[] {""foo"", ""bar""}),"
173474,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/PropertyUtilsTest.java,69,,"                Arrays.asList(new String[] {""foo"", ""bar""}),"
173475,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/PropertyUtilsTest.java,84,,"                Arrays.asList(new String[] {""c:\\foo"", ""D:\\\\bar""}),"
173476,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/PropertyUtilsTest.java,96,,"                Arrays.asList(new String[] {""1"", ""\\foo"", ""D:\\\\bar""}),"
173477,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/PropertyUtilsTest.java,196,,"        p.setProperty(""key1"", ""val1"");"
173478,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/PropertyUtilsTest.java,196,,"        p.setProperty(""key1"", ""val1"");"
173479,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/PropertyUtilsTest.java,197,,"        p.setProperty(""key2"", ""val2"");"
173480,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/PropertyUtilsTest.java,197,,"        p.setProperty(""key2"", ""val2"");"
173481,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,148,,"        sisterprojdir = FileUtil.createFolder(scratch, ""proj2"");"
173482,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,151,,"        sisterh = ProjectGenerator.createProject(sisterprojdir, ""test"");"
173483,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,154,,"        props.setProperty(""build.jar"", ""dist/proj2.jar"");"
173484,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,154,,"        props.setProperty(""build.jar"", ""dist/proj2.jar"");"
173485,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,155,,"        props.setProperty(""build.javadoc"", ""build/javadoc"");"
173486,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,156,,"        props.setProperty(""build.javadoc.complete"", ""build/complete-javadoc"");"
173487,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,205,,"    @SuppressWarnings(""deprecation"")"
173488,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,209,,"        ReferenceHelper.RawReference ref = new ReferenceHelper.RawReference(""otherproj"", ""jar"", URI.create(""build.xml""), ""dojar"", ""clean"", ""dojarID"");"
173489,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,209,,"        ReferenceHelper.RawReference ref = new ReferenceHelper.RawReference(""otherproj"", ""jar"", URI.create(""build.xml""), ""dojar"", ""clean"", ""dojarID"");"
173490,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,209,,"        ReferenceHelper.RawReference ref = new ReferenceHelper.RawReference(""otherproj"", ""jar"", URI.create(""build.xml""), ""dojar"", ""clean"", ""dojarID"");"
173491,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,209,,"        ReferenceHelper.RawReference ref = new ReferenceHelper.RawReference(""otherproj"", ""jar"", URI.create(""build.xml""), ""dojar"", ""clean"", ""dojarID"");"
173492,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,209,,"        ReferenceHelper.RawReference ref = new ReferenceHelper.RawReference(""otherproj"", ""jar"", URI.create(""build.xml""), ""dojar"", ""clean"", ""dojarID"");"
173493,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,209,,"        ReferenceHelper.RawReference ref = new ReferenceHelper.RawReference(""otherproj"", ""jar"", URI.create(""build.xml""), ""dojar"", ""clean"", ""dojarID"");"
173494,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,215,,"        assertEquals(""correct foreign project name"", ""otherproj"", ref.getForeignProjectName());"
173495,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,216,,"        assertEquals(""correct artifact type"", ""jar"", ref.getArtifactType());"
173496,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,217,,"        assertEquals(""correct script location"", URI.create(""build.xml""), ref.getScriptLocation());"
173497,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,219,,"        assertEquals(""correct target name"", ""dojar"", ref.getTargetName());"
173498,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,220,,"        assertEquals(""correct clean target name"", ""clean"", ref.getCleanTargetName());"
173499,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,221,,"        assertEquals(""correct ID name"", ""dojarID"", ref.getID());"
173500,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,223,,"        ref = r.getRawReference(""otherproj2"", ""dojarID"");"
173501,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,259,,"        assertEquals(""still have three refs"", 3, r.getRawReferences().length);"
173502,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,260,,"        assertFalse(""did not have ref to foo.bar"", r.removeRawReference(""foo"", ""bar""));"
173503,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,260,,"        assertFalse(""did not have ref to foo.bar"", r.removeRawReference(""foo"", ""bar""));"
173504,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,264,,"        ref = new ReferenceHelper.RawReference(""otherproj"", ""war"", URI.create(""build.xml""), ""dojar"", ""clean"", ""dojarID"");"
173505,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,270,,"        assertEquals(""correct modified artifact type"", ""war"", ref.getArtifactType());"
173506,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,277,,"        ref = new ReferenceHelper.RawReference(""otherproj"", ""war"", URI.create(""build2.xml""), ""dojar"", ""clean2"", ""dojarID"");"
173507,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,384,,"        assertFalse(""reference exist"", r.isReferenced(art, art.getArtifactLocations()[0]));"
173508,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,393,,"        assertEquals(""correct script location"", ""${project.proj2}/build.xml"", ref.getScriptLocationValue());"
173509,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,398,,"        assertEquals(""correct ${project.proj2}"", ""../proj2"","
173510,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,398,,"        assertEquals(""correct ${project.proj2}"", ""../proj2"","
173511,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,399,,"            props.getProperty(""project.proj2""));"
173512,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,404,,"            props.getProperty(""reference.proj2.dojar""));"
173513,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,406,,"            new File(new File(FileUtil.toFile(sisterprojdir), ""dist""), ""proj2.jar""),"
173514,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,414,,"        art = sisterh.createSimpleAntArtifact(""javadoc"", ""build.javadoc"", sisterh.getStandardPropertyEvaluator(), ""dojavadoc"", ""clean"");"
173515,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,414,,"        art = sisterh.createSimpleAntArtifact(""javadoc"", ""build.javadoc"", sisterh.getStandardPropertyEvaluator(), ""dojavadoc"", ""clean"");"
173516,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,436,,"            props.getProperty(""reference.proj2.dojavadoc""));"
173517,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,438,,"            new File(new File(FileUtil.toFile(sisterprojdir), ""build""), ""javadoc""),"
173518,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,446,,"        art = sisterh.createSimpleAntArtifact(""javadoc.html"", ""build.javadoc"", sisterh.getStandardPropertyEvaluator(), ""dojavadoc"", ""clean"");"
173519,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,458,,"        art = sisterh.createSimpleAntArtifact(""javadoc.html"", ""build.javadoc"", sisterh.getStandardPropertyEvaluator(), ""dojavadoc"", ""realclean"");"
173520,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,504,,"        assertTrue(""remove proj2.dojar succeeded"", r.destroyReference(""${reference.proj2.dojar}""));"
173521,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,574,,"        ReferenceHelper.RawReference rr = referenceHelperProj4.getRawReference(""pro-ject_4"", ""do_jar"", false);"
173522,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,809,,"        assertEquals(""reference is correctly evaluated"", f, h.resolveFile(h.getStandardPropertyEvaluator().evaluate(refval)));"
173523,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,879,,"        assertEquals(""added a ref to output1.jar"", ""${reference.proj2.build}"", r.addReference(art, locations[0]));"
173524,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,880,,"        assertEquals(""added a ref to output3.jar"", ""${reference.proj2.build.1}"", r.addReference(art, locations[2]));"
173525,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,1078,,"                Collections.singletonMap(""classpath"", Arrays.asList(new URL(""jar:"" + Utilities.toURI(fooJar) + ""!/""))));"
173526,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/ReferenceHelperTest.java,1088,,"        assertEquals(""${libs.foo.classpath}"", fooref);"
173527,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/SequentialPropertyEvaluatorTest.java,81,,"            assertEquals(""key"" + i + "" is correct"", vals[i - 1], eval.getProperty(""key"" + i));"
173528,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/SourcesHelperTest.java,74,,"        maindir.createData(""readme"");"
173529,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/SourcesHelperTest.java,77,,"        src1dir = projdir.createFolder(""src1"");"
173530,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/SourcesHelperTest.java,79,,"        src2dir = scratch.createFolder(""src2"");"
173531,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/SourcesHelperTest.java,89,,"        h = ProjectGenerator.createProject(projdir, ""test"");"
173532,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/SourcesHelperTest.java,93,,"        p.setProperty(""src1.dir"", ""src1"");"
173533,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/SourcesHelperTest.java,94,,"        p.setProperty(""src2.dir"", ""../../src2"");"
173534,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/SourcesHelperTest.java,104,,"        sh.sourceRoot(""${src1.dir}"").displayName(""Sources #1"").add(); // inside proj dir"
173535,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/SourcesHelperTest.java,104,,"        sh.sourceRoot(""${src1.dir}"").displayName(""Sources #1"").add(); // inside proj dir"
173536,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/SourcesHelperTest.java,105,,"        sh.sourceRoot(""${src2.dir}"").displayName(""Sources #2"").add(); // outside (rel path)"
173537,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/SourcesHelperTest.java,105,,"        sh.sourceRoot(""${src2.dir}"").displayName(""Sources #2"").add(); // outside (rel path)"
173538,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/SourcesHelperTest.java,107,,"        sh.sourceRoot(""${src3.dir}"").displayName(""Sources #3"").add(); // outside (abs path)"
173539,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/SourcesHelperTest.java,112,,"        sh.sourceRoot(""${src1.dir}"").type(""java"").displayName(""Packages #1"").add();"
173540,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/SourcesHelperTest.java,112,,"        sh.sourceRoot(""${src1.dir}"").type(""java"").displayName(""Packages #1"").add();"
173541,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/SourcesHelperTest.java,113,,"        sh.sourceRoot(""${src3.dir}"").type(""java"").displayName(""Packages #3"").add();"
173542,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/SourcesHelperTest.java,136,,"        sh2.sourceRoot(""src2"").type(""java"").displayName(""Packages #2"").add();"
173543,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/SourcesHelperTest.java,144,,"        assertEquals(""group #1 is src2dir"", src2dir, groups[0].getRootFolder());"
173544,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/SourcesHelperTest.java,146,,"        assertEquals(""group #2 is src3dir"", src3dir, groups[1].getRootFolder());"
173545,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/SourcesHelperTest.java,148,,"        assertEquals(""group #3 is maindir"", maindir, groups[2].getRootFolder());"
173546,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/SourcesHelperTest.java,152,,"        assertEquals(""should have src1dir plus src3dir"", 2, groups.length);"
173547,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/SourcesHelperTest.java,153,,"        assertEquals(""group #1 is src1dir"", src1dir, groups[0].getRootFolder());"
173548,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/SourcesHelperTest.java,228,,"        p.setProperty(""src1.dir"", ""../../src4"");"
173549,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/SourcesHelperTest.java,362,,"        FileUtil.createData(src2dir, ""java/lang/Class.java"");"
173550,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/SourcesHelperTest.java,363,,"        FileUtil.createData(src2dir, ""javax/swing/JComponent.java"");"
173551,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/SourcesHelperTest.java,365,,"        FileUtil.createData(src2dir, ""com/sun/java/swing/plaf/motif/MotifSplitPaneUI.java"");"
173552,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/SourcesHelperTest.java,368,,"        FileUtil.createData(src2dir, ""javax/swing/doc-files/groupLayout.1.gif"");"
173553,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/SourcesHelperTest.java,396,,"        p.setProperty(""src2.includes"", ""**/swing/,com/sun/org/apache/,org/omg,docs/html/index.html"");"
173554,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/SourcesHelperTest.java,404,,"        sh.sourceRoot(""${src1.dir}"").includes(""${src1.includes}"").excludes(""${src1.excludes}"").displayName(""Sources #1"").add();"
173555,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/SourcesHelperTest.java,404,,"        sh.sourceRoot(""${src1.dir}"").includes(""${src1.includes}"").excludes(""${src1.excludes}"").displayName(""Sources #1"").add();"
173556,./TargetProjects/netbeans/ide/project.ant/test/unit/src/org/netbeans/spi/project/support/ant/SourcesHelperTest.java,441,,"        assertIncluded(""explicitly included"", g2, ""javax/swing/JComponent.java"");"
173557,./TargetProjects/netbeans/ide/project.libraries.ui/test/unit/src/org/netbeans/api/project/libraries/LibraryManageTest.java,87,,"                Collections.singletonMap(""bin"", Arrays.asList(fooJar)));"
173558,./TargetProjects/netbeans/ide/project.libraries/src/org/netbeans/api/project/libraries/LibraryManager.java,463,,"        Parameters.notNull(""listener"", listener);  //NOI18N"
173559,./TargetProjects/netbeans/ide/project.libraries/src/org/netbeans/modules/project/libraries/LibraryDeclarationParser.java,232,,"            if (fireOnlyIfMixed) throw new IllegalStateException(""Unexpected characters() event! (Missing DTD?)"");"
173560,./TargetProjects/netbeans/ide/project.libraries/test/unit/src/org/netbeans/api/project/libraries/LibraryManagerTest.java,50,,"        ""bin"","
173561,./TargetProjects/netbeans/ide/project.libraries/test/unit/src/org/netbeans/api/project/libraries/LibraryManagerTest.java,74,,"        assertEquals (""Libraries count"", 0, libs.length);"
173562,./TargetProjects/netbeans/ide/project.libraries/test/unit/src/org/netbeans/api/project/libraries/LibraryManagerTest.java,115,,"        newLibImplementation.setName(""NewLib"");"
173563,./TargetProjects/netbeans/ide/project.libraries/test/unit/src/org/netbeans/api/project/libraries/LibraryManagerTest.java,131,,"        URL fooJar = mkJar(""foo.jar"");"
173564,./TargetProjects/netbeans/ide/project.libraries/test/unit/src/org/netbeans/modules/project/libraries/LibrariesStorageTest.java,63,,"        LibrariesTestUtil.createLibraryDefinition(this.storageFolder,""Library1"", null);"
173565,./TargetProjects/netbeans/ide/project.libraries/test/unit/src/org/netbeans/modules/project/libraries/LibrariesStorageTest.java,79,,"        assertEquals(""Libraries count"",1,libs.length);"
173566,./TargetProjects/netbeans/ide/project.libraries/test/unit/src/org/netbeans/modules/project/libraries/LibrariesStorageTest.java,81,,"        LibrariesTestUtil.createLibraryDefinition(this.storageFolder,""Library2"", null);"
173567,./TargetProjects/netbeans/ide/projectapi/src/org/netbeans/modules/projectapi/LookupProviderAnnotationProcessor.java,78,,"                layer(e).instanceFile(""Projects/"" + type + ""/Lookup"", null, LookupProvider.class, lpr, null).write();"
173568,./TargetProjects/netbeans/ide/projectapi/src/org/netbeans/modules/projectapi/LookupProviderAnnotationProcessor.java,107,,"                LayerBuilder.File f = layer(e).file(""Projects/"" + type + ""/Lookup/"" + fileBaseName + "".instance"")."
173569,./TargetProjects/netbeans/ide/projectapi/src/org/netbeans/modules/projectapi/LookupProviderAnnotationProcessor.java,107,,"                LayerBuilder.File f = layer(e).file(""Projects/"" + type + ""/Lookup/"" + fileBaseName + "".instance"")."
173570,./TargetProjects/netbeans/ide/projectapi/src/org/netbeans/modules/projectapi/LookupProviderAnnotationProcessor.java,108,,"                        methodvalue(""instanceCreate"", LazyLookupProviders.class.getName(), ""forProjectServiceProvider"")."
173571,./TargetProjects/netbeans/ide/projectapi/src/org/netbeans/modules/projectapi/LookupProviderAnnotationProcessor.java,110,,"                        stringvalue(""service"", servicesBinName);"
173572,./TargetProjects/netbeans/ide/projectapi/test/unit/src/org/netbeans/api/project/FileOwnerQueryTest.java,70,,"        subprojdir = projdir.createFolder(""subproject"");"
173573,./TargetProjects/netbeans/ide/projectapi/test/unit/src/org/netbeans/api/project/FileOwnerQueryTest.java,73,,"        scratch.createFolder(""external1"").createFolder(""subdir"").createData(""file"");"
173574,./TargetProjects/netbeans/ide/projectapi/test/unit/src/org/netbeans/api/project/FileOwnerQueryTest.java,74,,"        scratch.createFolder(""external2"").createFolder(""subdir"").createData(""file"");"
173575,./TargetProjects/netbeans/ide/projectapi/test/unit/src/org/netbeans/api/project/FileOwnerQueryTest.java,130,,"        FileObject extfile1 = ext1.getFileObject(""subdir/file"");"
173576,./TargetProjects/netbeans/ide/projectapi/test/unit/src/org/netbeans/api/project/FileOwnerQueryTest.java,131,,"        assertEquals(""no owner yet"", null, FileOwnerQuery.getOwner(extfile1));"
173577,./TargetProjects/netbeans/ide/projectapi/test/unit/src/org/netbeans/api/project/FileOwnerQueryTest.java,133,,"        assertEquals(""now have an owner"", p, FileOwnerQuery.getOwner(extfile1));"
173578,./TargetProjects/netbeans/ide/projectapi/test/unit/src/org/netbeans/api/project/FileOwnerQueryTest.java,181,,"        assertEquals(""no owner yet through FileObjects"", null, FileOwnerQuery.getOwner(extfile1));"
173579,./TargetProjects/netbeans/ide/projectapi/test/unit/src/org/netbeans/api/project/FileOwnerQueryTest.java,182,,"        assertEquals(""no owner yet through URI"", null, FileOwnerQuery.getOwner(extfile1));"
173580,./TargetProjects/netbeans/ide/projectapi/test/unit/src/org/netbeans/api/project/FileOwnerQueryTest.java,184,,"        assertEquals(""now have an owner through FileObjects"", p, FileOwnerQuery.getOwner(extfile1));"
173581,./TargetProjects/netbeans/ide/projectapi/test/unit/src/org/netbeans/api/project/FileOwnerQueryTest.java,185,,"        assertEquals(""now have an owner through URI"", p, FileOwnerQuery.getOwner(extfile1.toURI()));"
173582,./TargetProjects/netbeans/ide/projectapi/test/unit/src/org/netbeans/api/project/ProjectManagerTest.java,79,,"        goodproject.createFolder(""testproject"");"
173583,./TargetProjects/netbeans/ide/projectapi/test/unit/src/org/netbeans/api/project/ProjectManagerTest.java,83,,"        badproject.createFolder(""testproject"").createData(""broken"");"
173584,./TargetProjects/netbeans/ide/projectapi/test/unit/src/org/netbeans/api/project/ProjectManagerTest.java,111,,"        assertNotNull(""Should have recognized goodproject"", p);"
173585,./TargetProjects/netbeans/ide/projectapi/test/unit/src/org/netbeans/api/project/ProjectManagerTest.java,286,,"        TestUtil.setProjectSaveWillFail(p1, new IOException(""expected""));"
173586,./TargetProjects/netbeans/ide/projectapi/test/unit/src/org/netbeans/api/project/ProjectManagerTest.java,293,,"        assertTrue(""p1 is still modified"", pm.isModified(p1));"
173587,./TargetProjects/netbeans/ide/projectapi/test/unit/src/org/netbeans/modules/projectapi/AuxiliaryConfigBasedPreferencesProviderTest.java,74,,"        File f = new File(new File(wd, ""test""), ""testproject"");"
173588,./TargetProjects/netbeans/ide/projectapi/test/unit/src/org/netbeans/modules/projectapi/AuxiliaryConfigBasedPreferencesProviderTest.java,103,,"        pref.node(""subnode1/subnode2"").put(""somekey"", ""somevalue"");"
173589,./TargetProjects/netbeans/ide/projectapi/test/unit/src/org/netbeans/modules/projectapi/AuxiliaryConfigBasedPreferencesProviderTest.java,103,,"        pref.node(""subnode1/subnode2"").put(""somekey"", ""somevalue"");"
173590,./TargetProjects/netbeans/ide/projectapi/test/unit/src/org/netbeans/modules/projectapi/AuxiliaryConfigBasedPreferencesProviderTest.java,103,,"        pref.node(""subnode1/subnode2"").put(""somekey"", ""somevalue"");"
173591,./TargetProjects/netbeans/ide/projectapi/test/unit/src/org/netbeans/modules/projectapi/AuxiliaryConfigBasedPreferencesProviderTest.java,165,,"        pref.node(""subnode1"").put(""somekey"", ""somevalue2"");"
173592,./TargetProjects/netbeans/ide/projectapi/test/unit/src/org/netbeans/modules/projectapi/AuxiliaryConfigBasedPreferencesProviderTest.java,165,,"        pref.node(""subnode1"").put(""somekey"", ""somevalue2"");"
173593,./TargetProjects/netbeans/ide/projectapi/test/unit/src/org/netbeans/modules/projectapi/AuxiliaryConfigImplTest.java,89,,"        ac.putConfigurationFragment(makeElement(""x"", ""two""), true);"
173594,./TargetProjects/netbeans/ide/projectapi/test/unit/src/org/netbeans/modules/projectapi/FileOwnerCollocationQueryImplTest.java,50,,"        projdir.createFolder(""testproject"");"
173595,./TargetProjects/netbeans/ide/projectapi/test/unit/src/org/netbeans/modules/projectapi/LazyLookupProvidersTest.java,193,,"        AnnotationProcessorTestUtils.makeSource(src, ""p.C"","
173596,./TargetProjects/netbeans/ide/projectapi/test/unit/src/org/netbeans/modules/projectapi/LazyLookupProvidersTest.java,208,,"        assertTrue(baos.toString(), baos.toString().contains(""public""));"
173597,./TargetProjects/netbeans/ide/projectapi/test/unit/src/org/netbeans/modules/projectapi/LazyLookupProvidersTest.java,220,,"                "" @org.netbeans.spi.project.ProjectServiceProvider(service=Runnable.class, projectType=\""test\"")"","
173598,./TargetProjects/netbeans/ide/projectapi/test/unit/src/org/netbeans/spi/project/support/LookupProviderSupportTest.java,65,,"        impl0.grpMap.put(""java"", Arrays.<SourceGroup>asList(grp0));"
173599,./TargetProjects/netbeans/ide/projectui/src/org/netbeans/modules/project/ui/OpenProjectList.java,537,,"                log(createRecord(""UI_INIT_PROJECTS"", initialA),""org.netbeans.ui.projects"");"
173600,./TargetProjects/netbeans/ide/projectui/src/org/netbeans/modules/project/ui/OpenProjectList.java,538,,"                log(createRecordMetrics(""USG_PROJECT_OPEN"", initialA),""org.netbeans.ui.metrics.projects"");"
173601,./TargetProjects/netbeans/ide/projectui/src/org/netbeans/modules/project/ui/actions/Actions.java,161,,"        a.putValue(""iconBase"",""org/netbeans/modules/project/ui/resources/testProject.png""); //NOI18N"
173602,./TargetProjects/netbeans/ide/projectui/src/org/netbeans/modules/project/ui/actions/Actions.java,162,,"        a.putValue(""noIconInMenu"", Boolean.TRUE); //NOI18N"
173603,./TargetProjects/netbeans/ide/projectui/src/org/netbeans/modules/project/ui/actions/MainProjectActionWithHistory.java,106,,"            if (c instanceof JComponent && ((JComponent)c).getClientProperty(""aaa"") != null) {"
173604,./TargetProjects/netbeans/ide/projectui/src/org/netbeans/modules/project/ui/actions/OpenProject.java,85,,"                String oldFileDialogProp = System.getProperty(""apple.awt.fileDialogForDirectories""); //NOI18N"
173605,./TargetProjects/netbeans/ide/projectui/test/unit/src/org/netbeans/modules/project/ui/CloseProjectsTest.java,151,,"            assertFalse(""No event in AWT thread"", EventQueue.isDispatchThread());"
173606,./TargetProjects/netbeans/ide/projectui/test/unit/src/org/netbeans/modules/project/ui/OpenProjectHookThrowsExceptionTest.java,131,,"            assertFalse(""No event in AWT thread"", EventQueue.isDispatchThread());"
173607,./TargetProjects/netbeans/ide/projectui/test/unit/src/org/netbeans/modules/project/ui/OpenProjectListSetMain2Test.java,156,,"            assertFalse(""No event in AWT thread"", EventQueue.isDispatchThread());"
173608,./TargetProjects/netbeans/ide/projectui/test/unit/src/org/netbeans/modules/project/ui/OpenProjectListSetMainTest.java,152,,"            assertFalse(""No event in AWT thread"", EventQueue.isDispatchThread());"
173609,./TargetProjects/netbeans/ide/projectui/test/unit/src/org/netbeans/modules/project/ui/OpenProjectListTest.java,116,,"        assertTrue (""No project is open."", OpenProjectList.getDefault ().getOpenProjects ().length == 0);"
173610,./TargetProjects/netbeans/ide/projectui/test/unit/src/org/netbeans/modules/project/ui/OpenProjectListTest.java,117,,"        CharSequence log = Log.enable(""org.netbeans.ui"", Level.FINE);"
173611,./TargetProjects/netbeans/ide/projectui/test/unit/src/org/netbeans/modules/project/ui/OpenProjectListTest.java,123,,"            fail(""There should be TestProject\n"" + log.toString());"
173612,./TargetProjects/netbeans/ide/projectui/test/unit/src/org/netbeans/modules/project/ui/OpenProjectListTest.java,270,,"        FileObject p1TestProject = p1.createFolder(""testproject"");"
173613,./TargetProjects/netbeans/ide/projectui/test/unit/src/org/netbeans/modules/project/ui/ProjectUtilitiesTest.java,107,,"        FileObject p1 = TestSupport.createTestProject (workDir, ""project1"");"
173614,./TargetProjects/netbeans/ide/projectui/test/unit/src/org/netbeans/modules/project/ui/ProjectUtilitiesTest.java,283,,"        assertNull(""normal file addition"", ProjectUtilities.canUseFileName(p1, null, ""foo"", ""java"", false, false));"
173615,./TargetProjects/netbeans/ide/projectui/test/unit/src/org/netbeans/modules/project/ui/ProjectUtilitiesTest.java,283,,"        assertNull(""normal file addition"", ProjectUtilities.canUseFileName(p1, null, ""foo"", ""java"", false, false));"
173616,./TargetProjects/netbeans/ide/projectui/test/unit/src/org/netbeans/modules/project/ui/ProjectUtilitiesTest.java,289,,"        assertNotNull(""file already exists"", ProjectUtilities.canUseFileName(p1, null, ""f1_1"", ""java"", false, false));"
173617,./TargetProjects/netbeans/ide/projectui/test/unit/src/org/netbeans/modules/project/ui/ProjectsRootNodePhysicalViewModeSourcesTest.java,135,,"            assertFalse(""No event in AWT thread"", EventQueue.isDispatchThread());"
173618,./TargetProjects/netbeans/ide/projectui/test/unit/src/org/netbeans/modules/project/ui/ProjectsRootNodePhysicalViewTest.java,162,,"            assertFalse(""No event in AWT thread"", EventQueue.isDispatchThread());"
173619,./TargetProjects/netbeans/ide/projectui/test/unit/src/org/netbeans/modules/project/ui/ProjectsRootNodePreferredFromContextOpenTest.java,165,,"            assertFalse(""No event in AWT thread"", EventQueue.isDispatchThread());"
173620,./TargetProjects/netbeans/ide/projectui/test/unit/src/org/netbeans/modules/project/ui/ProjectsRootNodePreferredFromPopupTest.java,171,,"            assertFalse(""No event in AWT thread"", EventQueue.isDispatchThread());"
173621,./TargetProjects/netbeans/ide/projectui/test/unit/src/org/netbeans/modules/project/ui/ProjectsRootNodePreferredOpenTest.java,108,,"        assertEquals(""No events in API"", 0, events);"
173622,./TargetProjects/netbeans/ide/projectui/test/unit/src/org/netbeans/modules/project/ui/ProjectsRootNodePreferredOpenTest.java,199,,"            assertFalse(""No event in AWT thread"", EventQueue.isDispatchThread());"
173623,./TargetProjects/netbeans/ide/projectui/test/unit/src/org/netbeans/modules/project/ui/ProjectsRootNodeTest.java,281,,"                    public @Override String getDisplayName() {return ""Prj"";}"
173624,./TargetProjects/netbeans/ide/projectui/test/unit/src/org/netbeans/modules/project/ui/TemplateChooserPanelGUITest.java,70,,"        f.setAttribute(""templateCategory"", ""invisible"");"
173625,./TargetProjects/netbeans/ide/projectui/test/unit/src/org/netbeans/modules/project/ui/TemplateChooserPanelGUITest.java,72,,"        t.setAttribute(""template"", true);"
173626,./TargetProjects/netbeans/ide/projectui/test/unit/src/org/netbeans/modules/project/ui/TemplateChooserPanelGUITest.java,77,,"        f = r.createFolder(""Main"");"
173627,./TargetProjects/netbeans/ide/projectui/test/unit/src/org/netbeans/modules/project/ui/TemplateChooserPanelGUITest.java,80,,"        t.setAttribute(""templateCategory"", ""main"");"
173628,./TargetProjects/netbeans/ide/projectui/test/unit/src/org/netbeans/modules/project/ui/actions/ActionsUtilTest.java,112,,"        assertGC(""the projects can be reclaimed"", ref1);"
173629,./TargetProjects/netbeans/ide/projectui/test/unit/src/org/netbeans/modules/project/ui/actions/FileActionTest.java,99,,"        assertFalse( ""Action should NOT be enabled"", action.isEnabled() );        "
173630,./TargetProjects/netbeans/ide/projectui/test/unit/src/org/netbeans/modules/project/ui/actions/LookupSensitiveActionUILogTest.java,86,,"        assertEquals( ""Refresh should be called once"", 1, tlsa.refreshCounter );"
173631,./TargetProjects/netbeans/ide/projectui/test/unit/src/org/netbeans/modules/project/ui/actions/LookupSensitiveActionUILogTest.java,87,,"        assertEquals( ""One event should be fired"", 1, tpcl.getEvents().size() );"
173632,./TargetProjects/netbeans/ide/projectui/test/unit/src/org/netbeans/modules/project/ui/actions/LookupSensitiveActionUILogTest.java,90,,"        tlsa.setDisplayName(""Jarda"");"
173633,./TargetProjects/netbeans/ide/projectui/test/unit/src/org/netbeans/modules/project/ui/actions/ProjectActionTest.java,131,,"        assertFalse( ""Action should NOT be enabled"", action.isEnabled() );                "
173634,./TargetProjects/netbeans/ide/projectuiapi/src/org/netbeans/spi/project/ui/support/DefaultProjectOperations.java,56,,"            throw new IllegalArgumentException(""Project is null"");"
173635,./TargetProjects/netbeans/ide/projectuiapi/src/org/netbeans/spi/project/ui/support/ProjectCustomizer.java,625,,"                                LOG.log(Level.WARNING, ""Could not load "" + subDob, x);"
173636,./TargetProjects/netbeans/ide/projectuiapi/test/unit/src/org/netbeans/modules/project/uiapi/DefaultProjectOperationsImplementationTest.java,61,,"        TestUtil.createFileFromContent(DefaultProjectOperationsImplementationTest.class.getResource(""data/test.txt""), projdir, ""nbproject/test.txt"");"
173637,./TargetProjects/netbeans/ide/projectuiapi/test/unit/src/org/netbeans/modules/project/uiapi/DefaultProjectOperationsImplementationTest.java,107,,"        assertTrue(Arrays.equals(new String[] {""src""}, projectDirectory.list()));"
173638,./TargetProjects/netbeans/ide/projectuiapi/test/unit/src/org/netbeans/modules/project/uiapi/DefaultProjectOperationsImplementationTest.java,120,,"        assertEquals(Arrays.asList(""nbproject"", ""src""), items);"
173639,./TargetProjects/netbeans/ide/projectuiapi/test/unit/src/org/netbeans/modules/project/uiapi/DefaultProjectOperationsImplementationTest.java,124,,"        FileObject projdir2 = projdir.createFolder(""proj2"");"
173640,./TargetProjects/netbeans/ide/projectuiapi/test/unit/src/org/netbeans/modules/project/uiapi/DefaultProjectOperationsImplementationTest.java,139,,"        FileObject library = projdir.createFolder(""lib"");"
173641,./TargetProjects/netbeans/ide/projectuiapi/test/unit/src/org/netbeans/modules/project/uiapi/DefaultProjectOperationsImplementationTest.java,216,,"        TestUtil.createFileFromContent(DefaultProjectOperationsImplementationTest.class.getResource(""data/test.txt""), projdir, ""lib/test.txt"");"
173642,./TargetProjects/netbeans/ide/projectuiapi/test/unit/src/org/netbeans/modules/project/uiapi/DefaultProjectOperationsImplementationTest.java,217,,"        ProgressHandle handle = ProgressHandleFactory.createHandle(""test-handle"");"
173643,./TargetProjects/netbeans/ide/projectuiapi/test/unit/src/org/netbeans/modules/project/uiapi/DefaultProjectOperationsImplementationTest.java,221,,"        DefaultProjectOperationsImplementation.doCopyProject(handle, prj, ""projCopy"", newTarget);"
173644,./TargetProjects/netbeans/ide/projectuiapi/test/unit/src/org/netbeans/modules/project/uiapi/DefaultProjectOperationsImplementationTest.java,305,,"        DefaultProjectOperationsImplementation.doMoveProject(handle, prj, ""projMove"",""projMove"", newTarget, ""ERR_Cannot_Move"");"
173645,./TargetProjects/netbeans/ide/projectuiapi/test/unit/src/org/netbeans/modules/project/uiapi/DefaultProjectOperationsImplementationTest.java,305,,"        DefaultProjectOperationsImplementation.doMoveProject(handle, prj, ""projMove"",""projMove"", newTarget, ""ERR_Cannot_Move"");"
173646,./TargetProjects/netbeans/ide/projectuiapi/test/unit/src/org/netbeans/modules/project/uiapi/ProjectTemplateAttributesProviderTest.java,104,,"        assertAttribute(""default"", checked, ""license"");"
173647,./TargetProjects/netbeans/ide/projectuiapi/test/unit/src/org/netbeans/modules/project/uiapi/ProjectTemplateAttributesProviderTest.java,105,,"        assertAttribute(FEQImpl.ENCODING, checked, ""encoding"");"
173648,./TargetProjects/netbeans/ide/projectuiapi/test/unit/src/org/netbeans/modules/project/uiapi/ProjectTemplateAttributesProviderTest.java,108,,"        map.put(""foo"", ""bar"");"
173649,./TargetProjects/netbeans/ide/projectuiapi/test/unit/src/org/netbeans/modules/project/uiapi/ProjectTemplateAttributesProviderTest.java,108,,"        map.put(""foo"", ""bar"");"
173650,./TargetProjects/netbeans/ide/projectuiapi/test/unit/src/org/netbeans/modules/project/uiapi/ProjectTemplateAttributesProviderTest.java,115,,"        map.put(""project"", Collections.emptyMap());"
173651,./TargetProjects/netbeans/ide/projectuiapi/test/unit/src/org/netbeans/modules/project/uiapi/ProjectTemplateAttributesProviderTest.java,121,,"        map.put(""project"", Collections.singletonMap(""license"", ""gpl""));"
173652,./TargetProjects/netbeans/ide/projectuiapi/test/unit/src/org/netbeans/spi/project/ui/support/ProjectCustomizerListenersTest.java,79,,"        Category testCat1 = Category.create(""test1"", ""test1"", null);"
173653,./TargetProjects/netbeans/ide/projectuiapi/test/unit/src/org/netbeans/spi/project/ui/support/ProjectCustomizerListenersTest.java,80,,"        final Category testCat2 = Category.create(""test2"", ""test2"", null, testCat1);"
173654,./TargetProjects/netbeans/ide/projectuiapi/test/unit/src/org/netbeans/spi/project/ui/support/ProjectCustomizerListenersTest.java,81,,"        final Category testCat3 = Category.create(""test3"", ""test3"", null);"
173655,./TargetProjects/netbeans/ide/projectuiapi/test/unit/src/org/netbeans/spi/project/ui/support/ProjectCustomizerListenersTest.java,83,,"        testCat1.setOkButtonListener(new Listener(LType.OK, ""testCat1"", true));"
173656,./TargetProjects/netbeans/ide/projectuiapi/test/unit/src/org/netbeans/spi/project/ui/support/ProjectCustomizerListenersTest.java,86,,"        testCat2.setOkButtonListener(new Listener(LType.OK, ""testCat2"", true));"
173657,./TargetProjects/netbeans/ide/projectuiapi/test/unit/src/org/netbeans/spi/project/ui/support/ProjectCustomizerListenersTest.java,89,,"        testCat3.setOkButtonListener(new Listener(LType.OK, ""testCat3"", true));"
173658,./TargetProjects/netbeans/ide/projectuiapi/test/unit/src/org/netbeans/spi/project/ui/support/ProjectCustomizerListenersTest.java,93,,"        final Listener mainOKListener = new Listener(LType.OK, ""Properties"", true);"
173659,./TargetProjects/netbeans/ide/projectuiapi/test/unit/src/org/netbeans/spi/project/ui/support/ProjectCustomizerTest.java,102,,"        assertEquals(""one"", categories[0].getName());"
173660,./TargetProjects/netbeans/ide/projectuiapi/test/unit/src/org/netbeans/spi/project/ui/support/ProjectCustomizerTest.java,110,,"        assertEquals(""three"", subcategories[0].getName());"
173661,./TargetProjects/netbeans/ide/projectuiapi/test/unit/src/org/netbeans/spi/project/ui/support/ProjectCustomizerTest.java,118,,"        assertEquals(""four"", subcategories[0].getName());"
173662,./TargetProjects/netbeans/ide/projectuiapi/test/unit/src/org/netbeans/spi/project/ui/support/ProjectCustomizerTest.java,134,,"        projectType=""test"","
173663,./TargetProjects/netbeans/ide/properties/src/org/netbeans/modules/properties/BundleEditPanel.java,118,,"                            evt.getPropertyName().equals(""columnMoved"") ||"
173664,./TargetProjects/netbeans/ide/properties/src/org/netbeans/modules/properties/BundleEditPanel.java,750,,"    @SuppressWarnings(""serial"")"
173665,./TargetProjects/netbeans/ide/properties/src/org/netbeans/modules/properties/LocalePanel.java,82,,"        new Locale(""de"", ""AT"", ""EURO""), // NOI18N // German Austria "
173666,./TargetProjects/netbeans/ide/properties/src/org/netbeans/modules/properties/LocalePanel.java,248,,"                label.setText(value.toString() + "" - "" + new Locale((String)value, """", """").getDisplayLanguage()); // NOI18N"
173667,./TargetProjects/netbeans/ide/properties/src/org/netbeans/modules/properties/PropertiesEditorSupport.java,931,,"                    LOG.fine(""changeFile releaseLock: "" + fileLock + "" for "" + fileObject); // NOI18N"
173668,./TargetProjects/netbeans/ide/properties/src/org/netbeans/modules/properties/PropertiesEncoding.java,618,,"                log.finer("" - "" + length + "" bytes will be read"");"
173669,./TargetProjects/netbeans/ide/properties/test/qa-functional/src/lib/PropertiesEditorTestCase.java,60,,"    public String rootPackageName = ""Source Packages"";"
173670,./TargetProjects/netbeans/ide/properties/test/qa-functional/src/lib/PropertiesEditorTestCase.java,426,,"                        System.out.println(""textarea == string : "" + jTextArea.getText() + "" == "" + key);"
173671,./TargetProjects/netbeans/ide/properties/test/qa-functional/src/lib/PropertiesEditorTestCase.java,426,,"                        System.out.println(""textarea == string : "" + jTextArea.getText() + "" == "" + key);"
173672,./TargetProjects/netbeans/ide/properties/test/qa-functional/src/lib/PropertiesEditorTestCase.java,571,,"                        throw new Exception(""Structure of properties file has been corrupted"");"
173673,./TargetProjects/netbeans/ide/properties/test/qa-functional/src/org/netbeans/properties/jelly2tests/suites/properties_editing/SimpleAndAdvanceEditorTest.java,80,,"        pn=getNodeFilesTab(DEFAULT_PROJECT_NAME, WIZARD_DEFAULT_PROPERTIES_FILE_NAME+"".properties"");"
173674,./TargetProjects/netbeans/ide/properties/test/qa-functional/src/org/netbeans/properties/jelly2tests/suites/properties_editing/SimpleAndAdvanceEditorTest.java,119,,"            log(""Properties file"" + bundleName + "".properties was created in default package"");"
173675,./TargetProjects/netbeans/ide/properties/test/unit/src/org/netbeans/modules/properties/MultiBundleStructureTest.java,49,,"        File propFile = new File(getWorkDir(), ""foo.properties"");"
173676,./TargetProjects/netbeans/ide/refactoring.api/src/org/netbeans/modules/refactoring/spi/impl/ErrorPanel.java,120,,"        org.openide.awt.Mnemonics.setLocalizedText(errorLabel, org.openide.util.NbBundle.getBundle(""org/netbeans/modules/refactoring/spi/impl/Bundle"").getString(""LBL_ErrorsList"")); // NOI18N"
173677,./TargetProjects/netbeans/ide/refactoring.api/src/org/netbeans/modules/refactoring/spi/impl/ParametersPanel.java,146,,"        Mnemonics.setLocalizedText(next, NbBundle.getMessage(ParametersPanel.class, rui.isQuery() ? ""CTL_Find"" : ""CTL_Finish""));"
173678,./TargetProjects/netbeans/ide/refactoring.api/src/org/netbeans/modules/refactoring/spi/impl/ParametersPanel.java,214,,"        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle(""org/netbeans/modules/refactoring/spi/impl/Bundle""); // NOI18N"
173679,./TargetProjects/netbeans/ide/refactoring.api/src/org/netbeans/modules/refactoring/spi/ui/ActionsImplementationProvider.java,64,,"        throw new UnsupportedOperationException(""Not implemented!""); // NOI18N"
173680,./TargetProjects/netbeans/ide/refactoring.api/test/unit/src/org/netbeans/modules/refactoring/api/impl/ProgressSupportTest.java,56,,"        assertEquals(""event ID"", ProgressEvent.START, listener.event.getEventId());"
173681,./TargetProjects/netbeans/ide/refactoring.api/test/unit/src/org/netbeans/modules/refactoring/api/impl/ProgressSupportTest.java,57,,"        assertEquals(""progress"", 4, listener.event.getCount());"
173682,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beans/BaseBean.java,1034,,"                        getMessage(""CantWriteBeanNotInDOMTree_msg""));"
173683,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beans/BeanProp.java,1094,,"		(oldValue==null?""<null>"":""<""+"
173684,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beans/Common.java,141,,"                                                                 ""UnknownType_msg"", new Integer(type)));"
173685,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beans/DOMBinding.java,488,,"        String targetName = ""xmlns:""+prefix;"
173686,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beans/DOMBinding.java,846,,"                                        "" to node "" + parent.getNodeName());"
173687,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beans/JavaBeansUtil.java,666,,"            typeName == ""java.util.Calendar"" || typeName == ""java.util.Date"" ||"
173688,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beans/JavaBeansUtil.java,783,,"            out.write(""}\n"");"
173689,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beans/JavaBeansUtil.java,794,,"            out.write(""} else {\n"");"
173690,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beans/XMLUtil.java,46,,"            out.append(""&amp;"");"
173691,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beans/XMLUtil.java,48,,"            out.append(""&lt;"");"
173692,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beans/XMLUtil.java,50,,"            out.append(""&gt;"");"
173693,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beans/XMLUtil.java,53,,"                out.append(""&quot;"");"
173694,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beans/XMLUtil.java,55,,"                out.append(""&apos;"");"
173695,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/AbstractCodeGeneratorClass.java,322,,"            return ""size""+name;"
173696,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/AbstractCodeGeneratorClass.java,440,,"            jw.writeEol(nameVar+"" = ""+nameVar+"".intern()"");"
173697,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/AbstractCodeGeneratorClass.java,639,,"        ""void"","
173698,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/AbstractCodeGeneratorClass.java,643,,"        ""String"","
173699,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/AbstractCodeGeneratorClass.java,647,,"        ""int"","
173700,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/AbstractCodeGeneratorClass.java,1122,,"            out.write("" \t"");"
173701,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/AbstractCodeGeneratorClass.java,1542,,"            sig.addThrows(""java.beans.PropertyVetoException"");"
173702,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/AbstractCodeGeneratorClass.java,1701,,"        if (!(""String"".equals(type) || ""java.lang.String"".equals(type)))"
173703,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/AbstractCodeGeneratorClass.java,1797,,"                        dlr.genRestriction(jw, ""size""+a.name+""()"", a.getReadMethod(false), type, ""restrictionFailure"", false);"
173704,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/BeanBuilder.java,738,,"                        addToBeanInterfaceExtends(e, extendsName+""Interface"");"
173705,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/BeanBuilder.java,775,,"                                                                     ""java"","
173706,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/BeanBuilder.java,1212,,"        out.write(""\t\""""+node.getName()+""\"" [shape=box]\n"");"
173707,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/BeanBuilder.java,1213,,"        out.write(""\t\""""+node.getName()+""\"" -> \""""+node.getGraphLink()+""\"";\n"");"
173708,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/BeanClass.java,180,,"	    gencr(""org.netbeans.modules.schema2beans.BaseBean"");"
173709,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/BeanClass.java,194,,"            thrownExceptions = ""org.netbeans.modules.schema2beans.Schema2BeansException"";"
173710,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/BeanClass.java,213,,"            gen(""try "");"
173711,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/BeanClass.java,234,,"	    this.beanElement.node.getName(), ""\"")"");"
173712,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/BeanClass.java,313,,"        jw.beginMethod(""initialize"", ""int options"", null, ""void"", jw.PACKAGE_LEVEL);"
173713,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/BeanClass.java,557,,"        jw.beginMethod(""_getSchemaLocation"", """", null, ""String"", jw.PUBLIC);"
173714,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/BeanClass.java,686,,"            gen(""this.createProperty(\"""", a.dtdName, ""\"", "");"
173715,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/BeanClass.java,804,,"                    jw.write("", index"");"
173716,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/BeanClass.java,862,,"                jw.writeEol(""return "" + JavaUtil.nullValueForType(a.getType()));"
173717,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/BeanClass.java,1066,,"                if (isScalar && !""int"".equals(a.getType())) {"
173718,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/BeanClass.java,1280,,"    jw.beginMethod(""addComparator"", ""org.netbeans.modules.schema2beans.BeanComparator c"", null, ""void"", jw.PUBLIC | jw.STATIC);"
173719,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/BeanClass.java,1343,,"        jw.beginMethod(""createGraph"", ""org.w3c.dom.Node doc"", thrownExceptions, className, jw.PUBLIC | jw.STATIC);"
173720,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/BeanClass.java,1551,,"        jw.addToMethodStore(""getValue"", ""String name"", null, ""Object"");"
173721,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/BeanClass.java,1553,,"        jw.addToMethodStore(""isNull"", ""String name"", null, ""boolean"");"
173722,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/BeanClass.java,1556,,"        jw.addToMethodStore(""setValue"", ""String name, Object value"", null, ""void"");"
173723,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/BeanClass.java,1572,,"        jw.addToMethodStore(""write"", ""java.io.OutputStream out"", ""java.io.IOException, org.netbeans.modules.schema2beans.Schema2BeansRuntimeException"", ""void"");"
173724,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/BeanClass.java,1573,,"        jw.addToMethodStore(""write"", ""java.io.OutputStream out, String encoding"", ""java.io.IOException, org.netbeans.modules.schema2beans.Schema2BeansException"", ""void"");"
173725,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,271,,"                    gen(attr, "" = "");"
173726,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,275,,"                        jw.writeEol(attr, ""._setParent(this)"");"
173727,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,328,,"                        jw.beginIf(attr+"" != null"");"
173728,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,332,,"                        jw.writeEol(a.getScalarIsSet(), "" = true"");"
173729,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,342,,"                    jw.beginFor(""int i = 0"", ""i < ""+a.instanceOf()+"".length"","
173730,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,342,,"                    jw.beginFor(""int i = 0"", ""i < ""+a.instanceOf()+"".length"","
173731,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,343,,"                                ""++i"");"
173732,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,352,,"                    jw.write(attr, "".add("","
173733,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,390,,"                    gen("" = new "", baseType, ""[0]"");"
173734,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,414,,"                        gen(PRIVATE, ""boolean"", a.getScalarIsSet());"
173735,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,452,,"                jw.writeEol(type+"" value = (""+type+"") valueInterface"");"
173736,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,452,,"                jw.writeEol(type+"" value = (""+type+"") valueInterface"");"
173737,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,458,,"                if (baseType.equals(""byte[]""))"
173738,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,466,,"                    genWhiteSpaceRestriction(ws, ""value"", baseType);"
173739,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,473,,"                    jw.beginIf(""!(""+JavaUtil.genEquals(type, ""value[i]"","
173740,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,476,,"                    jw.writeEol(""break"");"
173741,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,484,,"                jw.writeEol(""return"");"
173742,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,512,,"                gen(""if ("");"
173743,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,575,,"                    genNewEvent(a, ""addIndex"", ""null"", ""value[addIndex]"", baseType);"
173744,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,583,,"                        jw.writeEol(""eventListeners.firePropertyChange(event)"");"
173745,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,609,,"                gencr(""if (vetos != null)"");"
173746,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,611,,"                geneol(""vetos.fireVetoableChange(event)"");"
173747,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,672,,"                        jw.beginIf(""value != null"");"
173748,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,694,,"                    gencr(""if (storeEvents)"");"
173749,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,696,,"                    geneol(""storedEvents.add(event)"");"
173750,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,697,,"                    gen(""else "");"
173751,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,717,,"                                                  a.getReadMethod(true)+""(index)"","
173752,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,757,,"                        gencr(""else"");"
173753,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,808,,"                gen(""return ""+attr);"
173754,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,981,,"                    geneol(""return pos"");"
173755,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,1023,,"                jw.write(JavaUtil.instanceFrom(""java.lang.String"","
173756,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,1028,,"            jw.beginMethod(""_setSchemaLocation"", ""String location"", null, ""void"", jw.PUBLIC);"
173757,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,1034,,"            jw.beginMethod(""_getSchemaLocation"", """", null, ""String"", jw.PUBLIC);"
173758,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,1041,,"            jw.writeEol(""private "", parentType, "" parent"");"
173759,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,1048,,"            jw.beginIf(""parent == null"");"
173760,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,1216,,"            jw.writeEol(""continue"");"
173761,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,1287,,"                jw.beginMethod(""write"", ""org.openide.filesystems.FileObject fo"","
173762,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,1288,,"                               ""java.io.IOException"", ""void"", jw.PUBLIC | jw.IO);"
173763,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,1390,,"            jw.write(""<String, String>"");"
173764,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,1412,,"            jw.writeEolNoI18N(""out.write(""+JavaUtil.instanceFrom(""java.lang.String"", getDefaultNamespace())+"")"");"
173765,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,1413,,"            jw.writeEolNoI18N(""out.write(\""'\"")"");"
173766,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,1443,,"                    beginAttrIterator(attr, a, ""element"");"
173767,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,1448,,"                           attr, "".getNamespaceURI())"");"
173768,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,1486,,"            } else if (a.getNamespace() != null && !a.getNamespace().equals(getDefaultNamespace()) && !a.getNamespace().equals(""http://www.w3.org/XML/1998/namespace"")) {"
173769,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,1515,,"                            "", \"""", prefix+""\"")"");"
173770,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,1614,,"                    jw.writecr(""case ""+i+"":"");"
173771,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,1647,,"                    jw.writeEol(""out.write(nextIndent)"");"
173772,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,1667,,"                    if (!a.dtdName.equals(""#PCDATA"")) {"
173773,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,1771,,"                jw.beginMethod(""read"", ""org.openide.filesystems.FileObject fo"","
173774,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,1838,,"                exceps = ""java.beans.PropertyVetoException"";"
173775,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,1851,,"                    fullDocTypeName = className+"".DocType"";"
173776,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,1906,,"                        ""it.hasNext()"", """");"
173777,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,2196,,"                    jw.writeEol(""return false"");"
173778,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,2206,,"            jw.writeEol(""return true"");"
173779,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,2229,,"            jw.writeEol(""return new "", getRootClassName()+"".XMLEventStateManager(this, "", beanQNameName, "")"");"
173780,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,2252,,"            jw.writeEol(""currentElementNumber = 0"");"
173781,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,2331,,"            jw.writeEol(""throw new UnsupportedOperationException()"");"
173782,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,2380,,"            jw.writeEol(""throw new RuntimeException(e)"");"
173783,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,2451,,"            jw.writeEol(""return null"");"
173784,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,2493,,"            jw.write(""public int getEventType() "");"
173785,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,2543,,"            jw.writeEol(""this.name = name"");"
173786,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,2566,,"            jw.writeEol(""return name"");"
173787,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,2666,,"            jw.write(""public String toString() "");"
173788,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,2777,,"            jw.writeEol(""state.nextEventNumber()"");"
173789,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,3185,,"            if (""java.util.Calendar"".equals(type)) {"
173790,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,3597,,"        jw.beginMethod(""fetchChildCount"", """", null, ""int"", jw.PUBLIC);"
173791,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,3914,,"                genInvalidName(""name"");"
173792,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,3921,,"        jw.beginMethod(""fetchPropertyByName"", ""String name"", null, ""Object"", jw.PUBLIC);"
173793,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,3921,,"        jw.beginMethod(""fetchPropertyByName"", ""String name"", null, ""Object"", jw.PUBLIC);"
173794,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,4290,,"            jw.writeEol(""return \""""+beanName+""\"""");"
173795,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,4500,,"                            signatureType+"".class})"");"
173796,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,4502,,"                            a.getWriteMethod(), ""\"", new Class[] {"","
173797,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,4579,,"        jw.writeEol(""throw new UnsupportedOperationException(\""Not implemented\"")"");"
173798,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,4669,,"                       ""String propName"", null, ""String[]"", jw.PUBLIC);"
173799,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/JavaBeanClass.java,4911,,"            jw.beginMethod(""createGraph"","
173800,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,1493,,"			out.write(_TraceParse ? ""true"" : ""false"");"
173801,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,1493,,"			out.write(_TraceParse ? ""true"" : ""false"");"
173802,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2159,,"		if (""schemaType"".equals(childNodeName)) {"
173803,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2162,,"		else if (""traceParse"".equals(childNodeName)) {"
173804,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2169,,"		else if (""traceGen"".equals(childNodeName)) {"
173805,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2176,,"		else if (""traceMisc"".equals(childNodeName)) {"
173806,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2183,,"		else if (""traceDot"".equals(childNodeName)) {"
173807,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2190,,"		else if (""filename"".equals(childNodeName)) {"
173808,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2193,,"		else if (""fileIn"".equals(childNodeName)) {"
173809,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2196,,"		else if (""docRoot"".equals(childNodeName)) {"
173810,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2199,,"		else if (""rootDir"".equals(childNodeName)) {"
173811,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2202,,"		else if (""packagePath"".equals(childNodeName)) {"
173812,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2205,,"		else if (""indent"".equals(childNodeName)) {"
173813,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2208,,"		else if (""indentAmount"".equals(childNodeName)) {"
173814,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2212,,"		else if (""mddFile"".equals(childNodeName)) {"
173815,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2215,,"		else if (""mddIn"".equals(childNodeName)) {"
173816,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2218,,"		else if (""metaDD"".equals(childNodeName)) {"
173817,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2221,,"		else if (""doGeneration"".equals(childNodeName)) {"
173818,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2228,,"		else if (""scalarException"".equals(childNodeName)) {"
173819,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2235,,"		else if (""dumpToString"".equals(childNodeName)) {"
173820,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2242,,"		else if (""vetoable"".equals(childNodeName)) {"
173821,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2249,,"		else if (""standalone"".equals(childNodeName)) {"
173822,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2256,,"		else if (""auto"".equals(childNodeName)) {"
173823,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2263,,"		else if (""messageOut"".equals(childNodeName)) {"
173824,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2266,,"		else if (""outputStreamProvider"".equals(childNodeName)) {"
173825,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2269,,"		else if (""throwErrors"".equals(childNodeName)) {"
173826,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2276,,"		else if (""generateXMLIO"".equals(childNodeName)) {"
173827,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2283,,"		else if (""generateValidate"".equals(childNodeName)) {"
173828,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2290,,"		else if (""generatePropertyEvents"".equals(childNodeName)) {"
173829,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2297,,"		else if (""generateStoreEvents"".equals(childNodeName)) {"
173830,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2304,,"		else if (""generateTransactions"".equals(childNodeName)) {"
173831,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2311,,"		else if (""attributesAsProperties"".equals(childNodeName)) {"
173832,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2318,,"		else if (""generateDelegator"".equals(childNodeName)) {"
173833,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2325,,"		else if (""delegateDir"".equals(childNodeName)) {"
173834,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2328,,"		else if (""delegatePackage"".equals(childNodeName)) {"
173835,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2331,,"		else if (""generateCommonInterface"".equals(childNodeName)) {"
173836,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2334,,"		else if (""defaultsAccessable"".equals(childNodeName)) {"
173837,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2341,,"		else if (""useInterfaces"".equals(childNodeName)) {"
173838,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2348,,"		else if (""generateInterfaces"".equals(childNodeName)) {"
173839,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2355,,"		else if (""keepElementPositions"".equals(childNodeName)) {"
173840,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2362,,"		else if (""removeUnreferencedNodes"".equals(childNodeName)) {"
173841,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2369,,"		else if (""inputURI"".equals(childNodeName)) {"
173842,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2372,,"		else if (""indexedPropertyType"".equals(childNodeName)) {"
173843,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2375,,"		else if (""doCompile"".equals(childNodeName)) {"
173844,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2382,,"		else if (""generateSwitches"".equals(childNodeName)) {"
173845,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2389,,"		else if (""dumpBeanTree"".equals(childNodeName)) {"
173846,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2392,,"		else if (""generateDotGraph"".equals(childNodeName)) {"
173847,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2395,,"		else if (""processComments"".equals(childNodeName)) {"
173848,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2402,,"		else if (""processDocType"".equals(childNodeName)) {"
173849,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2409,,"		else if (""checkUpToDate"".equals(childNodeName)) {"
173850,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2416,,"		else if (""generateParentRefs"".equals(childNodeName)) {"
173851,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2423,,"		else if (""generateHasChanged"".equals(childNodeName)) {"
173852,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2430,,"		else if (""newestSourceTime"".equals(childNodeName)) {"
173853,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2434,,"		else if (""writeBeanGraphFile"".equals(childNodeName)) {"
173854,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2446,,"		else if (""minFeatures"".equals(childNodeName)) {"
173855,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2453,,"		else if (""forME"".equals(childNodeName)) {"
173856,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2460,,"		else if (""java5"".equals(childNodeName)) {"
173857,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2467,,"		else if (""generateTagsFile"".equals(childNodeName)) {"
173858,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2474,,"		else if (""codeGeneratorFactory"".equals(childNodeName)) {"
173859,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2477,,"		else if (""generateTimeStamp"".equals(childNodeName)) {"
173860,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2484,,"		else if (""quiet"".equals(childNodeName)) {"
173861,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2491,,"		else if (""writeConfig"".equals(childNodeName)) {"
173862,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2499,,"		else if (""makeDefaults"".equals(childNodeName)) {"
173863,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2506,,"		else if (""setDefaults"".equals(childNodeName)) {"
173864,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2513,,"		else if (""trimNonStrings"".equals(childNodeName)) {"
173865,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2520,,"		else if (""useRuntime"".equals(childNodeName)) {"
173866,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2527,,"		else if (""extendBaseBean"".equals(childNodeName)) {"
173867,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2539,,"		else if (""target"".equals(childNodeName)) {"
173868,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2542,,"		else if (""staxProduceXMLEventReader"".equals(childNodeName)) {"
173869,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2549,,"		else if (""staxUseXMLEventReader"".equals(childNodeName)) {"
173870,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2556,,"		else if (""optionalScalars"".equals(childNodeName)) {"
173871,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2563,,"		else if (""defaultElementType"".equals(childNodeName)) {"
173872,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2566,,"		else if (""respectExtension"".equals(childNodeName)) {"
173873,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/S2bConfig.java,2573,,"		else if (""logSuspicious"".equals(childNodeName)) {"
173874,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,475,,"            return ""schema"";"
173875,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,509,,"                elementFormQualifiedDefault = Boolean.valueOf(""qualified"".equals(efd));"
173876,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,681,,"                result += "" name='""+getTypeName()+""'"";"
173877,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,694,,"            String elementType = node.getAttribute(""name"");	// NOI18N"
173878,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,698,,"            if (myMixed != null && (myMixed.equals(""true"") || myMixed.equals(""yes"") || myMixed.equals(""on"")))"
173879,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,698,,"            if (myMixed != null && (myMixed.equals(""true"") || myMixed.equals(""yes"") || myMixed.equals(""on"")))"
173880,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,1540,,"                out.write(""if (""+JavaUtil.compareToText(var, type, value)+"" >= 0) {\n"");"
173881,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,1541,,"                out.write(failVar+"" = true;\n"");"
173882,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,1542,,"                out.write(""}\n"");"
173883,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,1613,,"                out.write(""if (!(""+JavaUtil.typeToString(type, var)+"").matches(""+xsdRegExpToJava(JavaUtil.instanceFrom(""java.lang.String"", value))+"")) {\n"");"
173884,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,1617,,"                out.write(""if ((""+JavaUtil.typeToString(type, var)+"").matches(""+xsdRegExpToJava(JavaUtil.instanceFrom(""java.lang.String"", value))+"")) {\n"");"
173885,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,1658,,"                out.write(""if ((""+JavaUtil.typeToString(type, var)+"").length() < ""+value+"") {\n"");"
173886,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,1712,,"                out.write(""{\n"");"
173887,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,1713,,"                out.write(""String _tmp = ""+JavaUtil.typeToString(type, var)+"";\n"");"
173888,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,1713,,"                out.write(""String _tmp = ""+JavaUtil.typeToString(type, var)+"";\n"");"
173889,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,1714,,"                out.write(""int digitCount = 0;\n"");"
173890,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,1715,,"                out.write(""for (int _index1 = 0; _index1 < _tmp.length(); ++_index1) {\n"");"
173891,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,1716,,"                out.write(""if (Character.isDigit(_tmp.charAt(_index1))) {\n"");"
173892,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,1717,,"                out.write(""++digitCount;\n"");"
173893,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,1898,,"            return ""collapse"" == value;"
173894,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,2267,,"                throw new Schema2BeansRuntimeException(Common.getMessage(""MSG_FailedToParse"", schemaLocation), e);"
173895,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,2701,,"                sb.append("" ref='""+ref+""'"");"
173896,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,2707,,"            String myRef = node.getAttribute(""ref"");	// NOI18N"
173897,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,4230,,"        addToNamespace(""xml"", ""http://www.w3.org/XML/1998/namespace"");"
173898,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,4252,,"        putSampleNode(new Element(""dummy""));	// NOI18N"
173899,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,4526,,"            throw new IllegalStateException(Common.getMessage(""MSG_TryingToCallOnWrongClass"", ""setType"", e.getClass()));"
173900,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,5094,,"        setSchemaTypeMapping(XSD_NS, ""decimal"", isFloatingPoint ? ""double"" : ""java.lang.String"");"
173901,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,5094,,"        setSchemaTypeMapping(XSD_NS, ""decimal"", isFloatingPoint ? ""double"" : ""java.lang.String"");"
173902,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,5095,,"        setSchemaTypeMapping(XSD_NS, ""integer"", ""long"");"
173903,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,5095,,"        setSchemaTypeMapping(XSD_NS, ""integer"", ""long"");"
173904,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,5098,,"            setSchemaTypeMapping(XSD_NS, ""float"", ""java.lang.String"");"
173905,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,5105,,"        String[] types = new String[] {""java.lang.String"", ""java.util.Calendar"", ""java.util.Calendar"","
173906,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,5106,,"             ""long"", ""int"", ""char"", ""short"", ""double"", ""float"", ""byte"", ""boolean"","
173907,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,5106,,"             ""long"", ""int"", ""char"", ""short"", ""double"", ""float"", ""byte"", ""boolean"","
173908,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,5106,,"             ""long"", ""int"", ""char"", ""short"", ""double"", ""float"", ""byte"", ""boolean"","
173909,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,5106,,"             ""long"", ""int"", ""char"", ""short"", ""double"", ""float"", ""byte"", ""boolean"","
173910,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,5106,,"             ""long"", ""int"", ""char"", ""short"", ""double"", ""float"", ""byte"", ""boolean"","
173911,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,5112,,"        String[] schemaType = new String[] {""string"", ""dateTime"", ""date"","
173912,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/SchemaRep.java,5114,,"             ""NMTOKEN"", ""positiveInteger"", ""nonNegativeInteger"", ""nonPositiveInteger"", ""negativeInteger"", ""unsignedLong"", ""unsignedInt"", ""unsignedShort"","
173913,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/XMLSchemaParser.java,755,,"        handler.element(el.getFullContentName(), ""any"","
173914,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/XMLSchemaParser.java,1064,,"                out.write(""if (""+sizeExpr+"" > ""+maxOccurs+"") {\n"");"
173915,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/XMLSchemaParser.java,1064,,"                out.write(""if (""+sizeExpr+"" > ""+maxOccurs+"") {\n"");"
173916,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/XMLSchemaParser.java,1065,,"                out.write(failVar+"" = true;\n"");"
173917,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/XMLSchemaParser.java,1066,,"                out.write(""}\n"");"
173918,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/beangraph/SchemaTypeMappingType.java,213,,"			out.write(_Root ? ""true"" : ""false"");"
173919,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/beangraph/SchemaTypeMappingType.java,297,,"		else if (""root"".equals(childNodeName)) {"
173920,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/beangraph/SchemaTypeMappingType.java,304,,"		else if (""bean"".equals(childNodeName)) {"
173921,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/gen/JavaUtil.java,42,,"        if (""boolean"" == classType)"
173922,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/gen/JavaUtil.java,52,,"                return ""new ""+objClass+""(""+expr+"")"";"
173923,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/gen/JavaUtil.java,67,,"        toObjectType.put(""int"", ""java.lang.Integer"");"
173924,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/gen/JavaUtil.java,67,,"        toObjectType.put(""int"", ""java.lang.Integer"");"
173925,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/gen/JavaUtil.java,68,,"        toObjectType.put(""char"", ""java.lang.Character"");"
173926,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/gen/JavaUtil.java,68,,"        toObjectType.put(""char"", ""java.lang.Character"");"
173927,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/gen/JavaUtil.java,69,,"        toObjectType.put(""long"", ""java.lang.Long"");"
173928,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/gen/JavaUtil.java,69,,"        toObjectType.put(""long"", ""java.lang.Long"");"
173929,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/gen/JavaUtil.java,70,,"        toObjectType.put(""short"", ""java.lang.Short"");"
173930,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/gen/JavaUtil.java,70,,"        toObjectType.put(""short"", ""java.lang.Short"");"
173931,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/gen/JavaUtil.java,71,,"        toObjectType.put(""byte"", ""java.lang.Byte"");"
173932,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/gen/JavaUtil.java,71,,"        toObjectType.put(""byte"", ""java.lang.Byte"");"
173933,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/gen/JavaUtil.java,72,,"        toObjectType.put(""float"", ""java.lang.Float"");"
173934,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/gen/JavaUtil.java,72,,"        toObjectType.put(""float"", ""java.lang.Float"");"
173935,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/gen/JavaUtil.java,73,,"        toObjectType.put(""double"", ""java.lang.Double"");"
173936,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/gen/JavaUtil.java,73,,"        toObjectType.put(""double"", ""java.lang.Double"");"
173937,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/gen/JavaUtil.java,74,,"        toObjectType.put(""boolean"", ""java.lang.Boolean"");"
173938,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/gen/JavaUtil.java,99,,"        fromObjectType.put(""Integer"", ""int"");"
173939,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/gen/JavaUtil.java,100,,"        fromObjectType.put(""Character"", ""char"");"
173940,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/gen/JavaUtil.java,101,,"        fromObjectType.put(""Long"", ""long"");"
173941,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/gen/JavaUtil.java,102,,"        fromObjectType.put(""Short"", ""short"");"
173942,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/gen/JavaUtil.java,103,,"        fromObjectType.put(""Byte"", ""byte"");"
173943,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/gen/JavaUtil.java,104,,"        fromObjectType.put(""Float"", ""float"");"
173944,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/gen/JavaUtil.java,105,,"        fromObjectType.put(""Double"", ""double"");"
173945,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/gen/JavaUtil.java,106,,"        fromObjectType.put(""Boolean"", ""boolean"");"
173946,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/gen/JavaUtil.java,130,,"        if (""String"" == type || ""java.lang.String"" == type)"
173947,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/gen/JavaUtil.java,130,,"        if (""String"" == type || ""java.lang.String"" == type)"
173948,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/gen/JavaUtil.java,132,,"        if (type == ""java.util.Calendar"")"
173949,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/gen/JavaUtil.java,205,,"        immutableTable.put(""java.math.BigInteger"", null);"
173950,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/gen/JavaUtil.java,206,,"        immutableTable.put(""java.math.BigDecimal"", null);"
173951,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/gen/JavaUtil.java,209,,"        immutableTable.put(""java.net.URI"", null);"
173952,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/gen/JavaUtil.java,242,,"        if (type == ""char[]"" || type == ""char []"")"
173953,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/gen/JavaUtil.java,295,,"            return value1+"" - ""+value2Instance;"
173954,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/metadd/MetaDD.java,637,,"		else if (""implements"".equals(childNodeName)) {"
173955,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/metadd/MetaDD.java,640,,"		else if (""extends"".equals(childNodeName)) {"
173956,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/metadd/MetaDD.java,648,,"		else if (""vetoable"".equals(childNodeName)) {"
173957,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/metadd/MetaDD.java,662,,"		else if (""schemaLocation"".equals(childNodeName)) {"
173958,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/metadd/MetaElement.java,787,,"		else if (""namespace"".equals(childNodeName)) {"
173959,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/metadd/MetaElement.java,819,,"		else if (""implements"".equals(childNodeName)) {"
173960,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/metadd/MetaElement.java,822,,"		else if (""extends"".equals(childNodeName)) {"
173961,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/metadd/MetaElement.java,833,,"		else if (""vetoable"".equals(childNodeName)) {"
173962,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/metadd/MetaProperty.java,370,,"		else if (""key"".equals(childNodeName)) {"
173963,./TargetProjects/netbeans/ide/schema2beans/src/org/netbeans/modules/schema2beansdev/metadd/MetaProperty.java,377,,"		else if (""vetoable"".equals(childNodeName)) {"
173964,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestAttr.java,250,,"			s1 = book.getAttributeValue(""Summary"", ""length"");"
173965,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestAttr.java,259,,"			s1 = book.getAttributeValue(""Summary"", ""lang"");"
173966,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestAttr.java,313,,"			s1 = c.getAttributeValue(""title"");"
173967,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestAttr.java,325,,"			s1 = book.getAttributeValue(""Chapter"", 0, ""title"");"
173968,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestBook.java,120,,"	    book.dumpDomNode(""good"", 1));"
173969,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestBook.java,150,,"	    book.dumpDomNode(""available"", 1));"
173970,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestBook.java,190,,"		"" paragraphs:"",	c.dumpDomNode(""paragraph"", 1));"
173971,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestBook.java,376,,"	    out(""book has "" + size + "" Index beans"","
173972,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestBook.java,377,,"	    book.dumpDomNode(""index"", 1));"
173973,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestBook.java,384,,"	    out(""book should have "" + (size - 1) + "" Index beans"","
173974,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestBook.java,547,,"	    check(a1.length == book.sizeIndex(), ""(correct array size)"");"
173975,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestBookXMLSchema.java,121,,"	    book.dumpDomNode(""good"", 1));"
173976,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestBookXMLSchema.java,151,,"	    book.dumpDomNode(""available"", 1));"
173977,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestBookXMLSchema.java,191,,"		"" paragraphs:"",	c.dumpDomNode(""paragraph"", 1));"
173978,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestBookXMLSchema.java,377,,"	    out(""book has "" + size + "" Index beans"","
173979,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestBookXMLSchema.java,378,,"	    book.dumpDomNode(""index"", 1));"
173980,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestBookXMLSchema.java,385,,"	    out(""book should have "" + (size - 1) + "" Index beans"","
173981,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestBookXMLSchema.java,548,,"	    check(a1.length == book.sizeIndex(), ""(correct array size)"");"
173982,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestEvents.java,226,,"		check(l.oldValue() == null, ""(old value)"");"
173983,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestEvents.java,227,,"		check(l.newValue().equals(s), ""(new value)"");"
173984,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestEvents.java,268,,"		check(l.index == i, ""(correct index)"");"
173985,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestFind.java,71,,"		check(r.length == 1, ""found element"");"
173986,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestFind.java,75,,"		check(r.length == 2, ""found elements"");"
173987,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestMerge.java,176,,"        this.readDocument(""tm01_g1.xml"");"
173988,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestMerge.java,196,,"        out(""should not get any event"");"
173989,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestMerge.java,199,,"        check(b1.isEqualTo(b2), "" - equals"");"
173990,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestMerge.java,244,,"        check(b1.getAuthor(0).equals(b2.getAuthor(0)), ""initial match"");"
173991,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestMerge.java,254,,"        check(b1.getAuthor(0).equals(b2.getAuthor(2)), ""mixed"");"
173992,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestMerge.java,262,,"        check(b1.getAuthor(0).equals(b2.getAuthor(0)), ""reset match"");"
173993,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestMerge.java,303,,"        check(b1.getAuthor(0).equals(b2.getAuthor(0)), ""match after rem"");"
173994,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestMerge.java,307,,"        check(b1.getAuthor(0).equals(b2.getAuthor(0)), ""match"");"
173995,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestMerge.java,309,,"        check(b1.sizeAuthor() == b2.sizeAuthor(), ""correct size"");"
173996,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestMergeExtendBaseBean.java,184,,"        this.readDocument(""tm01_g1.xml"");"
173997,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestMergeExtendBaseBean.java,207,,"        check(b1.equals(b2), "" - equals"");"
173998,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestMergeExtendBaseBean.java,253,,"        check(b1.getAuthor(0).equals(b2.getAuthor(0)), ""initial match"");"
173999,./TargetProjects/netbeans/ide/schema2beans/test/unit/data/TestMergeExtendBaseBean.java,263,,"        check(b1.getAuthor(0).equals(b2.getAuthor(2)), ""mixed"");"
