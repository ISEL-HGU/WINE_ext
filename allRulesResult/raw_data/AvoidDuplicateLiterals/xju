254000,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/request/mapper/CryptoMapperTest.java,169,,"			tester.getApplication().getHomePage(), ""link"");"
254001,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/request/mapper/CryptoMapperTest.java,517,,"			""crypt/crypt.txt"");"
254002,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/request/mapper/MountedMapperTest.java,220,,"		assertEquals(""foo:bar"", h.getComponent().getPageRelativePath());"
254003,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/request/mapper/MountedMapperTest.java,621,,"		assertEquals(""p1"", page.getPageParameters().get(""param1"").toString());"
254004,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/request/mapper/MountedMapperTest.java,622,,"		assertEquals(""p2"", page.getPageParameters().get(""param2"").toString());"
254005,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/request/mapper/MountedMapperTest.java,737,,"		assertEquals(""p3"", page.getPageParameters().get(""param3"").toString());"
254006,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/request/mapper/MountedMapperTest.java,880,,"		assertEquals(""required"", p.get(""required"").toString());"
254007,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/request/mapper/MountedMapperTest.java,888,,"		assertEquals(""optional1"", p.get(""optional1"").toString());"
254008,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/request/mapper/MountedMapperTest.java,914,,"				"" got exact = "" + exactCompatScore + "" and optional = "" + optCompatScore);"
254009,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/request/mapper/PackageMapperTest.java,260,,"		assertEquals(""foo:bar"", h.getComponent().getPageRelativePath());"
254010,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/request/resource/JavaScriptPackageResourceTest.java,72,,"			PackageResourceTest.class, ""packaged1.txt"", null, null, null)"
254011,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/request/resource/PackageResourceReferenceTest.java,83,,"						""resource.txt"", locale, style, variation);"
254012,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/request/resource/PackageResourceReferenceTest.java,280,,"		assertEquals(""resource_var_style_en.txt"", makeRangeRequest(""bytes=0-""));"
254013,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/request/resource/ResouceBundleTest.java,66,,"				ResouceBundleTest.class, ""a.js"")),"
254014,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/request/resource/ResouceBundleTest.java,68,,"				ResouceBundleTest.class, ""b.js""))));"
254015,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/request/resource/ResourceReferenceLocatingTest.java,81,,"	@MethodSource(""parameters"")"
254016,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/request/resource/caching/FilenameWithVersionResourceCachingStrategyTest.java,54,,"		assertEquals(""some-resource--vers--""+TEST_RESOURCE_VERSION+"".txt"", resourceUrl.getFileName());"
254017,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/request/resource/caching/QueryStringWithVersionResourceCachingStrategyTest.java,53,,"		ResourceUrl resourceUrl = new ResourceUrl(""some-resource.txt"", new PageParameters());"
254018,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/ExceptionTestBase.java,56,,"		assertNotNull(e, ""Exception should be created"");"
254019,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/ExceptionTestBase.java,72,,"		Exception e = (Exception)constructor.newInstance(""test message"");"
254020,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/cookies/CookieUtilsTest.java,81,,"		assertEquals(""test"", (getResponseCookies().get(0)).getValue());"
254021,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/lang/PropertyResolverTest.java,91,,"		String name = (String) PropertyResolver.getValue(""name"", person);"
254022,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/lang/PropertyResolverTest.java,105,,"		Integer integer = (Integer)PropertyResolver.getValue(""age"", person);"
254023,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/lang/PropertyResolverTest.java,124,,"		PropertyResolver.setValue(""address.street"", person, ""wicket-street"", CONVERTER);"
254024,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/lang/PropertyResolverTest.java,124,,"		PropertyResolver.setValue(""address.street"", person, ""wicket-street"", CONVERTER);"
254025,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/lang/PropertyResolverTest.java,152,,"			PropertyResolver.setValue(""country.name"", person, ""US"", CONVERTER);"
254026,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/lang/PropertyResolverTest.java,185,,"		PropertyResolver.setValue(""address.number"", person, ""10"", CONVERTER);"
254027,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/lang/PropertyResolverTest.java,422,,"		PropertyResolver.setValue(""privateAddress"", person, address, CONVERTER);"
254028,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/lang/PropertyResolverTest.java,448,,"		Class<?> clazz = PropertyResolver.getPropertyClass(""number"", address);"
254029,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/lang/PropertyResolverTest.java,461,,"		clazz = PropertyResolver.getPropertyClass(""addressArray[0].number"", person);"
254030,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/lang/PropertyResolverTest.java,764,,"		document.setProperty(""string"", ""string"");"
254031,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/resource/ClassPathResourceFinderTest.java,38,,"			"".class"";"
254032,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/resource/ResourceStreamLocatorTest.java,55,,"	private final Locale locale_en_US_WIN = new Locale(""en"", ""US"", ""WIN"");"
254033,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/resource/ResourceStreamLocatorTest.java,88,,"		createAndTestResource(sourcePath, ""style"", null, null, ""_style"");"
254034,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/resource/ResourceStreamLocatorTest.java,108,,"		createAndTestResource(sourcePath, null, null, locale_fr, ""_fr"");"
254035,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/resource/locator/CachingResourceStreamLocatorTest.java,59,,"		cachingLocator.locate(String.class, ""path"");"
254036,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/resource/locator/CachingResourceStreamLocatorTest.java,170,,"		when(resourceStreamLocator.locate(String.class, ""path"", ""style"", ""variation"", null,"
254037,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/resource/locator/CachingResourceStreamLocatorTest.java,170,,"		when(resourceStreamLocator.locate(String.class, ""path"", ""style"", ""variation"", null,"
254038,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/resource/locator/CachingResourceStreamLocatorTest.java,171,,"			""extension"", true)).thenReturn(frs);"
254039,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/resource/locator/ResourceNameIteratorTest.java,91,,"		iterator = new StyleAndVariationResourceNameIterator(""style"", null);"
254040,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/FormTesterSubmitLinkTest.java,56,,"		FormTester form = tester.newFormTester(""form"");"
254041,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/FormTesterSubmitLinkTest.java,57,,"		form.setValue(""text"", ""some test text"");"
254042,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/FormTesterTest.java,75,,"		FormTester formTester = tester.newFormTester(""form"");"
254043,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/FormTesterTest.java,76,,"		formTester.setValue(""text"", ""Mock text value"");"
254044,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/FormTesterTest.java,127,,"		formTester.setValue(""text"", ""Mock value"");"
254045,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/TagTesterTest.java,51,,"		TagTester tester = TagTester.createTagByAttribute(NON_CLOSED_INPUT, ""wicket:id"", ""p"");"
254046,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/TagTesterTest.java,96,,"		String cls = tester.getAttribute(""class"");"
254047,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/TagTesterTest.java,109,,"		tester = TagTester.createTagByAttribute(""<p id=\""test\"">mock</p>"", null, null);"
254048,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/TagTesterTest.java,115,,"		tester = TagTester.createTagByAttribute(""<p id=\""test\"">mock</p>"", ""id"", ""test"");"
254049,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/TagTesterTest.java,131,,"		tester = TagTester.createTagByAttribute(MARKUP_1, ""id"", ""test2"");"
254050,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/TagTesterTest.java,134,,"		assertEquals(""span"", tester.getName());"
254051,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/TagTesterTest.java,367,,"                            ""<img wicket:id=\""img\"" src=\""bild1.jpg\"">"" +"
254052,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/TagTesterTest.java,370,,"                    ""</li>"" +"
254053,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/WicketTesterCookieTest.java,135,,"		tester.getRequest().addCookie(new Cookie(""name"", ""value""));"
254054,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/WicketTesterTest.java,120,,"		Book mockBook = new Book(""xxId"", ""xxName"");"
254055,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/WicketTesterTest.java,120,,"		Book mockBook = new Book(""xxId"", ""xxName"");"
254056,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/WicketTesterTest.java,127,,"		tester.assertLabel(""name"", ""xxName"");"
254057,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/WicketTesterTest.java,190,,"		tester.clickLink(""link"");"
254058,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/WicketTesterTest.java,206,,"		tester.assertLabel(""label"", ""No Parameter"");"
254059,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/WicketTesterTest.java,234,,"		tester.clickLink(""ajaxLinkWithSetResponsePageClass"");"
254060,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/WicketTesterTest.java,632,,"		FormTester formTester = tester.newFormTester(""form"");"
254061,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/WicketTesterTest.java,643,,"		tester.assertModelValue(""form:name"", ""Bob"");"
254062,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/WicketTesterTest.java,645,,"		tester.assertComponentOnAjaxResponse(""text"");"
254063,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/WicketTesterTest.java,673,,"		assertEquals(""Mock name"", pojo.getName());"
254064,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/WicketTesterTest.java,758,,"		parameters.set(""q_1"", ""q_1_value"");"
254065,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/WicketTesterTest.java,758,,"		parameters.set(""q_1"", ""q_1_value"");"
254066,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/WicketTesterTest.java,763,,"		tester.getRequest().setParameter(""q_2"", ""q_2_value"");"
254067,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/WicketTesterTest.java,813,,"		formTester.setValue(""textfield"", ""v1"");"
254068,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/WicketTesterTest.java,814,,"		tester.getRequest().getPostParameters().setParameterValue(""p_1"", ""p_1_value"");"
254069,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/WicketTesterTest.java,814,,"		tester.getRequest().getPostParameters().setParameterValue(""p_1"", ""p_1_value"");"
254070,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/WicketTesterTest.java,1072,,"		ByteArrayResource resource = new ByteArrayResource(""text/plain"", content.getBytes(),"
254071,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/WicketTesterTest.java,1232,,"		assertEquals(""a text value"", page.text);"
254072,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/apps_3/FormTesterTest.java,68,,"		formTester.select(""dropDownChoice"", 0);"
254073,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/apps_3/FormTesterTest.java,71,,"		formTester.select(""radioGroup"", 3);"
254074,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/apps_3/FormTesterTest.java,130,,"		formTester.selectMultiple(""listMultipleChoice"", new int[] { 0, 3 });"
254075,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/apps_3/FormTesterTest.java,132,,"		formTester.selectMultiple(""checkGroup"", new int[] { 0, 1, 2, 3 });"
254076,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/apps_5/AjaxLinkClickTest.java,60,,"		final AjaxLink<Void> ajaxLink = new AjaxLink<Void>(""ajaxLink"")"
254077,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/core/util/tester/apps_5/AjaxSubmitLinkClickTest.java,79,,"			.setParameterValue(page.getNameField().getInputName(), ""new mock value"");"
254078,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/DefaultMarkupCacheKeyProviderTest.java,47,,"		foo.locale = new Locale(""language"");"
254079,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/DefaultMarkupCacheKeyProviderTest.java,51,,"		foo.locale = new Locale("""", ""COUNTRY"");"
254080,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/DefaultMarkupCacheKeyProviderTest.java,56,,"		foo.locale = new Locale("""", """", ""variant"");"
254081,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/MarkupParserTest.java,129,,"		log.info(""tok(0)="" + tokens.get(0));"
254082,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/MarkupParserTest.java,200,,"			null, ""html"");"
254083,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/MarkupParserTest.java,203,,"		parser.setWicketNamespace(""wcn"");"
254084,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/MarkupParserTest.java,504,,"		assertEquals(""<script>"", tag.toString());"
254085,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/MarkupParserTest.java,506,,"		assertEquals(""</script>"", tag.toString());"
254086,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/MarkupVariationTest.java,46,,"		tester.assertMarkupVariation(getVariationPanel(), ""one"");"
254087,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/MyComponent.java,163,,"		str.append(""intParam: "").append(intParam).append(""<br/>"");"
254088,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/PackageResourceTest.java,67,,"			sharedResources.get(PackageResourceTest.class, ""packaged1.txt"", null, null, null, true),"
254089,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/PackageResourceTest.java,116,,"		assertTrue(PackageResource.exists(PackageResourceTest.class, ""packaged1_en_US.txt"", null,"
254090,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/SecurePackageResourceGuardTest.java,42,,"			Packages.absolutePath(Application.class, ""test.gif"")));"
254091,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/SecurePackageResourceGuardTest.java,44,,"			Packages.absolutePath(Application.class, ""mydir/test.gif"")));"
254092,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/SecurePackageResourceGuardTest.java,143,,"		assertFalse(guard.accept(""/mydir/test.gif""));"
254093,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/SecurePackageResourceGuardTest.java,144,,"		assertTrue(guard.accept(""mydir/dir2/xxx.gif""));"
254094,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/SecurePackageResourceGuardTest.java,145,,"		assertFalse(guard.accept(""mydir/dir2/dir3/xxx.gif""));"
254095,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/TransparentWebMarkupContainerTest.java,141,,"		wicketTester.clickLink(""link"", true);"
254096,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/TransparentWebMarkupContainerTest.java,162,,"		tester.assertComponentOnAjaxResponse(""label"");"
254097,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/TransparentWebMarkupContainerTest.java,308,,"				""<html><body>"" + //"
254098,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/TransparentWebMarkupContainerTest.java,311,,"				""	</div>"" + //"
254099,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/TransparentWebMarkupContainerTest.java,312,,"				""</body></html>"");"
254100,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/basic/SimplePageTest.java,60,,"		Label label = (Label)tester.getLastRenderedPage().get(""myLabel"");"
254101,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/basic/SimplePageTest.java,64,,"		Panel panel = (Panel)tester.getLastRenderedPage().get(""myPanel"");"
254102,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/basic/SimplePageTest.java,74,,"		Border border = (Border)tester.getLastRenderedPage().get(""myBorder"");"
254103,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/basic/SimplePageTest.java,80,,"		border = (Border)tester.getLastRenderedPage().get(""myBorder2"");"
254104,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/basic/SimplePageTest.java,84,,"			""<span wicket:id=\""myBorder2\"" testAttr=\""myValue\""><wicket:border>before body - <wicket:body>border</wicket:body> - after body</wicket:border></span>""));"
254105,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/basic/SimplePageTest.java,93,,"		WebMarkupContainer container = (WebMarkupContainer)tester.getLastRenderedPage().get(""test"");"
254106,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/basic/SimplePageTest.java,165,,"		assertEquals(""myLabel"", attr.getString(""wicket:id""));"
254107,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/basic/SimplePage_16.java,45,,"				tag.setName(""test"");"
254108,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/form/AutoLabelLabelProviderLocatorTest.java,50,,"			WebMarkupContainer dummy = new WebMarkupContainer(""dummy"");"
254109,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/form/AutoLabelLabelProviderLocatorTest.java,51,,"			dummy.add(AttributeModifier.replace(""class"", ""dummy1""));"
254110,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/form/AutoLabelLabelProviderLocatorTest.java,51,,"			dummy.add(AttributeModifier.replace(""class"", ""dummy1""));"
254111,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/form/ButtonTest.java,52,,"		TagTester buttonTagTester = tester.getTagByWicketId(""button"");"
254112,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/form/CheckBoxMultipleChoiceTest.java,154,,"		CheckBoxMultipleChoice<Integer> radioChoice = new CheckBoxMultipleChoice<Integer>(""testid"", Arrays.asList(1)) {"
254113,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/form/CheckBoxMultipleChoiceTest.java,158,,"				return new ValueMap(""class=input"" + index);"
254114,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/form/CheckBoxMultipleChoiceTest.java,163,,"				return new ValueMap(""class=label"" + index);"
254115,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/form/CollectionFormComponentTest.java,73,,"		assertEquals(""[A, B]"", choice.getDefaultModelObjectAsString());"
254116,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/form/DisabledItemRetainingCheckBoxTest.java,60,,"		FormTester form = tester.newFormTester(""form"");"
254117,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/form/EscapeAttributesInChoicesTest.java,41,,"		assertNull(radioTagTester.getAttribute(""onmouseover""));"
254118,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/form/FormComponentTest.java,43,,"		final FormComponent<?> fc = new TextField<String>(""foo"");"
254119,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/form/FormComponentTest.java,70,,"		assertEquals(""field2"", page.field2.getDefaultLabel());"
254120,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/form/FormMethodMismatchTest.java,40,,"        final Form<Void> underTest = new Form<Void>(""underTest"") {"
254121,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/form/FormMethodMismatchTest.java,64,,"        tester.getRequest().setMethod(""GET"");"
254122,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/form/FormMethodMismatchTest.java,115,,"            underTest.add(new Button(""button""));"
254123,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/form/FormSubmitTest.java,51,,"		outerForm = (NestableForm)page.get(""outerForm"");"
254124,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/form/FormSubmitTest.java,52,,"		middleForm = (NestableForm)page.get(""outerForm:middleForm"");"
254125,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/form/FormSubmitTest.java,65,,"		formTester.submit(""submit"");"
254126,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/form/FormTest.java,94,,"		tester.newFormTester(""form"").submit();"
254127,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/form/ListMultipleChoiceTest.java,44,,"			form.add(newListMultipleChoice(""list"", selectedValues, choices));"
254128,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/form/LocalizedErrorMessageTest.java,41,,"		tester.getRequest().getPostParameters().setParameterValue(page.field.getInputName(), ""foo"");"
254129,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/form/RadioChoiceTest.java,29,,"		RadioChoice<Integer> radioChoice = new RadioChoice<Integer>(""testid"", Arrays.asList(1));"
254130,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/form/encryption/CryptTest.java,42,,"			if (crypt.encryptUrlSafe(""test"") != null)"
254131,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/form/onFormValidateModelObjects/OnFormValidateModelObjectsPage.java,90,,"				target.add(getThePage().get(""validations""));"
254132,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/form/submitlink/TestHomePage.java,39,,"		tester.getRequest().getPostParameters().setParameterValue(""text"", ""Hello"");"
254133,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/form/upload/FileUploadErrorTest.java,75,,"		formTester.setFile(fileUploadId, new File(testUploadFilePath), ""UTF-8"");"
254134,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/form/upload/FileUploadFieldTest.java,78,,"			FormTester formtester = tester.newFormTester(""form"");"
254135,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/form/validation/FormValidatorBehaviorTest.java,76,,"		FormTester ft = tester.newFormTester(""form"");"
254136,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/form/validation/FormValidatorBehaviorTest.java,77,,"		ft.setValue(""name"", ""999999999"");"
254137,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/form/validation/HomePage.java,78,,"		form.add(new TextField<String>(""textfield1"", new PropertyModel<String>(this,"
254138,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/form/validation/HomePage.java,82,,"		form.add(new TextField<String>(""textfield2"", new PropertyModel<String>(this,"
254139,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/form/validation/HomePageTest.java,52,,"		tester.executeAjaxEvent(""form:submit"", ""click"");"
254140,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/form/validation/HomePageTest.java,80,,"		assertTrue(((MyBorder)tester.getLastRenderedPage().get(""border"")).hitOnError);"
254141,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/internal/EnclosurePage_1.java,41,,"		add(new AfterRenderCountingLabel(""label2"", ""Test Label 2""));"
254142,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/internal/EnclosureTest.java,88,,"		executeTest(EnclosurePage_4.class, new PageParameters().set(""visible"", false),"
254143,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/internal/EnclosureTest.java,201,,"		page.get(""form:label"").setVisible(false);"
254144,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/internal/EnclosureTest.java,217,,"		page.get(""form:input"").setVisible(false);"
254145,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/internal/EnclosureTest.java,298,,"		page.get(""input"").setVisible(false);"
254146,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/internal/EnclosureTest.java,390,,"				final Label l = new Label(""msg"", ""$label$"");"
254147,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/internal/HeaderResponseTest.java,116,,"        headerResponse.render(JavaScriptHeaderItem.forUrl(""js-resource.js"", ""some-id"").setDefer(defer));"
254148,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/internal/HeaderResponseTest.java,116,,"        headerResponse.render(JavaScriptHeaderItem.forUrl(""js-resource.js"", ""some-id"").setDefer(defer));"
254149,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/internal/HeaderResponseTest.java,118,,"            RESOURCE_NAME + ""\""></script>\n"";"
254150,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/internal/headeritems/HtmlHeaderItemsContainerTest.java,42,,"		int idxMetaCharset = responseAsString.indexOf(""<meta charset=\""utf-8\"""");"
254151,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/internal/headeritems/HtmlHeaderItemsContainerTest.java,43,,"		int idxMetaPanelWicketHead = responseAsString.indexOf(""meta name=\""panel-wicket-head\"""");"
254152,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/internal/headeritems/HtmlHeaderItemsContainerTest.java,44,,"		int idxWicketAjaxJs = responseAsString.indexOf(""wicket-ajax-jquery.js"");"
254153,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/internal/headeritems/HtmlHeaderItemsContainerTest.java,45,,"		int idxTitleElement = responseAsString.indexOf(""<title>Apache Wicket Quickstart</title>"");"
254154,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/internal/headeritems/HtmlHeaderItemsContainerTest.java,46,,"		int idxMetaFromBasePage = responseAsString.indexOf(""<meta name='fromBasePage' content='1'"");"
254155,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/link/AbstractLinkTest.java,45,,"		AbstractLink link = new AbstractLink(""link"")"
254156,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/link/ClientSideImageMapPage_1.java,42,,"		map.addCircleArea(new ExternalLink(""wicketHomePage1"", ""http://wicket.apache.org""), 0, 0, 10);"
254157,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/link/DownloadPage.java,48,,"		File textFile = File.createTempFile(""Download"", "".txt"");"
254158,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/link/MountedPageLinkTest.java,53,,"	@ValueSource(strings = { ""true"", ""false"" })"
254159,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/link/MountedPageLinkTest.java,53,,"	@ValueSource(strings = { ""true"", ""false"" })"
254160,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/link/MountedPageLinkTest.java,59,,"											 new PageParameters().add(""param"", ""value""));"
254161,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/link/MountedPageLinkTest.java,59,,"											 new PageParameters().add(""param"", ""value""));"
254162,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/link/MountedPageLinkTest.java,60,,"		Link<?> link = (Link<?>)page.get(""link"");"
254163,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/list/PagedTableNavigatorTest.java,52,,"		Link<?> link = (Link<?>)page.get(""navigator:first"");"
254164,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/list/PagedTableNavigatorTest.java,55,,"		link = (Link<?>)page.get(""navigator:prev"");"
254165,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/list/PagedTableNavigatorTest.java,58,,"		link = (Link<?>)page.get(""navigator:next"");"
254166,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/list/PagedTableNavigatorTest.java,61,,"		link = (Link<?>)page.get(""navigator:last"");"
254167,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/list/PagedTableNavigatorWithLabelProviderTest.java,49,,"		Link<?> link = (Link<?>)page.get(""navigator:first"");"
254168,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/list/PagedTableNavigatorWithLabelProviderTest.java,52,,"		link = (Link<?>)page.get(""navigator:prev"");"
254169,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/list/PagedTableNavigatorWithLabelProviderTest.java,55,,"		link = (Link<?>)page.get(""navigator:next"");"
254170,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/list/PagedTableNavigatorWithLabelProviderTest.java,58,,"		link = (Link<?>)page.get(""navigator:last"");"
254171,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/list/PagedTableNavigatorWithMarginTest.java,50,,"		Link<?> link = (Link<?>)page.get(""navigator:first"");"
254172,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/list/PagedTableNavigatorWithMarginTest.java,53,,"		link = (Link<?>)page.get(""navigator:prev"");"
254173,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/list/PagedTableNavigatorWithMarginTest.java,56,,"		link = (Link<?>)page.get(""navigator:next"");"
254174,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/list/PagedTableNavigatorWithMarginTest.java,59,,"		link = (Link<?>)page.get(""navigator:last"");"
254175,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/media/MediaTagsTest.java,46,,"		String attribute = createTagByAttribute.getAttribute(""src"");"
254176,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/navigation/paging/PagingNavigationLinkTest.java,58,,"		assertTrue(link.isFirst(), ""is first"");"
254177,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/navigation/paging/PagingNavigationLinkTest.java,59,,"		assertFalse(link.isLast(), ""is last"");"
254178,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/navigation/paging/PagingNavigationLinkTest.java,136,,"		assertTrue(link.linksTo(null), ""links to"");"
254179,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/html/panel/FencedFeedbackPanelTest.java,53,,"		page.containerInput.error(""error"");"
254180,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/parser/XmlPullParserTest.java,59,,"		assertEquals(""tag"", tag.getName());"
254181,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/parser/XmlPullParserTest.java,142,,"		assertEquals(""iso-8859-1"", parser.getEncoding());"
254182,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/parser/XmlPullParserTest.java,235,,"		assertFalse(tag.getAttributes().containsKey(""attr""));"
254183,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markup/parser/XmlPullParserTest.java,242,,"		assertEquals(""1234"", tag.getAttributes().getString(""attr""));"
254184,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/markupFragments/MarkupFragmentTest.java,64,,"		Panel panel = new MyPanel(""panel"");"
254185,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/model/InheritedModelTest.java,39,,"		data1.put(""label"", ""foo"");"
254186,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/model/InheritedModelTest.java,39,,"		data1.put(""label"", ""foo"");"
254187,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/model/InheritedModelTest.java,42,,"		data2.put(""label"", ""bar"");"
254188,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/model/InheritedModelTest.java,92,,"		data2.put(""value"", ""bar"");"
254189,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/model/ModelToStringTest.java,51,,"			return ""foo"";"
254190,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/model/ModelToStringTest.java,66,,"		properties.put(""name"", ""foo"");"
254191,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/model/ModelToStringTest.java,70,,"		expected = ""Model:classname=[org.apache.wicket.model.CompoundPropertyModel]:nestedModel=[{name=foo}]"";"
254192,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/model/PropertyModelTest.java,88,,"			model.setObject(""foo"");"
254193,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/model/PropertyModelWithListTest.java,89,,"		bean.setText(""Wrinkly and green I am."");"
254194,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/model/ResourceModelTest.java,43,,"			add(new Label(""testlabel"", new ResourceModel(""testlabel"")));"
254195,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/model/StringResourceModelTest.java,68,,"		assertEquals(""Simple text"", model.getString(), ""Text should be as expected"");"
254196,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/model/StringResourceModelTest.java,77,,"			new StringResourceModel(""wrappedOnAssignment.text"", page));"
254197,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/page/expirationrecovery/PageExpirationRecoveryTest.java,91,,"		assertEquals(parameters, page.getPageParameters(), ""PageParameters should be preserved"");"
254198,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/pageStore/AsynchronousPageStoreTest.java,376,,"				assertEquals(""value1"", context.getRequestData(KEY1, () -> ""value1""));"
254199,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/pageStore/RequestPageStoreTest.java,61,,"		assertNull(store.getPage(context, 1), ""no page in request store"");"
254200,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/pageStore/disk/PageWindowManagerTest.java,55,,"		manager.createPageWindow(page0id, ""foo"", maxSize);"
254201,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/properties/PropertiesTest.java,50,,"		assertEquals(""MyApplication_de"", page.getString(""test2""));"
254202,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/properties/PropertiesTest.java,52,,"		assertEquals(""MyApplication_mystyle_de"", page.getString(""test4""));"
254203,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/protocol/http/HeaderBufferingWebResponseTest.java,44,,"		response.addHeader(""key1"", ""value1"");"
254204,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/protocol/http/RequestUtilsTest.java,95,,"			""http://aif.ru/blah/zzz"");"
254205,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/protocol/http/RequestUtilsTest.java,118,,"		assertEquals(""value"", params.get(""key"").toString());"
254206,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/protocol/http/RequestUtilsTest.java,118,,"		assertEquals(""value"", params.get(""key"").toString());"
254207,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/protocol/http/RequestUtilsTest.java,129,,"		assertEquals("""", params.get(""123"").toString());"
254208,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/protocol/http/ResponseIOExceptionTest.java,116,,"				""Connection reset by peer: socket write error""));"
254209,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/protocol/http/WebApplicationTest.java,118,,"				fail(""body should not be read before character encoding is set"");"
254210,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/protocol/http/WicketFilterTest.java,200,,"				""/wicket/resource/"" + Application.class.getName() + ""/foo.gif"");"
254211,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/protocol/http/WicketFilterTest.java,614,,"		assertEquals(""wicket/"", s);"
254212,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/protocol/http/WicketFilterTest.java,635,,"		assertEquals(""wicket/foobar/"", s);"
254213,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/protocol/http/mock/MockHttpServletRequestTest.java,43,,"		assertEquals(""http"", request.getScheme());"
254214,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/protocol/http/mock/MockHttpServletRequestTest.java,44,,"		assertEquals(""localhost"", request.getServerName());"
254215,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/protocol/http/mock/MockHttpServletRequestTest.java,56,,"		assertEquals(""/foo/bar/baz.html"", url.getPath());"
254216,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/protocol/http/mock/MockHttpServletResponseTest.java,60,,"		Cookie cookie = new Cookie(""name"", ""value"");"
254217,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/protocol/http/mock/MockHttpServletResponseTest.java,60,,"		Cookie cookie = new Cookie(""name"", ""value"");"
254218,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/protocol/http/servlet/ServletWebResponseTest.java,60,,"		Url baseUrl = Url.parse(""./baseUrl"");"
254219,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/protocol/http/servlet/ServletWebResponseTest.java,61,,"		baseUrl.setProtocol(""http"");"
254220,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/protocol/http/servlet/ServletWebResponseTest.java,62,,"		baseUrl.setHost(""someHost"");"
254221,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/protocol/http/servlet/ServletWebResponseTest.java,134,,"		String header = httpResponse.getHeader(""Content-Disposition"");"
254222,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/protocol/http/servlet/ServletWebResponseTest.java,183,,"		when(httpServletResponse.encodeURL(ArgumentMatchers.eq(url))).thenReturn(url + "";foo"");"
254223,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/protocol/http/servlet/XForwardedRequestWrapperTest.java,58,,"		assertEquals(null, resp.getHeader(""x-forwarded-for""));"
254224,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/protocol/http/servlet/XForwardedRequestWrapperTest.java,59,,"		assertEquals(null, resp.getHeader(""x-forwarded-by""));"
254225,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/protocol/http/servlet/XForwardedRequestWrapperTest.java,60,,"		assertEquals(null, resp.getHeader(""x-forwarded-proto""));"
254226,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/protocol/http/servlet/XForwardedRequestWrapperTest.java,88,,"		filter.getConfig().setAllowedInternalProxies(""192\\.168\\.0\\.10, 192\\.168\\.0\\.11"");"
254227,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/protocol/http/servlet/XForwardedRequestWrapperTest.java,93,,"		request.setRemoteAddr(""192.168.0.10"");"
254228,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/protocol/http/servlet/XForwardedRequestWrapperTest.java,102,,"		assertEquals(""140.211.11.130"", resp.getRemoteAddr());"
254229,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/protocol/http/servlet/XForwardedRequestWrapperTest.java,120,,"		filter.getConfig().setTrustedProxies(""proxy1, proxy2"");"
254230,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/protocol/https/HttpsMapperApplicationTest.java,49,,"		assertEquals(""https"", tester.getLastRequest().getScheme());"
254231,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/protocol/https/HttpsMapperApplicationTest.java,73,,"		assertEquals(""http"", tester.getLastRequest().getScheme());"
254232,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/protocol/https/HttpsMapperTest.java,80,,"		when(req.getScheme()).thenReturn(""https"");"
254233,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/protocol/https/HttpsMapperTest.java,88,,"		when(req.getScheme()).thenReturn(""http"");"
254234,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/protocol/https/HttpsMapperTest.java,155,,"		setupRequest(req, ""http"", ""localhost"", 80, ""/ctx"", ""foo=bar"");"
254235,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/protocol/https/HttpsMapperTest.java,155,,"		setupRequest(req, ""http"", ""localhost"", 80, ""/ctx"", ""foo=bar"");"
254236,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/protocol/https/HttpsMapperTest.java,155,,"		setupRequest(req, ""http"", ""localhost"", 80, ""/ctx"", ""foo=bar"");"
254237,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/queueing/ComponentQueueingPerformanceTest.java,207,,"			add(new Label(""areacode"", new PropertyModel(phone, ""areacode"")));"
254238,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/queueing/ComponentQueueingPerformanceTest.java,208,,"			add(new Label(""prefix"", new PropertyModel(phone, ""prefix"")));"
254239,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/queueing/ComponentQueueingPerformanceTest.java,209,,"			add(new Label(""suffix"", new PropertyModel(phone, ""suffix"")));"
254240,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/queueing/ComponentQueueingPerformanceTest.java,237,,"			add(new Label(""street"", new PropertyModel(addr, ""street"")));"
254241,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/queueing/ComponentQueueingPerformanceTest.java,238,,"			add(new Label(""city"", new PropertyModel(addr, ""city"")));"
254242,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/queueing/ComponentQueueingPerformanceTest.java,240,,"			add(new Label(""zipcode"", new PropertyModel(addr, ""zipcode"")));"
254243,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/queueing/ComponentQueueingPerformanceTest.java,296,,"					item.add(new Label(""first"", new PropertyModel(model, ""first"")));"
254244,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/queueing/ComponentQueueingPerformanceTest.java,299,,"					item.add(new AddPhonePanel(""work"", new PropertyModel<PhoneNumber>(model, ""work"")));"
254245,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/queueing/ComponentQueueingPerformanceTest.java,300,,"					item.add(new AddPhonePanel(""cell"", new PropertyModel<PhoneNumber>(model, ""cell"")));"
254246,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/queueing/ComponentQueueingTest.java,64,,"		p.setPageMarkup(""<p wicket:id='a'><p wicket:id='b'><p wicket:id='c'></p></p></p>"");"
254247,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/queueing/ComponentQueueingTest.java,448,,"		p.setPageMarkup(""<wicket:enclosure child='a'><div wicket:id='a'></div><div wicket:id='b'></div></wicket:enclosure>"");"
254248,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/queueing/ComponentQueueingTest.java,460,,"			""<wicket:enclosure child=\""a\""><div wicket:id=\""a\""></div><div wicket:id=\""b\""></div></wicket:enclosure>"","
254249,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/queueing/ComponentQueueingTest.java,685,,"		border.queue(new Label(""label"", ""test""));"
254250,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/resource/CssUrlReplacerTest.java,87,,"		String cssRelativePath = ""res/css/some.css"";"
254251,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/resource/CssUrlReplacerTest.java,130,,"				DECORATION_SUFFIX + ""');}""));"
254252,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/resource/FileSystemResourceReferenceTest.java,62,,"				""test"", path)"
254253,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/resource/ResourceUtilTest.java,39,,"		assertEquals(""style"", attributes.getStyle());"
254254,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/resource/ResourceUtilTest.java,40,,"		assertEquals(""variation"", attributes.getVariation());"
254255,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/resource/StringResourceLoaderTestBase.java,83,,"		String s = loader.loadStringResource(component.getClass(), ""test.string"","
254256,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/resource/StringResourceLoaderTestBase.java,85,,"		assertEquals(""This is a test"", s, ""Resource should be loaded"");"
254257,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/resource/aggregator/ResourceAggregatorTest.java,116,,"			.addJavaScriptBundle(Application.class, ""ab.js"", new ResourceReferenceA(),"
254258,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/resource/loader/PropertiesResolverTest.java,95,,"			assertEquals(""container-1"", lookup(""label.keyContainer"", container1));"
254259,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/resource/loader/PropertiesResolverTest.java,96,,"			assertEquals(""container-2"", lookup(""keyContainer"", container1));"
254260,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/resource/loader/PropertiesResolverTest.java,103,,"			assertEquals(""repeater-1"", lookup(""label.keyRepeater"", repeater));"
254261,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/resource/loader/PropertiesResolverTest.java,104,,"			assertEquals(""repeater-2"", lookup(""keyRepeater"", repeater));"
254262,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/resource/loader/PropertiesResolverTest.java,113,,"			assertEquals(""page-1"", lookup(""repeater.label.keyPage"", MyPage.this));"
254263,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/resource/loader/PropertiesResolverTest.java,114,,"			assertEquals(""page-2"", lookup(""label.keyPage"", MyPage.this));"
254264,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/resource/loader/ValidatorStringResourceLoaderTest.java,56,,"		FormTester formTester = tester.newFormTester(""form"");"
254265,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/stateless/StatelessComponentTest.java,51,,"			assertEquals(""wanted exception"", e.getMessage());"
254266,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/stateless/StatelessFormUrlTest.java,61,,"		tester.getRequest().getPostParameters().setParameterValue(""text"", ""newValue"");"
254267,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/validation/ValidationErrorTest.java,43,,"		assertEquals(""TestValidator"", e.getKeys().get(0));"
254268,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/validation/ValidationErrorTest.java,50,,"		assertEquals(""TestValidator.foo"", e.getKeys().get(0));"
254269,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/validation/ValidatorBehaviorTest.java,82,,"		FormTester ft = tester.newFormTester(""form"");"
254270,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/validation/ValidatorBehaviorTest.java,83,,"		ft.setValue(""name"", ""22"");"
254271,./TargetProjects/wicket/wicket-core/src/test/java/org/apache/wicket/validation/validator/UrlValidatorTest.java,57,,"		String[] schemes = { ""http"" };"
254272,./TargetProjects/wicket/wicket-devutils/src/test/java/org/apache/wicket/devutils/stateless/StatelessCheckerTest.java,154,,"			startComponentInPage(checker, new StatelessLabel(""foo"").add(new StatefulBehavior()));"
254273,./TargetProjects/wicket/wicket-examples/src/main/java/org/apache/wicket/examples/ajax/builtin/AjaxDownloadPage.java,103,,"				target.appendJavaScript(""alert('Download failed');"");"
254274,./TargetProjects/wicket/wicket-examples/src/main/java/org/apache/wicket/examples/ajax/builtin/EffectsPage.java,126,,"				attributes.setChannel(new AjaxChannel(""effects"", Type.DROP));"
254275,./TargetProjects/wicket/wicket-examples/src/main/java/org/apache/wicket/examples/asemail/MailTemplate.java,72,,"		TextField<String> nameTextField = new TextField<>(""name"", new PropertyModel<String>("
254276,./TargetProjects/wicket/wicket-examples/src/main/java/org/apache/wicket/examples/datetime/DateTimePage.java,65,,"	@SuppressWarnings(""unused"")"
254277,./TargetProjects/wicket/wicket-examples/src/main/java/org/apache/wicket/examples/guestbook/GuestBook.java,64,,"				listItem.add(new MultiLineLabel(""text""));"
254278,./TargetProjects/wicket/wicket-examples/src/main/java/org/apache/wicket/examples/images/Home.java,67,,"		""Image2.gif"");"
254279,./TargetProjects/wicket/wicket-examples/src/main/java/org/apache/wicket/examples/repeater/DataTablePage.java,130,,"		colgroup.addCol(colgroup.new Col(AttributeModifier.append(""class"", ""lightblue"")));"
254280,./TargetProjects/wicket/wicket-examples/src/test/java/org/apache/wicket/examples/guestbook/GuestbookTest.java,55,,"		tester.assertComponent(""commentForm"", Form.class);"
254281,./TargetProjects/wicket/wicket-examples/src/test/java/org/apache/wicket/examples/guestbook/GuestbookTest.java,57,,"		formTester.setValue(""text"", ""test-1"");"
254282,./TargetProjects/wicket/wicket-examples/src/test/java/org/apache/wicket/examples/hangman/HangManTest.java,143,,"			tester.assertComponent(""start"", Link.class);"
254283,./TargetProjects/wicket/wicket-examples/src/test/java/org/apache/wicket/examples/hangman/HangManTest.java,146,,"			tester.assertLabel(""guessesRemaining"", ""5"");"
254284,./TargetProjects/wicket/wicket-examples/src/test/java/org/apache/wicket/examples/niceurl/NiceUrlTest.java,68,,"		tester.clickLink(""homeLink"");"
254285,./TargetProjects/wicket/wicket-extensions/src/main/java/org/apache/wicket/extensions/markup/html/form/palette/Palette.java,320,,"					OnEventHeaderItem.forComponent(this, ""click"", Palette.this.getDownOnClickJS()));"
254286,./TargetProjects/wicket/wicket-extensions/src/main/java/org/apache/wicket/extensions/util/encoding/CharSetMap.java,47,,"	public static final String DEFAULT_CHARSET = ""ISO-8859-1"";"
254287,./TargetProjects/wicket/wicket-extensions/src/main/java/org/apache/wicket/extensions/util/encoding/CharSetMap.java,72,,"		commonMapper.put(""be"", ""ISO-8859-5"");"
254288,./TargetProjects/wicket/wicket-extensions/src/main/java/org/apache/wicket/extensions/util/encoding/CharSetMap.java,75,,"		commonMapper.put(""cs"", ""ISO-8859-2"");"
254289,./TargetProjects/wicket/wicket-extensions/src/test/java/org/apache/wicket/extensions/ajax/markup/html/AjaxEditableTest.java,76,,"		tester.assertVisible(""ajaxLabel:editor"");"
254290,./TargetProjects/wicket/wicket-extensions/src/test/java/org/apache/wicket/extensions/ajax/markup/html/AjaxEditableTest.java,77,,"		tester.assertInvisible(""ajaxLabel:label"");"
254291,./TargetProjects/wicket/wicket-extensions/src/test/java/org/apache/wicket/extensions/ajax/markup/html/AjaxLazyLoadPanelTest.java,39,,"		tester.assertContains(""LOADING"");"
254292,./TargetProjects/wicket/wicket-extensions/src/test/java/org/apache/wicket/extensions/ajax/markup/html/AjaxLazyLoadPanelTest.java,40,,"		tester.assertContainsNot(""LOADED"");"
254293,./TargetProjects/wicket/wicket-extensions/src/test/java/org/apache/wicket/extensions/ajax/markup/html/AjaxLazyLoadPanelTest.java,41,,"		tester.assertContains(""Wicket.Timer.set\\("");"
254294,./TargetProjects/wicket/wicket-extensions/src/test/java/org/apache/wicket/extensions/markup/html/captcha/CaptchaImageResourceTest.java,38,,"		CaptchaImageResource image1 = new CaptchaImageResource(""wicket"");"
254295,./TargetProjects/wicket/wicket-extensions/src/test/java/org/apache/wicket/extensions/markup/html/form/datetime/DateTimeFieldTest.java,50,,"		FormTester formTester = tester.newFormTester(""form"", false);"
254296,./TargetProjects/wicket/wicket-extensions/src/test/java/org/apache/wicket/extensions/markup/html/form/datetime/LocalDateTextFieldTest.java,46,,"		FormTester formTester = tester.newFormTester(""form"", false);"
254297,./TargetProjects/wicket/wicket-extensions/src/test/java/org/apache/wicket/extensions/markup/html/form/datetime/TimeFieldTest.java,47,,"		FormTester formTester = tester.newFormTester(""form"", false);"
254298,./TargetProjects/wicket/wicket-extensions/src/test/java/org/apache/wicket/extensions/markup/html/repeater/data/table/DataTableTest.java,87,,"		parameters.add(""empty"", Boolean.TRUE);"
254299,./TargetProjects/wicket/wicket-extensions/src/test/java/org/apache/wicket/extensions/markup/html/tabs/TabbedPanelTest.java,143,,"		page.tabbedPanel.getTabs().add(new AbstractTab(Model.of(""added 1""))"
254300,./TargetProjects/wicket/wicket-extensions/src/test/java/org/apache/wicket/extensions/markup/html/tabs/TabbedPanelTest.java,154,,"		tester.assertContainsNot(""<span wicket:id=\""title\"">added 1</span>"");"
254301,./TargetProjects/wicket/wicket-extensions/src/test/java/org/apache/wicket/extensions/markup/html/tabs/TabbedPanelTest.java,155,,"		tester.assertContainsNot(""<span wicket:id=\""label\"">added 1</span>"");"
254302,./TargetProjects/wicket/wicket-extensions/src/test/java/org/apache/wicket/extensions/markup/html/tabs/TabbedPanelTest.java,277,,"		tester.assertContains(""<span wicket:id=\""title\"">added 2</span>"");"
254303,./TargetProjects/wicket/wicket-extensions/src/test/java/org/apache/wicket/extensions/markup/html/tabs/TabbedPanelVisibilityTest.java,44,,"		assertEquals(""tab0 selected"", tabsTags.get(0).getAttribute(""class""));"
254304,./TargetProjects/wicket/wicket-ioc/src/test/java/org/apache/wicket/proxy/LazyInitProxyFactoryTest.java,46,,"	private static ConcreteObject concreteObject = new ConcreteObject(""concrete"");"
254305,./TargetProjects/wicket/wicket-native-websocket/wicket-native-websocket-core/src/main/java/org/apache/wicket/protocol/ws/api/registry/SimpleWebSocketConnectionRegistry.java,46,,"		Args.notNull(application, ""application"");"
254306,./TargetProjects/wicket/wicket-native-websocket/wicket-native-websocket-core/src/test/java/org/apache/wicket/protocol/ws/util/tester/WebSocketTesterProcessorTest.java,94,,"		configureRequest(new String[] { ""http://www.example.com"" }, new String[] {});"
254307,./TargetProjects/wicket/wicket-request/src/main/java/org/apache/wicket/request/mapper/parameter/PageParameters.java,154,,"		Args.notNull(name, ""name"");"
254308,./TargetProjects/wicket/wicket-request/src/test/java/org/apache/wicket/request/HttpHeaderCollectionTest.java,42,,"		headers.addHeader(""X-Test"", ""foo"");"
254309,./TargetProjects/wicket/wicket-request/src/test/java/org/apache/wicket/request/HttpHeaderCollectionTest.java,61,,"		headers.setHeader(""foobaz"", """");"
254310,./TargetProjects/wicket/wicket-request/src/test/java/org/apache/wicket/request/HttpHeaderCollectionTest.java,95,,"		headers.setDateHeader(""date"", time1);"
254311,./TargetProjects/wicket/wicket-request/src/test/java/org/apache/wicket/request/UrlTest.java,66,,"		checkSegments(url, ""foo"", ""bar"", ""baz"");"
254312,./TargetProjects/wicket/wicket-request/src/test/java/org/apache/wicket/request/UrlTest.java,66,,"		checkSegments(url, ""foo"", ""bar"", ""baz"");"
254313,./TargetProjects/wicket/wicket-request/src/test/java/org/apache/wicket/request/UrlTest.java,135,,"		String s = ""?a=b"";"
254314,./TargetProjects/wicket/wicket-request/src/test/java/org/apache/wicket/request/UrlTest.java,252,,"		assertEquals(""http"", url.getProtocol());"
254315,./TargetProjects/wicket/wicket-request/src/test/java/org/apache/wicket/request/UrlTest.java,370,,"		Url url = Url.parse(""abc/efg"");"
254316,./TargetProjects/wicket/wicket-request/src/test/java/org/apache/wicket/request/UrlTest.java,689,,"		checkUrl(url, ""ftp"", ""myhost"", 8081, """", """");"
254317,./TargetProjects/wicket/wicket-request/src/test/java/org/apache/wicket/request/UrlTest.java,689,,"		checkUrl(url, ""ftp"", ""myhost"", 8081, """", """");"
254318,./TargetProjects/wicket/wicket-request/src/test/java/org/apache/wicket/request/UrlTest.java,723,,"		url = Url.parse(""ftp://myhost/foo"");"
254319,./TargetProjects/wicket/wicket-request/src/test/java/org/apache/wicket/request/UrlUtilsTest.java,47,,"		assertEquals(""/foo/bar"", UrlUtils.normalizePath(""foo/bar""));"
254320,./TargetProjects/wicket/wicket-request/src/test/java/org/apache/wicket/request/mapper/parameter/PageParametersTest.java,45,,"		parameters.add(""key"", input, INamedParameters.Type.MANUAL);"
254321,./TargetProjects/wicket/wicket-request/src/test/java/org/apache/wicket/request/mapper/parameter/PageParametersTest.java,98,,"		parameters.set(""named1"", ""value1"", 3, INamedParameters.Type.MANUAL);"
254322,./TargetProjects/wicket/wicket-request/src/test/java/org/apache/wicket/request/mapper/parameter/PageParametersTest.java,98,,"		parameters.set(""named1"", ""value1"", 3, INamedParameters.Type.MANUAL);"
254323,./TargetProjects/wicket/wicket-request/src/test/java/org/apache/wicket/request/mapper/parameter/PageParametersTest.java,102,,"		parameters.set(""named2"", ""value2"", 0, INamedParameters.Type.MANUAL);"
254324,./TargetProjects/wicket/wicket-request/src/test/java/org/apache/wicket/request/mapper/parameter/PageParametersTest.java,102,,"		parameters.set(""named2"", ""value2"", 0, INamedParameters.Type.MANUAL);"
254325,./TargetProjects/wicket/wicket-request/src/test/java/org/apache/wicket/request/mapper/parameter/PageParametersTest.java,107,,"		parameters.set(""named3"", ""value3"", -100, INamedParameters.Type.MANUAL);"
254326,./TargetProjects/wicket/wicket-request/src/test/java/org/apache/wicket/request/mapper/parameter/PageParametersTest.java,182,,"		PageParameters left = new PageParameters().add(""left"", ""left"", INamedParameters.Type.MANUAL)"
254327,./TargetProjects/wicket/wicket-request/src/test/java/org/apache/wicket/request/mapper/parameter/PageParametersTest.java,183,,"			.add(""both"", ""both1"", INamedParameters.Type.MANUAL)"
254328,./TargetProjects/wicket/wicket-request/src/test/java/org/apache/wicket/request/mapper/parameter/PageParametersTest.java,188,,"			.add(""right"", ""right"", INamedParameters.Type.MANUAL)"
254329,./TargetProjects/wicket/wicket-request/src/test/java/org/apache/wicket/request/mapper/parameter/UrlPathPageParametersEncoderTest.java,38,,"		params.add(""name1"", ""value1"", INamedParameters.Type.MANUAL);"
254330,./TargetProjects/wicket/wicket-request/src/test/java/org/apache/wicket/request/mapper/parameter/UrlPathPageParametersEncoderTest.java,38,,"		params.add(""name1"", ""value1"", INamedParameters.Type.MANUAL);"
254331,./TargetProjects/wicket/wicket-request/src/test/java/org/apache/wicket/request/mapper/parameter/UrlPathPageParametersEncoderTest.java,39,,"		params.add(""name2"", ""value2"", INamedParameters.Type.MANUAL);"
254332,./TargetProjects/wicket/wicket-request/src/test/java/org/apache/wicket/request/mapper/parameter/UrlPathPageParametersEncoderTest.java,39,,"		params.add(""name2"", ""value2"", INamedParameters.Type.MANUAL);"
254333,./TargetProjects/wicket/wicket-spring/src/test/java/org/apache/wicket/spring/SpringBeanLocatorTest.java,61,,"		ctx.putBean(""bean"", bean);"
254334,./TargetProjects/wicket/wicket-spring/src/test/java/org/apache/wicket/spring/injection/annot/SpringBeanTest.java,117,,"		ctx.putBean(""mrBean"", new Bean());"
254335,./TargetProjects/wicket/wicket-spring/src/test/java/org/apache/wicket/spring/injection/annot/SpringBeanWithGenericsTest.java,82,,"		assertTrue(beans.contains(ctx.getBean(""stringBean"")));"
254336,./TargetProjects/wicket/wicket-spring/src/test/java/org/apache/wicket/spring/injection/annot/SpringBeanWithGenericsTest.java,147,,"		assertEquals(""one"", arrayListStrings.get(0));"
254337,./TargetProjects/wicket/wicket-util/src/main/java/org/apache/wicket/util/collections/IntHashMap.java,103,,"	@SuppressWarnings(""unchecked"")"
254338,./TargetProjects/wicket/wicket-util/src/main/java/org/apache/wicket/util/resource/FileSystemResourceStream.java,98,,"					"" could not be acquired"", e);"
254339,./TargetProjects/wicket/wicket-util/src/main/java/org/apache/wicket/util/string/StringEscapeUtils.java,192,,"			throw new IllegalArgumentException(""The Writer must not be null."");"
254340,./TargetProjects/wicket/wicket-util/src/main/java/org/apache/wicket/util/string/StringValue.java,502,,"				""Unable to convert '"" + text + ""' to a double value"", e);"
254341,./TargetProjects/wicket/wicket-util/src/main/java/org/apache/wicket/util/visit/Visits.java,67,,"	@SuppressWarnings({ ""unchecked"", ""rawtypes"" })"
254342,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/convert/converters/ConvertersTest.java,112,,"			converter.convertToObject(""whatever"", Locale.getDefault(Locale.Category.FORMAT));"
254343,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/convert/converters/ConvertersTest.java,139,,"			converter.convertToObject(""10whatever"", Locale.US);"
254344,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/convert/converters/ConvertersTest.java,159,,"		assertEquals(1.1, converter.convertToObject(""1.1"", Locale.US), 0.001);"
254345,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/convert/converters/ConvertersTest.java,407,,"		assertEquals(""10/24/02"", converter.convertToString(date, Locale.US));"
254346,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/convert/converters/ConvertersTest.java,465,,"		assertEquals(""5/1/11"", converter.convertToString(cal, Locale.US));"
254347,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/encoding/UrlEncoderTest.java,116,,"		assertEquals(""foobar"", UrlEncoder.PATH_INSTANCE.encode(""foobar"", CHARSET));"
254348,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/file/FilesTest.java,47,,"				""/somethingThatDoesntExistsOnMostMachines-111111111111111111111111111111"")),"
254349,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/io/XmlReaderTest.java,51,,"			assertEquals(""<html>"", bufReader.readLine());"
254350,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/io/XmlReaderTest.java,88,,"		assertEquals(""UTF-8"", reader.getEncoding());"
254351,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/parse/metapattern/MetaPatternTest.java,51,,"		assertEquals(""foo"", matcher.group(1));"
254352,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/resource/ResourceUtilsTest.java,41,,"		pathLocale = ResourceUtils.getLocaleFromFilename(""some.min.ext"");"
254353,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/size/BytesTest.java,69,,"		assertTrue(""1GB"".equals(Bytes.gigabytes(1).toString()));"
254354,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/string/AppendingStringBufferTest.java,50,,"		AppendingStringBuffer asb = new AppendingStringBuffer(""123456789"");"
254355,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/string/AppendingStringBufferTest.java,125,,"		assertEquals(""12345null6789"", asb.toString());"
254356,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/string/StringListTest.java,156,,"		list.add(""foo"");"
254357,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/string/StringListTest.java,191,,"		checkStringList(1, ""[a]"", StringList.valueOf(""a""));"
254358,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/string/StringListTest.java,193,,"		checkStringList(1, ""[a, b]"", StringList.valueOf(""a, b""));"
254359,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/string/StringListTest.java,222,,"		checkStringList(3, ""[a, b, c]"", list);"
254360,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/string/StringListTest.java,312,,"		checkStringList(2, ""[a, a]"", StringList.tokenize(""a a""));"
254361,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/string/StringValueTest.java,41,,"		assertFalse(StringValue.valueOf(""bla"", Locale.FRANCE)"
254362,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/string/StringsTest.java,105,,"		assertEquals(""foo"", Strings.lastPathComponent(""bar:garply:foo"", ':'));"
254363,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/string/StringsTest.java,107,,"		assertEquals(""bar"", Strings.firstPathComponent(""bar:garply:foo"", ':'));"
254364,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/string/StringsTest.java,111,,"		assertEquals(""bar:baz"", Strings.beforeLast(""bar:baz:foo"", ':'));"
254365,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/string/StringsTest.java,132,,"		assertEquals(""com"", Strings.beforeFirst(""com.foo.bar"", '.'));"
254366,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/string/StringsTest.java,145,,"		assertEquals(""foo.bar"", Strings.afterFirst(""com.foo.bar"", '.'));"
254367,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/string/StringsTest.java,329,,"		assertEquals("""", Strings.replaceAll("""", """", ""abc""));"
254368,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/string/interpolator/VariableInterpolatorTest.java,42,,"		MapVariableInterpolator in = new MapVariableInterpolator(""${key}"", params);"
254369,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/value/AttributeMapTest.java,48,,"		assertNull(map.putAttribute(""foo"", ""bar""));"
254370,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/value/ValueMapTest.java,46,,"		assertEquals(""value1"", vm.get(""param1""));"
254371,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/value/ValueMapTest.java,46,,"		assertEquals(""value1"", vm.get(""param1""));"
254372,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/value/ValueMapTest.java,47,,"		assertEquals(""value2"", vm.get(""param2""));"
254373,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/value/ValueMapTest.java,47,,"		assertEquals(""value2"", vm.get(""param2""));"
254374,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/value/ValueMapTest.java,195,,"		vm.put(""num"", integerValue.toString());"
254375,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/value/ValueMapTest.java,196,,"		vm.put(""num.bad"", ""xxx"");"
254376,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/value/ValueMapTest.java,196,,"		vm.put(""num.bad"", ""xxx"");"
254377,./TargetProjects/wicket/wicket-util/src/test/java/org/apache/wicket/util/value/ValueMapTest.java,216,,"		assertNull(vm.getAsInteger(""num.missing""));"
254378,./TargetProjects/wookie/digsig-client/java/src/main/java/org/apache/wookie/digsig/client/ui/SignerJFrame.java,464,,"								""Error"", JOptionPane.ERROR_MESSAGE);"
254379,./TargetProjects/wookie/scratchpad/modules/jcr/src/org/apache/wookie/beans/jcr/IdCollection.java,38,,"    @SuppressWarnings(""unchecked"")"
254380,./TargetProjects/wookie/scratchpad/modules/jcr/src/org/apache/wookie/beans/jcr/JCRPersistenceManager.java,265,,"                        parentNode.addNode(nodeName, ""nt:unstructured"");                        "
254381,./TargetProjects/wookie/scratchpad/modules/jcr/src/org/apache/wookie/beans/jcr/JCRPersistenceManager.java,371,,"            throw new RuntimeException(""Unexpected exception: ""+e, e);"
254382,./TargetProjects/wookie/scratchpad/modules/jcr/src/org/apache/wookie/beans/jcr/JCRPersistenceManager.java,383,,"            throw new IllegalStateException(""Transaction not initiated or already closed"");"
254383,./TargetProjects/wookie/scratchpad/modules/jcr/src/org/apache/wookie/beans/jcr/JCRPersistenceManager.java,546,,"    @SuppressWarnings(""unchecked"")"
254384,./TargetProjects/wookie/scratchpad/modules/jcr/src/org/apache/wookie/beans/jcr/JCRPersistenceManager.java,559,,"            throw new IllegalArgumentException(""Invalid bean interface specified"");            "
254385,./TargetProjects/wookie/wookie-connector/java/src/main/java/org/apache/wookie/connector/framework/AbstractWookieConnectorService.java,95,,"		SignedApiRequest request = SignedApiRequest.POST(conn.getURL()+""/properties"", conn.getApiKey(), conn.getSecret());"
254386,./TargetProjects/wookie/wookie-connector/java/src/main/java/org/apache/wookie/connector/framework/AbstractWookieConnectorService.java,101,,"			json += ""\""shareddata\"":[{\""name\"":\""""+fName+""\"", \""value\"":\""""+fValue+""\""}]"";"
254387,./TargetProjects/wookie/wookie-connector/java/src/main/java/org/apache/wookie/connector/framework/AbstractWookieConnectorService.java,101,,"			json += ""\""shareddata\"":[{\""name\"":\""""+fName+""\"", \""value\"":\""""+fValue+""\""}]"";"
254388,./TargetProjects/wookie/wookie-connector/java/src/main/java/org/apache/wookie/connector/framework/AbstractWookieConnectorService.java,384,,"			throw new WookieConnectorException ( ""Widget file was not uploaded successfully."", null);"
254389,./TargetProjects/wookie/wookie-connector/java/src/main/java/org/apache/wookie/connector/framework/AbstractWookieConnectorService.java,403,,"		SignedApiRequest request = SignedApiRequest.PUT(conn.getURL()+""/widgets/""+widgetIdentifier, conn.getApiKey(), conn.getSecret());"
254390,./TargetProjects/wookie/wookie-connector/java/src/test/java/org/apache/wookie/tests/connector/framework/UserTest.java,36,,"    assertEquals(""Login name not correctly set"", LOGIN_NAME, user.getLoginName());"
254391,./TargetProjects/wookie/wookie-connector/java/src/test/java/org/apache/wookie/tests/connector/framework/UserTest.java,46,,"    user.setLoginName(""foo"");"
254392,./TargetProjects/wookie/wookie-connector/java/src/test/java/org/apache/wookie/tests/connector/framework/impl/WookieConnectorService.java,144,,"    assertNotNull(""Retrieved widget instance is null"", instance);"
254393,./TargetProjects/wookie/wookie-connector/java/src/test/java/org/apache/wookie/tests/connector/framework/impl/WookieConnectorService.java,225,,"	    service.setPropertyForInstance(instance, true, ""test_property2"", ""test_data"");"
254394,./TargetProjects/wookie/wookie-parser/java/src/main/java/org/apache/wookie/w3c/updates/UpdateDescriptionDocument.java,129,,"		if (root.getAttribute(""src"") == null) throw new InvalidUDDException(""no src attribute"");"
254395,./TargetProjects/wookie/wookie-parser/java/src/main/java/org/apache/wookie/w3c/util/FormattingUtils.java,115,,"		if ((dir == null || dir.equals(""ltr"") )&& !value.contains(""dir="")) return value;"
254396,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/AccessTest.java,33,,"    Element element = new Element(""access"");"
254397,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/AccessTest.java,42,,"    element.setAttribute(""origin"",""http://www.apache.org"");"
254398,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/DirectionalityUtilsTest.java,30,,"		Element widget = new Element(""widget"");"
254399,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/DirectionalityUtilsTest.java,31,,"		@SuppressWarnings(""unused"")"
254400,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/DirectionalityUtilsTest.java,39,,"		widget.setAttribute(""dir"",""rtl"");"
254401,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/DirectionalityUtilsTest.java,39,,"		widget.setAttribute(""dir"",""rtl"");"
254402,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/DirectionalityUtilsTest.java,60,,"		widget.setAttribute(""dir"", ""ltr"");"
254403,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/DirectionalityUtilsTest.java,61,,"		Element name = new Element(""name"");"
254404,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/EntityTest.java,53,,"		AuthorEntity author = new AuthorEntity(""test"",""http://test"",""test@test.net"");"
254405,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/EntityTest.java,53,,"		AuthorEntity author = new AuthorEntity(""test"",""http://test"",""test@test.net"");"
254406,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/EntityTest.java,57,,"		author.setAuthorName(""test2"");"
254407,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/EntityTest.java,59,,"		author.setHref(""http://test2"");"
254408,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/FormattingUtilsTest.java,49,,"		name.setName(""Hello world"");"
254409,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/FormattingUtilsTest.java,64,,"		assertEquals(""Hello World"", FormattingUtils.getEncoded(null, ""Hello World""));"
254410,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/I18n.java,45,,"		String[] tests = {""lro"",""rlo"",""rtl"",""ltr""};"
254411,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/I18n.java,45,,"		String[] tests = {""lro"",""rlo"",""rtl"",""ltr""};"
254412,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/I18n.java,45,,"		String[] tests = {""lro"",""rlo"",""rtl"",""ltr""};"
254413,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/I18n.java,45,,"		String[] tests = {""lro"",""rlo"",""rtl"",""ltr""};"
254414,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/I18n.java,121,,"		assertTrue(widget.getNames().get(0).getName().contains(""dir=\""""+dir+""\""""));"
254415,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/I18n.java,207,,"		W3CWidget widget = getWidget(""023"",""lro"");"
254416,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/I18n.java,241,,"		widget = getWidget(""037"",""lro"");"
254417,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/I18n.java,242,,"		assertEquals(""םפללחק"",widget.getAuthor().getEmail());"
254418,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/I18n.java,245,,"		assertEquals(""The arrow should point right -->"",widget.getAuthor().getEmail());		"
254419,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/I18n.java,251,,"		assertEquals(""PASSED"",widget.getAuthor().getEmail());"
254420,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/I18n.java,278,,"		widget = getWidget(""033"",""lro"");"
254421,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/I18n.java,280,,"		widget = getWidget(""034"",""lro"");"
254422,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/I18n.java,282,,"		widget = getWidget(""035"",""lro"");"
254423,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/I18n.java,390,,"		widget = getWidget(""031"",""lro"");"
254424,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/I18n.java,392,,"		widget = getWidget(""032"",""lro"");"
254425,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/LocalizationUtilsTest.java,37,,"	public static final String[] LANG_LIST_8 = {""en-us""};"
254426,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/LocalizedContentTest.java,29,,"		Element test = new Element(""test"");"
254427,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/LocalizedContentTest.java,39,,"		Element world = new Element(""span"");"
254428,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/LocalizedContentTest.java,41,,"		world.setAttribute(""lang"",""de"");"
254429,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/PackagingAndConfiguration.java,58,,"    assertEquals(""PASS"",getName(widget));"
254430,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/PackagingAndConfiguration.java,93,,"		assertEquals(""index.html"",getSrc(widget));"
254431,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/PackagingAndConfiguration.java,143,,"		assertEquals(""index.htm"",getSrc(widget));"
254432,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/PackagingAndConfiguration.java,433,,"		assertEquals(""P A S S"", getName(widget));"
254433,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/PackagingAndConfiguration.java,594,,"		assertEquals(""icon.png"",getIcon(widget));"
254434,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/PackagingAndConfiguration.java,626,,"		assertEquals(""locales/en/icon.png"",getIcon(widget));"
254435,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/PackagingAndConfiguration.java,882,,"		assertEquals(""pass.html"",getSrc(widget));"
254436,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/PackagingAndConfiguration.java,1011,,"		assertEquals(""feature:a9bb79c1"", feature1.getName());"
254437,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/PackagingAndConfiguration.java,1196,,"		assertTrue((icon1.equals(""locales/en/icon.jpg"") && (icon2.equals(""icon.png""))) || (icon2.equals(""locales/en/icon.jpg"") && (icon1.equals(""icon.png""))));"
254438,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/UpdateConformanceTest.java,64,,"		assertEquals(""http://people.opera.com/harig/wupdres/resources/out.php?udd-pass"", widget.getUpdateLocation());"
254439,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/UpdateConformanceTest.java,237,,"		@SuppressWarnings(""unused"")"
254440,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/UpdateDescriptionDocumentTest.java,33,,"		UpdateDescriptionDocument udd = new UpdateDescriptionDocument(""test"", new URL(""http://incubator.apache.org/wookie""), ""1.0"");"
254441,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/UpdateDescriptionDocumentTest.java,33,,"		UpdateDescriptionDocument udd = new UpdateDescriptionDocument(""test"", new URL(""http://incubator.apache.org/wookie""), ""1.0"");"
254442,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/UpdateDescriptionDocumentTest.java,65,,"		Element el = new Element(""update-info"", ""http://bogus.net"");"
254443,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/UpdateDescriptionDocumentTest.java,75,,"		el.setAttribute(""src"",""http://incubator.apache.org/wookie"");"
254444,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/UpdateDescriptionDocumentTest.java,85,,"		el.setAttribute(""version"",""1.0"");"
254445,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/UpdateDescriptionDocumentTest.java,107,,"		el.setAttribute(""src"",""http://incubator.apache.org/wookie/test.wgt"");"
254446,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/UpdateDescriptionTest.java,36,,"		update.setAttribute(IW3CXMLConfiguration.HREF_ATTRIBUTE, ""http://localhost"");"
254447,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/WidgetOutputterTest.java,43,,"		outputter.setWidgetFolder(""/widgets"");"
254448,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,43,,"		W3CWidget widget = getWidget(""042"",""lro"");"
254449,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,43,,"		W3CWidget widget = getWidget(""042"",""lro"");"
254450,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,44,,"		addResult(""i18nlro42"",FormattingUtils.getFormattedWidgetVersion(widget), ""םפללחק"");"
254451,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,48,,"		W3CWidget widget = getWidget(""042"",""ltr"");"
254452,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,49,,"		addResult(""i18nltr42"",FormattingUtils.getFormattedWidgetVersion(widget), ""The arrow should point right -->"");"
254453,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,53,,"		W3CWidget widget = getWidget(""042"",""rlo"");"
254454,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,54,,"		addResult(""i18nrlo42"",FormattingUtils.getFormattedWidgetVersion(widget), ""PASSED"");"
254455,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,58,,"		W3CWidget widget = getWidget(""042"",""rtl"");"
254456,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,68,,"		widget = getWidget(""001"",""lro"");"
254457,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,71,,"		widget = getWidget(""002"",""lro"");"
254458,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,74,,"		widget = getWidget(""006"",""lro"");"
254459,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,77,,"		widget = getWidget(""010"",""lro"");"
254460,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,80,,"		widget = getWidget(""014"",""lro"");"
254461,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,83,,"		widget = getWidget(""015"",""lro"");"
254462,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,86,,"		widget = getWidget(""019"",""lro"");"
254463,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,88,,"		addResult(""i18nlro019"", FormattingUtils.getFormattedWidgetName(name), ""< PASSED -->"");"
254464,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,89,,"		widget = getWidget(""020"",""lro"");"
254465,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,92,,"		widget = getWidget(""021"",""lro"");"
254466,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,95,,"		widget = getWidget(""022"",""lro"");"
254467,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,108,,"			addResult(""i18n""+dir+""01"", FormattingUtils.getFormattedWidgetName(name), ""The arrow should point right -->"");"
254468,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,224,,"		test = ""003"";"
254469,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,229,,"		test=""007"";"
254470,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,234,,"		test=""011"";"
254471,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,239,,"		test=""016"";"
254472,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,323,,"		test=""005"";"
254473,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,327,,"		test=""009"";"
254474,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,331,,"		test=""013"";"
254475,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,335,,"		test=""018"";"
254476,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,406,,"		test=""004"";"
254477,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,410,,"		test=""008"";"
254478,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,414,,"		test=""012"";"
254479,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,418,,"		test=""017"";"
254480,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,422,,"		test=""036"";"
254481,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,425,,"		addResult(""i18n""+dir+test, author.getHref(), ""http://widget.example.org/"");"
254482,./TargetProjects/wookie/wookie-parser/java/src/test/java/org/apache/wookie/w3c/test/i18nManual.java,426,,"		test=""037"";"
254483,./TargetProjects/wookie/wookie-server/src/main/java/org/apache/wookie/auth/AuthTokenCrypter.java,56,,"	private static final Charset UTF8_CHARSET = Charset.forName(""UTF-8"");"
254484,./TargetProjects/wookie/wookie-server/src/main/java/org/apache/wookie/controller/PoliciesController.java,68,,"      _logger.error(""Problem with policies configuration"", e);"
254485,./TargetProjects/wookie/wookie-server/src/main/java/org/apache/wookie/controller/PropertiesController.java,166,,"							if (!property.has(""name"")) throw new InvalidParametersException();"
254486,./TargetProjects/wookie/wookie-server/src/main/java/org/apache/wookie/feature/ext/WookieAPIImpl.java,54,,"        return ""okay""; //$NON-NLS-1$"
254487,./TargetProjects/wookie/wookie-server/src/main/java/org/apache/wookie/feature/ext/WookieAPIImpl.java,56,,"		return localizedMessages.getString(""WidgetAPIImpl.0"");"
254488,./TargetProjects/wookie/wookie-server/src/main/java/org/apache/wookie/feature/oauth/oAuthClient.java,86,,"		if(idKey == null) return ""invalid"";"
254489,./TargetProjects/wookie/wookie-server/src/main/java/org/apache/wookie/feature/oauth/oAuthClient.java,183,,"		if (!oAuthParamMap.containsKey(""profile"")) "
254490,./TargetProjects/wookie/wookie-server/src/main/java/org/apache/wookie/feature/wave/WaveAPIImpl.java,92,,"			state.put(""message"", localizedMessages.getString(""WidgetAPIImpl.0""));	 //$NON-NLS-1$"
254491,./TargetProjects/wookie/wookie-server/src/main/java/org/apache/wookie/proxy/Policies.java,197,,"    @SuppressWarnings(""unchecked"")"
254492,./TargetProjects/wookie/wookie-server/src/main/java/org/apache/wookie/proxy/Policy.java,105,,"    if (directive.equals(""ALLOW"") || directive.equals(""DENY"")){"
254493,./TargetProjects/wookie/wookie-server/src/main/java/org/apache/wookie/updates/UpdatesController.java,129,,"				_logger.warn(""Problem updating ""+resourceId+"": widget couldn't be downloaded"");"
254494,./TargetProjects/wookie/wookie-server/src/main/java/org/apache/wookie/util/digitalsignature/DigitalSignatureProcessor.java,133,,"        isWidgetValid = isSignatureValid(file, ""author"", widget);"
254495,./TargetProjects/wookie/wookie-server/src/main/java/org/apache/wookie/util/digitalsignature/DigitalSignatureProcessor.java,348,,"        return name.contains(""author"") && name.contains(""signature"");"
254496,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/auth/AuthTokenUtilsTest.java,39,,"		ApiKeys.getInstance().addKey(""ENC_TEST"", ""me@nowhere.com"");"
254497,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/auth/AuthTokenUtilsTest.java,39,,"		ApiKeys.getInstance().addKey(""ENC_TEST"", ""me@nowhere.com"");"
254498,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/auth/AuthTokenUtilsTest.java,50,,"		authToken.setContextId(""shared"");"
254499,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/auth/AuthTokenUtilsTest.java,51,,"		authToken.setViewerId(""user1"");"
254500,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/auth/AuthTokenUtilsTest.java,52,,"		authToken.setWidgetId(""http://apache.org/widgets/test"");"
254501,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/HtmlCleanerTest.java,102,,"			cleaner.injectStylesheet(""test.css"");"
254502,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/conformance/PackagingAndConfiguration.java,57,,"		assertEquals(""index.html"",start);"
254503,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/conformance/PackagingAndConfiguration.java,85,,"		assertEquals(""index.htm"",start);"
254504,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/conformance/PackagingAndConfiguration.java,200,,"		assertEquals(""PASS"", widget.getChild(""author"").getText());"
254505,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/conformance/PackagingAndConfiguration.java,200,,"		assertEquals(""PASS"", widget.getChild(""author"").getText());"
254506,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/conformance/PackagingAndConfiguration.java,275,,"		assertEquals(""123"", getWidgetHeight(widget));"
254507,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/conformance/PackagingAndConfiguration.java,386,,"		assertEquals(""P A S S"", getWidgetname(widget));"
254508,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/conformance/PackagingAndConfiguration.java,438,,"		assertEquals(""PASS"",  widget.getChild(""description"").getText());"
254509,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/conformance/PackagingAndConfiguration.java,492,,"		assertEquals(""PASS"",  widget.getChild(""license"").getText());	"
254510,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/conformance/PackagingAndConfiguration.java,493,,"		assertEquals(""PASS:"",  widget.getChild(""license"").getAttributeValue(""href""));"
254511,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/conformance/PackagingAndConfiguration.java,546,,"		assertEquals(""icon.png"",getIcon(widget));"
254512,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/conformance/PackagingAndConfiguration.java,578,,"		assertEquals(""locales/en/icon.png"",getIcon(widget));"
254513,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/conformance/PackagingAndConfiguration.java,579,,"		assertEquals(null, widget.getChild(""icon"").getAttribute(""width""));"
254514,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/conformance/PackagingAndConfiguration.java,579,,"		assertEquals(null, widget.getChild(""icon"").getAttribute(""width""));"
254515,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/conformance/PackagingAndConfiguration.java,580,,"		assertEquals(null, widget.getChild(""icon"").getAttribute(""height""));"
254516,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/conformance/PackagingAndConfiguration.java,731,,"		assertTrue(widget.getChildren(""preference"") == null || widget.getChildren(""preference"").size() == 0);"
254517,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/conformance/PackagingAndConfiguration.java,738,,"		assertEquals(""PASS"", widget.getChild(""preference"").getAttributeValue(""name""));"
254518,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/conformance/PackagingAndConfiguration.java,739,,"		assertEquals(""PASS"", widget.getChild(""preference"").getAttributeValue(""value"")); "
254519,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/conformance/PackagingAndConfiguration.java,740,,"		assertEquals(""false"", widget.getChild(""preference"").getAttributeValue(""readonly""));"
254520,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/conformance/PackagingAndConfiguration.java,740,,"		assertEquals(""false"", widget.getChild(""preference"").getAttributeValue(""readonly""));"
254521,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/conformance/PackagingAndConfiguration.java,829,,"		assertEquals(""pass.html"",start);"
254522,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/conformance/PackagingAndConfiguration.java,894,,"		System.out.println(""Manual test: charset for start file of ""+widget.getAttributeValue(""id"")+"" must be ISO-8859-1"");"
254523,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/conformance/PackagingAndConfiguration.java,947,,"		System.out.println(""Manual test:""+widget.getAttributeValue(""id"")+"":the feature feature:a9bb79c1 must not have any params associated with it."");"
254524,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/conformance/PackagingAndConfiguration.java,1125,,"		assertTrue((icon1.equals(""locales/en/icon.jpg"") && (icon2.equals(""icon.png""))) || (icon2.equals(""locales/en/icon.jpg"") && (icon1.equals(""icon.png""))));"
254525,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/FolderLocalizationTest.java,60,,"		Request post = new Request(""POST"", TEST_WIDGETS_SERVICE_URL_VALID);"
254526,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/FolderLocalizationTest.java,86,,"		post.addParameter(""api_key"", API_KEY_VALID);"
254527,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/FolderLocalizationTest.java,87,,"		post.addParameter(""widgetid"", WIDGET_ID_LOCALIZED);"
254528,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/FolderLocalizationTest.java,88,,"		post.addParameter(""userid"", ""foldertest1"");"
254529,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/FolderLocalizationTest.java,88,,"		post.addParameter(""userid"", ""foldertest1"");"
254530,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/FolderLocalizationTest.java,89,,"		post.addParameter(""shareddatakey"", ""foldertest1"");"
254531,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/FolderLocalizationTest.java,159,,"		String resource = ""index.htm"";"
254532,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/ParticipantsControllerTest.java,41,,"		Request post = new Request(""POST"", TEST_INSTANCES_SERVICE_URL_VALID);"
254533,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/ParticipantsControllerTest.java,42,,"		post.addParameter(""api_key"", API_KEY_VALID);"
254534,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/ParticipantsControllerTest.java,43,,"		post.addParameter(""widgetid"", WIDGET_ID_VALID);"
254535,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/ParticipantsControllerTest.java,44,,"		post.addParameter(""userid"", ""test"");"
254536,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/ParticipantsControllerTest.java,44,,"		post.addParameter(""userid"", ""test"");"
254537,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/ParticipantsControllerTest.java,45,,"		post.addParameter(""shareddatakey"", ""participantstest"");"
254538,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/ParticipantsControllerTest.java,45,,"		post.addParameter(""shareddatakey"", ""participantstest"");"
254539,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/ParticipantsControllerTest.java,56,,"		Request delete = new Request(""DELETE"", TEST_PARTICIPANTS_SERVICE_URL_VALID);"
254540,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/ParticipantsControllerTest.java,61,,"		delete.addParameter(""participant_id"", ""80"");"
254541,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/ParticipantsControllerTest.java,86,,"		post.addParameter(""participant_display_name"", ""bob"");"
254542,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/ParticipantsControllerTest.java,86,,"		post.addParameter(""participant_display_name"", ""bob"");"
254543,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/ParticipantsControllerTest.java,87,,"		post.addParameter(""participant_thumbnail_url"", ""http://www.test.org"");"
254544,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/ParticipantsControllerTest.java,87,,"		post.addParameter(""participant_thumbnail_url"", ""http://www.test.org"");"
254545,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/ParticipantsControllerTest.java,96,,"		Request get = new Request(""GET"", TEST_PARTICIPANTS_SERVICE_URL_VALID);"
254546,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/PoliciesControllerTest.java,54,,"		Request post = new Request(""POST"", TEST_POLICIES_SERVICE_URL_VALID);"
254547,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/PoliciesControllerTest.java,55,,"		StringRequestEntity entity = new StringRequestEntity(POLICY_TEST_VALID, ""text/plain"", ""UTF-8"");"
254548,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/PoliciesControllerTest.java,55,,"		StringRequestEntity entity = new StringRequestEntity(POLICY_TEST_VALID, ""text/plain"", ""UTF-8"");"
254549,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/PoliciesControllerTest.java,63,,"		Request delete = new Request(""DELETE"", TEST_POLICIES_SERVICE_URL_VALID + ""/"" + encodeString(POLICY_TEST_VALID_2));"
254550,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/PoliciesControllerTest.java,70,,"		Request get = new Request(""GET"", TEST_POLICIES_SERVICE_URL_VALID);"
254551,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/PoliciesControllerTest.java,71,,"		get.setAccepts(""text/xml"");"
254552,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/PropertiesControllerTest.java,43,,"		Request post = new Request(""POST"", TEST_INSTANCES_SERVICE_URL_VALID);"
254553,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/PropertiesControllerTest.java,44,,"		post.addParameter(""api_key"", API_KEY_VALID);"
254554,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/PropertiesControllerTest.java,45,,"		post.addParameter(""widgetid"", WIDGET_ID_VALID);"
254555,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/PropertiesControllerTest.java,46,,"		post.addParameter(""userid"", ""test"");"
254556,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/PropertiesControllerTest.java,46,,"		post.addParameter(""userid"", ""test"");"
254557,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/PropertiesControllerTest.java,47,,"		post.addParameter(""shareddatakey"", ""propstest"");"
254558,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/PropertiesControllerTest.java,47,,"		post.addParameter(""shareddatakey"", ""propstest"");"
254559,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/PropertiesControllerTest.java,74,,"		pref.put(""name"", ""testpost"");"
254560,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/PropertiesControllerTest.java,75,,"		pref.put(""value"", ""pass"");"
254561,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/PropertiesControllerTest.java,81,,"		StringRequestEntity entity = new StringRequestEntity(json.toString(), ""application/json"", ""UTF-8"");"
254562,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/PropertiesControllerTest.java,81,,"		StringRequestEntity entity = new StringRequestEntity(json.toString(), ""application/json"", ""UTF-8"");"
254563,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/PropertiesControllerTest.java,90,,"		Request get = new Request(""GET"", TEST_PROPERTIES_SERVICE_URL_VALID);"
254564,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/PropertiesControllerTest.java,95,,"		get.addParameter(""propertyname"", ""testpost"");"
254565,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/PropertiesControllerTest.java,190,,"		data.put(""name"", ""cat"");"
254566,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/PropertiesControllerTest.java,191,,"		data.put(""value"", ""garfield"");"
254567,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/PropertiesControllerTest.java,195,,"		json.put(""shareddata"", set);		"
254568,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/ProxyTest.java,89,,"		Request post = new Request(""POST"", TEST_INSTANCES_SERVICE_URL_VALID);"
254569,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/ProxyTest.java,145,,"		String url = PROXY_URL+""?instanceid_key=""+instance_id_key+""&url=""+VALID_SITE_URL;"
254570,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/ProxyTest.java,145,,"		String url = PROXY_URL+""?instanceid_key=""+instance_id_key+""&url=""+VALID_SITE_URL;"
254571,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/ProxyTest.java,146,,"		assertEquals(200,send(url,""GET""));"
254572,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/ProxyTest.java,306,,"		req.addParameter(""username"", ""java"");"
254573,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/ProxyTest.java,479,,"		assertEquals(""test=wookie"", header);"
254574,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/WidgetInstancesControllerTest.java,53,,"		Request post = new Request(""POST"", TEST_WIDGETS_SERVICE_URL_VALID);"
254575,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/WidgetInstancesControllerTest.java,100,,"		delete = new Request(""DELETE"", TEST_INSTANCES_SERVICE_URL_VALID + ""?api_key="" + API_KEY_VALID + ""&widgetid="""
254576,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/WidgetInstancesControllerTest.java,128,,"		post.addParameter(""api_key"", API_KEY_VALID);"
254577,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/WidgetInstancesControllerTest.java,129,,"		post.addParameter(""widgetid"", WIDGET_ID_LOCALIZED);"
254578,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/WidgetInstancesControllerTest.java,130,,"		post.addParameter(""userid"", ""localetest"");"
254579,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/WidgetInstancesControllerTest.java,130,,"		post.addParameter(""userid"", ""localetest"");"
254580,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/WidgetInstancesControllerTest.java,131,,"		post.addParameter(""shareddatakey"", ""localetest"");"
254581,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/WidgetInstancesControllerTest.java,132,,"		post.addParameter(""locale"", ""fr"");"
254582,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/WidgetInstancesControllerTest.java,136,,"		assertTrue(post.getResponseBodyAsString().contains(""locales/fr/index.htm""));"
254583,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/WidgetInstancesControllerTest.java,138,,"		""tester les param&#232;tres r&#233;gionaux""));"
254584,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/WidgetInstancesControllerTest.java,154,,"		Request get = new Request(""GET"", TEST_INSTANCES_SERVICE_URL_VALID);"
254585,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/WidgetInstancesControllerTest.java,292,,"		post.addParameter(""userid"", ""test"");"
254586,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/WidgetsControllerTest.java,65,,"		Request delete = new Request(""DELETE"",TEST_WIDGETS_SERVICE_URL_VALID + encodeString(""/"" + WIDGET_ID_ACCESS_TEST));"
254587,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/WidgetsControllerTest.java,176,,"		Request post = new Request(""POST"", TEST_WIDGETS_SERVICE_URL_VALID);"
254588,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/WidgetsControllerTest.java,181,,"		File file = new File(""src/test/resources/upload-test.wgt"");"
254589,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/WidgetsControllerTest.java,241,,"		Request get = new Request(""GET"", TEST_POLICIES_SERVICE_URL_VALID + ""/"" + WIDGET_ID_UPLOAD_POLICIES_TEST);"
254590,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/WidgetsControllerTest.java,293,,"		assertEquals(""http://localhost:8080/wookie/deploy/uploadtest_2/icon.png"", iconElement.getAttributeValue(""src"")); "
254591,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/WidgetsControllerTest.java,441,,"		File outputDir = new File(""src/test"" + File.separatorChar + ""resources"" + File.separatorChar + ""widgets"");"
254592,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/WidgetsControllerTest.java,441,,"		File outputDir = new File(""src/test"" + File.separatorChar + ""resources"" + File.separatorChar + ""widgets"");"
254593,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/functional/WidgetsControllerTest.java,766,,"		File downloadedFile = new File(""src""+ File.separatorChar + ""test"" + File.separatorChar + ""resources"" + File.separatorChar + ""downloadedWeatherWidget.zip"");"
254594,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/helpers/NanoHTTPD.java,434,,"						while ( read >= 0 && !postLine.endsWith(""\r\n"") )"
254595,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/integration/SharedDataManagementTest.java,96,,"    post.setQueryString(""api_key="" + API_KEY_ONE + ""&widgetid="""
254596,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/integration/SharedDataManagementTest.java,96,,"    post.setQueryString(""api_key="" + API_KEY_ONE + ""&widgetid="""
254597,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/proxy/PoliciesTest.java,62,,"    assertTrue(Policies.getInstance().validate(""http://abc.apache.org"", ""http://incubator.apache.org/wookie/widgets/test""));"
254598,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/proxy/PoliciesTest.java,72,,"    assertFalse(Policies.getInstance().validate(""http://test.com:9001"", ""http://incubator.apache.org/wookie/widgets/test2""));"
254599,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/proxy/PoliciesTest.java,97,,"    assertTrue(Policies.getInstance().validate(""http://zzz.apache.org"", ""http://incubator.apache.org/wookie/widgets/test""));"
254600,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/proxy/PoliciesTest.java,134,,"    assertTrue(Policies.getInstance().validate(""http://temp.org"", ""http://incubator.apache.org/wookie/widgets/test""));"
254601,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/proxy/PolicyTest.java,99,,"    Policy policy = new Policy(""* http://test.apache.org ALLOW"");"
254602,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/server/security/ApiKeysTest.java,68,,"    ApiKeys.getInstance().addKey(""KEYS_TEST_2"", ""test2@apache.org"");"
254603,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/server/security/HmacTest.java,35,,"		request.addHeader(""Host"", ""wookie.apache.org"");"
254604,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/server/security/HmacTest.java,35,,"		request.addHeader(""Host"", ""wookie.apache.org"");"
254605,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/server/security/HmacTest.java,37,,"		request.setMethod(""POST"");"
254606,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/server/security/HmacTest.java,38,,"		request.addParameter(""test"", ""test-value"");"
254607,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/server/security/HmacTest.java,38,,"		request.addParameter(""test"", ""test-value"");"
254608,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/server/security/HmacTest.java,39,,"		request.addParameter(""timestamp"", Hmac.getFormattedDate(new Date(System.currentTimeMillis())));"
254609,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/server/security/HmacTest.java,40,,"		request.addParameter(""nonce"", new RandomGUID().toString());"
254610,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/server/security/HmacTest.java,43,,"		String signature = Hmac.getHmac(reqString, ""test@127.0.0.1"");"
254611,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/server/security/HmacTest.java,44,,"		request.addHeader(""Authorization"", ""TEST ""+signature);"
254612,./TargetProjects/wookie/wookie-server/src/test/java/org/apache/wookie/tests/server/security/HmacTest.java,44,,"		request.addHeader(""Authorization"", ""TEST ""+signature);"
254613,./TargetProjects/wookie/wookie-services/wookie-jpa/src/main/java/org/apache/wookie/beans/jpa/JPAPersistenceManager.java,142,,"        DB_TYPE_TO_JPA_DICTIONARY_MAP.put(""oracle"", ""oracle"");"
254614,./TargetProjects/wookie/wookie-services/wookie-jpa/src/main/java/org/apache/wookie/beans/jpa/JPAPersistenceManager.java,309,,"            throw new IllegalStateException(""Transaction not initiated or already closed"");"
254615,./TargetProjects/wookie/wookie-services/wookie-jpa/src/main/java/org/apache/wookie/beans/jpa/JPAPersistenceManager.java,372,,"            logger.error(""Unexpected exception: ""+e, e);"
254616,./TargetProjects/wookie/wookie-services/wookie-jpa/src/main/java/org/apache/wookie/beans/jpa/JPAPersistenceManager.java,407,,"    @SuppressWarnings(""unchecked"")"
254617,./TargetProjects/wookie/wookie-services/wookie-jpa/src/main/java/org/apache/wookie/beans/jpa/JPAPersistenceManager.java,420,,"            throw new IllegalArgumentException(""Invalid bean interface specified"");            "
254618,./TargetProjects/wookie/wookie-services/wookie-jpa/src/main/java/org/apache/wookie/beans/jpa/impl/WidgetImpl.java,88,,"    @JoinColumn(name=""widget_id"")"
254619,./TargetProjects/wookie/wookie-services/wookie-jpa/src/main/java/org/apache/wookie/beans/jpa/impl/WidgetImpl.java,122,,"    @SuppressWarnings({ ""unchecked"", ""rawtypes"" })"
254620,./TargetProjects/wookie/wookie-services/wookie-jpa/src/main/java/org/apache/wookie/beans/jpa/impl/WidgetImpl.java,122,,"    @SuppressWarnings({ ""unchecked"", ""rawtypes"" })"
254621,./TargetProjects/wookie/wookie-services/wookie-jpa/src/main/java/org/apache/wookie/beans/jpa/impl/WidgetInstanceImpl.java,95,,"    @ExternalValues({""true=t"",""false=f"",""null=""})"
254622,./TargetProjects/wookie/wookie-services/wookie-jpa/src/main/java/org/apache/wookie/beans/jpa/impl/WidgetInstanceImpl.java,95,,"    @ExternalValues({""true=t"",""false=f"",""null=""})"
254623,./TargetProjects/wookie/wookie-services/wookie-jpa/src/main/java/org/apache/wookie/beans/jpa/impl/WidgetInstanceImpl.java,95,,"    @ExternalValues({""true=t"",""false=f"",""null=""})"
254624,./TargetProjects/wookie/wookie-services/wookie-redis/src/main/java/org/apache/wookie/services/redis/RedisSharedContextService.java,504,,"		json.put(""name"", data.getDkey());"
254625,./TargetProjects/wookie/wookie-services/wookie-spi/src/test/java/org/apache/wookie/services/AbstractPreferencesServiceTest.java,32,,"		svc.removePreferences(""test-api"", ""test-widget"", ""test-context"", ""test-viewer"");"
254626,./TargetProjects/wookie/wookie-services/wookie-spi/src/test/java/org/apache/wookie/services/AbstractPreferencesServiceTest.java,32,,"		svc.removePreferences(""test-api"", ""test-widget"", ""test-context"", ""test-viewer"");"
254627,./TargetProjects/wookie/wookie-services/wookie-spi/src/test/java/org/apache/wookie/services/AbstractPreferencesServiceTest.java,32,,"		svc.removePreferences(""test-api"", ""test-widget"", ""test-context"", ""test-viewer"");"
254628,./TargetProjects/wookie/wookie-services/wookie-spi/src/test/java/org/apache/wookie/services/AbstractPreferencesServiceTest.java,32,,"		svc.removePreferences(""test-api"", ""test-widget"", ""test-context"", ""test-viewer"");"
254629,./TargetProjects/wookie/wookie-services/wookie-spi/src/test/java/org/apache/wookie/services/AbstractPreferencesServiceTest.java,43,,"		svc.setPreference(""test-api"", ""test-widget"", ""test-context"", ""test-viewer"", ""test"", ""test"");"
254630,./TargetProjects/wookie/wookie-services/wookie-spi/src/test/java/org/apache/wookie/services/AbstractPreferencesServiceTest.java,60,,"		svc.setPreference(""test-api"", ""test-widget"", ""test-context"", ""test-viewer"", ""test"", ""test-value"", true);"
254631,./TargetProjects/wookie/wookie-services/wookie-spi/src/test/java/org/apache/wookie/services/AbstractPreferencesServiceTest.java,94,,"		IPreference preference2 = new DefaultPreferenceImpl(""test-name2"", ""test-value2"", false);"
254632,./TargetProjects/wookie/wookie-services/wookie-spi/src/test/java/org/apache/wookie/services/AbstractPreferencesServiceTest.java,94,,"		IPreference preference2 = new DefaultPreferenceImpl(""test-name2"", ""test-value2"", false);"
254633,./TargetProjects/wookie/wookie-services/wookie-spi/src/test/java/org/apache/wookie/services/AbstractPreferencesServiceTest.java,153,,"		IPreference preference = new DefaultPreferenceImpl(""test-name"", ""test-value"", false);"
254634,./TargetProjects/wookie/wookie-services/wookie-spi/src/test/java/org/apache/wookie/services/AbstractPreferencesServiceTest.java,189,,"		svc.setPreference(""test-api"", ""test-widget"", ""test-context"", ""test-viewer"", ""test-reset"", ""1"");"
254635,./TargetProjects/wookie/wookie-services/wookie-spi/src/test/java/org/apache/wookie/services/AbstractSharedContextServiceTest.java,38,,"		svc.removeSharedData(API_KEY, WIDGET_ID, CONTEXT_ID, ""test-name"");"
254636,./TargetProjects/wookie/wookie-services/wookie-spi/src/test/java/org/apache/wookie/services/AbstractSharedContextServiceTest.java,40,,"		svc.removeParticipant(API_KEY, WIDGET_ID, CONTEXT_ID, ""alice"");"
254637,./TargetProjects/wookie/wookie-services/wookie-spi/src/test/java/org/apache/wookie/services/AbstractSharedContextServiceTest.java,46,,"		svc.updateSharedData(API_KEY, WIDGET_ID, CONTEXT_ID, ""test-name"", ""test-value"", false);"
254638,./TargetProjects/wookie/wookie-services/wookie-spi/src/test/java/org/apache/wookie/services/AbstractSharedContextServiceTest.java,171,,"		assertTrue(svc.addParticipant(API_KEY, WIDGET_ID, CONTEXT_ID, ""alice"", ""Alice"", ""http://some.url""));"
254639,./TargetProjects/wookie/wookie-services/wookie-spi/src/test/java/org/apache/wookie/services/AbstractSharedContextServiceTest.java,171,,"		assertTrue(svc.addParticipant(API_KEY, WIDGET_ID, CONTEXT_ID, ""alice"", ""Alice"", ""http://some.url""));"
254640,./TargetProjects/wookie/wookie-services/wookie-spi/src/test/java/org/apache/wookie/services/AbstractSharedContextServiceTest.java,180,,"		assertTrue(svc.addParticipant(API_KEY, WIDGET_ID, CONTEXT_ID, ""bob"", ""Bob"", ""http://some.url""));"
254641,./TargetProjects/wookie/wookie-services/wookie-spi/src/test/java/org/apache/wookie/services/AbstractSharedContextServiceTest.java,180,,"		assertTrue(svc.addParticipant(API_KEY, WIDGET_ID, CONTEXT_ID, ""bob"", ""Bob"", ""http://some.url""));"
254642,./TargetProjects/wookie/wookie-services/wookie-spi/src/test/java/org/apache/wookie/services/AbstractWorkflowServiceTest.java,26,,"		svc.lock(""test-api"", ""test-widget"", ""test-context"");"
254643,./TargetProjects/wookie/wookie-services/wookie-spi/src/test/java/org/apache/wookie/services/AbstractWorkflowServiceTest.java,26,,"		svc.lock(""test-api"", ""test-widget"", ""test-context"");"
254644,./TargetProjects/wookie/wookie-services/wookie-spi/src/test/java/org/apache/wookie/services/AbstractWorkflowServiceTest.java,26,,"		svc.lock(""test-api"", ""test-widget"", ""test-context"");"
254645,./TargetProjects/ws-axiom/axiom-api/src/main/java/org/apache/axiom/locator/ImplementationFactory.java,134,,"            log.error(""Encountered "" + QNAME_IMPLEMENTATION + "" element without name attribute"");"
254646,./TargetProjects/ws-axiom/axiom-api/src/main/java/org/apache/axiom/mime/MediaType.java,42,,"    public static final MediaType APPLICATION_XML = new MediaType(""application"", ""xml"");"
254647,./TargetProjects/ws-axiom/axiom-api/src/main/java/org/apache/axiom/om/util/DigestGenerator.java,118,,"            dos.write(getExpandedName(element).getBytes(""UnicodeBigUnmarked""));"
254648,./TargetProjects/ws-axiom/axiom-api/src/main/java/org/apache/axiom/om/util/StAXUtils.java,154,,"            log.debug(""XMLStreamReader is "" + reader.getClass().getName());"
254649,./TargetProjects/ws-axiom/axiom-api/src/main/java/org/apache/axiom/util/stax/wrapper/ImmutableXMLInputFactory.java,44,,"        throw new IllegalStateException(""This factory is immutable"");"
254650,./TargetProjects/ws-axiom/axiom-api/src/test/java/org/apache/axiom/attachments/AttachmentsTest.java,79,,"                .getDataHandler(""2.urn:uuid:A3ADBAEE51A1A87B2A11443668160994@apache.org"");"
254651,./TargetProjects/ws-axiom/axiom-api/src/test/java/org/apache/axiom/attachments/AttachmentsTest.java,98,,"        attachments.addDataHandler(""id@apache.org"", new DataHandler(""test"", ""text/plain""));"
254652,./TargetProjects/ws-axiom/axiom-api/src/test/java/org/apache/axiom/attachments/AttachmentsTest.java,109,,"        assertEquals(""1.urn:uuid:A3ADBAEE51A1A87B2A11443668160943@apache.org"", contentIDs[1]);"
254653,./TargetProjects/ws-axiom/axiom-api/src/test/java/org/apache/axiom/attachments/AttachmentsTest.java,174,,"        MimeMultipart mp = new MimeMultipart(""related"");"
254654,./TargetProjects/ws-axiom/axiom-api/src/test/java/org/apache/axiom/attachments/AttachmentsTest.java,176,,"        rootPart.setDataHandler(new DataHandler(new TextDataSource(""<root/>"", ""utf-8"", ""xml"")));"
254655,./TargetProjects/ws-axiom/axiom-api/src/test/java/org/apache/axiom/attachments/AttachmentsTest.java,176,,"        rootPart.setDataHandler(new DataHandler(new TextDataSource(""<root/>"", ""utf-8"", ""xml"")));"
254656,./TargetProjects/ws-axiom/axiom-api/src/test/java/org/apache/axiom/attachments/AttachmentsTest.java,176,,"        rootPart.setDataHandler(new DataHandler(new TextDataSource(""<root/>"", ""utf-8"", ""xml"")));"
254657,./TargetProjects/ws-axiom/axiom-api/src/test/java/org/apache/axiom/attachments/AttachmentsTest.java,177,,"        rootPart.addHeader(""Content-Transfer-Encoding"", ""binary"");"
254658,./TargetProjects/ws-axiom/axiom-api/src/test/java/org/apache/axiom/attachments/AttachmentsTest.java,177,,"        rootPart.addHeader(""Content-Transfer-Encoding"", ""binary"");"
254659,./TargetProjects/ws-axiom/axiom-api/src/test/java/org/apache/axiom/attachments/AttachmentsTest.java,178,,"        rootPart.addHeader(""Content-ID"", ""<"" + contentId + "">"");"
254660,./TargetProjects/ws-axiom/axiom-api/src/test/java/org/apache/axiom/attachments/AttachmentsTest.java,199,,"        testGetRootPartContentID(""my-content-id@localhost"", ""my-content-id@localhost"");"
254661,./TargetProjects/ws-axiom/axiom-api/src/test/java/org/apache/axiom/attachments/AttachmentsTest.java,459,,"        bp2.addHeader(""Content-ID"", ""part2@apache.org"");"
254662,./TargetProjects/ws-axiom/axiom-api/src/test/java/org/apache/axiom/blob/suite/TestWriteAfterCommit.java,40,,"            fail(""Expected exception"");"
254663,./TargetProjects/ws-axiom/axiom-api/src/test/java/org/apache/axiom/mime/ContentTypeBuilderTest.java,27,,"                .setParameter(""charset"", ""utf-8"")"
254664,./TargetProjects/ws-axiom/axiom-api/src/test/java/org/apache/axiom/mime/ContentTypeBuilderTest.java,27,,"                .setParameter(""charset"", ""utf-8"")"
254665,./TargetProjects/ws-axiom/axiom-api/src/test/java/org/apache/axiom/mime/ContentTypeTest.java,29,,"        String[] parameters = { ""charset"", ""utf-8"" };"
254666,./TargetProjects/ws-axiom/axiom-api/src/test/java/org/apache/axiom/mime/ContentTypeTest.java,29,,"        String[] parameters = { ""charset"", ""utf-8"" };"
254667,./TargetProjects/ws-axiom/axiom-api/src/test/java/org/apache/axiom/mime/ContentTypeTest.java,77,,"            fail(""Expected ParseException"");"
254668,./TargetProjects/ws-axiom/axiom-api/src/test/java/org/apache/axiom/mime/MediaTypeTest.java,29,,"        MediaType mt = new MediaType(""text"", ""xml"");"
254669,./TargetProjects/ws-axiom/axiom-api/src/test/java/org/apache/axiom/mime/MediaTypeTest.java,29,,"        MediaType mt = new MediaType(""text"", ""xml"");"
254670,./TargetProjects/ws-axiom/axiom-api/src/test/java/org/apache/axiom/mime/MediaTypeTest.java,38,,"        MediaType mt4 = new MediaType(""application"", ""xml"");"
254671,./TargetProjects/ws-axiom/axiom-api/src/test/java/org/apache/axiom/util/base64/Base64UtilsTest.java,43,,"            fail(""Expected IllegalArgumentException"");"
254672,./TargetProjects/ws-axiom/axiom-api/src/test/java/org/apache/axiom/util/namespace/ScopedNamespaceContextTest.java,46,,"        nc.setPrefix("""", ""urn:ns1"");"
254673,./TargetProjects/ws-axiom/axiom-api/src/test/java/org/apache/axiom/util/namespace/ScopedNamespaceContextTest.java,47,,"        nc.setPrefix(""a"", ""urn:ns2"");"
254674,./TargetProjects/ws-axiom/axiom-api/src/test/java/org/apache/axiom/util/namespace/ScopedNamespaceContextTest.java,48,,"        nc.setPrefix(""b"", ""urn:ns3"");"
254675,./TargetProjects/ws-axiom/axiom-api/src/test/java/org/apache/axiom/util/namespace/ScopedNamespaceContextTest.java,73,,"        nc.setPrefix(""ns1"", ""urn:ns1"");"
254676,./TargetProjects/ws-axiom/axiom-api/src/test/java/org/apache/axiom/util/namespace/ScopedNamespaceContextTest.java,77,,"        nc.setPrefix(""ns2"", ""urn:ns2"");"
254677,./TargetProjects/ws-axiom/axiom-api/src/test/java/org/apache/axiom/util/namespace/ScopedNamespaceContextTest.java,81,,"        nc.setPrefix(""ns3"", ""urn:ns3"");"
254678,./TargetProjects/ws-axiom/axiom-compat/src/main/java/org/apache/axiom/om/ds/InputStreamDataSource.java,68,,"            throw new OMException(""The InputStreamDataSource does not have a backing object"");"
254679,./TargetProjects/ws-axiom/axiom-compat/src/test/java/org/apache/axiom/mime/ContentTypeBuilderTest.java,26,,"        builder.setParameter(""charset"", ""utf-8"");"
254680,./TargetProjects/ws-axiom/axiom-compat/src/test/java/org/apache/axiom/mime/ContentTypeBuilderTest.java,26,,"        builder.setParameter(""charset"", ""utf-8"");"
254681,./TargetProjects/ws-axiom/axiom-compat/src/test/java/org/apache/axiom/om/ds/ParserInputStreamDataSourceTests.java,53,,"	""<invokeOp>Hello Provider OM</invokeOp>""+"
254682,./TargetProjects/ws-axiom/axiom-compat/src/test/java/org/apache/axiom/om/ds/ParserInputStreamDataSourceTests.java,107,,"		byte[] bytes = peds.getXMLBytes(""UTF-8"");"
254683,./TargetProjects/ws-axiom/axiom-compat/src/test/java/org/apache/axiom/om/impl/traverse/OMChildrenWithSpecificAttributeIteratorTest.java,41,,"                new QName(testNamespace.getNamespaceURI(), ""myAttr"","
254684,./TargetProjects/ws-axiom/axiom-compat/src/test/java/org/apache/axiom/om/util/OMAttributeHelperTest.java,36,,"        OMNamespace ns1 = omf.createOMNamespace(""http://nsurl"", ""prefix"");"
254685,./TargetProjects/ws-axiom/axiom-compat/src/test/java/org/apache/axiom/om/util/OMAttributeHelperTest.java,36,,"        OMNamespace ns1 = omf.createOMNamespace(""http://nsurl"", ""prefix"");"
254686,./TargetProjects/ws-axiom/axiom-compat/src/test/java/org/apache/axiom/om/util/OMAttributeHelperTest.java,40,,"        OMElement ome1 = doomf.createOMElement(""element"", ns1.getNamespaceURI(), ns1.getPrefix());"
254687,./TargetProjects/ws-axiom/components/core-streams/src/main/java/org/apache/axiom/core/stream/serializer/Serializer.java,294,,"                writer.write("" PUBLIC \"""");"
254688,./TargetProjects/ws-axiom/components/core-streams/src/main/java/org/apache/axiom/core/stream/serializer/Serializer.java,297,,"                writer.write("" SYSTEM \"""");"
254689,./TargetProjects/ws-axiom/components/core-streams/src/test/java/org/apache/axiom/core/stream/serializer/SerializerTest.java,37,,"        handler.startElement("""", ""test"", """");"
254690,./TargetProjects/ws-axiom/components/core-streams/src/test/java/org/apache/axiom/core/stream/serializer/SerializerTest.java,65,,"        Serializer handler = new Serializer(baos, ""ascii"");"
254691,./TargetProjects/ws-axiom/components/core-streams/src/test/java/org/apache/axiom/core/stream/stax/pull/StAXPivotTest.java,37,,"        Element element = document.createElementNS(""urn:test"", ""p:test"");"
254692,./TargetProjects/ws-axiom/components/core-streams/src/test/java/org/apache/axiom/core/stream/stax/pull/StAXPivotTest.java,48,,"        pivot.require(XMLStreamConstants.START_ELEMENT, ""urn:test"", ""test"");"
254693,./TargetProjects/ws-axiom/components/xml-utils/src/test/java/org/apache/axiom/util/xml/QNameMapTest.java,31,,"        map.put(new QName(null, ""name""), ""value"");"
254694,./TargetProjects/ws-axiom/components/xml-utils/src/test/java/org/apache/axiom/util/xml/QNameMapTest.java,37,,"        new QNameMap<Object>().get(""urn:test"", null);"
254695,./TargetProjects/ws-axiom/components/xml-utils/src/test/java/org/apache/axiom/util/xml/QNameMapTest.java,44,,"        map.put(new QName(""urn:test"", ""name""), ""value2"");"
254696,./TargetProjects/ws-axiom/systests/old-tests/src/test/java/org/apache/axiom/om/OMBodyTest.java,46,,"        OMElement om1 = soapFactory.createOMElement(""child1"", ""http://myChild"", ""pre"");"
254697,./TargetProjects/ws-axiom/systests/old-tests/src/test/java/org/apache/axiom/om/impl/serializer/ElementSerializerTest.java,92,,"        OMNamespace ns1 = factory.createOMNamespace(""bar"", ""x"");"
254698,./TargetProjects/ws-axiom/systests/old-tests/src/test/java/org/apache/axiom/soap/impl/llom/CharacterEncoding2Test.java,54,,"        ByteArrayInputStream byteInStr = new ByteArrayInputStream(xml.getBytes(""iso-8859-1""));"
254699,./TargetProjects/ws-axiom/systests/old-tests/src/test/java/org/apache/axiom/soap/impl/llom/OMElementTest.java,90,,"        OMElement llomRoot = llomFactory.createOMElement(""root"", null);"
254700,./TargetProjects/ws-axiom/systests/old-tests/src/test/java/org/apache/axiom/util/stax/WrappedTextNodeStreamReaderTest.java,56,,"                new QName(""urn:test"", ""test""),"
254701,./TargetProjects/ws-axiom/systests/old-tests/src/test/java/org/apache/axiom/util/stax/WrappedTextNodeStreamReaderTest.java,56,,"                new QName(""urn:test"", ""test""),"
254702,./TargetProjects/ws-axiom/systests/old-tests/src/test/java/org/apache/axiom/util/stax/WrappedTextNodeStreamReaderTest.java,57,,"                ""This is a test string for WrappedTextNodeStreamReader"","
254703,./TargetProjects/ws-axiom/testing/axiom-testsuite/src/main/java/org/apache/axiom/ts/om/OMTestSuiteBuilder.java,55,,"        new QName(""urn:test"", ""root"", ""p""),"
254704,./TargetProjects/ws-axiom/testing/axiom-testsuite/src/main/java/org/apache/axiom/ts/om/builder/DummyXMLReader.java,44,,"        contentHandler.startElement("""", ""test"", ""test"", new AttributesImpl());"
254705,./TargetProjects/ws-axiom/testing/axiom-testsuite/src/main/java/org/apache/axiom/ts/om/element/TestAddAttributeAlreadyOwnedByOtherElement.java,41,,"        OMElement element1 = factory.createOMElement(new QName(""test""));"
254706,./TargetProjects/ws-axiom/testing/axiom-testsuite/src/main/java/org/apache/axiom/ts/om/element/TestAddAttributeWithExistingNamespaceDeclarationInScope.java,48,,"        OMElement root = factory.createOMElement(new QName(""test""));"
254707,./TargetProjects/ws-axiom/testing/axiom-testsuite/src/main/java/org/apache/axiom/ts/om/element/TestGetChildrenWithName4.java,49,,"        factory.createOMElement(""sample"", a, documentElement);"
254708,./TargetProjects/ws-axiom/testing/axiom-testsuite/src/main/java/org/apache/axiom/ts/om/element/TestGetNamespaceContext.java,52,,"        assertEquals(""urn:test3"", context.getNamespaceURI(""q""));"
254709,./TargetProjects/ws-axiom/testing/axiom-testsuite/src/main/java/org/apache/axiom/ts/om/element/TestGetSAXResultWithDTD.java,49,,"        lexicalHandler.startDTD(""test"", null, ""my.dtd"");"
254710,./TargetProjects/ws-axiom/testing/axiom-testsuite/src/main/java/org/apache/axiom/ts/om/element/TestSetTextWithExistingChildren.java,40,,"        OMElement element = factory.createOMElement(""test"", null);"
254711,./TargetProjects/ws-axiom/testing/axiom-testsuite/src/main/java/org/apache/axiom/ts/om/namespace/TestEquals.java,38,,"        OMNamespace ns = factory.createOMNamespace(""http://www.w3.org/XML/1998/namespace"", ""xml"");"
254712,./TargetProjects/ws-axiom/testing/axiom-testsuite/src/main/java/org/apache/axiom/ts/om/namespace/TestEquals.java,38,,"        OMNamespace ns = factory.createOMNamespace(""http://www.w3.org/XML/1998/namespace"", ""xml"");"
254713,./TargetProjects/ws-axiom/testing/axiom-testsuite/src/main/java/org/apache/axiom/ts/om/sourcedelement/TestName1DefaultPrefix.java,47,,"                f.createOMNamespace(""http://www.sosnoski.com/uwjws/library"", null);"
254714,./TargetProjects/ws-axiom/testing/axiom-testsuite/src/main/java/org/apache/axiom/ts/om/sourcedelement/TestName1DefaultPrefix.java,49,,"                f.createOMElement(new PullOMDataSource(TestDocument.DOCUMENT1.getContent()), ""library"", ns);"
254715,./TargetProjects/ws-axiom/testing/axiom-testsuite/src/main/java/org/apache/axiom/ts/om/sourcedelement/TestName1QualifiedPrefix.java,46,,"        OMNamespace ns = f.createOMNamespace(""http://www.sosnoski.com/uwjws/library"", null);"
254716,./TargetProjects/ws-axiom/testing/axiom-testsuite/src/main/java/org/apache/axiom/ts/om/sourcedelement/TestName1QualifiedPrefix.java,48,,"                f.createOMElement(new PullOMDataSource(TestDocument.DOCUMENT2.getContent()), ""library"", ns);"
254717,./TargetProjects/ws-axiom/testing/axiom-testsuite/src/main/java/org/apache/axiom/ts/om/sourcedelement/TestName1Unqualified.java,48,,"                f.createOMElement(new PullOMDataSource(TestDocument.DOCUMENT3.getContent()), ""library"", ns);"
254718,./TargetProjects/ws-axiom/testing/axiom-testsuite/src/main/java/org/apache/axiom/ts/om/sourcedelement/TestName2DefaultPrefix.java,47,,"                f.createOMNamespace(""http://www.sosnoski.com/uwjws/library"", ""DUMMYPREFIX"");"
254719,./TargetProjects/ws-axiom/testing/axiom-testsuite/src/main/java/org/apache/axiom/ts/om/sourcedelement/TestSerializeModifiedOMSEWithNonDestructiveDataSource.java,44,,"        element.getFirstElement().setText(""TEST"");"
254720,./TargetProjects/ws-axiom/testing/axiom-testsuite/src/main/java/org/apache/axiom/ts/om/sourcedelement/TestSetDataSource.java,67,,"        assertTrue(""The payload was not present in the output"","
254721,./TargetProjects/ws-axiom/testing/axiom-testsuite/src/main/java/org/apache/axiom/ts/om/sourcedelement/push/WriteAttributeAutoPrefixScenario.java,51,,"        writer.writeNamespace(""p"", ""urn:test"");"
254722,./TargetProjects/ws-axiom/testing/axiom-testsuite/src/main/java/org/apache/axiom/ts/om/sourcedelement/push/WriteEmptyElementAutoPrefixScenario.java,49,,"        writer.writeNamespace(""p"", ""urn:test"");"
254723,./TargetProjects/ws-axiom/testing/axiom-testsuite/src/main/java/org/apache/axiom/ts/om/sourcedelement/push/WriteStartElementAutoPrefixScenario.java,49,,"        writer.writeNamespace(""p"", ""urn:test"");"
254724,./TargetProjects/ws-axiom/testing/axiom-testsuite/src/main/java/org/apache/axiom/ts/om/sourcedelement/push/WriteStartElementWithDefaultNamespaceDeclaredOnParentScenario.java,48,,"        writer.writeStartElement("""", ""root"", ""urn:test"");"
254725,./TargetProjects/ws-axiom/testing/axiom-testsuite/src/main/java/org/apache/axiom/ts/om/sourcedelement/push/WriteStartEndDocumentScenario.java,54,,"            Assert.fail(""Expected UnsupportedOperationException"");"
254726,./TargetProjects/ws-axiom/testing/axiom-testsuite/src/main/java/org/apache/axiom/ts/soap/SOAPTestSuiteBuilder.java,64,,"        new QName(""root""),"
254727,./TargetProjects/ws-axiom/testing/axiom-testsuite/src/main/java/org/apache/axiom/ts/soap/SOAPTestSuiteBuilder.java,65,,"        new QName(""urn:test"", ""root"", ""p""),"
254728,./TargetProjects/ws-axiom/testing/axiom-testsuite/src/main/java/org/apache/axiom/ts/soap/headerblock/TestBlobOMDataSource.java,63,,"        assertTrue(""OMSourcedElement is expanded.  This is unexpected"", !child.isExpanded());"
254729,./TargetProjects/ws-axiom/testing/axiom-testsuite/src/main/java/org/apache/axiom/ts/soap11/builder/TestBuilder.java,214,,"                           ""http:www.sample.org""));"
254730,./TargetProjects/ws-axiom/testing/axiom-testsuite/src/main/java/org/apache/axiom/ts/soap12/builder/TestBuilder.java,180,,"        assertTrue(""SOAP 1.2 :- Fault code namespace uri mismatch"","
254731,./TargetProjects/ws-axiom/testing/axiom-testsuite/src/main/java/org/apache/axiom/ts/soap12/builder/TestBuilder.java,315,,"                           ""http:www.sample.org""));"
254732,./TargetProjects/ws-axiom/testing/axiom-testsuite/src/main/java/org/apache/axiom/ts/soap12/header/TestExamineMustUnderstandHeaderBlocks.java,42,,"                ""http://www.w3.org/2003/05/soap-envelope/role/ultimateReceiver"");"
254733,./TargetProjects/ws-axiom/testing/axiom-testsuite/src/main/java/org/apache/axiom/ts/soapdom/header/TestExamineAllHeaderBlocks.java,53,,"        Element headerBlock1 = document.createElementNS(""urn:test"", ""p:h1"");"
254734,./TargetProjects/ws-axiom/testing/dom-testsuite/src/main/java/org/apache/axiom/ts/dom/DOMTestSuiteBuilder.java,34,,"        new QName(""urn:ns2"", ""attr"", ""q""),"
254735,./TargetProjects/ws-axiom/testing/jaxen-testsuite/src/main/java/org/jaxen/test/XPathTestBase.java,212,,"        Object document = nav.getDocument(""xml/testNamespaces.xml"");"
254736,./TargetProjects/ws-axiom/testing/jaxen-testsuite/src/main/java/org/jaxen/test/XPathTestBase.java,235,,"        log(""Document ["" + url + ""]"");"
254737,./TargetProjects/ws-axiom/testing/jaxen-testsuite/src/main/java/org/jaxen/test/XPathTestBase.java,238,,"        log(""Initial Context :: "" + contextpath);"
254738,./TargetProjects/ws-axiom/testing/jaxen-testsuite/src/main/java/org/jaxen/test/XPathTestBase.java,276,,"        String url = ""xml/simple.xml"";"
254739,./TargetProjects/ws-axiom/testing/jaxen-testsuite/src/main/java/org/jaxen/test/XPathTestBase.java,286,,"            assertValueOfXPath(""abd"", context, ""string()"");"
254740,./TargetProjects/ws-axiom/testing/jaxen-testsuite/src/main/java/org/jaxen/test/XPathTestBase.java,365,,"        String url = ""xml/numbers.xml"";"
254741,./TargetProjects/ws-axiom/testing/jaxen-testsuite/src/main/java/org/jaxen/test/XPathTestBase.java,431,,"        String url = ""xml/web.xml"";"
254742,./TargetProjects/ws-axiom/testing/jaxen-testsuite/src/main/java/org/jaxen/test/XPathTestBase.java,441,,"            assertValueOfXPath(""true"", context, ""/web-app/servlet/servlet-name = 'file'"");"
254743,./TargetProjects/ws-axiom/testing/jaxen-testsuite/src/main/java/org/jaxen/test/XPathTestBase.java,500,,"            assertValueOfXPath(""false"", context, ""1 = 2 = 2"");"
254744,./TargetProjects/ws-axiom/testing/jaxen-testsuite/src/main/java/org/jaxen/test/XPathTestBase.java,569,,"            assertValueOfXPath(""foo"", context, ""preceding-sibling::*[1]"");"
254745,./TargetProjects/ws-axiom/testing/jaxen-testsuite/src/main/java/org/jaxen/test/XPathTestBase.java,720,,"        String url = ""xml/axis.xml"";"
254746,./TargetProjects/ws-axiom/testing/jaxen-testsuite/src/main/java/org/jaxen/test/XPathTestBase.java,817,,"            assertValueOfXPath(""snoop"", context, ""/web-app/servlet[1]/servlet-name"");"
254747,./TargetProjects/ws-axiom/testing/jaxen-testsuite/src/main/java/org/jaxen/test/XPathTestBase.java,892,,"                assertValueOfXPath(""web-app"", result, ""name()"");"
254748,./TargetProjects/ws-axiom/testing/jaxen-testsuite/src/main/java/org/jaxen/test/XPathTestBase.java,892,,"                assertValueOfXPath(""web-app"", result, ""name()"");"
254749,./TargetProjects/ws-axiom/testing/jaxen-testsuite/src/main/java/org/jaxen/test/XPathTestBase.java,904,,"                assertValueOfXPath(""web-app"", result, ""name(.)"");"
254750,./TargetProjects/ws-axiom/testing/jaxen-testsuite/src/main/java/org/jaxen/test/XPathTestBase.java,1041,,"                assertValueOfXPath(""http://c.moreover.com/click/here.pl?x13563273"", result, ""url"");"
254751,./TargetProjects/ws-axiom/testing/jaxen-testsuite/src/main/java/org/jaxen/test/XPathTestBase.java,1041,,"                assertValueOfXPath(""http://c.moreover.com/click/here.pl?x13563273"", result, ""url"");"
254752,./TargetProjects/ws-axiom/testing/jaxen-testsuite/src/main/java/org/jaxen/test/XPathTestBase.java,1359,,"            assertValueOfXPath(""abcd"", context, ""translate( 'abcd', '', '' )"");"
254753,./TargetProjects/ws-axiom/testing/jaxen-testsuite/src/main/java/org/jaxen/test/XPathTestBase.java,1437,,"            assertValueOfXPath(""SNOOPSERVLET"", context, ""upper-case( servlet-class )"");"
254754,./TargetProjects/ws-axiom/testing/jaxen-testsuite/src/main/java/org/jaxen/test/XPathTestBase.java,1485,,"        nsContext.addNamespace(""alias"", ""http://fooNamespace/"");"
254755,./TargetProjects/ws-axiom/testing/soap-testsuite/src/main/java/org/apache/axiom/ts/soap/SOAPSpec.java,66,,"            ""http://www.w3.org/2003/05/soap-envelope"","
254756,./TargetProjects/ws-axiom/testing/spring-ws-testsuite/src/main/java/org/apache/axiom/ts/springws/scenario/broker/Order.java,25,,"@XmlRootElement(namespace=""urn:broker"", name=""Order"")"
254757,./TargetProjects/ws-neethi/src/test/java/org/apache/neethi/IntersectTest.java,44,,"        doTest(""samples2"", ""intersected"", 3);"
254758,./TargetProjects/ws-neethi/src/test/java/org/apache/neethi/IntersectTest.java,44,,"        doTest(""samples2"", ""intersected"", 3);"
254759,./TargetProjects/ws-neethi/src/test/java/org/apache/neethi/IntersectTest.java,61,,"        doTest(""w3tests"", ""w3tests"" + File.separator + ""Intersected"", 1);"
254760,./TargetProjects/ws-neethi/src/test/java/org/apache/neethi/MergeTest.java,33,,"        doTest(""samples2"", ""merged"", 3);"
254761,./TargetProjects/ws-neethi/src/test/java/org/apache/neethi/MergeTest.java,33,,"        doTest(""samples2"", ""merged"", 3);"
254762,./TargetProjects/ws-neethi/src/test/java/org/apache/neethi/MergeTest.java,49,,"        doTest(""w3tests"", ""w3tests"" + File.separator + ""Merged"", 1);"
254763,./TargetProjects/ws-neethi/src/test/java/org/apache/neethi/NormalizeTest.java,43,,"        doTest(""samples"", ""normalized"", 3);"
254764,./TargetProjects/ws-neethi/src/test/java/org/apache/neethi/NormalizeTest.java,43,,"        doTest(""samples"", ""normalized"", 3);"
254765,./TargetProjects/ws-neethi/src/test/java/org/apache/neethi/NormalizeTest.java,60,,"                          getPolicy(""w3tests"" + File.separator + ""Common/Protection.xml"", 1));"
254766,./TargetProjects/ws-wss4j/bindings/src/main/java/org/apache/wss4j/binding/wss10/ObjectFactory.java,52,,"    private final static QName _UsernameToken_QNAME = new QName(""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"", ""UsernameToken"");"
254767,./TargetProjects/ws-wss4j/integration/src/test/java/org/apache/wss4j/integration/test/kerberos/KerberosTest.java,129,,"        kerbyServer.createPrincipal(alice, ""alice"");"
254768,./TargetProjects/ws-wss4j/integration/src/test/java/org/apache/wss4j/integration/test/kerberos/KerberosTest.java,130,,"        kerbyServer.createPrincipal(bob, ""bob"");"
254769,./TargetProjects/ws-wss4j/integration/src/test/java/org/apache/wss4j/integration/test/kerberos/KerberosTest.java,166,,"            System.out.println(""Skipping test because kerberos server could not be started"");"
254770,./TargetProjects/ws-wss4j/integration/src/test/java/org/apache/wss4j/integration/test/kerberos/KerberosTest.java,187,,"        bst.retrieveServiceTicket(""alice"", callbackHandler, ""bob@service.ws.apache.org"");"
254771,./TargetProjects/ws-wss4j/integration/src/test/java/org/apache/wss4j/integration/test/kerberos/KerberosTest.java,329,,"        bst.setID(""Id-"" + bst.hashCode());"
254772,./TargetProjects/ws-wss4j/integration/src/test/java/org/apache/wss4j/integration/test/kerberos/KerberosTest.java,800,,"            securityProperties.loadSignatureVerificationKeystore(this.getClass().getClassLoader().getResource(""receiver.jks""), ""default"".toCharArray());"
254773,./TargetProjects/ws-wss4j/integration/src/test/java/org/apache/wss4j/integration/test/kerberos/KerberosTest.java,800,,"            securityProperties.loadSignatureVerificationKeystore(this.getClass().getClassLoader().getResource(""receiver.jks""), ""default"".toCharArray());"
254774,./TargetProjects/ws-wss4j/performance/src/test/java/org/apache/wss4j/performance/AbstractTestBase.java,196,,"        sigProperties.setProperty(""org.apache.wss4j.crypto.merlin.keystore.password"", ""default"");"
254775,./TargetProjects/ws-wss4j/performance/src/test/java/org/apache/wss4j/performance/AbstractTestBase.java,386,,"                throw new WSSecurityException(WSSecurityException.ErrorCode.FAILURE, ""empty"", ""WSS4JHandler: No action defined"");"
254776,./TargetProjects/ws-wss4j/performance/src/test/java/org/apache/wss4j/performance/AbstractTestBase.java,451,,"        @SuppressWarnings(""unchecked"")"
254777,./TargetProjects/ws-wss4j/performance/src/test/java/org/apache/wss4j/performance/AbstractTestBase.java,694,,"        Field modifiersField = Field.class.getDeclaredField(""modifiers"");"
254778,./TargetProjects/ws-wss4j/performance/src/test/java/org/apache/wss4j/performance/PerformanceMemoryTest.java,58,,"    @BeforeGroups(groups = {""memory-out""})"
254779,./TargetProjects/ws-wss4j/performance/src/test/java/org/apache/wss4j/performance/PerformanceMemoryTest.java,76,,"    @DataProvider(name = ""xmlsizes"")"
254780,./TargetProjects/ws-wss4j/performance/src/test/java/org/apache/wss4j/performance/PerformanceMemoryTest.java,114,,"        System.out.println(""Run "" + run);"
254781,./TargetProjects/ws-wss4j/performance/src/test/java/org/apache/wss4j/performance/PerformanceMemoryTest.java,123,,"        doStreamingSecurityOutbound(input, new File(""target/performanceMemoryTest/stream-"" + tagCount + "".xml""));"
254782,./TargetProjects/ws-wss4j/performance/src/test/java/org/apache/wss4j/performance/PerformanceMemoryTest.java,180,,"    @Test(groups = {""memory-in""})"
254783,./TargetProjects/ws-wss4j/performance/src/test/java/org/apache/wss4j/performance/PerformanceMemoryTest.java,284,,"            securityProperties.loadEncryptionKeystore(this.getClass().getClassLoader().getResource(""transmitter.jks""), ""default"".toCharArray());"
254784,./TargetProjects/ws-wss4j/performance/src/test/java/org/apache/wss4j/performance/PerformanceMemoryTest.java,284,,"            securityProperties.loadEncryptionKeystore(this.getClass().getClassLoader().getResource(""transmitter.jks""), ""default"".toCharArray());"
254785,./TargetProjects/ws-wss4j/performance/src/test/java/org/apache/wss4j/performance/PerformanceTimingTest.java,57,,"    @BeforeGroups(groups = {""timing-out""})"
254786,./TargetProjects/ws-wss4j/performance/src/test/java/org/apache/wss4j/performance/PerformanceTimingTest.java,110,,"            doDOMSecurityOutbound(input, new File(""target/performanceTimingTest/dom-"" + tagCount + "".xml""));"
254787,./TargetProjects/ws-wss4j/performance/src/test/java/org/apache/wss4j/performance/PerformanceTimingTest.java,140,,"    @BeforeGroups(groups = {""timing-in""})"
254788,./TargetProjects/ws-wss4j/performance/src/test/java/org/apache/wss4j/performance/PerformanceTimingTest.java,204,,"            securityProperties.loadEncryptionKeystore(this.getClass().getClassLoader().getResource(""transmitter.jks""), ""default"".toCharArray());"
254789,./TargetProjects/ws-wss4j/performance/src/test/java/org/apache/wss4j/performance/PerformanceTimingTest.java,204,,"            securityProperties.loadEncryptionKeystore(this.getClass().getClassLoader().getResource(""transmitter.jks""), ""default"".toCharArray());"
254790,./TargetProjects/ws-wss4j/policy/src/main/java/org/apache/wss4j/policy/SPConstants.java,320,,"    public static final String P_SHA1 = ""http://schemas.xmlsoap.org/ws/2005/02/sc/dk/p_sha1"";"
254791,./TargetProjects/ws-wss4j/policy/src/test/java/org/apache/wss4j/policy/tests/SignedElementsTest.java,57,,"            assertEquals(""1.1"", signedElements.getXPathVersion());"
254792,./TargetProjects/ws-wss4j/ws-security-common/src/main/java/org/apache/wss4j/common/crypto/CryptoFactory.java,74,,"            LOG.debug(""Cannot load Crypto instance as properties object is null"");"
254793,./TargetProjects/ws-wss4j/ws-security-common/src/main/java/org/apache/wss4j/common/crypto/CryptoFactory.java,76,,"                    ""empty"", new Object[] {""Cannot load Crypto instance as properties object is null""});"
254794,./TargetProjects/ws-wss4j/ws-security-common/src/main/java/org/apache/wss4j/common/crypto/DERDecoder.java,62,,"                    ""noSKIHandling"","
254795,./TargetProjects/ws-wss4j/ws-security-common/src/main/java/org/apache/wss4j/common/crypto/DERDecoder.java,121,,"                    new Object[] {""Invalid DER format""}"
254796,./TargetProjects/ws-wss4j/ws-security-common/src/main/java/org/apache/wss4j/common/crypto/Merlin.java,535,,"                    WSSecurityException.ErrorCode.FAILURE, ex, ""keystore"""
254797,./TargetProjects/ws-wss4j/ws-security-common/src/main/java/org/apache/wss4j/common/crypto/Merlin.java,618,,"            throw new WSSecurityException(WSSecurityException.ErrorCode.FAILURE, ""empty"","
254798,./TargetProjects/ws-wss4j/ws-security-common/src/main/java/org/apache/wss4j/common/crypto/Merlin.java,1008,,"            keystore = ""truststore"";"
254799,./TargetProjects/ws-wss4j/ws-security-common/src/main/java/org/apache/wss4j/common/crypto/WSProviderConfig.java,221,,"                    LOG.debug(""The provider "" + name + "" could not be added: "" + t.getMessage(), t);"
254800,./TargetProjects/ws-wss4j/ws-security-common/src/main/java/org/apache/wss4j/common/crypto/WSProviderConfig.java,221,,"                    LOG.debug(""The provider "" + name + "" could not be added: "" + t.getMessage(), t);"
254801,./TargetProjects/ws-wss4j/ws-security-common/src/main/java/org/apache/wss4j/common/saml/OpenSAMLUtil.java,148,,"            throw new WSSecurityException(WSSecurityException.ErrorCode.FAILURE, ""empty"","
254802,./TargetProjects/ws-wss4j/ws-security-common/src/main/java/org/apache/wss4j/common/saml/SamlAssertionWrapper.java,168,,"            throw new WSSecurityException(WSSecurityException.ErrorCode.FAILURE, ""empty"","
254803,./TargetProjects/ws-wss4j/ws-security-common/src/main/java/org/apache/wss4j/common/saml/SamlAssertionWrapper.java,596,,"                    WSSecurityException.ErrorCode.FAILURE, ""invalidSAMLsecurity"","
254804,./TargetProjects/ws-wss4j/ws-security-common/src/main/java/org/apache/wss4j/common/saml/builder/SAML1ComponentBuilder.java,130,,"    @SuppressWarnings(""unchecked"")"
254805,./TargetProjects/ws-wss4j/ws-security-common/src/main/java/org/apache/wss4j/common/saml/builder/SAML2ComponentBuilder.java,157,,"    @SuppressWarnings(""unchecked"")"
254806,./TargetProjects/ws-wss4j/ws-security-common/src/main/java/org/apache/wss4j/common/spnego/SpnegoTokenContext.java,126,,"                WSSecurityException.ErrorCode.FAILURE, ex, ""kerberosLoginError"","
254807,./TargetProjects/ws-wss4j/ws-security-common/src/main/java/org/apache/wss4j/common/spnego/SpnegoTokenContext.java,148,,"                    WSSecurityException.ErrorCode.FAILURE, ""kerberosServiceTicketError"""
254808,./TargetProjects/ws-wss4j/ws-security-common/src/main/java/org/apache/wss4j/common/util/AttachmentUtils.java,188,,"            if (!value.endsWith(""\r\n"")) {"
254809,./TargetProjects/ws-wss4j/ws-security-common/src/main/java/org/apache/wss4j/common/util/KeyUtils.java,169,,"                    WSSecurityException.ErrorCode.UNSUPPORTED_ALGORITHM, ""unsupportedKeyTransp"","
254810,./TargetProjects/ws-wss4j/ws-security-common/src/test/java/org/apache/wss4j/common/attachment/AttachmentTest.java,188,,"                ""application/x-stuff;"" +"
254811,./TargetProjects/ws-wss4j/ws-security-common/src/test/java/org/apache/wss4j/common/cache/EHCacheExpiryTest.java,42,,"                cacheExpiry.getExpiryForCreation(""xyz"","
254812,./TargetProjects/ws-wss4j/ws-security-common/src/test/java/org/apache/wss4j/common/cache/ReplayCacheTest.java,55,,"        try (ReplayCache replayCache = new EHCacheReplayCache(""xyz"", tempDir)) {"
254813,./TargetProjects/ws-wss4j/ws-security-common/src/test/java/org/apache/wss4j/common/cache/ReplayCacheTest.java,69,,"        ReplayCache replayCache = new EHCacheReplayCache(""abc"", tempDir.resolve(""abc""));"
254814,./TargetProjects/ws-wss4j/ws-security-common/src/test/java/org/apache/wss4j/common/crypto/AuthorityKeyIdentifierTest.java,48,,"        KeyStore keyStore = loadKeyStore(""keys/wss40.jks"", ""security"");"
254815,./TargetProjects/ws-wss4j/ws-security-common/src/test/java/org/apache/wss4j/common/crypto/MerlinTest.java,43,,"        KeyStore keyStore = loadKeyStore(""keys/wss40.jks"", ""security"");"
254816,./TargetProjects/ws-wss4j/ws-security-common/src/test/java/org/apache/wss4j/common/crypto/MerlinTest.java,58,,"        assertNotNull(jksCrypto.getPrivateKey(""wss40"", ""security""));"
254817,./TargetProjects/ws-wss4j/ws-security-common/src/test/java/org/apache/wss4j/common/crypto/NameConstraintsTest.java,270,,"        properties.setProperty(""org.apache.wss4j.crypto.merlin.cert.provider.nameconstraints"","
254818,./TargetProjects/ws-wss4j/ws-security-common/src/test/java/org/apache/wss4j/common/crypto/NameConstraintsTest.java,271,,"                ""true"");"
254819,./TargetProjects/ws-wss4j/ws-security-dom/src/main/java/org/apache/wss4j/dom/WSDocInfo.java,117,,"                    WSSecurityException.ErrorCode.INVALID_SECURITY_TOKEN, ""duplicateError"""
254820,./TargetProjects/ws-wss4j/ws-security-dom/src/main/java/org/apache/wss4j/dom/handler/WSHandler.java,467,,"                            throw new WSSecurityException(WSSecurityException.ErrorCode.INVALID_SECURITY, ""empty"","
254821,./TargetProjects/ws-wss4j/ws-security-dom/src/main/java/org/apache/wss4j/dom/message/token/SecurityContextToken.java,82,,"            doc.createElementNS(ns, ""wsc:"" + ConversationConstants.SECURITY_CONTEXT_TOKEN_LN);"
254822,./TargetProjects/ws-wss4j/ws-security-dom/src/main/java/org/apache/wss4j/dom/message/token/UsernameToken.java,131,,"                ""badUsernameToken"","
254823,./TargetProjects/ws-wss4j/ws-security-dom/src/main/java/org/apache/wss4j/dom/message/token/UsernameToken.java,243,,"            doc.createElementNS(WSConstants.WSSE_NS, ""wsse:"" + WSConstants.USERNAME_TOKEN_LN);"
254824,./TargetProjects/ws-wss4j/ws-security-dom/src/main/java/org/apache/wss4j/dom/str/DerivedKeyTokenSTRParser.java,121,,"                WSSecurityException.ErrorCode.FAILED_CHECK, ""unsupportedKeyId"""
254825,./TargetProjects/ws-wss4j/ws-security-dom/src/main/java/org/apache/wss4j/dom/str/SecurityTokenRefSTRParser.java,162,,"                WSSecurityException.ErrorCode.FAILED_CHECK, ""unsupportedKeyId"","
254826,./TargetProjects/ws-wss4j/ws-security-dom/src/main/java/org/apache/wss4j/dom/util/WSSecurityUtil.java,561,,"                throw new WSSecurityException(WSSecurityException.ErrorCode.FAILURE, ""empty"","
254827,./TargetProjects/ws-wss4j/ws-security-dom/src/main/java/org/apache/wss4j/dom/validate/SamlAssertionValidator.java,138,,"                                          ""invalidSAMLsecurity"");"
254828,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/common/KeystoreCallbackHandler.java,41,,"        users.put(""wss86"", ""security"");"
254829,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/components/crypto/CertificateStoreTest.java,69,,"        cryptoType.setAlias(""wss40"");"
254830,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/components/crypto/CertificateStoreTest.java,85,,"        sign.setUserInfo(""wss40"", ""security"");"
254831,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/components/crypto/CryptoTest.java,104,,"        builder.setUserInfo(""wss40"", ""security"");"
254832,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/components/crypto/WSSConfigTest.java,45,,"        assertNotNull(Security.getProvider(""ApacheXMLDSig""));"
254833,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/handler/CallbackRefTest.java,60,,"        reqData.setUsername(""alice"");"
254834,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/handler/CustomActionProcessorTest.java,169,,"        reqData.setMsgContext(""bread"");"
254835,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/handler/SecurityActionTokenTest.java,75,,"        crypto = CryptoFactory.getInstance(""wss40.properties"");"
254836,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/handler/SecurityActionTokenTest.java,90,,"        actionToken.setUser(""wss40"");"
254837,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/handler/SecurityActionTokenTest.java,175,,"            new WSEncryptionPart(""Timestamp"", WSConstants.WSU_NS, """");"
254838,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/handler/SignatureConfirmationTest.java,74,,"    @SuppressWarnings(""unchecked"")"
254839,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/handler/SignatureConfirmationTest.java,80,,"        msgContext.put(WSHandlerConstants.ENABLE_SIGNATURE_CONFIRMATION, ""true"");"
254840,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/handler/SignatureConfirmationTest.java,81,,"        msgContext.put(WSHandlerConstants.SIG_PROP_FILE, ""crypto.properties"");"
254841,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/handler/SignatureConfirmationTest.java,82,,"        msgContext.put(""password"", ""security"");"
254842,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/handler/SignatureConfirmationTest.java,82,,"        msgContext.put(""password"", ""security"");"
254843,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/handler/SignatureConfirmationTest.java,84,,"        reqData.setUsername(""16c73ab6-b892-458f-abf5-2f875f74882e"");"
254844,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/handler/SignatureConfirmationTest.java,96,,"            LOG.debug(""After Signing...."");"
254845,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/handler/SignatureConfirmationTest.java,208,,"            LOG.debug(""Signature Confirmation response...."");"
254846,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/handler/UseReqSigCertTest.java,60,,"        config.put(WSHandlerConstants.SIG_PROP_FILE, ""wss40.properties"");"
254847,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/handler/WSHandlerGetPasswordTest.java,61,,"        messageContext.put(""password"", ""securityPassword"");"
254848,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/handler/WSHandlerGetPasswordTest.java,68,,"            handler.getPasswordCB(""alice"", WSConstants.UT, callbackHandler, reqData);"
254849,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/AttachmentTest.java,113,,"        builder.setUserInfo(""16c73ab6-b892-458f-abf5-2f875f74882e"", ""security"");"
254850,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/AttachmentTest.java,113,,"        builder.setUserInfo(""16c73ab6-b892-458f-abf5-2f875f74882e"", ""security"");"
254851,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/AttachmentTest.java,115,,"        builder.getParts().add(new WSEncryptionPart(""Body"", ""http://schemas.xmlsoap.org/soap/envelope/"", ""Content""));"
254852,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/AttachmentTest.java,115,,"        builder.getParts().add(new WSEncryptionPart(""Body"", ""http://schemas.xmlsoap.org/soap/envelope/"", ""Content""));"
254853,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/AttachmentTest.java,115,,"        builder.getParts().add(new WSEncryptionPart(""Body"", ""http://schemas.xmlsoap.org/soap/envelope/"", ""Content""));"
254854,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/AttachmentTest.java,116,,"        builder.getParts().add(new WSEncryptionPart(""cid:Attachments"", ""Content""));"
254855,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/AttachmentTest.java,120,,"        attachment.setMimeType(""text/xml"");"
254856,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/AttachmentTest.java,129,,"        LOG.info(""Before Signing...."");"
254857,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/AttachmentTest.java,133,,"            LOG.debug(""After Signing...."");"
254858,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/AttachmentTest.java,192,,"                            throw new RuntimeException(""wrong attachment requested"");"
254859,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/AttachmentTest.java,205,,"            assertEquals(e.getMessage(), ""The signature or decryption was invalid"");"
254860,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/AttachmentTest.java,219,,"        builder.getParts().add(new WSEncryptionPart(""cid:Attachments"", ""Element""));"
254861,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/AttachmentTest.java,333,,"        attachment[1].setMimeType(""text/plain"");"
254862,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/AttachmentTest.java,403,,"        NodeList references = doc.getElementsByTagNameNS(WSConstants.ENC_NS, ""DataReference"");"
254863,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/AttachmentTest.java,405,,"        NodeList cipherReferences = doc.getElementsByTagNameNS(WSConstants.ENC_NS, ""CipherReference"");"
254864,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/AttachmentTest.java,407,,"        NodeList encDatas = doc.getElementsByTagNameNS(WSConstants.ENC_NS, ""EncryptedData"");"
254865,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/AttachmentTest.java,410,,"        NodeList securityHeaderElement = doc.getElementsByTagNameNS(WSConstants.WSSE_NS, ""Security"");"
254866,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/AttachmentTest.java,414,,"        assertEquals(childs.item(0).getLocalName(), ""EncryptedKey"");"
254867,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/DerivedKeyActionTest.java,63,,"        crypto = CryptoFactory.getInstance(""wss40.properties"");"
254868,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/DerivedKeyActionTest.java,72,,"        reqData.setUsername(""wss40"");"
254869,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/DerivedKeyActionTest.java,77,,"        config.put(WSHandlerConstants.DERIVED_TOKEN_KEY_ID, ""Thumbprint"");"
254870,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/DerivedKeyActionTest.java,270,,"        config.put(WSHandlerConstants.DERIVED_TOKEN_REFERENCE, ""EncryptedKey"");"
254871,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/DerivedKeyActionTest.java,300,,"        KeyGenerator keyGen = KeyGenerator.getInstance(""AES"");"
254872,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/DerivedKeyActionTest.java,308,,"        config.put(WSHandlerConstants.DERIVED_TOKEN_REFERENCE, ""SecurityContextToken"");"
254873,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/DerivedKeyTest.java,78,,"        encrKeyBuilder.setUserInfo(""wss40"");"
254874,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/EncryptionAlgorithmSuiteTest.java,61,,"        crypto = CryptoFactory.getInstance(""wss40.properties"");"
254875,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/EncryptionAlgorithmSuiteTest.java,71,,"        builder.setUserInfo(""wss40"");"
254876,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/EncryptionCRLTest.java,89,,"        actionToken.setUser(""wss40rev"");"
254877,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/EncryptionGCMTest.java,112,,"        assertFalse(outputString.contains(""counter_port_type""));"
254878,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/EncryptionPartsTest.java,99,,"    @SuppressWarnings(""unchecked"")"
254879,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/EncryptionPartsTest.java,107,,"        encrypt.setUserInfo(""16c73ab6-b892-458f-abf5-2f875f74882e"", ""security"");"
254880,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/EncryptionPartsTest.java,107,,"        encrypt.setUserInfo(""16c73ab6-b892-458f-abf5-2f875f74882e"", ""security"");"
254881,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/EncryptionPartsTest.java,112,,"                ""foobar"","
254882,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/EncryptionPartsTest.java,113,,"                ""urn:foo.bar"","
254883,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/EncryptionTest.java,120,,"        builder.setUserInfo(""wss40"");"
254884,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/EncryptionTest.java,136,,"        assertFalse(outputString.contains(""counter_port_type""));"
254885,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/ModifiedRequestTest.java,103,,"        builder.setUserInfo(""16c73ab6-b892-458f-abf5-2f875f74882e"", ""security"");"
254886,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/ModifiedRequestTest.java,103,,"        builder.setUserInfo(""16c73ab6-b892-458f-abf5-2f875f74882e"", ""security"");"
254887,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/ModifiedRequestTest.java,108,,"                ""value"","
254888,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/ModifiedRequestTest.java,109,,"                ""http://blah.com"","
254889,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/ModifiedRequestTest.java,327,,"        builder.setUserInfo(""wss40"");"
254890,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/ModifiedRequestTest.java,331,,"        Crypto wssCrypto = CryptoFactory.getInstance(""wss40.properties"");"
254891,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/PasswordEncryptorTest.java,93,,"        builder.setUserInfo(""16c73ab6-b892-458f-abf5-2f875f74882e"", ""security"");"
254892,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/ReplayTest.java,94,,"        builder.setUserInfo(""16c73ab6-b892-458f-abf5-2f875f74882e"", ""security"");"
254893,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/ReplayTest.java,94,,"        builder.setUserInfo(""16c73ab6-b892-458f-abf5-2f875f74882e"", ""security"");"
254894,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/ReplayTest.java,99,,"                ""Timestamp"", WSConstants.WSU_NS, """");"
254895,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/ReplayTest.java,127,,"            fail(""Expected failure on a replay attack"");"
254896,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/RequireSignedEncryptedDataElementsTest.java,102,,"            fail(""WSSecurityException expected"");"
254897,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/RequireSignedEncryptedDataElementsTest.java,300,,"        encrypt.setUserInfo(""16c73ab6-b892-458f-abf5-2f875f74882e"");"
254898,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/STRSignatureTest.java,69,,"        builder.setUserInfo(""wss40"", ""security"");"
254899,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/STRSignatureTest.java,69,,"        builder.setUserInfo(""wss40"", ""security"");"
254900,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/STRSignatureTest.java,79,,"                ""Content"");"
254901,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/STRSignatureTest.java,83,,"                ""STRTransform"","
254902,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/SignatureAlgorithmSuiteTest.java,76,,"        builder.setUserInfo(""16c73ab6-b892-458f-abf5-2f875f74882e"", ""security"");"
254903,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/SignatureCertTest.java,101,,"        sign.setUserInfo(""wss40"", ""security"");"
254904,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/SignatureCertTest.java,101,,"        sign.setUserInfo(""wss40"", ""security"");"
254905,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/SignatureCertTest.java,272,,"        clientProperties.put(""org.apache.wss4j.crypto.merlin.keystore.alias"", ""wss40exp"");"
254906,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/SignatureEncryptionTest.java,113,,"        encrypt.setUserInfo(""wss40"");"
254907,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/SignatureEncryptionTest.java,114,,"        sign.setUserInfo(""wss40"", ""security"");"
254908,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/SignatureEncryptionTest.java,115,,"        LOG.info(""Before Encryption...."");"
254909,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/SignatureEncryptionTest.java,122,,"            LOG.debug(""After Encryption...."");"
254910,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/SignatureKeyValueTest.java,71,,"        builder.setUserInfo(""wss40"", ""security"");"
254911,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/SignaturePartsTest.java,106,,"    @SuppressWarnings(""unchecked"")"
254912,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/SignaturePartsTest.java,114,,"        sign.setUserInfo(""16c73ab6-b892-458f-abf5-2f875f74882e"", ""security"");"
254913,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/SignaturePartsTest.java,114,,"        sign.setUserInfo(""16c73ab6-b892-458f-abf5-2f875f74882e"", ""security"");"
254914,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/SignaturePartsTest.java,119,,"                ""foobar"","
254915,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/SignaturePartsTest.java,120,,"                ""urn:foo.bar"","
254916,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/SignatureTest.java,101,,"        builder.setUserInfo(""16c73ab6-b892-458f-abf5-2f875f74882e"", ""security"");"
254917,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/SignatureTest.java,101,,"        builder.setUserInfo(""16c73ab6-b892-458f-abf5-2f875f74882e"", ""security"");"
254918,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/SignatureTest.java,103,,"        LOG.info(""Before Signing IS...."");"
254919,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/SignatureTest.java,113,,"        LOG.info(""After Signing IS...."");"
254920,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/SignatureTest.java,192,,"        LOG.info(""Before Signing...."");"
254921,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/SignatureTest.java,196,,"            LOG.debug(""After Signing...."");"
254922,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/SignatureTest.java,538,,"        builder.setDigestAlgo(""http://www.w3.org/2001/04/xmlenc#sha256"");"
254923,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/SignatureTest.java,585,,"        config.put(WSHandlerConstants.SIG_PROP_FILE, ""crypto.properties"");"
254924,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/SignatureTest.java,586,,"        config.put(""password"", ""security"");"
254925,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/SignatureTest.java,609,,"            LOG.debug(""Signed message:"");"
254926,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/TestMessageTransformer.java,49,,"        Element body = getFirstChildElement(saaj, new QName(""http://schemas.xmlsoap.org/soap/envelope/"","
254927,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/TestMessageTransformer.java,50,,"                                                            ""Body""), true);"
254928,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/TestMessageTransformer.java,51,,"        Element encData = getFirstChildElement(body, new QName(""http://www.w3.org/2001/04/xmlenc#"","
254929,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/TestMessageTransformer.java,52,,"                                                               ""EncryptedData""), true);"
254930,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/TestMessageTransformer.java,55,,"                                                          ""Header""), true);"
254931,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/TestMessageTransformer.java,58,,"                                                            ""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"","
254932,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/TestMessageTransformer.java,92,,"        Element signature = getFirstChildElement(sh, new QName(""http://www.w3.org/2000/09/xmldsig#"","
254933,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/TimestampTest.java,234,,"            fail(""The timestamp validation should have failed"");"
254934,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/UTDerivedKeyTest.java,81,,"        usernameToken.setName(""bob"");"
254935,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/UTDerivedKeyTest.java,102,,"        assertTrue(outputString.contains(""wsse:Username""));"
254936,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/UTDerivedKeyTest.java,103,,"        assertFalse(outputString.contains(""wsse:Password""));"
254937,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/UTDerivedKeyTest.java,104,,"        assertTrue(outputString.contains(""wsse11:Salt""));"
254938,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/UTDerivedKeyTest.java,105,,"        assertTrue(outputString.contains(""wsse11:Iteration""));"
254939,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/UTDerivedKeyTest.java,107,,"        byte[] derivedKey = UsernameTokenUtil.generateDerivedKey(""security"", salt, 500);"
254940,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/UTDerivedKeyTest.java,169,,"        assertFalse(outputString.contains(""testMethod""));"
254941,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/UTSignatureTest.java,79,,"        builder.setUserInfo(""bob"", ""security"");"
254942,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/UsernameTokenTest.java,137,,"        builder.setUserInfo(""wernerd"", ""verySecret"");"
254943,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/UsernameTokenTest.java,137,,"        builder.setUserInfo(""wernerd"", ""verySecret"");"
254944,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/UsernameTokenTest.java,138,,"        LOG.info(""Before adding UsernameToken PW Digest...."");"
254945,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/UsernameTokenTest.java,142,,"            LOG.debug(""Message with UserNameToken PW Digest:"");"
254946,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/UsernameTokenTest.java,147,,"        LOG.info(""After adding UsernameToken PW Digest...."");"
254947,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/UsernameTokenTest.java,300,,"            fail(""The UsernameToken validation should have failed"");"
254948,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/UsernameTokenTest.java,438,,"            LOG.debug(""Message with UserNameToken PW Text:"");"
254949,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/UsernameTokenTest.java,537,,"            fail(""Expected failure as it is not BSP compliant"");"
254950,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/UsernameTokenTest.java,834,,"            LOG.debug(""Username Token via WSHandler"");"
254951,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/XOPAttachmentTest.java,118,,"        encrypt.setUserInfo(""16c73ab6-b892-458f-abf5-2f875f74882e"", ""security"");"
254952,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/XOPAttachmentTest.java,118,,"        encrypt.setUserInfo(""16c73ab6-b892-458f-abf5-2f875f74882e"", ""security"");"
254953,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/XOPAttachmentTest.java,121,,"        encrypt.getParts().add(new WSEncryptionPart(""Body"", ""http://schemas.xmlsoap.org/soap/envelope/"", ""Content""));"
254954,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/XOPAttachmentTest.java,121,,"        encrypt.getParts().add(new WSEncryptionPart(""Body"", ""http://schemas.xmlsoap.org/soap/envelope/"", ""Content""));"
254955,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/XOPAttachmentTest.java,121,,"        encrypt.getParts().add(new WSEncryptionPart(""Body"", ""http://schemas.xmlsoap.org/soap/envelope/"", ""Content""));"
254956,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/XOPAttachmentTest.java,154,,"        cipherValueChild.setAttributeNS(null, ""href"", ""cid:"" + encryptedAttachments.get(0).getId());"
254957,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/XOPAttachmentTest.java,154,,"        cipherValueChild.setAttributeNS(null, ""href"", ""cid:"" + encryptedAttachments.get(0).getId());"
254958,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/XOPAttachmentTest.java,600,,"        config.put(WSHandlerConstants.SIG_PROP_FILE, ""crypto.properties"");"
254959,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/token/BSTKerberosTest.java,91,,"        bst.setToken(""12345678"".getBytes());"
254960,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/token/BSTKerberosTest.java,120,,"        bst.setID(""Id-"" + bst.hashCode());"
254961,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/token/BSTKerberosTest.java,266,,"        KeyGenerator keyGen = KeyGenerator.getInstance(""AES"");"
254962,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/token/ReferenceTest.java,89,,"                    ""foo"", ""bar"""
254963,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/token/ReferenceTest.java,89,,"                    ""foo"", ""bar"""
254964,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/message/token/SecurityTokenReferenceTest.java,97,,"        ref.setURI(""#123"");"
254965,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/misc/PrincipalTest.java,131,,"        assertTrue(principal.getName().contains(""uid=joe""));"
254966,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/misc/PrincipalTest.java,142,,"        callbackHandler.setIssuer(""www.example.com"");"
254967,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/misc/SecurityHeaderTest.java,44,,"        + ""xmlns:wsse=\""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd\"">"""
254968,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/misc/SecurityHeaderTest.java,45,,"        + ""</wsse:Security>"""
254969,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/saml/SamlAlgorithmSuiteTest.java,70,,"        callbackHandler.setIssuer(""www.example.com"");"
254970,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/saml/SamlAlgorithmSuiteTest.java,76,,"        samlAssertion.signAssertion(""16c73ab6-b892-458f-abf5-2f875f74882e"", ""security"", crypto, false);"
254971,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/saml/SamlAuthnTest.java,71,,"        callbackHandler.setIssuer(""www.example.com"");"
254972,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/saml/SamlConditionsTest.java,84,,"        callbackHandler.setIssuer(""www.example.com"");"
254973,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/saml/SamlConditionsTest.java,167,,"            LOG.debug(""SAML 2 Authn Assertion (sender vouches):"");"
254974,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/saml/SamlConditionsTest.java,177,,"            assertTrue(ex.getMessage().contains(""SAML token security failure""));"
254975,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/saml/SamlConditionsTest.java,415,,"        audiences.add(""http://apache.org/one"");"
254976,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/saml/SamlConditionsTest.java,416,,"        audiences.add(""http://apache.org/two"");"
254977,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/saml/SamlConditionsTest.java,480,,"        assertTrue(outputString.contains(""AudienceRestriction""));"
254978,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/saml/SamlNegativeTest.java,89,,"        keyStore.load(input, ""security"".toCharArray());"
254979,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/saml/SamlNegativeTest.java,112,,"        callbackHandler.setIssuer(""www.example.com"");"
254980,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/saml/SamlNegativeTest.java,170,,"        samlAssertion.signAssertion(""wss40_server"", ""security"", issuerCrypto, false);"
254981,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/saml/SamlReferenceTest.java,89,,"        keyStore.load(input, ""security"".toCharArray());"
254982,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/saml/SamlReferenceTest.java,108,,"    @SuppressWarnings(""unchecked"")"
254983,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/saml/SamlReferenceTest.java,113,,"        callbackHandler.setIssuer(""www.example.com"");"
254984,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/saml/SamlReferenceTest.java,127,,"                null, samlAssertion, crypto, ""16c73ab6-b892-458f-abf5-2f875f74882e"","
254985,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/saml/SamlReferenceTest.java,157,,"        assertEquals(""/SOAP-ENV:Envelope/SOAP-ENV:Body"", xpath);"
254986,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/saml/SamlReferenceTest.java,246,,"        samlAssertion.signAssertion(""wss40_server"", ""security"", issuerCrypto, false);"
254987,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/saml/SamlReferenceTest.java,253,,"        wsSign.setUserInfo(""wss40"", ""security"");"
254988,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/saml/SamlReferenceTest.java,254,,"        wsSign.setDigestAlgo(""http://www.w3.org/2001/04/xmlenc#sha256"");"
254989,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/saml/SamlReferenceTest.java,255,,"        wsSign.setSignatureAlgorithm(""http://www.w3.org/2001/04/xmldsig-more#rsa-sha256"");"
254990,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/saml/SamlReferenceTest.java,457,,"                ""add"", ""http://ws.apache.org/counter/counter_port_type"", ""Element"""
254991,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/saml/SamlReferenceTest.java,457,,"                ""add"", ""http://ws.apache.org/counter/counter_port_type"", ""Element"""
254992,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/saml/SamlReferenceTest.java,457,,"                ""add"", ""http://ws.apache.org/counter/counter_port_type"", ""Element"""
254993,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/saml/SamlReferenceTest.java,491,,"        assertEquals(""/SOAP-ENV:Envelope/SOAP-ENV:Body/add"", xpath);"
254994,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/saml/SamlTokenActionTest.java,68,,"        crypto = CryptoFactory.getInstance(""wss40.properties"");"
254995,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/saml/SamlTokenActionTest.java,79,,"        reqData.setUsername(""wss40"");"
254996,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/saml/SamlTokenActionTest.java,85,,"        samlCallbackHandler.setIssuer(""www.example.com"");"
254997,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/saml/SamlTokenCustomSignatureTest.java,92,,"        callbackHandler.setIssuer(""www.example.com"");"
254998,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/saml/SamlTokenCustomSignatureTest.java,247,,"        sign.setUserInfo(""16c73ab6-b892-458f-abf5-2f875f74882e"", ""security"");"
254999,./TargetProjects/ws-wss4j/ws-security-dom/src/test/java/org/apache/wss4j/dom/saml/SamlTokenHOKTest.java,76,,"        callbackHandler.setIssuer(""www.example.com"");"
