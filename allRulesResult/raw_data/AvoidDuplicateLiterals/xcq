68000,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestTypeFns.java,57,,"    doTypeOfTestSpecial(""a"", ""CURRENT_TIME"", ""TIME"");"
68001,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestTypeFns.java,58,,"    doTypeOfTestSpecial(""a"", ""CURRENT_TIMESTAMP"", ""TIMESTAMP"");"
68002,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestTypeFns.java,63,,"      doTypeOfTestSpecial(""CAST(a AS DECIMAL)"", ""1"", ""VARDECIMAL"");"
68003,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestTypeFns.java,99,,"    doSqlTypeOfTest(""INTEGER"");"
68004,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestTypeFns.java,206,,"    assertEquals(""NULLABLE"", result);"
68005,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/impl/TestTypeFns.java,335,,"        .baselineValues( ""VARCHAR"", ""NULLABLE"", ""UNION"")"
68006,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/registry/FunctionRegistryHolderTest.java,86,,"    assertEquals(""Version should have incremented by 1"", expectedVersion, registryHolder.getVersion());"
68007,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/expr/fn/registry/FunctionRegistryHolderTest.java,113,,"    assertEquals(""Version number should match"", expectedVersion, registryHolder.getVersion());"
68008,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestAggregateFunctions.java,103,,"        .baselineColumns(""cnt"")"
68009,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestAggregateFunctions.java,234,,"        .baselineColumns(""col"")"
68010,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestAggregateFunctions.java,244,,"        .baselineColumns(""col1"", ""col2"")"
68011,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestAggregateFunctions.java,244,,"        .baselineColumns(""col1"", ""col2"")"
68012,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestAggregateFunctions.java,284,,"                ""from cp.`employee.json`"")"
68013,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestAggregateFunctions.java,286,,"          .baselineColumns(""dec20"", ""dec6"", ""d"")"
68014,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestAggregateFunctions.java,286,,"          .baselineColumns(""dec20"", ""dec6"", ""d"")"
68015,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestAggregateFunctions.java,470,,"          .baselineValues(BigDecimal.valueOf(1), new BigDecimal(""1.000000""), new BigDecimal(""0.000000""),"
68016,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestAggregateFunctions.java,484,,"    String query = ""select "" +"
68017,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestAggregateFunctions.java,486,,"        ""from cp.`employee.json` where 1 = 0"";"
68018,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestAggregateFunctions.java,491,,"        .baselineColumns(""col1"", ""col2"", ""col3"")"
68019,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestAggregateFunctions.java,796,,"        "" select cnt "" +"
68020,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestAggregateFunctions.java,797,,"        "" from (select n_regionkey, count(*) cnt from cp.`tpch/nation.parquet` group by n_regionkey) "" +"
68021,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestAggregateFunctions.java,1069,,"              mapOf(""n_nationkey"", 0, ""n_name"", ""ALGERIA"","
68022,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestAggregateFunctions.java,1069,,"              mapOf(""n_nationkey"", 0, ""n_name"", ""ALGERIA"","
68023,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestAggregateFunctions.java,1070,,"                  ""n_regionkey"", 0, ""n_comment"", "" haggle. carefully final deposits detect slyly agai""),"
68024,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestAggregateFunctions.java,1070,,"                  ""n_regionkey"", 0, ""n_comment"", "" haggle. carefully final deposits detect slyly agai""),"
68025,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestCastEmptyStrings.java,51,,"    testCastOptionalString(""columns[0]"", ""int"", ""cp.`emptyStrings.csv`"", null, 1, 2);"
68026,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestCastEmptyStrings.java,51,,"    testCastOptionalString(""columns[0]"", ""int"", ""cp.`emptyStrings.csv`"", null, 1, 2);"
68027,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestCastFunctions.java,110,,"        .baselineColumns(""col1"", ""col2"")"
68028,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestCastFunctions.java,110,,"        .baselineColumns(""col1"", ""col2"")"
68029,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestCastFunctions.java,152,,"        run(""create table dfs.tmp.table_with_float as\n"" +"
68030,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestCastFunctions.java,162,,"        run(""drop table if exists dfs.tmp.table_with_float"");"
68031,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestCastFunctions.java,193,,"        run(""drop table if exists dfs.tmp.table_with_int"");"
68032,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestCastFunctions.java,499,,"        .baselineValues(new BigDecimal(""-100000000001.0000000000000000""), new BigDecimal(""1123.3000000000000000""),"
68033,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestCastFunctions.java,500,,"            new BigDecimal(""1123""), new BigDecimal(""-100000000001""))"
68034,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestDateFunctions.java,82,,"                                ""2008-02-24T12:00:00.000-08:00"","
68035,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestDateFunctions.java,83,,"                                ""2009-04-23T12:00:00.000-07:00"","
68036,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestDateFunctions.java,93,,"    testCommon(expectedResults, ""/functions/date/date_interval_arithmetic.json"", ""/test_simple_date.json"");"
68037,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestDateTruncFunctions.java,38,,"    final String query = ""SELECT "" +"
68038,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestDateTruncFunctions.java,49,,"        ""FROM sys.version"";"
68039,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestDateTruncFunctions.java,54,,"        .baselineColumns(""second"", ""minute"", ""hour"", ""day"", ""month"", ""year"", ""quarter"", ""decade"", ""century"", ""millennium"")"
68040,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestDateTruncFunctions.java,54,,"        .baselineColumns(""second"", ""minute"", ""hour"", ""day"", ""month"", ""year"", ""quarter"", ""decade"", ""century"", ""millennium"")"
68041,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestDateTruncFunctions.java,54,,"        .baselineColumns(""second"", ""minute"", ""hour"", ""day"", ""month"", ""year"", ""quarter"", ""decade"", ""century"", ""millennium"")"
68042,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestDateTruncFunctions.java,54,,"        .baselineColumns(""second"", ""minute"", ""hour"", ""day"", ""month"", ""year"", ""quarter"", ""decade"", ""century"", ""millennium"")"
68043,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestDateTruncFunctions.java,54,,"        .baselineColumns(""second"", ""minute"", ""hour"", ""day"", ""month"", ""year"", ""quarter"", ""decade"", ""century"", ""millennium"")"
68044,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestDateTruncFunctions.java,54,,"        .baselineColumns(""second"", ""minute"", ""hour"", ""day"", ""month"", ""year"", ""quarter"", ""decade"", ""century"", ""millennium"")"
68045,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestDateTruncFunctions.java,59,,"            DateUtility.parseLocalTime(""0:00:00.0""), // day"
68046,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestDateTruncFunctions.java,92,,"            DateUtility.parseLocalDate(""2011-02-03""), // seconds"
68047,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestDateTruncFunctions.java,274,,"            new Period(""P217Y7M"").normalizedStandard(), // seconds"
68048,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestDateTruncFunctions.java,283,,"            new Period(""PT0S"").normalizedStandard()) // millennium"
68049,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestMathFunctionsWithNanInf.java,33,,"      String table_name = ""nan_test.json"";"
68050,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestMathFunctionsWithNanInf.java,34,,"      String json = ""{\""nan_col\"":NaN, \""inf_col\"":Infinity}"";"
68051,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestMathFunctionsWithNanInf.java,36,,"      String[] columns = {""nan_col"", ""inf_col""};"
68052,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestMathFunctionsWithNanInf.java,36,,"      String[] columns = {""nan_col"", ""inf_col""};"
68053,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestMathFunctionsWithNanInf.java,461,,"      String json = ""[{\""nan_col\"":NaN, \""inf_col\"":Infinity},"" +"
68054,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestMathFunctionsWithNanInf.java,462,,"              ""{\""nan_col\"":5, \""inf_col\"":5}]"";"
68055,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestMathFunctionsWithNanInf.java,506,,"              ""{\""nan_col\"":5.0, \""inf_col\"":5.0}]"";"
68056,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestNewDateFunctions.java,76,,"        .baselineColumns(""EXPR$0"")"
68057,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestNewMathFunctions.java,182,,"        ""select "" +"
68058,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestNewMathFunctions.java,192,,"        ""from dfs.`data.json`"";"
68059,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestNewMathFunctions.java,193,,"    File file = new File(dirTestWatcher.getRootDir(), ""data.json"");"
68060,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestNewMathFunctions.java,201,,"              .baselineColumns(""pos_inf"", ""neg_inf"", ""nan"", ""num1"", ""num2"", ""num3"", ""num4"", ""num5"", ""num6"")"
68061,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestNewMathFunctions.java,201,,"              .baselineColumns(""pos_inf"", ""neg_inf"", ""nan"", ""num1"", ""num2"", ""num3"", ""num4"", ""num5"", ""num6"")"
68062,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestNewMathFunctions.java,201,,"              .baselineColumns(""pos_inf"", ""neg_inf"", ""nan"", ""num1"", ""num2"", ""num3"", ""num4"", ""num5"", ""num6"")"
68063,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestNewMathFunctions.java,201,,"              .baselineColumns(""pos_inf"", ""neg_inf"", ""nan"", ""num1"", ""num2"", ""num3"", ""num4"", ""num5"", ""num6"")"
68064,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestNewMathFunctions.java,335,,"        writer.write(groupFactory.newGroup().append(""val"", 0));"
68065,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestTimestampAddDiffFunctions.java,96,,"          ""FROM cp.`datetime.parquet` t"", qualifier);"
68066,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestVarArgFunctions.java,49,,"            ""from cp.`employee.json` limit 10"")"
68067,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestVarArgFunctions.java,52,,"        .baselineValues(""abcd"", ""Sheri Nowmer"")"
68068,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestVarArgFunctions.java,73,,"        .baselineValues(""HelloWorld!"", ""Sheri Nowmer"")"
68069,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestVarArgFunctions.java,190,,"        .baselineColumns(""ids"", ""names"", ""decimals"")"
68070,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestVarDecimalFunctions.java,57,,"        ""select\n"" +"
68071,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestVarDecimalFunctions.java,77,,"            new BigDecimal(""999999999999999999999999999.92345678912"")"
68072,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestVarDecimalFunctions.java,78,,"                .add(new BigDecimal(""0.32345678912345678912345678912345678912""))"
68073,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestVarDecimalFunctions.java,141,,"            ""cast('1.9999999999999999999999999999234567891' as DECIMAL(38, 37))\n"" +"
68074,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestVarDecimalFunctions.java,202,,"        .baselineValues(new BigDecimal(""1111""), new BigDecimal(""1234567.123456""),"
68075,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestVarDecimalFunctions.java,203,,"            new BigDecimal(""1502""), new BigDecimal(""0""), new BigDecimal(""987654""))"
68076,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestVarDecimalFunctions.java,485,,"            ""cast(i1 as DECIMAL(4, 0)) as s1,\n"" +"
68077,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestVarDecimalFunctions.java,492,,"        ""from ("" +"
68078,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestVarDecimalFunctions.java,524,,"                ""cast('999999999999999999999999999.92345678912' as DECIMAL(38, 11)) as i1,\n"" +"
68079,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestVarDecimalFunctions.java,525,,"                ""cast('0.32345678912345678912345678912345678912' as DECIMAL(38, 38)) as i2,\n"" +"
68080,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestVarDecimalFunctions.java,526,,"                ""cast('-1234567891234567891234567891234567.89' as DECIMAL(36, 2)) as i3,\n"" +"
68081,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestVarDecimalFunctions.java,527,,"                ""cast('0' as DECIMAL(36, 3)) as i4,\n"" +"
68082,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestVarDecimalFunctions.java,528,,"                ""cast('15.02' as DECIMAL(4, 2)) as i5,\n"" +"
68083,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/TestVarDecimalFunctions.java,539,,"            new BigDecimal(""-1234567891234567891234567891234567.89"")"
68084,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/testing/TestDateConversions.java,72,,"      .baselineColumns(""col1"", ""col2"")"
68085,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/testing/TestDateConversions.java,72,,"      .baselineColumns(""col1"", ""col2"")"
68086,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/testing/TestDateConversions.java,148,,"        + ""from dfs.`joda_postgres_date_time.json`"")"
68087,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/impl/testing/VarCharConcatFunctions.java,94,,"  @FunctionTemplate(name = ""concat_delim"","
68088,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/interp/ExpressionInterpreterTest.java,65,,"    final String[] colNames = {""col1""};"
68089,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/fn/interp/ExpressionInterpreterTest.java,68,,"    final String[] expectedFirstTwoValues = {""aaa"", ""null""};"
68090,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/impersonation/TestImpersonationDisabledWithMiniDFS.java,55,,"            ""UNION ALL (SELECT employee_id, full_name FROM cp.`employee.json`)"" +"
68091,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/impersonation/TestImpersonationMetadata.java,96,,"    createAndAddWorkspace(""drill_test_grp_1_700"", ""/drill_test_grp_1_700"", (short)0700, user1, group1, workspaces);"
68092,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/impersonation/TestImpersonationMetadata.java,150,,"      test(""SELECT * FROM "" + viewName + "" LIMIT 2"");"
68093,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/impersonation/TestImpersonationMetadata.java,221,,"    testCreateViewTestHelper(user1, viewSchema, ""view1"");"
68094,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/impersonation/TestImpersonationMetadata.java,243,,"      test(""USE "" + viewSchema);"
68095,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/impersonation/TestImpersonationMetadata.java,299,,"    testCreateTableTestHelper(user1, tableWS, ""table1"");"
68096,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/impersonation/TestImpersonationQueries.java,269,,"      test(""SELECT k FROM %s.%s.%s"", MINI_DFS_STORAGE_PLUGIN_NAME, ""tmp"", ""simple_seq_view"");"
68097,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/impersonation/TestInboundImpersonationPrivileges.java,85,,"      run(""user1_1"", user, false);"
68098,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/impersonation/TestInboundImpersonationPrivileges.java,94,,"    run(""user2_1"", ""user3_1"", true);"
68099,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/impersonation/TestInboundImpersonationPrivileges.java,94,,"    run(""user2_1"", ""user3_1"", true);"
68100,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/impersonation/TestInboundImpersonationPrivileges.java,97,,"    run(""user2_1"", ""user4_1"", false);"
68101,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/impersonation/TestInboundImpersonationPrivileges.java,124,,"    run(""user5_1"", ""user4_2"", true);"
68102,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/impersonation/TestInboundImpersonationPrivileges.java,125,,"    run(""user5_1"", ""user5_2"", true);"
68103,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/impersonation/TestInboundImpersonationPrivileges.java,127,,"    run(""user5_1"", ""user3_2"", false);"
68104,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/metastore/TestMetastoreWithEasyFormatPlugin.java,89,,"      .add(""o_orderkey"", TypeProtos.MinorType.INT)"
68105,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/metastore/TestMetastoreWithEasyFormatPlugin.java,90,,"      .add(""o_custkey"", TypeProtos.MinorType.INT)"
68106,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/metastore/TestMetastoreWithEasyFormatPlugin.java,93,,"      .add(""o_orderdate"", TypeProtos.MinorType.DATE)"
68107,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/metastore/TestMetastoreWithEasyFormatPlugin.java,96,,"      .add(""o_shippriority"", TypeProtos.MinorType.INT)"
68108,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/metastore/TestMetastoreWithEasyFormatPlugin.java,98,,"      .addNullable(""dir0"", TypeProtos.MinorType.VARCHAR)"
68109,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/metastore/TestMetastoreWithEasyFormatPlugin.java,99,,"      .addNullable(""dir1"", TypeProtos.MinorType.VARCHAR)"
68110,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/metastore/TestMetastoreWithEasyFormatPlugin.java,122,,"    String tableName = ""multilevel/csv"";"
68111,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/metastore/TestMetastoreWithEasyFormatPlugin.java,123,,"    TableInfo tableInfo = getTableInfo(tableName, ""default"", ""csv"");"
68112,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/metastore/TestMetastoreWithEasyFormatPlugin.java,123,,"    TableInfo tableInfo = getTableInfo(tableName, ""default"", ""csv"");"
68113,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/metastore/TestMetastoreWithEasyFormatPlugin.java,146,,"            .identifier(""1994"")"
68114,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/metastore/TestMetastoreWithEasyFormatPlugin.java,156,,"            new Path(tablePath, ""1994/Q1/orders_94_q1.csv""),"
68115,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/metastore/TestMetastoreWithEasyFormatPlugin.java,210,,"          .baselineColumns(""ok"", ""summary"")"
68116,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/metastore/TestMetastoreWithEasyFormatPlugin.java,211,,"          .baselineValues(true, String.format(""Collected / refreshed metadata for table [dfs.default.%s]"", tableName))"
68117,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/metastore/TestMetastoreWithEasyFormatPlugin.java,269,,"              .identifier(""1994/Q1"")"
68118,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/metastore/TestMetastoreWithEasyFormatPlugin.java,307,,"      run(""analyze table dfs.`%s` drop metadata if exists"", tableName);"
68119,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/metastore/TestMetastoreWithEasyFormatPlugin.java,321,,"        .add(""Description"", TypeProtos.MinorType.VARCHAR)"
68120,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/metastore/TestMetastoreWithEasyFormatPlugin.java,403,,"          .sqlQuery(""ANALYZE TABLE table(dfs.tmp.`%s` (schema=>%s)) REFRESH METADATA"", tableName, SCHEMA_STRING)"
68121,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/metastore/TestMetastoreWithEasyFormatPlugin.java,406,,"          .baselineValues(true, String.format(""Collected / refreshed metadata for table [dfs.tmp.%s]"", tableName))"
68122,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/metastore/TestMetastoreWithEasyFormatPlugin.java,466,,"      run(""analyze table dfs.tmp.`%s` drop metadata if exists"", tableName);"
68123,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/metastore/TestMetastoreWithEasyFormatPlugin.java,561,,"          .include(""usedMetastore=true"", ""Filter"", ""numFiles=1"")"
68124,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/metastore/TestMetastoreWithEasyFormatPlugin.java,687,,"            new Path(tablePath, ""1994/Q1/orders_94_q1.json""),"
68125,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/PartitionLimit/TestPartitionLimitBatch.java,154,,"      .addRow(1, 10, ""item1"")"
68126,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/PartitionLimit/TestPartitionLimitBatch.java,168,,"      .addRow(1, 100, ""item100"")"
68127,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/PartitionLimit/TestPartitionLimitBatch.java,169,,"      .addRow(1, 101, ""item101"")"
68128,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/PartitionLimit/TestPartitionLimitBatch.java,170,,"      .addRow(1, 102, ""item102"")"
68129,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/PartitionLimit/TestPartitionLimitBatch.java,171,,"      .addRow(2, 200, ""item200"")"
68130,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/PartitionLimit/TestPartitionLimitBatch.java,311,,"      .addRow(1, 103, ""item103"")"
68131,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/PartitionLimit/TestPartitionLimitBatch.java,313,,"      .addRow(2, 201, ""item201"")"
68132,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/PartitionLimit/TestPartitionLimitBatch.java,314,,"      .addRow(2, 202, ""item202"")"
68133,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/PartitionLimit/TestPartitionLimitBatch.java,687,,"      .addRow(1, 1001, ""item1001"")"
68134,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/PartitionLimit/TestPartitionLimitBatch.java,688,,"      .addRow(1, 1002, ""item1002"")"
68135,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/PartitionLimit/TestPartitionLimitBatch.java,689,,"      .addRow(1, 1003, ""item1003"")"
68136,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/PartitionLimit/TestPartitionLimitBatch.java,690,,"      .addRow(2, 2000, ""item2000"")"
68137,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/PartitionLimit/TestPartitionLimitBatch.java,691,,"      .addRow(2, 2001, ""item2001"")"
68138,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/PartitionLimit/TestPartitionLimitBatch.java,692,,"      .addRow(2, 2002, ""item2002"")"
68139,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/PartitionLimit/TestPartitionLimitBatch.java,696,,"      .addRow(3, 3001, ""item3001"")"
68140,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/PartitionLimit/TestPartitionLimitBatch.java,697,,"      .addRow(3, 3002, ""item3002"")"
68141,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/PartitionLimit/TestPartitionLimitBatch.java,698,,"      .addRow(3, 3003, ""item3003"")"
68142,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/PartitionLimit/TestPartitionLimitBatch.java,699,,"      .addRow(4, 4000, ""item4000"")"
68143,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/PartitionLimit/TestPartitionLimitBatch.java,700,,"      .addRow(4, 4001, ""item4001"")"
68144,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/PartitionLimit/TestPartitionLimitBatch.java,705,,"      .addRow(1, 10001, ""item10001"")"
68145,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/PartitionLimit/TestPartitionLimitBatch.java,706,,"      .addRow(1, 10002, ""item10002"")"
68146,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/TestConvertFunctions.java,162,,"        + "" union all """
68147,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/TestConvertFunctions.java,169,,"        .baselineColumns(""col1"", ""col2"", ""col3"")"
68148,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/TestConvertFunctions.java,169,,"        .baselineColumns(""col1"", ""col2"", ""col3"")"
68149,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/TestConvertFunctions.java,169,,"        .baselineColumns(""col1"", ""col2"", ""col3"")"
68150,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/TestConvertFunctions.java,170,,"        .baselineValues(""abc"", mapVal1, ""xyz"")"
68151,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/TestConvertFunctions.java,170,,"        .baselineValues(""abc"", mapVal1, ""xyz"")"
68152,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/TestDecimal.java,62,,"                            .read().replace(""#{TEST_FILE}"", ""/input_simple_decimal.json"")"
68153,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/TestDecimal.java,62,,"                            .read().replace(""#{TEST_FILE}"", ""/input_simple_decimal.json"")"
68154,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/TestLocalExchange.java,318,,"      if ( popObj.containsKey(""pop"") && popObj.get(""pop"").equals(""project"")) {"
68155,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/TestLocalExchange.java,325,,"              final String hashField = (String) expr.get(""expr"");"
68156,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/TestNestedDateTimeTimestamp.java,84,,"    String query = String.format(""select * from %s limit 1"", DATAFILE);"
68157,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/TestOrderedMuxExchange.java,87,,"            .optionSettingQueriesForTestQuery(""alter session set `planner.slice_target` = 10;"")"
68158,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/TestOrderedMuxExchange.java,89,,"            .optionSettingQueriesForBaseline(""alter session set `planner.enable_ordered_mux_exchange` = false"") // Use default option setting."
68159,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/TestStringFunctions.java,125,,"    final Object [] expected = new Object[] {""def"", ""abcdef"", ""dabc"", """", """", """"};"
68160,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/TestStringFunctions.java,137,,"    final Object [] expected = new Object[] {""aABABcdf"", ""ABABbABbcdf"", ""aababcdf"", ""acdf"", ""ABCD"", ""abc""};"
68161,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/TopN/TestTopNEmitOutcome.java,59,,"      Lists.newArrayList(ordering(""id_left"", RelFieldCollation.Direction.ASCENDING,"
68162,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/TopN/TestTopNEmitOutcome.java,80,,"      .addRow(2, 20, ""item2"")"
68163,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/TopN/TestTopNEmitOutcome.java,81,,"      .addRow(13, 130, ""item13"")"
68164,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/TopN/TestTopNEmitOutcome.java,82,,"      .addRow(4, 40, ""item4"")"
68165,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/TopN/TestTopNEmitOutcome.java,241,,"      .addRow(3, 30, ""item3"")"
68166,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/TopN/TestTopNEmitOutcome.java,245,,"      .addRow(1, 10, ""item1"")"
68167,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/TopN/TestTopNEmitOutcome.java,506,,"      .addRow(17, 170, ""item17"")"
68168,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/TopN/TestTopNSchemaChanges.java,58,,"    BufferedWriter writer = new BufferedWriter(new FileWriter(new File(tableDir, ""d1.json"")));"
68169,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/TopN/TestTopNSchemaChanges.java,71,,"      .optionSettingQueriesForTestQuery(""alter session set `exec.enable_union_type` = true"")"
68170,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/agg/TestAggWithAnyValue.java,52,,"      StreamingAggregate aggConf = new StreamingAggregate(null, parseExprs(""age.`max`"", ""age""), parseExprs(""any_value(a)"", ""any_a""));"
68171,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/agg/TestAggWithAnyValue.java,52,,"      StreamingAggregate aggConf = new StreamingAggregate(null, parseExprs(""age.`max`"", ""age""), parseExprs(""any_value(a)"", ""any_a""));"
68172,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/agg/TestHashAggEmitOutcome.java,236,,"    String[] inp2_3 = {""item2"", ""item2"", ""item13"", ""item13"", ""item4""};"
68173,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/agg/TestHashAggEmitOutcome.java,236,,"    String[] inp2_3 = {""item2"", ""item2"", ""item13"", ""item13"", ""item4""};"
68174,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/agg/TestHashAggEmitOutcome.java,236,,"    String[] inp2_3 = {""item2"", ""item2"", ""item13"", ""item13"", ""item4""};"
68175,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/agg/TestHashAggEmitOutcome.java,306,,"    String[] inp2_3 = {""item2"", ""item3"", ""item3"", ""item3"", ""item3"", ""item3"", ""item3"", ""item3"", ""item3"", ""item3"", ""item3"", ""item2""};"
68176,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/agg/TestHashAggEmitOutcome.java,308,,"    String[] exp1_1 = {""item1""};"
68177,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/agg/TestHashAggEmitOutcome.java,427,,"    String[] inp2_3 = {""item7"", ""item1"", ""item7"", ""item3""};"
68178,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/agg/TestStreamingAggEmitOutcome.java,53,,"        .add(""name"", TypeProtos.MinorType.VARCHAR)"
68179,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/agg/TestStreamingAggEmitOutcome.java,54,,"        .addNullable(""total_sum"", TypeProtos.MinorType.BIGINT)"
68180,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/agg/TestStreamingAggEmitOutcome.java,79,,"      parseExprs(""name_left"", ""name""),"
68181,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/agg/TestStreamingAggEmitOutcome.java,80,,"      parseExprs(""sum(id_left+cost_left)"", ""total_sum""));"
68182,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/agg/TestStreamingAggEmitOutcome.java,100,,"      .addRow(13, 130, ""item13"")"
68183,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/agg/TestStreamingAggEmitOutcome.java,102,,"      .addRow(2, 20, ""item2"")"
68184,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/agg/TestStreamingAggEmitOutcome.java,104,,"      .addRow(4, 40, ""item4"")"
68185,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/agg/TestStreamingAggEmitOutcome.java,108,,"      .addRow(""item1"", (long)11)"
68186,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/agg/TestStreamingAggEmitOutcome.java,281,,"      .addRow(3, 30, ""item3"")"
68187,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/agg/TestStreamingAggEmitOutcome.java,364,,"      .addRow(5, 50, ""item5"")"
68188,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/agg/TestStreamingAggEmitOutcome.java,550,,"      .add(""total_count"", TypeProtos.MinorType.BIGINT)"
68189,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/agg/TestStreamingAggEmitOutcome.java,578,,"      parseExprs(""name_left"", ""name"", ""id_left"", ""id""),"
68190,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/agg/TestStreamingAggEmitOutcome.java,756,,"      .addRow(130, 1300, ""item130"")"
68191,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/agg/TestStreamingAggEmitOutcome.java,763,,"      .addRow(7, 70, ""item7"")"
68192,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/common/HashPartitionTest.java,77,,"          .addRow(2, ""blue"")"
68193,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/flatten/TestFlatten.java,88,,"        .createFiles(1, numCopies, ""json"");"
68194,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/flatten/TestFlatten.java,91,,"        mapOf(""uid"", 1l,"
68195,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/flatten/TestFlatten.java,92,,"            ""lst_lst_0"", listOf(1l, 2l, 3l, 4l, 5l),"
68196,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/flatten/TestFlatten.java,93,,"            ""lst_lst_1"", listOf(2l, 3l, 4l, 5l, 6l),"
68197,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/flatten/TestFlatten.java,94,,"            ""lst_lst"", listOf("
68198,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/flatten/TestFlatten.java,127,,"              ""list_col"", listOf(10,9),"
68199,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/flatten/TestFlatten.java,128,,"              ""nested_list_col"",listOf("
68200,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/flatten/TestFlatten.java,195,,"        mapOf(""int_list"", inputList)"
68201,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/JoinTestBase.java,42,,"      String.format(""alter session set `%s` = false"", PlannerSettings.HASHJOIN.getOptionName());"
68202,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestHashJoinJPPD.java,43,,"    BloomFilterDef bloomFilterDef = new BloomFilterDef(numBytes, true, ""lft"", ""rgt"");"
68203,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestHashJoinJPPD.java,43,,"    BloomFilterDef bloomFilterDef = new BloomFilterDef(numBytes, true, ""lft"", ""rgt"");"
68204,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestHashJoinJPPDCorrectness.java,92,,"      .optionSettingQueriesForTestQuery(ALTER_RUNTIME_FILTER_ENABLE_AND_WAIT_OPTION_COMMAND, ""true"", ""true"", 6000)"
68205,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestHashJoinJPPDCorrectness.java,94,,"      .optionSettingQueriesForBaseline(ALTER_RUNTIME_FILTER_ENABLE_AND_WAIT_OPTION_COMMAND, ""false"", ""false"", 1)"
68206,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestHashJoinJPPDCorrectness.java,104,,"    String testAndBaselineQuery = ""SELECT count(*) FROM dfs.`tpchmulti/nation` l, dfs.`tpchmulti/region/` r where "" +"
68207,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestHashJoinJPPDCorrectness.java,105,,"      ""l.n_regionkey = r.r_regionkey and r.r_name = 'AMERICA'"";"
68208,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestHashJoinSpill.java,40,,"      Lists.newArrayList(joinCond(""lft"", ""EQUALS"", ""rgt"")), JoinRelType.INNER, null);"
68209,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestHashJoinSpill.java,40,,"      Lists.newArrayList(joinCond(""lft"", ""EQUALS"", ""rgt"")), JoinRelType.INNER, null);"
68210,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestJoinEmptyDirTable.java,45,,"      String query = String.format(""select t1.`employee_id`, t1.`full_name`, t2.`employee_id`, t2.`full_name` "" +"
68211,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestJoinEmptyDirTable.java,52,,"      assertEquals(""Number of output rows"", expectedRecordCount, actualRecordCount);"
68212,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestLateralJoinCorrectness.java,104,,"      .add(""id_left"", TypeProtos.MinorType.INT)"
68213,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestLateralJoinCorrectness.java,105,,"      .add(""cost_left"", TypeProtos.MinorType.INT)"
68214,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestLateralJoinCorrectness.java,106,,"      .add(""name_left"", TypeProtos.MinorType.VARCHAR)"
68215,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestLateralJoinCorrectness.java,112,,"      .add(""id_right"", TypeProtos.MinorType.INT)"
68216,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestLateralJoinCorrectness.java,113,,"      .add(""cost_right"", TypeProtos.MinorType.INT)"
68217,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestLateralJoinCorrectness.java,114,,"      .add(""name_right"", TypeProtos.MinorType.VARCHAR)"
68218,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestLateralJoinCorrectness.java,130,,"      .addRow(1, 10, ""item1"")"
68219,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestLateralJoinCorrectness.java,450,,"      .addRow(1, 4, 41, ""item41"")"
68220,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestLateralJoinCorrectness.java,451,,"      .addRow(1, 5, 51, ""item51"")"
68221,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestLateralJoinCorrectness.java,542,,"      .addRow(2, 20, ""item20"")"
68222,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestLateralJoinCorrectness.java,1428,,"      .addRow(2, 6, 60, ""item61"")"
68223,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestLateralJoinCorrectness.java,1429,,"      .addRow(2, 7, 70, ""item71"")"
68224,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestLateralJoinCorrectness.java,1430,,"      .addRow(2, 8, 80, ""item81"")"
68225,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestLateralJoinCorrectness.java,1807,,"      .addRow(6, 60, ""item6"")"
68226,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestLateralJoinCorrectness.java,2055,,"      .add(""id_left_new"", TypeProtos.MinorType.INT)"
68227,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestLateralJoinCorrectness.java,2056,,"      .add(""cost_left_new"", TypeProtos.MinorType.INT)"
68228,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestLateralJoinCorrectness.java,2057,,"      .add(""name_left_new"", TypeProtos.MinorType.VARCHAR)"
68229,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestLateralJoinCorrectness.java,2073,,"      .addRow(100, ""100"", ""item100"")"
68230,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestLateralJoinCorrectness.java,2073,,"      .addRow(100, ""100"", ""item100"")"
68231,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestLateralJoinCorrectnessBatchProcessing.java,146,,"      .addRow(1, 10, ""item1"")"
68232,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestLateralJoinCorrectnessBatchProcessing.java,147,,"      .addRow(2, 20, ""item2"")"
68233,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestLateralJoinCorrectnessBatchProcessing.java,148,,"      .addRow(3, 30, ""item3"")"
68234,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestLateralJoinCorrectnessBatchProcessing.java,149,,"      .addRow(4, 40, ""item4"")"
68235,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestLateralJoinCorrectnessBatchProcessing.java,153,,"      .addRow(1, 11, 110, ""item11"")"
68236,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestLateralJoinCorrectnessBatchProcessing.java,154,,"      .addRow(2, 22, 220, ""item22"")"
68237,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestLateralJoinCorrectnessBatchProcessing.java,155,,"      .addRow(3, 33, 330, ""item33"")"
68238,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestLateralJoinCorrectnessBatchProcessing.java,156,,"      .addRow(4, 44, 440, ""item44"")"
68239,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestLateralJoinCorrectnessBatchProcessing.java,458,,"      .addRow(4, 44, 440, ""item44_1"")"
68240,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestLateralJoinCorrectnessBatchProcessing.java,459,,"      .addRow(4, 44, 440, ""item44_2"")"
68241,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestLateralJoinCorrectnessBatchProcessing.java,589,,"      .addRow(3, 33, 330, ""item33_1"")"
68242,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestLateralJoinCorrectnessBatchProcessing.java,590,,"      .addRow(3, 33, 330, ""item33_2"")"
68243,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestMergeJoinAdvanced.java,133,,"      leftWriter.write(String.format(""{ \""k\"" : %d , \""v\"": %d }"", 10000, i));"
68244,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestMergeJoinAdvanced.java,139,,"      rightWriter.write(String.format(""{ \""k1\"" : %d , \""v1\"": %d }"", 10000, i));"
68245,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestMergeJoinAdvanced.java,166,,"    testMultipleBatchJoin(1000L, 5000L, ""inner"", 5000L * 1000L);"
68246,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestMergeJoinWithSchemaChanges.java,66,,"    BufferedWriter writer = new BufferedWriter(new FileWriter(new File(leftDir, ""l1.json"")));"
68247,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestMergeJoinWithSchemaChanges.java,68,,"      writer.write(String.format(""{ \""kl\"" : %d , \""vl\"": %d }\n"", i, i));"
68248,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestMergeJoinWithSchemaChanges.java,78,,"    writer = new BufferedWriter(new FileWriter(new File(rightDir, ""r1.json"")));"
68249,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestMergeJoinWithSchemaChanges.java,90,,"    String query = String.format(""select * from dfs.`%s` L %s join dfs.`%s` R on L.kl=R.kr"","
68250,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestMergeJoinWithSchemaChanges.java,91,,"      LEFT_DIR, ""inner"", RIGHT_DIR);"
68251,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestMergeJoinWithSchemaChanges.java,95,,"      .optionSettingQueriesForTestQuery(""alter session set `planner.enable_hashjoin` = false; alter session set `exec.enable_union_type` = true"")"
68252,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestNestedLoopJoin.java,45,,"  private static final String testNlJoinExists_1 = ""select r_regionkey from cp.`tpch/region.parquet` """
68253,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/join/TestSemiJoin.java,43,,"      assertTrue(queryPlan.contains(""semi-join: =[true]""));"
68254,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/lateraljoin/TestE2EUnnestAndLateral.java,45,,"    dirTestWatcher.copyResourceToRoot(Paths.get(""lateraljoin"", ""multipleFiles"", regularTestFile_1));"
68255,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/lateraljoin/TestE2EUnnestAndLateral.java,45,,"    dirTestWatcher.copyResourceToRoot(Paths.get(""lateraljoin"", ""multipleFiles"", regularTestFile_1));"
68256,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/lateraljoin/TestE2EUnnestAndLateral.java,60,,"    String sql = ""SELECT customer.c_name, customer.c_address, orders.o_id, orders.o_amount "" +"
68257,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/lateraljoin/TestE2EUnnestAndLateral.java,61,,"      ""FROM cp.`lateraljoin/nested-customer.parquet` customer, LATERAL "" +"
68258,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/lateraljoin/TestE2EUnnestAndLateral.java,84,,"    runAndLog(""alter session set `planner.enable_topn`=false"");"
68259,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/lateraljoin/TestE2EUnnestAndLateral.java,95,,"         .baselineColumns(""c_name"", ""o_id"", ""o_amount"")"
68260,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/lateraljoin/TestE2EUnnestAndLateral.java,95,,"         .baselineColumns(""c_name"", ""o_id"", ""o_amount"")"
68261,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/lateraljoin/TestE2EUnnestAndLateral.java,95,,"         .baselineColumns(""c_name"", ""o_id"", ""o_amount"")"
68262,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/lateraljoin/TestE2EUnnestAndLateral.java,96,,"         .baselineValues(""customer1"", 3.0,  294.5)"
68263,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/lateraljoin/TestE2EUnnestAndLateral.java,214,,"        ""cp.`lateraljoin/nested-customer.parquet` c,"" +"
68264,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/lateraljoin/TestE2EUnnestAndLateral.java,216,,"        ""limit 1"";"
68265,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/lateraljoin/TestE2EUnnestAndLateral.java,223,,"            TestBuilder.mapOf(""i_name"", ""paper towel"","
68266,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/lateraljoin/TestE2EUnnestAndLateral.java,311,,"    String sql = ""SELECT customer.c_name, customer.c_address, orders.o_orderkey, orders.o_totalprice "" +"
68267,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/lateraljoin/TestE2EUnnestAndLateral.java,312,,"      ""FROM dfs.`lateraljoin/multipleFiles` customer, LATERAL "" +"
68268,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/lateraljoin/TestLateralPlans.java,57,,"    PlanTestBase.testPlanMatchingPatterns(sql, new String[]{""column excluded from output: =\\[\\`orders\\`\\]""},"
68269,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/lateraljoin/TestLateralPlans.java,63,,"        .baselineColumns(""c_name"", ""o_shop"")"
68270,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/lateraljoin/TestLateralPlans.java,113,,"        .baselineColumns(""c_name"", ""c_phone"")"
68271,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/lateraljoin/TestLateralPlans.java,215,,"        "" lateral (select t2.ord.items as items from unnest(t.orders) t2(ord)) d1,"" +"
68272,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/lateraljoin/TestLateralPlans.java,219,,"        "" inner join (select c_name, f, flatten(t1.f.items) from (select c_name, flatten(orders) as f from cp.`lateraljoin/nested-customer.parquet`) as t1 ) "" +"
68273,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/lateraljoin/TestLateralPlans.java,334,,"    String sql = ""select d1.totalprice from dfs.`lateraljoin/multipleFiles` t,"" +"
68274,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/lateraljoin/TestLateralPlans.java,344,,"      assertFalse(rightChild.contains(""Exchange""));"
68275,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/limit/TestEarlyLimit0Optimization.java,94,,"        .baselineValues(""employee_id"", ""INTEGER"", ""YES"")"
68276,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/limit/TestEarlyLimit0Optimization.java,97,,"        .baselineValues(""department_id"", ""BIGINT"", ""YES"")"
68277,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/limit/TestEarlyLimit0Optimization.java,122,,"    @SuppressWarnings(""unchecked"")"
68278,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/limit/TestEarlyLimit0Optimization.java,157,,"    return ""SELECT "" +"
68279,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/limit/TestLimitBatchEmitOutcome.java,54,,"    @SuppressWarnings(""resource"")"
68280,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/limit/TestLimitOperator.java,56,,"      ""[{\""a\"": 5, \""b\"" : 1 }]"","
68281,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/limit/TestLimitOperator.java,57,,"      ""[{\""a\"": 5, \""b\"" : 5},{\""a\"": 3, \""b\"" : 8}]"");"
68282,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/project/TestProjectEmitOutcome.java,55,,"    final Project projectConf = new Project(parseExprs(""id_left+5"", ""id_left""), null);"
68283,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/project/TestProjectEmitOutcome.java,55,,"    final Project projectConf = new Project(parseExprs(""id_left+5"", ""id_left""), null);"
68284,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/TestColumnsArray.java,148,,"      .addRow(new Object[] {new String[] {""fred"", ""flintstone""}})"
68285,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/TestColumnsArray.java,148,,"      .addRow(new Object[] {new String[] {""fred"", ""flintstone""}})"
68286,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/TestColumnsArray.java,149,,"      .addRow(new Object[] {new String[] {""barney"", ""rubble""}});"
68287,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/TestColumnsArray.java,149,,"      .addRow(new Object[] {new String[] {""barney"", ""rubble""}});"
68288,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/TestColumnsArray.java,156,,"        .addRow(""z.csv"", new String[] {""fred"", ""flintstone""}, ""x"")"
68289,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/TestFileScanFramework.java,205,,"      writeRow(writer, offset + 10, ""fred"");"
68290,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/TestFileScanFramework.java,206,,"      writeRow(writer, offset + 20, ""wilma"");"
68291,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/TestFileScanFramework.java,372,,"    builder.setProjection(""a"", ""b"", ""filename"", ""suffix"");"
68292,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/TestFileScanFramework.java,372,,"    builder.setProjection(""a"", ""b"", ""filename"", ""suffix"");"
68293,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/TestImplicitColumnParser.java,60,,"    Path filePath = new Path(""hdfs:///w/x/y/z.csv"");"
68294,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/TestImplicitColumnProjection.java,72,,"      Path root = new Path(""hdfs://a/b"");"
68295,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/TestScanOrchestratorEarlySchema.java,97,,"      .addRow(1, ""fred"")"
68296,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/TestScanOrchestratorEarlySchema.java,98,,"      .addRow(2, ""wilma"");"
68297,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/TestScanOrchestratorEarlySchema.java,116,,"      .addRow(3, ""barney"")"
68298,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/TestScanOrchestratorEarlySchema.java,117,,"      .addRow(4, ""betty"");"
68299,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/TestScanOrchestratorEarlySchema.java,732,,"          .addRow(50, ""dino"")"
68300,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/TestScanOrchestratorImplicitColumns.java,84,,"        Paths.get(""multilevel"", ""csv"", ""1994"", ""Q1"", ""orders_94_q1.csv""),"
68301,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/TestScanOrchestratorImplicitColumns.java,84,,"        Paths.get(""multilevel"", ""csv"", ""1994"", ""Q1"", ""orders_94_q1.csv""),"
68302,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/TestScanOrchestratorImplicitColumns.java,84,,"        Paths.get(""multilevel"", ""csv"", ""1994"", ""Q1"", ""orders_94_q1.csv""),"
68303,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/TestScanOrchestratorImplicitColumns.java,84,,"        Paths.get(""multilevel"", ""csv"", ""1994"", ""Q1"", ""orders_94_q1.csv""),"
68304,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/TestScanOrchestratorImplicitColumns.java,85,,"        Paths.get(""x"", ""y"", ""z.csv""));"
68305,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/TestScanOrchestratorImplicitColumns.java,128,,"      .addRow(1, ""fred"")"
68306,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/TestScanOrchestratorImplicitColumns.java,129,,"      .addRow(2, ""wilma"");"
68307,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/TestScanOrchestratorImplicitColumns.java,246,,"    builder.projection(RowSetTestUtils.projectList(""a"", ""b"", ""dir0"", ""suffix""));"
68308,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/TestScanOrchestratorImplicitColumns.java,246,,"    builder.projection(RowSetTestUtils.projectList(""a"", ""b"", ""dir0"", ""suffix""));"
68309,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/convert/TestDirectConverter.java,159,,"        .add(""int"", MinorType.INT)"
68310,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/convert/TestDirectConverter.java,278,,"        .add(""dec"", MinorType.VARDECIMAL, 10, 0)"
68311,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/convert/TestDirectConverter.java,475,,"        .add(""date"", MinorType.DATE)"
68312,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/convert/TestDirectConverter.java,476,,"        .add(""time"", MinorType.TIME)"
68313,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/convert/TestDirectConverter.java,576,,"        .add(""str"", MinorType.VARCHAR)"
68314,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/convert/TestDirectConverter.java,884,,"        .add(""col"", MinorType.INT, mode)"
68315,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/project/TestNullColumnLoader.java,81,,"    defns.add(makeNullCol(""unspecified"", null));"
68316,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/project/TestNullColumnLoader.java,82,,"    defns.add(makeNullCol(""nullType"", Types.optional(MinorType.NULL)));"
68317,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/project/TestNullColumnLoader.java,83,,"    defns.add(makeNullCol(""specifiedOpt"", Types.optional(MinorType.VARCHAR)));"
68318,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/project/TestNullColumnLoader.java,84,,"    defns.add(makeNullCol(""specifiedReq"", Types.required(MinorType.VARCHAR)));"
68319,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/project/TestNullColumnLoader.java,85,,"    defns.add(makeNullCol(""specifiedArray"", Types.repeated(MinorType.VARCHAR)));"
68320,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/project/TestNullColumnLoader.java,162,,"    defns.add(makeNullCol(""str"", Types.required(MinorType.VARCHAR), ""foo""));"
68321,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/project/TestNullColumnLoader.java,205,,"    defns.add(makeNullCol(""req""));"
68322,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/project/TestNullColumnLoader.java,206,,"    defns.add(makeNullCol(""opt""));"
68323,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/project/TestNullColumnLoader.java,207,,"    defns.add(makeNullCol(""rep""));"
68324,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/project/TestNullColumnLoader.java,208,,"    defns.add(makeNullCol(""unk""));"
68325,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/project/TestNullColumnLoader.java,346,,"    outputSchema.metadata(""intReq"").setDefaultValue(""10"");"
68326,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/project/TestNullColumnLoader.java,347,,"    outputSchema.metadata(""strReq"").setDefaultValue(""foo"");"
68327,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/project/TestNullColumnLoader.java,348,,"    outputSchema.metadata(""intOpt"").setDefaultValue(""20"");"
68328,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/project/TestNullColumnLoader.java,349,,"    outputSchema.metadata(""strOpt"").setDefaultValue(""bar"");"
68329,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/project/TestRowBatchMerger.java,105,,"          .addRow(""barney"", 10)"
68330,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/project/TestRowBatchMerger.java,106,,"          .addRow(""wilma"", 20)"
68331,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/project/TestRowBatchMerger.java,117,,"          .addRow(1, ""foo.csv"")"
68332,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/project/TestRowBatchMerger.java,230,,"    resolvedTuple.add(resolvedTuple.nullBuilder().add(""null1""));"
68333,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/project/TestRowBatchMerger.java,231,,"    resolvedTuple.add(resolvedTuple.nullBuilder().add(""null2"", Types.optional(MinorType.VARCHAR)));"
68334,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/v3/file/TestFileDescrip.java,88,,"    Path root = new Path(""file:///a/b"");"
68335,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/v3/file/TestFileScan.java,185,,"    builder.setProjection(""a"", ""b"", ""filename"", ""suffix"");"
68336,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/v3/file/TestFileScan.java,185,,"    builder.setProjection(""a"", ""b"", ""filename"", ""suffix"");"
68337,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/v3/file/TestFileScanLifecycle.java,100,,"        .addRow(MOCK_FILE_NAME, 10, ""fred"")"
68338,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/v3/file/TestFileScanLifecycle.java,101,,"        .addRow(MOCK_FILE_NAME, 20, ""wilma"")"
68339,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/v3/file/TestImplicitColumnLoader.java,160,,"    testFixture.fileDescrip.setModTime(""123456789"");"
68340,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/v3/file/TestImplicitColumnResolver.java,282,,"        .add(""myFqn"", MinorType.VARCHAR)"
68341,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/v3/file/TestImplicitColumnResolver.java,287,,"        .addNullable(""myDir"", MinorType.VARCHAR)"
68342,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/v3/file/TestImplicitColumnResolver.java,373,,"      assertTrue(e.getMessage().contains(""wrong type""));"
68343,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/v3/lifecycle/BaseTestScanLifecycle.java,120,,"      writer.addRow(offset + 20, ""wilma"");"
68344,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/v3/lifecycle/TestMissingColumnLoader.java,64,,"        .addDynamic(""unspecified"")"
68345,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/v3/lifecycle/TestMissingColumnLoader.java,169,,"    missingCols.metadata(""str"").setDefaultValue(""foo"");"
68346,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/v3/lifecycle/TestOutputBatchBuilder.java,51,,"      .addRow(""barney"", 10)"
68347,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/v3/lifecycle/TestOutputBatchBuilder.java,52,,"      .addRow(""wilma"", 20)"
68348,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/v3/lifecycle/TestOutputBatchBuilder.java,66,,"      .addRow(1, ""foo.csv"")"
68349,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/v3/lifecycle/TestOutputBatchBuilder.java,150,,"        .addRow(""barney"", mapValue(1, ""betty""))"
68350,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/v3/lifecycle/TestOutputBatchBuilder.java,151,,"        .addRow(""fred"", mapValue(2, ""wilma""))"
68351,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/v3/lifecycle/TestReaderErrors.java,44,,"    builder.errorContext(b -> b.addContext(""Scan context""));"
68352,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/v3/lifecycle/TestReaderErrors.java,59,,"      assertTrue(msg.contains(""My custom context""));"
68353,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/v3/lifecycle/TestScanLifecycleTwoReaders.java,216,,"      assertTrue(e.getMessage().contains(""conflict""));"
68354,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/v3/lifecycle/TestScanLifecycleTwoReaders.java,251,,"        .addRow(102, ""betty"", 1002)"
68355,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/v3/schema/TestProjectionParser.java,144,,"    ProjectedColumn map = (ProjectedColumn) projSet.metadata(""map"");"
68356,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/v3/schema/TestProjectionParser.java,302,,"        RowSetTestUtils.projectList(""a[1]"", ""a[3]""));"
68357,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/v3/schema/TestScanSchemaTrackerMaps.java,77,,"        .projection(RowSetTestUtils.projectList(""a"", ""m.x"", ""m""));"
68358,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/v3/schema/TestSchemaTrackerInputSchema.java,186,,"      assertTrue(e.getMessage().contains(""not compatible""));"
68359,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/v3/schema/TestSchemaTrackerInputSchema.java,304,,"        RowSetTestUtils.projectList(""a"", ""m.x"", ""m.y""),"
68360,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/v3/schema/TestSchemaTrackerInputSchema.java,304,,"        RowSetTestUtils.projectList(""a"", ""m.x"", ""m.y""),"
68361,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/scan/v3/schema/TestSchemaTrackerInputSchema.java,516,,"        RowSetTestUtils.projectList(""a"", ""m.x"", ""m.y"", ""m.m2.p"", ""m.m2.q""),"
68362,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/svremover/TestSVRemoverIterOutcome.java,164,,"      .addSelection(true, 1, 101, ""item101"")"
68363,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/svremover/TestSVRemoverIterOutcome.java,166,,"      .addSelection(true, 1, 103, ""item103"")"
68364,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/svremover/TestSVRemoverIterOutcome.java,168,,"      .addSelection(true, 2, 201, ""item201"")"
68365,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/svremover/TestSVRemoverIterOutcome.java,169,,"      .addSelection(true, 2, 202, ""item202"")"
68366,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/unnest/TestUnnestCorrectness.java,88,,"            .addArray(""unnestColumn"", TypeProtos.MinorType.INT)"
68367,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/unnest/TestUnnestCorrectness.java,101,,"      fail(""Failed due to exception: "" + e.getMessage());"
68368,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/unnest/TestUnnestCorrectness.java,118,,"        .add(""someColumn"", TypeProtos.MinorType.INT)"
68369,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/unnest/TestUnnestWithLateralCorrectness.java,94,,"            .add(""rowNumber"", TypeProtos.MinorType.INT)"
68370,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/unnest/TestUnnestWithLateralCorrectness.java,95,,"            .addArray(""unnestColumn"", TypeProtos.MinorType.INT)"
68371,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/unnest/TestUnnestWithLateralCorrectness.java,111,,"      fail(""Failed due to exception: "" + e.getMessage());"
68372,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/unnest/TestUnnestWithLateralCorrectness.java,127,,"        .add(""someColumn"", TypeProtos.MinorType.INT)"
68373,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/unnest/TestUnnestWithLateralCorrectness.java,653,,"                    + ""]"" + "": "" + baseline[vectorIndex][valueIndex] + ""   VV.getObject(valueIndex): "" + val);"
68374,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/unnest/TestUnnestWithLateralCorrectness.java,716,,"          .addArray(""colB"", TypeProtos.MinorType.VARCHAR)"
68375,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/window/TestWindowFrame.java,123,,"    final String table = ""dfs.`window/b4.p4`"";"
68376,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestCorruptParquetDateCorrection.java,127,,"      for (String selection : new String[]{""*"", ""date_col""}) {"
68377,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestParquetWriter.java,188,,"    test(""use dfs.tmp"");"
68378,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestParquetWriter.java,201,,"    runTestAndValidate(allTypesSelection, ""*"", allTypesTable, ""donuts_json"");"
68379,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestParquetWriter.java,262,,"    String selection = ""L_ORDERKEY, L_PARTKEY, L_SUPPKEY, L_LINENUMBER, L_QUANTITY, L_EXTENDEDPRICE, L_DISCOUNT, L_TAX, "" +"
68380,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestParquetWriter.java,330,,"    String inputTable = ""cp.`tpch/supplier.parquet`"";"
68381,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestParquetWriter.java,392,,"  @Ignore(""Test file not available"")"
68382,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestParquetWriter.java,476,,"    String query = ""select "" + selection + "" from "" + table;"
68383,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestParquetWriter.java,510,,"  @Ignore(""Binary file too large for version control"")"
68384,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestParquetWriter.java,647,,"    test(""create table %s as "" +"
68385,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestParquetWriter.java,775,,"    compareParquetReadersColumnar(""field_impala_ts"", ""cp.`parquet/int96_impala_1.parquet`"");"
68386,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestParquetWriter.java,775,,"    compareParquetReadersColumnar(""field_impala_ts"", ""cp.`parquet/int96_impala_1.parquet`"");"
68387,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestParquetWriter.java,801,,"              ""alter session set `%s` = true"", ExecConstants.PARQUET_READER_INT96_AS_TIMESTAMP)"
68388,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestParquetWriter.java,910,,"        ""c_varchar, c_integer, c_bigint, c_float, c_double, c_date, c_time, c_timestamp, c_boolean"","
68389,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestParquetWriter.java,1023,,"          ""create table dfs.tmp.%s as\n"" +"
68390,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestParquetWriter.java,1024,,"              ""select cast('123456.789' as decimal(9, 3)) as decInt,\n"" +"
68391,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestParquetWriter.java,1025,,"                     ""cast('123456.789123456789' as decimal(18, 12)) as decBigInt,\n"" +"
68392,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestParquetWriter.java,1029,,"              Pair.of(""decInt"", INT32),"
68393,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestParquetWriter.java,1030,,"              Pair.of(""decBigInt"", INT64),"
68394,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestParquetWriter.java,1031,,"              Pair.of(""fixedLen"", FIXED_LEN_BYTE_ARRAY)),"
68395,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestParquetWriter.java,1034,,"          .sqlQuery(""select * from dfs.tmp.%s"", tableName)"
68396,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestParquetWriter.java,1037,,"          .baselineValues(new BigDecimal(""123456.789""),"
68397,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestParquetWriter.java,1038,,"              new BigDecimal(""123456.789123456789""),"
68398,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestParquetWriter.java,1044,,"      test(""drop table if exists dfs.tmp.%s"", tableName);"
68399,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestParquetWriter.java,1063,,"              Pair.of(""binCol"", BINARY)),"
68400,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestParquetWriter.java,1171,,"              Pair.of(""decimal_int32"", INT32),"
68401,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestParquetWriter.java,1172,,"              Pair.of(""decimal_int64"", INT64),"
68402,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestParquetWriter.java,1173,,"              Pair.of(""decimal_fixedLen"", INT64),"
68403,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestParquetWriter.java,1174,,"              Pair.of(""decimal_binary"", INT64)),"
68404,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestParquetWriterEmptyFiles.java,47,,"    dirTestWatcher.copyResourceToRoot(Paths.get(""parquet"", ""empty""));"
68405,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestTextWriter.java,59,,"    formats.put(""csv"", new TextFormatConfig("
68406,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestTextWriter.java,110,,"    String fullTableName = String.format(""dfs.tmp.`%s`"", tableName);"
68407,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestTextWriter.java,115,,"    Path path = Paths.get(dirTestWatcher.getDfsTestTmpDir().getAbsolutePath(), tableName, ""0_0_0.csv"");"
68408,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestTextWriter.java,144,,"    queryBuilder().sql(""create table %s as "" +"
68409,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestTextWriter.java,148,,"      .sqlQuery(""select * from %s"", fullTableName)"
68410,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestTextWriter.java,150,,"      .baselineColumns(""id"", ""name"", ""desc"")"
68411,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/writer/TestTextWriter.java,150,,"      .baselineColumns(""id"", ""name"", ""desc"")"
68412,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/xsort/TestCopier.java,186,,"        .addRow(null, ""null"")"
68413,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/xsort/TestExternalSortExec.java,48,,"    FieldReference expr = FieldReference.getWithQuotedRef(""foo"");"
68414,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/xsort/TestSortEmitOutcome.java,107,,"      .addRow(2, 20, ""item2"")"
68415,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/xsort/TestSortEmitOutcome.java,108,,"      .addRow(13, 130, ""item13"")"
68416,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/xsort/TestSortEmitOutcome.java,109,,"      .addRow(4, 40, ""item4"")"
68417,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/xsort/TestSortEmitOutcome.java,285,,"      .addRow(3, 30, ""item3"")"
68418,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/xsort/TestSortEmitOutcome.java,289,,"      .addRow(1, 10, ""item1"")"
68419,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/xsort/TestSortImpl.java,238,,"          .addRow(1, ""first"")"
68420,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/xsort/TestSortImpl.java,256,,"          .addRow(2, ""second"")"
68421,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/impl/xsort/TestSorter.java,85,,"    runSorterTest(makeSortConfig(""key"", Ordering.ORDER_ASC, Ordering.NULLS_LAST), rowSet, expected);"
68422,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestProjectionFilter.java,144,,"      assertTrue(e.getMessage().contains(""conflict""));"
68423,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetCopier.java,55,,"        .add(""name"", MinorType.VARCHAR)"
68424,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetCopier.java,124,,"        rsLoader.writer().addRow(rowCount, ""Row "" + rowCount);"
68425,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetCopier.java,153,,"          .add(""amount"", MinorType.INT)"
68426,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderDictArray.java,142,,"            map(120, strArray(""d1.2.1"", ""d1.2.2""))))"
68427,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderDictArray.java,145,,"            map(310, strArray(""d3.1.1"", ""d3.2.2""), 311, strArray(""d3.1.3"", ""d3.2.4"", ""d3.1.5"", ""d3.1.6"")),"
68428,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderDicts.java,94,,"    valueWriter.setString(""fred"");"
68429,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderDicts.java,103,,"    rootWriter.addRow(20, map(210, ""barney"", 211, ""bart"", 212, ""jerry""));"
68430,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderDicts.java,157,,"    rootWriter.addRow(20, map(""name"", ""fred"", ""lastname"", ""smith""))"
68431,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderDicts.java,157,,"    rootWriter.addRow(20, map(""name"", ""fred"", ""lastname"", ""smith""))"
68432,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderDicts.java,221,,"    rootWriter.addRow(20, map(""a2"", mapValue(""c11""), ""b2"", mapValue(""c12""), ""c2"", mapValue(""c13"")));"
68433,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderDicts.java,221,,"    rootWriter.addRow(20, map(""a2"", mapValue(""c11""), ""b2"", mapValue(""c12""), ""c2"", mapValue(""c13"")));"
68434,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderDicts.java,221,,"    rootWriter.addRow(20, map(""a2"", mapValue(""c11""), ""b2"", mapValue(""c12""), ""c2"", mapValue(""c13"")));"
68435,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderDicts.java,227,,"    rootWriter.addRow(30, map(""a3"", mapValue(""c21"", ""d21"")));"
68436,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderDicts.java,227,,"    rootWriter.addRow(30, map(""a3"", mapValue(""c21"", ""d21"")));"
68437,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderDicts.java,232,,"    rootWriter.addRow(40, map(""a4"", mapValue(""c31"", ""d31"", ""e31""), ""b4"", mapValue(""c32"", ""d32"", ""e32"")));"
68438,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderDicts.java,232,,"    rootWriter.addRow(40, map(""a4"", mapValue(""c31"", ""d31"", ""e31""), ""b4"", mapValue(""c32"", ""d32"", ""e32"")));"
68439,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderDicts.java,232,,"    rootWriter.addRow(40, map(""a4"", mapValue(""c31"", ""d31"", ""e31""), ""b4"", mapValue(""c32"", ""d32"", ""e32"")));"
68440,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderDicts.java,232,,"    rootWriter.addRow(40, map(""a4"", mapValue(""c31"", ""d31"", ""e31""), ""b4"", mapValue(""c32"", ""d32"", ""e32"")));"
68441,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderDicts.java,232,,"    rootWriter.addRow(40, map(""a4"", mapValue(""c31"", ""d31"", ""e31""), ""b4"", mapValue(""c32"", ""d32"", ""e32"")));"
68442,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderDicts.java,232,,"    rootWriter.addRow(40, map(""a4"", mapValue(""c31"", ""d31"", ""e31""), ""b4"", mapValue(""c32"", ""d32"", ""e32"")));"
68443,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderMapArray.java,199,,"          mapValue(120, strArray(""d1.2.1"", ""d1.2.2""))))"
68444,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderMaps.java,99,,"    dWriter.setString(""fred"");"
68445,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderMaps.java,112,,"    rootWriter.addRow(20, mapValue(210, ""barney""), ""bam-bam"");"
68446,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderMaps.java,112,,"    rootWriter.addRow(20, mapValue(210, ""barney""), ""bam-bam"");"
68447,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderOmittedValues.java,392,,"    schema.metadata(""b"").setDefaultValue(""Foo"");"
68448,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderProjection.java,681,,"        .add(""col"", MinorType.VARCHAR)"
68449,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderRepeatedList.java,74,,"        .addRepeatedList(""list2"")"
68450,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderRepeatedList.java,302,,"          elementWriter.setString(String.format(""%s%06d"", strValue, elementCount));"
68451,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderUnions.java,115,,"      .addRow(1, ""first"")"
68452,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderUnions.java,116,,"      .addRow(2, mapValue(20, ""fred""))"
68453,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderUnions.java,119,,"      .addRow(5, ""last"");"
68454,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderUnions.java,224,,"        writer.addRow(count, String.format(""%s%06d"", strValue, count));"
68455,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderUnions.java,305,,"        .addList(""list"")"
68456,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderUnions.java,329,,"      .addRow(1, strArray(""fred"", ""barney""))"
68457,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderUnions.java,331,,"      .addRow(3, strArray(""wilma"", ""betty"", ""pebbles""));"
68458,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderUnions.java,331,,"      .addRow(3, strArray(""wilma"", ""betty"", ""pebbles""));"
68459,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderUnions.java,331,,"      .addRow(3, strArray(""wilma"", ""betty"", ""pebbles""));"
68460,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderUnions.java,571,,"          mapValue(""wilma"", ""flintstone""), mapValue(""betty"", ""rubble"")));"
68461,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetLoaderUnions.java,571,,"          mapValue(""wilma"", ""flintstone""), mapValue(""betty"", ""rubble"")));"
68462,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetReader.java,46,,"      .add(""name"", MinorType.VARCHAR)"
68463,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/impl/TestResultSetReader.java,50,,"      .add(""amount"", MinorType.INT)"
68464,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/project/TestTupleProjection.java,76,,"    assertTrue(projSet.isProjected(""foo""));"
68465,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/project/TestTupleProjection.java,163,,"        RowSetTestUtils.projectList(""map""));"
68466,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/resultSet/project/TestTupleProjection.java,340,,"        RowSetTestUtils.projectList(""a[1]"", ""a[3]""));"
68467,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/rowSet/TestDummyWriter.java,98,,"    rootWriter.scalar(""a"").setString(""foo"");"
68468,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/rowSet/TestHyperVectorReaders.java,140,,"        .addSingleCol(""second"")"
68469,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/rowSet/TestHyperVectorReaders.java,141,,"        .addSingleCol(""fourth"")"
68470,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/rowSet/TestHyperVectorReaders.java,145,,"        .addSingleCol(""first"")"
68471,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/rowSet/TestHyperVectorReaders.java,146,,"        .addSingleCol(""third"")"
68472,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/rowSet/TestHyperVectorReaders.java,188,,"        .addSingleCol(""sixth"")"
68473,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/rowSet/TestHyperVectorReaders.java,235,,"        .addSingleCol(strArray(""sixth"", ""6.1"", ""6.2""))"
68474,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/rowSet/TestHyperVectorReaders.java,235,,"        .addSingleCol(strArray(""sixth"", ""6.1"", ""6.2""))"
68475,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/rowSet/TestHyperVectorReaders.java,236,,"        .addSingleCol(strArray(""second"", ""2.1"", ""2.2"", ""2.3""))"
68476,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/rowSet/TestHyperVectorReaders.java,236,,"        .addSingleCol(strArray(""second"", ""2.1"", ""2.2"", ""2.3""))"
68477,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/rowSet/TestHyperVectorReaders.java,237,,"        .addSingleCol(strArray(""fourth"", ""4.1""))"
68478,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/rowSet/TestHyperVectorReaders.java,241,,"        .addSingleCol(strArray(""fifth"", ""51"", ""5.2""))"
68479,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/rowSet/TestHyperVectorReaders.java,241,,"        .addSingleCol(strArray(""fifth"", ""51"", ""5.2""))"
68480,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/rowSet/TestHyperVectorReaders.java,242,,"        .addSingleCol(strArray(""first"", ""1.1"", ""1.2"", ""1.3""))"
68481,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/rowSet/TestHyperVectorReaders.java,242,,"        .addSingleCol(strArray(""first"", ""1.1"", ""1.2"", ""1.3""))"
68482,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/rowSet/TestHyperVectorReaders.java,242,,"        .addSingleCol(strArray(""first"", ""1.1"", ""1.2"", ""1.3""))"
68483,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/rowSet/TestHyperVectorReaders.java,243,,"        .addSingleCol(strArray(""third"", ""3.1""))"
68484,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/rowSet/TestMapAccessors.java,302,,"          mapValue(120, strArray(""d1.2.1"", ""d1.2.2""))))"
68485,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/rowSet/TestRepeatedListAccessors.java,78,,"          .addRepeatedList(""list2"")"
68486,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/rowSet/TestScalarAccessors.java,86,,"        .add(""col"", MinorType.UINT1)"
68487,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/rowSet/TestScalarAccessors.java,217,,"    assertEquals(""null"", colReader.getAsString());"
68488,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/rowSet/TestScalarAccessors.java,712,,"        .addRow(""fred"")"
68489,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/rowSet/TestScalarAccessors.java,807,,"        .addSingleCol(strArray(""fred"", """", ""wilma""))"
68490,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/rowSet/TestScalarAccessors.java,2031,,"        .addSingleCol(""abc12345"")"
68491,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/rowSet/TestScalarAccessors.java,2032,,"        .addSingleCol(""12345abc"")"
68492,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/rowSet/TestSchemaBuilder.java,207,,"        .addList(""list"")"
68493,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/rowSet/TestVariableWidthWriter.java,61,,"      String base = ""sample-value"";"
68494,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/rowSet/TestVariantAccessors.java,163,,"    vw.scalar(MinorType.VARCHAR).setString(""fred"");"
68495,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/rowSet/TestVariantAccessors.java,535,,"        .addList(""list"")"
68496,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/rowSet/TestVariantAccessors.java,565,,"      strWriter.setString(""wilma"");"
68497,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/rowSet/TestVariantAccessors.java,575,,"      strWriter.setString(""dino"");"
68498,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/rowSet/TestVariantAccessors.java,590,,"      strWriter.setString(""pebbles"");"
68499,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/BasicPhysicalOpUnitTest.java,100,,"        .baselineValues(5l, ""a string"", ""asdf"", 5l)"
68500,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/BasicPhysicalOpUnitTest.java,100,,"        .baselineValues(5l, ""a string"", ""asdf"", 5l)"
68501,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/BasicPhysicalOpUnitTest.java,101,,"        .baselineValues(5l, ""a string"", ""12345"", 5l)"
68502,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/BasicPhysicalOpUnitTest.java,102,,"        .baselineValues(5l, ""a different string"", ""asdf"", 5l)"
68503,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/BasicPhysicalOpUnitTest.java,104,,"        .baselineValues(5l, ""meh"", ""asdf"", 5l)"
68504,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/BasicPhysicalOpUnitTest.java,136,,"    HashAggregate aggConf = new HashAggregate(null, AggPrelBase.OperatorPhase.PHASE_1of1, parseExprs(""a"", ""a""), parseExprs(""sum(b)"", ""b_sum""), 1.0f);"
68505,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/BasicPhysicalOpUnitTest.java,138,,"        ""[{\""a\"": 5, \""b\"" : 1 }]"","
68506,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/BasicPhysicalOpUnitTest.java,139,,"        ""[{\""a\"": 5, \""b\"" : 5},{\""a\"": 3, \""b\"" : 8}]"");"
68507,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/BasicPhysicalOpUnitTest.java,282,,"  @Ignore(""DRILL-4438"")"
68508,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/MiniPlanUnitTestBase.java,305,,"      @SuppressWarnings(""unchecked"")"
68509,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestNullInputMiniPlan.java,93,,"        .addNullable(""name"", TypeProtos.MinorType.VARCHAR);"
68510,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestNullInputMiniPlan.java,101,,"        .baselineValues(100L, ""John"")"
68511,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestNullInputMiniPlan.java,102,,"        .baselineValues(1000L, ""Joe"")"
68512,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestNullInputMiniPlan.java,231,,"   final PhysicalOperator join = new HashJoinPOP(null, null, Lists.newArrayList(joinCond(""a"", ""EQUALS"", ""b"")), JoinRelType.INNER, null);"
68513,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestNullInputMiniPlan.java,324,,"        ""[{\""a\"": 50, \""b\"" : 10 }]"");"
68514,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,97,,"      batchString.append(""{\""a\"": 5, "" + ""\""b\"" : "" + ""\"""" + ""abc"" + ""\"","" +"
68515,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,97,,"      batchString.append(""{\""a\"": 5, "" + ""\""b\"" : "" + ""\"""" + ""abc"" + ""\"","" +"
68516,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,97,,"      batchString.append(""{\""a\"": 5, "" + ""\""b\"" : "" + ""\"""" + ""abc"" + ""\"","" +"
68517,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,124,,"    fragContext.getOptions().setLocalOption(""drill.exec.memory.operator.output_batch_size"", totalSize / 2);"
68518,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,248,,"      expr[0] = ""`**`"";"
68519,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,583,,"      batchString.append(""{\""a\"": 5, "" + ""\""b\"" : "" + ""\"""" + wideString + ""\"","" + ""\""c\"" : ["" + ""[1,2,3,4],"" + ""[5,6,7,8]"" + ""]"");"
68520,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,721,,"        ""\""trans_time\"":7777777, \""type\"":\""sports\""},"" +"
68521,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,744,,"      expectedBatchString.append(""{\""a\"": 5, "" + ""\""b\"" : "" + ""\"""" + wideString + ""\"","" + ""\""c\"" : "" +"
68522,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,773,,"    resultExpected1.put(""trans_id"", new Text(""t1""));"
68523,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,774,,"    resultExpected1.put(""amount"", new Long(100));"
68524,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,775,,"    resultExpected1.put(""trans_time"", new Long(7777777));"
68525,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,776,,"    resultExpected1.put(""type"", new Text(""sports""));"
68526,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,776,,"    resultExpected1.put(""type"", new Text(""sports""));"
68527,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,809,,"        ""[ { \""trans_id\"":\""t1\"", \""amount\"":100, \""trans_time\"":7777777, \""type\"":\""sports\""},"" + "" { "" +"
68528,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,809,,"        ""[ { \""trans_id\"":\""t1\"", \""amount\"":100, \""trans_time\"":7777777, \""type\"":\""sports\""},"" + "" { "" +"
68529,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,810,,"        ""\""trans_id\"":\""t2\"", \""amount\"":1000, \""trans_time\"":8888888, \""type\"":\""groceries\""} ], "" +"
68530,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,813,,"        ""[ { \""trans_id\"":\""t1\"", \""amount\"":100, "" +"
68531,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,926,,"        "" { \""innerMap\"": "" + innerMap + "", \""trans_id\"":\""t1\"", \""amount\"":100, \""trans_time\"":7777777, "" +"
68532,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,926,,"        "" { \""innerMap\"": "" + innerMap + "", \""trans_id\"":\""t1\"", \""amount\"":100, \""trans_time\"":7777777, "" +"
68533,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,1115,,"    batchString.append(""{\""a\"": "" + wideStrings + "","" + ""\""c\"":"" + flattenElement);"
68534,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,1207,,"      batchString.append(""{"" + ""\""a\"" :"" + (new StringBuilder().append(i)) + "",\""b\"": \"""" + wideString + ""\"","" +"
68535,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,1207,,"      batchString.append(""{"" + ""\""a\"" :"" + (new StringBuilder().append(i)) + "",\""b\"": \"""" + wideString + ""\"","" +"
68536,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,1257,,"      Lists.newArrayList(joinCond(""c1"", ""EQUALS"", ""c2"")), JoinRelType.INNER);"
68537,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,1266,,"      leftBatchString.append(""{\""a1\"": 5, "" + ""\""b1\"" : "" + ""\"""" + wideString + ""\"","" + ""\""c1\"" : "" + i + ""},"");"
68538,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,1266,,"      leftBatchString.append(""{\""a1\"": 5, "" + ""\""b1\"" : "" + ""\"""" + wideString + ""\"","" + ""\""c1\"" : "" + i + ""},"");"
68539,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,1266,,"      leftBatchString.append(""{\""a1\"": 5, "" + ""\""b1\"" : "" + ""\"""" + wideString + ""\"","" + ""\""c1\"" : "" + i + ""},"");"
68540,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,1279,,"      rightBatchString.append(""{\""a2\"": 6, "" + ""\""b2\"" : "" + ""\"""" + wideString + ""\"","" + ""\""c2\"" : "" + i + ""},"");"
68541,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,1279,,"      rightBatchString.append(""{\""a2\"": 6, "" + ""\""b2\"" : "" + ""\"""" + wideString + ""\"","" + ""\""c2\"" : "" + i + ""},"");"
68542,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,1279,,"      rightBatchString.append(""{\""a2\"": 6, "" + ""\""b2\"" : "" + ""\"""" + wideString + ""\"","" + ""\""c2\"" : "" + i + ""},"");"
68543,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,1294,,"      expectedBatchString.append("", \""a2\"": 6, "" + ""\""b2\"" : "" + ""\"""" + wideString + ""\"","" + ""\""c2\"" : "" + i + ""},"");"
68544,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,2102,,"    HashAggregate aggConf = new HashAggregate(null, AggPrelBase.OperatorPhase.PHASE_1of1, parseExprs(""a"", ""a""), parseExprs(""sum(b)"", ""b_sum""), 1.0f);"
68545,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,2128,,"        batchString.append(""{\""a\"": "" + i + "", \""b\"": "" + i + ""},"");"
68546,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,2251,,"      batchString.append(""{\""a\"": "" + i + "", \""b\"": "" + ""\""aaa\"""" + ""},"");"
68547,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,2299,,"    LogicalExpression functionCallExpr = new FunctionCall(""equal"","
68548,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/physical/unit/TestOutputBatchSize.java,2643,,"      batchString.append(""{\""c\"" : "" + newString);"
68549,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/planner/logical/TestCaseNullableTypes.java,39,,"        .baselineColumns(""res1"")"
68550,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/planner/logical/TestCaseNullableTypes.java,49,,"        .baselineColumns(""res2"")"
68551,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/planner/logical/TestConvertCountToDirectScan.java,62,,"      .include(""DynamicPojoRecordReader"")"
68552,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/planner/logical/TestConvertCountToDirectScan.java,68,,"      .baselineColumns(""cnt"")"
68553,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/planner/logical/TestConvertCountToDirectScan.java,147,,"    run(""use dfs.tmp"");"
68554,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/planner/logical/TestConvertCountToDirectScan.java,148,,"    String tableName = ""parquet_table_counts"";"
68555,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/planner/logical/TestConvertCountToDirectScan.java,154,,"      run(""refresh table metadata %s"", tableName);"
68556,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/planner/logical/TestConvertCountToDirectScan.java,156,,"      String sql = String.format(""select\n"" +"
68557,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/planner/logical/TestConvertCountToDirectScan.java,158,,"        ""count(*) as star_count,\n"" +"
68558,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/planner/logical/TestConvertCountToDirectScan.java,159,,"        ""count(col_int) as int_column_count,\n"" +"
68559,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/planner/logical/TestConvertCountToDirectScan.java,172,,"        .baselineColumns(""implicit_count"", ""star_count"", ""int_column_count"", ""vrchr_column_count"")"
68560,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/planner/logical/TestConvertCountToDirectScan.java,172,,"        .baselineColumns(""implicit_count"", ""star_count"", ""int_column_count"", ""vrchr_column_count"")"
68561,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/planner/logical/TestConvertCountToDirectScan.java,172,,"        .baselineColumns(""implicit_count"", ""star_count"", ""int_column_count"", ""vrchr_column_count"")"
68562,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/planner/logical/TestConvertCountToDirectScan.java,178,,"      run(""drop table if exists %s"", tableName);"
68563,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/planner/logical/TestConvertCountToDirectScan.java,233,,"        .include(""numFiles = 1"")"
68564,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/planner/logical/TestConvertCountToDirectScan.java,234,,"        .include(""usedMetadataSummaryFile = true"")"
68565,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/planner/sql/CrossJoinTest.java,58,,"            ""FROM cp.`tpch/nation.parquet` l "" +"
68566,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/planner/sql/CrossJoinTest.java,67,,"        ""SELECT l.n_name,r.n_name "" +"
68567,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/planner/sql/CrossJoinTest.java,138,,"        ""SELECT * "" +"
68568,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/planner/sql/handlers/SetOptionHandlerTest.java,68,,"        .sqlQuery(""SET `%s`"", ExecConstants.ENABLE_ITERATOR_VALIDATION_OPTION)"
68569,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/planner/sql/handlers/SetOptionHandlerTest.java,70,,"        .sqlBaselineQuery(""SELECT name, val as value FROM sys.options where name = '%s' limit 1"","
68570,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/record/ExpressionTreeMaterializerTest.java,83,,"    when(batch.getValueVectorId(new SchemaPath(""test"", ExpressionPosition.UNKNOWN)))"
68571,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/record/TestRecordBatchSizer.java,526,,"      .addMap(""map"")"
68572,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/record/TestRecordBatchSizer.java,527,,"        .add(""key"", MinorType.INT)"
68573,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/record/TestRecordBatchSizer.java,528,,"        .add(""value"", MinorType.VARCHAR)"
68574,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/record/TestRecordBatchSizer.java,716,,"        .addMap(""childMap"")"
68575,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/record/TestRecordBatchSizer.java,717,,"          .add(""childKey"", MinorType.INT)"
68576,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/record/TestRecordBatchSizer.java,718,,"          .add(""childValue"", MinorType.VARCHAR)"
68577,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/record/metadata/schema/TestSchemaProvider.java,109,,"    File schema = new File(folder.getRoot(), ""schema"");"
68578,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/record/metadata/schema/TestSchemaProvider.java,148,,"    String expectedContent = ""{\n"""
68579,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/record/metadata/schema/TestSchemaProvider.java,149,,"      + ""  \""schema\"" : {\n"""
68580,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/record/metadata/schema/TestSchemaProvider.java,152,,"      + ""      {\n"""
68581,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/record/metadata/schema/TestSchemaProvider.java,156,,"      + ""      },\n"""
68582,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/record/vector/TestDateTypes.java,60,,"                      .replace(""#{TEST_FILE}"", ""/test_simple_date.json""));"
68583,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/record/vector/TestDateTypes.java,60,,"                      .replace(""#{TEST_FILE}"", ""/test_simple_date.json""));"
68584,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/record/vector/TestDictVector.java,73,,"    MaterializedField field = MaterializedField.create(""map"", DictVector.TYPE);"
68585,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/resourcemgr/TestResourcePoolTree.java,102,,"    poolTreeConfig.put(ResourcePoolImpl.POOL_NAME_KEY, ""drill"");"
68586,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/resourcemgr/config/selectors/TestAclSelector.java,89,,"    groupsValue.add(""sales"");"
68587,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/resourcemgr/config/selectors/TestAclSelector.java,92,,"    usersValue.add(""user1"");"
68588,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/resourcemgr/config/selectors/TestAclSelector.java,93,,"    usersValue.add(""user2"");"
68589,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/resourcemgr/config/selectors/TestAclSelector.java,95,,"    aclConfigValue.put(""groups"", groupsValue);"
68590,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/resourcemgr/config/selectors/TestAclSelector.java,96,,"    aclConfigValue.put(""users"", usersValue);"
68591,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/resourcemgr/config/selectors/TestAclSelector.java,101,,"    assertFalse(testSelector.checkQueryUserGroups(""user3"", groups));"
68592,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/resourcemgr/config/selectors/TestComplexSelectors.java,57,,"    tagSelectorConfig1.put(""tag"", ""small"");"
68593,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/rpc/data/TestBitBitKerberos.java,102,,"            ConfigValueFactory.fromIterable(Lists.newArrayList(""kerberos"")))"
68594,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/rpc/user/security/TestCustomUserAuthenticator.java,86,,"    negativeAuthHelper(TEST_USER_1, ""blah.. blah.."");"
68595,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/rpc/user/security/TestHtpasswdFileUserAuthenticator.java,65,,"    tryCredentials(""alice"", ""pass1"", cluster, true);"
68596,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/rpc/user/security/TestHtpasswdFileUserAuthenticator.java,65,,"    tryCredentials(""alice"", ""pass1"", cluster, true);"
68597,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/rpc/user/security/TestHtpasswdFileUserAuthenticator.java,66,,"    tryCredentials(""bob"", ""buzzkill"", cluster, true);"
68598,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/rpc/user/security/TestHtpasswdFileUserAuthenticator.java,66,,"    tryCredentials(""bob"", ""buzzkill"", cluster, true);"
68599,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/rpc/user/security/TestHtpasswdFileUserAuthenticator.java,95,,"    tryCredentials(""alice"", ""pass2"", cluster, false);"
68600,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/rpc/user/security/TestUserBitKerberosEncryption.java,77,,"            ConfigValueFactory.fromIterable(Lists.newArrayList(""plain"", ""kerberos"")))"
68601,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/rpc/user/security/TestUserBitKerberosEncryption.java,77,,"            ConfigValueFactory.fromIterable(Lists.newArrayList(""plain"", ""kerberos"")))"
68602,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/rpc/user/security/TestUserBitKerberosEncryption.java,132,,"        .sqlQuery(""SELECT session_user FROM (SELECT * FROM sys.drillbits LIMIT 1)"")"
68603,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/rpc/user/security/TestUserBitKerberosEncryption.java,134,,"        .baselineColumns(""session_user"")"
68604,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/rpc/user/security/TestUserBitKerberosEncryption.java,137,,"    test(""SHOW SCHEMAS"");"
68605,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/rpc/user/security/TestUserBitKerberosEncryption.java,138,,"    test(""USE INFORMATION_SCHEMA"");"
68606,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/rpc/user/security/TestUserBitKerberosEncryption.java,139,,"    test(""SHOW TABLES"");"
68607,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/rpc/user/security/TestUserBitKerberosEncryption.java,140,,"    test(""SELECT * FROM INFORMATION_SCHEMA.`TABLES` WHERE TABLE_NAME LIKE 'COLUMNS'"");"
68608,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/rpc/user/security/TestUserBitKerberosEncryption.java,242,,"    test(""SELECT * FROM cp.`region.json` LIMIT 5"");"
68609,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/rpc/user/security/TestUserBitSSL.java,65,,"            ConfigValueFactory.fromAnyRef(""JKS""))"
68610,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/rpc/user/security/TestUserBitSSL.java,69,,"            ConfigValueFactory.fromAnyRef(""drill123""))"
68611,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/rpc/user/security/TestUserBitSSL.java,79,,"            ConfigValueFactory.fromAnyRef(""TLSv1.2"")));"
68612,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/rpc/user/security/TestUserBitSSL.java,82,,"    initProps.setProperty(DrillProperties.ENABLE_TLS, ""true"");"
68613,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/rpc/user/security/TestUserBitSaslCompatibility.java,53,,"            ConfigValueFactory.fromIterable(Lists.newArrayList(""plain"")))"
68614,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/rpc/user/security/TestUserBitSaslCompatibility.java,58,,"    connectionProps.setProperty(DrillProperties.USER, ""anonymous"");"
68615,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/rpc/user/security/TestUserBitSaslCompatibility.java,59,,"    connectionProps.setProperty(DrillProperties.PASSWORD, ""anything works!"");"
68616,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/server/TestDrillbitResilience.java,358,,"    assertEquals(String.format(""We are leaking %d bytes"", after - before), before, after);"
68617,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/server/TestDrillbitResilience.java,461,,"        check(queryId != null, ""Query id should not be null, since we have waited long enough."");"
68618,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/server/TestOptions.java,62,,"        .sqlQuery(""SELECT status FROM sys.options WHERE name = '%s' AND optionScope = 'SESSION'"", SLICE_TARGET)"
68619,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/server/TestOptions.java,64,,"        .baselineColumns(""status"")"
68620,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/server/TestOptions.java,65,,"        .baselineValues(""DEFAULT"")"
68621,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/server/TestOptions.java,87,,"      .baselineColumns(""val"")"
68622,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/server/TestOptions.java,143,,"      .sqlQuery(""SELECT val FROM sys.options WHERE optionScope = 'SESSION' AND name = '%s'"", ENABLE_VERBOSE_ERRORS_KEY)"
68623,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/server/TestOptions.java,170,,"      .baselineColumns(""bool_val"")"
68624,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/server/options/OptionValueTest.java,33,,"      ""myOption"", ""true"", OptionValue.OptionScope.SYSTEM);"
68625,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/server/options/TestConfigLinkage.java,66,,"        sql(""SELECT string_val FROM sys.%s where name='%s'"", SystemTable.INTERNAL_OPTIONS_OLD.getTableName(), MOCK_PROPERTY).singletonString();"
68626,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/server/options/TestConfigLinkage.java,68,,"        sql(""SELECT val FROM sys.%s where name='%s'"", SystemTable.INTERNAL_OPTIONS.getTableName(), MOCK_PROPERTY).singletonString();"
68627,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/server/options/TestConfigLinkage.java,247,,"                          .sql(""SELECT optionScope from sys.%s where name='planner.slice_target'"", SystemTable.OPTIONS.getTableName())"
68628,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/server/rest/TestQueryWrapper.java,48,,"    QueryResult result = runQuery(""SHOW SCHEMAS"");"
68629,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/server/rest/TestQueryWrapper.java,114,,"      fail(""Expected exception to be thrown"");"
68630,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/server/rest/spnego/TestSpnegoConfig.java,91,,"              ConfigValueFactory.fromIterable(Lists.newArrayList(""plain"")))"
68631,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestAnalyze.java,41,,"    dirTestWatcher.copyResourceToRoot(Paths.get(""multilevel"", ""parquet""));"
68632,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestAnalyze.java,62,,"          .baselineColumns(""column"", ""rowcount"", ""nonnullrowcount"", ""ndv"", ""avgwidth"")"
68633,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestAnalyze.java,96,,"          .baselineValues(""`employee_id`"", 1155.0, 1155.0, 1155L, 8.0)"
68634,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestAnalyze.java,224,,"           ""o_totalprice, o_orderdate, o_orderpriority, o_clerk, o_shippriority, o_comment from dfs.`%s`"", tmpLocation);"
68635,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestAnalyze.java,225,,"      verifyAnalyzeOutput(""ANALYZE TABLE dfs.tmp.parquetStale COMPUTE STATISTICS"", ""9"");"
68636,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestAnalyze.java,257,,"              ""Scan.*columns=\\[`department_id`, `employee_id`\\].*rowcount = 1155.0.*""};"
68637,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestAnalyze.java,282,,"      query = "" select emp.employee_id from dfs.tmp.employeeUseStat emp join dfs.tmp.departmentUseStat dept"""
68638,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestAnalyze.java,286,,"              ""Scan.*columns=\\[`department_id`\\].*rowcount = 12.0.*""};"
68639,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestAnalyze.java,330,,"              + "" on emp.department_id = dept.department_id """
68640,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestAnalyze.java,487,,"              ""Scan.*columns=\\[`store_id`\\].*rowcount = 1128.0.*""};"
68641,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestBaseViewSupport.java,73,,"        .baselineColumns(""ok"", ""summary"")"
68642,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestCTAS.java,44,,"        String.format(""Duplicate column name [%s]"", ""region_id"")"
68643,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestCTTAS.java,89,,"        test(""create TEMPORARY table %s as select 'A' as c1 from (values(1))"", temporaryTableName);"
68644,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestCTTAS.java,92,,"            .sqlQuery(""select * from %s"", temporaryTableName)"
68645,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestCTTAS.java,131,,"    test(""use %s"", DFS_PLUGIN_NAME);"
68646,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestCTTAS.java,157,,"    test(""create TEMPORARY table %s.%s as select 'A' as c1 from (values(1))"", temp2_schema, temporaryTableName);"
68647,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestCTTAS.java,268,,"    test(""drop table %s"", name);"
68648,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestCTTAS.java,352,,"      .baselineColumns(""ok"", ""summary"")"
68649,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestInfoSchema.java,89,,"        new String[]{""information_schema"", ""VIEWS""},"
68650,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestInfoSchema.java,100,,"        .baselineColumns(""TABLE_SCHEMA"", ""TABLE_NAME"");"
68651,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestInfoSchema.java,100,,"        .baselineColumns(""TABLE_SCHEMA"", ""TABLE_NAME"");"
68652,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestInfoSchema.java,131,,"        .optionSettingQueriesForTestQuery(""USE INFORMATION_SCHEMA"")"
68653,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestInfoSchema.java,144,,"        .baselineColumns(""SCHEMA_NAME"");"
68654,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestInfoSchema.java,182,,"        .baselineColumns(""COLUMN_NAME"", ""DATA_TYPE"", ""IS_NULLABLE"")"
68655,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestInfoSchema.java,182,,"        .baselineColumns(""COLUMN_NAME"", ""DATA_TYPE"", ""IS_NULLABLE"")"
68656,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestInfoSchema.java,182,,"        .baselineColumns(""COLUMN_NAME"", ""DATA_TYPE"", ""IS_NULLABLE"")"
68657,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestInfoSchema.java,183,,"        .baselineValues(""CATALOG_NAME"", ""CHARACTER VARYING"", ""NO"")"
68658,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestInfoSchema.java,202,,"        .sqlQuery(""DESCRIBE INFORMATION_SCHEMA.`TABLES`"")"
68659,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestInfoSchema.java,205,,"        .baselineValues(""TABLE_CATALOG"", ""CHARACTER VARYING"", ""NO"")"
68660,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestInfoSchema.java,382,,"        .baselineColumns(""ok"", ""summary"")"
68661,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestInfoSchemaWithMetastore.java,89,,"        .storagePlugin(""dfs"")"
68662,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestInfoSchemaWithMetastore.java,90,,"        .workspace(""tmp"")"
68663,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestInfoSchemaWithMetastore.java,92,,"        .type(""PARQUET"")"
68664,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestInfoSchemaWithMetastore.java,98,,"      .location(new Path(""/tmp"", tableName))"
68665,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestInfoSchemaWithMetastore.java,113,,"      .baselineValues(""DRILL"", ""dfs.tmp"", tableName, ""TABLE"", table.getTableInfo().type(),"
68666,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestInfoSchemaWithMetastore.java,113,,"      .baselineValues(""DRILL"", ""dfs.tmp"", tableName, ""TABLE"", table.getTableInfo().type(),"
68667,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestInfoSchemaWithMetastore.java,281,,"      .baselineValues(""DRILL"", ""dfs.tmp"", tableName, ""bigint_col"", 1, null, ""YES"", ""BIGINT"", null, null,"
68668,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestInfoSchemaWithMetastore.java,337,,"        .key(""part_int=3"")"
68669,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,89,,"      .addNullable(""dir0"", TypeProtos.MinorType.VARCHAR)"
68670,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,90,,"      .addNullable(""dir1"", TypeProtos.MinorType.VARCHAR)"
68671,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,91,,"      .add(""o_orderkey"", TypeProtos.MinorType.INT)"
68672,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,92,,"      .add(""o_custkey"", TypeProtos.MinorType.INT)"
68673,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,93,,"      .add(""o_orderstatus"", TypeProtos.MinorType.VARCHAR)"
68674,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,94,,"      .add(""o_totalprice"", TypeProtos.MinorType.FLOAT8)"
68675,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,95,,"      .add(""o_orderdate"", TypeProtos.MinorType.DATE)"
68676,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,96,,"      .add(""o_orderpriority"", TypeProtos.MinorType.VARCHAR)"
68677,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,97,,"      .add(""o_clerk"", TypeProtos.MinorType.VARCHAR)"
68678,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,98,,"      .add(""o_shippriority"", TypeProtos.MinorType.INT)"
68679,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,99,,"      .add(""o_comment"", TypeProtos.MinorType.VARCHAR)"
68680,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,122,,"          getColumnStatistics(""1994"", ""1996"", 120L, TypeProtos.MinorType.VARCHAR))"
68681,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,197,,"    dirTestWatcher.copyResourceToRoot(Paths.get(""multilevel/parquet""));"
68682,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,198,,"    dirTestWatcher.copyResourceToRoot(Paths.get(""multilevel/parquet2""));"
68683,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,225,,"    TableInfo tableInfo = getTableInfo(tableName, ""tmp"");"
68684,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,233,,"          .baselineColumns(""ok"", ""summary"")"
68685,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,234,,"          .baselineValues(true, String.format(""Collected / refreshed metadata for table [dfs.tmp.%s]"", tableName))"
68686,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,237,,"      String query = ""select mykey from dfs.tmp.`%s` where mykey is null"";"
68687,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,240,,"      assertEquals(""Row count does not match the expected value"", 5, actualRowCount);"
68688,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,241,,"      String usedMetaPattern = ""usedMetastore=true"";"
68689,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,252,,"      usedMetaPattern = ""usedMetastore=false"";"
68690,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,269,,"      run(""drop table if exists dfs.tmp.`%s`"", tableName);"
68691,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,288,,"        .storagePlugin(""dfs"")"
68692,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,305,,"            new Path(tablePath, ""1994/Q1/orders_94_q1.parquet""),"
68693,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,340,,"    long dir0q1lastModified = new File(new File(new File(table, ""1994""), ""Q1""), ""orders_94_q1.parquet"").lastModified();"
68694,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,376,,"          .sqlQuery(""ANALYZE TABLE dfs.`%s` REFRESH METADATA"", tableName)"
68695,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,379,,"          .baselineValues(true, String.format(""Collected / refreshed metadata for table [dfs.default.%s]"", tableName))"
68696,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,437,,"              .identifier(""1994/Q1"")"
68697,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,491,,"      run(""analyze table dfs.`%s` drop metadata if exists"", tableName);"
68698,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,536,,"        run(""analyze table dfs.tmp.`%s` drop metadata if exists"", tableName);"
68699,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,921,,"          .sqlQuery(""ANALYZE TABLE dfs.tmp.`%s` REFRESH METADATA"", tableName)"
68700,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,988,,"            Collections.singletonList(new StatisticsHolder<>(""1993"", ColumnStatisticsKind.MIN_VALUE)))));"
68701,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,1110,,"      dirTestWatcher.copyResourceToTestTmp(Paths.get(""multilevel"", ""parquet"", ""1994"", ""Q4""), Paths.get(tableName, ""1994"", ""Q5""));"
68702,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,1110,,"      dirTestWatcher.copyResourceToTestTmp(Paths.get(""multilevel"", ""parquet"", ""1994"", ""Q4""), Paths.get(tableName, ""1994"", ""Q5""));"
68703,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,1209,,"          Paths.get(""multilevel"", ""parquet"", ""1994"", ""Q4"", ""orders_94_q4.parquet""),"
68704,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,1889,,"        .addNullable(""date"", TypeProtos.MinorType.VARCHAR)"
68705,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,1892,,"        .addMap(""user_info"")"
68706,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,1942,,"          .sqlQuery(""analyze table dfs.tmp.`%s` REFRESH METADATA"", tableName)"
68707,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,1984,,"      String numFilesPattern = ""numFiles="" + expectedNumFiles;"
68708,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,1990,,"          .exclude(""Filter"")"
68709,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,2005,,"          .sqlQuery(""analyze table dfs.`%s` REFRESH METADATA"", tableName)"
68710,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,2012,,"          ""select dir0, dir1, o_custkey, o_orderdate from dfs.`%s`\n"" +"
68711,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,2261,,"      String query = ""select * from dfs.`%s`"";"
68712,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,2301,,"          .sqlQuery(""analyze table %s REFRESH METADATA"", tableName)"
68713,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,2304,,"          .baselineValues(true, String.format(""Collected / refreshed metadata for table [%s]"", tableName))"
68714,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,2315,,"      run(""analyze table %s drop metadata if exists"", tableName);"
68715,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,2316,,"      run(""drop table if exists %s"", tableName);"
68716,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,2358,,"      run(""create table dfs.tmp.`%s/a` as\n"" +"
68717,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,2363,,"      run(""create table dfs.tmp.`%s/b` as\n"" +"
68718,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,2615,,"      run(""CREATE TABLE %s AS SELECT * from cp.`employee.json`"", tableName);"
68719,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,2990,,"          .baselineValues(""dir0"", ""CHARACTER VARYING"", ""YES"")"
68720,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,2992,,"          .baselineValues(""o_orderkey"", ""INTEGER"", ""NO"")"
68721,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,3031,,"          .baselineValues(""DRILL"", ""dfs.tmp"", tableName, ""TABLE"", ""PARQUET"", absolutePath, 120L, localDateTime)"
68722,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,3031,,"          .baselineValues(""DRILL"", ""dfs.tmp"", tableName, ""TABLE"", ""PARQUET"", absolutePath, 120L, localDateTime)"
68723,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,3142,,"      assertTrue(""table metadata wasn't found"", metastoreTableInfo.isExists());"
68724,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestMetastoreCommands.java,3159,,"        .addNullable(""name"", TypeProtos.MinorType.VARCHAR)"
68725,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestSimpleCastFunctions.java,91,,"            .baselineColumns(""b_val"")"
68726,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestViewSupport.java,83,,"          .baselineValues(""cust_id"", ""BIGINT"", ""YES"")"
68727,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestViewSupport.java,106,,"        baselineColumns(""region_id"", ""sales_city"", ""sales_state_province"", ""sales_district"","
68728,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestViewSupport.java,106,,"        baselineColumns(""region_id"", ""sales_city"", ""sales_state_province"", ""sales_district"","
68729,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestViewSupport.java,108,,"        baselineRows(row(0L, ""None"", ""None"", ""No District"","
68730,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestViewSupport.java,118,,"        ""SELECT region_id, sales_city FROM cp.`region.json` ORDER BY `region_id`"","
68731,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestViewSupport.java,121,,"        baselineRows(row(0L, ""None""), row(1L, ""San Francisco""))"
68732,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestViewSupport.java,132,,"        baselineColumns(""regionid"", ""salescity""),"
68733,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestViewSupport.java,178,,"        ""SELECT region_id, sales_city FROM cp.`region.json` ORDER BY `region_id` LIMIT 2"","
68734,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestViewSupport.java,274,,"          .baselineColumns(""ok"", ""summary"")"
68735,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/sql/TestViewSupport.java,553,,"        String.format(""Duplicate column name [%s]"", ""region_id"")"
68736,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/FormatPluginSerDeTest.java,36,,"          String.format(""select * from table(cp.`%s`(type=>'parquet'))"", ""parquet/alltypes_required.parquet""),"
68737,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/StorageStrategyTest.java,56,,"    assertEquals(""Path should match"", firstCreatedParentPath, createdParentPath);"
68738,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/StorageStrategyTest.java,146,,"    assertEquals(""Permission should match"", FULL_PERMISSION, fs.getFileStatus(path).getPermission());"
68739,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/TestBootstrapLoader.java,54,,"      assertNotNull(plugins.getConfig(""dfs""));"
68740,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/TestImplicitFileColumns.java,82,,"        .baselineColumns(""columns"", ""dir0"", ""filename"", ""suffix"", ""fqn"", ""filepath"")"
68741,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/TestImplicitFileColumns.java,82,,"        .baselineColumns(""columns"", ""dir0"", ""filename"", ""suffix"", ""fqn"", ""filepath"")"
68742,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/TestImplicitFileColumns.java,82,,"        .baselineColumns(""columns"", ""dir0"", ""filename"", ""suffix"", ""fqn"", ""filepath"")"
68743,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/TestPluginRegistry.java,417,,"      registry.put(""alias"", pConfig1c);"
68744,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/TestPluginRegistry.java,492,,"      registry.put(""myplugin2"", pConfig2a);"
68745,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/TestPluginRegistry.java,577,,"      assertFalse(fsConfig.getFormats().containsKey(""bsv""));"
68746,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/TestPluginRegistry.java,639,,"        registry.validatedPut(""bad"", badConfig);"
68747,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/TestPluginRegistry.java,698,,"      registry.putJson(""test"", json);"
68748,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/TestPluginsMap.java,53,,"    StoragePluginFixtureConfig config = new StoragePluginFixtureConfig(""ok1"");"
68749,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/TestPluginsMap.java,128,,"    StoragePluginFixtureConfig config2 = new StoragePluginFixtureConfig(""ok2"");"
68750,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/TestPluginsMap.java,136,,"    assertNull(map.get(""plugin1""));"
68751,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/TestPluginsMap.java,153,,"    PluginHandle entry2 = new PluginHandle(""plugin2"", config2, connector);"
68752,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/avro/AvroDataGenerator.java,180,,"    Schema schema = SchemaBuilder.record(""AvroRecordReaderTest"")"
68753,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/avro/AvroDataGenerator.java,181,,"      .namespace(""org.apache.drill.exec.store.avro"")"
68754,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/avro/AvroDataGenerator.java,183,,"      .name(""a_string"").type().stringType().noDefault()"
68755,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/avro/AvroDataGenerator.java,184,,"      .name(""b_int"").type().intType().noDefault()"
68756,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/avro/AvroDataGenerator.java,185,,"      .name(""c_long"").type().longType().noDefault()"
68757,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/avro/AvroDataGenerator.java,186,,"      .name(""d_float"").type().floatType().noDefault()"
68758,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/avro/AvroDataGenerator.java,187,,"      .name(""e_double"").type().doubleType().noDefault()"
68759,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/avro/AvroDataGenerator.java,188,,"      .name(""f_bytes"").type().bytesType().noDefault()"
68760,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/avro/AvroDataGenerator.java,189,,"      .name(""g_null"").type().nullType().noDefault()"
68761,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/avro/AvroDataGenerator.java,190,,"      .name(""h_boolean"").type().booleanType().noDefault()"
68762,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/avro/AvroDataGenerator.java,193,,"    File file = File.createTempFile(""avro-simple-primitive-no-nulls-test"", "".avro"","
68763,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/avro/AvroDataGenerator.java,228,,"      .name(""i_union"").type().optional().doubleType()"
68764,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/avro/AvroDataGenerator.java,348,,"      .name(""c_record"").type().record(""my_record_1"")"
68765,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/avro/AvroDataGenerator.java,348,,"      .name(""c_record"").type().record(""my_record_1"")"
68766,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/avro/AvroDataGenerator.java,349,,"        .namespace(""foo.blah.org"")"
68767,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/avro/AvroDataGenerator.java,351,,"        .name(""nested_1_string"").type().stringType().noDefault()"
68768,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/avro/AvroDataGenerator.java,352,,"        .name(""nested_1_int"").type().intType().noDefault()"
68769,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/avro/AvroDataGenerator.java,366,,"        nestedRecord.put(""nested_1_string"", ""nested_1_string_"" +  i);"
68770,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/avro/AvroDataGenerator.java,459,,"      .name(""c_map"").type().optional().map().values(Schema.create(Type.STRING))"
68771,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/avro/AvroDataGenerator.java,470,,"          strMap.put(""key1"", ""nested_1_string_"" +  i);"
68772,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/avro/AvroDataGenerator.java,471,,"          strMap.put(""key2"", ""nested_1_string_"" +  (i + 1 ));"
68773,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/avro/AvroFormatTest.java,189,,"      .baselineColumns(""a_string"", ""csa"", ""efa"")"
68774,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/avro/AvroFormatTest.java,285,,"    run(""select * from dfs.`%s`"", file);"
68775,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/avro/AvroFormatTest.java,443,,"      testBuilder.baselineValues(mapOfObject(""key1"", i, ""key2"", i + 1));"
68776,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/avro/AvroFormatTest.java,443,,"      testBuilder.baselineValues(mapOfObject(""key1"", i, ""key2"", i + 1));"
68777,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/avro/AvroSchemaUtilTest.java,74,,"    Schema schema = SchemaBuilder.record(""rec"")"
68778,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/avro/AvroSchemaUtilTest.java,214,,"      .name(""col_nested_array"").type().array().items()"
68779,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/avro/AvroSchemaUtilTest.java,346,,"      .name(""rec_l"").type().record(""LongList"")"
68780,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/avro/AvroSchemaUtilTest.java,353,,"      .name(""rec_s"").type().record(""StringList"")"
68781,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/dfs/TestGlob.java,40,,"      .unOrdered().baselineColumns(""EXPR$0"")"
68782,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/json/loader/TestExtendedArrays.java,60,,"        ""{ a: null }\n"" +"
68783,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/json/loader/TestExtendedArrays.java,61,,"        ""{ a: [] }\n"" +"
68784,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/json/loader/TestExtendedArrays.java,474,,"        ""{ a: { \""$numberLong\"": 10 } }\n"" +"
68785,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/json/loader/TestExtendedTypes.java,53,,"        ""{ a: null }\n"" +"
68786,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/json/loader/TestExtendedTypes.java,81,,"        ""{ a: { \""$numberLong\"": 10 } }\n"" +"
68787,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/json/loader/TestExtendedWithSchema.java,57,,"        ""  b: null,\n"" +"
68788,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/json/loader/TestExtendedWithSchema.java,59,,"        ""  d: 40,\n"" +"
68789,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/json/loader/TestExtendedWithSchema.java,60,,"        ""  e: \""50\"" }\n"" +"
68790,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/json/loader/TestExtendedWithSchema.java,61,,"        ""{ a: 110,\n"" +"
68791,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/json/loader/TestExtendedWithSchema.java,62,,"        ""  b: 120,\n"" +"
68792,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/json/loader/TestExtendedWithSchema.java,63,,"        ""  c: null,\n"" +"
68793,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/json/loader/TestExtendedWithSchema.java,68,,"        ""  c: 230,\n"" +"
68794,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/json/loader/TestExtendedWithSchema.java,69,,"        ""  d: null,\n"" +"
68795,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/json/loader/TestMessageParser.java,121,,"    loader.builder.dataPath(""data"");"
68796,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/json/loader/TestScalars.java,159,,"        ""{a: true} {a: false} "" +"
68797,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/json/loader/TestScalars.java,318,,"        ""{a: 0} {a: 12} "" +"
68798,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvHeader.java,52,,"            .baselineColumns(""Year"", ""Make"", ""Model"", ""Description"", ""Price"")"
68799,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvHeader.java,52,,"            .baselineColumns(""Year"", ""Make"", ""Model"", ""Description"", ""Price"")"
68800,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvHeader.java,52,,"            .baselineColumns(""Year"", ""Make"", ""Model"", ""Description"", ""Price"")"
68801,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvHeader.java,52,,"            .baselineColumns(""Year"", ""Make"", ""Model"", ""Description"", ""Price"")"
68802,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvHeader.java,54,,"            .baselineValues(""1999"", ""Chevy"", ""Venture \""Extended Edition\"""", """", ""4900.00"")"
68803,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvHeader.java,54,,"            .baselineValues(""1999"", ""Chevy"", ""Venture \""Extended Edition\"""", """", ""4900.00"")"
68804,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvHeader.java,54,,"            .baselineValues(""1999"", ""Chevy"", ""Venture \""Extended Edition\"""", """", ""4900.00"")"
68805,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvHeader.java,54,,"            .baselineValues(""1999"", ""Chevy"", ""Venture \""Extended Edition\"""", """", ""4900.00"")"
68806,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvHeader.java,66,,"            .baselineValues(""1999"", ""Chevy"", ""Venture \""Extended Edition, Very Large\"""", """", ""5000.00"")"
68807,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvTableProperties.java,67,,"    ""create schema (%s) "" +"
68808,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvTableProperties.java,68,,"    ""for table %s PROPERTIES ('"" + TextFormatPlugin.HAS_HEADERS_PROP +"
68809,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvTableProperties.java,74,,"        .add(""name"", MinorType.VARCHAR)"
68810,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvTableProperties.java,77,,"        .addRow(10, ""fred"")"
68811,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvTableProperties.java,78,,"        .addRow(20, ""wilma"")"
68812,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvTableProperties.java,84,,"        .addArray(""columns"", MinorType.VARCHAR)"
68813,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvTableProperties.java,321,,"      String sql = ""create schema () "" +"
68814,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvTableProperties.java,322,,"          ""for table "" + tablePath + "" PROPERTIES ('"" +"
68815,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvTableProperties.java,322,,"          ""for table "" + tablePath + "" PROPERTIES ('"" +"
68816,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvTableProperties.java,323,,"          TextFormatPlugin.HAS_HEADERS_PROP + ""'='false', '"" +"
68817,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvWithHeaders.java,83,,"      ""a,b,c"","
68818,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvWithHeaders.java,200,,"        .addRow(""10"", ""foo"", ""bar"")"
68819,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvWithHeaders.java,200,,"        .addRow(""10"", ""foo"", ""bar"")"
68820,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvWithHeaders.java,278,,"        .addRow(""fred"", ""barney"", ""wilma"")"
68821,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvWithHeaders.java,278,,"        .addRow(""fred"", ""barney"", ""wilma"")"
68822,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvWithHeaders.java,358,,"        .addNullable(""dir0"", MinorType.VARCHAR)"
68823,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvWithSchema.java,87,,"    ""name"","
68824,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvWithSchema.java,88,,"    ""dino"""
68825,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvWithSchema.java,91,,"  private static final String SCHEMA_SQL = ""create or replace schema ("" +"
68826,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvWithSchema.java,92,,"    ""id int not null, "" +"
68827,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvWithSchema.java,190,,"          .addNullable(""date"", MinorType.DATE)"
68828,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvWithSchema.java,258,,"          .add(""gender"", MinorType.VARCHAR)"
68829,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvWithSchema.java,259,,"          .add(""comment"", MinorType.VARCHAR)"
68830,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvWithSchema.java,262,,"          .addRow(1, ""wilma"", LocalDate.of(2019, 1, 18), ""female"", ""ABC"")"
68831,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvWithSchema.java,262,,"          .addRow(1, ""wilma"", LocalDate.of(2019, 1, 18), ""female"", ""ABC"")"
68832,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvWithSchema.java,262,,"          .addRow(1, ""wilma"", LocalDate.of(2019, 1, 18), ""female"", ""ABC"")"
68833,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvWithSchema.java,263,,"          .addRow(2, ""fred"", LocalDate.of(2019, 1, 19), ""male"", ""ABC"")"
68834,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvWithSchema.java,263,,"          .addRow(2, ""fred"", LocalDate.of(2019, 1, 19), ""male"", ""ABC"")"
68835,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvWithSchema.java,264,,"          .addRow(4, ""betty"", LocalDate.of(2019, 5, 4), ""NA"", ""ABC"")"
68836,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvWithSchema.java,267,,"          .addRow(3, ""barney"", LocalDate.of(2001, 1, 16), ""NA"", ""ABC"")"
68837,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvWithSchema.java,317,,"      String sql = ""SELECT * FROM "" + tablePath + "" ORDER BY id"";"
68838,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvWithSchema.java,317,,"      String sql = ""SELECT * FROM "" + tablePath + "" ORDER BY id"";"
68839,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvWithSchema.java,489,,"      String sql = ""SELECT * FROM "" + tablePath + ""ORDER BY id"";"
68840,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvWithSchema.java,624,,"          "") for table %s"";"
68841,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvWithSchema.java,689,,"          .add(""decimal_col"", MinorType.VARDECIMAL, 5, 2)"
68842,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvWithSchema.java,1092,,"          .addNullable(""amount"", MinorType.INT)"
68843,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvWithSchema.java,1093,,"          .addNullable(""start_date"", MinorType.DATE)"
68844,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvWithoutHeaders.java,94,,"    String sql = ""SELECT * FROM `dfs.data`.`%s`"";"
68845,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvWithoutHeaders.java,98,,"        .addArray(""columns"", MinorType.VARCHAR)"
68846,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvWithoutHeaders.java,102,,"        .addSingleCol(strArray(""10"", ""foo"", ""bar""))"
68847,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvWithoutHeaders.java,102,,"        .addSingleCol(strArray(""10"", ""foo"", ""bar""))"
68848,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvWithoutHeaders.java,103,,"        .addSingleCol(strArray(""20"", ""fred"", ""wilma""))"
68849,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestCsvWithoutHeaders.java,103,,"        .addSingleCol(strArray(""20"", ""fred"", ""wilma""))"
68850,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestHeaderBuilder.java,41,,"    Path dummyPath = new Path(""file:/dummy.csv"");"
68851,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestHeaderBuilder.java,59,,"    validateHeader(hb, new String[] {""column_1""});"
68852,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestHeaderBuilder.java,63,,"    validateHeader(hb, new String[] {""column_1"", ""column_2""});"
68853,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestHeaderBuilder.java,150,,"    parse(hb,""Αθήνα"");"
68854,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/easy/text/compliant/TestTextReader.java,71,,"        .sqlQuery(""select columns[0] as c0, columns[1] as c1, columns[2] as c2 \n"" +"
68855,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/ischema/TestFilesTable.java,47,,"    File filesWorkspace = cluster.makeDataDir(""files"", null, null);"
68856,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/ischema/TestFilesTable.java,58,,"    assertTrue(new File(filesWorkspace, ""file0.txt"").createNewFile());"
68857,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/ischema/TestFilesTable.java,59,,"    File folder1 = new File(filesWorkspace, ""folder1"");"
68858,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/ischema/TestFilesTable.java,77,,"        .baselineValues(""dfs.files"", ""dfs"", ""files"", ""file0.txt"", ""file0.txt"", false, true)"
68859,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/ischema/TestFilesTable.java,77,,"        .baselineValues(""dfs.files"", ""dfs"", ""files"", ""file0.txt"", ""file0.txt"", false, true)"
68860,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/ischema/TestFilesTable.java,106,,"        ""select * from INFORMATION_SCHEMA.`FILES` where schema_name = 'dfs.files'"");"
68861,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/json/TestJsonRecordReader.java,189,,"      String set = ""alter session set `"""
68862,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/json/TestJsonRecordReader.java,190,,"          + ExecConstants.JSON_READER_SKIP_INVALID_RECORDS_FLAG + ""` = true"";"
68863,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/log/TestLogReader.java,107,,"        new LogFormatField(""year"", ""INT""),"
68864,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/log/TestLogReader.java,107,,"        new LogFormatField(""year"", ""INT""),"
68865,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/log/TestLogReader.java,108,,"        new LogFormatField(""month"", ""INT""),"
68866,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/log/TestLogReader.java,109,,"        new LogFormatField(""day"", ""INT""));"
68867,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/log/TestLogReader.java,141,,"        new LogFormatField(""message""));"
68868,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/log/TestLogReader.java,325,,"        .addSingleCol(strArray(""070823"", ""21:00:32"", ""1"", ""Connect"", ""root@localhost on test1""))"
68869,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/log/TestLogReader.java,326,,"        .addSingleCol(strArray(""070823"", ""21:00:48"", ""1"", ""Query"", ""show tables""))"
68870,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/log/TestLogReader.java,328,,"        .addSingleCol(strArray(""070917"", ""16:29:01"", ""21"", ""Query"",""select * from location"" ))"
68871,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/log/TestLogReader.java,446,,"        ""sample.logu"", ""/regex/simple.log1"");"
68872,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/log/TestLogReader.java,457,,"      String sql = ""SELECT * FROM %s"";"
68873,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/log/TestLogReader.java,501,,"          .addSingleCol(strArray(""2017"", ""12"", ""17""))"
68874,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/log/TestLogReader.java,593,,"        ""sample.logf"", ""/regex/simple.log1"");"
68875,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/mock/TestMockRowReader.java,79,,"    MockSubScanPOP config = new MockSubScanPOP(""dummy"", true, Collections.singletonList(entry));"
68876,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetInternalsTest.java,72,,"                 ""FROM `cp`.`tpch/supplier.parquet` LIMIT 20"";"
68877,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetInternalsTest.java,75,,"    typeMap.put(TestBuilder.parsePath(""s_name""), Types.required(TypeProtos.MinorType.VARCHAR));"
68878,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetInternalsTest.java,76,,"    typeMap.put(TestBuilder.parsePath(""s_address""), Types.required(TypeProtos.MinorType.VARCHAR));"
68879,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetInternalsTest.java,77,,"    typeMap.put(TestBuilder.parsePath(""s_phone""), Types.required(TypeProtos.MinorType.VARCHAR));"
68880,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetInternalsTest.java,78,,"    typeMap.put(TestBuilder.parsePath(""s_comment""), Types.required(TypeProtos.MinorType.VARCHAR));"
68881,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetInternalsTest.java,95,,"    typeMap.put(TestBuilder.parsePath(""s_suppkey""), Types.required(TypeProtos.MinorType.INT));"
68882,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetInternalsTest.java,99,,"    typeMap.put(TestBuilder.parsePath(""s_acctbal""), Types.required(TypeProtos.MinorType.FLOAT8));"
68883,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetRecordReaderTest.java,113,,"        .replaceFirst(""&REPLACED_IN_PARQUET_TEST&"", parquetFileName);"
68884,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetRecordReaderTest.java,131,,"        ""parquet/parquet_scan_screen_read_entry_replace.json""), Charsets.UTF_8).read().replaceFirst("
68885,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetRecordReaderTest.java,402,,"    testParquetFullEngineEventBased(true, ""parquet/parquet_scan_screen.json"", ""/tmp/test.parquet"", 1, props);"
68886,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetRecordReaderTest.java,413,,"    props.fields.put(""a"", new FieldInfo(""boolean"", ""a"", 1, boolVals, TypeProtos.MinorType.BIT, props));"
68887,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetRecordReaderTest.java,440,,"        ""\""/tmp/varLen.parquet/a\"""", ""unused"", 1, props2);"
68888,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetRecordReaderTest.java,509,,"        ""unused, no file is generated"", 1, props, QueryType.PHYSICAL);"
68889,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetRecordReaderTest.java,696,,"    assertTrue(String.format(""Number of records in output is wrong: expected=%d, actual=%s"", 1, recordsInOutput), 1 == recordsInOutput);"
68890,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetSimpleTestFileGenerator.java,65,,"      ""message ParquetLogicalDataTypes { \n"" +"
68891,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetSimpleTestFileGenerator.java,66,,"          ""  required int32 rowKey; \n"" +"
68892,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetSimpleTestFileGenerator.java,91,,"          ""} \n"";"
68893,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetSimpleTestFileGenerator.java,128,,"          ""  } \n"" +"
68894,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetSimpleTestFileGenerator.java,139,,"          ""    } \n"" +"
68895,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetSimpleTestFileGenerator.java,242,,"      complexGroup.add(""rowKey"", ++rowKey);"
68896,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetSimpleTestFileGenerator.java,246,,"          .append(""_UTF8"", ""UTF8 string"" + rowKey)"
68897,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetSimpleTestFileGenerator.java,246,,"          .append(""_UTF8"", ""UTF8 string"" + rowKey)"
68898,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetSimpleTestFileGenerator.java,247,,"          .append(""_Enum"", RANDOM_VALUE.toString())"
68899,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetSimpleTestFileGenerator.java,248,,"          .append(""_UUID"", Binary.fromConstantByteArray(bytes, 0, 16));"
68900,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetSimpleTestFileGenerator.java,251,,"          .append(""_INT32_RAW"", 1234567)"
68901,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetSimpleTestFileGenerator.java,252,,"          .append(""_INT_8"", 123)"
68902,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetSimpleTestFileGenerator.java,253,,"          .append(""_INT_16"", 12345)"
68903,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetSimpleTestFileGenerator.java,254,,"          .append(""_INT_32"", 1234567)"
68904,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetSimpleTestFileGenerator.java,255,,"          .append(""_UINT_8"", 123)"
68905,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetSimpleTestFileGenerator.java,256,,"          .append(""_UINT_16"", 1234)"
68906,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetSimpleTestFileGenerator.java,257,,"          .append(""_UINT_32"", 1234567)"
68907,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetSimpleTestFileGenerator.java,258,,"          .append(""_DECIMAL_decimal9"", 1234567);"
68908,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetSimpleTestFileGenerator.java,260,,"          .append(""_INT64_RAW"", 1234567890123456L)"
68909,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetSimpleTestFileGenerator.java,261,,"          .append(""_INT_64"", 1234567890123456L)"
68910,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetSimpleTestFileGenerator.java,262,,"          .append(""_UINT_64"", 1234567890123456L)"
68911,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetSimpleTestFileGenerator.java,263,,"          .append(""_DECIMAL_decimal18"", 1234567890123456L);"
68912,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetSimpleTestFileGenerator.java,264,,"      numeric.addGroup(""FixedLen"").append(""_DECIMAL_fixed_n"", ""12345678901234567890"");"
68913,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetSimpleTestFileGenerator.java,265,,"      numeric.addGroup(""Binary"").append(""_DECIMAL_unlimited"", ""123456789012345678901234567890"");"
68914,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetSimpleTestFileGenerator.java,267,,"          .append(""_DATE_int32"", 1234567)"
68915,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetSimpleTestFileGenerator.java,268,,"          .append(""_TIME_MILLIS_int32"", 1234567)"
68916,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetSimpleTestFileGenerator.java,269,,"          .append(""_TIMESTAMP_MILLIS_int64"", 123456789012L)"
68917,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetSimpleTestFileGenerator.java,270,,"          .append(""_TIMESTAMP_MICROS_int64"", 123456789012L)"
68918,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetSimpleTestFileGenerator.java,271,,"          .append(""_INTERVAL_fixed_len_byte_array_12"", Binary.fromConstantByteArray(bytes12, 0, 12));"
68919,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetSimpleTestFileGenerator.java,272,,"      numeric.addGroup(""Int96"").append(""_INT96_RAW"", Binary.fromConstantByteArray(bytes12, 0, 12));"
68920,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestComplexColumnInSchema.java,87,,"    columns.add(SchemaPath.getCompoundPath(""nested""));"
68921,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestComplexColumnInSchema.java,113,,"    assertFalse(""No complex column must be detected"","
68922,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestEmptyParquet.java,70,,"      .addNullable(""name"", TypeProtos.MinorType.VARCHAR)"
68923,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestEmptyParquet.java,110,,"      .addRow(2, ""Tom"")"
68924,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestEmptyParquet.java,150,,"      .addArray(""orders"", TypeProtos.MinorType.BIGINT)"
68925,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestFileGenerator.java,65,,"    props.fields.put(""cust_key"", new FieldInfo(""int32"", ""integer"", 32, intVals, TypeProtos.MinorType.INT, props));"
68926,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestFileGenerator.java,65,,"    props.fields.put(""cust_key"", new FieldInfo(""int32"", ""integer"", 32, intVals, TypeProtos.MinorType.INT, props));"
68927,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestFileGenerator.java,77,,"    props.fields.put(""bigInt"", new FieldInfo(""int64"", ""bigInt"", 64, longVals, TypeProtos.MinorType.BIGINT, props));"
68928,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestFileGenerator.java,81,,"    props.fields.put(""bin"", new FieldInfo(""binary"", ""bin"", -1, binVals, TypeProtos.MinorType.VARBINARY, props));"
68929,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestFileGenerator.java,81,,"    props.fields.put(""bin"", new FieldInfo(""binary"", ""bin"", -1, binVals, TypeProtos.MinorType.VARBINARY, props));"
68930,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestFileGenerator.java,82,,"    props.fields.put(""bin2"", new FieldInfo(""binary"", ""bin2"", -1, bin2Vals, TypeProtos.MinorType.VARBINARY, props));"
68931,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetComplex.java,60,,"            .jsonBaselineFile(""store/parquet/complex/baseline.json"")"
68932,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetComplex.java,247,,"                TestBuilder.mapOfObject(false, ""item_amount"", 1L, ""item_type"", ""pencil""),"
68933,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetComplex.java,247,,"                TestBuilder.mapOfObject(false, ""item_amount"", 1L, ""item_type"", ""pencil""),"
68934,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetComplex.java,338,,"        .baselineColumns(""id"", ""val"")"
68935,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetComplex.java,462,,"        .baselineColumns(""id"", ""mapcol"")"
68936,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetComplex.java,463,,"        .baselineValues(5, TestBuilder.mapOfObject(""b"", 6, ""c"", 7, ""a"", 8, ""abc4"", 9, ""bde"", 10))"
68937,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetComplex.java,463,,"        .baselineValues(5, TestBuilder.mapOfObject(""b"", 6, ""c"", 7, ""a"", 8, ""abc4"", 9, ""bde"", 10))"
68938,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetComplex.java,673,,"        .baselineColumns(""id"", ""flat"")"
68939,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetComplex.java,674,,"        .baselineValues(1, TestBuilder.mapOfObject(false, ""key"", ""b"", ""value"", 6))"
68940,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetComplex.java,674,,"        .baselineValues(1, TestBuilder.mapOfObject(false, ""key"", ""b"", ""value"", 6))"
68941,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetFilterPushDown.java,75,,"    dirTestWatcher.copyResourceToRoot(Paths.get(""parquetFilterPush""));"
68942,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetFilterPushDown.java,76,,"    dirTestWatcher.copyResourceToRoot(Paths.get(""parquet"", ""multirowgroup.parquet""));"
68943,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetFilterPushDown.java,221,,"      .resolve(Paths.get(""parquetFilterPush"", ""dateTblCorrupted"", ""t1"", ""0_0_0.parquet""))"
68944,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetFilterPushDown.java,293,,"    PlanTestBase.testPlanMatchingPatterns(sql + ""a > 1"", new String[]{""numRowGroups=2""}); //No filter pruning"
68945,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetFilterPushDown.java,294,,"    PlanTestBase.testPlanMatchingPatterns(sql + ""a > 2"", new String[]{""numRowGroups=1""}, new String[]{""Filter\\(""}); // Filter pruning"
68946,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetFilterPushDown.java,294,,"    PlanTestBase.testPlanMatchingPatterns(sql + ""a > 2"", new String[]{""numRowGroups=1""}, new String[]{""Filter\\(""}); // Filter pruning"
68947,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetFilterPushdownWithTransitivePredicates.java,57,,"    assertEquals(""Expected and actual row count should match"", expectedRowCount, actualRowCount);"
68948,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetFilterPushdownWithTransitivePredicates.java,59,,"    final String[] expectedPlan = {""first.*numRowGroups=1"", ""second.*numRowGroups=1"", ""third.*numRowGroups=3""};"
68949,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetFilterPushdownWithTransitivePredicates.java,59,,"    final String[] expectedPlan = {""first.*numRowGroups=1"", ""second.*numRowGroups=1"", ""third.*numRowGroups=3""};"
68950,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetFilterPushdownWithTransitivePredicates.java,87,,"    final String[] expectedPlan = {""first.*numRowGroups=2"", ""second.*numRowGroups=2"", ""third.*numRowGroups=3""};"
68951,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetFilterPushdownWithTransitivePredicates.java,87,,"    final String[] expectedPlan = {""first.*numRowGroups=2"", ""second.*numRowGroups=2"", ""third.*numRowGroups=3""};"
68952,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetFilterPushdownWithTransitivePredicates.java,107,,"    String query = String.format(""SELECT * FROM %s t1 JOIN %s t2 "" +"
68953,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetGroupScan.java,59,,"    assertEquals(String.format(""Received unexpected number of rows in output: expected = %d, received = %s"","
68954,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,71,,"        "" select "" +"
68955,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,72,,"        "" t.rowKey as rowKey, "" +"
68956,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,73,,"        "" t.StringTypes._UTF8 as _UTF8, "" +"
68957,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,74,,"        "" t.StringTypes._Enum as _Enum, "" +"
68958,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,75,,"        "" t.NumericTypes.Int32._INT32_RAW as _INT32_RAW, "" +"
68959,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,76,,"        "" t.NumericTypes.Int32._INT_8 as _INT_8, "" +"
68960,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,77,,"        "" t.NumericTypes.Int32._INT_16 as _INT_16, "" +"
68961,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,78,,"        "" t.NumericTypes.Int32._INT_32 as _INT_32, "" +"
68962,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,79,,"        "" t.NumericTypes.Int32._UINT_8 as _UINT_8, "" +"
68963,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,80,,"        "" t.NumericTypes.Int32._UINT_16 as _UINT_16, "" +"
68964,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,81,,"        "" t.NumericTypes.Int32._UINT_32 as _UINT_32, "" +"
68965,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,82,,"        "" t.NumericTypes.Int64._INT64_RAW as _INT64_RAW, "" +"
68966,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,83,,"        "" t.NumericTypes.Int64._INT_64 as _INT_64, "" +"
68967,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,84,,"        "" t.NumericTypes.Int64._UINT_64 as _UINT_64, "" +"
68968,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,85,,"        "" t.NumericTypes.DateTimeTypes._DATE_int32 as _DATE_int32, "" +"
68969,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,86,,"        "" t.NumericTypes.DateTimeTypes._TIME_MILLIS_int32 as _TIME_MILLIS_int32, "" +"
68970,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,87,,"        "" t.NumericTypes.DateTimeTypes._TIMESTAMP_MILLIS_int64 as _TIMESTAMP_MILLIS_int64, "" +"
68971,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,88,,"        "" t.NumericTypes.DateTimeTypes._TIMESTAMP_MICROS_int64 as _TIMESTAMP_MICROS_int64, "" +"
68972,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,89,,"        "" t.NumericTypes.DateTimeTypes._INTERVAL_fixed_len_byte_array_12 as _INTERVAL_fixed_len_byte_array_12, "" +"
68973,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,90,,"        "" t.NumericTypes.Int96._INT96_RAW as _INT96_RAW "" +"
68974,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,91,,"        "" from "" +"
68975,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,93,,"        "" order by t.rowKey "";"
68976,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,95,,"        ""rowKey "","
68977,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,96,,"        ""_UTF8"","
68978,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,97,,"        ""_Enum"","
68979,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,98,,"        ""_INT32_RAW"","
68980,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,99,,"        ""_INT_8"","
68981,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,100,,"        ""_INT_16"","
68982,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,101,,"        ""_INT_32"","
68983,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,102,,"        ""_UINT_8"","
68984,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,103,,"        ""_UINT_16"","
68985,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,104,,"        ""_UINT_32"","
68986,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,105,,"        ""_INT64_RAW"","
68987,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,106,,"        ""_INT_64"","
68988,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,107,,"        ""_UINT_64"","
68989,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,108,,"        ""_DATE_int32"","
68990,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,109,,"        ""_TIME_MILLIS_int32"","
68991,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,110,,"        ""_TIMESTAMP_MILLIS_int64"","
68992,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,111,,"        ""_TIMESTAMP_MICROS_int64"","
68993,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,112,,"        ""_INTERVAL_fixed_len_byte_array_12"","
68994,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,113,,"        ""_INT96_RAW"""
68995,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,120,,"        .baselineValues(1, ""UTF8 string1"", ""RANDOM_VALUE"", 1234567, 123, 12345, 1234567, 123, 1234, 1234567,"
68996,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,120,,"        .baselineValues(1, ""UTF8 string1"", ""RANDOM_VALUE"", 1234567, 123, 12345, 1234567, 123, 1234, 1234567,"
68997,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,121,,"            1234567890123456L, 1234567890123456L, 1234567890123456L, LocalDate.parse(""5350-02-17""),"
68998,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,123,,"            LocalDateTime.parse(""1973-11-29T21:33:09.012""), 123456789012L,"
68999,./TargetProjects/drill/exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/TestParquetLogicalTypes.java,126,,"        .baselineValues(2, ""UTF8 string2"", ""MAX_VALUE"", 2147483647, 127, 32767, 2147483647, 255, 65535, -1,"
