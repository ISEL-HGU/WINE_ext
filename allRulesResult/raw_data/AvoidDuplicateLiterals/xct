71000,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/hrtr/HttpRemoteTaskRunnerTest.java,199,,"    Task task2 = NoopTask.create(""task-id-2"", 0);"
71001,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/hrtr/HttpRemoteTaskRunnerTest.java,347,,"          throw new ISE(""No WorkerHolder for [%s]."", worker.getHost());"
71002,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/hrtr/HttpRemoteTaskRunnerTest.java,355,,"        new DruidNode(""service"", ""host"", false, 1234, null, true, false),"
71003,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/hrtr/HttpRemoteTaskRunnerTest.java,366,,"        ""host:1234"","
71004,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/hrtr/HttpRemoteTaskRunnerTest.java,1031,,"    EasyMock.expect(workerHolder.getWorker()).andReturn(new Worker(""http"", ""worker"", ""127.0.0.1"", 1, ""v1"", WorkerConfig.DEFAULT_CATEGORY)).anyTimes();"
71005,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/hrtr/HttpRemoteTaskRunnerTest.java,1031,,"    EasyMock.expect(workerHolder.getWorker()).andReturn(new Worker(""http"", ""worker"", ""127.0.0.1"", 1, ""v1"", WorkerConfig.DEFAULT_CATEGORY)).anyTimes();"
71006,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/hrtr/HttpRemoteTaskRunnerTest.java,1031,,"    EasyMock.expect(workerHolder.getWorker()).andReturn(new Worker(""http"", ""worker"", ""127.0.0.1"", 1, ""v1"", WorkerConfig.DEFAULT_CATEGORY)).anyTimes();"
71007,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/hrtr/HttpRemoteTaskRunnerTest.java,1067,,"            .andReturn(new Worker(""http"", ""rogue-worker"", ""127.0.0.1"", 5, ""v1"", WorkerConfig.DEFAULT_CATEGORY))"
71008,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/http/OverlordResourceTest.java,119,,"            if (resource.getName().equals(""allow"")) {"
71009,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/http/OverlordResourceTest.java,205,,"                ""id_1"","
71010,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/http/OverlordResourceTest.java,212,,"                ""id_2"","
71011,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/http/OverlordResourceTest.java,219,,"                ""id_3"","
71012,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/http/OverlordResourceTest.java,222,,"                ""deny"","
71013,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/http/OverlordResourceTest.java,226,,"                ""id_4"","
71014,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/http/OverlordResourceTest.java,366,,"                ""id_5"","
71015,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/http/OverlordResourceTest.java,373,,"                ""id_6"","
71016,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/http/OverlordResourceTest.java,380,,"                ""id_7"","
71017,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/http/OverlordResourceTest.java,550,,"    Assert.assertTrue(""DataSource Check"", ""allow"".equals(responseObjects.get(0).getDataSource()));"
71018,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/http/OverlordResourceTest.java,967,,"    EasyMock.expect(taskStorageQueryAdapter.getTask(""mytask""))"
71019,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/http/OverlordResourceTest.java,970,,"    EasyMock.expect(taskStorageQueryAdapter.getTask(""othertask""))"
71020,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/http/OverlordResourceTest.java,1169,,"    EasyMock.expect(taskStorageQueryAdapter.getActiveTaskInfo(""datasource"")).andStubReturn(ImmutableList.of("
71021,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/http/OverlordResourceTest.java,1229,,"    final String host = ""worker-host"";"
71022,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/http/OverlordResourceTest.java,1278,,"    EasyMock.expectLastCall().andThrow(new RE(""Worker API returns error!"")).once();"
71023,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/sampler/CsvInputSourceSamplerTest.java,81,,"                .put(""Number"", null)"
71024,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/sampler/CsvInputSourceSamplerTest.java,82,,"                .put(""FirstName"", ""J"")"
71025,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/sampler/CsvInputSourceSamplerTest.java,83,,"                .put(""LastName"", ""G"")"
71026,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/sampler/CsvInputSourceSamplerTest.java,84,,"                .put(""Gender"", ""Male"")"
71027,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/sampler/CsvInputSourceSamplerTest.java,84,,"                .put(""Gender"", ""Male"")"
71028,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/sampler/CsvInputSourceSamplerTest.java,87,,"                .put(""__time"", 0L)"
71029,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/sampler/InputSourceSamplerTest.java,148,,"    final List<String> columns = ImmutableList.of(""t"", ""dim1"", ""dim2"", ""met1"");"
71030,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/sampler/InputSourceSamplerTest.java,148,,"    final List<String> columns = ImmutableList.of(""t"", ""dim1"", ""dim2"", ""met1"");"
71031,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/sampler/InputSourceSamplerTest.java,148,,"    final List<String> columns = ImmutableList.of(""t"", ""dim1"", ""dim2"", ""met1"");"
71032,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/sampler/InputSourceSamplerTest.java,307,,"                .put(""__time"", 0L)"
71033,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/sampler/InputSourceSamplerTest.java,308,,"                .put(""t"", ""2019-04-22T12:00"")"
71034,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/sampler/InputSourceSamplerTest.java,310,,"                .put(""dim1"", ""foo"")"
71035,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/sampler/InputSourceSamplerTest.java,355,,"                .put(""dim1"", ""foo2"")"
71036,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/sampler/InputSourceSamplerTest.java,369,,"                .put(""dim2"", ""bar"")"
71037,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/sampler/InputSourceSamplerTest.java,856,,"        ImmutableList.of(new ExpressionTransform(""dim1PlusBar"", ""concat(dim1, 'bar')"", TestExprMacroTable.INSTANCE))"
71038,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/sampler/InputSourceSamplerTest.java,1333,,"        throw new IAE(""Unknown parser type: %s"", parserType);"
71039,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/setup/EqualDistributionWithAffinityWorkerSelectStrategyTest.java,43,,"        new AffinityConfig(ImmutableMap.of(""foo"", ImmutableSet.of(""localhost1"", ""localhost2"", ""localhost3"")), false)"
71040,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/setup/EqualDistributionWithAffinityWorkerSelectStrategyTest.java,43,,"        new AffinityConfig(ImmutableMap.of(""foo"", ImmutableSet.of(""localhost1"", ""localhost2"", ""localhost3"")), false)"
71041,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/setup/EqualDistributionWithAffinityWorkerSelectStrategyTest.java,43,,"        new AffinityConfig(ImmutableMap.of(""foo"", ImmutableSet.of(""localhost1"", ""localhost2"", ""localhost3"")), false)"
71042,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/setup/EqualDistributionWithAffinityWorkerSelectStrategyTest.java,43,,"        new AffinityConfig(ImmutableMap.of(""foo"", ImmutableSet.of(""localhost1"", ""localhost2"", ""localhost3"")), false)"
71043,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/setup/EqualDistributionWithAffinityWorkerSelectStrategyTest.java,59,,"                        new Worker(""http"", ""localhost0"", ""localhost0"", 2, ""v1"", WorkerConfig.DEFAULT_CATEGORY), 0,"
71044,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/setup/EqualDistributionWithAffinityWorkerSelectStrategyTest.java,95,,"            new AffinityConfig(ImmutableMap.of(""foo"", ImmutableSet.of(""localhost"")), false)"
71045,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/setup/EqualDistributionWithAffinityWorkerSelectStrategyTest.java,101,,"                    ""lhost"","
71046,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/setup/EqualDistributionWithCategorySpecWorkerSelectStrategyTest.java,39,,"              new Worker(""http"", ""localhost0"", ""localhost0"", 1, ""v1"", ""c1""), 0,"
71047,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/setup/EqualDistributionWithCategorySpecWorkerSelectStrategyTest.java,58,,"          ""localhost3"","
71048,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/setup/EqualDistributionWithCategorySpecWorkerSelectStrategyTest.java,80,,"            ""noop"","
71049,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/setup/EqualDistributionWithCategorySpecWorkerSelectStrategyTest.java,83,,"                ImmutableMap.of(""ds1"", ""c2"")"
71050,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/setup/EqualDistributionWorkerSelectStrategyTest.java,39,,"          ""localhost0"","
71051,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/setup/EqualDistributionWorkerSelectStrategyTest.java,41,,"              new Worker(""http"", ""localhost0"", ""localhost0"", 2, ""v1"", WorkerConfig.DEFAULT_CATEGORY), 0,"
71052,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/setup/EqualDistributionWorkerSelectStrategyTest.java,46,,"          ""localhost1"","
71053,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/setup/EqualDistributionWorkerSelectStrategyTest.java,53,,"          ""localhost2"","
71054,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/setup/EqualDistributionWorkerSelectStrategyTest.java,60,,"          ""localhost3"","
71055,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/setup/EqualDistributionWorkerSelectStrategyTest.java,77,,"            ""lhost"","
71056,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/setup/EqualDistributionWorkerSelectStrategyTest.java,84,,"            ""localhost"","
71057,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/setup/EqualDistributionWorkerSelectStrategyTest.java,97,,"            return ""foo"";"
71058,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/setup/EqualDistributionWorkerSelectStrategyTest.java,150,,"                new Worker(""http"", ""disableHost"", ""disableHost"", 10, disabledVersion, WorkerConfig.DEFAULT_CATEGORY), 2,"
71059,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/setup/EqualDistributionWorkerSelectStrategyTest.java,157,,"                new Worker(""http"", ""enableHost"", ""enableHost"", 10, ""v1"", WorkerConfig.DEFAULT_CATEGORY), 5,"
71060,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/setup/EqualDistributionWorkerSelectStrategyTest.java,218,,"                ""bar"", ImmutableSet.of(""nonexistent-worker"")"
71061,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/setup/FillCapacityWithAffinityWorkerSelectStrategyTest.java,41,,"        new AffinityConfig(ImmutableMap.of(""foo"", ImmutableSet.of(""localhost"")), false)"
71062,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/setup/FillCapacityWithAffinityWorkerSelectStrategyTest.java,41,,"        new AffinityConfig(ImmutableMap.of(""foo"", ImmutableSet.of(""localhost"")), false)"
71063,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/setup/FillCapacityWithAffinityWorkerSelectStrategyTest.java,47,,"            ""lhost"","
71064,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/setup/FillCapacityWithAffinityWorkerSelectStrategyTest.java,49,,"                new Worker(""http"", ""lhost"", ""lhost"", 1, ""v1"", WorkerConfig.DEFAULT_CATEGORY), 0,"
71065,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/setup/FillCapacityWithCategorySpecWorkerSelectStrategyTest.java,39,,"              new Worker(""http"", ""localhost0"", ""localhost0"", 5, ""v1"", ""c1""), 1,"
71066,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/setup/FillCapacityWithCategorySpecWorkerSelectStrategyTest.java,44,,"          ""localhost1"","
71067,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/setup/FillCapacityWithCategorySpecWorkerSelectStrategyTest.java,58,,"          ""localhost3"","
71068,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/setup/FillCapacityWithCategorySpecWorkerSelectStrategyTest.java,80,,"            ""noop"","
71069,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/setup/FillCapacityWithCategorySpecWorkerSelectStrategyTest.java,83,,"                ImmutableMap.of(""ds1"", ""c1"")"
71070,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/setup/JavaScriptWorkerSelectStrategyTest.java,131,,"        ""10.0.0.1"", worker1,"
71071,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/setup/JavaScriptWorkerSelectStrategyTest.java,136,,"        new TestRemoteTaskRunnerConfig(new Period(""PT1S"")),"
71072,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/setup/JavaScriptWorkerSelectStrategyTest.java,138,,"        createMockTask(""index_hadoop"")"
71073,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/supervisor/SupervisorManagerTest.java,72,,"    SupervisorSpec spec = new TestSupervisorSpec(""id1"", supervisor1);"
71074,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/supervisor/SupervisorManagerTest.java,75,,"        ""id3"", new TestSupervisorSpec(""id3"", supervisor3)"
71075,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/supervisor/SupervisorResourceTest.java,61,,"      ""id1"","
71076,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/supervisor/SupervisorResourceTest.java,63,,"      Collections.singletonList(""datasource1"")"
71077,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/supervisor/SupervisorResourceTest.java,67,,"      ""id2"","
71078,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/supervisor/SupervisorResourceTest.java,69,,"      Collections.singletonList(""datasource2"")"
71079,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/supervisor/SupervisorResourceTest.java,96,,"              if (authenticationResult.getIdentity().equals(""druid"")) {"
71080,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/supervisor/SupervisorResourceTest.java,115,,"    SupervisorSpec spec = new TestSupervisorSpec(""my-id"", null, null)"
71081,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/supervisor/SupervisorResourceTest.java,309,,"    EasyMock.expect(supervisorManager.getSupervisorSpec(""my-id-2"")).andReturn(Optional.absent());"
71082,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/supervisor/SupervisorResourceTest.java,520,,"    Assert.assertEquals(ImmutableMap.of(""status"", ""success""), response.getEntity());"
71083,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/supervisor/SupervisorResourceTest.java,520,,"    Assert.assertEquals(ImmutableMap.of(""status"", ""success""), response.getEntity());"
71084,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/supervisor/SupervisorResourceTest.java,660,,"            ""tombstone"""
71085,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/supervisor/SupervisorResourceTest.java,683,,"            new TestSupervisorSpec(""id2"", null, Collections.singletonList(""datasource3"")),"
71086,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/supervisor/SupervisorResourceTest.java,706,,"    history.put(""id3"", versions3);"
71087,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/seekablestream/SeekableStreamIndexTaskTestBase.java,113,,"              new StringDimensionSchema(""dim1""),"
71088,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/seekablestream/SeekableStreamIndexTaskTestBase.java,124,,"          new CountAggregatorFactory(""rows"")"
71089,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/seekablestream/SeekableStreamSupervisorSpecTest.java,97,,"  private static final String STREAM = ""stream"";"
71090,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/seekablestream/SeekableStreamSupervisorSpecTest.java,536,,"    AutoScalerConfig autoScalerConfigValue = mapper.convertValue(ImmutableMap.of(""lagCollectionIntervalMillis"", ""1""), AutoScalerConfig.class);"
71091,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/seekablestream/SeekableStreamSupervisorSpecTest.java,543,,"      AutoScalerConfig autoScalerError = mapper.convertValue(ImmutableMap.of(""enableTaskAutoScaler"", ""true"", ""taskCountMax"", ""1"", ""taskCountMin"", ""4""), AutoScalerConfig.class);"
71092,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/seekablestream/SeekableStreamSupervisorSpecTest.java,543,,"      AutoScalerConfig autoScalerError = mapper.convertValue(ImmutableMap.of(""enableTaskAutoScaler"", ""true"", ""taskCountMax"", ""1"", ""taskCountMin"", ""4""), AutoScalerConfig.class);"
71093,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/seekablestream/SeekableStreamSupervisorSpecTest.java,543,,"      AutoScalerConfig autoScalerError = mapper.convertValue(ImmutableMap.of(""enableTaskAutoScaler"", ""true"", ""taskCountMax"", ""1"", ""taskCountMin"", ""4""), AutoScalerConfig.class);"
71094,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/seekablestream/supervisor/SeekableStreamSupervisorStateManagerTest.java,148,,"      stateManager.recordThrowableEvent(new NullPointerException(""oof""));"
71095,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/seekablestream/supervisor/SeekableStreamSupervisorStateTest.java,647,,"    Assert.assertEquals(""ingest/test/lag"", emitter.getEvents().get(0).toMap().get(""metric""));"
71096,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/seekablestream/supervisor/SeekableStreamSupervisorStateTest.java,648,,"    Assert.assertEquals(850L, emitter.getEvents().get(0).toMap().get(""value""));"
71097,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/worker/TaskAnnouncementTest.java,54,,"        ""theid"","
71098,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/worker/shuffle/IntermediaryDataManagerManualAddAndDeleteTest.java,97,,"      File segmentFile = generateSegmentDir(""file_"" + i);"
71099,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/worker/shuffle/IntermediaryDataManagerManualAddAndDeleteTest.java,98,,"      DataSegment segment = newSegment(Intervals.of(""2018/2019""), i);"
71100,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/worker/shuffle/IntermediaryDataManagerManualAddAndDeleteTest.java,99,,"      intermediaryDataManager.addSegment(""supervisorTaskId"", ""subTaskId"", segment, segmentFile);"
71101,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/worker/shuffle/IntermediaryDataManagerManualAddAndDeleteTest.java,99,,"      intermediaryDataManager.addSegment(""supervisorTaskId"", ""subTaskId"", segment, segmentFile);"
71102,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/worker/shuffle/IntermediaryDataManagerManualAddAndDeleteTest.java,117,,"      intermediaryDataManager.addSegment(supervisorTaskId, ""subTaskId_"" + i, segment, segmentFile);"
71103,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/server/initialization/IndexerZkConfigTest.java,77,,"        CLOBBERABLE_PROPERTIES.add(StringUtils.format(""%s.%s"", INDEXER_PROPERTY_STRING, field.getName()));"
71104,./TargetProjects/druid/integration-tests/src/main/java/org/apache/druid/testing/ConfigFileConfigProvider.java,99,,"        routerUrl = StringUtils.format(""http://%s:%s"", routerHost, props.get(""router_port""));"
71105,./TargetProjects/druid/integration-tests/src/main/java/org/apache/druid/testing/ConfigFileConfigProvider.java,105,,"        routerTLSUrl = StringUtils.format(""https://%s:%s"", routerHost, props.get(""router_tls_port""));"
71106,./TargetProjects/druid/integration-tests/src/main/java/org/apache/druid/testing/ConfigFileConfigProvider.java,124,,"      String noClientAuthRouterHost = props.get(""router_no_client_auth_host"");"
71107,./TargetProjects/druid/integration-tests/src/main/java/org/apache/druid/testing/DockerConfigProvider.java,81,,"        return ""http://"" + dockerIp + "":8081"";"
71108,./TargetProjects/druid/integration-tests/src/main/java/org/apache/druid/testing/DockerConfigProvider.java,87,,"        return ""https://"" + dockerIp + "":8281"";"
71109,./TargetProjects/druid/integration-tests/src/main/java/org/apache/druid/testing/clients/CoordinatorResourceTestClient.java,266,,"            ""application/json"","
71110,./TargetProjects/druid/integration-tests/src/main/java/org/apache/druid/testing/clients/TaskResponseObject.java,52,,"  @SuppressWarnings(""unused"") // Used by Jackson serialization?"
71111,./TargetProjects/druid/integration-tests/src/main/java/org/apache/druid/testing/utils/ProtobufEventSerializer.java,42,,"        .addField(""optional"", ""string"", ""timestamp"", 1)"
71112,./TargetProjects/druid/integration-tests/src/main/java/org/apache/druid/testing/utils/ProtobufEventSerializer.java,42,,"        .addField(""optional"", ""string"", ""timestamp"", 1)"
71113,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/hadoop/ITHadoopIndexTest.java,89,,"        {new HashedPartitionsSpec(null, 3, ImmutableList.of(""page""))},"
71114,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/hadoop/ITHadoopIndexTest.java,112,,"              ""%%INPUT_PATHS%%"","
71115,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/indexer/AbstractAzureInputSourceParallelIndexTest.java,51,,"                        ""azure://%%BUCKET%%/%%PATH%%"" + WIKIPEDIA_DATA_1,"
71116,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/indexer/AbstractAzureInputSourceParallelIndexTest.java,63,,"                        ImmutableMap.of(""bucket"", ""%%BUCKET%%"", ""path"", ""%%PATH%%"" + WIKIPEDIA_DATA_1),"
71117,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/indexer/AbstractAzureInputSourceParallelIndexTest.java,63,,"                        ImmutableMap.of(""bucket"", ""%%BUCKET%%"", ""path"", ""%%PATH%%"" + WIKIPEDIA_DATA_1),"
71118,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/indexer/AbstractGcsInputSourceParallelIndexTest.java,51,,"                        ""gs://%%BUCKET%%/%%PATH%%"" + WIKIPEDIA_DATA_1,"
71119,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/indexer/AbstractGcsInputSourceParallelIndexTest.java,63,,"                        ImmutableMap.of(""bucket"", ""%%BUCKET%%"", ""path"", ""%%PATH%%"" + WIKIPEDIA_DATA_1),"
71120,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/indexer/AbstractGcsInputSourceParallelIndexTest.java,63,,"                        ImmutableMap.of(""bucket"", ""%%BUCKET%%"", ""path"", ""%%PATH%%"" + WIKIPEDIA_DATA_1),"
71121,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/indexer/AbstractITBatchIndexTest.java,141,,"            ""%%DATASOURCE%%"","
71122,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/indexer/AbstractOssInputSourceParallelIndexTest.java,51,,"                        ""oss://%%BUCKET%%/%%PATH%%"" + WIKIPEDIA_DATA_1,"
71123,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/indexer/AbstractOssInputSourceParallelIndexTest.java,63,,"                        ImmutableMap.of(""bucket"", ""%%BUCKET%%"", ""path"", ""%%PATH%%"" + WIKIPEDIA_DATA_1),"
71124,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/indexer/AbstractOssInputSourceParallelIndexTest.java,63,,"                        ImmutableMap.of(""bucket"", ""%%BUCKET%%"", ""path"", ""%%PATH%%"" + WIKIPEDIA_DATA_1),"
71125,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/indexer/AbstractS3InputSourceParallelIndexTest.java,51,,"                        ""s3://%%BUCKET%%/%%PATH%%"" + WIKIPEDIA_DATA_1,"
71126,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/indexer/AbstractS3InputSourceParallelIndexTest.java,63,,"                        ImmutableMap.of(""bucket"", ""%%BUCKET%%"", ""path"", ""%%PATH%%"" + WIKIPEDIA_DATA_1),"
71127,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/indexer/AbstractS3InputSourceParallelIndexTest.java,63,,"                        ImmutableMap.of(""bucket"", ""%%BUCKET%%"", ""path"", ""%%PATH%%"" + WIKIPEDIA_DATA_1),"
71128,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/indexer/AbstractStreamIndexingTest.java,196,,"      LOG.info(""supervisorSpec: [%s]\n"", taskSpec);"
71129,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/indexer/AbstractStreamIndexingTest.java,199,,"      LOG.info(""Submitted supervisor"");"
71130,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/indexer/AbstractStreamIndexingTest.java,275,,"          ""Waiting for supervisor to be healthy"""
71131,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/indexer/ITCompactionSparseColumnTest.java,77,,"      template = StringUtils.replace(template, ""%%DATASOURCE%%"", fullDatasourceName);"
71132,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/indexer/ITCompactionSparseColumnTest.java,190,,"    expectedResultBeforeCompaction.add(ImmutableMap.of(""events"", segment1Rows));"
71133,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/indexer/ITLocalInputSourceAllInputFormatTest.java,41,,"        ImmutableMap.of(""name"", ""timestamp"", ""type"", ""string""),"
71134,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/indexer/ITLocalInputSourceAllInputFormatTest.java,41,,"        ImmutableMap.of(""name"", ""timestamp"", ""type"", ""string""),"
71135,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/indexer/ITLocalInputSourceAllInputFormatTest.java,41,,"        ImmutableMap.of(""name"", ""timestamp"", ""type"", ""string""),"
71136,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/indexer/ITS3OverrideCredentialsIndexTest.java,64,,"          ImmutableMap.of(""bucket"", ""%%BUCKET%%"", ""path"", ""%%PATH%%"" + WIKIPEDIA_DATA_1),"
71137,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/indexer/ITS3OverrideCredentialsIndexTest.java,64,,"          ImmutableMap.of(""bucket"", ""%%BUCKET%%"", ""path"", ""%%PATH%%"" + WIKIPEDIA_DATA_1),"
71138,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/indexer/ITS3OverrideCredentialsIndexTest.java,94,,"                  ImmutableMap.of(""type"", ""environment"", ""variable"", ""OVERRIDE_S3_ACCESS_KEY"")"
71139,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/indexer/ITS3OverrideCredentialsIndexTest.java,94,,"                  ImmutableMap.of(""type"", ""environment"", ""variable"", ""OVERRIDE_S3_ACCESS_KEY"")"
71140,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/indexer/ITS3OverrideCredentialsIndexTest.java,94,,"                  ImmutableMap.of(""type"", ""environment"", ""variable"", ""OVERRIDE_S3_ACCESS_KEY"")"
71141,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/query/ITJdbcQueryTest.java,129,,"        Assert.assertEquals(catalogs, ImmutableList.of(""druid""));"
71142,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/query/ITQueryErrorTest.java,89,,"  @Test(expectedExceptions = {RuntimeException.class}, expectedExceptionsMessageRegExp = ""(?s).*400.*"")"
71143,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/security/AbstractAuthConfigurationTest.java,117,,"    HttpUtil.makeRequest(httpClient, HttpMethod.GET, config.getCoordinatorUrl() + ""/status"", null);"
71144,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/security/AbstractAuthConfigurationTest.java,152,,"      connectionProperties.setProperty(""user"", ""admin"");"
71145,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/security/AbstractAuthConfigurationTest.java,153,,"      connectionProperties.setProperty(""password"", ""priest"");"
71146,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/security/ITBasicAuthConfigurationTest.java,65,,"        () -> coordinatorClient.areSegmentsLoaded(""auth_test""), ""auth_test segment load"""
71147,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/security/ITBasicAuthConfigurationTest.java,126,,"                     .filter((segmentEntry) -> ""auth_test"".equals(segmentEntry.get(""datasource"")))"
71148,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/security/ITBasicAuthConfigurationTest.java,338,,"        ""helloworld"","
71149,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/security/ITBasicAuthLdapConfigurationTest.java,81,,"        () -> coordinatorClient.areSegmentsLoaded(""auth_test""), ""auth_test segment load"""
71150,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/security/ITBasicAuthLdapConfigurationTest.java,142,,"                     .filter((segmentEntry) -> ""auth_test"".equals(segmentEntry.get(""datasource"")))"
71151,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/security/ITTLSTest.java,95,,"        new BasicCredentials(""admin"", ""priest""),"
71152,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/security/ITTLSTest.java,95,,"        new BasicCredentials(""admin"", ""priest""),"
71153,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/security/ITTLSTest.java,98,,"    makeRequest(adminClient, HttpMethod.GET, config.getCoordinatorUrl() + ""/status"", null);"
71154,./TargetProjects/druid/integration-tests/src/test/java/org/apache/druid/tests/security/ITTLSTest.java,289,,"        ""Received fatal alert: certificate_unknown"","
71155,./TargetProjects/druid/processing/src/main/java/org/apache/druid/query/aggregation/SuppressedAggregatorFactory.java,209,,"           ""delegate="" + delegate +"
71156,./TargetProjects/druid/processing/src/main/java/org/apache/druid/query/monomorphicprocessing/StringRuntimeShape.java,64,,"        sb.append("",\n"");"
71157,./TargetProjects/druid/processing/src/main/java/org/apache/druid/query/search/DefaultSearchQueryMetrics.java,57,,"    throw new ISE(""Unsupported method in default query metrics implementation."");"
71158,./TargetProjects/druid/processing/src/main/java/org/apache/druid/segment/DimensionSelectorUtils.java,90,,"          inspector.visit(""selector"", selector);"
71159,./TargetProjects/druid/processing/src/main/java/org/apache/druid/segment/RowBasedColumnSelectorFactory.java,157,,"          inspector.visit(""row"", supplier);"
71160,./TargetProjects/druid/processing/src/main/java/org/apache/druid/segment/VirtualColumn.java,77,,"  @SuppressWarnings(""unused"")"
71161,./TargetProjects/druid/processing/src/main/java/org/apache/druid/segment/VirtualColumn.java,129,,"    throw new UnsupportedOperationException(""not supported"");"
71162,./TargetProjects/druid/processing/src/main/java/org/apache/druid/segment/VirtualColumns.java,192,,"    Preconditions.checkNotNull(selector, ""selector"");"
71163,./TargetProjects/druid/processing/src/main/java/org/apache/druid/segment/filter/ValueMatchers.java,133,,"        inspector.visit(""selector"", selector);"
71164,./TargetProjects/druid/processing/src/main/java/org/apache/druid/segment/generator/GeneratorBasicSchemas.java,49,,"        GeneratorColumnSchema.makeSequential(""dimSequential"", ValueType.STRING, false, 1, null, 0, 1000),"
71165,./TargetProjects/druid/processing/src/main/java/org/apache/druid/segment/generator/GeneratorBasicSchemas.java,72,,"        GeneratorColumnSchema.makeSequential(""dimHyperUnique"", ValueType.STRING, false, 1, null, 0, 100000),"
71166,./TargetProjects/druid/processing/src/main/java/org/apache/druid/segment/generator/GeneratorBasicSchemas.java,77,,"        GeneratorColumnSchema.makeDiscreteUniform(""metLongUniform"", ValueType.LONG, true, 1, null, 0, 500),"
71167,./TargetProjects/druid/processing/src/main/java/org/apache/druid/segment/generator/GeneratorBasicSchemas.java,78,,"        GeneratorColumnSchema.makeNormal(""metFloatNormal"", ValueType.FLOAT, true, 1, null, 5000.0, 1.0, true),"
71168,./TargetProjects/druid/processing/src/main/java/org/apache/druid/segment/generator/GeneratorBasicSchemas.java,79,,"        GeneratorColumnSchema.makeZipf(""metFloatZipf"", ValueType.FLOAT, true, 1, null, 0, 1000, 1.0)"
71169,./TargetProjects/druid/processing/src/main/java/org/apache/druid/segment/generator/GeneratorBasicSchemas.java,83,,"    basicSchemaIngestAggs.add(new CountAggregatorFactory(""rows""));"
71170,./TargetProjects/druid/processing/src/main/java/org/apache/druid/segment/generator/GeneratorBasicSchemas.java,108,,"    Interval basicSchemaDataInterval = Intervals.of(""2000-01-01/P1D"");"
71171,./TargetProjects/druid/processing/src/main/java/org/apache/druid/segment/incremental/IncrementalIndex.java,1394,,"      inspector.visit(""index"", IncrementalIndex.this);"
71172,./TargetProjects/druid/processing/src/main/java/org/apache/druid/segment/virtual/ExpressionVirtualColumn.java,66,,"      @JsonProperty(""name"") String name,"
71173,./TargetProjects/druid/processing/src/test/java/org/apache/druid/granularity/QueryGranularityTest.java,72,,"    final DateTime baseTime = DateTimes.of(""2011-01-01T09:38:00.000Z"");"
71174,./TargetProjects/druid/processing/src/test/java/org/apache/druid/granularity/QueryGranularityTest.java,87,,"    final DateTime baseTime = DateTimes.of(""2011-01-01T09:38:02.992Z"");"
71175,./TargetProjects/druid/processing/src/test/java/org/apache/druid/granularity/QueryGranularityTest.java,109,,"            DateTimes.of(""2011-01-01T10:00:00.000Z"")"
71176,./TargetProjects/druid/processing/src/test/java/org/apache/druid/granularity/QueryGranularityTest.java,163,,"    final DateTime baseTime = DateTimes.of(""2011-01-01T00:00:00.000Z"");"
71177,./TargetProjects/druid/processing/src/test/java/org/apache/druid/granularity/QueryGranularityTest.java,169,,"            DateTimes.of(""2011-01-03T00:00:00.000Z"")"
71178,./TargetProjects/druid/processing/src/test/java/org/apache/druid/granularity/QueryGranularityTest.java,318,,"    final DateTimeZone tz = DateTimes.inferTzFromString(""America/Los_Angeles"");"
71179,./TargetProjects/druid/processing/src/test/java/org/apache/druid/granularity/QueryGranularityTest.java,326,,"        new PeriodGranularity(new Period(""P1D""), null, tz)"
71180,./TargetProjects/druid/processing/src/test/java/org/apache/druid/granularity/QueryGranularityTest.java,338,,"        new PeriodGranularity(new Period(""PT1H""), null, tz)"
71181,./TargetProjects/druid/processing/src/test/java/org/apache/druid/granularity/QueryGranularityTest.java,409,,"    final DateTime origin = DateTimes.of(""2012-01-02T05:00:00.000-08:00"");"
71182,./TargetProjects/druid/processing/src/test/java/org/apache/druid/granularity/QueryGranularityTest.java,422,,"            periodOrigin.bucketStart(DateTimes.of(""2012-01-01T05:00:04.123-08:00"")),"
71183,./TargetProjects/druid/processing/src/test/java/org/apache/druid/granularity/QueryGranularityTest.java,423,,"            periodOrigin.bucketStart(DateTimes.of(""2012-01-02T07:00:04.123-08:00"")),"
71184,./TargetProjects/druid/processing/src/test/java/org/apache/druid/granularity/QueryGranularityTest.java,536,,"          new Period(""PT12H5M""),"
71185,./TargetProjects/druid/processing/src/test/java/org/apache/druid/granularity/QueryGranularityTest.java,542,,"              new DateTime(""2012-01-01T04:50:00.000-08:00"", tz),"
71186,./TargetProjects/druid/processing/src/test/java/org/apache/druid/granularity/QueryGranularityTest.java,544,,"              new DateTime(""2012-01-02T17:05:00.000-08:00"", tz),"
71187,./TargetProjects/druid/processing/src/test/java/org/apache/druid/granularity/QueryGranularityTest.java,545,,"              new DateTime(""2012-02-03T22:25:00.000-08:00"", tz)"
71188,./TargetProjects/druid/processing/src/test/java/org/apache/druid/granularity/QueryGranularityTest.java,550,,"              periodOrigin.bucketStart(DateTimes.of(""2012-01-03T00:20:04.123-08:00"")),"
71189,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/ChainedExecutionQueryRunnerTest.java,78,,"            return ""test"";"
71190,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/DefaultQueryMetricsTest.java,85,,"    Assert.assertEquals(""query/time"", actualEvent.get(""metric""));"
71191,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/DefaultQueryMetricsTest.java,86,,"    Assert.assertEquals(0L, actualEvent.get(""value""));"
71192,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/DruidsTest.java,68,,"          .queryId(""queryId"")"
71193,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/DruidsTest.java,77,,"          .context(ImmutableMap.of(""my"", ""context""))"
71194,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/DruidsTest.java,88,,"          .queryId(""realQueryId"")"
71195,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/InlineDataSourceTest.java,51,,"      new Object[]{DateTimes.of(""2000"").getMillis(), ""foo"", 0d, ImmutableMap.of(""n"", ""0""), ImmutableList.of(1.0, 2.0)},"
71196,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/JoinDataSourceTest.java,51,,"      ""x == \""j.x\"""","
71197,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/MultiValuedDimensionTest.java,145,,"        .setSimpleTestingIndexSchema(new CountAggregatorFactory(""count""))"
71198,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/MultiValuedDimensionTest.java,152,,"            new DimensionsSpec(DimensionsSpec.getDefaultSchemas(ImmutableList.of(""product"", ""tags"", ""othertags"")), null, null),"
71199,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/MultiValuedDimensionTest.java,152,,"            new DimensionsSpec(DimensionsSpec.getDefaultSchemas(ImmutableList.of(""product"", ""tags"", ""othertags"")), null, null),"
71200,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/MultiValuedDimensionTest.java,225,,"        .setQuerySegmentSpec(new LegacySegmentSpec(""1970/3000""))"
71201,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/MultiValuedDimensionTest.java,233,,"            new QueryableIndexSegment(queryableIndex, SegmentId.dummy(""sid1"")),"
71202,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/MultiValuedDimensionTest.java,234,,"            new IncrementalIndexSegment(incrementalIndex, SegmentId.dummy(""sid2""))"
71203,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/MultiValuedDimensionTest.java,242,,"            ""1970"","
71204,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/MultiValuedDimensionTest.java,283,,"        GroupByQueryRunnerTestHelper.createExpectedRow(query, ""1970-01-01T00:00:00.000Z"", ""tags"", ""t1"", ""count"", 2L),"
71205,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/MultiValuedDimensionTest.java,392,,"    TestHelper.assertExpectedObjects(expectedResults, result.toList(), ""filteredDim"");"
71206,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/MultiValuedDimensionTest.java,400,,"      expectedException.expectMessage(""GroupBy v1 does not support dimension selectors with unknown cardinality."");"
71207,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/MultiValuedDimensionTest.java,407,,"        .setDimensions(new DefaultDimensionSpec(""texpr"", ""texpr""))"
71208,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/MultiValuedDimensionTest.java,429,,"        GroupByQueryRunnerTestHelper.createExpectedRow(query, ""1970"", ""texpr"", ""foo"", ""count"", 2L),"
71209,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/MultiValuedDimensionTest.java,430,,"        GroupByQueryRunnerTestHelper.createExpectedRow(query, ""1970"", ""texpr"", ""t1foo"", ""count"", 2L),"
71210,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/MultiValuedDimensionTest.java,431,,"        GroupByQueryRunnerTestHelper.createExpectedRow(query, ""1970"", ""texpr"", ""t2foo"", ""count"", 2L),"
71211,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/MultiValuedDimensionTest.java,432,,"        GroupByQueryRunnerTestHelper.createExpectedRow(query, ""1970"", ""texpr"", ""t3foo"", ""count"", 4L),"
71212,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/MultiValuedDimensionTest.java,433,,"        GroupByQueryRunnerTestHelper.createExpectedRow(query, ""1970"", ""texpr"", ""t4foo"", ""count"", 2L),"
71213,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/MultiValuedDimensionTest.java,434,,"        GroupByQueryRunnerTestHelper.createExpectedRow(query, ""1970"", ""texpr"", ""t5foo"", ""count"", 4L),"
71214,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/MultiValuedDimensionTest.java,435,,"        GroupByQueryRunnerTestHelper.createExpectedRow(query, ""1970"", ""texpr"", ""t6foo"", ""count"", 2L),"
71215,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/MultiValuedDimensionTest.java,436,,"        GroupByQueryRunnerTestHelper.createExpectedRow(query, ""1970"", ""texpr"", ""t7foo"", ""count"", 2L)"
71216,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/MultiValuedDimensionTest.java,477,,"        GroupByQueryRunnerTestHelper.createExpectedRow(query, ""1970"", ""texpr"", ""t1u1"", ""count"", 2L),"
71217,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/MultiValuedDimensionTest.java,478,,"        GroupByQueryRunnerTestHelper.createExpectedRow(query, ""1970"", ""texpr"", ""t1u2"", ""count"", 2L),"
71218,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/MultiValuedDimensionTest.java,479,,"        GroupByQueryRunnerTestHelper.createExpectedRow(query, ""1970"", ""texpr"", ""t2u1"", ""count"", 2L),"
71219,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/MultiValuedDimensionTest.java,480,,"        GroupByQueryRunnerTestHelper.createExpectedRow(query, ""1970"", ""texpr"", ""t2u2"", ""count"", 2L),"
71220,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/MultiValuedDimensionTest.java,481,,"        GroupByQueryRunnerTestHelper.createExpectedRow(query, ""1970"", ""texpr"", ""t3u1"", ""count"", 2L)"
71221,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/QueriesTest.java,59,,"        new CountAggregatorFactory(""count""),"
71222,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/QueriesTest.java,60,,"        new DoubleSumAggregatorFactory(""idx"", ""index""),"
71223,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/QueriesTest.java,60,,"        new DoubleSumAggregatorFactory(""idx"", ""index""),"
71224,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/QueriesTest.java,61,,"        new DoubleSumAggregatorFactory(""rev"", ""revenue"")"
71225,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/QueriesTest.java,61,,"        new DoubleSumAggregatorFactory(""rev"", ""revenue"")"
71226,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/QueriesTest.java,66,,"            ""addStuff"","
71227,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/QueriesTest.java,130,,"            ""divideStuff"","
71228,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/QueriesTest.java,138,,"                        new ConstantPostAggregator(""const"", 1)"
71229,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/QueriesTest.java,231,,"        new SegmentDescriptor(Intervals.of(""2000/3000""), ""0"", 0),"
71230,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/QueriesTest.java,237,,"              .dataSource(""foo"")"
71231,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/QueriesTest.java,342,,"              .dataSource(""bar"")"
71232,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/QueriesTest.java,424,,"                                                  ""j0."","
71233,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/QueriesTest.java,425,,"                                                  ""\""foo.x\"" == \""bar.x\"""","
71234,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/QueryContextsTest.java,43,,"        new TableDataSource(""test""),"
71235,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/QueryContextsTest.java,44,,"        new MultipleIntervalSegmentSpec(ImmutableList.of(Intervals.of(""0/100""))),"
71236,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/QueryInterruptedExceptionTest.java,45,,"    Assert.assertEquals(""Unknown exception"", new QueryInterruptedException(null).getErrorCode());"
71237,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/QueryInterruptedExceptionTest.java,46,,"    Assert.assertEquals(""Unknown exception"", new QueryInterruptedException(new ISE(""Something bad!"")).getErrorCode());"
71238,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/QueryInterruptedExceptionTest.java,86,,"        ""java.util.concurrent.CancellationException"","
71239,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/QueryInterruptedExceptionTest.java,102,,"        ""org.apache.druid.java.util.common.ISE"","
71240,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/QueryRunnerTestHelper.java,119,,"  public static final String INDEX_METRIC = ""index"";"
71241,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/QueryRunnerTestHelper.java,120,,"  public static final String UNIQUE_METRIC = ""uniques"";"
71242,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/QueryRunnerTestHelper.java,129,,"  public static final CountAggregatorFactory ROWS_COUNT = new CountAggregatorFactory(""rows"");"
71243,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/SchemaEvolutionTest.java,174,,"                                     new HyperUniquesAggregatorFactory(""uniques"", ""c2""),"
71244,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/TimewarpOperatorTest.java,62,,"      final DateTime t = DateTimes.of(""2014-08-02"");"
71245,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/TimewarpOperatorTest.java,69,,"      final DateTime t = DateTimes.of(""2014-08-02T-07"");"
71246,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/TimewarpOperatorTest.java,95,,"                        new TimeseriesResultValue(ImmutableMap.of(""metric"", 2))"
71247,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/TimewarpOperatorTest.java,114,,"              .dataSource(""dummy"")"
71248,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/TimewarpOperatorTest.java,116,,"              .aggregators(Collections.singletonList(new CountAggregatorFactory(""count"")))"
71249,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/UnionDataSourceTest.java,42,,"          new TableDataSource(""foo""),"
71250,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/UnionDataSourceTest.java,43,,"          new TableDataSource(""bar"")"
71251,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/AggregatorFactoryTest.java,84,,"        new LongMaxAggregatorFactory(""name"", ""fieldName1"")"
71252,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/AggregatorFactoryTest.java,119,,"                      ImmutableList.of(""col""),"
71253,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/AggregatorFactoryTest.java,126,,"                  new LongSumAggregatorFactory(""longSum"", ""long-col""),"
71254,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/AggregatorFactoryTest.java,133,,"                  new DoubleSumAggregatorFactory(""doubleSum"", ""double-col""),"
71255,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/AggregatorFactoryTest.java,141,,"                  new FloatSumAggregatorFactory(""floatSum"", ""float-col""),"
71256,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/AggregatorFactoryTest.java,154,,"                  new HistogramAggregatorFactory(""histogram"", ""histogram"", ImmutableList.of(0.25f, 0.5f, 0.75f)),"
71257,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/AggregatorUtilTest.java,49,,"        ""dep1"", ""+"", Lists.newArrayList("
71258,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/AggregatorUtilTest.java,53,,"    PostAggregator agg2 = new FieldAccessPostAggregator(""def"", ""def"");"
71259,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/AggregatorUtilTest.java,54,,"    PostAggregator dependency2 = new FieldAccessPostAggregator(""dep2"", ""dep2"");"
71260,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/AggregatorUtilTest.java,159,,"        ""postAgg"","
71261,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/ExpressionLambdaAggregatorFactoryTest.java,56,,"        ""expr_agg_name"","
71262,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/ExpressionLambdaAggregatorFactoryTest.java,57,,"        ImmutableSet.of(""some_column"", ""some_other_column""),"
71263,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/ExpressionLambdaAggregatorFactoryTest.java,57,,"        ImmutableSet.of(""some_column"", ""some_other_column""),"
71264,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/ExpressionLambdaAggregatorFactoryTest.java,59,,"        ""0.0"","
71265,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/ExpressionLambdaAggregatorFactoryTest.java,107,,"        ""__acc + some_column + some_other_column"","
71266,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/ExpressionLambdaAggregatorFactoryTest.java,108,,"        ""__acc + expr_agg_name"","
71267,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/ExpressionLambdaAggregatorFactoryTest.java,216,,"        ""concat(__acc, some_column, some_other_column)"","
71268,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/ExpressionLambdaAggregatorFactoryTest.java,283,,"        ""<STRING>[]"","
71269,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/ExpressionLambdaAggregatorFactoryTest.java,286,,"        ""array_set_add(__acc, expr_agg_name)"","
71270,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/ExpressionLambdaAggregatorFactoryTest.java,311,,"        ""array_to_string(o, ';')"","
71271,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/ExpressionLambdaAggregatorFactoryTest.java,329,,"        ""<LONG>[]"","
71272,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/ExpressionLambdaAggregatorFactoryTest.java,375,,"        ""<DOUBLE>[]"","
71273,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/ExpressionLambdaAggregatorFactoryTest.java,507,,"                      ""string_array_expr_finalized"","
71274,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/ExpressionLambdaAggregatorFactoryTest.java,521,,"                      ""double_array_expr_finalized"","
71275,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/ExpressionLambdaAggregatorFactoryTest.java,535,,"                      ""long_array_expr_finalized"","
71276,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/FilteredAggregatorFactoryTest.java,39,,"    Assert.assertEquals(""delegateName"", new FilteredAggregatorFactory("
71277,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/FilteredAggregatorTest.java,74,,"        new DoubleSumAggregatorFactory(""billy"", ""value""),"
71278,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/FilteredAggregatorTest.java,74,,"        new DoubleSumAggregatorFactory(""billy"", ""value""),"
71279,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/FilteredAggregatorTest.java,75,,"        new SelectorDimFilter(""dim"", ""a"", null)"
71280,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/FilteredAggregatorTest.java,329,,"        new SelectorDimFilter(""dim"", ""aAARDVARK"", extractionFn)"
71281,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/JavaScriptAggregatorTest.java,68,,"    SUM_LOG_A_TIMES_B_PLUS_TEN.put(""fnAggregate"", ""function aggregate(current, a, b) { return current + (Math.log(a) * b) }"");"
71282,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/JavaScriptAggregatorTest.java,69,,"    SUM_LOG_A_TIMES_B_PLUS_TEN.put(""fnReset"", ""function reset()                  { return 10 }"");"
71283,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/JavaScriptAggregatorTest.java,70,,"    SUM_LOG_A_TIMES_B_PLUS_TEN.put(""fnCombine"", ""function combine(a,b)             { return a + b }"");"
71284,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/JavaScriptAggregatorTest.java,257,,"        ""foo"","
71285,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/StringColumnAggregationTest.java,107,,"        new AggregatorFactory[]{new CountAggregatorFactory(""count"")},"
71286,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/StringColumnAggregationTest.java,149,,"            new DoubleSumAggregatorFactory(""singleDoubleSum"", singleValue),"
71287,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/StringColumnAggregationTest.java,150,,"            new DoubleSumAggregatorFactory(""multiDoubleSum"", multiValue),"
71288,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/StringColumnAggregationTest.java,151,,"            new DoubleMaxAggregatorFactory(""singleDoubleMax"", singleValue),"
71289,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/StringColumnAggregationTest.java,152,,"            new DoubleMaxAggregatorFactory(""multiDoubleMax"", multiValue),"
71290,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/StringColumnAggregationTest.java,153,,"            new DoubleMinAggregatorFactory(""singleDoubleMin"", singleValue),"
71291,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/StringColumnAggregationTest.java,154,,"            new DoubleMinAggregatorFactory(""multiDoubleMin"", multiValue),"
71292,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/StringColumnAggregationTest.java,156,,"            new FloatSumAggregatorFactory(""singleFloatSum"", singleValue),"
71293,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/StringColumnAggregationTest.java,157,,"            new FloatSumAggregatorFactory(""multiFloatSum"", multiValue),"
71294,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/StringColumnAggregationTest.java,158,,"            new FloatMaxAggregatorFactory(""singleFloatMax"", singleValue),"
71295,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/StringColumnAggregationTest.java,159,,"            new FloatMaxAggregatorFactory(""multiFloatMax"", multiValue),"
71296,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/StringColumnAggregationTest.java,160,,"            new FloatMinAggregatorFactory(""singleFloatMin"", singleValue),"
71297,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/StringColumnAggregationTest.java,161,,"            new FloatMinAggregatorFactory(""multiFloatMin"", multiValue),"
71298,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/StringColumnAggregationTest.java,163,,"            new LongSumAggregatorFactory(""singleLongSum"", singleValue),"
71299,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/StringColumnAggregationTest.java,164,,"            new LongSumAggregatorFactory(""multiLongSum"", multiValue),"
71300,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/StringColumnAggregationTest.java,165,,"            new LongMaxAggregatorFactory(""singleLongMax"", singleValue),"
71301,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/StringColumnAggregationTest.java,166,,"            new LongMaxAggregatorFactory(""multiLongMax"", multiValue),"
71302,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/StringColumnAggregationTest.java,167,,"            new LongMinAggregatorFactory(""singleLongMin"", singleValue),"
71303,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/StringColumnAggregationTest.java,168,,"            new LongMinAggregatorFactory(""multiLongMin"", multiValue),"
71304,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/any/StringAnyAggregationTest.java,52,,"    stringAnyAggFactory = new StringAnyAggregatorFactory(""billy"", ""nilly"", MAX_STRING_SIZE);"
71305,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/any/StringAnyBufferAggregatorTest.java,46,,"    final String[] strings = {""AAAA"", ""BBBB"", ""CCCC"", ""DDDD"", ""EEEE""};"
71306,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/any/StringAnyBufferAggregatorTest.java,46,,"    final String[] strings = {""AAAA"", ""BBBB"", ""CCCC"", ""DDDD"", ""EEEE""};"
71307,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/any/StringAnyBufferAggregatorTest.java,46,,"    final String[] strings = {""AAAA"", ""BBBB"", ""CCCC"", ""DDDD"", ""EEEE""};"
71308,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/any/StringAnyBufferAggregatorTest.java,46,,"    final String[] strings = {""AAAA"", ""BBBB"", ""CCCC"", ""DDDD"", ""EEEE""};"
71309,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/any/StringAnyBufferAggregatorTest.java,52,,"        ""billy"", ""billy"", maxStringBytes"
71310,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/cardinality/CardinalityAggregatorBenchmark.java,86,,"    final DimensionSpec dimSpec1 = new DefaultDimensionSpec(""dim1"", ""dim1"");"
71311,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/cardinality/CardinalityAggregatorTest.java,315,,"        ""billy"","
71312,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/first/StringFirstAggregationTest.java,56,,"      new SerializablePairLongString(52782L, ""AAAA""),"
71313,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/first/StringFirstAggregationTest.java,57,,"      new SerializablePairLongString(65492L, ""BBBB""),"
71314,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/first/StringFirstBufferAggregatorTest.java,57,,"        ""billy"", ""billy"", maxStringBytes"
71315,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/first/StringFirstTimeseriesQueryTest.java,88,,"            ImmutableMap.of(VISITOR_ID, ""0"", CLIENT_TYPE, ""iphone"")"
71316,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/hyperloglog/HyperUniqueFinalizingPostAggregatorTest.java,53,,"        ""uniques"", ""uniques"""
71317,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/hyperloglog/HyperUniquesAggregatorFactoryTest.java,60,,"    HyperUniquesAggregatorFactory factory = new HyperUniquesAggregatorFactory(""foo"", ""bar"");"
71318,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/hyperloglog/HyperUniquesAggregatorFactoryTest.java,60,,"    HyperUniquesAggregatorFactory factory = new HyperUniquesAggregatorFactory(""foo"", ""bar"");"
71319,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/last/StringLastBufferAggregatorTest.java,51,,"    final String[] strings = {""AAAA"", ""BBBB"", ""CCCC"", ""DDDD"", ""EEEE""};"
71320,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/last/StringLastBufferAggregatorTest.java,58,,"        ""billy"", ""billy"", maxStringBytes"
71321,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/mean/DoubleMeanAggregationTest.java,100,,"            new DoubleMeanAggregatorFactory(""meanOnDouble"", SimpleTestIndex.DOUBLE_COL),"
71322,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/mean/DoubleMeanAggregationTest.java,101,,"            new DoubleMeanAggregatorFactory(""meanOnString"", SimpleTestIndex.SINGLE_VALUE_DOUBLE_AS_STRING_DIM),"
71323,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/mean/DoubleMeanAggregationTest.java,102,,"            new DoubleMeanAggregatorFactory(""meanOnMultiValue"", SimpleTestIndex.MULTI_VALUE_DOUBLE_AS_STRING_DIM)"
71324,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/post/ArithmeticPostAggregatorTest.java,51,,"    final String aggName = ""rows"";"
71325,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/post/ArithmeticPostAggregatorTest.java,77,,"    arithmeticPostAggregator = new ArithmeticPostAggregator(""add"", ""+"", postAggregatorList);"
71326,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/post/ArithmeticPostAggregatorTest.java,174,,"            new FieldAccessPostAggregator(""numerator"", ""value""),"
71327,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/post/DoubleGreatestPostAggregatorTest.java,48,,"    final String aggName = ""rows"";"
71328,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/post/DoubleLeastPostAggregatorTest.java,48,,"    final String aggName = ""rows"";"
71329,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/post/FinalizingFieldAccessPostAggregatorTest.java,87,,"    EasyMock.expect(aggFactory.finalizeComputation(""test"")).andReturn(3L).once();"
71330,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/post/FinalizingFieldAccessPostAggregatorTest.java,92,,"        ""final_billy"", aggName, ImmutableMap.of(aggName, aggFactory)"
71331,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/post/FinalizingFieldAccessPostAggregatorTest.java,136,,"    EasyMock.expect(aggFactory.finalizeComputation(""test_val1""))"
71332,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/post/FinalizingFieldAccessPostAggregatorTest.java,139,,"    EasyMock.expect(aggFactory.finalizeComputation(""test_val2""))"
71333,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/post/FinalizingFieldAccessPostAggregatorTest.java,145,,"    EasyMock.expect(aggFactory.finalizeComputation(""test_val4""))"
71334,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/post/FinalizingFieldAccessPostAggregatorTest.java,181,,"        ""final_billy"", ""joe"", ImmutableMap.of(aggName, aggFactory));"
71335,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/post/FinalizingFieldAccessPostAggregatorTest.java,290,,"                  new StringFirstAggregatorFactory(""stringo"", ""col"", 1024)"
71336,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/post/JavaScriptPostAggregatorTest.java,51,,"    metricValues.put(""delta"", -10.0);"
71337,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/post/JavaScriptPostAggregatorTest.java,52,,"    metricValues.put(""total"", 100.0);"
71338,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/post/LongGreatestPostAggregatorTest.java,48,,"    final String aggName = ""rows"";"
71339,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/aggregation/post/LongLeastPostAggregatorTest.java,48,,"    final String aggName = ""rows"";"
71340,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/context/ResponseContextTest.java,228,,"    ctx1.add(ResponseContext.Key.ETAG, ""string-value"");"
71341,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/datasourcemetadata/DataSourceMetadataQueryTest.java,320,,"                    return Intervals.of(""2017/2018"");"
71342,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/datasourcemetadata/DataSourceMetadataQueryTest.java,329,,"                    return Intervals.of(""2017-08-01/2017-08-02"");"
71343,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/dimension/DefaultDimensionSpecTest.java,38,,"    final String name = ""foo"";"
71344,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/dimension/ExtractionDimensionSpecTest.java,38,,"    final String oldJson = ""{\n"""
71345,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/dimension/ExtractionDimensionSpecTest.java,39,,"                           + ""    \""type\"": \""extraction\"",\n"""
71346,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/dimension/ExtractionDimensionSpecTest.java,40,,"                           + ""    \""outputName\"": \""first3Letters\"",\n"""
71347,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/dimension/ExtractionDimensionSpecTest.java,41,,"                           + ""    \""dimension\"": \""myDim\"","""
71348,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/dimension/ExtractionDimensionSpecTest.java,43,,"                           + ""        \""type\"": \""regex\"",\n"""
71349,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/dimension/ExtractionDimensionSpecTest.java,44,,"                           + ""        \""expr\"": \""(...).*\""\n"""
71350,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/dimension/ExtractionDimensionSpecTest.java,45,,"                           + ""    }\n"""
71351,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/dimension/ListFilteredDimensionSpecDimensionSelectorTest.java,43,,"      ImmutableSet.of(""val1_1"", ""val2_2"", ""val2_3""),"
71352,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/dimension/ListFilteredDimensionSpecDimensionSelectorTest.java,43,,"      ImmutableSet.of(""val1_1"", ""val2_2"", ""val2_3""),"
71353,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/dimension/ListFilteredDimensionSpecDimensionSelectorTest.java,43,,"      ImmutableSet.of(""val1_1"", ""val2_2"", ""val2_3""),"
71354,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/dimension/ListFilteredDimensionSpecTest.java,59,,"        new DefaultDimensionSpec(""foo"", ""bar""),"
71355,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/dimension/ListFilteredDimensionSpecTest.java,59,,"        new DefaultDimensionSpec(""foo"", ""bar""),"
71356,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/dimension/ListFilteredDimensionSpecTest.java,60,,"        ImmutableSet.of(""xxx""),"
71357,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/dimension/PrefixFilteredDimensionSpecTest.java,56,,"        new DefaultDimensionSpec(""foo"", ""bar""),"
71358,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/dimension/RegexFilteredDimensionSpecTest.java,57,,"        new DefaultDimensionSpec(""foo"", ""bar""),"
71359,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/dimension/RegexFilteredDimensionSpecTest.java,57,,"        new DefaultDimensionSpec(""foo"", ""bar""),"
71360,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/expression/ExprMacroTest.java,40,,"          .put(""t"", DateTimes.of(""2000-02-03T04:05:06"").getMillis())"
71361,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/expression/ExprMacroTest.java,48,,"          .put(""spacey"", ""  hey there  "")"
71362,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/expression/ExprMacroTest.java,109,,"    assertExpr(""timestamp_shift(t, 'P1D', 2)"", DateTimes.of(""2000-02-05T04:05:06"").getMillis());"
71363,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/expression/RegexpExtractExprMacroTest.java,53,,"    final ExprEval<?> result = eval(""regexp_extract(a, 'f(.o)')"", InputBindings.withMap(ImmutableMap.of(""a"", ""foo"")));"
71364,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/expression/RegexpExtractExprMacroTest.java,96,,"      expectException(IllegalArgumentException.class, ""Function[regexp_extract] pattern must be a string literal"");"
71365,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/expression/RegexpLikeExprMacroTest.java,53,,"    final ExprEval<?> result = eval(""regexp_like(a, 'f.o')"", InputBindings.withMap(ImmutableMap.of(""a"", ""foo"")));"
71366,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/expression/TimestampShiftMacroTest.java,53,,"    expectException(IAE.class, ""Function[timestamp_shift] must have 3 to 4 arguments"");"
71367,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/expression/TimestampShiftMacroTest.java,74,,"            ExprEval.of(""P1M"").toExpr()"
71368,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/expression/TimestampShiftMacroTest.java,183,,"            ExprEval.of(""America/Los_Angeles"").toExpr()"
71369,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/extraction/JavaScriptExtractionFnTest.java,212,,"                      + ""    }\n"""
71370,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/extraction/JavaScriptExtractionFnTest.java,228,,"                      + ""    if (re.test(w)) {\n"""
71371,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/extraction/JavaScriptExtractionFnTest.java,229,,"                      + ""      var fp = re.exec(w);\n"""
71372,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/extraction/JavaScriptExtractionFnTest.java,234,,"                      + ""      }\n"""
71373,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/extraction/JavaScriptExtractionFnTest.java,237,,"                      + ""      stem = fp[1];\n"""
71374,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/extraction/JavaScriptExtractionFnTest.java,240,,"                      + ""        w = stem;\n"""
71375,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/extraction/MapLookupExtractorTest.java,39,,"      ImmutableMap.of(""foo"", ""bar"", ""null"", """", ""empty String"", """", """", ""empty_string"");"
71376,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/extraction/MapLookupExtractorTest.java,39,,"      ImmutableMap.of(""foo"", ""bar"", ""null"", """", ""empty String"", """", """", ""empty_string"");"
71377,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/extraction/RegexDimExtractionFnTest.java,161,,"    ExtractionFn extractionFn = new RegexDimExtractionFn(regex, true, ""NO MATCH"");"
71378,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/extraction/StringFormatExtractionFnTest.java,40,,"    StringFormatExtractionFn fn = new StringFormatExtractionFn(""[%s]"");"
71379,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/extraction/TimeDimExtractionFnTest.java,49,,"      ExtractionFn extractionFn = new TimeDimExtractionFn(""MM/dd/yyyy"", ""MM/yyyy"", joda);"
71380,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/extraction/TimeFormatExtractionFnTest.java,48,,"    TimeFormatExtractionFn fn = new TimeFormatExtractionFn(""EEEE"", null, null, null, false);"
71381,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/extraction/TimeFormatExtractionFnTest.java,91,,"        ""'In Berlin ist es schon 'EEEE"","
71382,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/extraction/TimeFormatExtractionFnTest.java,92,,"        DateTimes.inferTzFromString(""Europe/Berlin""),"
71383,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/filter/AndDimFilterTest.java,51,,"            DimFilterTestUtils.selector(""col1"", ""1""),"
71384,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/filter/BoundDimFilterTest.java,51,,"        new Object[]{new BoundDimFilter(""dimension"", ""12"", ""15"", null, null, null, null,"
71385,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/filter/ColumnComparisonDimFilterTest.java,36,,"        DefaultDimensionSpec.of(""abc""),"
71386,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/filter/DimFilterUtilsTest.java,57,,"    EasyMock.expect(filter1.getDimensionRangeSet(""dim1""))"
71387,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/filter/DimFilterUtilsTest.java,60,,"    EasyMock.expect(filter1.getDimensionRangeSet(""dim2""))"
71388,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/filter/GetDimensionRangeSetTest.java,42,,"  private final DimFilter selector1 = new SelectorDimFilter(""dim1"", ""a"", null);"
71389,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/filter/GetDimensionRangeSetTest.java,44,,"  private final DimFilter selector3 = new SelectorDimFilter(""dim2"", ""c"", null);"
71390,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/filter/GetDimensionRangeSetTest.java,47,,"  private final DimFilter in1 = new InDimFilter(""dim1"", ImmutableList.of(""testing"", ""this"", ""filter"", ""tillend""), null);"
71391,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/filter/GetDimensionRangeSetTest.java,47,,"  private final DimFilter in1 = new InDimFilter(""dim1"", ImmutableList.of(""testing"", ""this"", ""filter"", ""tillend""), null);"
71392,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/filter/GetDimensionRangeSetTest.java,47,,"  private final DimFilter in1 = new InDimFilter(""dim1"", ImmutableList.of(""testing"", ""this"", ""filter"", ""tillend""), null);"
71393,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/filter/GetDimensionRangeSetTest.java,47,,"  private final DimFilter in1 = new InDimFilter(""dim1"", ImmutableList.of(""testing"", ""this"", ""filter"", ""tillend""), null);"
71394,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/filter/GetDimensionRangeSetTest.java,49,,"  private final DimFilter in3 = new InDimFilter(""dim1"", Arrays.asList(""null"", null), null);"
71395,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/filter/GetDimensionRangeSetTest.java,50,,"  private final DimFilter bound1 = new BoundDimFilter(""dim1"", ""from"", ""to"", false, false, false, null,"
71396,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/filter/InDimFilterTest.java,59,,"    final InDimFilter expectedInDimFilter = new InDimFilter(""dimTest"", Arrays.asList(""good"", ""bad""), null);"
71397,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/filter/InDimFilterTest.java,59,,"    final InDimFilter expectedInDimFilter = new InDimFilter(""dimTest"", Arrays.asList(""good"", ""bad""), null);"
71398,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/filter/InDimFilterTest.java,59,,"    final InDimFilter expectedInDimFilter = new InDimFilter(""dimTest"", Arrays.asList(""good"", ""bad""), null);"
71399,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/filter/InDimFilterTest.java,75,,"    final InDimFilter filter = new InDimFilter(""dim"", values, null, null);"
71400,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/filter/InDimFilterTest.java,103,,"    final InDimFilter inDimFilter1 = new InDimFilter(""dimTest"", Arrays.asList(null, ""abc""), null);"
71401,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/filter/IntervalDimFilterTest.java,55,,"            Intervals.of(""1970-01-01T00:00:00.001Z/1970-01-01T00:00:00.004Z""),"
71402,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/filter/IntervalDimFilterTest.java,56,,"            Intervals.of(""1975-01-01T00:00:00.001Z/1980-01-01T00:00:00.004Z"")"
71403,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/filter/IntervalDimFilterTest.java,94,,"            Intervals.of(""1976-01-01T00:00:00.001Z/1980-01-01T00:00:00.004Z"")"
71404,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/filter/JavaScriptDimFilterTest.java,45,,"    JavaScriptDimFilter javaScriptDimFilter = new JavaScriptDimFilter(""dim"", FN1, null, JavaScriptConfig.getEnabledInstance());"
71405,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/filter/JavaScriptDimFilterTest.java,127,,"    Assert.assertTrue(javaScriptDimFilter.getPredicateFactory().applyObject(""123""));"
71406,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/filter/LikeDimFilterTest.java,40,,"    final DimFilter filter = new LikeDimFilter(""foo"", ""bar%"", ""@"", new SubstringDimExtractionFn(1, 2));"
71407,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/filter/LikeDimFilterTest.java,40,,"    final DimFilter filter = new LikeDimFilter(""foo"", ""bar%"", ""@"", new SubstringDimExtractionFn(1, 2));"
71408,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/filter/OrDimFilterTest.java,36,,"            DimFilterTestUtils.selector(""col1"", ""1""),"
71409,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/filter/RegexDimFilterTest.java,34,,"    RegexDimFilter regexDimFilter = new RegexDimFilter(""dim"", ""reg"", null);"
71410,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/filter/RegexDimFilterTest.java,34,,"    RegexDimFilter regexDimFilter = new RegexDimFilter(""dim"", ""reg"", null);"
71411,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/filter/RegexDimFilterTest.java,35,,"    RegexDimFilter regexDimFilter2 = new RegexDimFilter(""di"", ""mreg"", null);"
71412,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/filter/SearchQueryDimFilterTest.java,37,,"        ""dim"","
71413,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/filter/SearchQueryDimFilterTest.java,49,,"            return StringUtils.toUtf8(""value"");"
71414,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/filter/SelectorDimFilterTest.java,35,,"    SelectorDimFilter selectorDimFilter = new SelectorDimFilter(""abc"", ""d"", null);"
71415,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/filter/vector/VectorValueMatcherColumnProcessorFactoryTest.java,146,,"    EasyMock.expect(lookup.lookupId(""any value"")).andReturn(1).anyTimes();"
71416,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByLimitPushDownInsufficientBufferTest.java,142,,"                        new StringDimensionSchema(""dimA""),"
71417,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByLimitPushDownInsufficientBufferTest.java,143,,"                        new LongDimensionSchema(""metA"")"
71418,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByLimitPushDownInsufficientBufferTest.java,485,,"        ""1970-01-01T00:00:00.000Z"","
71419,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByLimitPushDownMultiNodeMergeTest.java,149,,"                        new StringDimensionSchema(""dimA""),"
71420,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByLimitPushDownMultiNodeMergeTest.java,150,,"                        new LongDimensionSchema(""metA"")"
71421,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByLimitPushDownMultiNodeMergeTest.java,176,,"    event.put(""dimA"", ""pomegranate"");"
71422,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByLimitPushDownMultiNodeMergeTest.java,182,,"    event.put(""dimA"", ""mango"");"
71423,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByLimitPushDownMultiNodeMergeTest.java,548,,"        ""2017-07-14T02:40:00.000Z"","
71424,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByLimitPushDownMultiNodeMergeTest.java,639,,"                ""hour"","
71425,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByLimitPushDownMultiNodeMergeTest.java,650,,"        .setAggregatorSpecs(new LongSumAggregatorFactory(""metASum"", ""metA""))"
71426,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByMultiSegmentTest.java,136,,"                        new StringDimensionSchema(""dimA""),"
71427,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByMultiSegmentTest.java,137,,"                        new LongDimensionSchema(""metA"")"
71428,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryBuilderTest.java,53,,"        .queryId(""queryId"")"
71429,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryBuilderTest.java,62,,"        .setContext(ImmutableMap.of(""my"", ""context""))"
71430,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryBuilderTest.java,73,,"        .queryId(""realQueryId"")"
71431,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryMergeBufferTest.java,211,,"        .setAggregatorSpecs(new LongSumAggregatorFactory(""rows"", ""rows""))"
71432,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryMergeBufferTest.java,233,,"                            .setDimensions(new DefaultDimensionSpec(""quality"", ""alias""))"
71433,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryMergeBufferTest.java,233,,"                            .setDimensions(new DefaultDimensionSpec(""quality"", ""alias""))"
71434,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryMergeBufferTest.java,266,,"                                                new DefaultDimensionSpec(""market"", null)"
71435,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryQueryToolChestTest.java,95,,"        .setDimensions(new DefaultDimensionSpec(""quality"", ""alias""))"
71436,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryQueryToolChestTest.java,95,,"        .setDimensions(new DefaultDimensionSpec(""quality"", ""alias""))"
71437,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryQueryToolChestTest.java,96,,"        .setAggregatorSpecs(QueryRunnerTestHelper.ROWS_COUNT, new LongSumAggregatorFactory(""idx"", ""index""))"
71438,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryQueryToolChestTest.java,96,,"        .setAggregatorSpecs(QueryRunnerTestHelper.ROWS_COUNT, new LongSumAggregatorFactory(""idx"", ""index""))"
71439,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryQueryToolChestTest.java,99,,"                new ExpressionPostAggregator(""post"", ""alias + 'x'"", null, TestExprMacroTable.INSTANCE)"
71440,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryQueryToolChestTest.java,99,,"                new ExpressionPostAggregator(""post"", ""alias + 'x'"", null, TestExprMacroTable.INSTANCE)"
71441,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryQueryToolChestTest.java,354,,"                        new BoundDimFilter(""rows"", ""2"", null, true, false, null, null, StringComparators.NUMERIC),"
71442,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryQueryToolChestTest.java,448,,"            new DefaultDimensionSpec(""market"", ""market"")"
71443,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryQueryToolChestTest.java,521,,"            new DefaultDimensionSpec(""test"", ""test"", ValueType.STRING),"
71444,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryQueryToolChestTest.java,591,,"    final Object[] rowObjects = {DateTimes.of(""2000"").getMillis(), ""foo"", 100, 10};"
71445,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryQueryToolChestTest.java,591,,"    final Object[] rowObjects = {DateTimes.of(""2000"").getMillis(), ""foo"", 100, 10};"
71446,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryQueryToolChestTest.java,676,,"        .setDimensions(new DefaultDimensionSpec(""col"", ""dim""))"
71447,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryQueryToolChestTest.java,676,,"        .setDimensions(new DefaultDimensionSpec(""col"", ""dim""))"
71448,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryQueryToolChestTest.java,687,,"                    .add(""uniques"", null)"
71449,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryQueryToolChestTest.java,688,,"                    .add(""const"", ValueType.LONG)"
71450,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryQueryToolChestTest.java,734,,"            new Object[]{""bar"", 4L, 5L, 6L, 1L}"
71451,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryQueryToolChestTest.java,839,,"        return new LongLastAggregatorFactory(""complexMetric"", ""test"");"
71452,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerFactoryTest.java,92,,"        .setDimensions(new DefaultDimensionSpec(""tags"", ""tags""))"
71453,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerFactoryTest.java,93,,"        .setAggregatorSpecs(new CountAggregatorFactory(""count""))"
71454,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerFailureTest.java,194,,"                            .setDimensions(new DefaultDimensionSpec(""quality"", ""alias""))"
71455,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerFailureTest.java,194,,"                            .setDimensions(new DefaultDimensionSpec(""quality"", ""alias""))"
71456,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerFailureTest.java,201,,"        .setAggregatorSpecs(new LongSumAggregatorFactory(""rows"", ""rows""))"
71457,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,470,,"        .setDimensions(new DefaultDimensionSpec(""quality"", ""alias""))"
71458,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,470,,"        .setDimensions(new DefaultDimensionSpec(""quality"", ""alias""))"
71459,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,473,,"            new LongSumAggregatorFactory(""idx"", ""index""),"
71460,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,473,,"            new LongSumAggregatorFactory(""idx"", ""index""),"
71461,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,474,,"            new FloatSumAggregatorFactory(""idxFloat"", ""indexFloat""),"
71462,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,475,,"            new DoubleSumAggregatorFactory(""idxDouble"", ""index"")"
71463,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,483,,"            ""2011-04-01"","
71464,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,485,,"            ""automotive"","
71465,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,486,,"            ""rows"","
71466,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,499,,"            ""business"","
71467,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,513,,"            ""entertainment"","
71468,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,527,,"            ""health"","
71469,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,541,,"            ""mezzanine"","
71470,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,555,,"            ""news"","
71471,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,569,,"            ""premium"","
71472,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,583,,"            ""technology"","
71473,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,597,,"            ""travel"","
71474,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,610,,"            ""2011-04-02"","
71475,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,737,,"    TestHelper.assertExpectedObjects(expectedResults, results, ""groupBy"");"
71476,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,780,,"                new ExpressionPostAggregator(""post"", ""alias + 'x'"", null, TestExprMacroTable.INSTANCE)"
71477,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,801,,"            ""travelx"","
71478,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,813,,"            ""technologyx"","
71479,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,825,,"            ""premiumx"","
71480,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,837,,"            ""newsx"","
71481,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,849,,"            ""mezzaninex"","
71482,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,861,,"            ""healthx"","
71483,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,873,,"            ""entertainmentx"","
71484,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,885,,"            ""businessx"","
71485,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,897,,"            ""automotivex"","
71486,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,1289,,"        .setDimensions(new DefaultDimensionSpec(""placementish"", ""alias""))"
71487,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,1302,,"        makeRow(query, ""2011-04-01"", ""alias"", ""preferred"", ""rows"", 26L, ""idx"", 12446L),"
71488,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,1322,,"            new DefaultDimensionSpec(""placementish"", ""alias2"")"
71489,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,1968,,"        .overrideContext(ImmutableMap.of(""maxOnDiskStorage"", 0, ""bufferGrouperMaxSize"", 1))"
71490,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,2175,,"        .setDimensions(new ArrayList<>()).setAggregatorSpecs(new CountAggregatorFactory(""count""))"
71491,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,2203,,"    map.put(""automotive"", ""automotive0"");"
71492,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,2204,,"    map.put(""business"", ""business0"");"
71493,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,2205,,"    map.put(""entertainment"", ""entertainment0"");"
71494,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,2206,,"    map.put(""health"", ""health0"");"
71495,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,2207,,"    map.put(""mezzanine"", ""mezzanine0"");"
71496,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,2208,,"    map.put(""news"", ""news0"");"
71497,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,2209,,"    map.put(""premium"", ""premium0"");"
71498,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,2210,,"    map.put(""technology"", ""technology0"");"
71499,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,2211,,"    map.put(""travel"", ""travel0"");"
71500,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,2540,,"            ""quality_uniques"","
71501,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,2582,,"            ""cardinality"","
71502,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,2600,,"        .setDimensions(new DefaultDimensionSpec(""market"", ""market""))"
71503,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,2602,,"            new LongFirstAggregatorFactory(""first"", ""index""),"
71504,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,2603,,"            new LongLastAggregatorFactory(""last"", ""index"")"
71505,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,2609,,"        makeRow(query, ""2011-01-01"", ""market"", ""spot"", ""first"", 100L, ""last"", 155L),"
71506,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,2609,,"        makeRow(query, ""2011-01-01"", ""market"", ""spot"", ""first"", 100L, ""last"", 155L),"
71507,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,2614,,"            ""total_market"","
71508,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,2620,,"        makeRow(query, ""2011-01-01"", ""market"", ""upfront"", ""first"", 800L, ""last"", 943L),"
71509,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,2621,,"        makeRow(query, ""2011-02-01"", ""market"", ""spot"", ""first"", 132L, ""last"", 114L),"
71510,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,2642,,"        makeRow(query, ""2011-03-01"", ""market"", ""spot"", ""first"", 153L, ""last"", 125L),"
71511,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,2845,,"            new DateTime(""2011-03-31"", tz),"
71512,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,3035,,"        .setInterval(""2011-04-02/2011-04-04"")"
71513,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,3038,,"        .setGranularity(new PeriodGranularity(new Period(""P1M""), null, null));"
71514,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,3052,,"                    new MultipleIntervalSegmentSpec(Collections.singletonList(Intervals.of(""2011-04-02/2011-04-03"")))"
71515,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,3057,,"                    new MultipleIntervalSegmentSpec(Collections.singletonList(Intervals.of(""2011-04-03/2011-04-04"")))"
71516,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,3083,,"    TestHelper.assertExpectedObjects(expectedResults, mergedRunner.run(QueryPlus.wrap(fullQuery)), ""merged"");"
71517,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,3279,,"                ""expr"","
71518,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,3447,,"    TestHelper.assertExpectedObjects(expectedResults, mergeRunner.run(QueryPlus.wrap(query)), ""no-limit"");"
71519,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,3452,,"        ""limited"""
71520,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,3464,,"        new String[]{""__time"", ""alias"", ""rows"", ""idx""},"
71521,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,3634,,"            ""marketalias"""
71522,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,3648,,"            ""1970-01-01T00:00:00.000Z"","
71523,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,3673,,"    TestHelper.assertExpectedObjects(expectedResults, results, ""order-limit"");"
71524,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,4086,,"        makeRow(query, ""2011-04-01T00:00:00.000Z"", ""market"", ""spot"", ""rows"", 9L),"
71525,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,4087,,"        makeRow(query, ""2011-04-02T00:00:00.000Z"", ""market"", ""spot"", ""rows"", 9L)"
71526,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,4199,,"        makeRow(fullQuery, ""2011-01-25"", ""alias"", ""business"", ""rows"", 3L, ""index"", 312.38165283203125,"
71527,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,4373,,"    String extractionJsFn = ""function(str) { return 'super-' + str; }"";"
71528,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,4487,,"                    ""rows_times_10"","
71529,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,4644,,"        .addDimension(""billy"")"
71530,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,4703,,"            ""function(dim){ return true; }"","
71531,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,4710,,"            new LongSumAggregatorFactory(""indexMaxPlusTen"", ""indexMaxPlusTen"")"
71532,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,5056,,"                new TimeFormatExtractionFn(""EEEE"", null, null, null, false)"
71533,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,5139,,"        )).setAggregatorSpecs(QueryRunnerTestHelper.ROWS_COUNT, new LongSumAggregatorFactory(""idx_subagg"", ""index""))"
71534,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,5143,,"                    ""idx_subpostagg"", ""+"", Arrays.asList("
71535,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,5165,,"                    ""idx_post"", ""+"", Arrays.asList("
71536,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,5695,,"                ""js_agg"","
71537,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,5753,,"            new DoubleSumAggregatorFactory(""js_outer_agg"", ""js_agg"")"
71538,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,5879,,"        makeRow(query, ""1970-01-01"", ""rows"", 837L)"
71539,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,5898,,"        ""Friday"","
71540,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,6175,,"            new HyperUniquesAggregatorFactory(""uniq"", ""quality_uniques"")"
71541,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,6406,,"            new DefaultDimensionSpec(""market"", ""market2""),"
71542,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,6531,,"                new FieldAccessPostAggregator(""idxPostAgg"", ""idx"")"
71543,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,6877,,"            new DefaultDimensionSpec(""alias"", ""alias_renamed"")"
71544,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,6966,,"            new DefaultDimensionSpec(""qualityLong"", ""ql"", ValueType.LONG),"
71545,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,7340,,"            new DefaultDimensionSpec(""placement"", ""placement""),"
71546,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,7423,,"                ""dayOfWeek"","
71547,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,7452,,"            ""addRowsIndexConstant"","
71548,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,7459,,"            ""Monday"","
71549,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,7473,,"            ""Saturday"","
71550,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,7487,,"            ""Sunday"","
71551,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,7501,,"            ""Thursday"","
71552,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,7515,,"            ""Tuesday"","
71553,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,7925,,"        DateTimes.of(""2011-01-12T00:00:00.000Z""),"
71554,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,7940,,"            Intervals.of(""2011-04-02T00:00:00.000Z/2011-04-04T00:00:00.000Z"")"
71555,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,8110,,"    extractionMap.put(""automotive"", ""automotiveAndBusinessAndNewsAndMezzanine"");"
71556,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,8161,,"    TestHelper.assertExpectedObjects(expectedResults, results, ""dim-extraction"");"
71557,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,8260,,"        .setDimensions(new DefaultDimensionSpec(""null_column"", ""alias""))"
71558,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,8511,,"    extractionMap.put("""", ""EMPTY"");"
71559,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,8553,,"    superFilterList.add(new SelectorDimFilter(""quality"", ""super-mezzanine"", extractionFn));"
71560,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,8695,,"            ""numVals"","
71561,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,8770,,"    TestHelper.assertExpectedObjects(expectedResults, results, ""cardinality-agg"");"
71562,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,8935,,"      expectedException.expectMessage(""GroupBy v1 only supports dimensions with an outputType of STRING."");"
71563,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,8941,,"        .setDimensions(new DefaultDimensionSpec(""qualityLong"", ""ql_alias"", ValueType.LONG))"
71564,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,8977,,"    TestHelper.assertExpectedObjects(expectedResults, results, ""long"");"
71565,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,9068,,"      expectedException.expectMessage(""GroupBy v1 does not support dimension selectors with unknown cardinality."");"
71566,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,9120,,"        .setDimensions(new DefaultDimensionSpec(""__time"", ""time_alias"", ValueType.LONG))"
71567,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,9207,,"        .setDimensions(new DefaultDimensionSpec(""index"", ""index_alias"", ValueType.FLOAT))"
71568,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,9258,,"        .setDimensions(new DefaultDimensionSpec(""qualityFloat"", ""qf_alias"", ValueType.FLOAT))"
71569,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,9258,,"        .setDimensions(new DefaultDimensionSpec(""qualityFloat"", ""qf_alias"", ValueType.FLOAT))"
71570,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,9481,,"            ""1200"","
71571,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,9531,,"            new DefaultDimensionSpec(""time_alias"", ""time_alias2"", ValueType.LONG),"
71572,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,9721,,"            new DefaultDimensionSpec(""ql_alias"", ""quallong"", ValueType.LONG),"
71573,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,9722,,"            new DefaultDimensionSpec(""qf_alias"", ""qualfloat"", ValueType.FLOAT)"
71574,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,9742,,"            new LongSumAggregatorFactory(""ql_alias_sum"", ""ql_alias""),"
71575,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,9743,,"            new DoubleSumAggregatorFactory(""qf_alias_sum"", ""qf_alias"")"
71576,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,9880,,"            new LongMaxAggregatorFactory(""time_alias_max"", ""time_alias""),"
71577,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,9881,,"            new DoubleMaxAggregatorFactory(""index_alias_max"", ""index_alias"")"
71578,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,10268,,"            new ExtractionDimensionSpec(""quality"", ""qualityLen"", ValueType.LONG, StrlenExtractionFn.instance())"
71579,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,11017,,"            new DefaultDimensionSpec(""longNumericNull"", ""nullable"", ValueType.LONG)"
71580,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,11198,,"        .setAggregatorSpecs(QueryRunnerTestHelper.ROWS_COUNT, new LongSumAggregatorFactory(""twosum"", null, ""1 + two"", TestExprMacroTable.INSTANCE))"
71581,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java,11492,,"                ""array_agg_distinct"","
71582,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryTest.java,64,,"        .setDimensions(new DefaultDimensionSpec(""quality"", ""alias""))"
71583,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryTest.java,65,,"        .setAggregatorSpecs(QueryRunnerTestHelper.ROWS_COUNT, new LongSumAggregatorFactory(""idx"", ""index""))"
71584,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/NestedQueryPushDownTest.java,134,,"                        new StringDimensionSchema(""dimA""),"
71585,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/NestedQueryPushDownTest.java,135,,"                        new StringDimensionSchema(""dimB""),"
71586,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/NestedQueryPushDownTest.java,136,,"                        new LongDimensionSchema(""metA""),"
71587,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/NestedQueryPushDownTest.java,137,,"                        new LongDimensionSchema(""metB"")"
71588,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/NestedQueryPushDownTest.java,162,,"    event.put(""dimA"", ""pomegranate"");"
71589,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/NestedQueryPushDownTest.java,164,,"    event.put(""dimB"", ""sweet"");"
71590,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/NestedQueryPushDownTest.java,170,,"    event.put(""dimA"", ""mango"");"
71591,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/NestedQueryPushDownTest.java,224,,"    event.put(""dimB"", ""sour"");"
71592,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/NestedQueryPushDownTest.java,386,,"        .setDataSource(""blah"")"
71593,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/NestedQueryPushDownTest.java,390,,"            new LongSumAggregatorFactory(""metASum"", ""metA""),"
71594,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/NestedQueryPushDownTest.java,391,,"            new LongSumAggregatorFactory(""metBSum"", ""metB"")"
71595,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/NestedQueryPushDownTest.java,401,,"        .setAggregatorSpecs(new LongSumAggregatorFactory(""totalSum"", ""metASum""))"
71596,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/NestedQueryPushDownTest.java,415,,"        ""2017-07-14T02:40:00.000Z"","
71597,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/NestedQueryPushDownTest.java,512,,"        .setDimensions(new DefaultDimensionSpec(""dimA"", ""newDimA""))"
71598,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/NestedQueryPushDownTest.java,513,,"        .setAggregatorSpecs(new LongSumAggregatorFactory(""finalSum"", ""metASum""))"
71599,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/ResultRowTest.java,59,,"            new DefaultDimensionSpec(""dim3"", ""dim3"")"
71600,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/epinephelinae/BufferHashGrouperTest.java,62,,"                new LongSumAggregatorFactory(""valueSum"", ""value""),"
71601,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/epinephelinae/LimitedBufferHashGrouperTest.java,56,,"    columnSelectorFactory.setRow(new MapBasedRow(0, ImmutableMap.of(""value"", 10L)));"
71602,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/epinephelinae/StreamingMergeSortedGrouperTest.java,61,,"    columnSelectorFactory.setRow(new MapBasedRow(0, ImmutableMap.of(""value"", 10L)));"
71603,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/having/DimFilterHavingSpecTest.java,53,,"    final DimFilterHavingSpec havingSpec = new DimFilterHavingSpec(new SelectorDimFilter(""foo"", ""bar"", null), null);"
71604,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/having/DimensionSelectorHavingSpecTest.java,45,,"    HavingSpec dimHavingSpec = new DimensionSelectorHavingSpec(""dim"", ""v"", null);"
71605,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/having/DimensionSelectorHavingSpecTest.java,49,,"        ""dimension"", ""dim"","
71606,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/having/DimensionSelectorHavingSpecTest.java,50,,"        ""value"", ""v"""
71607,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/having/DimensionSelectorHavingSpecTest.java,60,,"    ExtractionFn extractionFn1 = new RegexDimExtractionFn(""^([^,]*),"", false, """");"
71608,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/having/HavingSpecTest.java,58,,"        ""type"", ""not"","
71609,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/having/HavingSpecTest.java,59,,"        ""havingSpec"", ImmutableMap.of(""type"", ""equalTo"", ""aggregation"", ""equalAgg"", ""value"", 2.0)"
71610,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/having/HavingSpecTest.java,59,,"        ""havingSpec"", ImmutableMap.of(""type"", ""equalTo"", ""aggregation"", ""equalAgg"", ""value"", 2.0)"
71611,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/having/HavingSpecTest.java,104,,"    GreaterThanHavingSpec spec = new GreaterThanHavingSpec(""metric"", Long.MAX_VALUE - 10);"
71612,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/orderby/DefaultLimitSpecTest.java,90,,"    json = ""{\n"""
71613,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/orderby/DefaultLimitSpecTest.java,91,,"           + ""  \""type\"":\""default\"",\n"""
71614,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/orderby/DefaultLimitSpecTest.java,93,,"           + ""  \""limit\"":10\n"""
71615,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/orderby/DefaultLimitSpecTest.java,169,,"                    .setDataSource(""dummy"")"
71616,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/orderby/DefaultLimitSpecTest.java,170,,"                    .setInterval(""1000/3000"")"
71617,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/groupby/orderby/DefaultLimitSpecTest.java,283,,"    final DefaultLimitSpec limitSpec = DefaultLimitSpec.builder().orderBy(""abc"").limit(1).offset(2).build();"
71618,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/lookup/LookupExtractionFnExpectationsTest.java,37,,"        new MapLookupExtractor(ImmutableMap.of(""foo"", ""bar""), false),"
71619,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/lookup/LookupExtractionFnExpectationsTest.java,52,,"        ""REPLACE"","
71620,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/lookup/LookupExtractionFnTest.java,82,,"        new MapLookupExtractor(ImmutableMap.of(""foo"", ""bar""), false),"
71621,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/lookup/LookupExtractionFnTest.java,82,,"        new MapLookupExtractor(ImmutableMap.of(""foo"", ""bar""), false),"
71622,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/metadata/SegmentMetadataQueryQueryToolChestTest.java,122,,"            ""foo"", new LongSumAggregatorFactory(""foo"", ""foo""),"
71623,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/metadata/SegmentMetadataQueryQueryToolChestTest.java,123,,"            ""baz"", new DoubleSumAggregatorFactory(""baz"", ""baz"")"
71624,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/metadata/SegmentMetadataQueryQueryToolChestTest.java,137,,"            ""bar"", new DoubleSumAggregatorFactory(""bar"", ""bar"")"
71625,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/metadata/SegmentMetadataQueryQueryToolChestTest.java,293,,"                ""2000-01-09/P1D"","
71626,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/metadata/SegmentMetadataQueryTest.java,167,,"    final SegmentId id1 = SegmentId.dummy(differentIds ? ""testSegment1"" : ""testSegment"");"
71627,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/metadata/SegmentMetadataQueryTest.java,182,,"                      .dataSource(""testing"")"
71628,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/metadata/SegmentMetadataQueryTest.java,183,,"                      .intervals(""2013/2014"")"
71629,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/metadata/SegmentMetadataQueryTest.java,184,,"                      .toInclude(new ListColumnIncluderator(Arrays.asList(""__time"", ""index"", ""placement"")))"
71630,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/metadata/SegmentMetadataQueryTest.java,184,,"                      .toInclude(new ListColumnIncluderator(Arrays.asList(""__time"", ""index"", ""placement"")))"
71631,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/metadata/SegmentMetadataQueryTest.java,184,,"                      .toInclude(new ListColumnIncluderator(Arrays.asList(""__time"", ""index"", ""placement"")))"
71632,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/metadata/SegmentMetadataQueryTest.java,237,,"                ""preferred"","
71633,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/metadata/SegmentMetadataQueryTest.java,308,,"        differentIds ? ""merged"" : SegmentId.dummy(""testSegment"").toString(),"
71634,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/metadata/SegmentMetadataQueryTest.java,322,,"            ""placementish"","
71635,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/metadata/SegmentMetadataQueryTest.java,369,,"        ""failed SegmentMetadata merging query"""
71636,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/metadata/metadata/ColumnAnalysisTest.java,39,,"    final ColumnAnalysis analysis1 = new ColumnAnalysis(""STRING"", false, false, 1L, 2, ""aaA"", ""Zzz"", null);"
71637,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/metadata/metadata/ColumnAnalysisTest.java,67,,"    final ColumnAnalysis analysis1 = new ColumnAnalysis(""hyperUnique"", false, false, 0L, null, null, null, null);"
71638,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/metadata/metadata/ColumnAnalysisTest.java,115,,"    final ColumnAnalysis analysis1 = ColumnAnalysis.error(""foo"");"
71639,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/ordering/StringComparatorsTest.java,41,,"    Assert.assertTrue(comparator.compare(""123"", ""123"") == 0);"
71640,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/ordering/StringComparatorsTest.java,45,,"    Assert.assertTrue(comparator.compare("""", ""abc"") < 0);"
71641,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/ordering/StringComparatorsTest.java,49,,"    Assert.assertTrue(comparator.compare(null, ""apple"") < 0);"
71642,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/ordering/StringComparatorsTest.java,85,,"    List<String> sorted = Lists.newArrayList(""1-5"", ""11-15"", ""16-20"", ""21-25"", ""26-30"", ""6-10"", ""Other"");"
71643,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryQueryToolChestTest.java,59,,"              .dataSource(""foo"")"
71644,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryQueryToolChestTest.java,60,,"              .intervals(new MultipleIntervalSegmentSpec(ImmutableList.of(Intervals.of(""2000/3000""))))"
71645,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryQueryToolChestTest.java,86,,"              .columns(""foo"", ""bar"")"
71646,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryResultOrderingTest.java,105,,"              new Object[]{DateTimes.of(""2000T01""), 101},"
71647,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerFactoryTest.java,166,,"                DateTimes.of(""2010-01-01""),"
71648,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerFactoryTest.java,167,,"                DateTimes.of(""2019-01-01"").plusHours(1)"
71649,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,85,,"      new ExpressionVirtualColumn(""expr"", ""index * 2"", ValueType.LONG, TestExprMacroTable.INSTANCE);"
71650,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,181,,"        ""market"","
71651,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,182,,"        ""quality"","
71652,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,193,,"        ""null_column"","
71653,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,194,,"        ""index"","
71654,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,195,,"        ""indexMin"","
71655,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,196,,"        ""indexMaxPlusTen"","
71656,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,197,,"        ""quality_uniques"","
71657,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,198,,"        ""indexFloat"","
71658,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,199,,"        ""indexMaxFloat"","
71659,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,200,,"        ""indexMinFloat"""
71660,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,278,,"            getTimestampName() + "":TIME"","
71661,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,279,,"            QueryRunnerTestHelper.MARKET_DIMENSION + "":STRING"","
71662,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,290,,"            QueryRunnerTestHelper.INDEX_METRIC + "":DOUBLE"""
71663,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,299,,"          event.put(""__time"", ((DateTime) event.get(""timestamp"")).getMillis());"
71664,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,299,,"          event.put(""__time"", ((DateTime) event.get(""timestamp"")).getMillis());"
71665,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,395,,"          .filters(new SelectorDimFilter(QueryRunnerTestHelper.MARKET_DIMENSION, ""spot"", null))"
71666,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,413,,"              ""2011-01-12T00:00:00.000Z\tspot\tautomotive\tpreferred\tapreferred\t100.000000"","
71667,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,414,,"              ""2011-01-12T00:00:00.000Z\tspot\tbusiness\tpreferred\tbpreferred\t100.000000"","
71668,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,415,,"              ""2011-01-12T00:00:00.000Z\tspot\tentertainment\tpreferred\tepreferred\t100.000000"","
71669,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,416,,"              ""2011-01-12T00:00:00.000Z\tspot\thealth\tpreferred\thpreferred\t100.000000"","
71670,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,417,,"              ""2011-01-12T00:00:00.000Z\tspot\tmezzanine\tpreferred\tmpreferred\t100.000000"","
71671,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,418,,"              ""2011-01-12T00:00:00.000Z\tspot\tnews\tpreferred\tnpreferred\t100.000000"","
71672,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,419,,"              ""2011-01-12T00:00:00.000Z\tspot\tpremium\tpreferred\tppreferred\t100.000000"","
71673,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,420,,"              ""2011-01-12T00:00:00.000Z\tspot\ttechnology\tpreferred\ttpreferred\t100.000000"","
71674,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,421,,"              ""2011-01-12T00:00:00.000Z\tspot\ttravel\tpreferred\ttpreferred\t100.000000"""
71675,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,424,,"              ""2011-01-13T00:00:00.000Z\tspot\tautomotive\tpreferred\tapreferred\t94.874713"","
71676,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,425,,"              ""2011-01-13T00:00:00.000Z\tspot\tbusiness\tpreferred\tbpreferred\t103.629399"","
71677,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,426,,"              ""2011-01-13T00:00:00.000Z\tspot\tentertainment\tpreferred\tepreferred\t110.087299"","
71678,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,427,,"              ""2011-01-13T00:00:00.000Z\tspot\thealth\tpreferred\thpreferred\t114.947403"","
71679,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,428,,"              ""2011-01-13T00:00:00.000Z\tspot\tmezzanine\tpreferred\tmpreferred\t104.465767"","
71680,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,429,,"              ""2011-01-13T00:00:00.000Z\tspot\tnews\tpreferred\tnpreferred\t102.851683"","
71681,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,430,,"              ""2011-01-13T00:00:00.000Z\tspot\tpremium\tpreferred\tppreferred\t108.863011"","
71682,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,431,,"              ""2011-01-13T00:00:00.000Z\tspot\ttechnology\tpreferred\ttpreferred\t111.356672"","
71683,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,432,,"              ""2011-01-13T00:00:00.000Z\tspot\ttravel\tpreferred\ttpreferred\t106.236928"""
71684,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,512,,"                    new SelectorDimFilter(QueryRunnerTestHelper.MARKET_DIMENSION, ""foo"", null)"
71685,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryRunnerTest.java,1112,,"                ""invalid value for "" + ex.getKey(),"
71686,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryTest.java,101,,"          .dataSource(""source"")"
71687,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanQueryTest.java,193,,"                                  .dataSource(""some src"")"
71688,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanResultValueTest.java,52,,"    List<String> columns = new ArrayList<>(Arrays.asList(ColumnHolder.TIME_COLUMN_NAME, ""name"", ""count""));"
71689,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanResultValueTest.java,52,,"    List<String> columns = new ArrayList<>(Arrays.asList(ColumnHolder.TIME_COLUMN_NAME, ""name"", ""count""));"
71690,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanResultValueTimestampComparatorTest.java,57,,"                            .dataSource(""some src"")"
71691,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/scan/ScanResultValueTimestampComparatorTest.java,69,,"        ""segmentId"","
71692,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/search/SearchBinaryFnTest.java,65,,"                    ""blah"","
71693,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/search/SearchBinaryFnTest.java,66,,"                    ""foo"""
71694,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/search/SearchBinaryFnTest.java,77,,"                    ""blah2"","
71695,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/search/SearchBinaryFnTest.java,78,,"                    ""foo2"""
71696,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/search/SearchBinaryFnTest.java,233,,"        new SearchResultValue(toHits(c, ""blah:thisislong""))"
71697,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/search/SearchBinaryFnTest.java,238,,"        new SearchResultValue(toHits(c, ""blah:short""))"
71698,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/search/SearchQueryRunnerTest.java,140,,"    expectedHits.add(new SearchHit(QueryRunnerTestHelper.QUALITY_DIMENSION, ""automotive"", 93));"
71699,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/search/SearchQueryRunnerTest.java,141,,"    expectedHits.add(new SearchHit(QueryRunnerTestHelper.QUALITY_DIMENSION, ""mezzanine"", 279));"
71700,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/search/SearchQueryRunnerTest.java,142,,"    expectedHits.add(new SearchHit(QueryRunnerTestHelper.QUALITY_DIMENSION, ""travel"", 93));"
71701,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/search/SearchQueryRunnerTest.java,143,,"    expectedHits.add(new SearchHit(QueryRunnerTestHelper.QUALITY_DIMENSION, ""health"", 93));"
71702,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/search/SearchQueryRunnerTest.java,144,,"    expectedHits.add(new SearchHit(QueryRunnerTestHelper.QUALITY_DIMENSION, ""entertainment"", 93));"
71703,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/search/SearchQueryRunnerTest.java,145,,"    expectedHits.add(new SearchHit(QueryRunnerTestHelper.MARKET_DIMENSION, ""total_market"", 186));"
71704,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/search/SearchQueryRunnerTest.java,217,,"    expectedHits.add(new SearchHit(QueryRunnerTestHelper.PLACEMENT_DIMENSION, ""preferred"", 1209));"
71705,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/search/SearchQueryRunnerTest.java,735,,"            Arrays.asList(""name"", ""host""),"
71706,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/search/SearchQueryRunnerTest.java,742,,"            Arrays.asList(""name"", ""table""),"
71707,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/search/SearchQueryRunnerWithCaseTest.java,148,,"    expectedResults.put(QueryRunnerTestHelper.MARKET_DIMENSION, Sets.newHashSet(""spot"", ""SPot""));"
71708,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/search/SearchQueryRunnerWithCaseTest.java,174,,"        Sets.newHashSet(""PREFERRED"", ""preferred"", ""PREFERRed"")"
71709,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/search/SearchSortSpecTest.java,37,,"    SearchHit hit1 = new SearchHit(""test"", ""apple"");"
71710,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/spec/QuerySegmentSpecTest.java,47,,"        ImmutableList.of(Intervals.of(""2011-10-01/2011-10-10""), Intervals.of(""2011-11-01/2011-11-10"")),"
71711,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/spec/QuerySegmentSpecTest.java,89,,"                    ""itvl"", ""2011-07-01/2011-10-10"","
71712,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/spec/SpecificSegmentQueryRunnerTest.java,61,,"        Intervals.of(""2012-01-01T00:00:00Z/P1D""),"
71713,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/spec/SpecificSegmentQueryRunnerTest.java,102,,"                                          new CountAggregatorFactory(""rows"")"
71714,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeboundary/TimeBoundaryQueryQueryToolChestTest.java,104,,"            createLogicalSegment(Intervals.of(""2013-01-01/P1D"")),"
71715,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeboundary/TimeBoundaryQueryQueryToolChestTest.java,105,,"            createLogicalSegment(Intervals.of(""2013-01-01T01/PT1H"")),"
71716,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeboundary/TimeBoundaryQueryQueryToolChestTest.java,106,,"            createLogicalSegment(Intervals.of(""2013-01-01T02/PT1H"")),"
71717,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeboundary/TimeBoundaryQueryQueryToolChestTest.java,107,,"            createLogicalSegment(Intervals.of(""2013-01-02/P1D"")),"
71718,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeboundary/TimeBoundaryQueryQueryToolChestTest.java,108,,"            createLogicalSegment(Intervals.of(""2013-01-03T01/PT1H"")),"
71719,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeboundary/TimeBoundaryQueryQueryToolChestTest.java,109,,"            createLogicalSegment(Intervals.of(""2013-01-03T02/PT1H"")),"
71720,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeboundary/TimeBoundaryQueryQueryToolChestTest.java,110,,"            createLogicalSegment(Intervals.of(""2013-01-03/P1D""))"
71721,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeboundary/TimeBoundaryQueryQueryToolChestTest.java,138,,"            createLogicalSegment(Intervals.of(""2017/2017-08-01""), Intervals.of(""2017/2018"")),"
71722,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeboundary/TimeBoundaryQueryQueryToolChestTest.java,138,,"            createLogicalSegment(Intervals.of(""2017/2017-08-01""), Intervals.of(""2017/2018"")),"
71723,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeboundary/TimeBoundaryQueryQueryToolChestTest.java,139,,"            createLogicalSegment(Intervals.of(""2017-08-01/2017-08-02"")),"
71724,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeboundary/TimeBoundaryQueryQueryToolChestTest.java,140,,"            createLogicalSegment(Intervals.of(""2017-08-02/2018""), Intervals.of(""2017/2018""))"
71725,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeboundary/TimeBoundaryQueryRunnerTest.java,164,,"  @SuppressWarnings(""unchecked"")"
71726,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeboundary/TimeBoundaryQueryRunnerTest.java,169,,"                                                .dataSource(""testing"")"
71727,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeboundary/TimeBoundaryQueryTest.java,60,,"                                                  ""useCache"","
71728,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeboundary/TimeBoundaryQueryTest.java,62,,"                                                  ""populateCache"","
71729,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeboundary/TimeBoundaryQueryTest.java,64,,"                                                  ""finalize"","
71730,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeboundary/TimeBoundaryQueryTest.java,99,,"                                                  ""true"","
71731,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeSeriesUnionQueryRunnerTest.java,94,,"                                              ""idx"","
71732,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeSeriesUnionQueryRunnerTest.java,107,,"                ImmutableMap.of(""rows"", 52L, ""idx"", 26476L, ""uniques"", QueryRunnerTestHelper.UNIQUES_9)"
71733,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeSeriesUnionQueryRunnerTest.java,111,,"            DateTimes.of(""2011-04-02""),"
71734,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesBinaryFnTest.java,40,,"  final CountAggregatorFactory rowsCount = new CountAggregatorFactory(""rows"");"
71735,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesBinaryFnTest.java,41,,"  final LongSumAggregatorFactory indexLongSum = new LongSumAggregatorFactory(""index"", ""index"");"
71736,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryQueryToolChestTest.java,87,,"                new TableDataSource(""dummy""),"
71737,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryQueryToolChestTest.java,88,,"                new MultipleIntervalSegmentSpec(ImmutableList.of(Intervals.of(""2015-01-01/2015-01-02""))),"
71738,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryQueryToolChestTest.java,94,,"                    new CountAggregatorFactory(""metric1""),"
71739,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryQueryToolChestTest.java,95,,"                    new LongSumAggregatorFactory(""metric0"", ""metric0""),"
71740,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryQueryToolChestTest.java,96,,"                    new StringLastAggregatorFactory(""complexMetric"", ""test"", null)"
71741,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryQueryToolChestTest.java,98,,"                ImmutableList.of(new ConstantPostAggregator(""post"", 10)),"
71742,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryQueryToolChestTest.java,383,,"                    .add(""rows"", ValueType.LONG)"
71743,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryQueryToolChestTest.java,384,,"                    .add(""index"", ValueType.DOUBLE)"
71744,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryQueryToolChestTest.java,385,,"                    .add(""uniques"", null)"
71745,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryQueryToolChestTest.java,386,,"                    .add(""const"", ValueType.LONG)"
71746,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryRunnerBonusTest.java,73,,"                .withMinTimestamp(DateTimes.of(""2012-01-01T00:00:00Z"").getMillis())"
71747,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryRunnerBonusTest.java,84,,"            ImmutableList.of(""dim1""),"
71748,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryRunnerTest.java,181,,"                                          new DoubleFirstAggregatorFactory(""first"", ""index"")"
71749,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryRunnerTest.java,181,,"                                          new DoubleFirstAggregatorFactory(""first"", ""index"")"
71750,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryRunnerTest.java,189,,"    resultMap.put(""rows"", 0L);"
71751,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryRunnerTest.java,238,,"          StringUtils.format(""Timestamp[%s] > expectedLast[%s]"", current, expectedLast),"
71752,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryRunnerTest.java,261,,"            value.getDoubleMetric(""addRowsIndexConstant""),"
71753,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryRunnerTest.java,265,,"            value.getDoubleMetric(""uniques""),"
71754,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryRunnerTest.java,424,,"                                  .filters(QueryRunnerTestHelper.MARKET_DIMENSION, ""upfront"")"
71755,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryRunnerTest.java,483,,"                                              ""idx"","
71756,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryRunnerTest.java,497,,"            DateTimes.of(""2011-04-01""),"
71757,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryRunnerTest.java,505,,"            DateTimes.of(""2011-04-02""),"
71758,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryRunnerTest.java,744,,"                                          DateTimes.inferTzFromString(""America/Los_Angeles"")"
71759,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryRunnerTest.java,779,,"                                           Intervals.of(""2011-04-02T00:00:00.000Z/2011-04-03T00:00:00.000Z"")"
71760,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryRunnerTest.java,847,,"                                   .filters(QueryRunnerTestHelper.MARKET_DIMENSION, ""spot"", ""upfront"", ""total_market"")"
71761,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryRunnerTest.java,847,,"                                   .filters(QueryRunnerTestHelper.MARKET_DIMENSION, ""spot"", ""upfront"", ""total_market"")"
71762,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryRunnerTest.java,1348,,"        new OrDimFilter(QueryRunnerTestHelper.QUALITY_DIMENSION, ""automotive"", ""business"")"
71763,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryRunnerTest.java,1348,,"        new OrDimFilter(QueryRunnerTestHelper.QUALITY_DIMENSION, ""automotive"", ""business"")"
71764,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryRunnerTest.java,1649,,"                                  .filters(""bobby"", ""billy"")"
71765,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryRunnerTest.java,1649,,"                                  .filters(""bobby"", ""billy"")"
71766,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryRunnerTest.java,1961,,"                                          new DoubleLastAggregatorFactory(""last"", ""index"")"
71767,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryRunnerTest.java,2212,,"                            new CountAggregatorFactory(""filteredAgg""),"
71768,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryRunnerTest.java,2666,,"                                              .filter(eachIndex -> !""0.0"".equals(eachIndex))"
71769,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryRunnerTest.java,2978,,"                                      new FieldAccessPostAggregator(""timestampInPostAgg"", ""myTimestamp"")"
71770,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryRunnerTest.java,3070,,"                                              ""array_agg_distinct"","
71771,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/AlphaNumericTopNMetricSpecTest.java,44,,"    Assert.assertEquals(0, comparator.compare(""abc"", ""abc""));"
71772,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/AlphaNumericTopNMetricSpecTest.java,45,,"    Assert.assertEquals(0, comparator.compare(""123"", ""123""));"
71773,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/AlphaNumericTopNMetricSpecTest.java,71,,"    List<String> sorted = Lists.newArrayList(""1-5"", ""11-15"", ""16-20"", ""21-25"", ""26-30"", ""6-10"", ""Other"");"
71774,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/DefaultTopNQueryMetricsTest.java,59,,"            new DefaultDimensionSpec(""tags"", ""tags""),"
71775,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/DimensionTopNMetricSpecTest.java,36,,"    DimensionTopNMetricSpec expectedMetricSpec1 = new DimensionTopNMetricSpec(""test"", StringComparators.ALPHANUMERIC);"
71776,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/DimensionTopNMetricSpecTest.java,37,,"    String jsonSpec = ""{\n"""
71777,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/DimensionTopNMetricSpecTest.java,38,,"                      + ""    \""type\"": \""dimension\"","""
71778,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/DimensionTopNMetricSpecTest.java,44,,"                       + ""    \""previousStop\"": \""test\""\n"""
71779,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/PerSegmentQueryOptimizeTest.java,42,,"    LongSumAggregatorFactory longSumAggregatorFactory = new LongSumAggregatorFactory(""test"", ""test"");"
71780,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNBinaryFnBenchmark.java,69,,"    final FieldAccessPostAggregator rowsPostAgg = new FieldAccessPostAggregator(""rows"", ""rows"");"
71781,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNBinaryFnBenchmark.java,70,,"    final FieldAccessPostAggregator indexPostAgg = new FieldAccessPostAggregator(""index"", ""index"");"
71782,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNBinaryFnTest.java,52,,"  final CountAggregatorFactory rowsCount = new CountAggregatorFactory(""rows"");"
71783,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNBinaryFnTest.java,53,,"  final LongSumAggregatorFactory indexLongSum = new LongSumAggregatorFactory(""index"", ""index"");"
71784,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNBinaryFnTest.java,58,,"      ""addrowsindexconstant"","
71785,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNBinaryFnTest.java,91,,"                    ""testdim"", ""1"""
71786,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNMetricSpecOptimizationsTest.java,85,,"        makeFakeStorageAdapter(""2018-05-30T00:00:00Z"", ""2018-05-30T01:00:00Z"", cardinality);"
71787,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNMetricSpecOptimizationsTest.java,85,,"        makeFakeStorageAdapter(""2018-05-30T00:00:00Z"", ""2018-05-30T01:00:00Z"", cardinality);"
71788,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryBuilderTest.java,51,,"        .queryId(""queryId"")"
71789,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryBuilderTest.java,60,,"        .context(ImmutableMap.of(""my"", ""context""))"
71790,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryBuilderTest.java,71,,"        .queryId(""realQueryId"")"
71791,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryQueryToolChestTest.java,112,,"        new TableDataSource(""dummy""),"
71792,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryQueryToolChestTest.java,114,,"        new DefaultDimensionSpec(""test"", ""test""),"
71793,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryQueryToolChestTest.java,115,,"        new NumericTopNMetricSpec(""post""),"
71794,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryQueryToolChestTest.java,117,,"        new MultipleIntervalSegmentSpec(ImmutableList.of(Intervals.of(""2015-01-01/2015-01-02""))),"
71795,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryQueryToolChestTest.java,120,,"        ImmutableList.of(new CountAggregatorFactory(""metric1"")),"
71796,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryQueryToolChestTest.java,185,,"            new LongSumAggregatorFactory(""metric2"", ""metric2"")"
71797,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryQueryToolChestTest.java,307,,"        .dimension(new DefaultDimensionSpec(""col"", ""dim""))"
71798,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryQueryToolChestTest.java,374,,"        return new LongLastAggregatorFactory(""complexMetric"", ""test"");"
71799,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,291,,"                        new DoubleMaxAggregatorFactory(""maxIndex"", ""index""),"
71800,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,291,,"                        new DoubleMaxAggregatorFactory(""maxIndex"", ""index""),"
71801,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,292,,"                        new DoubleMinAggregatorFactory(""minIndex"", ""index""),"
71802,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,293,,"                        new DoubleFirstAggregatorFactory(""first"", ""index"")"
71803,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,336,,"            DateTimes.of(""2011-01-12T00:00:00.000Z""),"
71804,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,340,,"                        .put(QueryRunnerTestHelper.MARKET_DIMENSION, ""total_market"")"
71805,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,341,,"                        .put(""rows"", 186L)"
71806,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,343,,"                        .put(""addRowsIndexConstant"", 215866.82879638672D)"
71807,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,344,,"                        .put(""uniques"", QueryRunnerTestHelper.UNIQUES_2)"
71808,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,349,,"                        .put(QueryRunnerTestHelper.MARKET_DIMENSION, ""upfront"")"
71809,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,358,,"                        .put(QueryRunnerTestHelper.MARKET_DIMENSION, ""spot"")"
71810,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,375,,"                                  new FloatMaxAggregatorFactory(""maxIndex"", ""indexFloat""),"
71811,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,388,,"        .dimension(new DefaultDimensionSpec(""nonexistentColumn"", ""alias""))"
71812,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,507,,"        .metric(""dimPostAgg"")"
71813,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,600,,"                        .put(""market"", ""spot"")"
71814,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,825,,"        .metric(""last"")"
71815,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,902,,"            DateTimes.of(""2011-04-01T00:00:00.000Z""),"
71816,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,1457,,"        .filters(QueryRunnerTestHelper.QUALITY_DIMENSION, ""mezzanine"")"
71817,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,1732,,"                        ""placementish"", ""a"","
71818,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,1739,,"                        ""placementish"", ""preferred"","
71819,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,1861,,"        .dimension(""doesn't exist"")"
71820,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,2364,,"                new RegexDimExtractionFn(""(.)"", false, null)"
71821,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,2459,,"                            ""spot"", ""2spot0"","
71822,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,2460,,"                            ""total_market"", ""1total_market0"","
71823,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,2461,,"                            ""upfront"", ""3upfront0"""
71824,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,2653,,"                            ""spot0"","
71825,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,2719,,"                            ""2spot"","
71826,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,2721,,"                            ""3total_market"","
71827,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,2723,,"                            ""1upfront"""
71828,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,3450,,"            .metric(new NumericTopNMetricSpec(""numVals""))"
71829,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,3455,,"                new CardinalityAggregatorFactory(""numVals1"", aggregatorDimensionSpecs, false)"
71830,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,3710,,"        .metric(""ntimestamps"")"
71831,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,3806,,"        .dimension(""null_column"")"
71832,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,3899,,"        .dimension(""partial_null_column"")"
71833,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,4006,,"            new CountAggregatorFactory(""rows1"")"
71834,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,4011,,"            DateTimes.of(""2011-04-02T00:00:00.000Z""),"
71835,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,4131,,"      extractionMap.put("""", ""NULL"");"
71836,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,4259,,"        .dimension(new DefaultDimensionSpec(QueryRunnerTestHelper.INDEX_METRIC, ""index_alias"", ValueType.FLOAT))"
71837,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,4406,,"        .dimension(new DefaultDimensionSpec(""qualityFloat"", ""qf_alias""))"
71838,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,4478,,"        .dimension(new DefaultDimensionSpec(""qualityLong"", ""ql_alias"", ValueType.LONG))"
71839,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,4478,,"        .dimension(new DefaultDimensionSpec(""qualityLong"", ""ql_alias"", ValueType.LONG))"
71840,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,4825,,"        .dimension(new DefaultDimensionSpec(""qualityNumericString"", ""qns_alias"", ValueType.LONG))"
71841,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,4969,,"        .dimension(new DefaultDimensionSpec(ColumnHolder.TIME_COLUMN_NAME, ""time_alias"", ValueType.LONG))"
71842,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,5077,,"        .dimension(new DefaultDimensionSpec(""__time"", ""__time_alias"", ValueType.LONG))"
71843,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,5659,,"        .metric(""count"")"
71844,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,5676,,"        .metric(new NumericTopNMetricSpec(""longNumericNull""))"
71845,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,5744,,"        .metric(new NumericTopNMetricSpec(""floatNumericNull""))"
71846,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,5812,,"        .metric(new NumericTopNMetricSpec(""doubleNumericNull""))"
71847,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,5880,,"        .dimension(new DefaultDimensionSpec(""longNumericNull"", ""dim"", ValueType.LONG))"
71848,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,5978,,"        .metric(""array_agg_distinct"")"
71849,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,5985,,"                        ""diy_count"","
71850,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,5999,,"                        ""diy_sum"","
71851,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java,6013,,"                        ""diy_decomposed_sum"","
71852,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryTest.java,73,,"                        new DoubleMaxAggregatorFactory(""maxIndex"", ""index""),"
71853,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryTest.java,73,,"                        new DoubleMaxAggregatorFactory(""maxIndex"", ""index""),"
71854,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNQueryTest.java,74,,"                        new DoubleMinAggregatorFactory(""minIndex"", ""index"")"
71855,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNUnionQueryTest.java,113,,"                        new DoubleMaxAggregatorFactory(""maxIndex"", ""index""),"
71856,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNUnionQueryTest.java,113,,"                        new DoubleMaxAggregatorFactory(""maxIndex"", ""index""),"
71857,./TargetProjects/druid/processing/src/test/java/org/apache/druid/query/topn/TopNUnionQueryTest.java,114,,"                        new DoubleMinAggregatorFactory(""minIndex"", ""index"")"
71858,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/AppendTest.java,80,,"      new DoubleSumAggregatorFactory(""index"", ""index""),"
71859,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/AppendTest.java,91,,"  final String marketDimension = ""market"";"
71860,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/AppendTest.java,96,,"  final CountAggregatorFactory rowsCount = new CountAggregatorFactory(""rows"");"
71861,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/AppendTest.java,98,,"  final HyperUniquesAggregatorFactory uniques = new HyperUniquesAggregatorFactory(""uniques"", ""quality_uniques"");"
71862,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/AppendTest.java,104,,"          ""addRowsIndexConstant"", ""+"", Lists.newArrayList(constant, rowsPostAgg, indexPostAgg)"
71863,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/AppendTest.java,171,,"            DateTimes.of(""2011-01-12T00:00:00.000Z""),"
71864,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/AppendTest.java,226,,"                    .put(""maxIndex"", 100.0D)"
71865,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/AppendTest.java,227,,"                    .put(""minIndex"", 0.0D)"
71866,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/AppendTest.java,319,,"                        .put(""market"", ""spot"")"
71867,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/AppendTest.java,337,,"                        .put(""market"", ""total_market"")"
71868,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/AppendTest.java,462,,"                    new SearchHit(placementDimension, ""mezzanine""),"
71869,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/CloserRuleTest.java,103,,"    final String ioExceptionMsg = ""You can't triple stamp a double stamp!"";"
71870,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/ConstantDimensionSelectorTest.java,32,,"  private final DimensionSelector CONST_SELECTOR = DimensionSelector.constant(""billy"");"
71871,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/ConstantDimensionSelectorTest.java,74,,"    Assert.assertEquals(-1, NULL_SELECTOR.idLookup().lookupId(""bob""));"
71872,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexIOTest.java,101,,"        ""dim0"", ImmutableList.of(""dim00"", ""dim01"")"
71873,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexIOTest.java,104,,"        ""dim1"", ""dim10"""
71874,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerTestBase.java,173,,"    Assert.assertEquals(Arrays.asList(""dim1"", ""dim2""), Lists.newArrayList(index.getAvailableDimensions()));"
71875,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerTestBase.java,173,,"    Assert.assertEquals(Arrays.asList(""dim1"", ""dim2""), Lists.newArrayList(index.getAvailableDimensions()));"
71876,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerTestBase.java,275,,"        .setSimpleTestingIndexSchema(new CountAggregatorFactory(""count""))"
71877,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerTestBase.java,836,,"            makeDimensionSchemas(Arrays.asList(""dimA"", ""dimB"", ""dimC"")),"
71878,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerTestBase.java,836,,"            makeDimensionSchemas(Arrays.asList(""dimA"", ""dimB"", ""dimC"")),"
71879,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerTestBase.java,836,,"            makeDimensionSchemas(Arrays.asList(""dimA"", ""dimB"", ""dimC"")),"
71880,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerTestBase.java,1040,,"              ImmutableMap.of(""d1"", """", ""d2"", """", ""d3"", ""310"", ""d7"", """", ""d9"", ""910"")"
71881,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerTestBase.java,1040,,"              ImmutableMap.of(""d1"", """", ""d2"", """", ""d3"", ""310"", ""d7"", """", ""d9"", ""910"")"
71882,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerTestBase.java,1047,,"              ImmutableMap.of(""d2"", ""210"", ""d3"", ""311"", ""d7"", ""710"", ""d8"", ""810"", ""d9"", ""911"")"
71883,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerTestBase.java,1047,,"              ImmutableMap.of(""d2"", ""210"", ""d3"", ""311"", ""d7"", ""710"", ""d8"", ""810"", ""d9"", ""911"")"
71884,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerTestBase.java,1047,,"              ImmutableMap.of(""d2"", ""210"", ""d3"", ""311"", ""d7"", ""710"", ""d8"", ""810"", ""d9"", ""911"")"
71885,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerTestBase.java,1047,,"              ImmutableMap.of(""d2"", ""210"", ""d3"", ""311"", ""d7"", ""710"", ""d8"", ""810"", ""d9"", ""911"")"
71886,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerTestBase.java,1047,,"              ImmutableMap.of(""d2"", ""210"", ""d3"", ""311"", ""d7"", ""710"", ""d8"", ""810"", ""d9"", ""911"")"
71887,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerTestBase.java,1060,,"              ImmutableMap.of(""d5"", ""520"", ""d6"", ""620"", ""d7"", ""720"", ""d8"", ""820"", ""d9"", ""920"")"
71888,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerTestBase.java,1060,,"              ImmutableMap.of(""d5"", ""520"", ""d6"", ""620"", ""d7"", ""720"", ""d8"", ""820"", ""d9"", ""920"")"
71889,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerTestBase.java,1060,,"              ImmutableMap.of(""d5"", ""520"", ""d6"", ""620"", ""d7"", ""720"", ""d8"", ""820"", ""d9"", ""920"")"
71890,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerTestBase.java,1060,,"              ImmutableMap.of(""d5"", ""520"", ""d6"", ""620"", ""d7"", ""720"", ""d8"", ""820"", ""d9"", ""920"")"
71891,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerTestBase.java,1060,,"              ImmutableMap.of(""d5"", ""520"", ""d6"", ""620"", ""d7"", ""720"", ""d8"", ""820"", ""d9"", ""920"")"
71892,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerTestBase.java,1067,,"              ImmutableMap.of(""d5"", """", ""d6"", ""621"", ""d7"", """", ""d8"", ""821"", ""d9"", ""921"")"
71893,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerTestBase.java,1067,,"              ImmutableMap.of(""d5"", """", ""d6"", ""621"", ""d7"", """", ""d8"", ""821"", ""d9"", ""921"")"
71894,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerTestBase.java,1067,,"              ImmutableMap.of(""d5"", """", ""d6"", ""621"", ""d7"", """", ""d8"", ""821"", ""d9"", ""921"")"
71895,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerTestBase.java,2211,,"        ""dimMultiVal"""
71896,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerTestBase.java,2224,,"            new LongSumAggregatorFactory(""sumCount"", ""sumCount"")"
71897,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerTestBase.java,2235,,"    event1.put(""dimA"", ""leek"");"
71898,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerTestBase.java,2258,,"    event4.put(""dimA"", ""potato"");"
71899,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerTestBase.java,2682,,"        Arrays.asList(""aaa"", ""bbb"", ""ccc"", ""ddd"", ""eee""),"
71900,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerV9WithSpatialIndexTest.java,75,,"  private static Interval DATA_INTERVAL = Intervals.of(""2013-01-01/2013-01-07"");"
71901,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerV9WithSpatialIndexTest.java,78,,"      new CountAggregatorFactory(""rows""),"
71902,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerV9WithSpatialIndexTest.java,79,,"      new LongSumAggregatorFactory(""val"", ""val"")"
71903,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerV9WithSpatialIndexTest.java,82,,"  private static List<String> DIMS = Lists.newArrayList(""dim"", ""lat"", ""long"", ""lat2"", ""long2"");"
71904,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerV9WithSpatialIndexTest.java,82,,"  private static List<String> DIMS = Lists.newArrayList(""dim"", ""lat"", ""long"", ""lat2"", ""long2"");"
71905,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerV9WithSpatialIndexTest.java,82,,"  private static List<String> DIMS = Lists.newArrayList(""dim"", ""lat"", ""long"", ""lat2"", ""long2"");"
71906,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerV9WithSpatialIndexTest.java,82,,"  private static List<String> DIMS = Lists.newArrayList(""dim"", ""lat"", ""long"", ""lat2"", ""long2"");"
71907,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerV9WithSpatialIndexTest.java,82,,"  private static List<String> DIMS = Lists.newArrayList(""dim"", ""lat"", ""long"", ""lat2"", ""long2"");"
71908,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerV9WithSpatialIndexTest.java,117,,"                                ""dim.geo"","
71909,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerV9WithSpatialIndexTest.java,121,,"                                ""spatialIsRad"","
71910,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerV9WithSpatialIndexTest.java,134,,"            DateTimes.of(""2013-01-01"").getMillis(),"
71911,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerV9WithSpatialIndexTest.java,137,,"                ""timestamp"", DateTimes.of(""2013-01-01"").toString(),"
71912,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerV9WithSpatialIndexTest.java,138,,"                ""dim"", ""foo"","
71913,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerV9WithSpatialIndexTest.java,147,,"            DateTimes.of(""2013-01-02"").getMillis(),"
71914,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerV9WithSpatialIndexTest.java,160,,"            DateTimes.of(""2013-01-03"").getMillis(),"
71915,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerV9WithSpatialIndexTest.java,173,,"            DateTimes.of(""2013-01-04"").getMillis(),"
71916,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerV9WithSpatialIndexTest.java,186,,"            DateTimes.of(""2013-01-05"").getMillis(),"
71917,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/IndexMergerV9WithSpatialIndexTest.java,204,,"                ""lat"", ""_mmx.unknown"","
71918,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/MetadataTest.java,84,,"        new TimestampSpec(""ds"", ""auto"", null),"
71919,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/RowBasedStorageAdapterTest.java,397,,"    Assert.assertNull(adapter.getColumnCapabilities(""nonexistent""));"
71920,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/RowBasedStorageAdapterTest.java,603,,"            ImmutableList.of(DateTimes.of(""1970-01-01T01""), ""1""),"
71921,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/SchemalessIndexTest.java,75,,"  private static final List<String> METRICS = Collections.singletonList(""index"");"
71922,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/SchemalessIndexTest.java,198,,"        File tmpFile = File.createTempFile(""yay"", ""who"");"
71923,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/SchemalessIndexTest.java,198,,"        File tmpFile = File.createTempFile(""yay"", ""who"");"
71924,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/SchemalessIndexTest.java,203,,"        File mergedFile = new File(tmpFile, ""merged"");"
71925,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/SchemalessTestFullTest.java,94,,"  final String marketDimension = ""market"";"
71926,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/SchemalessTestFullTest.java,98,,"  final String indexMetric = ""index"";"
71927,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/SchemalessTestFullTest.java,99,,"  final CountAggregatorFactory rowsCount = new CountAggregatorFactory(""rows"");"
71928,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/SchemalessTestFullTest.java,101,,"  final HyperUniquesAggregatorFactory uniques = new HyperUniquesAggregatorFactory(""uniques"", ""quality_uniques"");"
71929,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/SchemalessTestFullTest.java,107,,"          ""addRowsIndexConstant"", ""+"", Lists.newArrayList(constant, rowsPostAgg, indexPostAgg)"
71930,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/SchemalessTestFullTest.java,125,,"            DateTimes.of(""2011-01-12T00:00:00.000Z""),"
71931,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/SchemalessTestFullTest.java,132,,"                    .put(""maxIndex"", 100.0D)"
71932,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/SchemalessTestFullTest.java,133,,"                    .put(""minIndex"", 100.0D)"
71933,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/SchemalessTestFullTest.java,161,,"                        .put(""market"", ""spot"")"
71934,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/SchemalessTestFullTest.java,170,,"                        .put(""market"", ""total_market"")"
71935,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/SchemalessTestFullTest.java,208,,"                    new SearchHit(qualityDimension, ""automotive""),"
71936,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/SchemalessTestFullTest.java,1418,,"      @SuppressWarnings(""unused"") // see below"
71937,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/SchemalessTestSimpleTest.java,97,,"  final String marketDimension = ""market"";"
71938,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/SchemalessTestSimpleTest.java,101,,"  final String indexMetric = ""index"";"
71939,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/SchemalessTestSimpleTest.java,102,,"  final CountAggregatorFactory rowsCount = new CountAggregatorFactory(""rows"");"
71940,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/SchemalessTestSimpleTest.java,104,,"  final HyperUniquesAggregatorFactory uniques = new HyperUniquesAggregatorFactory(""uniques"", ""quality_uniques"");"
71941,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/SchemalessTestSimpleTest.java,110,,"          ""addRowsIndexConstant"", ""+"", Lists.newArrayList(constant, rowsPostAgg, indexPostAgg)"
71942,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/SchemalessTestSimpleTest.java,140,,"                                                  new DoubleMaxAggregatorFactory(""maxIndex"", ""index""),"
71943,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/SchemalessTestSimpleTest.java,141,,"                                                  new DoubleMinAggregatorFactory(""minIndex"", ""index"")"
71944,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/SchemalessTestSimpleTest.java,151,,"            DateTimes.of(""2011-01-12T00:00:00.000Z""),"
71945,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/TestHelper.java,179,,"            StringUtils.format(""%s: Second iterator bad, multiple calls to iterator() should be safe"", failMsg),"
71946,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/TestIndex.java,74,,"      ""quality"","
71947,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/TestIndex.java,84,,"      ""index"","
71948,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/data/BitmapSerdeFactoryTest.java,36,,"    Assert.assertEquals(""{\""type\"":\""concise\""}"", mapper.writeValueAsString(new ConciseBitmapSerdeFactory()));"
71949,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/data/CompressedColumnarIntsSerializerTest.java,159,,"    expectedException.expectMessage(ColumnCapacityExceededException.formatMessage(""test""));"
71950,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/data/CompressedDoublesSerdeTest.java,140,,"    expectedException.expectMessage(ColumnCapacityExceededException.formatMessage(""test""));"
71951,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/data/CompressedFloatsSerdeTest.java,126,,"    expectedException.expectMessage(ColumnCapacityExceededException.formatMessage(""test""));"
71952,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/data/CompressedLongsSerdeTest.java,146,,"    expectedException.expectMessage(ColumnCapacityExceededException.formatMessage(""test""));"
71953,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/data/CompressedVSizeColumnarIntsSerializerTest.java,119,,"    final String columnName = ""test"";"
71954,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/data/IncrementalIndexTest.java,168,,"            Arrays.asList(""dim1"", ""dim2""),"
71955,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/data/IncrementalIndexTest.java,168,,"            Arrays.asList(""dim1"", ""dim2""),"
71956,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/data/IncrementalIndexTest.java,208,,"          ""count"""
71957,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/data/IncrementalIndexTest.java,245,,"            new CountAggregatorFactory(""count_selector_filtered""),"
71958,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/data/IncrementalIndexTest.java,249,,"            new CountAggregatorFactory(""count_bound_filtered""),"
71959,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/data/IncrementalIndexTest.java,253,,"            new CountAggregatorFactory(""count_multivaldim_filtered""),"
71960,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/data/IncrementalIndexTest.java,254,,"            new SelectorDimFilter(""dim3"", ""b"", null)"
71961,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/data/IncrementalIndexTest.java,257,,"            new CountAggregatorFactory(""count_numeric_filtered""),"
71962,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/data/IncrementalIndexTest.java,320,,"    ingestAggregatorFactories.add(new CountAggregatorFactory(""rows""));"
71963,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/data/IncrementalIndexTest.java,324,,"              StringUtils.format(""sumResult%s"", i),"
71964,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/data/IncrementalIndexTest.java,325,,"              StringUtils.format(""Dim_%s"", i)"
71965,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/data/IncrementalIndexTest.java,330,,"              StringUtils.format(""doubleSumResult%s"", i),"
71966,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/data/IncrementalIndexTest.java,707,,"            Arrays.asList(""name"", ""host""),"
71967,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/data/IncrementalIndexTest.java,707,,"            Arrays.asList(""name"", ""host""),"
71968,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/data/V3CompressedVSizeColumnarMultiIntsSerializerTest.java,60,,"  private static final String TEST_COLUMN_NAME = ""test"";"
71969,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/AndFilterTest.java,61,,"      PARSER.parseBatch(ImmutableMap.of(""dim0"", ""0"", ""dim1"", ""0"")).get(0),"
71970,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/AndFilterTest.java,61,,"      PARSER.parseBatch(ImmutableMap.of(""dim0"", ""0"", ""dim1"", ""0"")).get(0),"
71971,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/BaseFilterTest.java,123,,"          new ExpressionVirtualColumn(""vdim0"", ""dim0"", ValueType.STRING, TestExprMacroTable.INSTANCE),"
71972,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/BoundFilterTest.java,82,,"        new BoundDimFilter(""dim0"", null, ""z"", false, false, false, null, StringComparators.LEXICOGRAPHIC),"
71973,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/BoundFilterTest.java,84,,"        new BoundDimFilter(""dim1"", null, ""z"", false, false, false, null, StringComparators.LEXICOGRAPHIC),"
71974,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/BoundFilterTest.java,86,,"        new BoundDimFilter(""dim2"", null, ""z"", false, false, false, null, StringComparators.LEXICOGRAPHIC),"
71975,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/BoundFilterTest.java,88,,"        new BoundDimFilter(""dim3"", null, ""z"", false, false, false, null, StringComparators.LEXICOGRAPHIC),"
71976,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/BoundFilterTest.java,203,,"        new BoundDimFilter(""dim1"", ""abc"", ""abc"", true, false, false, null, StringComparators.LEXICOGRAPHIC),"
71977,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/BoundFilterTest.java,540,,"            ""super-"","
71978,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/BoundFilterTest.java,555,,"              ""super-null"","
71979,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/BoundFilterTest.java,655,,"            ""0.0"","
71980,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/BoundFilterTest.java,656,,"            ""1.0"","
71981,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/ColumnComparisonFilterTest.java,62,,"              DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim0"", ""dim1"", ""dim2"")),"
71982,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/ColumnComparisonFilterTest.java,62,,"              DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim0"", ""dim1"", ""dim2"")),"
71983,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/ColumnComparisonFilterTest.java,62,,"              DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim0"", ""dim1"", ""dim2"")),"
71984,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/ColumnComparisonFilterTest.java,125,,"        DefaultDimensionSpec.of(""dim6""),"
71985,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/ExpressionFilterTest.java,69,,"                  new StringDimensionSchema(""dim0""),"
71986,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/ExpressionFilterTest.java,70,,"                  new LongDimensionSchema(""dim1""),"
71987,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/ExpressionFilterTest.java,71,,"                  new FloatDimensionSchema(""dim2""),"
71988,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/ExpressionFilterTest.java,72,,"                  new StringDimensionSchema(""dim3""),"
71989,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/ExpressionFilterTest.java,73,,"                  new StringDimensionSchema(""dim4"")"
71990,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/ExtractionDimFilterTest.java,65,,"      ""foo"", new String[]{""foo1"", ""foo2"", ""foo3""},"
71991,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/ExtractionDimFilterTest.java,65,,"      ""foo"", new String[]{""foo1"", ""foo2"", ""foo3""},"
71992,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/ExtractionDimFilterTest.java,71,,"      ""foo1"", ""extractDimVal"""
71993,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/FilterCnfConversionTest.java,54,,"            FilterTestUtils.selector(""col1"", ""1""),"
71994,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/FilterCnfConversionTest.java,55,,"            FilterTestUtils.selector(""col2"", ""2""),"
71995,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/FilterCnfConversionTest.java,56,,"            FilterTestUtils.not(FilterTestUtils.selector(""col3"", ""3""))"
71996,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/FilterCnfConversionTest.java,122,,"                FilterTestUtils.and(FilterTestUtils.selector(""col1"", ""val1""))"
71997,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/FilterCnfConversionTest.java,139,,"        FilterTestUtils.selector(""col2"", ""val2""),"
71998,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/FilterCnfConversionTest.java,216,,"                    FilterTestUtils.selector(""col4"", ""val4""),"
71999,./TargetProjects/druid/processing/src/test/java/org/apache/druid/segment/filter/FilterCnfConversionTest.java,216,,"                    FilterTestUtils.selector(""col4"", ""val4""),"
