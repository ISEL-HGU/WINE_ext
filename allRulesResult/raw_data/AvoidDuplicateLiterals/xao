14000,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/BasicTestSetup.java,171,,"        AtlasEntity salesFact = table(""sales_fact"", ""sales fact table"", salesDB, sd, ""Joe"", ""Managed"", salesFactColumns, FACT_CLASSIFICATION);"
14001,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/BasicTestSetup.java,172,,"        salesFact.setAttribute(""createTime"", new Date(2018, 01, 01));"
14002,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/BasicTestSetup.java,179,,"                        column(""log"", ""string"", ""log data"", LOGDATA_CLASSIFICATION));"
14003,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/BasicTestSetup.java,221,,"                                         ImmutableList.of(circularLineageTable2), ""create table as select "", ""plan"", ""id"", ""graph"", ETL_CLASSIFICATION);"
14004,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/BasicTestSetup.java,221,,"                                         ImmutableList.of(circularLineageTable2), ""create table as select "", ""plan"", ""id"", ""graph"", ETL_CLASSIFICATION);"
14005,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/BasicTestSetup.java,221,,"                                         ImmutableList.of(circularLineageTable2), ""create table as select "", ""plan"", ""id"", ""graph"", ETL_CLASSIFICATION);"
14006,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/BasicTestSetup.java,262,,"                column(""name"", ""string"", ""customer name"", PII_CLASSIFICATION),"
14007,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/BasicTestSetup.java,308,,"        List<AtlasClassificationDef> cds =  Arrays.asList(new AtlasClassificationDef(DIMENSION_CLASSIFICATION, ""Dimension Classification"", ""1.0"","
14008,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/discovery/AtlasDiscoveryServiceTest.java,63,,"        createDimensionalTaggedEntity(""sales"");"
14009,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/discovery/AtlasDiscoveryServiceTest.java,173,,"        SearchParameters.FilterCriteria fc = getSingleFilterCondition(""__timestamp"", SearchParameters.Operator.LT, String.valueOf(System.currentTimeMillis()));"
14010,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/discovery/AtlasDiscoveryServiceTest.java,193,,"        SearchParameters.FilterCriteria fc = getSingleFilterCondition(""tableType"", Operator.NOT_NULL, ""null"");"
14011,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/discovery/AtlasDiscoveryServiceTest.java,455,,"                {""name"",Operator.CONTAINS,""test_dot"",4},"
14012,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/discovery/AtlasDiscoveryServiceTest.java,473,,"                {""qualifiedName"",Operator.CONTAINS,""test_dot"",4},"
14013,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/discovery/EntitySearchProcessorTest.java,162,,"            nameList.add((String) entityRetriever.toAtlasEntityHeader(vertex, Collections.singleton(""name"")).getAttribute(""name""));"
14014,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/entitytransform/TransformationHandlerTest.java,65,,"    private static final String[] COLUMN_NAMES   = new String[] { ""name"", ""age"", ""dob"" };"
14015,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/entitytransform/TransformationHandlerTest.java,71,,"        AttributeTransform p1 = new AttributeTransform(Collections.singletonMap(""hdfs_path.clusterName"", ""EQUALS: cl1""),"
14016,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/entitytransform/TransformationHandlerTest.java,78,,"            boolean endsWithCl1   = qualifiedName.endsWith(""@cl1"");"
14017,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/entitytransform/TransformationHandlerTest.java,87,,"                assertEquals(qualifiedName, transformedValue, ""not expected to change"");"
14018,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/entitytransform/TransformationHandlerTest.java,143,,"                                                       Collections.singletonMap(""hive_table.replicatedTo"", ""CLEAR:""));"
14019,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/entitytransform/TransformationHandlerTest.java,150,,"            String  replicatedTo = (String) entity.getAttribute(""replicatedTo"");"
14020,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/entitytransform/TransformationHandlerTest.java,181,,"            String replicatedFrom = (String) entity.getAttribute(""replicatedFrom"");"
14021,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/entitytransform/TransformationHandlerTest.java,288,,"        AttributeTransform p = new AttributeTransform(Collections.singletonMap(""hive_db.name"", ""EQUALS: hr""),"
14022,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/entitytransform/TransformationHandlerTest.java,395,,"        AtlasEntity assetEntity    = new AtlasEntity(TYPENAME_ASSET, ""name"", ""originalName"");"
14023,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/entitytransform/TransformationHandlerTest.java,403,,"        assertEquals((String) assetEntity.getAttribute(""name""), ""renamed"", ""Asset.name expected to be updated for Asset entity"");"
14024,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/glossary/GlossaryServiceTest.java,128,,"        bankGlossary.setShortDescription(""Short description"");"
14025,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/glossary/GlossaryServiceTest.java,129,,"        bankGlossary.setLongDescription(""Long description"");"
14026,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/glossary/GlossaryServiceTest.java,130,,"        bankGlossary.setUsage(""N/A"");"
14027,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/glossary/GlossaryServiceTest.java,196,,"    @Test(groups = ""Glossary.CREATE"")"
14028,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/glossary/GlossaryServiceTest.java,365,,"    @Test(groups = ""Glossary.UPDATE"", dependsOnGroups = ""Glossary.CREATE"")"
14029,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/glossary/GlossaryServiceTest.java,499,,"                fail(""Category fetch should've succeeded"", e);"
14030,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/glossary/GlossaryServiceTest.java,539,,"    @Test(groups = ""Glossary.MIGRATE"", dependsOnGroups = ""Glossary.GET.postUpdate"")"
14031,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/BaseDSLComposer.java,87,,"                when(((AtlasEntityType) type).getAttribute(eq(""name""))).thenReturn(attr_s);"
14032,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/BaseDSLComposer.java,123,,"                    attributeName.equals(""owner"") ||"
14033,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/BaseDSLComposer.java,124,,"                    attributeName.equals(""createTime"") ||"
14034,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/BaseDSLComposer.java,137,,"            } else if (attributeName.equalsIgnoreCase(""meanings"")) {"
14035,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/BaseDSLComposer.java,155,,"            return (context.getActiveTypeName().equals(""Table"") && attributeName.equals(""db"")) ||"
14036,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/BaseDSLComposer.java,166,,"                    (context.getActiveTypeName().equals(""hive_db"") && attributeName.equals(""name"")) ||"
14037,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/BaseDSLComposer.java,174,,"                    (context.getActiveTypeName().equals(""Asset"") && attributeName.equals(""name"")) ||"
14038,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/DSLQueriesTest.java,73,,"                {""hive_db"", 3},"
14039,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/DSLQueriesTest.java,75,,"                {""hive_table"", 10},"
14040,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/DSLQueriesTest.java,212,,"        AtlasSearchResult searchResult2 = discoveryService.searchUsingDslQuery(query.replace(""where"", "" ""), DEFAULT_LIMIT, 0);"
14041,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/DSLQueriesTest.java,220,,"                {""hive_table hasTerm modernTrade"", 2, new ListValidator(""logging_fact_monthly_mv"", ""time_dim"")},"
14042,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/DSLQueriesTest.java,220,,"                {""hive_table hasTerm modernTrade"", 2, new ListValidator(""logging_fact_monthly_mv"", ""time_dim"")},"
14043,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/DSLQueriesTest.java,225,,"                {""hive_table hasTerm \""modernTrade@salesGlossary\"" or hive_table hasTerm \""ecommerce@salesGlossary\"""", 3, new ListValidator(""logging_fact_monthly_mv"", ""time_dim"", ""product_dim"")},"
14044,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/DSLQueriesTest.java,227,,"                {""hive_table hasTerm \""modernTrade@salesGlossary\"" and db.name = \""Sales\"" or (hive_table.name = \""sales_fact_monthly_mv\"")"", 2, new ListValidator(""sales_fact_monthly_mv"", ""time_dim"")},"
14045,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/DSLQueriesTest.java,237,,"                {""hive_table isA Dimension"", 5, new ListValidator(""product_dim"", ""time_dim"", ""customer_dim"", ""sales_fact_monthly_mv"", ""sales_fact_daily_mv"")},"
14046,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/DSLQueriesTest.java,237,,"                {""hive_table isA Dimension"", 5, new ListValidator(""product_dim"", ""time_dim"", ""customer_dim"", ""sales_fact_monthly_mv"", ""sales_fact_daily_mv"")},"
14047,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/DSLQueriesTest.java,472,,"                {""from hive_db as h orderby h.owner limit 3"", 3, ""owner"", true},"
14048,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/DSLQueriesTest.java,473,,"                {""hive_column as c select c.qualifiedName orderby hive_column.qualifiedName "", 17, ""qualifiedName"", true},"
14049,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/DSLQueriesTest.java,491,,"                {""hive_db where hive_db.name=\""Reporting\"" select name, owner orderby hive_db.name "", 1, ""name"", true},"
14050,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/DSLQueriesTest.java,528,,"                {""hive_table where (name = \""sales_fact\"" and createTime > \""2014-01-01\"" ) select name as _col_0, createTime as _col_1 orderby createTime "", 1, ""createTime"", true},"
14051,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/DSLQueriesTest.java,580,,"                {""hive_db where qualifiedName like \""qualified:R*\"""", 1, new ListValidator(""Reporting"")},"
14052,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/DSLQueriesTest.java,581,,"                {""hive_table db.name=\""Sales\"""", 4, new ListValidator(""customer_dim"", ""sales_fact"", ""time_dim"", ""product_dim"")},"
14053,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/DSLQueriesTest.java,586,,"                {""hive_db where hive_db.name like \""R???rt?*\"" or hive_db.name like \""S?l?s\"" or hive_db.name like\""Log*\"""", 3, new ListValidator(""Reporting"", ""Sales"", ""Logging"") },"
14054,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/DSLQueriesTest.java,586,,"                {""hive_db where hive_db.name like \""R???rt?*\"" or hive_db.name like \""S?l?s\"" or hive_db.name like\""Log*\"""", 3, new ListValidator(""Reporting"", ""Sales"", ""Logging"") },"
14055,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/DSLQueriesTest.java,620,,"                        new TableValidator(""count()"")"
14056,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/DSLQueriesTest.java,626,,"                                .row(""Jane BI"", ""Reporting"")"
14057,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/DSLQueriesTest.java,627,,"                                .row(""John ETL"", ""Sales"")"
14058,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/DSLQueriesTest.java,628,,"                                .row(""Tim ETL"", ""Logging"")},"
14059,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/DSLQueriesTest.java,630,,"                        new TableValidator(""Asset.owner"", ""Asset.name"", ""count()"")"
14060,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/GremlinQueryComposerTest.java,102,,"                ""it.property('DB.name').isPresent() ? it.value('DB.name') : \""\"","" +"
14061,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/GremlinQueryComposerTest.java,144,,"                        ""it.property('Table.name').isPresent() ? it.value('Table.name') : \""\"","" +"
14062,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/GremlinQueryComposerTest.java,284,,"                        ""g.V().has('__typeName', 'Table')"" +"
14063,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/GremlinQueryComposerTest.java,286,,"                                ""__.has('Table.name', eq(\""sales_fact\"")),"" +"
14064,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/GremlinQueryComposerTest.java,292,,"                                "".and("" +"
14065,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/GremlinQueryComposerTest.java,305,,"                                "".dedup().limit(25).toList()""},"
14066,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/GremlinQueryComposerTest.java,509,,"                when(((AtlasEntityType) type).getAttribute(eq(""name""))).thenReturn(attr_s);"
14067,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/GremlinQueryComposerTest.java,542,,"                    attributeName.equals(""owner"") ||"
14068,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/GremlinQueryComposerTest.java,543,,"                    attributeName.equals(""createTime"") ||"
14069,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/GremlinQueryComposerTest.java,556,,"            if (attributeName.equalsIgnoreCase(""meanings""))"
14070,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/GremlinQueryComposerTest.java,580,,"            return (context.getActiveTypeName().equals(""Table"") && attributeName.equals(""db"")) ||"
14071,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/query/GremlinQueryComposerTest.java,597,,"                    (context.getActiveTypeName().equals(""Asset"") && attributeName.equals(""name"")) ||"
14072,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/audit/AuditRepositoryTestBase.java,70,,"            EntityAuditEvent event = new EntityAuditEvent(id2, ts - i, ""user"" + i, EntityAuditEvent.EntityAuditAction.ENTITY_UPDATE, ""details"" + i, entity);"
14073,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/audit/AuditRepositoryTestBase.java,70,,"            EntityAuditEvent event = new EntityAuditEvent(id2, ts - i, ""user"" + i, EntityAuditEvent.EntityAuditAction.ENTITY_UPDATE, ""details"" + i, entity);"
14074,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/impexp/AtlasImportRequestTest.java,115,,"        assertTrue(tr.getTransforms().containsKey(""hive_db""));"
14075,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/impexp/AtlasImportRequestTest.java,117,,"        assertTrue(tr.getTransforms(""hive_db"").containsKey(""qualifiedName""));"
14076,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/impexp/AtlasImportRequestTest.java,140,,"        assertTrue(tr.getTransforms().containsKey(""hive_table""));"
14077,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/impexp/ExportServiceTest.java,130,,"        itemsToExport.add(new AtlasObjectId(""Department"", ""name"", ""hr""));"
14078,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/impexp/ImportServiceTest.java,187,,"    @DataProvider(name = ""salesNewTypeAttrs-next"")"
14079,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/impexp/ImportServiceTest.java,254,,"        List<AtlasEntityHeader> result = getImportedEntities(""hive_db"", ""886c5e9c-3ac6-40be-8201-fb0cebb64783"");"
14080,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/impexp/ImportServiceTest.java,275,,"        assertEntityCount(""hive_table"", ""dbe729bb-c614-4e23-b845-3258efdf7a58"", 1);"
14081,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/impexp/ImportServiceTest.java,399,,"        assertEntityCount(""hive_column"", ""13422f0c-9265-4960-91a9-290ffd83b7f1"",1);"
14082,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/impexp/ImportServiceTest.java,505,,"        exportRequest = getExportRequest(FETCH_TYPE_INCREMENTAL, ""cl2"", true, getItemsToExport(""hive_table"", ""hive_table""));"
14083,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/impexp/ImportTransformerTest.java,30,,"        String param1 = ""@cl1"";"
14084,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/impexp/ImportTransformerTest.java,31,,"        String param2 = ""@cl2"";"
14085,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/impexp/ImportTransformerTest.java,33,,"        ImportTransformer e = ImportTransformer.getTransformer(String.format(""%s:%s:%s"", ""replace"", param1, param2));"
14086,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/impexp/ImportTransformerTest.java,75,,"        assertEquals(e.apply(""@CL1""), ""@cl1"");"
14087,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/impexp/ImportTransformerTest.java,98,,"        assertEquals(e.apply(""default@cl1""), ""default@cl2"");"
14088,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/impexp/ImportTransformerTest.java,99,,"        assertEquals(e.apply(""@cl11""), ""@cl21"");"
14089,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/impexp/ImportTransformsTest.java,125,,"        String s = String.format(jsonReplaceRemoveClassification, ""cl1"", ""cl2"", ""cl2"", ""cl1"");"
14090,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/impexp/ImportTransformsTest.java,227,,"        ImportTransformer.AddClassification classification = (ImportTransformer.AddClassification) t.getTransforms().get(""hive_column"").get(""*"").get(0);"
14091,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/impexp/RelationshipAttributesExtractorTest.java,136,,"    @Test(dependsOnMethods = ""importHiveDb"")"
14092,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/impexp/TypeAttributeDifferenceTest.java,121,,"        AtlasEntityDef existing = getAtlasEntityDefWithAttributes(""name"", ""qualifiedName"");"
14093,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/impexp/TypeAttributeDifferenceTest.java,121,,"        AtlasEntityDef existing = getAtlasEntityDefWithAttributes(""name"", ""qualifiedName"");"
14094,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/impexp/TypeAttributeDifferenceTest.java,152,,"        AtlasEnumDef existing = getAtlasEnumWithAttributes(""Alpha"", ""Bravo"");"
14095,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/impexp/TypeAttributeDifferenceTest.java,152,,"        AtlasEnumDef existing = getAtlasEnumWithAttributes(""Alpha"", ""Bravo"");"
14096,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/impexp/TypeAttributeDifferenceTest.java,153,,"        AtlasEnumDef incoming = getAtlasEnumWithAttributes(""Alpha"", ""Bravo"", ""Delta"", ""Echo"");"
14097,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/impexp/TypeAttributeDifferenceTest.java,153,,"        AtlasEnumDef incoming = getAtlasEnumWithAttributes(""Alpha"", ""Bravo"", ""Delta"", ""Echo"");"
14098,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/impexp/ZipFileResourceTestUtils.java,89,,"        final String requestingIP = ""1.0.0.0"";"
14099,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/impexp/ZipFileResourceTestUtils.java,90,,"        final String hostName = ""localhost"";"
14100,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/impexp/ZipFileResourceTestUtils.java,91,,"        final String userName = ""admin"";"
14101,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/impexp/ZipSourceTest.java,41,,"    @DataProvider(name = ""zipFileStocks"")"
14102,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/migration/HiveStocksTest.java,51,,"        assertTypeCountNameGuid(""hive_column"", 1, ""high"", ""d72ce4fb-6f17-4e68-aa85-967366c9e891"");"
14103,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/migration/TypesWithCollectionsFinderTest.java,61,,"        assertProperties(typeAttrMap, ""__AtlasUserProfile"", ""ARRAY"", ""__AtlasUserProfile.savedSearches"");"
14104,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/migration/TypesWithCollectionsFinderTest.java,66,,"        assertProperties(typeAttrMap, ""hdfs_path"", ""MAP_PRIMITIVE"", ""hdfs_path.extendedAttributes"");"
14105,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/AtlasTypeDefGraphStoreTest.java,99,,"    @Test(dataProvider = ""invalidGetProvider"", dependsOnMethods = ""testGet"")"
14106,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/AtlasTypeDefGraphStoreTest.java,103,,"            fail(""Exception expected for invalid name"");"
14107,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/AtlasTypeDefGraphStoreTest.java,109,,"            fail(""Exception expected for invalid guid"");"
14108,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/AtlasTypeDefGraphStoreTest.java,359,,"            assertEquals(hiveTypes.getEnumDefs(), createdTypes.getEnumDefs(), ""Data integrity issue while persisting"");"
14109,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/AtlasTypeDefGraphStoreTest.java,666,,"      assertEquals(""test_classification_11"", createdTypesDef.getClassificationDefs().get(0).getName());"
14110,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasBusinessMetadataDefStoreV2Test.java,99,,"        AtlasEntityType entityType = typeRegistry.getEntityTypeByName(""hive_table"");"
14111,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasBusinessMetadataDefStoreV2Test.java,120,,"        AtlasBusinessMetadataDef businessMetadataDef = new AtlasBusinessMetadataDef(businessMetadataName, ""test_description"", null);"
14112,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasBusinessMetadataDefStoreV2Test.java,145,,"        addBusinessAttribute(businessMetadataDef, ""test_business_attribute1"", new HashSet<>(Arrays.asList(""hive_table"", ""fs_path"")), ""int"","
14113,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasBusinessMetadataDefStoreV2Test.java,145,,"        addBusinessAttribute(businessMetadataDef, ""test_business_attribute1"", new HashSet<>(Arrays.asList(""hive_table"", ""fs_path"")), ""int"","
14114,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasComplexAttributesTest.java,214,,"        createdSimpleEntity.setAttribute(""stringAtrr"", null);"
14115,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasComplexAttributesTest.java,215,,"        createdSimpleEntity.setAttribute(""mapOfStrings"", Collections.emptyMap());"
14116,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasComplexAttributesTest.java,216,,"        createdSimpleEntity.setAttribute(""arrayOfStrings"", Collections.emptyList());"
14117,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasComplexAttributesTest.java,217,,"        createdSimpleEntity.setAttribute(""puArray"", Collections.emptyList());"
14118,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasComplexAttributesTest.java,218,,"        createdSimpleEntity.setAttribute(""puMap"", Collections.emptyMap());"
14119,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasComplexAttributesTest.java,244,,"        updatedAgainSimpleEntity.setAttribute(""stringAtrr"", ""Dummy String Test 3"");"
14120,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasComplexAttributesTest.java,245,,"        updatedAgainSimpleEntity.setAttribute(""mapOfStrings"", Collections.singletonMap(""key1"", ""val1""));"
14121,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasComplexAttributesTest.java,245,,"        updatedAgainSimpleEntity.setAttribute(""mapOfStrings"", Collections.singletonMap(""key1"", ""val1""));"
14122,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasComplexAttributesTest.java,246,,"        updatedAgainSimpleEntity.setAttribute(""arrayOfStrings"", Arrays.asList(""DummyTest3"", ""DummyTest4""));"
14123,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasComplexAttributesTest.java,246,,"        updatedAgainSimpleEntity.setAttribute(""arrayOfStrings"", Arrays.asList(""DummyTest3"", ""DummyTest4""));"
14124,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasComplexAttributesTest.java,353,,"        List<AtlasStruct> structList = new ArrayList<>(Arrays.asList(new AtlasStruct(""struct_type"", ""name"", ""structArray00""),"
14125,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasComplexAttributesTest.java,353,,"        List<AtlasStruct> structList = new ArrayList<>(Arrays.asList(new AtlasStruct(""struct_type"", ""name"", ""structArray00""),"
14126,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasComplexAttributesTest.java,356,,"        complexEntity.setAttribute(""listOfStructs"", structList);"
14127,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasComplexAttributesTest.java,411,,"        AtlasEntity e0Array = new AtlasEntity(ENTITY_TYPE, new HashMap<String, Object>() {{ put(NAME, ""entityArray00""); put(""isReplicated"", true); }});"
14128,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasComplexAttributesTest.java,417,,"        complexEntity.setAttribute(""listOfEntities"", entityList);"
14129,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasComplexAttributesTest.java,496,,"                                                        put(""key00"", new AtlasStruct(""struct_type"", ""name"", ""structMap00""));"
14130,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasComplexAttributesTest.java,497,,"                                                        put(""key11"", new AtlasStruct(""struct_type"", ""name"", ""structMap11""));"
14131,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasComplexAttributesTest.java,500,,"        complexEntity.setAttribute(""mapOfStructs"", structMap);"
14132,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasComplexAttributesTest.java,508,,"        structMap.put(""key33"", new AtlasStruct(""struct_type"", ""name"", ""structMap33""));"
14133,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasComplexAttributesTest.java,565,,"        complexEntity.setAttribute(""mapOfEntities"", entityMap);"
14134,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasEntityComparatorTest.java,65,,"        dbEntity.setAttribute(""namespace"", ""db namespace"");"
14135,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasEntityComparatorTest.java,65,,"        dbEntity.setAttribute(""namespace"", ""db namespace"");"
14136,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasEntityComparatorTest.java,66,,"        dbEntity.setAttribute(""cluster"", ""Fenton_Cluster"");"
14137,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasEntityComparatorTest.java,66,,"        dbEntity.setAttribute(""cluster"", ""Fenton_Cluster"");"
14138,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasEntityComparatorTest.java,74,,"        tableEntity.setCustomAttributes(new HashMap<String, String> (){{ put(""foo"",""bar"");}});"
14139,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasEntityComparatorTest.java,167,,"        b1.setAttribute(NAME, ""b_name"");"
14140,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasEntityStoreV2Test.java,148,,"        String  description   = (String) attributesMap.get(""description"");"
14141,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasEntityStoreV2Test.java,198,,"        AtlasObjectId dbObjectId = (AtlasObjectId) tblEntity.getEntity().getAttribute(""database"");"
14142,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasEntityStoreV2Test.java,219,,"    @Test(dependsOnMethods = ""testCreate"")"
14143,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasEntityStoreV2Test.java,226,,"        col1.setAttribute(NAME, ""col1"");"
14144,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasEntityStoreV2Test.java,298,,"        partsMap.put(""part0"", new AtlasStruct(TestUtilsV2.PARTITION_STRUCT_TYPE, NAME, ""test""));"
14145,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasEntityStoreV2Test.java,300,,"        tableEntity.setAttribute(""partitionsMap"", partsMap);"
14146,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasEntityStoreV2Test.java,312,,"        partsMap.put(""part1"", new AtlasStruct(TestUtilsV2.PARTITION_STRUCT_TYPE, NAME, ""test1""));"
14147,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasEntityStoreV2Test.java,327,,"        partsMap.put(""part2"", new AtlasStruct(TestUtilsV2.PARTITION_STRUCT_TYPE, NAME, ""test2""));"
14148,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasEntityStoreV2Test.java,359,,"        col0.setAttribute(""type"", ""string"");"
14149,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasEntityStoreV2Test.java,359,,"        col0.setAttribute(""type"", ""string"");"
14150,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasEntityStoreV2Test.java,442,,"        paramsMap.remove(""key1"");"
14151,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasEntityStoreV2Test.java,461,,"        tableEntity.setAttribute(""partitions"", partitions);"
14152,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasEntityStoreV2Test.java,579,,"        final String isReplicatedAttr = ""isReplicated"";"
14153,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasEntityStoreV2Test.java,588,,"        final HashMap<String, String> params = new HashMap<String, String>() {{ put(""param1"", ""val1""); put(""param2"", ""val2""); }};"
14154,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasEntityStoreV2Test.java,588,,"        final HashMap<String, String> params = new HashMap<String, String>() {{ put(""param1"", ""val1""); put(""param2"", ""val2""); }};"
14155,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasEntityStoreV2Test.java,677,,"        dbEntity.setAttribute(""name"", TestUtilsV2.randomString(10));"
14156,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasEntityStoreV2Test.java,681,,"        dbEntity.setAttribute(""namespace"", ""db namespace"");"
14157,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasEntityStoreV2Test.java,682,,"        dbEntity.setAttribute(""cluster"", ""Fenton_Cluster"");"
14158,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasEntityStoreV2Test.java,1056,,"        customAttributes.put(""key2"", ""val2"");"
14159,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasEntityStoreV2Test.java,1302,,"        bmAttrMapReq.put(""attr8"", ""01234567890123456789"");"
14160,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasEntityStoreV2Test.java,1303,,"        bmMapReq.put(""bmWithAllTypes"", bmAttrMapReq);"
14161,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasEntityStoreV2Test.java,1325,,"    @Test(dependsOnMethods = ""testAddBusinessAttributesStringMaxLengthCheck"")"
14162,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasEntityStoreV2Test.java,1329,,"        bmAttrMapReq.put(""attr8"", ""0123456789"");"
14163,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasRelationshipDefStoreV2Test.java,54,,"            AtlasTypeUtil.createRelationshipTypeDef(""Invalid_Attribute_Type"", ""description"","""" ,"
14164,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasRelationshipDefStoreV2Test.java,57,,"                    new AtlasRelationshipEndDef(""typeA"", ""attr1"", AtlasStructDef.AtlasAttributeDef.Cardinality.SINGLE),"
14165,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasRelationshipDefStoreV2Test.java,60,,"                    AtlasTypeUtil.createRequiredAttrDef(""order"", ""string""),"
14166,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasRelationshipDefStoreV2Test.java,70,,"                AtlasTypeUtil.createRelationshipTypeDef(""basicType"", ""description"",""0"" ,"
14167,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasRelationshipDefStoreV2Test.java,73,,"                        new AtlasRelationshipEndDef(""typeC"", ""attr1"", AtlasStructDef.AtlasAttributeDef.Cardinality.SINGLE),"
14168,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasRelationshipDefStoreV2Test.java,74,,"                        new AtlasRelationshipEndDef(""typeD"", ""attr1"", AtlasStructDef.AtlasAttributeDef.Cardinality.SINGLE),"
14169,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasRelationshipDefStoreV2Test.java,76,,"                        AtlasTypeUtil.createRequiredAttrDef(""aaaa"", ""string""),"
14170,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasRelationshipDefStoreV2Test.java,77,,"                        AtlasTypeUtil.createRequiredAttrDef(""bbbb"", ""string""));"
14171,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasRelationshipDefStoreV2Test.java,284,,"            fail(""expected error"");"
14172,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasRelationshipDefStoreV2Test.java,287,,"                fail(""unexpected AtlasErrorCode ""+e.getAtlasErrorCode());"
14173,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasRelationshipStoreHardDeleteV2Test.java,70,,"        List<AtlasObjectId> maxFriendsIds = toAtlasObjectIds(max.getRelationshipAttribute(""friends""));"
14174,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasRelationshipStoreSoftDeleteV2Test.java,71,,"        List<AtlasObjectId> maxFriendsIds = toAtlasObjectIds(max.getRelationshipAttribute(""friends""));"
14175,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasRelationshipStoreV2Test.java,151,,"        AtlasObjectId maxId    = employeeNameIdMap.get(""Max"");"
14176,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasRelationshipStoreV2Test.java,175,,"        AtlasObjectId maxDepartmentId = toAtlasObjectId(max.getRelationshipAttribute(""department""));"
14177,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasRelationshipStoreV2Test.java,179,,"        AtlasObjectId maxManagerId = toAtlasObjectId(max.getRelationshipAttribute(""manager""));"
14178,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasRelationshipStoreV2Test.java,183,,"        List<AtlasObjectId> maxMentorsId = toAtlasObjectIds(max.getRelationshipAttribute(""mentors""));"
14179,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasRelationshipStoreV2Test.java,188,,"        List<AtlasObjectId> maxMenteesId = toAtlasObjectIds(max.getRelationshipAttribute(""mentees""));"
14180,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/AtlasRelationshipStoreV2Test.java,193,,"        List<AtlasObjectId> maxFriendsIds = toAtlasObjectIds(max.getRelationshipAttribute(""friends""));"
14181,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/ClassificationAssociatorTest.java,136,,"        AtlasEntityHeaders entityHeaderMap = getEntityHeaderMapFromFile(""header-PII"");"
14182,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/ClassificationAssociatorTest.java,182,,"        ClassificationAssociatorUpdaterForSpy updater = new ClassificationAssociatorUpdaterForSpy(atlasGraph, ttr, entitiesStore, ""col-entity-PII"");"
14183,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/store/graph/v2/ClassificationAssociatorTest.java,194,,"        updaterAssert(""header-PII"", ""col-entity-None"", PROCESS_ADD + "":PII"");"
14184,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/tagpropagation/ClassificationPropagationTest.java,160,,"        AtlasClassification tag2           = new AtlasClassification(""tag2""); tag2.setPropagate(false); tag2.setEntityGuid(hdfs_employees.getGuid());"
14185,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/tagpropagation/ClassificationPropagationTest.java,192,,"        AtlasClassification tag1           = new AtlasClassification(""tag1""); tag1.setPropagate(true); tag1.setEntityGuid(hdfs_employees.getGuid());"
14186,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/tagpropagation/ClassificationPropagationTest.java,346,,"        AtlasClassification PII_tag1 = new AtlasClassification(""PII""); PII_tag1.setPropagate(true);"
14187,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/tagpropagation/ClassificationPropagationTest.java,347,,"            PII_tag1.setAttribute(""type"", ""from hdfs_path entity"");"
14188,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/repository/tagpropagation/ClassificationPropagationTest.java,348,,"            PII_tag1.setAttribute(""valid"", true);"
14189,./TargetProjects/atlas/repository/src/test/java/org/apache/atlas/utils/TestResourceFileUtils.java,36,,"        final String userDir = System.getProperty(""user.dir"");"
14190,./TargetProjects/atlas/server-api/src/main/test/org/apache/atlas/ha/AtlasServerIdSelectorTest.java,45,,"        when(configuration.getStringArray(HAConfiguration.ATLAS_SERVER_IDS)).thenReturn(new String[] {""id1"", ""id2""});"
14191,./TargetProjects/atlas/server-api/src/main/test/org/apache/atlas/ha/AtlasServerIdSelectorTest.java,45,,"        when(configuration.getStringArray(HAConfiguration.ATLAS_SERVER_IDS)).thenReturn(new String[] {""id1"", ""id2""});"
14192,./TargetProjects/atlas/tools/classification-updater/src/main/java/org/apache/atlas/tools/BulkFetchAndUpdate.java,530,,"                LOG.error(""{} skipped!"", name, e);"
14193,./TargetProjects/atlas/tools/classification-updater/src/main/java/org/apache/atlas/tools/BulkFetchAndUpdate.java,531,,"                displayCrLf("" [Skipped]"", name);"
14194,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/LocalServletRequest.java,57,,"        throw new IllegalStateException(""Not supported"");"
14195,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStart.java,127,,"            {DATABASE_TYPE, TABLE_TYPE, STORAGE_DESC_TYPE, COLUMN_TYPE, LOAD_PROCESS_TYPE, VIEW_TYPE, ""JdbcAccess_v1"","
14196,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStart.java,128,,"                    ""ETL_v1"", ""Metric_v1"", ""PII_v1"", ""Fact_v1"", ""Dimension_v1"", ""Log Data_v1""};"
14197,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStart.java,128,,"                    ""ETL_v1"", ""Metric_v1"", ""PII_v1"", ""Fact_v1"", ""Dimension_v1"", ""Log Data_v1""};"
14198,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStart.java,128,,"                    ""ETL_v1"", ""Metric_v1"", ""PII_v1"", ""Fact_v1"", ""Dimension_v1"", ""Log Data_v1""};"
14199,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStart.java,128,,"                    ""ETL_v1"", ""Metric_v1"", ""PII_v1"", ""Fact_v1"", ""Dimension_v1"", ""Log Data_v1""};"
14200,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStart.java,128,,"                    ""ETL_v1"", ""Metric_v1"", ""PII_v1"", ""Fact_v1"", ""Dimension_v1"", ""Log Data_v1""};"
14201,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStart.java,155,,"                        TypesUtil.createUniqueRequiredAttrDef(""name"", AtlasBaseTypeDef.ATLAS_TYPE_STRING),"
14202,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStart.java,156,,"                        attrDef(""description"", AtlasBaseTypeDef.ATLAS_TYPE_STRING), attrDef(""locationUri"", AtlasBaseTypeDef.ATLAS_TYPE_STRING),"
14203,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStart.java,157,,"                        attrDef(""owner"", AtlasBaseTypeDef.ATLAS_TYPE_STRING), attrDef(""createTime"", AtlasBaseTypeDef.ATLAS_TYPE_LONG));"
14204,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStart.java,237,,"        List<Referenceable> salesFactColumns = Arrays.asList(rawColumn(TIME_ID_COLUMN, ""int"", ""time id""), rawColumn(""product_id"", ""int"", ""product id""),"
14205,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStart.java,242,,"                        rawColumn(""machine_id"", ""int"", ""machine id""), rawColumn(""log"", ""string"", ""log data"", ""Log Data_v1""));"
14206,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStart.java,244,,"        Id salesFact = table(SALES_FACT_TABLE, SALES_FACT_TABLE_DESCRIPTION, salesDB, sd, ""Joe"", ""Managed"","
14207,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStart.java,273,,"        Id logDB = database(""Logging"", ""logging database"", ""Tim ETL"", ""hdfs://host:8000/apps/warehouse/logging"");"
14208,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStartV2.java,100,,"    public static final String NAME_COLUMN                 = ""name"";"
14209,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStartV2.java,233,,"        AtlasEntityDef dbTypeDef      = createClassTypeDef(DATABASE_TYPE, DATABASE_TYPE, VERSION_1, Collections.singleton(""DataSet""),"
14210,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStartV2.java,234,,"                                                            createOptionalAttrDef(""locationUri"", ""string""),"
14211,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStartV2.java,235,,"                                                            createOptionalAttrDef(""createTime"", ""long""));"
14212,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStartV2.java,235,,"                                                            createOptionalAttrDef(""createTime"", ""long""));"
14213,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStartV2.java,260,,"                                                            createOptionalAttrDef(""startTime"", ""long""),"
14214,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStartV2.java,261,,"                                                            createOptionalAttrDef(""endTime"", ""long""),"
14215,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStartV2.java,262,,"                                                            createRequiredAttrDef(""queryText"", ""string""),"
14216,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStartV2.java,263,,"                                                            createRequiredAttrDef(""queryPlan"", ""string""),"
14217,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStartV2.java,264,,"                                                            createRequiredAttrDef(""queryId"", ""string""),"
14218,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStartV2.java,265,,"                                                            createRequiredAttrDef(""queryGraph"", ""string""));"
14219,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStartV2.java,295,,"                                                                                    createRelationshipEndDef(COLUMN_TYPE, ""table"", SINGLE, false));"
14220,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStartV2.java,319,,"        AtlasAttributeDef bmAttrDef1 = new AtlasAttributeDef(""attr1"", ""int"");"
14221,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStartV2.java,343,,"        AtlasEntity salesDB     = createDatabase(SALES_DB, ""sales database"", ""John ETL"", ""hdfs://host:8000/apps/warehouse/sales"");"
14222,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStartV2.java,345,,"        AtlasEntity logDB       = createDatabase(LOGGING_DB, ""logging database"", ""Tim ETL"", ""hdfs://host:8000/apps/warehouse/logging"");"
14223,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStartV2.java,349,,"                                                        Arrays.asList(createColumn(SALES_DB, SALES_FACT_TABLE, TIME_ID_COLUMN, ""int"", ""time id""),"
14224,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStartV2.java,350,,"                                                                      createColumn(SALES_DB, SALES_FACT_TABLE, PRODUCT_ID_COLUMN, ""int"", ""product id""),"
14225,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStartV2.java,351,,"                                                                      createColumn(SALES_DB, SALES_FACT_TABLE, CUSTOMER_ID_COLUMN, ""int"", ""customer id"", PII_CLASSIFICATION),"
14226,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStartV2.java,409,,"                      ""create table as select "", ""plan"", ""id"", ""graph"", ETL_CLASSIFICATION);"
14227,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStartV2.java,409,,"                      ""create table as select "", ""plan"", ""id"", ""graph"", ETL_CLASSIFICATION);"
14228,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStartV2.java,409,,"                      ""create table as select "", ""plan"", ""id"", ""graph"", ETL_CLASSIFICATION);"
14229,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStartV2.java,464,,"        entity.setAttribute(""description"", description);"
14230,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/examples/QuickStartV2.java,698,,"                        System.out.println(""query ["" + dslQuery + ""] returned ["" + entitiesResult.size() + ""] rows."");"
14231,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/notification/NotificationHookConsumer.java,244,,"                    LOG.info(""{}={}"", CONSUMER_PREPROCESS_HIVE_TABLE_IGNORE_PATTERN, pattern);"
14232,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/filters/AtlasAuthenticationFilter.java,522,,"                            if (headerName.equalsIgnoreCase(""Set-Cookie"") && value.startsWith(""ATLASSESSIONID"")) {"
14233,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/resources/EntityResource.java,180,,"            LOG.error(""Unable to persist entity instance entityDef={}"", entityJson, e);"
14234,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/resources/EntityResource.java,293,,"                LOG.debug(""Updated entities: {}"", result.getEntityResult());"
14235,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/resources/EntityResource.java,353,,"                                            @QueryParam(""property"") String attribute,"
14236,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/resources/EntityResource.java,374,,"            entityType = ParamChecker.notEmpty(entityType, ""Entity type cannot be null"");"
14237,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/resources/EntityResource.java,401,,"            LOG.error(""Unable to partially update entity {} {}:{}.{}"", entityJson, entityType, attribute, value, e);"
14238,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/resources/EntityResource.java,434,,"    public Response updateEntityByGuid(@PathParam(""guid"") String guid, @QueryParam(""property"") String attribute,"
14239,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/resources/EntityResource.java,535,,"            LOG.error(""Unable to add property {} to entity id {} {} "", property, guid, value, e);"
14240,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/resources/EntityResource.java,605,,"            LOG.error(""Unable to delete entities {} {} {} {} "", guids, entityType, attribute, value, e);"
14241,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/resources/EntityResource.java,713,,"            LOG.error(""Unable to get entity list for type {}"", entityType, e);"
14242,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/resources/EntityResource.java,864,,"            LOG.error(""Unable to get trait definition for entity {}"", guid, e);"
14243,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/resources/EntityResource.java,977,,"            LOG.error(""Unable to get trait definition for entity {} and trait {}"", guid, traitName, e);"
14244,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/resources/EntityResource.java,1039,,"            LOG.error(""Unable to add trait for entity={} traitDef={}"", guid, traitDefinition, e);"
14245,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/resources/EntityResource.java,1094,,"            LOG.error(""Unable to delete trait name={} for entity={}"", traitName, guid, e);"
14246,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/resources/MetadataDiscoveryResource.java,101,,"                           @DefaultValue(LIMIT_OFFSET_DEFAULT) @QueryParam(""limit"") int limit,"
14247,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/resources/MetadataDiscoveryResource.java,102,,"                           @DefaultValue(LIMIT_OFFSET_DEFAULT) @QueryParam(""offset"") int offset) {"
14248,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/resources/TypesResource.java,130,,"            LOG.error(""Unable to persist types"", e);"
14249,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/resources/TypesResource.java,241,,"            LOG.error(""Unable to get type definition for type {}"", typeName, e);"
14250,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/rest/DiscoveryREST.java,105,,"    public AtlasSearchResult searchUsingDSL(@QueryParam(""query"")          String query,"
14251,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/rest/DiscoveryREST.java,106,,"                                            @QueryParam(""typeName"")       String typeName,"
14252,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/rest/DiscoveryREST.java,107,,"                                            @QueryParam(""classification"") String classification,"
14253,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/rest/DiscoveryREST.java,108,,"                                            @QueryParam(""limit"")          int    limit,"
14254,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/rest/DiscoveryREST.java,109,,"                                            @QueryParam(""offset"")         int    offset) throws AtlasBaseException {"
14255,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/rest/DiscoveryREST.java,154,,"                                                 @QueryParam(""excludeDeletedEntities"") boolean excludeDeletedEntities,"
14256,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/rest/DiscoveryREST.java,196,,"                                              @QueryParam(""sortBy"")                 String    sortByAttribute,"
14257,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/rest/DiscoveryREST.java,376,,"    public AtlasSearchResult searchRelatedEntities(@QueryParam(""guid"")                            String      guid,"
14258,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/rest/DiscoveryREST.java,473,,"    public AtlasUserSavedSearch getSavedSearch(@PathParam(""name"") String searchName,"
14259,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/rest/DiscoveryREST.java,474,,"                                               @QueryParam(""user"") String userName) throws AtlasBaseException {"
14260,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/rest/EntityREST.java,129,,"    public AtlasEntityWithExtInfo getById(@PathParam(""guid"") String guid, @QueryParam(""minExtInfo"") @DefaultValue(""false"") boolean minExtInfo, @QueryParam(""ignoreRelationships"") @DefaultValue(""false"") boolean ignoreRelationships) throws AtlasBaseException {"
14261,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/rest/EntityREST.java,129,,"    public AtlasEntityWithExtInfo getById(@PathParam(""guid"") String guid, @QueryParam(""minExtInfo"") @DefaultValue(""false"") boolean minExtInfo, @QueryParam(""ignoreRelationships"") @DefaultValue(""false"") boolean ignoreRelationships) throws AtlasBaseException {"
14262,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/rest/EntityREST.java,129,,"    public AtlasEntityWithExtInfo getById(@PathParam(""guid"") String guid, @QueryParam(""minExtInfo"") @DefaultValue(""false"") boolean minExtInfo, @QueryParam(""ignoreRelationships"") @DefaultValue(""false"") boolean ignoreRelationships) throws AtlasBaseException {"
14263,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/rest/EntityREST.java,129,,"    public AtlasEntityWithExtInfo getById(@PathParam(""guid"") String guid, @QueryParam(""minExtInfo"") @DefaultValue(""false"") boolean minExtInfo, @QueryParam(""ignoreRelationships"") @DefaultValue(""false"") boolean ignoreRelationships) throws AtlasBaseException {"
14264,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/rest/EntityREST.java,190,,"    public AtlasEntityHeader getEntityHeaderByUniqueAttributes(@PathParam(""typeName"") String typeName,"
14265,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/rest/EntityREST.java,425,,"    public AtlasClassification getClassification(@PathParam(""guid"") String guid, @PathParam(""classificationName"") final String classificationName) throws AtlasBaseException {"
14266,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/rest/GlossaryREST.java,90,,"    public List<AtlasGlossary> getGlossaries(@DefaultValue(""-1"") @QueryParam(""limit"") final String limit,"
14267,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/rest/GlossaryREST.java,91,,"                                             @DefaultValue(""0"") @QueryParam(""offset"") final String offset,"
14268,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/rest/GlossaryREST.java,92,,"                                             @DefaultValue(""ASC"") @QueryParam(""sort"") final String sort) throws AtlasBaseException {"
14269,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/rest/GlossaryREST.java,92,,"                                             @DefaultValue(""ASC"") @QueryParam(""sort"") final String sort) throws AtlasBaseException {"
14270,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/rest/GlossaryREST.java,118,,"    public AtlasGlossary getGlossary(@PathParam(""glossaryGuid"") String glossaryGuid) throws AtlasBaseException {"
14271,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/rest/GlossaryREST.java,182,,"    public AtlasGlossaryTerm getGlossaryTerm(@PathParam(""termGuid"") String termGuid) throws AtlasBaseException {"
14272,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/rest/GlossaryREST.java,213,,"    public AtlasGlossaryCategory getGlossaryCategory(@PathParam(""categoryGuid"") String categoryGuid) throws AtlasBaseException {"
14273,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/rest/GlossaryREST.java,845,,"    @Path(""/terms/{termGuid}/assignedEntities"")"
14274,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/rest/RelationshipREST.java,100,,"    public AtlasRelationshipWithExtInfo getById(@PathParam(""guid"") String guid,"
14275,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/rest/TypesREST.java,86,,"    public AtlasBaseTypeDef getTypeDefByName(@PathParam(""name"") String name) throws AtlasBaseException {"
14276,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/rest/TypesREST.java,104,,"    public AtlasBaseTypeDef getTypeDefByGuid(@PathParam(""guid"") String guid) throws AtlasBaseException {"
14277,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/rest/TypesREST.java,137,,"    @Path(""/typedefs"")"
14278,./TargetProjects/atlas/webapp/src/main/java/org/apache/atlas/web/security/AtlasSecurityConfig.java,98,,"    public static final RequestMatcher KEYCLOAK_REQUEST_MATCHER = new OrRequestMatcher(new RequestMatcher[]{new AntPathRequestMatcher(""/login.jsp""), new RequestHeaderRequestMatcher(""Authorization""), new QueryParamPresenceRequestMatcher(""access_token"")});"
14279,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/AtlasIT.java,40,,"    Assert.assertEquals(22443, port, ""wrong https port"");"
14280,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/CredentialProviderUtilityIT.java,47,,"            testPath = new Path(Files.createTempDirectory(""tempproviders"").toString(), ""test.jks"");"
14281,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/CredentialProviderUtilityIT.java,47,,"            testPath = new Path(Files.createTempDirectory(""tempproviders"").toString(), ""test.jks"");"
14282,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/CredentialProviderUtilityIT.java,60,,"                return JavaKeyStoreProvider.SCHEME_NAME + ""://file/"" + finalTestPath.toString();"
14283,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/examples/QuickStartIT.java,50,,"        assertEquals(QuickStart.SALES_DB, db.get(""name""));"
14284,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/examples/QuickStartV2IT.java,137,,"            String colGuid = (String) colMap.get(""guid"");"
14285,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/notification/NotificationHookConsumerIT.java,111,,"                ArrayNode results = searchByDSL(String.format(""%s where qualifiedName='%s'"", DATABASE_TYPE_BUILTIN, entity.get(QUALIFIED_NAME)));"
14286,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/notification/NotificationHookConsumerIT.java,141,,"        newEntity.set(""owner"", randomString());"
14287,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/util/RestUtilsTest.java,64,,"        ClassTypeDefinition dbV1Type = TypesUtil.createClassTypeDef(""database"", """", Collections.emptySet(),"
14288,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/util/RestUtilsTest.java,65,,"                                           new AttributeDefinition(""tables"", AtlasBaseTypeDef.getArrayTypeName(""table""),"
14289,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/util/RestUtilsTest.java,65,,"                                           new AttributeDefinition(""tables"", AtlasBaseTypeDef.getArrayTypeName(""table""),"
14290,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/util/RestUtilsTest.java,66,,"                                                                   Multiplicity.OPTIONAL, true, ""containingDatabase""));"
14291,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/TestUtils.java,47,,"        return System.getProperty(""projectBaseDir"") + ""/webapp/target/"" + random();"
14292,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/adapters/TestEntitiesREST.java,170,,"        searchParameters.setTypeName(""_ALL_ENTITY_TYPES"");"
14293,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/adapters/TestEntitiesREST.java,279,,"        filterCriteria.setAttributeName(""stringAttr"");"
14294,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/adapters/TestEntitiesREST.java,294,,"        filterCriteria.setAttributeValue(""sample_string"");"
14295,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/adapters/TestEntitiesREST.java,637,,"        tableEntity.setAttribute(""columns"", getObjIdList(columns));"
14296,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/adapters/TestEntityREST.java,117,,"        String[] attrVal = {String.valueOf(dbEntity.getAttribute(""name""))};"
14297,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/adapters/TestEntityREST.java,166,,"        testClassification = new AtlasClassification(TestUtilsV2.CLASSIFICATION, new HashMap<String, Object>() {{ put(""tag"", ""tagName""); }});"
14298,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/adapters/TestEntityREST.java,166,,"        testClassification = new AtlasClassification(TestUtilsV2.CLASSIFICATION, new HashMap<String, Object>() {{ put(""tag"", ""tagName""); }});"
14299,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/adapters/TestEntityREST.java,194,,"            put(""stringAttr"", ""sample_string"");"
14300,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/adapters/TestEntityREST.java,195,,"            put(""booleanAttr"", true);"
14301,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/adapters/TestEntityREST.java,196,,"            put(""integerAttr"", 100);"
14302,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/adapters/TestEntityREST.java,230,,"            put(""stringAttr"", ""sample_string_v2"");"
14303,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/adapters/TestEntityREST.java,477,,"        attrValueMapReq.put(""attr1"", true);"
14304,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/adapters/TestEntityREST.java,478,,"        attrValueMapReq.put(""attr2"", Byte.MAX_VALUE);"
14305,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/adapters/TestEntityREST.java,479,,"        attrValueMapReq.put(""attr3"", Short.MAX_VALUE);"
14306,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/adapters/TestEntityREST.java,480,,"        attrValueMapReq.put(""attr4"", Integer.MAX_VALUE);"
14307,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/adapters/TestEntityREST.java,481,,"        attrValueMapReq.put(""attr5"", Long.MAX_VALUE);"
14308,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/adapters/TestEntityREST.java,482,,"        attrValueMapReq.put(""attr6"", Float.MAX_VALUE);"
14309,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/adapters/TestEntityREST.java,483,,"        attrValueMapReq.put(""attr7"", Double.MAX_VALUE);"
14310,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/adapters/TestEntityREST.java,484,,"        attrValueMapReq.put(""attr8"", ""value8"");"
14311,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/adapters/TestEntityREST.java,485,,"        attrValueMapReq.put(""attr9"", new Date());"
14312,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/adapters/TestEntityREST.java,486,,"        attrValueMapReq.put(""attr10"", ""USER"");"
14313,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/adapters/TestEntityREST.java,488,,"        bmAttrMapReq.put(""bmWithAllTypes"", attrValueMapReq);"
14314,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/adapters/TestEntityREST.java,550,,"        bmAttrMapReq.put(""bmWithAllTypesMV"", attrValueMapReq);"
14315,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/adapters/TestEntityREST.java,602,,"        attrValueMapReq.put(""attr8"", ""value8-updated"");"
14316,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/adapters/TypeDefsRESTTest.java,130,,"        attrValueMapReq.put(""attr19"", dateList);"
14317,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/filters/ActiveServerFilterTest.java,66,,"        when(servletRequest.getRequestURI()).thenReturn(""api/atlas/types"");"
14318,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/filters/ActiveServerFilterTest.java,97,,"        when(servletRequest.getRequestURI()).thenReturn(""types"");"
14319,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/filters/AtlasAuthenticationKerberosFilterTest.java,76,,"        String originalConf = System.getProperty(""atlas.conf"");"
14320,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/filters/AtlasCSRFPreventionFilterTest.java,65,,"		Mockito.when(mockReq.getHeader(AtlasCSRFPreventionFilter.HEADER_DEFAULT)).thenReturn(""valueUnimportant"");"
14321,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/filters/AuditFilterTest.java,66,,"        assertTrue(auditFilter.isOperationExcludedFromAudit(""GET"", ""Version"", configuration));"
14322,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/filters/AuditFilterTest.java,66,,"        assertTrue(auditFilter.isOperationExcludedFromAudit(""GET"", ""Version"", configuration));"
14323,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/filters/AuditFilterTest.java,68,,"        assertTrue(auditFilter.isOperationExcludedFromAudit(""GET"", ""Ping"", configuration));"
14324,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/BaseResourceIT.java,106,,"    public static final String CLASSIFICATION     = ""classification"";"
14325,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/BaseResourceIT.java,136,,"            atlasClientV1 = new AtlasClient(atlasUrls, new String[]{""admin"", ""admin""});"
14326,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/BaseResourceIT.java,149,,"                LOG.warn(""Type with name {} already exists. Skipping"", enumDef.getName());"
14327,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/BaseResourceIT.java,337,,"                        attrDef(""owner"", AtlasBaseTypeDef.ATLAS_TYPE_STRING),"
14328,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/BaseResourceIT.java,338,,"                        attrDef(""createTime"", AtlasBaseTypeDef.ATLAS_TYPE_LONG),"
14329,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/BaseResourceIT.java,347,,"        StructTypeDefinition structTypeDefinition = new StructTypeDefinition(""serdeType"", null,"
14330,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/BaseResourceIT.java,349,,"                        TypesUtil.createRequiredAttrDef(""serde"", AtlasBaseTypeDef.ATLAS_TYPE_STRING)}));"
14331,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/BaseResourceIT.java,353,,"        EnumTypeDefinition enumTypeDefinition = new EnumTypeDefinition(""tableType"", null, null, Arrays.asList(values));"
14332,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/BaseResourceIT.java,358,,"                        attrDef(""lastAccessTime"", AtlasBaseTypeDef.ATLAS_TYPE_DATE),"
14333,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/BaseResourceIT.java,364,,"                        new AttributeDefinition(""serde1"", ""serdeType"", Multiplicity.OPTIONAL, false, null),"
14334,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/BaseResourceIT.java,365,,"                        new AttributeDefinition(""serde2"", ""serdeType"", Multiplicity.OPTIONAL, false, null));"
14335,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/BaseResourceIT.java,379,,"                        TypesUtil.createRequiredAttrDef(""tag"", AtlasBaseTypeDef.ATLAS_TYPE_STRING));"
14336,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/BaseResourceIT.java,405,,"                AtlasTypeUtil.createUniqueRequiredAttrDef(NAME, ""string""),"
14337,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/BaseResourceIT.java,409,,"                AtlasTypeUtil.createOptionalAttrDef(""createTime"", ""long""),"
14338,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/BaseResourceIT.java,478,,"        AtlasBusinessMetadataDef bmNoApplicableTypes = createBusinessMetadataDef(""bmNoApplicableTypes"", _description, ""1.0"","
14339,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/BaseResourceIT.java,527,,"        values.put(DESCRIPTION, ""foo database"");"
14340,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/BasicSearchIT.java,81,,"            atlasClientV2.getEntityByAttribute(""hdfs_path"", new HashMap<String, String>() {{"
14341,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/BasicSearchIT.java,208,,"                savedSearch.setOwnerName(""admin"");"
14342,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/DataSetLineageJerseyResourceIT.java,78,,"        Map<String, Struct> vertices = (Map<String, Struct>) resultsInstance.get(""vertices"");"
14343,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/DataSetLineageJerseyResourceIT.java,81,,"        Map<String, Struct> edges = (Map<String, Struct>) resultsInstance.get(""edges"");"
14344,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/DataSetLineageJerseyResourceIT.java,193,,"        List<Referenceable> salesFactColumns = Arrays.asList(column(""time_id"", ""int"", ""time id""), column(""product_id"", ""int"", ""product id""),"
14345,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityJerseyResourceIT.java,79,,"        databaseInstance.set(""name"", ""db_""+ randomString());"
14346,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityJerseyResourceIT.java,80,,"        databaseInstance.set(""description"", ""foo database"");"
14347,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityJerseyResourceIT.java,102,,"                columnInstance.set(""comment"", ""column "" + j + "" for table "" + i);"
14348,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityJerseyResourceIT.java,106,,"            tableInstance.set(""columns"", columns);"
14349,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityJerseyResourceIT.java,120,,"        String tableName = ""table"" + randomString();"
14350,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityJerseyResourceIT.java,130,,"            Assert.fail(""Response is not a guid, "" + guid);"
14351,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityJerseyResourceIT.java,140,,"        entity.set(""clusterName"", randomString());"
14352,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityJerseyResourceIT.java,143,,"        entity.set(""owner"", ""user1"");"
14353,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityJerseyResourceIT.java,143,,"        entity.set(""owner"", ""user1"");"
14354,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityJerseyResourceIT.java,144,,"        entity.set(""clusterName"", ""cl1"");"
14355,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityJerseyResourceIT.java,145,,"        entity.set(""parameters"", Collections.EMPTY_MAP);"
14356,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityJerseyResourceIT.java,146,,"        entity.set(""location"", ""/tmp"");"
14357,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityJerseyResourceIT.java,146,,"        entity.set(""location"", ""/tmp"");"
14358,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityJerseyResourceIT.java,506,,"        queryParams.add(""type"", ""blah"");"
14359,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityJerseyResourceIT.java,579,,"        String traitName = ""PII_Trait"" + randomString();"
14360,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityJerseyResourceIT.java,583,,"        LOG.debug(""traitDefinitionAsJSON = {}"", traitDefinitionAsJSON);"
14361,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityJerseyResourceIT.java,872,,"        String colName = ""col1""+randomString();"
14362,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityJerseyResourceIT.java,876,,"        values.put(""comment"", ""col1 comment"");"
14363,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityJerseyResourceIT.java,879,,"        values.put(""type"", ""string"");"
14364,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityJerseyResourceIT.java,881,,"        values.put(""position"", 0);"
14365,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityJerseyResourceIT.java,884,,"        values.put(""userDescription"", null);"
14366,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityJerseyResourceIT.java,885,,"        values.put(""displayName"", null);"
14367,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityLineageJerseyResourceIT.java,150,,"        List<Referenceable> salesFactColumns = Arrays.asList(column(""time_id"", ""int"", ""time id""), column(""product_id"", ""int"", ""product id""),"
14368,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityV2JerseyResourceIT.java,124,,"        AtlasEntity databaseInstance = new AtlasEntity(DATABASE_TYPE_V2, ""name"", ""db1"");"
14369,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityV2JerseyResourceIT.java,126,,"        databaseInstance.setAttribute(""description"", ""foo database"");"
14370,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityV2JerseyResourceIT.java,149,,"                columnInstance.setAttribute(""comment"", ""column "" + j + "" for table "" + i);"
14371,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityV2JerseyResourceIT.java,155,,"            tableInstance.setAttribute(""columns"", columns);"
14372,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityV2JerseyResourceIT.java,213,,"                        AtlasTypeUtil.createUniqueRequiredAttrDef(""name"", ""string"")"
14373,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityV2JerseyResourceIT.java,323,,"    @Test(dependsOnMethods = ""testSubmitEntity"")"
14374,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityV2JerseyResourceIT.java,432,,"    @Test(dependsOnMethods = ""testGetTraitNames"")"
14375,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityV2JerseyResourceIT.java,434,,"        traitName = ""PII_Trait"" + randomString();"
14376,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityV2JerseyResourceIT.java,557,,"                        AtlasTypeUtil.createRequiredAttrDef(""type"", ""string""));"
14377,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityV2JerseyResourceIT.java,601,,"            fail(""Deletion should've succeeded"");"
14378,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityV2JerseyResourceIT.java,913,,"        bmAttrMapReq.put(""attr8"", ""01234567890123456789"");"
14379,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityV2JerseyResourceIT.java,913,,"        bmAttrMapReq.put(""attr8"", ""01234567890123456789"");"
14380,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/EntityV2JerseyResourceIT.java,914,,"        businessAttributesMap.put(""bmWithAllTypes"", bmAttrMapReq);"
14381,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/GlossaryClientV2IT.java,100,,"    @Test(dependsOnMethods = ""testCreateGlossary"")"
14382,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/GlossaryClientV2IT.java,117,,"        List<AtlasGlossary> list = atlasClientV2.getAllGlossaries(""ASC"", 5, 0);"
14383,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/GlossaryClientV2IT.java,250,,"        partialUpdates.put(""shortDescription"", ""shortDescription"");"
14384,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/GlossaryClientV2IT.java,251,,"        partialUpdates.put(""longDescription"", ""longDescription"");"
14385,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/LineageClientV2IT.java,100,,"        List<Referenceable> salesFactColumns = Arrays.asList(column(""time_id"", ""int"", ""time id""), column(""product_id"", ""int"", ""product id""),"
14386,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/TypedefsJerseyResourceIT.java,140,,"                Collections.<String>emptySet(), AtlasTypeUtil.createUniqueRequiredAttrDef(""name"", ""string""));"
14387,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/TypedefsJerseyResourceIT.java,140,,"                Collections.<String>emptySet(), AtlasTypeUtil.createUniqueRequiredAttrDef(""name"", ""string""));"
14388,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/TypedefsJerseyResourceIT.java,241,,"            AtlasEnumDef byName = clientV2.getEnumDefByName(""blah"");"
14389,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/TypedefsJerseyResourceIT.java,242,,"            fail(""Get for invalid name should have reported a failure"");"
14390,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/integration/TypedefsJerseyResourceIT.java,245,,"                    ""Should've returned a 404"");"
14391,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/security/FileAuthenticationTest.java,119,,"        when(authentication.getCredentials()).thenReturn(""admin"");"
14392,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/security/FileAuthenticationTest.java,122,,"        LOG.debug("" {}"", auth);"
14393,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/security/NegativeSSLAndKerberosTest.java,68,,"        String confLocation = System.getProperty(""atlas.conf"");"
14394,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/security/SSLAndKerberosTest.java,76,,"        String confLocation = System.getProperty(""atlas.conf"");"
14395,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/service/ActiveInstanceElectorServiceTest.java,68,,"        when(configuration.getStringArray(HAConfiguration.ATLAS_SERVER_IDS)).thenReturn(new String[] {""id1""});"
14396,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/service/ActiveInstanceElectorServiceTest.java,69,,"        when(configuration.getString(HAConfiguration.ATLAS_SERVER_ADDRESS_PREFIX +""id1"")).thenReturn(""127.0.0.1:21000"");"
14397,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/service/ActiveInstanceStateTest.java,68,,"        when(configuration.getString(HAConfiguration.ATLAS_SERVER_ADDRESS_PREFIX +""id1"")).thenReturn(HOST_PORT);"
14398,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/service/SecureEmbeddedServerTest.java,46,,"        String originalConf = System.getProperty(""atlas.conf"");"
14399,./TargetProjects/atlas/webapp/src/test/java/org/apache/atlas/web/service/SecureEmbeddedServerTestBase.java,104,,"            originalConf = System.getProperty(""atlas.conf"");"
14400,./TargetProjects/attic-apex-core/api/src/main/java/com/datatorrent/api/Attribute.java,83,,"    @SuppressWarnings(value = ""unchecked"")"
14401,./TargetProjects/attic-apex-core/api/src/main/java/com/datatorrent/api/StringCodec.java,87,,"    @SuppressWarnings(""deprecation"")"
14402,./TargetProjects/attic-apex-core/api/src/test/java/com/datatorrent/api/Object2StringTest.java,146,,"    assertEquals(""validating the bean"",obj,new TestBean());"
14403,./TargetProjects/attic-apex-core/bufferserver/src/main/java/com/datatorrent/bufferserver/packet/Tuple.java,152,,"    throw new UnsupportedOperationException(""Not supported yet."");"
14404,./TargetProjects/attic-apex-core/bufferserver/src/main/java/com/datatorrent/bufferserver/storage/DiskStorage.java,84,,"      File identityFile = new File(directory, ""identity"");"
14405,./TargetProjects/attic-apex-core/bufferserver/src/test/java/com/datatorrent/bufferserver/client/SubscriberTest.java,87,,"    final Publisher bsp1 = new Publisher(""MyPublisher"");"
14406,./TargetProjects/attic-apex-core/bufferserver/src/test/java/com/datatorrent/bufferserver/server/ServerTest.java,93,,"    bsp = new Publisher(""MyPublisher"");"
14407,./TargetProjects/attic-apex-core/bufferserver/src/test/java/com/datatorrent/bufferserver/server/ServerTest.java,96,,"    bss = new Subscriber(""MySubscriber"");"
14408,./TargetProjects/attic-apex-core/bufferserver/src/test/java/com/datatorrent/bufferserver/server/ServerTest.java,100,,"    bss.activate(null, ""BufferServerOutput/BufferServerSubscriber"", ""MyPublisher"", 0, null, 0L, 0);"
14409,./TargetProjects/attic-apex-core/bufferserver/src/test/java/com/datatorrent/bufferserver/server/ServerTest.java,113,,"  @SuppressWarnings(""SleepWhileInLoop"")"
14410,./TargetProjects/attic-apex-core/bufferserver/src/test/java/com/datatorrent/bufferserver/server/ServerTest.java,224,,"    bsc = new Controller(""MyController"");"
14411,./TargetProjects/attic-apex-core/bufferserver/src/test/java/com/datatorrent/bufferserver/storage/DiskStorageTest.java,69,,"    bsp = new Publisher(""MyPublisher"");"
14412,./TargetProjects/attic-apex-core/common/src/main/java/org/apache/apex/common/util/JarHelper.java,89,,"            throw new AssertionError(""Cannot resolve jar file for "" + jarClass, e);"
14413,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/StreamingContainerAgent.java,190,,"          throw new RuntimeException(""Cannot clone attributes"", ex);"
14414,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/api/OperatorDeployInfo.java,45,,"  @SuppressWarnings(""FieldNameHidesFieldInSuperclass"")"
14415,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/api/OperatorDeployInfo.java,80,,"    throw new UnsupportedOperationException(""Not supported yet."");"
14416,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/cli/ApexCli.java,471,,"      if (scheme == null || scheme.equals(""file"")) {"
14417,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/cli/ApexCli.java,621,,"    globalCommands.put(""help"", new CommandSpec(new HelpCommand(),"
14418,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/cli/ApexCli.java,637,,"        new Arg[]{new Arg(""app-id/app-name"")},"
14419,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/cli/ApexCli.java,650,,"        new Arg[]{new Arg(""class-name"")},"
14420,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/cli/ApexCli.java,678,,"        new Arg[]{new Arg(""name"")},"
14421,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/cli/ApexCli.java,754,,"        new Arg[]{new Arg(""operator-id"")},"
14422,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/cli/ApexCli.java,755,,"        new Arg[]{new Arg(""port-name""), new Arg(""num-windows"")},"
14423,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/cli/ApexCli.java,762,,"        new Arg[]{new Arg(""operator-name"")},"
14424,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/cli/ApexCli.java,767,,"        new Arg[]{new Arg(""property-name"")},"
14425,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/cli/ApexCli.java,832,,"        new Arg[]{new Arg(""stream-name""), new Arg(""from-operator-name""), new Arg(""from-port-name""), new Arg(""to-operator-name""), new Arg(""to-port-name"")},"
14426,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/cli/ApexCli.java,1409,,"        LOG.warn(""Cannot flush command history"", ex);"
14427,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/cli/ApexCli.java,1742,,"      throw new CliException(""No application selected"");"
14428,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/cli/ApexCli.java,1954,,"          if (fileName.endsWith("".json"")) {"
14429,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/cli/ApexCli.java,1961,,"          } else if (fileName.endsWith("".properties"")) {"
14430,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/cli/ApexCli.java,2540,,"        throw new CliException(""Failed web service request for appid "" + currentApp.getApplicationId().toString(), e);"
14431,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/cli/ApexCli.java,2558,,"          uriSpec = uriSpec.path(StramWebServices.PATH_PHYSICAL_PLAN_CONTAINERS).path(URLEncoder.encode(containerLongId, ""UTF-8"")).path(""kill"");"
14432,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/cli/ApexCli.java,2754,,"      uriSpec = uriSpec.path(StramWebServices.PATH_LOGICAL_PLAN_OPERATORS).path(URLEncoder.encode(args[1], ""UTF-8"")).path(""properties"");"
14433,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/cli/ApexCli.java,2937,,"              map.put(""applicationName"", appFactory.getName());"
14434,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/cli/ApexCli.java,2938,,"              map.put(""logicalPlan"", LogicalPlanSerializer.convertToMap(logicalPlan, false));"
14435,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/cli/ApexCli.java,4107,,"    final Option exactMatch = add(new Option(""exactMatch"", ""Only consider applications with exact app name""));"
14436,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/client/DTConfiguration.java,125,,"        Element value = doc.createElement(""value"");"
14437,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/client/DTConfiguration.java,129,,"          Element description = doc.createElement(""description"");"
14438,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/client/PermissionsInfo.java,51,,"      JSONArray users = readOnly.optJSONArray(""users"");"
14439,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/client/PermissionsInfo.java,57,,"      JSONArray roles = readOnly.optJSONArray(""roles"");"
14440,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/client/PermissionsInfo.java,63,,"      readOnlyEveryone = readOnly.optBoolean(""everyone"", false);"
14441,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/client/StramAgent.java,207,,"      if (!info.appMasterTrackingUrl.startsWith(""http://"")"
14442,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/codec/LogicalPlanSerializer.java,123,,"    result.put(""attributes"", dagAttrs);"
14443,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/codec/LogicalPlanSerializer.java,142,,"      operatorDetailMap.put(""name"", operatorName);"
14444,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/codec/LogicalPlanSerializer.java,144,,"      operatorDetailMap.put(""class"", operatorMeta.getOperator().getClass().getName());"
14445,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/codec/LogicalPlanSerializer.java,201,,"      sourcePortDetailMap.put(""operatorName"", operatorMeta.getName());"
14446,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/codec/LogicalPlanSerializer.java,202,,"      sourcePortDetailMap.put(""portName"", sourcePortName);"
14447,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/engine/Node.java,258,,"  @SuppressWarnings({""unchecked""})"
14448,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/engine/StreamingContainer.java,327,,"        logger.debug(""Fail to log"", ex);"
14449,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/plan/logical/DAGSetupPluginManager.java,102,,"      throw new UnsupportedOperationException(""Not supported yet."");"
14450,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/plan/logical/LogicalPlan.java,133,,"  @SuppressWarnings(""FieldNameHidesFieldInSuperclass"")"
14451,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/plan/logical/LogicalPlan.java,232,,"    throw new UnsupportedOperationException(""Not supported yet."");"
14452,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/plan/logical/LogicalPlan.java,374,,"        @SuppressWarnings(""unchecked"")"
14453,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/plan/logical/LogicalPlan.java,1739,,"        throw new ConstraintViolationException(""Operator "" + n.getName() + "" violates constraints "" + copySet, copySet);"
14454,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/plan/logical/LogicalPlanConfiguration.java,127,,"  public static final String CLASS = ""class"";"
14455,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/plan/logical/LogicalPlanConfiguration.java,298,,"        @SuppressWarnings(""unchecked"")"
14456,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/plan/logical/LogicalPlanConfiguration.java,1229,,"    @SuppressWarnings(""unused"")"
14457,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/plan/logical/LogicalPlanConfiguration.java,1882,,"        LOG.error(""Invalid configuration key: {}"", propertyName);"
14458,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/plan/physical/PhysicalPlan.java,672,,"              @SuppressWarnings({ ""unchecked"", ""rawtypes"" })"
14459,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/util/StablePriorityQueue.java,85,,"  @SuppressWarnings(""unchecked"")"
14460,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/util/VersionInfo.java,42,,"  private String version = ""Unknown"";"
14461,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/util/VersionInfo.java,151,,"    String[] vals1 = normalizeVersion(str1).split(""\\."");"
14462,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/webapp/ContainerInfo.java,38,,"  @RecordField(type = ""meta"")"
14463,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/webapp/ContainerInfo.java,46,,"  @RecordField(type = ""stats"")"
14464,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/webapp/OperatorDiscoverer.java,188,,"      if (qName.equalsIgnoreCase(""class"")) {"
14465,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/webapp/OperatorDiscoverer.java,195,,"          String tagName = attributes.getValue(""name"");"
14466,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/webapp/OperatorDiscoverer.java,518,,"          if (!inputPort.has(""optional"")) {"
14467,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/webapp/OperatorDiscoverer.java,555,,"          response.put(""type"", type);"
14468,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/webapp/OperatorInfo.java,52,,"  @RecordField(type = ""meta"")"
14469,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/webapp/OperatorInfo.java,58,,"  @RecordField(type = ""stats"")"
14470,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/webapp/StramWebServices.java,127,,"  public static final String PATH_LOGGERS = ""loggers"";"
14471,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/webapp/StramWebServices.java,164,,"  @SuppressWarnings({""rawtypes"", ""unchecked""})"
14472,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/webapp/StramWebServices.java,258,,"  public JSONObject getOperatorInfo(@PathParam(""operatorId"") int operatorId) throws Exception"
14473,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/webapp/StramWebServices.java,286,,"  public JSONObject getPortsInfo(@PathParam(""operatorId"") int operatorId, @PathParam(""portName"") String portName) throws Exception"
14474,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/webapp/StramWebServices.java,323,,"        j.put(""name"", clazz);"
14475,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/webapp/StramWebServices.java,383,,"  public JSONObject startRecording(@PathParam(""opId"") int opId, String content) throws JSONException"
14476,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/webapp/StramWebServices.java,579,,"  public JSONObject getLogicalOperator(@PathParam(""operatorName"") String operatorName) throws Exception"
14477,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/webapp/StramWebServices.java,727,,"        port.put(""type"", ""input"");"
14478,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/webapp/TypeDiscoverer.java,164,,"      meta.put(""type"", ((Class<?>)ptype.getRawType()).getName());"
14479,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/webapp/TypeGraph.java,671,,"    desc.put(""name"", clazzName);"
14480,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/webapp/TypeGraph.java,681,,"      desc.put(""uiType"", UI_TYPE.ENUM.getName());"
14481,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/webapp/TypeGraph.java,877,,"        propJ.put(""type"", ""UNKNOWN"");"
14482,./TargetProjects/attic-apex-core/engine/src/main/java/com/datatorrent/stram/webapp/asm/ASMUtil.java,49,,"  @SuppressWarnings(""unchecked"")"
14483,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/CheckpointTest.java,172,,"    Assert.assertEquals(""checkpoints "" + o2p1, Sets.newHashSet(Stateless.WINDOW_ID), checkpoints);"
14484,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/CheckpointTest.java,239,,"    Assert.assertEquals(""checkpoint "" + o1p1, Checkpoint.INITIAL_CHECKPOINT, o1p1.getRecoveryCheckpoint());"
14485,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/CustomControlTupleTest.java,175,,"      Generator randomGenerator = dag.addOperator(""randomGenerator"", Generator.class);"
14486,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/CustomControlTupleTest.java,176,,"      DefaultProcessor processor = dag.addOperator(""process"", DefaultProcessor.class);"
14487,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/CustomControlTupleTest.java,177,,"      ControlAwareReceiver receiver = dag.addOperator(""receiver"", ControlAwareReceiver.class);"
14488,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/CustomControlTupleTest.java,178,,"      dag.addStream(""genToProcessor"", randomGenerator.out, processor.input);"
14489,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/CustomControlTupleTest.java,179,,"      dag.addStream(""ProcessorToReceiver"", processor.output, receiver.input);"
14490,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/HostLocalTest.java,69,,"    dag.getAttributes().put(com.datatorrent.api.Context.DAGContext.APPLICATION_PATH, new File(""target"", HostLocalTest.class.getName()).getAbsolutePath());"
14491,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/HostLocalTest.java,74,,"    GenericTestOperator partitioned = dag.addOperator(""partitioned"", GenericTestOperator.class);"
14492,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/HostLocalTest.java,78,,"    dag.addStream(""o1_outport1"", o1.outport1, partitioned.inport1);"
14493,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/HostLocalTest.java,88,,"          NodeState.RUNNING, ""httpAddress"", ""rackName"", BuilderUtils.newResource(0, 0), BuilderUtils.newResource(containerMem * 2, 2), 0, null, 0);"
14494,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/HostLocalTest.java,88,,"          NodeState.RUNNING, ""httpAddress"", ""rackName"", BuilderUtils.newResource(0, 0), BuilderUtils.newResource(containerMem * 2, 2), 0, null, 0);"
14495,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/HostLocalTest.java,121,,"    dag.getMeta(partitioned).getAttributes().put(OperatorContext.LOCALITY_HOST, ""host1"");"
14496,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/HostLocalTest.java,134,,"    nr = BuilderUtils.newNodeReport(BuilderUtils.newNodeId(""host2"", 0),"
14497,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/HostLocalTest.java,179,,"    Assert.assertEquals(""number of containers is 1"", 1, scm.containerStartRequests.size());"
14498,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/LogicalPlanModificationTest.java,81,,"    dag.addStream(""o1.outport1"", o1.outport1, o2.inport1);"
14499,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/LogicalPlanModificationTest.java,94,,"    pm.addOperator(""added1"", added1);"
14500,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/LogicalPlanModificationTest.java,98,,"    Assert.assertEquals(""undeploy "" + ctx.undeploy, 0, ctx.undeploy.size());"
14501,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/LogicalPlanModificationTest.java,99,,"    Assert.assertEquals(""deploy "" + ctx.deploy, 0, ctx.deploy.size());"
14502,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/LogicalPlanModificationTest.java,214,,"    Assert.assertEquals(""sinks s1 "" + s1.getSinks(), 2, s1.getSinks().size());"
14503,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/LogicalPlanModificationTest.java,237,,"    Assert.assertEquals(""operators "" + dag.getAllOperators(), 3, dag.getAllOperators().size());"
14504,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/StramLocalClusterTest.java,189,,"    Assert.assertEquals(""current window"", 2, wclock.getCurrentTimeMillis());"
14505,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/StramLocalClusterTest.java,213,,"    Assert.assertEquals(""checkpoints "" + ptNode1, Arrays.asList(new Checkpoint[] {new Checkpoint(1L, 0, 0)}), ptNode1.checkpoints);"
14506,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/StramLocalClusterTest.java,294,,"    String generatedJar = generatejar(""POJO"");"
14507,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/StramRecoveryTest.java,213,,"    assertEquals(""containerId"", originalContainer.getExternalId(), o1p1.getContainer().getExternalId());"
14508,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/StramRecoveryTest.java,216,,"    assertEquals(""post restore 1"", PTContainer.State.ALLOCATED, o1p1.getContainer().getState());"
14509,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/StramRecoveryTest.java,326,,"    assertEquals(""flush count"", 1, flushCount.intValue());"
14510,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/StramRecoveryTest.java,539,,"    Mockito.doAnswer(answer).when(impl).log(""containerId"", ""timeout"");"
14511,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/StramRecoveryTest.java,566,,"    Assert.assertTrue(""timedout"", timedout.get());"
14512,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/StreamCodecTest.java,70,,"    GenericTestOperator node1 = dag.addOperator(""node1"", GenericTestOperator.class);"
14513,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/StreamCodecTest.java,71,,"    GenericTestOperator node2 = dag.addOperator(""node2"", GenericTestOperator.class);"
14514,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/StreamCodecTest.java,72,,"    GenericTestOperator node3 = dag.addOperator(""node3"", GenericTestOperator.class);"
14515,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/StreamCodecTest.java,75,,"    dag.addStream(""n1n2"", node1.outport1, node2.inport1);"
14516,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/StreamCodecTest.java,76,,"    dag.addStream(""n2n3"", node2.outport1, node3.inport1);"
14517,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/StreamCodecTest.java,86,,"    Assert.assertEquals(""number containers"", 3, containers.size());"
14518,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/StreamCodecTest.java,89,,"      StreamingContainerManagerTest.assignContainer(dnm, ""container"" + (i + 1));"
14519,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/StreamCodecTest.java,100,,"    Assert.assertEquals(""number stream codecs "" + id, n1odi.streamCodecs.size(), 1);"
14520,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/StreamCodecTest.java,261,,"    Assert.assertEquals(""number operators "" + n2meta.getName(), 3, operators.size());"
14521,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/StreamCodecTest.java,433,,"    dag.addStream(""n1n2n3"", node1.outport1, node2.inport1, node3.inport1);"
14522,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/StreamCodecTest.java,1023,,"      Assert.assertEquals(""Number of unifiers "", 2 - i, upstreamOperators.size());"
14523,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/StreamingContainerManagerTest.java,159,,"    Assert.assertEquals(""contextAttributes "" + ndiClone.contextAttributes, Integer.valueOf(100), ndiClone.contextAttributes.get(OperatorContext.SPIN_MILLIS));"
14524,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/StreamingContainerManagerTest.java,172,,"    dag.addStream(""o1.outport"", o1.outport, o2.inport1);"
14525,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/StreamingContainerManagerTest.java,200,,"    Assert.assertNotNull(o1 + "" assigned to "" + sca1.container.getExternalId(), o1DI);"
14526,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/StreamingContainerManagerTest.java,201,,"    Assert.assertEquals(""type "" + o1DI, OperatorDeployInfo.OperatorType.INPUT, o1DI.type);"
14527,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/StreamingContainerManagerTest.java,202,,"    Assert.assertEquals(""inputs "" + o1DI.name, 0, o1DI.inputs.size());"
14528,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/StreamingContainerManagerTest.java,228,,"    Assert.assertEquals(""portName "" + c2o2i1, dag.getMeta(o2).getMeta(o2.inport1).getPortName(), c2o2i1.portName);"
14529,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/StreamingContainerManagerTest.java,230,,"    Assert.assertEquals(""sourceNodeId "" + c2o2i1, o1DI.id, c2o2i1.sourceNodeId);"
14530,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/StreamingContainerManagerTest.java,231,,"    Assert.assertEquals(""sourcePortName "" + c2o2i1, TestGeneratorInputOperator.OUTPUT_PORT, c2o2i1.sourcePortName);"
14531,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/StreamingContainerManagerTest.java,545,,"      Assert.assertEquals(""state "" + oper, PTOperator.State.PENDING_DEPLOY, oper.getState());"
14532,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/cli/ApexCliTest.java,128,,"        .getLaunchCommandLineInfo(new String[]{""-D"", ""dt.test.1=launch-define"", ""-apconf"", ""my-app-conf1.xml"", ""-conf"", ""src/test/resources/testAppPackage/local-conf.xml""});"
14533,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/cli/ApexCliTest.java,132,,"    Assert.assertEquals(""launch-define"", props.get(""dt.test.1""));"
14534,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/cli/ApexCliTest.java,132,,"    Assert.assertEquals(""launch-define"", props.get(""dt.test.1""));"
14535,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/cli/ApexCliTest.java,133,,"    Assert.assertEquals(""local-fs-config"", props.get(""dt.test.2""));"
14536,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/cli/ApexCliTest.java,134,,"    Assert.assertEquals(""app-package-config"", props.get(""dt.test.3""));"
14537,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/cli/ApexCliTest.java,134,,"    Assert.assertEquals(""app-package-config"", props.get(""dt.test.3""));"
14538,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/cli/ApexCliTest.java,135,,"    Assert.assertEquals(""user-home-config"", props.get(""dt.test.4""));"
14539,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/cli/ApexCliTest.java,135,,"    Assert.assertEquals(""user-home-config"", props.get(""dt.test.4""));"
14540,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/cli/ApexCliTest.java,136,,"    Assert.assertEquals(""package-default"", props.get(""dt.test.5""));"
14541,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/cli/ApexCliTest.java,136,,"    Assert.assertEquals(""package-default"", props.get(""dt.test.5""));"
14542,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/cli/ApexCliTest.java,138,,"    props = cli.getLaunchAppPackageProperties(ap, null, commandLineInfo, ""MyFirstApplication"");"
14543,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/client/AppPackageTest.java,129,,"    Assert.assertEquals(""Input operator class"", ""com.example.mydtapp.RandomNumberGenerator"", operator.getJSONObject(""properties"").get(""@class""));"
14544,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/client/AppPackageTest.java,133,,"    Assert.assertEquals(""Value for Output Operator's testInput:"", ""default-value-1"", operator.getJSONObject(""properties"").get(""testInput""));"
14545,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/client/AppPackageTest.java,194,,"    Assert.assertEquals(""package-default"", defaultProperties.get(""dt.test.1"").getValue());"
14546,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/client/DTConfigurationTest.java,30,,"    config.setInternal(""test-key"", ""test-value"");"
14547,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/client/StramAppLauncherTest.java,85,,"      Whitebox.setInternalState(appLauncher, ""launchDependencies"", new LinkedHashSet<URL>());"
14548,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/client/StramClientUtilsTest.java,53,,"    conf.set(""a.b.c"", ""123"");"
14549,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/client/StramClientUtilsTest.java,53,,"    conf.set(""a.b.c"", ""123"");"
14550,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/client/StramClientUtilsTest.java,55,,"    conf.set(""x.y.z"", ""foobar"");"
14551,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/client/StramClientUtilsTest.java,55,,"    conf.set(""x.y.z"", ""foobar"");"
14552,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/client/StramClientUtilsTest.java,130,,"    Assert.assertEquals(getHostString(""192.168.1.1"") + "":8032"", StramClientUtils.getSocketConnectString(StramClientUtils.getRMWebAddress(conf, null)));"
14553,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/client/StramClientUtilsTest.java,130,,"    Assert.assertEquals(getHostString(""192.168.1.1"") + "":8032"", StramClientUtils.getSocketConnectString(StramClientUtils.getRMWebAddress(conf, null)));"
14554,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/client/StramClientUtilsTest.java,136,,"    Assert.assertEquals(getHostString(""192.168.1.2"") + "":8032"", StramClientUtils.getSocketConnectString(StramClientUtils.getRMWebAddress(conf, null)));"
14555,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/client/StramClientUtilsTest.java,193,,"    UserGroupInformation testUser = UserGroupInformation.createUserForTesting(""testUser1"", new String[]{""""});"
14556,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/client/StramClientUtilsTest.java,196,,"    Assert.assertEquals(fs.getHomeDirectory() + ""/datatorrent"", path.toString());"
14557,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/client/StramClientUtilsTest.java,234,,"    UserGroupInformation doAsUser = UserGroupInformation.createUserForTesting(""impersonated"", new String[]{""""});"
14558,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/debug/MuxSinkTest.java,45,,"        throw new UnsupportedOperationException(""Not supported yet."");"
14559,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/debug/TupleRecorderTest.java,112,,"      t1.key = ""speed"";"
14560,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/engine/AbstractReservoirTest.java,159,,"  @Parameters(method = ""defaultTestParameters"")"
14561,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/engine/AbstractReservoirTest.java,254,,"              logger.error(""Interrupted"", e);"
14562,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/engine/AbstractReservoirTest.java,320,,"    logger.debug(""Time {}"", System.currentTimeMillis() - start);"
14563,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/engine/AutoMetricTest.java,82,,"          Assert.assertNotNull(""metrics"", os.metrics.get(""operatorMetric""));"
14564,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/engine/AutoMetricTest.java,210,,"    dag.addStream(""TestTuples"", testOper.outport, collector.inport1).setLocality(Locality.CONTAINER_LOCAL);"
14565,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/engine/AutoMetricTest.java,248,,"    TestGeneratorInputOperator inputOperator = dag.addOperator(""input"", TestGeneratorInputOperator.class);"
14566,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/engine/AutoMetricTest.java,258,,"    lpc.prepareDAG(dag, null, ""AutoMetricTest"");"
14567,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/engine/AutoMetricTest.java,264,,"    Assert.assertEquals(""progress"", 1L, ((Long)aggregator.result.get(""progress"")).longValue());"
14568,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/engine/AutoMetricTest.java,359,,"        if (physicalMetricsContext.getMetrics().containsKey(""myMetric"")) {"
14569,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/engine/GenericNodeTest.java,250,,"    final GenericNode gn = new GenericNode(go, new com.datatorrent.stram.engine.OperatorContext(0, ""operator"","
14570,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/engine/GenericNodeTest.java,253,,"    AbstractReservoir reservoir1 = AbstractReservoir.newReservoir(""ip1Res"", 1024);"
14571,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/engine/GenericNodeTest.java,271,,"    gn.connectInputPort(""ip1"", reservoir1);"
14572,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/engine/GenericNodeTest.java,272,,"    gn.connectInputPort(""ip2"", reservoir2);"
14573,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/engine/NodeTest.java,141,,"      throw new UnsupportedOperationException(""Not supported yet.""); //To change body of generated methods, choose Tools | Templates."
14574,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/engine/NodeTest.java,211,,"        new com.datatorrent.stram.engine.OperatorContext(0,""operator"", attributeMap, null))"
14575,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/StreamPersistanceTests.java,227,,"    TestGeneratorInputOperator input1 = dag.addOperator(""input1"", TestGeneratorInputOperator.class);"
14576,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/StreamPersistanceTests.java,230,,"    StreamMeta stream = dag.addStream(""Stream1"", input1.outport, x.inport1);"
14577,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/StreamPersistanceTests.java,231,,"    stream.persistUsing(""Stream1_persister"",persister, persister.inport);"
14578,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/StreamPersistanceTests.java,235,,"    assertEquals(""Persist operator not added to dag "", persister, persistOperatorMeta.getOperator());"
14579,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/StreamPersistanceTests.java,254,,"    stream.persistUsing(""Stream1_x1_persister"", persister1, persister1.inport, x1.inport1);"
14580,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/StreamPersistanceTests.java,255,,"    stream.persistUsing(""Stream1_x2_persister"", persister2, persister2.inport, x2.inport1);"
14581,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/StreamPersistanceTests.java,280,,"      stream.persistUsing(""persister"", persister, persister.inputPort);"
14582,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/StreamPersistanceTests.java,444,,"      new Thread(""LocalClusterController"")"
14583,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/StreamPersistanceTests.java,473,,"        assertEquals(""Mismatch observed for tuple "", x.results.get(i), persister.results.get(i));"
14584,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/StreamPersistanceTests.java,617,,"    AscendingNumbersOperator ascend = dag.addOperator(""ascend"", new AscendingNumbersOperator());"
14585,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/StreamPersistanceTests.java,619,,"    TestReceiverOperator console = dag.addOperator(""console"", new TestReceiverOperator());"
14586,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/StreamPersistanceTests.java,623,,"    dag.addStream(""Stream2"", passThru.output, console.inport);"
14587,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/logical/DelayOperatorTest.java,106,,"    DefaultDelayOperator opDelay = dag.addOperator(""opDelay"", DefaultDelayOperator.class);"
14588,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/logical/DelayOperatorTest.java,108,,"    dag.addStream(""BtoC"", opB.outport1, opC.inport1);"
14589,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/logical/DelayOperatorTest.java,109,,"    dag.addStream(""CtoD"", opC.outport1, opD.inport1);"
14590,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/logical/DelayOperatorTest.java,110,,"    dag.addStream(""CtoDelay"", opC.outport2, opDelay.input);"
14591,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/logical/DelayOperatorTest.java,510,,"    Assert.assertEquals(""checkpoint "" + opA1, Checkpoint.INITIAL_CHECKPOINT, opA1.getRecoveryCheckpoint());"
14592,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/logical/LogicalPlanConfigurationTest.java,132,,"    OperatorMeta operator1 = assertNode(dag, ""operator1"");"
14593,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/logical/LogicalPlanConfigurationTest.java,133,,"    OperatorMeta operator2 = assertNode(dag, ""operator2"");"
14594,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/logical/LogicalPlanConfigurationTest.java,134,,"    OperatorMeta operator3 = assertNode(dag, ""operator3"");"
14595,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/logical/LogicalPlanConfigurationTest.java,143,,"    assertEquals(""myStringPropertyValue"", GenericTestNode.getMyStringProperty());"
14596,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/logical/LogicalPlanConfigurationTest.java,149,,"    assertNotNull(""n1n2"", n1n2);"
14597,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/logical/LogicalPlanConfigurationTest.java,206,,"      fail(""Could not load "" + resourcePath);"
14598,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/logical/LogicalPlanConfigurationTest.java,226,,"    assertEquals(""myStringProperty "" + doperator3, ""myStringPropertyValueFromTemplate"", doperator3.getMyStringProperty());"
14599,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/logical/LogicalPlanConfigurationTest.java,227,,"    assertFalse(""booleanProperty "" + doperator3, doperator3.booleanProperty);"
14600,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/logical/LogicalPlanConfigurationTest.java,356,,"  @SuppressWarnings(""UnnecessaryBoxing"")"
14601,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/logical/LogicalPlanConfigurationTest.java,359,,"    String appName = ""app1"";"
14602,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/logical/LogicalPlanConfigurationTest.java,365,,"    props.put(StreamingApplication.APEX_PREFIX + ""application."" + appName + ""."" + DAG.APPLICATION_PATH.getName(), ""/otherdir"");"
14603,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/logical/LogicalPlanConfigurationTest.java,532,,"    String appPath = app.getClass().getName().replace(""."", ""/"") + "".class"";"
14604,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/logical/LogicalPlanConfigurationTest.java,769,,"    props.put(StreamingApplication.APEX_PREFIX + ""application."" + appName + "".operator.operator1.myStringProperty"", ""apv1"");"
14605,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/logical/LogicalPlanConfigurationTest.java,1068,,"        StreamingApplication.APEX_PREFIX + ""application"" + LogicalPlanConfiguration.KEY_SEPARATOR + ""*"" + LogicalPlanConfiguration.KEY_SEPARATOR, null, Boolean.TRUE, true, true);"
14606,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/logical/LogicalPlanConfigurationTest.java,1078,,"        StreamingApplication.APEX_PREFIX + ""operator"" + LogicalPlanConfiguration.KEY_SEPARATOR + ""*"" + LogicalPlanConfiguration.KEY_SEPARATOR, null, Boolean.TRUE, true, false);"
14607,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/logical/LogicalPlanConfigurationTest.java,1179,,"    simpleAttributeOperatorHelper(OperatorContext.MEMORY_MB, StreamingApplication.APEX_PREFIX + ""application"" + LogicalPlanConfiguration.KEY_SEPARATOR + ""SimpleTestApp"" + LogicalPlanConfiguration.KEY_SEPARATOR,"
14608,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/logical/LogicalPlanTest.java,106,,"    GenericTestOperator operator2 = dag.addOperator(""operator2"", GenericTestOperator.class);"
14609,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/logical/LogicalPlanTest.java,107,,"    GenericTestOperator operator3 = dag.addOperator(""operator3"", GenericTestOperator.class);"
14610,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/logical/LogicalPlanTest.java,239,,"    TestGeneratorInputOperator input = dag.addOperator(""input1"", TestGeneratorInputOperator.class);"
14611,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/logical/LogicalPlanTest.java,370,,"      Assert.fail(""should throw ConstraintViolationException"");"
14612,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/logical/LogicalPlanTest.java,577,,"    TestGeneratorInputOperator input2 = dag.addOperator(""input2"", TestGeneratorInputOperator.class);"
14613,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/logical/LogicalPlanTest.java,591,,"      Assert.fail(""Exception expected for "" + outputOper);"
14614,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/logical/LogicalPlanTest.java,818,,"      assertEquals(""Validation Exception should match "", ""Attribute value(s) for Test_Attribute in com.datatorrent.api.DAG are not serializable"", e.getMessage());"
14615,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/logical/LogicalPlanTest.java,979,,"    dag.addStream(""Stream1"", input1.outport, x.inport1);"
14616,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/logical/module/TestModuleExpansion.java,224,,"      dag.addStream(""M1_M2&O1"", m1.mOut, m2.mIn, o1.in).setLocality(DAG.Locality.CONTAINER_LOCAL);"
14617,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/logical/module/TestModuleExpansion.java,291,,"      dag.addStream(""O1_M1"", o1.out1, m1.mIn).setLocality(DAG.Locality.THREAD_LOCAL);"
14618,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/logical/module/TestModuleExpansion.java,292,,"      dag.addStream(""O1_O2"", o1.out2, o2.in).setLocality(DAG.Locality.RACK_LOCAL);"
14619,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/logical/module/TestModuleExpansion.java,401,,"    lpc.prepareDAG(dag, app, ""ModuleApp"");"
14620,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/physical/PhysicalPlanTest.java,241,,"    GenericTestOperator node1 = dag.addOperator(""node1"", GenericTestOperator.class);"
14621,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/physical/PhysicalPlanTest.java,259,,"    Assert.assertEquals(""number of containers"", 2, plan.getContainers().size());"
14622,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/physical/PhysicalPlanTest.java,270,,"        Assert.assertEquals(""partitions "" + input, Sets.newHashSet(partitioned.partitionKeys[i]), input.partitions.partitions);"
14623,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/physical/PhysicalPlanTest.java,287,,"    GenericTestOperator node2 = dag.addOperator(""node2"", GenericTestOperator.class);"
14624,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/physical/PhysicalPlanTest.java,386,,"    dag.addStream(""o1.outport1"", o1.outport1, o2.inport1, o2.inport2);"
14625,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/physical/PhysicalPlanTest.java,405,,"    Assert.assertEquals(""stats handlers "" + o2p1, 1, o2p1.statsListeners.size());"
14626,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/physical/PhysicalPlanTest.java,419,,"    Assert.assertEquals(""sinks "" + o2p1.getOutputs(), 1, o2p1.getOutputs().size());"
14627,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/physical/PhysicalPlanTest.java,450,,"      Assert.assertEquals(""outputs "" + partition, 1, partition.getOutputs().size());"
14628,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/physical/PhysicalPlanTest.java,528,,"    Assert.assertEquals(""undeploy"", expUndeploy, ctx.undeploy);"
14629,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/physical/PhysicalPlanTest.java,529,,"    Assert.assertEquals(""deploy"", expDeploy, ctx.deploy);"
14630,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/physical/PhysicalPlanTest.java,554,,"    dag.addStream(""o2.outport1"", o2.outport1, o3parallel.inport1).setLocality(Locality.CONTAINER_LOCAL);"
14631,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/physical/PhysicalPlanTest.java,577,,"    Assert.assertEquals(""unifiers "" + node2Meta, 0, unifiers.size());"
14632,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/physical/PhysicalPlanTest.java,631,,"      Assert.assertEquals(""inputs "" + p, 2, p.getInputs().size());"
14633,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/physical/PhysicalPlanTest.java,653,,"      Assert.assertNotNull(""container "" + oper, oper.getContainer());"
14634,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/physical/PhysicalPlanTest.java,695,,"    Assert.assertEquals(""partition scaling triggered"", 1, ctx.events.size());"
14635,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/physical/PhysicalPlanTest.java,895,,"    Assert.assertEquals(""operators "" + c2, c2ExpNodes, c2ActNodes);"
14636,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/physical/PhysicalPlanTest.java,967,,"    Assert.assertEquals(""number operators "" + container1, 1, container1.getOperators().size());"
14637,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/physical/PhysicalPlanTest.java,1260,,"      Assert.assertEquals(""repartition event"", 1, ctx.events.size());"
14638,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/physical/PhysicalPlanTest.java,1664,,"    Assert.assertEquals(""partitioned map "" + o1.partitions, 4, o1.partitions.size());"
14639,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/physical/PhysicalPlanTest.java,1677,,"    Assert.assertEquals(""o1Unifiers "" + o1Meta, 2, o1Unifiers.size()); // 2 cascadingUnifiers to per-downstream partition unifier(s)"
14640,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/plan/physical/PhysicalPlanTest.java,2313,,"    Assert.assertTrue(""Operator stats listener is wrapped "", l instanceof StatsListenerWithContext);"
14641,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/stream/OiOStreamTest.java,64,,"    logger.info(""Checking the logic for sanity checking of OiO"");"
14642,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/stream/OiOStreamTest.java,85,,"    ThreadIdValidatingInputOperator inputOperator = plan.addOperator(""inputOperator"", new ThreadIdValidatingInputOperator());"
14643,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/stream/OiOStreamTest.java,87,,"    ThreadIdValidatingOutputOperator outputOperator = plan.addOperator(""outputOperator"", new ThreadIdValidatingOutputOperator());"
14644,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/stream/OiOStreamTest.java,89,,"    plan.addStream(""OiO1"", inputOperator.output, intermediateOperator.input).setLocality(Locality.THREAD_LOCAL);"
14645,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/stream/OiOStreamTest.java,90,,"    plan.addStream(""OiO2"", intermediateOperator.output, outputOperator.input).setLocality(Locality.THREAD_LOCAL);"
14646,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/stream/OiOStreamTest.java,130,,"      Assert.assertTrue(""OiO validation passed"", true);"
14647,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/stream/OiOStreamTest.java,164,,"    ThreadIdValidatingGenericIntermediateOperator intermediateOperator1 = plan.addOperator(""intermediateOperator1"", new ThreadIdValidatingGenericIntermediateOperator());"
14648,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/stream/OiOStreamTest.java,165,,"    ThreadIdValidatingGenericIntermediateOperator intermediateOperator2 = plan.addOperator(""intermediateOperator2"", new ThreadIdValidatingGenericIntermediateOperator());"
14649,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/stream/OiOStreamTest.java,168,,"    plan.addStream(""OiOin"", inputOperator.output, intermediateOperator1.input, intermediateOperator2.input).setLocality(Locality.THREAD_LOCAL);"
14650,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/stream/OiOStreamTest.java,169,,"    plan.addStream(""OiOout1"", intermediateOperator1.output, outputOperator.input).setLocality(Locality.THREAD_LOCAL);"
14651,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/stream/OiOStreamTest.java,170,,"    plan.addStream(""OiOout2"", intermediateOperator2.output, outputOperator.input2).setLocality(Locality.THREAD_LOCAL);"
14652,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/stream/OiOStreamTest.java,208,,"      Assert.assertTrue(""OiOiO extended diamond validation"", true);"
14653,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/util/LoggerUtilTest.java,103,,"    changes.put(""_.org.apache.*"", ""WARN"");"
14654,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/util/LoggerUtilTest.java,103,,"    changes.put(""_.org.apache.*"", ""WARN"");"
14655,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/util/LoggerUtilTest.java,104,,"    changes.put(""_.com.datatorrent.io.fs.*"", ""DEBUG"");"
14656,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/util/LoggerUtilTest.java,116,,"    changes.put(""_.com.datatorrent.*"", ""WARN"");"
14657,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/util/LoggerUtilTest.java,140,,"    sl4jLogger = LoggerFactory.getLogger(""_.com.datatorrent.stram.client.DTConfiguration"");"
14658,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/util/LoggerUtilTest.java,144,,"    sl4jLogger = LoggerFactory.getLogger(""_.com.datatorrent.stram.api.StramEvent"");"
14659,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/util/LoggerUtilTest.java,148,,"    sl4jLogger = LoggerFactory.getLogger(""_.com.datatorrent.stram.StreamingAppMaster"");"
14660,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/util/VersionInfoTest.java,35,,"    int c = VersionInfo.compare(""1.0"", ""1.1"");"
14661,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/util/VersionInfoTest.java,53,,"    Assert.assertTrue(VersionInfo.isCompatible(""1.10.55"", ""1.10.3""));"
14662,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/webapp/OperatorDiscoveryTest.java,226,,"    String debug = ""\n(ASM)type info for "" + TestOperator.class + "":\n"" + oper.toString(2) + ""\n"";"
14663,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/webapp/OperatorDiscoveryTest.java,228,,"    JSONArray props = oper.getJSONArray(""properties"");"
14664,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/webapp/OperatorDiscoveryTest.java,247,,"    Assert.assertEquals(portType.get(""name""), ""output1"");"
14665,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/webapp/OperatorDiscoveryTest.java,249,,"    Assert.assertEquals(portType.get(""type""), ""long"");"
14666,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/webapp/OperatorDiscoveryTest.java,254,,"    JSONArray typeArgs = portType.getJSONArray(""typeArgs"");"
14667,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/webapp/OperatorDiscoveryTest.java,256,,"        ""class "" + Object.class.getName(), typeArgs.getJSONObject(0).getJSONObject(""typeBounds"").getJSONArray(""upper"").get(0));"
14668,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/webapp/OperatorDiscoveryTest.java,256,,"        ""class "" + Object.class.getName(), typeArgs.getJSONObject(0).getJSONObject(""typeBounds"").getJSONArray(""upper"").get(0));"
14669,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/webapp/OperatorDiscoveryTest.java,256,,"        ""class "" + Object.class.getName(), typeArgs.getJSONObject(0).getJSONObject(""typeBounds"").getJSONArray(""upper"").get(0));"
14670,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/webapp/OperatorDiscoveryTest.java,261,,"    Assert.assertEquals(debug + ""type "" + wildcardType, Map.class.getName(), wildcardType.get(""type""));"
14671,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/webapp/OperatorDiscoveryTest.java,274,,"    Assert.assertEquals(inputPort.get(""optional""), true);"
14672,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/webapp/OperatorDiscoveryTest.java,375,,"    debug = ""\ntype info for "" + ExtendedOperator.class + "":\n"" + desc.toString(2) + ""\n"";"
14673,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/webapp/OperatorDiscoveryTest.java,484,,"    bean.map.put(""key1"", new Structured());"
14674,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/webapp/StramWebServicesTest.java,188,,"    assertTrue(""Too few elements"", json.length() > 1);"
14675,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/webapp/StramWebServicesTest.java,358,,"    request1.setOperatorName(""operatorName"");"
14676,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/webapp/TypeDiscoveryTest.java,136,,"    String val = root.get(0).path(""name"").asText();"
14677,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/webapp/TypeDiscoveryTest.java,137,,"    Assert.assertEquals(debug + ""port name"", ""inputT1"", val);"
14678,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/webapp/TypeDiscoveryTest.java,142,,"    val = root.get(3).path(""type"").asText();"
14679,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/webapp/TypeDiscoveryTest.java,143,,"    Assert.assertEquals(debug + ""outportList type"", ""java.lang.String"", val);"
14680,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/webapp/TypeDiscoveryTest.java,143,,"    Assert.assertEquals(debug + ""outportList type"", ""java.lang.String"", val);"
14681,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/webapp/TypeDiscoveryTest.java,151,,"    val = root.get(4).path(""typeArgs"").get(0).path(""type"").asText();"
14682,./TargetProjects/attic-apex-core/engine/src/test/java/com/datatorrent/stram/webapp/asm/FastClassIndexReaderTest.java,56,,"        Assert.assertEquals(""The wrong class is "" + classN.name, classN.name, fastClassIndexReader.getName());"
14683,./TargetProjects/attic-apex-core/engine/src/test/java/org/apache/apex/engine/events/grouping/GroupingManagerTest.java,63,,"    String failedContainerId = ""container_1"";"
14684,./TargetProjects/attic-apex-core/engine/src/test/java/org/apache/apex/engine/plugin/PluginTests.java,55,,"    Assert.assertEquals(""Type is NoOpPlugin"", discovered1.iterator().next().getClass(), NoOpPlugin.class);"
14685,./TargetProjects/attic-apex-malhar/apps/logstream/src/main/java/com/datatorrent/apps/logstream/Application.java,276,,"      throw new RuntimeException(""Exception while while adding operator "" + name, e);"
14686,./TargetProjects/attic-apex-malhar/apps/logstream/src/main/java/com/datatorrent/apps/logstream/Application1.java,59,,"    filterOperator.addFilterCondition(new String[] {""type=apache"", ""response"", ""response.equals(\""404\"")""});"
14687,./TargetProjects/attic-apex-malhar/apps/logstream/src/main/java/com/datatorrent/apps/logstream/Application1.java,61,,"    filterOperator.addFilterCondition(new String[] {""type=apache"", ""default=true""});"
14688,./TargetProjects/attic-apex-malhar/apps/logstream/src/test/java/com/datatorrent/apps/logstream/DimensionOperatorTest.java,48,,"    registry.bind(LogstreamUtil.LOG_TYPE, ""apache"");"
14689,./TargetProjects/attic-apex-malhar/apps/logstream/src/test/java/com/datatorrent/apps/logstream/DimensionOperatorTest.java,49,,"    registry.bind(LogstreamUtil.FILTER, ""ALL"");"
14690,./TargetProjects/attic-apex-malhar/apps/logstream/src/test/java/com/datatorrent/apps/logstream/DimensionOperatorTest.java,58,,"    inMap1.put(""name"", ""abc"");"
14691,./TargetProjects/attic-apex-malhar/apps/logstream/src/test/java/com/datatorrent/apps/logstream/DimensionOperatorTest.java,58,,"    inMap1.put(""name"", ""abc"");"
14692,./TargetProjects/attic-apex-malhar/apps/logstream/src/test/java/com/datatorrent/apps/logstream/DimensionOperatorTest.java,59,,"    inMap1.put(""url"", ""http://www.t.co"");"
14693,./TargetProjects/attic-apex-malhar/apps/logstream/src/test/java/com/datatorrent/apps/logstream/DimensionOperatorTest.java,59,,"    inMap1.put(""url"", ""http://www.t.co"");"
14694,./TargetProjects/attic-apex-malhar/apps/logstream/src/test/java/com/datatorrent/apps/logstream/DimensionOperatorTest.java,60,,"    inMap1.put(""value"", 25);"
14695,./TargetProjects/attic-apex-malhar/apps/logstream/src/test/java/com/datatorrent/apps/logstream/DimensionOperatorTest.java,61,,"    inMap1.put(""response"", ""404"");"
14696,./TargetProjects/attic-apex-malhar/apps/logstream/src/test/java/com/datatorrent/apps/logstream/DimensionOperatorTest.java,61,,"    inMap1.put(""response"", ""404"");"
14697,./TargetProjects/attic-apex-malhar/apps/logstream/src/test/java/com/datatorrent/apps/logstream/DimensionOperatorTest.java,66,,"    inMap2.put(""name"", ""xyz"");"
14698,./TargetProjects/attic-apex-malhar/apps/logstream/src/test/java/com/datatorrent/apps/logstream/DimensionOperatorTest.java,122,,"            Assert.assertEquals(""Count for key "" + key, new MutableDouble(1), dimObj.getCount());"
14699,./TargetProjects/attic-apex-malhar/apps/logstream/src/test/java/com/datatorrent/apps/logstream/DimensionOperatorUnifierTest.java,52,,"    tuple1.put(""m|201402121900|0|65537|131074|bytes.AVERAGE"", new DimensionObject<String>(new MutableDouble(75), ""a""));"
14700,./TargetProjects/attic-apex-malhar/apps/logstream/src/test/java/com/datatorrent/apps/logstream/DimensionOperatorUnifierTest.java,54,,"    tuple1.put(""m|201402121900|0|65537|131074|bytes.SUM"", new DimensionObject<String>(new MutableDouble(225), ""a""));"
14701,./TargetProjects/attic-apex-malhar/apps/logstream/src/test/java/com/datatorrent/apps/logstream/FilterOperatorTest.java,47,,"    oper.addFilterCondition(new String[] {""type=apache"", ""a"", ""b"", ""c_info"", ""d"", filter1});"
14702,./TargetProjects/attic-apex-malhar/apps/logstream/src/test/java/com/datatorrent/apps/logstream/LogstreamTopNTest.java,58,,"    tuple1.put(""m|201402121900|0|65535|131075|val.COUNT"", dimObja);"
14703,./TargetProjects/attic-apex-malhar/apps/logstream/src/test/java/com/datatorrent/apps/logstream/PropertyRegistry/LogstreamPropertyRegistryTest.java,35,,"    registry.bind(""ONE"", ""a"");"
14704,./TargetProjects/attic-apex-malhar/contrib/src/main/java/org/apache/apex/malhar/contrib/cassandra/CassandraPreparedStatementGenerator.java,110,,"      queryExpression.append("" "").append(pkColName).append("" = :"").append(pkColName);"
14705,./TargetProjects/attic-apex-malhar/contrib/src/main/java/org/apache/apex/malhar/contrib/cassandra/CassandraPreparedStatementGenerator.java,168,,"    queryExpTTLNotSetCollAppendListPrepend.append("" SET "");"
14706,./TargetProjects/attic-apex-malhar/contrib/src/main/java/org/apache/apex/malhar/contrib/cassandra/CassandraPreparedStatementGenerator.java,255,,"        queryExpression.append("" "" + colNameEntry + "" = "" + colNameEntry + "" + :"" + colNameEntry);"
14707,./TargetProjects/attic-apex-malhar/contrib/src/main/java/org/apache/apex/malhar/contrib/cassandra/CassandraStore.java,149,,"      throw new RuntimeException(""closing database resource"", ex);"
14708,./TargetProjects/attic-apex-malhar/contrib/src/main/java/org/apache/apex/malhar/contrib/misc/math/SumCountMap.java,139,,"    @SuppressWarnings({ ""rawtypes"", ""unchecked"" })"
14709,./TargetProjects/attic-apex-malhar/contrib/src/main/java/org/apache/apex/malhar/contrib/misc/math/SumCountMap.java,139,,"    @SuppressWarnings({ ""rawtypes"", ""unchecked"" })"
14710,./TargetProjects/attic-apex-malhar/contrib/src/main/java/org/apache/apex/malhar/contrib/mongodb/MongoDBOutputOperator.java,282,,"      objStr.append(String.format(""%02x"", b & 0xff));"
14711,./TargetProjects/attic-apex-malhar/contrib/src/main/java/org/apache/apex/malhar/contrib/r/RMax.java,107,,"      log.error(""Exception: "", ioe);"
14712,./TargetProjects/attic-apex-malhar/contrib/src/main/java/org/apache/apex/malhar/contrib/r/RMin.java,106,,"      log.error(""Exception: "", ioe);"
14713,./TargetProjects/attic-apex-malhar/contrib/src/main/java/org/apache/apex/malhar/contrib/r/RScript.java,274,,"      log.error(""Exception: "", e);"
14714,./TargetProjects/attic-apex-malhar/contrib/src/main/java/org/apache/apex/malhar/contrib/r/RStandardDeviation.java,100,,"      log.error(""Exception: "", ioe);"
14715,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/accumulo/AccumuloInputOperatorTest.java,74,,"      AccumuloTuple tuple = AccumuloTestHelper.findTuple(tuples, ""row0"",""colfam0"", ""col-0"");"
14716,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/accumulo/AccumuloInputOperatorTest.java,74,,"      AccumuloTuple tuple = AccumuloTestHelper.findTuple(tuples, ""row0"",""colfam0"", ""col-0"");"
14717,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/accumulo/AccumuloTestHelper.java,58,,"    if (!tableoper.exists(""tab1"")) {"
14718,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/accumulo/AccumuloTestHelper.java,62,,"        logger.error(""error in test helper"");"
14719,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/avro/AvroToPojoTest.java,107,,"    Assert.assertEquals(""Number of tuples"", 3, outputSink.collectedTuples.size());"
14720,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/cassandra/AbstractUpsertOutputOperatorCodecsTest.java,132,,"    assertEquals(true, userUpsertOperator.getColumnDefinitions().get(""top_scores"").isCollection());"
14721,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/cassandra/AbstractUpsertOutputOperatorCodecsTest.java,149,,"    aUser.setUserid(""user"" + System.currentTimeMillis());"
14722,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/cassandra/AbstractUpsertOutputOperatorCodecsTest.java,161,,"        ""SELECT * FROM unittests.users WHERE userid = '"" + aUser.getUserid() + ""'"");"
14723,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/cassandra/CassandraOperatorTest.java,71,,"  private static final String TABLE_NAME = ""test"";"
14724,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/cassandra/CassandraOperatorTest.java,169,,"        int age = row.getInt(""age"");"
14725,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/cassandra/CassandraOperatorTest.java,171,,"        Assert.assertEquals(""check last name"", ""abclast"", row.getString(""lastname""));"
14726,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/cassandra/CassandraOperatorTest.java,176,,"          Assert.assertEquals(""check float"", 2.0, row.getFloat(""floatValue""), 2);"
14727,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/cassandra/CassandraOperatorTest.java,184,,"          Assert.assertEquals(""check set"", set, row.getSet(""set1"", Integer.class));"
14728,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/cassandra/CassandraOperatorTest.java,185,,"          Assert.assertEquals(""check map"", map, row.getMap(""map1"", String.class, Integer.class));"
14729,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/cassandra/CassandraOperatorTest.java,186,,"          Assert.assertEquals(""check list"", list, row.getList(""list1"", Integer.class));"
14730,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/couchbase/CouchBaseOutputOperatorTest.java,161,,"    store.setUriString(""localhost:"" + port1 + "","" + ""localhost:"" + port1);"
14731,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/couchdb/CouchDBOutputOperatorTest.java,60,,"    tuple.put(""output-type"", ""map"");"
14732,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/enrich/FileEnrichmentTest.java,57,,"    oper.setLookupFields(Arrays.asList(""productId""));"
14733,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/enrich/FileEnrichmentTest.java,58,,"    oper.setIncludeFields(Arrays.asList(""productCategory""));"
14734,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/enrich/FileEnrichmentTest.java,78,,"    tuple.put(""channelId"", 4);"
14735,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/enrich/FileEnrichmentTest.java,79,,"    tuple.put(""amount"", 10.0);"
14736,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/enrich/FileEnrichmentTest.java,179,,"    oper.setLookupFields(Arrays.asList(""Year""));"
14737,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/enrich/FileEnrichmentTest.java,180,,"    oper.setIncludeFields(Arrays.asList(""Year"", ""Make"", ""Model"", ""Price"", ""Date""));"
14738,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/enrich/FileEnrichmentTest.java,180,,"    oper.setIncludeFields(Arrays.asList(""Year"", ""Make"", ""Model"", ""Price"", ""Date""));"
14739,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/enrich/JDBCLoaderTest.java,47,,"    String[] name = {""Paul"", ""Allen"", ""Teddy"", ""Mark""};"
14740,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/enrich/JDBCLoaderTest.java,49,,"    String[] address = {""California"", ""Texas"", ""Norway"", ""Rich-Mond""};"
14741,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/enrich/JDBCLoaderTest.java,136,,"    includeKeys.add(new FieldInfo(""NAME"", ""NAME"", FieldInfo.SupportType.STRING));"
14742,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/enrich/JDBCLoaderTest.java,137,,"    includeKeys.add(new FieldInfo(""AGE"", ""AGE"", FieldInfo.SupportType.INTEGER));"
14743,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/enrich/JDBCLoaderTest.java,138,,"    includeKeys.add(new FieldInfo(""ADDRESS"", ""ADDRESS"", FieldInfo.SupportType.STRING));"
14744,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/enrich/JDBCLoaderTest.java,167,,"    includeKeys.add(new FieldInfo(""SALARY"", ""SALARY"", FieldInfo.SupportType.DOUBLE));"
14745,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/enrich/MapEnricherTest.java,53,,"    oper.setLookupFields(Arrays.asList(""In1""));"
14746,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/geode/GeodeStoreTest.java,63,,"    m.put(""test1_abc"", ""123"");"
14747,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/geode/GeodeStoreTest.java,64,,"    m.put(""test1_def"", ""456"");"
14748,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/hbase/HBaseGetOperatorTest.java,83,,"      HBaseTuple tuple = HBaseTestHelper.findTuple(tuples, ""row0"", ""colfam0"", ""col-0"");"
14749,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/hbase/HBaseGetOperatorTest.java,83,,"      HBaseTuple tuple = HBaseTestHelper.findTuple(tuples, ""row0"", ""colfam0"", ""col-0"");"
14750,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/hbase/HBaseScanOperatorTest.java,83,,"      HBaseTuple tuple = HBaseTestHelper.findTuple(tuples, ""row0"", ""colfam0"", ""col-0"");"
14751,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/hbase/HBaseScanOperatorTest.java,83,,"      HBaseTuple tuple = HBaseTestHelper.findTuple(tuples, ""row0"", ""colfam0"", ""col-0"");"
14752,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/hbase/HBaseTransactionalAppendOperatorTest.java,66,,"      HBaseTuple tuple = HBaseTestHelper.getHBaseTuple(""row0"", ""colfam0"", ""col-0"");"
14753,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/hbase/HBaseTransactionalAppendOperatorTest.java,66,,"      HBaseTuple tuple = HBaseTestHelper.getHBaseTuple(""row0"", ""colfam0"", ""col-0"");"
14754,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/hbase/HBaseTransactionalPutOperatorTest.java,53,,"      t1.setColFamily(""colfam0"");"
14755,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/hbase/HBaseTransactionalPutOperatorTest.java,54,,"      t1.setColName(""street"");"
14756,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/hbase/HBaseTransactionalPutOperatorTest.java,55,,"      t1.setRow(""row1"");"
14757,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/hbase/HBaseTransactionalPutOperatorTest.java,59,,"      t2.setColName(""city"");"
14758,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/hbase/HBaseTransactionalPutOperatorTest.java,60,,"      t2.setRow(""row2"");"
14759,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/kafka/KafkaInputOperatorTest.java,194,,"    k.setInitialOffset(""earliest"");"
14760,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/kafka/KafkaOutputOperatorTest.java,134,,"    KafkaTestConsumer listener = new KafkaTestConsumer(""topic1"");"
14761,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/misc/algo/AbstractStreamPatternMatcherTest.java,93,,"    Assert.assertEquals(""Matching the output pattern with input pattern"", inputPattern, sink.collectedTuples.get(0));"
14762,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/misc/algo/FilterKeyValsTest.java,85,,"    Assert.assertEquals(""number emitted tuples"", 3, sortSink.collectedTuples.size());"
14763,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/misc/algo/FilterKeyValsTest.java,86,,"    Assert.assertEquals(""Total filtered value is "", 204, getTotal(sortSink.collectedTuples));"
14764,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/misc/algo/FilterKeysHashMapTest.java,84,,"    Assert.assertEquals(""number emitted tuples"", 1, sortSink.collectedTuples.size());"
14765,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/misc/algo/FilterKeysHashMapTest.java,85,,"    Assert.assertEquals(""Total filtered value is "", 204, getTotal(sortSink.collectedTuples.get(0)));"
14766,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/misc/algo/FilterKeysMapTest.java,78,,"    Assert.assertEquals(""number emitted tuples"", 1, sortSink.collectedTuples.size());"
14767,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/misc/algo/FilterKeysMapTest.java,79,,"    Assert.assertEquals(""Total filtered value is "", 204, getTotal(sortSink.collectedTuples.get(0)));"
14768,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/misc/algo/InvertIndexTest.java,66,,"    input.put(""a"", ""str1"");"
14769,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/misc/algo/LeastFrequentKeyMapTest.java,70,,"    Assert.assertEquals(""number emitted tuples"", 1, matchSink.count);"
14770,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/misc/algo/LeastFrequentKeyValueMapTest.java,94,,"          Assert.assertEquals(""Key \""a\"" has value "", 4, vcount);"
14771,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/misc/algo/MostFrequentKeyMapTest.java,71,,"    Assert.assertEquals(""number emitted tuples"", 1, matchSink.count);"
14772,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/misc/algo/MostFrequentKeyValueMapTest.java,94,,"          Assert.assertEquals(""Key \""a\"" has value "", 5, vcount);"
14773,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/mongodb/MongoDBOutputOperatorTest.java,129,,"    oper.setDataBase(""test"");"
14774,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/mongodb/MongoDBOutputOperatorTest.java,230,,"    keys.add(""name"");"
14775,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/mongodb/MongoDBOutputOperatorTest.java,231,,"    keys.add(""age"");"
14776,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/mongodb/MongoDBOutputOperatorTest.java,232,,"    keys.add(""mapping"");"
14777,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/parquet/ParquetFilePOJOReaderTest.java,121,,"    writeParquetFile(PARQUET_SCHEMA, new File(testMeta.dir, ""data.parquet""), data);"
14778,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/parquet/ParquetFilePOJOReaderTest.java,135,,"    Assert.assertEquals(""number tuples"", 3, outputSink.collectedTuples.size());"
14779,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/parser/CSVParserTest.java,82,,"    field1.setName(""Eid"");"
14780,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/parser/CSVParserTest.java,86,,"    field2.setName(""Name"");"
14781,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/parser/CSVParserTest.java,90,,"    field3.setName(""Salary"");"
14782,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/parser/CsvPOJOParserTest.java,78,,"    String input = ""1234,98233,adxyz,0.2,2015-03-08 03:37:12,11/12/2012,12,y,,CAMP_AD,Y,yes"";"
14783,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/parser/JsonParserTest.java,78,,"    String tuple = ""{"" + ""\""id\"": 2,"" + ""\""name\"": \""An ice sculpture\"","" + ""\""price\"": 1,"""
14784,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/parser/JsonParserTest.java,78,,"    String tuple = ""{"" + ""\""id\"": 2,"" + ""\""name\"": \""An ice sculpture\"","" + ""\""price\"": 1,"""
14785,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/parser/JsonParserTest.java,78,,"    String tuple = ""{"" + ""\""id\"": 2,"" + ""\""name\"": \""An ice sculpture\"","" + ""\""price\"": 1,"""
14786,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/parser/JsonParserTest.java,79,,"        + ""\""tags\"": [\""cold\"", \""ice\""],"" + ""\""dimensions\"": {"" + ""\""length\"": 7.0,"" + ""\""width\"" : 8.0,"""
14787,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/parser/JsonParserTest.java,79,,"        + ""\""tags\"": [\""cold\"", \""ice\""],"" + ""\""dimensions\"": {"" + ""\""length\"": 7.0,"" + ""\""width\"" : 8.0,"""
14788,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/parser/JsonParserTest.java,79,,"        + ""\""tags\"": [\""cold\"", \""ice\""],"" + ""\""dimensions\"": {"" + ""\""length\"": 7.0,"" + ""\""width\"" : 8.0,"""
14789,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/parser/JsonParserTest.java,79,,"        + ""\""tags\"": [\""cold\"", \""ice\""],"" + ""\""dimensions\"": {"" + ""\""length\"": 7.0,"" + ""\""width\"" : 8.0,"""
14790,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/parser/JsonParserTest.java,80,,"        + ""\""height\"": 9.5"" + ""},"" + ""\""warehouseLocation\"": {"" + ""\""latitude\"": -78.75,"" + ""\""longitude\"": 20.4"""
14791,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/parser/JsonParserTest.java,80,,"        + ""\""height\"": 9.5"" + ""},"" + ""\""warehouseLocation\"": {"" + ""\""latitude\"": -78.75,"" + ""\""longitude\"": 20.4"""
14792,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/parser/JsonParserTest.java,80,,"        + ""\""height\"": 9.5"" + ""},"" + ""\""warehouseLocation\"": {"" + ""\""latitude\"": -78.75,"" + ""\""longitude\"": 20.4"""
14793,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/parser/JsonParserTest.java,80,,"        + ""\""height\"": 9.5"" + ""},"" + ""\""warehouseLocation\"": {"" + ""\""latitude\"": -78.75,"" + ""\""longitude\"": 20.4"""
14794,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/parser/JsonParserTest.java,81,,"        + ""},"" + ""\""dateOfManufacture\"": \""2013/09/29\"","" + ""\""dateOfExpiry\"": \""2013\"""" + ""}"";"
14795,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/parser/JsonParserTest.java,81,,"        + ""},"" + ""\""dateOfManufacture\"": \""2013/09/29\"","" + ""\""dateOfExpiry\"": \""2013\"""" + ""}"";"
14796,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/parser/JsonParserTest.java,94,,"    Assert.assertEquals(1, jsonObject.getInt(""price""));"
14797,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/parser/JsonParserTest.java,95,,"    Assert.assertEquals(""An ice sculpture"", jsonObject.get(""name""));"
14798,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/parser/JsonParserTest.java,95,,"    Assert.assertEquals(""An ice sculpture"", jsonObject.get(""name""));"
14799,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/parser/JsonParserTest.java,96,,"    Assert.assertEquals(7.0, jsonObject.getJSONObject(""dimensions"").getDouble(""length""), 0);"
14800,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/parser/JsonParserTest.java,96,,"    Assert.assertEquals(7.0, jsonObject.getJSONObject(""dimensions"").getDouble(""length""), 0);"
14801,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/parser/RegexParserTest.java,74,,"        ""result=RESULT_SUCCESconsole_id=0000000138e91b4e58236bf32besdafasdfasdfasdfsadf  account_id=11111  platform=pik"";"
14802,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/parser/RegexParserTest.java,133,,"    String line = ""2015-10-01T03:14:49.000-07:00 lvn-d1-dev DevServer[9876]: INFO: [EVENT][SEQ=248717] "" +"
14803,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/parser/StreamingJsonParserTest.java,128,,"    Assert.assertEquals(""Number of tuples"", count, outputSink.collectedTuples.size());"
14804,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/parser/StreamingJsonParserTest.java,130,,"    Assert.assertEquals(""Name is"", ""name-5"", obj.getName());"
14805,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/parser/StreamingJsonParserTest.java,207,,"      sb.append(""\""Elective-0\"":"").append(""\"""").append(""elective-"" + count * 1).append(""\"""").append("","");"
14806,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/r/RScriptOperatorBooleanTest.java,48,,"    argTypeMap.put(""AREA"", RScript.REXP_TYPE.REXP_INT);"
14807,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/r/RScriptOperatorBooleanTest.java,49,,"    argTypeMap.put(""DUMMY"", RScript.REXP_TYPE.REXP_BOOL);"
14808,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/r/RScriptOperatorBooleanTest.java,50,,"    argTypeMap.put(""DUMMY_ARR"", RScript.REXP_TYPE.REXP_ARRAY_BOOL);"
14809,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/r/RScriptOperatorBooleanTest.java,93,,"    Assert.assertEquals(""Boolean array return mismatch : "", (Boolean)false, bArr[5]);"
14810,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/r/RScriptOperatorRealTest.java,57,,"    Assert.assertEquals(""Mismatch in number of elements emitted : "", 1, hashSink.count);"
14811,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/redis/RedisPOJOOperatorTest.java,113,,"      KeyValPair<String, Object> keyVal = new KeyValPair<String, Object>(""test_abc1"", new TestClass(1, ""abc""));"
14812,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/redis/RedisPOJOOperatorTest.java,162,,"    value.put(""Column1"", ""abc"");"
14813,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/redis/RedisPOJOOperatorTest.java,163,,"    value.put(""Column2"", ""1"");"
14814,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/util/TestPOJO.java,37,,"    fieldsInfo.add( new FieldInfo( ""name"", ""name"", SupportType.STRING ) );"
14815,./TargetProjects/attic-apex-malhar/contrib/src/test/java/org/apache/apex/malhar/contrib/util/TestPOJO.java,39,,"    fieldsInfo.add( new FieldInfo( ""address"", ""address"", SupportType.STRING ) );"
14816,./TargetProjects/attic-apex-malhar/examples/distributedistinct/src/test/java/org/apache/apex/examples/distributeddistinct/DistributedDistinctTest.java,69,,"    ResultSet resultSet = stmt.executeQuery(""SELECT col2 FROM "" + TABLE_NAME + "" WHERE col1 = 1"");"
14817,./TargetProjects/attic-apex-malhar/examples/mrmonitor/src/main/java/org/apache/apex/examples/mrmonitor/MRJobStatusOperator.java,161,,"    String url = ""http://"" + statusObj.getUri() + "":"" + statusObj.getRmPort() + ""/proxy/application_"" + statusObj.getAppId() + ""/ws/v1/mapreduce/jobs/job_"" + statusObj.getJobId();"
14818,./TargetProjects/attic-apex-malhar/examples/mrmonitor/src/main/java/org/apache/apex/examples/mrmonitor/MRJobStatusOperator.java,239,,"        JSONArray taskJsonArray = jsonObj.getJSONObject(""tasks"").getJSONArray(""task"");"
14819,./TargetProjects/attic-apex-malhar/examples/mrmonitor/src/main/java/org/apache/apex/examples/mrmonitor/MRJobStatusOperator.java,297,,"        getJsonsForLegacyTasks(statusObj, ""map"");"
14820,./TargetProjects/attic-apex-malhar/examples/mrmonitor/src/main/java/org/apache/apex/examples/mrmonitor/MRStatusObject.java,178,,"                      if (counterObj.get(""name"").equals(""PHYSICAL_MEMORY_BYTES"")) {"
14821,./TargetProjects/attic-apex-malhar/flume/src/main/java/org/apache/apex/malhar/flume/sink/FlumeSink.java,286,,"        @SuppressWarnings(""unchecked"")"
14822,./TargetProjects/attic-apex-malhar/flume/src/test/java/org/apache/apex/malhar/flume/interceptor/InterceptorTestHelper.java,103,,"        ""\001\001\001"".getBytes(),"
14823,./TargetProjects/attic-apex-malhar/flume/src/test/java/org/apache/apex/malhar/flume/interceptor/InterceptorTestHelper.java,135,,"        ""\001Second\001\001"".getBytes(),"
14824,./TargetProjects/attic-apex-malhar/flume/src/test/java/org/apache/apex/malhar/flume/storage/HDFSStorageTest.java,427,,"    Assert.assertEquals(""matched the stored value with retrieved value"", match, new String(tempData));"
14825,./TargetProjects/attic-apex-malhar/hive/src/main/java/org/apache/apex/malhar/hive/FSPojoToHiveOperator.java,83,,"  @SuppressWarnings(""unchecked"")"
14826,./TargetProjects/attic-apex-malhar/hive/src/test/java/org/apache/apex/malhar/hive/HiveMockTest.java,232,,"    mapping1.setFilename(APP_ID + ""/"" + OPERATOR_ID + ""/"" + ""2014-12-10"" + ""/"" + ""0-transaction.out.part.0"");"
14827,./TargetProjects/attic-apex-malhar/hive/src/test/java/org/apache/apex/malhar/hive/HiveMockTest.java,232,,"    mapping1.setFilename(APP_ID + ""/"" + OPERATOR_ID + ""/"" + ""2014-12-10"" + ""/"" + ""0-transaction.out.part.0"");"
14828,./TargetProjects/attic-apex-malhar/hive/src/test/java/org/apache/apex/malhar/hive/HiveMockTest.java,237,,"    partitions2.add(""2014-12-11"");"
14829,./TargetProjects/attic-apex-malhar/hive/src/test/java/org/apache/apex/malhar/hive/HiveMockTest.java,261,,"    client.execute(""select * from "" + tablename + "" where dt='2014-12-10'"");"
14830,./TargetProjects/attic-apex-malhar/hive/src/test/java/org/apache/apex/malhar/hive/HiveMockTest.java,266,,"    client.execute(""drop table "" + tablename);"
14831,./TargetProjects/attic-apex-malhar/hive/src/test/java/org/apache/apex/malhar/hive/HiveMockTest.java,271,,"      LOG.debug(""records in first date partition are {}"", recordsInDatePartition1.get(i));"
14832,./TargetProjects/attic-apex-malhar/hive/src/test/java/org/apache/apex/malhar/hive/HiveMockTest.java,280,,"      LOG.debug(""records in second date partition are {}"", recordsInDatePartition2.get(i));"
14833,./TargetProjects/attic-apex-malhar/hive/src/test/java/org/apache/apex/malhar/hive/HiveMockTest.java,341,,"    partitions2.add(""2014-12-12"");"
14834,./TargetProjects/attic-apex-malhar/kafka/kafka010/src/test/java/org/apache/apex/malhar/kafka/KafkaInputOperatorTest.java,96,,"      {true, false, ""one_to_one""},// multi cluster with single partition"
14835,./TargetProjects/attic-apex-malhar/kafka/kafka010/src/test/java/org/apache/apex/malhar/kafka/KafkaInputOperatorTest.java,97,,"      {true, false, ""one_to_many""},"
14836,./TargetProjects/attic-apex-malhar/kafka/kafka09/src/test/java/org/apache/apex/malhar/kafka/KafkaInputOperatorTest.java,94,,"      {true, false, ""one_to_one""},// multi cluster with single partition"
14837,./TargetProjects/attic-apex-malhar/kafka/kafka09/src/test/java/org/apache/apex/malhar/kafka/KafkaInputOperatorTest.java,95,,"      {true, false, ""one_to_many""},"
14838,./TargetProjects/attic-apex-malhar/kudu/src/test/java/org/apache/apex/malhar/kudu/KuduClientTestCommons.java,116,,"    ColumnSchema intRowKeyCol = new ColumnSchema.ColumnSchemaBuilder(""introwkey"", Type.INT32)"
14839,./TargetProjects/attic-apex-malhar/kudu/src/test/java/org/apache/apex/malhar/kudu/KuduClientTestCommons.java,121,,"    ColumnSchema stringRowKeyCol = new ColumnSchema.ColumnSchemaBuilder(""stringrowkey"", Type.STRING)"
14840,./TargetProjects/attic-apex-malhar/kudu/src/test/java/org/apache/apex/malhar/kudu/KuduClientTestCommons.java,126,,"    ColumnSchema timestampRowKey = new ColumnSchema.ColumnSchemaBuilder(""timestamprowkey"", Type.UNIXTIME_MICROS)"
14841,./TargetProjects/attic-apex-malhar/kudu/src/test/java/org/apache/apex/malhar/kudu/KuduCreateUpdateDeleteOutputOperatorTest.java,90,,"    unitTestTablePojo.setBinarydata(ByteBuffer.wrap(""stringdata"".getBytes()));"
14842,./TargetProjects/attic-apex-malhar/library/src/main/java/org/apache/apex/malhar/lib/appdata/gpo/GPOType.java,115,,"          throw new UnsupportedOperationException(""Type "" + type);"
14843,./TargetProjects/attic-apex-malhar/library/src/main/java/org/apache/apex/malhar/lib/appdata/gpo/GPOType.java,152,,"        throw new IllegalArgumentException(""The key "" + field + "" does not have a valid bool value."", ex);"
14844,./TargetProjects/attic-apex-malhar/library/src/main/java/org/apache/apex/malhar/lib/appdata/gpo/GPOType.java,390,,"        throw new IllegalArgumentException(""The key "" + field + "" has a value "" + val"
14845,./TargetProjects/attic-apex-malhar/library/src/main/java/org/apache/apex/malhar/lib/appdata/gpo/GPOUtils.java,88,,"  @SuppressWarnings(""unchecked"")"
14846,./TargetProjects/attic-apex-malhar/library/src/main/java/org/apache/apex/malhar/lib/appdata/gpo/GPOUtils.java,248,,"        throw new IllegalArgumentException(""The key "" + field + "" does not have a valid "" + type + "" value."", ex);"
14847,./TargetProjects/attic-apex-malhar/library/src/main/java/org/apache/apex/malhar/lib/appdata/gpo/GPOUtils.java,252,,"        throw new IllegalArgumentException(""The key "" + field + "" has a value "" + intVal"
14848,./TargetProjects/attic-apex-malhar/library/src/main/java/org/apache/apex/malhar/lib/appdata/gpo/GPOUtils.java,314,,"                                           + "" does not have a valid double value."","
14849,./TargetProjects/attic-apex-malhar/library/src/main/java/org/apache/apex/malhar/lib/appdata/gpo/GPOUtils.java,347,,"        throw new IllegalArgumentException(""The index "" + index + "" does not have a valid "" + type + "" value."", ex);"
14850,./TargetProjects/attic-apex-malhar/library/src/main/java/org/apache/apex/malhar/lib/appdata/schemas/DimensionalConfigurationSchema.java,656,,"              throw new UnsupportedOperationException(""The aggregator """
14851,./TargetProjects/attic-apex-malhar/library/src/main/java/org/apache/apex/malhar/lib/appdata/schemas/SchemaUtils.java,105,,"    @SuppressWarnings(""unchecked"")"
14852,./TargetProjects/attic-apex-malhar/library/src/main/java/org/apache/apex/malhar/lib/db/jdbc/JdbcNonTransactionalStore.java,35,,"    throw new RuntimeException(""Does not support transactions."");"
14853,./TargetProjects/attic-apex-malhar/library/src/main/java/org/apache/apex/malhar/lib/dimensions/aggregator/AggregatorCumSum.java,113,,"    @SuppressWarnings(""unchecked"")"
14854,./TargetProjects/attic-apex-malhar/library/src/main/java/org/apache/apex/malhar/lib/io/WidgetOutputOperator.java,173,,"        schemaObj.put(""type"", ""timeseries"");"
14855,./TargetProjects/attic-apex-malhar/library/src/main/java/org/apache/apex/malhar/lib/state/managed/AbstractManagedStateImpl.java,291,,"  @SuppressWarnings(""SynchronizationOnLocalVariableOrMethodParameter"")"
14856,./TargetProjects/attic-apex-malhar/library/src/main/java/org/apache/apex/malhar/lib/state/spillable/SpillableComplexComponentImpl.java,181,,"    throw new UnsupportedOperationException(""Unsupported Operation"");"
14857,./TargetProjects/attic-apex-malhar/library/src/main/java/org/apache/apex/malhar/lib/util/PojoUtils.java,137,,"  @SuppressWarnings(""unchecked"")"
14858,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/algo/CompareExceptCountMapTest.java,77,,"    Assert.assertEquals(""number emitted tuples"", 1, exceptSink.count);"
14859,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/algo/FilterValuesTest.java,74,,"    Assert.assertEquals(""number emitted tuples"", 3, sortSink.collectedTuples.size());"
14860,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/algo/FilterValuesTest.java,75,,"    Assert.assertEquals(""Total filtered value is "", 204, getTotal(sortSink.collectedTuples));"
14861,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/algo/LeastFrequentKeyTest.java,63,,"    Assert.assertEquals(""number emitted tuples"", 1, matchSink.count);"
14862,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/algo/MostFrequentKeyTest.java,64,,"    Assert.assertEquals(""number emitted tuples"", 1, matchSink.count);"
14863,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/algo/UniqueCounterTest.java,73,,"    Assert.assertEquals(""number emitted tuples"", numTuples, acount);"
14864,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/algo/UniqueValueCountTest.java,55,,"    uniqueCountOper.input.process(new KeyValPair<String, Object>(""test1"", 1));"
14865,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/algo/UniqueValueCountTest.java,76,,"    uniqueCountOper.input.process(new KeyValPair<String, Object>(""test2"", 1));"
14866,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/datastructs/CacheLRUSynchronousFlushTest.java,64,,"    Assert.assertEquals(""Expecting one key"", 1, fl.flushedKeys.size());"
14867,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/datastructs/CacheLRUSynchronousFlushTest.java,65,,"    Assert.assertEquals(""Expecting one value"", 1, fl.flushedValues.size());"
14868,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/datastructs/CacheLRUSynchronousFlushTest.java,67,,"    Assert.assertEquals(""The keys must equal"", key, fl.flushedKeys.get(0));"
14869,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/datastructs/CacheLRUSynchronousFlushTest.java,68,,"    Assert.assertEquals(""The values must equal"", value, fl.flushedValues.get(0));"
14870,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/datastructs/DimensionalTableTest.java,58,,"    Integer point = table.getDataPoint(Lists.newArrayList(""google"", ""taco bell"", ""Ukraine""));"
14871,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/datastructs/DimensionalTableTest.java,62,,"    selectionValues.put(""publisher"", ""amazon"");"
14872,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/datastructs/DimensionalTableTest.java,62,,"    selectionValues.put(""publisher"", ""amazon"");"
14873,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/datastructs/DimensionalTableTest.java,63,,"    selectionValues.put(""advertiser"", ""burger king"");"
14874,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/datastructs/DimensionalTableTest.java,64,,"    selectionValues.put(""location"", ""Czech"");"
14875,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/datastructs/DimensionalTableTest.java,78,,"    selectionKeys.put(""publisher"", ""twitter"");"
14876,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/datastructs/DimensionalTableTest.java,108,,"    table.appendRow(1, ""google"", ""starbucks"", ""CA"");"
14877,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/gpo/GPOUtilsTest.java,186,,"    Assert.assertEquals(""Values must equal"", tbooleanv, dgpo.getField(tboolean));"
14878,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/gpo/GPOUtilsTest.java,247,,"    Assert.assertEquals(""Results must equal"", tbooleanv, gpom.getField(tboolean));"
14879,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/query/SimpleDoneQueryQueueManagerTest.java,46,,"    Assert.assertEquals(""Should return back null."", null, qb);"
14880,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/query/SimpleDoneQueryQueueManagerTest.java,80,,"    Assert.assertEquals(""Should return same query."", query, qb.getQuery());"
14881,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/query/WEQueryQueueManagerTest.java,39,,"    Assert.assertEquals(""The queries must match."", null, queryD);"
14882,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/query/WEQueryQueueManagerTest.java,154,,"    Assert.assertEquals(""Query ids must equal."", ""0"", query.getId());"
14883,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/query/WEQueryQueueManagerTest.java,167,,"      Assert.assertEquals(""The number of queries must match."", numQueries, qc);"
14884,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/schemas/DataResultSnapshotSerializerTest.java,68,,"    Assert.assertEquals(""The json doesn't match."", jo1.get(""a""), rjo1.get(""a""));"
14885,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/schemas/DimensionalConfigurationSchemaTest.java,73,,"    final String keyName1Type = ""string"";"
14886,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/schemas/DimensionalConfigurationSchemaTest.java,76,,"    final String valueName1 = ""valueName1"";"
14887,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/schemas/DimensionalConfigurationSchemaTest.java,83,,"        ""[{\""name\"":\"""" + keyName1 + ""\"",\""type\"":\"""" + keyName1Type + ""\""},\n"" +"
14888,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/schemas/DimensionalConfigurationSchemaTest.java,83,,"        ""[{\""name\"":\"""" + keyName1 + ""\"",\""type\"":\"""" + keyName1Type + ""\""},\n"" +"
14889,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/schemas/DimensionalConfigurationSchemaTest.java,83,,"        ""[{\""name\"":\"""" + keyName1 + ""\"",\""type\"":\"""" + keyName1Type + ""\""},\n"" +"
14890,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/schemas/DimensionalConfigurationSchemaTest.java,84,,"        ""{\""name\"":\"""" + keyName2 + ""\"",\""type\"":\"""" + keyName2Type + ""\""}],\n"" +"
14891,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/schemas/DimensionalConfigurationSchemaTest.java,84,,"        ""{\""name\"":\"""" + keyName2 + ""\"",\""type\"":\"""" + keyName2Type + ""\""}],\n"" +"
14892,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/schemas/DimensionalConfigurationSchemaTest.java,107,,"    Assert.assertTrue(""First descriptor must contain this key"", des.getDimensionsDescriptorIDToKeyDescriptor().get(0).getFields().getFields().contains(keyName1));"
14893,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/schemas/DimensionalConfigurationSchemaTest.java,130,,"    Assert.assertTrue(""Incorrect aggregate fields."","
14894,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/schemas/DimensionalConfigurationSchemaTest.java,131,,"        des.getDimensionsDescriptorIDToAggregatorToAggregateDescriptor().get(0).get(""MIN"").getFields().getFields().equals(minAggFields));"
14895,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/schemas/DimensionalConfigurationSchemaTest.java,133,,"        des.getDimensionsDescriptorIDToAggregatorToAggregateDescriptor().get(0).get(""MAX"").getFields().getFields().equals(maxAggFields));"
14896,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/schemas/DimensionalConfigurationSchemaTest.java,135,,"        des.getDimensionsDescriptorIDToAggregatorToAggregateDescriptor().get(1).get(""SUM"").getFields().getFields().equals(sumAggFields));"
14897,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/schemas/DimensionalConfigurationSchemaTest.java,137,,"        des.getDimensionsDescriptorIDToAggregatorToAggregateDescriptor().get(1).get(""COUNT"").getFields().getFields().equals(countAggFields));"
14898,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/schemas/DimensionalConfigurationSchemaTest.java,231,,"    Set<String> keys = Sets.newHashSet(""publisher"", ""advertiser"", ""location"");"
14899,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/schemas/DimensionalConfigurationSchemaTest.java,231,,"    Set<String> keys = Sets.newHashSet(""publisher"", ""advertiser"", ""location"");"
14900,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/schemas/DimensionalConfigurationSchemaTest.java,231,,"    Set<String> keys = Sets.newHashSet(""publisher"", ""advertiser"", ""location"");"
14901,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/schemas/DimensionalSchemaTest.java,71,,"    valueToType.put(""impressions:SUM"", ""long"");"
14902,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/schemas/DimensionalSchemaTest.java,73,,"    valueToType.put(""cost:SUM"", ""double"");"
14903,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/schemas/DimensionalSchemaTest.java,76,,"    @SuppressWarnings(""unchecked"")"
14904,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/schemas/DimensionalSchemaTest.java,78,,"        Sets.newHashSet(""location""),"
14905,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/schemas/DimensionalSchemaTest.java,79,,"        Sets.newHashSet(""advertiser""),"
14906,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/schemas/DimensionalSchemaTest.java,80,,"        Sets.newHashSet(""publisher""),"
14907,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/schemas/DimensionalSchemaTest.java,89,,"        Lists.newArrayList(""string"", ""string"", ""string""),"
14908,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/schemas/SchemaQueryTest.java,37,,"        ""\""id\"":\"""" + id + ""\"","" +"
14909,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/schemas/SchemaRegistryMultipleTest.java,39,,"    schemaAdsKeys.put(""type"", ""ads"");"
14910,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/snapshot/AppDataSnapshotServerMapTest.java,66,,"    data.put(""word"", ""a"");"
14911,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/appdata/snapshot/AppDataSnapshotServerMapTest.java,67,,"    data.put(""count"", 2);"
14912,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/db/KeyValueStoreOperatorTest.java,58,,"        @SuppressWarnings(""unchecked"")"
14913,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/db/KeyValueStoreOperatorTest.java,92,,"    testStore.put(""test_abc"", ""789"");"
14914,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/db/KeyValueStoreOperatorTest.java,92,,"    testStore.put(""test_abc"", ""789"");"
14915,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/db/KeyValueStoreOperatorTest.java,93,,"    testStore.put(""test_def"", ""456"");"
14916,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/db/KeyValueStoreOperatorTest.java,93,,"    testStore.put(""test_def"", ""456"");"
14917,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/db/KeyValueStoreOperatorTest.java,94,,"    testStore.put(""test_ghi"", ""123"");"
14918,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/db/KeyValueStoreOperatorTest.java,94,,"    testStore.put(""test_ghi"", ""123"");"
14919,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/db/TransactionableKeyValueStoreOperatorTest.java,69,,"      m.put(""test_abc"", ""123"");"
14920,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/db/TransactionableKeyValueStoreOperatorTest.java,70,,"      m.put(""test_def"", ""456"");"
14921,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/db/TransactionableKeyValueStoreOperatorTest.java,75,,"      m.put(""test_ghi"", ""789"");"
14922,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/db/jdbc/JdbcNonTransactionalBatchOutputOperatorTest.java,156,,"    Assert.assertEquals(""Commit window id "", 0, outputOperator.getStore().getCommittedWindowId(APP_ID, OPERATOR_ID));"
14923,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/db/jdbc/JdbcNonTransactionalBatchOutputOperatorTest.java,157,,"    Assert.assertEquals(""Batch should be written"", BATCH_SIZE,"
14924,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/db/jdbc/JdbcNonTransactionalStoreTest.java,38,,"    Assert.fail(""Exception should be thrown"");"
14925,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/db/jdbc/JdbcOperatorTest.java,154,,"      String createMetaTable = ""CREATE TABLE IF NOT EXISTS "" + JdbcTransactionalStore.DEFAULT_META_TABLE + "" ( "" + JdbcTransactionalStore.DEFAULT_APP_ID_COL + "" VARCHAR(100) NOT NULL, "" + JdbcTransactionalStore.DEFAULT_OPERATOR_ID_COL + "" INT NOT NULL, "" + JdbcTransactionalStore.DEFAULT_WINDOW_COL + "" BIGINT NOT NULL, "" + ""UNIQUE ("" + JdbcTransactionalStore.DEFAULT_APP_ID_COL + "", "" + JdbcTransactionalStore.DEFAULT_OPERATOR_ID_COL + "", "" + JdbcTransactionalStore.DEFAULT_WINDOW_COL + "") "" + "")"";"
14926,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/db/jdbc/JdbcOperatorTest.java,178,,"      String cleanTable = ""delete from "" + TABLE_NAME;"
14927,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/db/jdbc/JdbcPojoOperatorTest.java,89,,"        String countQuery = ""SELECT count(*) from "" + TABLE_NAME;"
14928,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/db/jdbc/JdbcPojoOperatorTest.java,94,,"        throw new RuntimeException(""fetching count"", e);"
14929,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/db/jdbc/JdbcPojoOperatorTest.java,235,,"    Assert.assertEquals(""rows in db"", 10, outputOperator.getNumOfEventsInStore());"
14930,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/db/jdbc/JdbcPojoOperatorTest.java,272,,"      events.add(new TestPOJOEvent(i, ""test"" + i));"
14931,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/db/jdbc/JdbcPojoOperatorTest.java,593,,"    Assert.assertEquals(""rows from db"", 10, sink.collectedTuples.size());"
14932,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/db/jdbc/JdbcPojoPollableOpeartorTest.java,151,,"    Assert.assertEquals(""rows from db"", 5, sink1.collectedTuples.size());"
14933,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/db/jdbc/JdbcPojoPollableOpeartorTest.java,154,,"      Assert.assertTrue(""date"", pojoEvent.getStartDate() instanceof Date);"
14934,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/formatter/XmlFormatterTest.java,98,,"    e.setName(""john"");"
14935,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/formatter/XmlFormatterTest.java,109,,"        + ""</EmployeeBean>"";"
14936,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/fs/GenericFileOutputOperatorTest.java,52,,"    writer.setOutputFileName(""output.txt"");"
14937,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/HttpGetMapOperatorTest.java,105,,"    Assert.assertEquals(""parameter value"", VAL1, receivedRequests.get(0).get(KEY1)[0]);"
14938,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/HttpMultiValuedMapGetOperatorTest.java,108,,"    Assert.assertEquals(""parameter value"", VAL1, receivedRequests.get(0).get(KEY1)[0]);"
14939,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/IdempotentStorageManagerTest.java,102,,"    data.put(1, ""one"");"
14940,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/IdempotentStorageManagerTest.java,103,,"    data.put(2, ""two"");"
14941,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/IdempotentStorageManagerTest.java,104,,"    data.put(3, ""three"");"
14942,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/block/FSLineReaderTest.java,129,,"      @SuppressWarnings(""unchecked"")"
14943,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/AbstractFileInputOperatorTest.java,125,,"      FileUtils.write(new File(testMeta.dir + subdir, ""file"" + file), StringUtils.join(lines, '\n'));"
14944,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/AbstractFileInputOperatorTest.java,131,,"    @SuppressWarnings({""unchecked"", ""rawtypes""})"
14945,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/AbstractFileInputOperatorTest.java,131,,"    @SuppressWarnings({""unchecked"", ""rawtypes""})"
14946,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/AbstractFileInputOperatorTest.java,152,,"    Assert.assertEquals(""number tuples"", expectedNumTuples, queryResults.collectedTuples.size());"
14947,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/AbstractFileInputOperatorTest.java,153,,"    Assert.assertEquals(""lines"", allLines, new HashSet<String>(queryResults.collectedTuples));"
14948,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/AbstractFileInputOperatorTest.java,194,,"    File testFile = new File(testMeta.dir + subdir04, ""file0"");"
14949,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/AbstractFileInputOperatorTest.java,226,,"    scanner.setFilePatternRegexp("".*partition([\\d]*)"");"
14950,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/AbstractFileInputOperatorTest.java,231,,"      FileUtils.write(new File(testMeta.dir, ""partition00"" + file), """");"
14951,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/AbstractFileInputOperatorTest.java,301,,"      FileUtils.write(new File(testMeta.dir, ""partition00"" + file), ""a\nb\nc\n"");"
14952,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/AbstractFileInputOperatorTest.java,712,,"    manager.setStatePath(testMeta.dir + ""/recovery"");"
14953,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/AbstractFileInputOperatorTest.java,720,,"    oper.getScanner().setFilePatternRegexp("".*file[\\d]"");"
14954,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/AbstractFileOutputOperatorTest.java,324,,"    String correctContents = ""0\n"" + ""1\n"" + ""2\n"" + ""3\n"";"
14955,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/AbstractFileOutputOperatorTest.java,324,,"    String correctContents = ""0\n"" + ""1\n"" + ""2\n"" + ""3\n"";"
14956,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/AbstractFileOutputOperatorTest.java,324,,"    String correctContents = ""0\n"" + ""1\n"" + ""2\n"" + ""3\n"";"
14957,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/AbstractFileOutputOperatorTest.java,324,,"    String correctContents = ""0\n"" + ""1\n"" + ""2\n"" + ""3\n"";"
14958,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/AbstractFileOutputOperatorTest.java,389,,"    String correctContents = ""0\n"" + ""1\n"" + ""4\n"" + ""5\n"" + ""6\n"" + ""7\n"";"
14959,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/AbstractFileOutputOperatorTest.java,389,,"    String correctContents = ""0\n"" + ""1\n"" + ""4\n"" + ""5\n"" + ""6\n"" + ""7\n"";"
14960,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/AbstractFileOutputOperatorTest.java,389,,"    String correctContents = ""0\n"" + ""1\n"" + ""4\n"" + ""5\n"" + ""6\n"" + ""7\n"";"
14961,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/AbstractFileOutputOperatorTest.java,389,,"    String correctContents = ""0\n"" + ""1\n"" + ""4\n"" + ""5\n"" + ""6\n"" + ""7\n"";"
14962,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/AbstractFileOutputOperatorTest.java,633,,"    String correctContents = ""0\n"" + ""2\n"" + ""6\n"" + ""8\n"";"
14963,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/AbstractFileOutputOperatorTest.java,638,,"    correctContents = ""1\n"" + ""3\n"" + ""7\n"" + ""9\n"";"
14964,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/AbstractFileOutputOperatorTest.java,1510,,"    Assert.assertEquals(""Number of part files"", 1, files.size());"
14965,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/AbstractFileOutputOperatorTest.java,1511,,"    Assert.assertEquals(""Part file names"", fileNames, getFileNames(files));"
14966,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/AbstractThroughputFileInputOperatorTest.java,74,,"      underTest.pendingFiles.add(""file-"" + i);"
14967,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/FileSplitterBaseTest.java,138,,"    Assert.assertEquals(""Blocks"", 12, baseTestMeta.blockMetadataSink.collectedTuples.size());"
14968,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/FileSplitterInputTest.java,72,,"      File created = new File(dataDirectory, ""file"" + file + "".txt"");"
14969,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/FileSplitterInputTest.java,155,,"    Assert.assertEquals(""File metadata"", 12, testMeta.fileMetadataSink.collectedTuples.size());"
14970,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/FileSplitterInputTest.java,159,,"      Assert.assertTrue(""path: "" + metadata.getFilePath(), testMeta.filePaths.contains(metadata.getFilePath()));"
14971,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/FileSplitterInputTest.java,214,,"    Assert.assertEquals(""Blocks"", 12, testMeta.blockMetadataSink.collectedTuples.size());"
14972,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/FileSplitterInputTest.java,232,,"    Assert.assertEquals(""Files"", 12, testMeta.fileMetadataSink.collectedTuples.size());"
14973,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/FileSplitterInputTest.java,280,,"    File f13 = new File(testMeta.dataDirectory, ""file13"" + "".txt"");"
14974,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/FileSplitterInputTest.java,283,,"      lines.add(""f13"" + ""l"" + line);"
14975,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/FileSplitterInputTest.java,295,,"    Assert.assertEquals(""window 2: blocks"", 1, testMeta.blockMetadataSink.collectedTuples.size());"
14976,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/FileSplitterTest.java,100,,"          File created = new File(this.dataDirectory, ""file"" + file + "".txt"");"
14977,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/FileSplitterTest.java,166,,"    Assert.assertEquals(""Blocks"", 12, testMeta.blockMetadataSink.collectedTuples.size());"
14978,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/FileSplitterTest.java,181,,"    Assert.assertEquals(""Files"", 12, testMeta.fileMetadataSink.collectedTuples.size());"
14979,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/TailFsInputOperatorTest.java,44,,"    out.write(""Hello Java\n"");"
14980,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/TailFsInputOperatorTest.java,79,,"    out.write(""Hello Java"");"
14981,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/fs/TailFsInputOperatorTest.java,166,,"      file.renameTo(new File(filePath + "".bk""));"
14982,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/jms/JMSObjectInputOperatorTest.java,127,,"    Assert.assertEquals(""num of messages"", 10, testMeta.sink.collectedTuples.size());"
14983,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/io/jms/JMSOutputOperatorTest.java,257,,"    Assert.assertEquals(""Batch should be written"", BATCH_SIZE, listener.receivedData.size());"
14984,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/join/MapTimeBasedJoinOperator.java,69,,"    tuple1.put(""Name"", ""Anil"");"
14985,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/join/MapTimeBasedJoinOperator.java,75,,"    order1.put(""OID"", 102);"
14986,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/join/MapTimeBasedJoinOperator.java,77,,"    order1.put(""Amount"", 300);"
14987,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/join/POJOInnerJoinOperatorTest.java,153,,"    oper.setIncludeFieldStr(""ID,Name;OID,Amount"");"
14988,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/join/POJOInnerJoinOperatorTest.java,155,,"    oper.setRightKeyExpression(""CID"");"
14989,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/join/POJOInnerJoinOperatorTest.java,169,,"    @SuppressWarnings({""unchecked"", ""rawtypes""})"
14990,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/join/POJOInnerJoinOperatorTest.java,169,,"    @SuppressWarnings({""unchecked"", ""rawtypes""})"
14991,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/join/POJOInnerJoinOperatorTest.java,174,,"    Customer tuple = new Customer(1, ""Anil"");"
14992,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/join/POJOInnerJoinOperatorTest.java,188,,"    Assert.assertEquals(""Number of tuple emitted "", 1, sink.collectedTuples.size());"
14993,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/join/POJOInnerJoinOperatorTest.java,191,,"    Assert.assertEquals(""value of ID :"", tuple.ID, emitted.ID);"
14994,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/join/POJOInnerJoinOperatorTest.java,192,,"    Assert.assertEquals(""value of Name :"", tuple.Name, emitted.Name);"
14995,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/join/POJOInnerJoinOperatorTest.java,194,,"    Assert.assertEquals(""value of OID: "", order.OID, emitted.OID);"
14996,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/join/POJOInnerJoinOperatorTest.java,195,,"    Assert.assertEquals(""value of Amount: "", order.Amount, emitted.Amount);"
14997,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/join/POJOTimeBasedJoinOperatorTest.java,127,,"    oper.setIncludeFields(""ID,Name;OID,Amount"");"
14998,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/join/POJOTimeBasedJoinOperatorTest.java,128,,"    oper.setKeyFields(""ID,CID"");"
14999,./TargetProjects/attic-apex-malhar/library/src/test/java/org/apache/apex/malhar/lib/join/POJOTimeBasedJoinOperatorTest.java,134,,"    @SuppressWarnings({""unchecked"", ""rawtypes""})"
