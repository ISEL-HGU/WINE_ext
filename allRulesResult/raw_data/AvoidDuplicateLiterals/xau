20000,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/ToIsmRecordForMultimapDoFnFactoryTest.java,102,,"            ImmutableMap.of(""@type"", ""kind:var_int32""),"
20001,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/UserParDoFnFactoryTest.java,171,,"            BatchModeExecutionContext.forTesting(options, ""testStage""),"
20002,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/UserParDoFnFactoryTest.java,177,,"    parDoFn.processElement(WindowedValue.valueInGlobalWindow(""foo""));"
20003,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/WindmillStateCacheTest.java,156,,"    assertNull(keyCache.get(StateNamespaces.global(), new TestStateTag(""tag1"")));"
20004,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/WindmillStateCacheTest.java,157,,"    assertNull(keyCache.get(windowNamespace(0), new TestStateTag(""tag2"")));"
20005,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/WindmillStateCacheTest.java,158,,"    assertNull(keyCache.get(triggerNamespace(0, 0), new TestStateTag(""tag3"")));"
20006,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/WindmillStateCacheTest.java,280,,"            .forComputation(""comp1"")"
20007,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/WindmillStateCacheTest.java,281,,"            .forKey(computationKey(""comp1"", ""key1"", SHARDING_KEY), 0L, 0L)"
20008,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/WindmillStateCacheTest.java,286,,"            .forKey(computationKey(""comp1"", ""key2"", SHARDING_KEY), 0L, 10L)"
20009,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/WindmillStateCacheTest.java,290,,"            .forComputation(""comp2"")"
20010,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/WindmillStateCacheTest.java,431,,"    keyCache4.put(StateNamespaces.global(), new TestStateTag(""tag4""), new TestState(""g4""), 4);"
20011,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/WindmillStateInternalsTest.java,104,,"      StateTags.combiningValueFromInputInternal(""combining"", VarIntCoder.of(), Sum.ofIntegers());"
20012,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/WindmillStateInternalsTest.java,145,,"                .forComputation(""comp"")"
20013,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/WindmillStateInternalsTest.java,202,,"    key(NAMESPACE, ""map"").writeTo(keyStream);"
20014,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/WindmillStateInternalsTest.java,220,,"    final String tag = ""tag"";"
20015,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/WindmillStateInternalsTest.java,299,,"    final String tag1 = ""tag1"";"
20016,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/WindmillStateInternalsTest.java,300,,"    final String tag2 = ""tag2"";"
20017,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/WindmillStateInternalsTest.java,590,,"        StateTags.orderedList(""orderedList"", StringUtf8Coder.of());"
20018,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/WindmillStateInternalsTest.java,604,,"        TimestampedValue.of(""hello"", Instant.ofEpochMilli(100));"
20019,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/WindmillStateInternalsTest.java,606,,"        TimestampedValue.of(""world"", Instant.ofEpochMilli(75));"
20020,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/WindmillStateInternalsTest.java,608,,"        TimestampedValue.of(""goodbye"", Instant.ofEpochMilli(50));"
20021,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/WindmillStateInternalsTest.java,921,,"    StateTag<BagState<String>> addr = StateTags.bag(""bag"", StringUtf8Coder.of());"
20022,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/WindmillStateInternalsTest.java,1243,,"        StateTags.watermarkStateInternal(""watermark"", TimestampCombiner.EARLIEST);"
20023,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/WindmillStateInternalsTest.java,1513,,"    StateTag<ValueState<String>> addr = StateTags.value(""value"", StringUtf8Coder.of());"
20024,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/WorkItemStatusClientTest.java,351,,"            .setNameAndKind(new NameAndKind().setName(""some-counter"").setKind(Kind.SUM.toString()))"
20025,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/WorkerCustomSourcesTest.java,204,,"  @SuppressWarnings(""unchecked"")"
20026,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/counters/CounterTest.java,88,,"        ""getAndReset should return previous value"", 100L + 17L + 49L, (long) c.getAndReset());"
20027,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/fn/control/DataflowSideInputHandlerFactoryTest.java,87,,"                    ImmutableList.of(KV.of(""foo"", 1), KV.of(""foo"", 4), KV.of(""foo"", 3)));"
20028,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/fn/control/RegisterAndProcessBundleOperationTest.java,106,,"          .addProcessBundleDescriptor(BeamFnApi.ProcessBundleDescriptor.newBuilder().setId(""555""))"
20029,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/fn/control/RegisterAndProcessBundleOperationTest.java,223,,"            .setInstructionId(""778"")"
20030,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/fn/control/RegisterAndProcessBundleOperationTest.java,331,,"                                              .setTransformId(""testPTransformId"")"
20031,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/fn/control/RegisterAndProcessBundleOperationTest.java,350,,"                                      .setData(ByteString.copyFromUtf8(""ABC"")))"
20032,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/fn/control/RegisterAndProcessBundleOperationTest.java,435,,"                                      .setSideInputId(""testSideInputId"")"
20033,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/graph/CreateRegisterFnOperationFunctionTest.java,84,,"        String.format(""Expected network %s but got network %s"", expectedNetwork, appliedNetwork),"
20034,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/graph/CreateRegisterFnOperationFunctionTest.java,91,,"    Node readNode = createReadNode(""Read"", Nodes.ExecutionLocation.RUNNER_HARNESS);"
20035,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/graph/CreateRegisterFnOperationFunctionTest.java,93,,"    Node readNodeOut = createInstructionOutputNode(""Read.out"");"
20036,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/graph/CreateRegisterFnOperationFunctionTest.java,122,,"    @SuppressWarnings({""unchecked"", ""rawtypes""})"
20037,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/graph/CreateRegisterFnOperationFunctionTest.java,122,,"    @SuppressWarnings({""unchecked"", ""rawtypes""})"
20038,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/graph/DeduceNodeLocationsFunctionTest.java,90,,"    Node unknown = createReadNode(""Unknown"", CUSTOM_SOURCE);"
20039,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/graph/MapTaskToNetworkFunctionTest.java,72,,"    InstructionOutput readOutput = createInstructionOutput(""Read.out"");"
20040,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/graph/MapTaskToNetworkFunctionTest.java,73,,"    ParallelInstruction read = createParallelInstruction(""Read"", readOutput);"
20041,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/graph/RemoveFlattenInstructionsFunctionTest.java,82,,"        InstructionOutputNode.create(new InstructionOutput().setName(""C.out""), PCOLLECTION_ID);"
20042,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/graph/RemoveFlattenInstructionsFunctionTest.java,129,,"        InstructionOutputNode.create(new InstructionOutput().setName(""B.out1""), PCOLLECTION_ID);"
20043,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/logging/DataflowWorkerLoggingHandlerTest.java,125,,"    DataflowWorkerLoggingMDC.setJobId(""testJobId"");"
20044,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/logging/DataflowWorkerLoggingHandlerTest.java,130,,"    LogRecord record = createLogRecord(""test.message"", null /* throwable */);"
20045,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/logging/DataflowWorkerLoggingHandlerTest.java,132,,"        ""{\""timestamp\"":{\""seconds\"":0,\""nanos\"":1000000},\""severity\"":\""INFO\"","""
20046,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/logging/DataflowWorkerLoggingHandlerTest.java,133,,"            + ""\""message\"":\""test.message\"",\""thread\"":\""2\"",\""job\"":\""testJobId\"","""
20047,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/logging/DataflowWorkerLoggingHandlerTest.java,171,,"    String testWorkerId = ""testWorkerId"";"
20048,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/logging/DataflowWorkerLoggingHandlerTest.java,172,,"    String testWorkId = ""testWorkId"";"
20049,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/logging/DataflowWorkerLoggingInitializerTest.java,155,,"    LogManager.getLogManager().getLogger(""A"").info(""foobar"");"
20050,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/logging/DataflowWorkerLoggingInitializerTest.java,162,,"    System.out.println(""afterInitialization"");"
20051,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/logging/DataflowWorkerLoggingInitializerTest.java,179,,"    System.out.println(""sys.out"");"
20052,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/logging/JulHandlerPrintStreamAdapterFactoryTest.java,63,,"    printStream.println(""blah"");"
20053,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/status/ThreadzServletTest.java,42,,"            new StackTraceElement[] {new StackTraceElement(""Class"", ""Method1"", ""File"", 11)},"
20054,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/status/ThreadzServletTest.java,42,,"            new StackTraceElement[] {new StackTraceElement(""Class"", ""Method1"", ""File"", 11)},"
20055,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/testing/GenericJsonMatcherTest.java,38,,"    expected.set(""foo"", ""bar"");"
20056,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/util/CloudSourceUtilsTest.java,46,,"    addString(grandparent, ""GPC"", ""gpc_g"");"
20057,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/util/DataflowCounterUpdateExtractorTest.java,73,,"        allOf(hasName(""c1""), hasKind(""SUM""), hasIntegerValue(0)));"
20058,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/util/GroupAlsoByWindowProperties.java,118,,"            ""key"","
20059,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/util/common/worker/GroupingTablesTest.java,75,,"    table.put(""DDDD"", ""d"", receiver);"
20060,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/util/common/worker/MapTaskExecutorTest.java,306,,"                  Metrics.counter(""TestMetric"", ""MetricCounter"").inc(1L);"
20061,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/util/common/worker/MapTaskExecutorTest.java,306,,"                  Metrics.counter(""TestMetric"", ""MetricCounter"").inc(1L);"
20062,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/util/common/worker/OutputReceiverTest.java,44,,"    fanOut.process(""bob"");"
20063,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/util/common/worker/TestOutputReceiver.java,40,,"    this(""test_receiver_out"", counterSet);"
20064,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/windmill/GrpcWindmillServerTest.java,195,,"                                .setJobId(""job"")"
20065,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/windmill/GrpcWindmillServerTest.java,196,,"                                .setProjectId(""project"")"
20066,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/windmill/GrpcWindmillServerTest.java,197,,"                                .setWorkerId(""worker"")"
20067,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/windmill/GrpcWindmillServerTest.java,347,,"                errorCollector.checkThat(request.getStateFamily(), Matchers.is(""family""));"
20068,./TargetProjects/beam/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/windmill/GrpcWindmillServerTest.java,360,,"                    compRequest.getComputationId(), Matchers.is(""computation""));"
20069,./TargetProjects/beam/runners/java-fn-execution/src/main/java/org/apache/beam/runners/fnexecution/control/ProcessBundleDescriptors.java,70,,"  ""rawtypes"", // TODO(https://issues.apache.org/jira/browse/BEAM-10556)"
20070,./TargetProjects/beam/runners/java-fn-execution/src/main/java/org/apache/beam/runners/fnexecution/state/StateRequestHandlers.java,383,,"          ""Continuation tokens are unsupported."");"
20071,./TargetProjects/beam/runners/java-fn-execution/src/test/java/org/apache/beam/runners/fnexecution/artifact/ArtifactStagingServiceTest.java,92,,"        if (artifact.getTypeUrn().equals(""resolved"")) {"
20072,./TargetProjects/beam/runners/java-fn-execution/src/test/java/org/apache/beam/runners/fnexecution/control/DefaultJobBundleFactoryTest.java,161,,"            .setUrn(""env:urn:a"")"
20073,./TargetProjects/beam/runners/java-fn-execution/src/test/java/org/apache/beam/runners/fnexecution/control/DefaultJobBundleFactoryTest.java,240,,"            JobInfo.create(""testJob"", ""testJob"", ""token"", pipelineOptions),"
20074,./TargetProjects/beam/runners/java-fn-execution/src/test/java/org/apache/beam/runners/fnexecution/control/DefaultJobBundleFactoryTest.java,240,,"            JobInfo.create(""testJob"", ""testJob"", ""token"", pipelineOptions),"
20075,./TargetProjects/beam/runners/java-fn-execution/src/test/java/org/apache/beam/runners/fnexecution/control/ReferenceCountingExecutableStageContextFactoryTest.java,62,,"        ""Context should be cached and reused."", ac1A, factory.get(jobA)); // 2 open jobA"
20076,./TargetProjects/beam/runners/java-fn-execution/src/test/java/org/apache/beam/runners/fnexecution/control/RemoteExecutionTest.java,256,,"    p.apply(""impulse"", Impulse.create())"
20077,./TargetProjects/beam/runners/java-fn-execution/src/test/java/org/apache/beam/runners/fnexecution/control/RemoteExecutionTest.java,258,,"            ""create"","
20078,./TargetProjects/beam/runners/java-fn-execution/src/test/java/org/apache/beam/runners/fnexecution/control/RemoteExecutionTest.java,263,,"                    ctxt.output(""zero"");"
20079,./TargetProjects/beam/runners/java-fn-execution/src/test/java/org/apache/beam/runners/fnexecution/control/RemoteExecutionTest.java,265,,"                    ctxt.output(""two"");"
20080,./TargetProjects/beam/runners/java-fn-execution/src/test/java/org/apache/beam/runners/fnexecution/control/RemoteExecutionTest.java,277,,"        .apply(""addKeys"", WithKeys.of(""foo""))"
20081,./TargetProjects/beam/runners/java-fn-execution/src/test/java/org/apache/beam/runners/fnexecution/control/RemoteExecutionTest.java,281,,"        .apply(""gbk"", GroupByKey.create());"
20082,./TargetProjects/beam/runners/java-fn-execution/src/test/java/org/apache/beam/runners/fnexecution/control/RemoteExecutionTest.java,457,,"            ""test_stage"","
20083,./TargetProjects/beam/runners/java-fn-execution/src/test/java/org/apache/beam/runners/fnexecution/control/RemoteExecutionTest.java,1060,,"                  @TimerId(""event"")"
20084,./TargetProjects/beam/runners/java-fn-execution/src/test/java/org/apache/beam/runners/fnexecution/control/RemoteExecutionTest.java,1063,,"                  @TimerId(""processing"")"
20085,./TargetProjects/beam/runners/java-fn-execution/src/test/java/org/apache/beam/runners/fnexecution/control/SdkHarnessClientTest.java,129,,"        .apply(""create"", Create.of(""foo""))"
20086,./TargetProjects/beam/runners/java-fn-execution/src/test/java/org/apache/beam/runners/fnexecution/control/SdkHarnessClientTest.java,558,,"      fail(""Exception expected"");"
20087,./TargetProjects/beam/runners/java-fn-execution/src/test/java/org/apache/beam/runners/fnexecution/environment/DockerEnvironmentFactoryTest.java,139,,"      RemoteEnvironment handle = factory.createEnvironment(ENVIRONMENT, ""workerId"");"
20088,./TargetProjects/beam/runners/java-fn-execution/src/test/java/org/apache/beam/runners/fnexecution/environment/ProcessEnvironmentFactoryTest.java,87,,"    RemoteEnvironment handle = factory.createEnvironment(ENVIRONMENT, ""workerId"");"
20089,./TargetProjects/beam/runners/java-fn-execution/src/test/java/org/apache/beam/runners/fnexecution/environment/ProcessManagerTest.java,48,,"    processManager.startProcess(""1"", ""bash"", Collections.emptyList());"
20090,./TargetProjects/beam/runners/java-fn-execution/src/test/java/org/apache/beam/runners/fnexecution/state/StateRequestHandlersTest.java,144,,"            .setInput(""input"")"
20091,./TargetProjects/beam/runners/java-fn-execution/src/test/java/org/apache/beam/runners/fnexecution/status/BeamWorkerStatusGrpcServiceTest.java,118,,"                      .setStatusInfo(""status"")"
20092,./TargetProjects/beam/runners/java-fn-execution/src/test/java/org/apache/beam/runners/fnexecution/status/WorkerStatusClientTest.java,53,,"        client.getWorkerStatus(WorkerStatusRequest.newBuilder().setId(""123"").build());"
20093,./TargetProjects/beam/runners/java-fn-execution/src/test/java/org/apache/beam/runners/fnexecution/translation/BatchSideInputHandlerFactoryTest.java,143,,"                WindowedValue.valueInGlobalWindow(KV.of(""foo"", 2)),"
20094,./TargetProjects/beam/runners/java-fn-execution/src/test/java/org/apache/beam/runners/fnexecution/translation/BatchSideInputHandlerFactoryTest.java,144,,"                WindowedValue.valueInGlobalWindow(KV.of(""bar"", 3)),"
20095,./TargetProjects/beam/runners/java-job-service/src/main/java/org/apache/beam/runners/jobsubmission/InMemoryJobService.java,171,,"      LOG.trace(""{} {}"", PrepareJobRequest.class.getSimpleName(), request);"
20096,./TargetProjects/beam/runners/java-job-service/src/main/java/org/apache/beam/runners/jobsubmission/InMemoryJobService.java,347,,"          String.format(""Encountered Unexpected Exception for Invocation %s"", invocationId);"
20097,./TargetProjects/beam/runners/jet/src/main/java/org/apache/beam/runners/jet/DAGBuilder.java,83,,"      throw new RuntimeException(""Oops!"");"
20098,./TargetProjects/beam/runners/jet/src/main/java/org/apache/beam/runners/jet/metrics/JetMetricResults.java,46,,"  @GuardedBy(""this"")"
20099,./TargetProjects/beam/runners/samza/src/main/java/org/apache/beam/runners/samza/adapter/UnboundedSourceSystem.java,97,,"      @SuppressWarnings(""unchecked"")"
20100,./TargetProjects/beam/runners/samza/src/main/java/org/apache/beam/runners/samza/runtime/SamzaStoreStateInternals.java,115,,"  @SuppressWarnings(""unchecked"")"
20101,./TargetProjects/beam/runners/samza/src/main/java/org/apache/beam/runners/samza/translation/ConfigBuilder.java,152,,"        ""Config %s not found for %s Deployment"","
20102,./TargetProjects/beam/runners/samza/src/main/java/org/apache/beam/runners/samza/translation/ParDoBoundMultiTranslator.java,196,,"      @SuppressWarnings(""unchecked"")"
20103,./TargetProjects/beam/runners/samza/src/main/java/org/apache/beam/runners/samza/translation/ParDoBoundMultiTranslator.java,379,,"            ""stores."" + storeId + "".factory"","
20104,./TargetProjects/beam/runners/samza/src/main/java/org/apache/beam/runners/samza/translation/TranslationContext.java,117,,"        @SuppressWarnings(""unchecked"")"
20105,./TargetProjects/beam/runners/samza/src/test/java/org/apache/beam/runners/samza/adapter/BoundedSourceSystemTest.java,54,,"      new SystemStreamPartition(""default-system"", ""default-system"", new Partition(0));"
20106,./TargetProjects/beam/runners/samza/src/test/java/org/apache/beam/runners/samza/adapter/BoundedSourceSystemTest.java,79,,"        TestBoundedSource.<String>createBuilder().addElements(""test"").build();"
20107,./TargetProjects/beam/runners/samza/src/test/java/org/apache/beam/runners/samza/adapter/BoundedSourceSystemTest.java,100,,"            .addElements(""before"")"
20108,./TargetProjects/beam/runners/samza/src/test/java/org/apache/beam/runners/samza/adapter/BoundedSourceSystemTest.java,102,,"            .addElements(""after"")"
20109,./TargetProjects/beam/runners/samza/src/test/java/org/apache/beam/runners/samza/adapter/UnboundedSourceSystemTest.java,64,,"      new SystemStreamPartition(""default-system"", ""default-system"", new Partition(0));"
20110,./TargetProjects/beam/runners/samza/src/test/java/org/apache/beam/runners/samza/adapter/UnboundedSourceSystemTest.java,87,,"        TestUnboundedSource.<String>createBuilder().addElements(""test"").build();"
20111,./TargetProjects/beam/runners/samza/src/test/java/org/apache/beam/runners/samza/adapter/UnboundedSourceSystemTest.java,135,,"            .addElements(""before"")"
20112,./TargetProjects/beam/runners/samza/src/test/java/org/apache/beam/runners/samza/adapter/UnboundedSourceSystemTest.java,137,,"            .addElements(""after"")"
20113,./TargetProjects/beam/runners/samza/src/test/java/org/apache/beam/runners/samza/adapter/UnboundedSourceSystemTest.java,185,,"            .addElements(""first"")"
20114,./TargetProjects/beam/runners/samza/src/test/java/org/apache/beam/runners/samza/adapter/UnboundedSourceSystemTest.java,187,,"            .addElements(""second"")"
20115,./TargetProjects/beam/runners/samza/src/test/java/org/apache/beam/runners/samza/runtime/BundleManagerTest.java,77,,"        ""Expected the number of element in the current bundle to be 1"","
20116,./TargetProjects/beam/runners/samza/src/test/java/org/apache/beam/runners/samza/runtime/BundleManagerTest.java,81,,"        ""Expected the pending bundle count to be 1"", 1L, bundleManager.getPendingBundleCount());"
20117,./TargetProjects/beam/runners/samza/src/test/java/org/apache/beam/runners/samza/runtime/BundleManagerTest.java,174,,"        ""Expected the pending bundle count to be 0"", 0L, bundleManager.getPendingBundleCount());"
20118,./TargetProjects/beam/runners/samza/src/test/java/org/apache/beam/runners/samza/runtime/BundleManagerTest.java,175,,"    assertFalse(""tryFinishBundle() did not close the bundle"", bundleManager.isBundleStarted());"
20119,./TargetProjects/beam/runners/samza/src/test/java/org/apache/beam/runners/samza/runtime/SamzaStoreStateInternalsTest.java,133,,"                    KV.of(""hello"", KV.of(""a"", 97)),"
20120,./TargetProjects/beam/runners/samza/src/test/java/org/apache/beam/runners/samza/runtime/SamzaTimerInternalsFactoryTest.java,150,,"        createTimerInternalsFactory(null, ""timer"", pipelineOptions, store);"
20121,./TargetProjects/beam/runners/samza/src/test/java/org/apache/beam/runners/samza/runtime/SamzaTimerInternalsFactoryTest.java,153,,"    final TimerInternals timerInternals = timerInternalsFactory.timerInternalsForKey(""testKey"");"
20122,./TargetProjects/beam/runners/samza/src/test/java/org/apache/beam/runners/samza/runtime/SamzaTimerInternalsFactoryTest.java,156,,"            ""timer1"", nameSpace, new Instant(10), new Instant(10), TimeDomain.EVENT_TIME);"
20123,./TargetProjects/beam/runners/samza/src/test/java/org/apache/beam/runners/samza/runtime/SamzaTimerInternalsFactoryTest.java,161,,"            ""timer2"", nameSpace, new Instant(100), new Instant(100), TimeDomain.EVENT_TIME);"
20124,./TargetProjects/beam/runners/samza/src/test/java/org/apache/beam/runners/samza/translation/ConfigGeneratorTest.java,65,,"    options.setJobName(""TestStoreConfig"");"
20125,./TargetProjects/beam/runners/samza/src/test/java/org/apache/beam/runners/samza/translation/ConfigGeneratorTest.java,83,,"    assertNull(config.get(""stores.beamStore.changelog""));"
20126,./TargetProjects/beam/runners/samza/src/test/java/org/apache/beam/runners/samza/util/FutureUtilsTest.java,31,,"  private static final List<String> RESULTS = ImmutableList.of(""hello"", ""world"");"
20127,./TargetProjects/beam/runners/samza/src/test/java/org/apache/beam/runners/samza/util/TestHashIdGenerator.java,53,,"    String id = idGenerator.getId(""abcd"");"
20128,./TargetProjects/beam/runners/spark/2/src/main/java/org/apache/beam/runners/spark/structuredstreaming/translation/TranslationContext.java,130,,"  @SuppressWarnings(""unchecked"")"
20129,./TargetProjects/beam/runners/spark/2/src/test/java/org/apache/beam/runners/spark/structuredstreaming/StructuredStreamingPipelineStateTest.java,182,,"  @Ignore(""TODO: Reactivate with streaming."")"
20130,./TargetProjects/beam/runners/spark/src/main/java/org/apache/beam/runners/spark/translation/SparkCombineFn.java,385,,"    @SuppressWarnings(""unchecked"")"
20131,./TargetProjects/beam/runners/spark/src/main/java/org/apache/beam/runners/spark/translation/TransformTranslator.java,95,,"      @SuppressWarnings(""unchecked"")"
20132,./TargetProjects/beam/runners/spark/src/main/java/org/apache/beam/runners/spark/translation/streaming/StreamingTransformTranslator.java,113,,"        @SuppressWarnings(""unchecked"")"
20133,./TargetProjects/beam/runners/spark/src/test/java/org/apache/beam/runners/spark/SparkRunnerDebuggerTest.java,87,,"            + ""_.mapPartitions(new org.apache.beam.sdk.transforms.Contextful())\n"""
20134,./TargetProjects/beam/runners/spark/src/test/java/org/apache/beam/runners/spark/aggregators/metrics/sink/SparkMetricsSinkTest.java,63,,"    assertThat(InMemoryMetrics.valueOf(""emptyLines""), is(nullValue()));"
20135,./TargetProjects/beam/runners/spark/src/test/java/org/apache/beam/runners/spark/translation/SparkCombineFnTest.java,71,,"    WindowedValue<KV<String, Integer>> first = input(""key"", 1, Instant.now());"
20136,./TargetProjects/beam/runners/spark/src/test/java/org/apache/beam/runners/spark/translation/streaming/CreateStreamTest.java,169,,"            .nextBatch(TimestampedValue.of(""onTimePane"", new Instant(500)))"
20137,./TargetProjects/beam/runners/spark/src/test/java/org/apache/beam/runners/spark/translation/streaming/CreateStreamTest.java,249,,"                TimestampedValue.of(""foo"", endOfGlobalWindow),"
20138,./TargetProjects/beam/runners/spark/src/test/java/org/apache/beam/runners/spark/translation/streaming/CreateStreamTest.java,250,,"                TimestampedValue.of(""bar"", endOfGlobalWindow))"
20139,./TargetProjects/beam/runners/spark/src/test/java/org/apache/beam/runners/spark/translation/streaming/ResumeFromCheckpointStreamingTest.java,175,,"                ""EOFShallNotPassFn"","
20140,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/coders/CoderProviders.java,114,,"            ""cannot register Coder """
20141,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/coders/CoderRegistry.java,323,,"    @SuppressWarnings(""unchecked"")"
20142,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/io/ClassLoaderFileSystem.java,58,,"    throw new UnsupportedOperationException(""Read-only filesystem."");"
20143,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/io/Read.java,171,,"          .add(DisplayData.item(""source"", source.getClass()).withLabel(""Read Source""))"
20144,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/io/TextIO.java,288,,"    @SuppressWarnings(""mutable"") // this returns an array that can be mutated by the caller"
20145,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/io/fs/ResourceIdTester.java,68,,"    ResourceId file2 = baseDirectory.resolve(""child2"", RESOLVE_FILE);"
20146,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/options/Default.java,38,,"  @SuppressWarnings(""JavaLangClash"")"
20147,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/options/PipelineOptionsFactory.java,342,,"  @SuppressWarnings(""unchecked"")"
20148,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/options/PipelineOptionsFactory.java,1635,,"        if (""runner"".equals(entry.getKey())) {"
20149,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/options/ProxyInvocationHandler.java,151,,"      @SuppressWarnings(""unchecked"")"
20150,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/schemas/FromRowUsingCreator.java,69,,"  @SuppressWarnings(""unchecked"")"
20151,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/schemas/utils/ByteBuddyUtils.java,204,,"  @SuppressWarnings(""unchecked"")"
20152,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/state/StateSpecs.java,310,,"      @SuppressWarnings(""unchecked"")"
20153,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/state/StateSpecs.java,379,,"                + "" was specified. Please set a coder by either invoking"""
20154,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/testing/CoderProperties.java,138,,"  @SuppressWarnings(""unchecked"")"
20155,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/testing/PAssert.java,126,,"    return ""PAssert$"" + (assertCount++);"
20156,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/testing/PAssert.java,435,,"    @SuppressWarnings(""unchecked"") // Safe covariant cast"
20157,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/testing/PAssert.java,651,,"      @SuppressWarnings({""unchecked"", ""rawtypes""})"
20158,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/testing/SerializableMatchers.java,74,,"      ""rawtypes"", // TODO(https://issues.apache.org/jira/browse/BEAM-10556)"
20159,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/testing/SerializableMatchers.java,75,,"      ""unchecked"""
20160,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/Combine.java,1643,,"      @SuppressWarnings(""unchecked"")"
20161,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/CombineFns.java,56,,"  ""rawtypes"""
20162,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/CombineFns.java,199,,"    @SuppressWarnings(""unchecked"")"
20163,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/DoFnTester.java,72,,"  @SuppressWarnings(""unchecked"")"
20164,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/Sample.java,170,,"      builder.add(DisplayData.item(""sampleSize"", limit).withLabel(""Sample Size""));"
20165,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/Sample.java,170,,"      builder.add(DisplayData.item(""sampleSize"", limit).withLabel(""Sample Size""));"
20166,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/Sets.java,118,,"    checkNotNull(rightCollection, ""rightCollection argument is null"");"
20167,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/View.java,245,,"        throw new IllegalStateException(""Unable to create a side-input view from input"", e);"
20168,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/display/DisplayData.java,802,,"      checkNotNull(item, ""Input display item cannot be null"");"
20169,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/join/CoGbkResult.java,75,,"  @SuppressWarnings(""unchecked"")"
20170,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/join/CoGbkResult.java,164,,"      throw new IllegalArgumentException(""TupleTag "" + tag + "" is not in the schema"");"
20171,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/reflect/ByteBuddyOnTimerInvokerFactory.java,65,,"    @SuppressWarnings(""unchecked"")"
20172,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/reflect/DoFnInvoker.java,85,,"  @SuppressWarnings(""TypeParameterUnusedInFormals"")"
20173,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/reflect/DoFnSignatures.java,1072,,"    errors.checkArgument(void.class.equals(m.getReturnType()), ""Must return void"");"
20174,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/reflect/DoFnSignatures.java,1388,,"          ""Multiple %s parameters"","
20175,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/reflect/DoFnSignatures.java,1720,,"            ""Schema @%s are not supported for @%s method. Found %s, did you mean to use %s?"","
20176,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/transforms/reflect/DoFnSignatures.java,1832,,"            ""Uses restriction type %s, but @%s method uses restriction type %s"","
20177,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/util/ApiSurface.java,210,,"                  + ""\n\t"""
20178,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/util/ReleaseInfo.java,64,,"    return getProperties().get(""sdk_version"");"
20179,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/util/WindowedValue.java,284,,"          .add(""value"", getValue())"
20180,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/util/WindowedValue.java,285,,"          .add(""pane"", getPane())"
20181,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/values/PCollectionViews.java,364,,"          throw new RuntimeException(""Unexpected IOException: "", e);"
20182,./TargetProjects/beam/sdks/java/core/src/main/java/org/apache/beam/sdk/values/TypeDescriptor.java,104,,"    @SuppressWarnings(""unchecked"")"
20183,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/coders/AvroCoderTest.java,131,,"    @SuppressWarnings(""unused"")"
20184,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/coders/AvroCoderTest.java,223,,"    Object pojo1 = InstanceBuilder.ofType(pojoClass1).withArg(String.class, ""hello"").build();"
20185,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/coders/AvroCoderTest.java,257,,"    Pojo value = new Pojo(""Hello"", 42, DATETIME_A);"
20186,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/coders/AvroCoderTest.java,389,,"            .apply(Create.of(new Pojo(""hello"", 1, DATETIME_A), new Pojo(""world"", 2, DATETIME_B)))"
20187,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/coders/AvroCoderTest.java,485,,"            ""mapField"","
20188,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/coders/AvroCoderTest.java,487,,"                + ""may not be deterministically ordered""));"
20189,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/coders/AvroCoderTest.java,695,,"        reasonField(Cyclic.class, ""cyclicField"", Cyclic.class.getName() + "" appears recursively""));"
20190,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/coders/AvroCoderTest.java,805,,"    assertDeterministic(AvroCoder.of(SchemaBuilder.record(""someRecord"").fields().endRecord()));"
20191,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/coders/CustomCoderTest.java,73,,"    MyCustomCoder coder = new MyCustomCoder(""key"");"
20192,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/coders/PCollectionCustomCoderTest.java,166,,"    thrown.expect(new ExceptionMatcher(""java.io.IOException: Super Unique Message!!!""));"
20193,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/coders/PCollectionCustomCoderTest.java,177,,"    thrown.expect(new ExceptionMatcher(""java.lang.NullPointerException: Super Unique Message!!!""));"
20194,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/coders/RowCoderTest.java,55,,"            .addInt32Field(""f_int32"")"
20195,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/coders/RowCoderTest.java,60,,"            .addStringField(""f_string"")"
20196,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/coders/RowCoderTest.java,62,,"            .addBooleanField(""f_boolean"")"
20197,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/coders/RowCoderTest.java,91,,"    Row row = Row.withSchema(schema).addArray(""one"", ""two"", ""three"", ""four"").build();"
20198,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/coders/RowCoderTest.java,91,,"    Row row = Row.withSchema(schema).addArray(""one"", ""two"", ""three"", ""four"").build();"
20199,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/coders/RowCoderTest.java,91,,"    Row row = Row.withSchema(schema).addArray(""one"", ""two"", ""three"", ""four"").build();"
20200,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/coders/RowCoderTest.java,384,,"            .withFieldValue(""f_string"", ""hello world!"")"
20201,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/AvroIOTest.java,130,,"      assertEquals(""AvroIO.Write"", AvroIO.write(String.class).to(""/tmp/foo/baz"").getName());"
20202,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/AvroIOTest.java,244,,"                .withSuffix(""bar"")"
20203,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/AvroIOTest.java,298,,"      File outputFile = tmpFolder.newFile(""output.avro"");"
20204,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/AvroIOTest.java,310,,"                  ""Read"","
20205,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/AvroIOTest.java,521,,"                  tmpFolder.getRoot().getAbsolutePath() + ""/first*"","
20206,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/AvroIOTest.java,891,,"      final String baseFilename = baseDir.resolve(""prefix"").toString();"
20207,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/AvroIOTest.java,966,,"                    .withSuffix("".avro"")"
20208,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/AvroIOTest.java,1078,,"            StaticValueProvider.of(baseDir.resolve(""file_"" + destination, RESOLVE_FILE)),"
20209,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/AvroIOTest.java,1171,,"                throw new IllegalArgumentException(""Unknown sharding "" + sharding);"
20210,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/AvroSourceTest.java,176,,"            ""tmp.avro"","
20211,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/CompressedSourceTest.java,172,,"    source = CompressedSource.from(new ByteSource(""input.txt"", 1));"
20212,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/CompressedSourceTest.java,174,,"    source = CompressedSource.from(new ByteSource(""input.csv"", 1));"
20213,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/CompressedSourceTest.java,354,,"    byte[] header = ""a,b,c\n"".getBytes(StandardCharsets.UTF_8);"
20214,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/CompressedSourceTest.java,355,,"    byte[] body = ""1,2,3\n4,5,6\n7,8,9\n"".getBytes(StandardCharsets.UTF_8);"
20215,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/CompressedSourceTest.java,586,,"    File tmpFile = tmpFolder.newFile(""test.gz"");"
20216,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/CompressedSourceTest.java,639,,"    String baseName = ""test-input"";"
20217,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/CompressedSourceTest.java,871,,"    String baseName = ""test_input-"";"
20218,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/DefaultFilenamePolicyTest.java,66,,"        constructName(""/path/to/output"", ""-SSS-of-NNN"", "".txt"", 1, 123, null, null));"
20219,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/DefaultFilenamePolicyTest.java,70,,"        constructName(""/path/to/out.txt"", ""/part-SSSSS"", """", 42, 100, null, null));"
20220,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/DefaultFilenamePolicyTest.java,76,,"        constructName(""/path/to/out"", ""SSNNshard"", "".txt"", 1, 2, null, null));"
20221,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/DefaultFilenamePolicyTest.java,158,,"            .withSuffix("".json""),"
20222,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/FileBasedSinkTest.java,265,,"    String prefix = ""file"";"
20223,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/FileBasedSinkTest.java,448,,"    final File file = writeValuesWithCompression(Compression.BZIP2, ""abc"", ""123"");"
20224,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/FileBasedSinkTest.java,448,,"    final File file = writeValuesWithCompression(Compression.BZIP2, ""abc"", ""123"");"
20225,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/FileBasedSourceTest.java,344,,"    String fileName = ""file"";"
20226,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/FileBasedSourceTest.java,355,,"    File file1 = createFileWithData(""file1"", data1);"
20227,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/FileBasedSourceTest.java,358,,"    createFileWithData(""file2"", data2);"
20228,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/FileBasedSourceTest.java,361,,"    createFileWithData(""file3"", data3);"
20229,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/FileBasedSourceTest.java,364,,"    createFileWithData(""otherfile"", data4);"
20230,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/FileBasedSourceTest.java,367,,"        new TestFileBasedSource(new File(file1.getParent(), ""file*"").getPath(), 64, null);"
20231,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/FileBasedSourceTest.java,529,,"    String header = ""<h>"";"
20232,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/FileIOTest.java,81,,"    Path firstPath = tmpFolder.newFile(""first"").toPath();"
20233,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/FileIOTest.java,82,,"    Path secondPath = tmpFolder.newFile(""second"").toPath();"
20234,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/FileIOTest.java,114,,"                    .filepattern(tmpFolder.getRoot().getAbsolutePath() + ""/blah"")"
20235,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/FileIOTest.java,211,,"    Files.write(sourcePath.resolve(""third""), new byte[99]);"
20236,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/FileIOTest.java,274,,"    Files.write(new File(path).toPath(), ""Hello world"".getBytes(Charsets.UTF_8));"
20237,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/FileIOTest.java,360,,"    FileIO.Write.FileNaming foo = (window, pane, numShards, shardIndex, compression) -> ""foo"";"
20238,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/FileIOTest.java,363,,"        FileSystems.matchNewResource(""test"", true).resolve(""foo"", RESOLVE_FILE).toString();"
20239,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/FileSystemsTest.java,94,,"    Path nonExistentPath = existingPath.resolveSibling(""non-existent"");"
20240,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/FileSystemsTest.java,96,,"    createFileWithContent(existingPath, ""content1"");"
20241,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/FileSystemsTest.java,107,,"    Path destPath1 = existingPath.resolveSibling(""dest1"");"
20242,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/FileSystemsTest.java,108,,"    Path destPath2 = nonExistentPath.resolveSibling(""dest2"");"
20243,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/FileSystemsTest.java,129,,"    createFileWithContent(srcPath3, ""content3"");"
20244,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/FileSystemsTest.java,194,,"    assertEquals(""file"", FileSystems.matchNewResource(""/tmp/f1"", false).getScheme());"
20245,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/LocalFileSystemTest.java,144,,"    createFileWithContent(srcPath1, ""content1"");"
20246,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/LocalFileSystemTest.java,145,,"    createFileWithContent(srcPath2, ""content2"");"
20247,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/LocalResourceIdTest.java,65,,"        toResourceIdentifier(""/root/tmp/"").resolve(""aa"", StandardResolveOptions.RESOLVE_FILE));"
20248,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/ReadTest.java,145,,"    assertThat(boundedDisplayData, hasDisplayItem(""source"", boundedSource.getClass()));"
20249,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/TFRecordIOTest.java,107,,"  private static final String[] FOO_RECORDS = {""foo""};"
20250,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/TFRecordIOTest.java,108,,"  private static final String[] FOO_BAR_RECORDS = {""foo"", ""bar""};"
20251,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/TFRecordIOTest.java,127,,"        readPipeline.apply(TFRecordIO.read().from(""foo.*"").withoutValidation()).getName(),"
20252,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/TFRecordIOTest.java,243,,"        Files.createTempFile(tempFolder.getRoot().toPath(), ""file"", "".tfrecords"").toFile();"
20253,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/TextIOWriteTest.java,92,,"  private static final String MY_HEADER = ""myHeader"";"
20254,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/TextIOWriteTest.java,93,,"  private static final String MY_FOOTER = ""myFooter"";"
20255,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/TextRowCountEstimatorTest.java,61,,"        TextRowCountEstimator.builder().setFilePattern(temporaryFolder.getRoot() + ""/**"").build();"
20256,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/WriteFilesTest.java,184,,"    return getBaseOutputDirectory().resolve(""file"", StandardResolveOptions.RESOLVE_FILE).toString();"
20257,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/WriteFilesTest.java,249,,"    options.setTestFlag(""test_value"");"
20258,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/WriteFilesTest.java,489,,"            builder.add(DisplayData.item(""foo"", ""bar""));"
20259,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/io/WriteFilesTest.java,496,,"    assertThat(displayData, hasDisplayItem(""sink"", sink.getClass()));"
20260,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/metrics/MetricFilteringTest.java,44,,"                .addNameFilter(MetricNameFilter.named(MetricFilteringTest.class, ""myMetricName""))"
20261,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/metrics/MetricFilteringTest.java,45,,"                .addStep(""myStep"")"
20262,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/metrics/MetricFilteringTest.java,96,,"                ""anyStep"", MetricName.named(MetricFilteringTest.class, ""myMetricName""))));"
20263,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/metrics/MetricFilteringTest.java,129,,"    assertTrue(""Match of the first element"", matchesSubPath(""Top1/Outer1/Inner1/Bottom1"", ""Top1""));"
20264,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/metrics/MetricResultsMatchers.java,122,,"              .appendText("" != "")"
20265,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/metrics/MetricsEnvironmentTest.java,44,,"    Counter counter = Metrics.counter(""ns"", ""name"");"
20266,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/metrics/MetricsTest.java,87,,"      final Counter count = Metrics.counter(MetricsTest.class, ""count"");"
20267,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/metrics/MetricsTest.java,93,,"              ""MyStep1"","
20268,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/metrics/MetricsTest.java,106,,"                      Distribution values = Metrics.distribution(MetricsTest.class, ""input"");"
20269,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/metrics/MetricsTest.java,120,,"              ""MyStep2"","
20270,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/PipelineOptionsFactoryTest.java,90,,"  ""rawtypes"", // TODO(https://issues.apache.org/jira/browse/BEAM-10556)"
20271,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/PipelineOptionsFactoryTest.java,459,,"            + ""found only on [org.apache.beam.sdk.options."""
20272,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/PipelineOptionsFactoryTest.java,518,,"                      ""org.apache.beam.sdk.options."""
20273,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/PipelineOptionsFactoryTest.java,539,,"    @Default.String(""abc"")"
20274,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/PipelineOptionsFactoryTest.java,850,,"          ""--boolean=true"","
20275,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/PipelineOptionsFactoryTest.java,851,,"          ""--char=d"","
20276,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/PipelineOptionsFactoryTest.java,974,,"          ""--enumValue="" + TestEnum.Value"
20277,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/PipelineOptionsFactoryTest.java,998,,"    String[] emptyArgs = new String[] {""--stringValue=""};"
20278,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/PipelineOptionsFactoryTest.java,1008,,"    String[] emptyArgs = new String[] {""--longValue=""};"
20279,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/PipelineOptionsFactoryTest.java,1062,,"    assertEquals(ImmutableMap.of(""key"", ""value"", ""key2"", ""value2""), options.getMap());"
20280,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/PipelineOptionsFactoryTest.java,1183,,"        new String[] {""stringValue1"", ""stringValue2"", ""stringValue3""}, options.getString());"
20281,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/PipelineOptionsFactoryTest.java,1183,,"        new String[] {""stringValue1"", ""stringValue2"", ""stringValue3""}, options.getString());"
20282,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/PipelineOptionsFactoryTest.java,1183,,"        new String[] {""stringValue1"", ""stringValue2"", ""stringValue3""}, options.getString());"
20283,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/PipelineOptionsFactoryTest.java,1197,,"    String[] args = new String[] {""--string="", ""--string="", ""--string=""};"
20284,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/PipelineOptionsFactoryTest.java,1237,,"    assertArrayEquals(new String[] {""abc"", ""xyz""}, options.getStringValue().get());"
20285,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/PipelineOptionsFactoryTest.java,1674,,"    arguments.put(""help"", ""true"");"
20286,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/PipelineOptionsFactoryTest.java,1679,,"    assertThat(output, containsString(""The set of registered options are:""));"
20287,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/PipelineOptionsFactoryTest.java,1680,,"    assertThat(output, containsString(""org.apache.beam.sdk.options.PipelineOptions""));"
20288,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/PipelineOptionsFactoryTest.java,1694,,"    assertThat(output, containsString(""--runner""));"
20289,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/PipelineOptionsFactoryTest.java,1695,,"    assertThat(output, containsString(""Default: "" + DEFAULT_RUNNER_NAME));"
20290,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/PipelineOptionsFactoryTest.java,1697,,"        output, containsString(""The pipeline runner that will be used to execute the pipeline.""));"
20291,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/PipelineOptionsReflectorTest.java,50,,"                SimpleOptions.class, ""foo"", SimpleOptions.class.getDeclaredMethod(""getFoo""))));"
20292,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/PipelineOptionsValidatorTest.java,53,,"        ""Missing required value for """
20293,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/PipelineOptionsValidatorTest.java,54,,"            + ""[public abstract java.lang.String org.apache.beam."""
20294,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/PipelineOptionsValidatorTest.java,55,,"            + ""sdk.options.PipelineOptionsValidatorTest$Required.getObject(), \""Fake Description\""]."");"
20295,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/PipelineOptionsValidatorTest.java,67,,"        ""Missing required value for "" + ""[--object, \""Fake Description\""]."");"
20296,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/PipelineOptionsValidatorTest.java,153,,"    @Validation.Required(groups = {""ham""})"
20297,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/PipelineOptionsValidatorTest.java,175,,"    groupRequired.setBar(""bar"");"
20298,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/ProxyInvocationHandlerTest.java,387,,"    extended.setString(""parentValue"");"
20299,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/ProxyInvocationHandlerTest.java,442,,"    methodConflict.setString(""conflictValue"");"
20300,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/ProxyInvocationHandlerTest.java,491,,"    proxy.setString(""siblingValue"");"
20301,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/ProxyInvocationHandlerTest.java,567,,"    options.setString(""TestValue"");"
20302,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/ProxyInvocationHandlerTest.java,751,,"    options.setValue(new NotSerializable(""TestString""));"
20303,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/ProxyInvocationHandlerTest.java,784,,"    public SerializableWithMetadata(@JsonProperty(""value"") String value) {"
20304,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/ProxyInvocationHandlerTest.java,910,,"    options.setFoo(""bar"");"
20305,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/ProxyInvocationHandlerTest.java,917,,"            allOf(hasKey(""foo""), hasValue(""bar""), hasNamespace(ExtendsBaseOptions.class))));"
20306,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/ValueProviderTest.java,52,,"    @Default.String(""bar"")"
20307,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/ValueProviderTest.java,92,,"    ValueProvider<String> provider = StaticValueProvider.of(""foo"");"
20308,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/ValueProviderTest.java,140,,"    assertEquals(""quux"", provider.get());"
20309,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/options/ValueProvidersTest.java,53,,"        ValueProviders.updateSerializedOptions(serializedOptions, ImmutableMap.of(""string"", ""bar""));"
20310,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/runners/TransformHierarchyTest.java,102,,"    TransformHierarchy.Node node = hierarchy.pushNode(""Create"", PBegin.in(pipeline), Create.of(1));"
20311,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/runners/TransformHierarchyTest.java,260,,"    PCollection<Long> output = upstream.apply(""Original"", originalParDo);"
20312,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/runners/TransformHierarchyTest.java,285,,"            return input.apply(""Contained"", replacementParDo).get(longs);"
20313,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/AutoValueSchemaTest.java,104,,"    @SuppressWarnings(""mutable"")"
20314,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/AutoValueSchemaTest.java,228,,"    assertEquals(""string"", row.getString(""str""));"
20315,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/AutoValueSchemaTest.java,542,,"    @SchemaFieldName(""renamed"")"
20316,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/AvroSchemaTest.java,67,,"    @AvroName(""int"")"
20317,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/AvroSchemaTest.java,103,,"    public @AvroName(""bool_non_nullable"") boolean boolNonNullable;"
20318,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/AvroSchemaTest.java,109,,"    public @AvroName(""long"") Long aLong;"
20319,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/AvroSchemaTest.java,111,,"    @AvroName(""float"")"
20320,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/AvroSchemaTest.java,115,,"    @AvroName(""double"")"
20321,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/AvroSchemaTest.java,272,,"          .addNullableField(""string"", FieldType.STRING)"
20322,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/AvroSchemaTest.java,313,,"          ""mystring"","
20323,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/FieldAccessDescriptorTest.java,36,,"          .addStringField(""field0"")"
20324,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/FieldAccessDescriptorTest.java,37,,"          .addStringField(""field1"")"
20325,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/FieldAccessDescriptorTest.java,38,,"          .addInt32Field(""field2"")"
20326,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaBeanSchemaTest.java,140,,"    SimpleBean bean = createSimple(""string"");"
20327,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaBeanSchemaTest.java,144,,"    assertEquals(""string"", row.getString(""str""));"
20328,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaBeanSchemaTest.java,145,,"    assertEquals((byte) 1, (Object) row.getByte(""aByte""));"
20329,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaBeanSchemaTest.java,146,,"    assertEquals((short) 2, (Object) row.getInt16(""aShort""));"
20330,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaBeanSchemaTest.java,147,,"    assertEquals((int) 3, (Object) row.getInt32(""anInt""));"
20331,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaBeanSchemaTest.java,148,,"    assertEquals((long) 4, (Object) row.getInt64(""aLong""));"
20332,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaBeanSchemaTest.java,149,,"    assertTrue(row.getBoolean(""aBoolean""));"
20333,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaBeanSchemaTest.java,150,,"    assertEquals(DATE.toInstant(), row.getDateTime(""dateTime""));"
20334,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaBeanSchemaTest.java,151,,"    assertEquals(DATE.toInstant(), row.getDateTime(""instant""));"
20335,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaBeanSchemaTest.java,152,,"    assertArrayEquals(BYTE_ARRAY, row.getBytes(""bytes""));"
20336,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaBeanSchemaTest.java,153,,"    assertArrayEquals(BYTE_ARRAY, row.getBytes(""byteBuffer""));"
20337,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaBeanSchemaTest.java,154,,"    assertEquals(BigDecimal.ONE, row.getDecimal(""bigDecimal""));"
20338,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaBeanSchemaTest.java,155,,"    assertEquals(""stringbuilder"", row.getString(""stringBuilder""));"
20339,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaBeanSchemaTest.java,155,,"    assertEquals(""stringbuilder"", row.getString(""stringBuilder""));"
20340,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaBeanSchemaTest.java,172,,"    assertArrayEquals(""not equal"", BYTE_ARRAY, bean.getBytes());"
20341,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaBeanSchemaTest.java,329,,"    assertEquals(strList, row.getArray(""strings""));"
20342,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaBeanSchemaTest.java,330,,"    assertEquals(Ints.asList(intArray), row.getArray(""integers""));"
20343,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaBeanSchemaTest.java,331,,"    assertEquals(Arrays.asList(longArray), row.getArray(""longs""));"
20344,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaBeanSchemaTest.java,360,,"    SimpleBean simple1 = createSimple(""string1"");"
20345,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaBeanSchemaTest.java,361,,"    SimpleBean simple2 = createSimple(""string2"");"
20346,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaBeanSchemaTest.java,362,,"    SimpleBean simple3 = createSimple(""string3"");"
20347,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaBeanSchemaTest.java,430,,"                ""simple1"", simple1,"
20348,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaBeanSchemaTest.java,431,,"                ""simple2"", simple2,"
20349,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaBeanSchemaTest.java,432,,"                ""simple3"", simple3));"
20350,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaBeanSchemaTest.java,559,,"    BeanWithCaseFormat beanWithCaseFormat = new BeanWithCaseFormat(""joe"", 23, false);"
20351,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaFieldSchemaTest.java,88,,"      ByteBuffer.wrap(""byteBuffer"".getBytes(StandardCharsets.UTF_8));"
20352,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaFieldSchemaTest.java,103,,"        new StringBuilder(name).append(""builder""));"
20353,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaFieldSchemaTest.java,170,,"    SimplePOJO pojo = createSimple(""string"");"
20354,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaFieldSchemaTest.java,174,,"    assertEquals(""string"", row.getString(""str""));"
20355,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaFieldSchemaTest.java,177,,"    assertEquals((int) 3, (Object) row.getInt32(""anInt""));"
20356,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaFieldSchemaTest.java,185,,"    assertEquals(""stringbuilder"", row.getString(""stringBuilder""));"
20357,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaFieldSchemaTest.java,202,,"    assertArrayEquals(""not equal"", BYTE_ARRAY, pojo.bytes);"
20358,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaFieldSchemaTest.java,335,,"    assertEquals(strList, row.getArray(""strings""));"
20359,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaFieldSchemaTest.java,336,,"    assertEquals(Ints.asList(intArray), row.getArray(""integers""));"
20360,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaFieldSchemaTest.java,337,,"    assertEquals(Arrays.asList(longArray), row.getArray(""longs""));"
20361,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaFieldSchemaTest.java,366,,"    SimplePOJO simple1 = createSimple(""string1"");"
20362,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaFieldSchemaTest.java,367,,"    SimplePOJO simple2 = createSimple(""string2"");"
20363,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaFieldSchemaTest.java,368,,"    SimplePOJO simple3 = createSimple(""string3"");"
20364,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaFieldSchemaTest.java,437,,"                ""simple1"", simple1,"
20365,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaFieldSchemaTest.java,438,,"                ""simple2"", simple2,"
20366,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaFieldSchemaTest.java,439,,"                ""simple3"", simple3));"
20367,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaFieldSchemaTest.java,609,,"            enumerationType.valueOf(""RED""),"
20368,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaFieldSchemaTest.java,610,,"            enumerationType.valueOf(""GREEN""),"
20369,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/JavaFieldSchemaTest.java,611,,"            enumerationType.valueOf(""BLUE""));"
20370,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/SchemaCoderTest.java,273,,"                        ""foo"","
20371,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/SchemaCoderTest.java,279,,"                        ""bar"","
20372,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/SchemaOptionsTest.java,131,,"    Schema.Options options = Schema.Options.setOption(OPTION_NAME, FieldType.STRING, ""foo"").build();"
20373,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/SchemaOptionsTest.java,215,,"        .setOption(""field_option_byte"", FieldType.BYTE, (byte) 12)"
20374,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/SchemaRegistryTest.java,53,,"        Row.withSchema(STRING_SCHEMA).addValue(""foobar"").build(),"
20375,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/SchemaTest.java,42,,"            .addByteField(""f_byte"")"
20376,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/SchemaTest.java,49,,"            .addStringField(""f_string"")"
20377,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/SchemaTest.java,98,,"    Schema nestedSchema = Schema.of(Field.of(""f1_str"", FieldType.STRING));"
20378,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/SchemaTest.java,108,,"    Schema schema = Schema.of(Field.of(""f_array"", arrayType));"
20379,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/SchemaTest.java,136,,"    Schema schema = Schema.of(Field.of(""f_iter"", iterableType));"
20380,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/SchemaTest.java,223,,"    Schema schema1 = Schema.builder().addInt64Field(""foo"").build();"
20381,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/SchemaTest.java,322,,"        Schema.builder().addLogicalTypeField(""logical"", new TestType(""id"", ""arg"")).build();"
20382,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/SchemaTest.java,322,,"        Schema.builder().addLogicalTypeField(""logical"", new TestType(""id"", ""arg"")).build();"
20383,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/SchemaUtilsTest.java,31,,"            .addField(""field1"", FieldType.INT32)"
20384,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/SchemaUtilsTest.java,32,,"            .addNullableField(""field2"", FieldType.STRING)"
20385,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/io/AvroPayloadSerializerProviderTest.java,39,,"      Schema.builder().addInt64Field(""abc"").addStringField(""xyz"").build();"
20386,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/io/AvroPayloadSerializerProviderTest.java,39,,"      Schema.builder().addInt64Field(""abc"").addStringField(""xyz"").build();"
20387,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/logicaltypes/LogicalTypesTest.java,37,,"    Map<String, Integer> enumMap = ImmutableMap.of(""FIRST"", 1, ""SECOND"", 2);"
20388,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/logicaltypes/LogicalTypesTest.java,37,,"    Map<String, Integer> enumMap = ImmutableMap.of(""FIRST"", 1, ""SECOND"", 2);"
20389,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/AddFieldsTest.java,47,,"    Schema schema = Schema.builder().addStringField(""field1"").build();"
20390,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/AddFieldsTest.java,51,,"                Create.of(Row.withSchema(schema).addValue(""value"").build()).withRowSchema(schema))"
20391,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/AddFieldsTest.java,54,,"                    .field(""field2"", Schema.FieldType.INT32)"
20392,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/AddFieldsTest.java,55,,"                    .field(""field3"", Schema.FieldType.array(Schema.FieldType.STRING))"
20393,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/AddFieldsTest.java,56,,"                    .field(""field4"", Schema.FieldType.iterable(Schema.FieldType.STRING)));"
20394,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/AddFieldsTest.java,95,,"    Schema schema = Schema.builder().addRowField(""nested"", nested).build();"
20395,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/AddFieldsTest.java,104,,"                    .field(""nested.field2"", Schema.FieldType.INT32)"
20396,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/AddFieldsTest.java,105,,"                    .field(""nested.field3"", Schema.FieldType.array(Schema.FieldType.STRING))"
20397,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/AddFieldsTest.java,106,,"                    .field(""nested.field4"", Schema.FieldType.iterable(Schema.FieldType.STRING)));"
20398,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/CoGroupTest.java,64,,"          .addStringField(""user"")"
20399,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/CoGroupTest.java,66,,"          .addStringField(""country"")"
20400,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/CoGroupTest.java,113,,"                ""Create1"","
20401,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/CoGroupTest.java,115,,"                    Row.withSchema(CG_SCHEMA_1).addValues(""user1"", 1, ""us"").build(),"
20402,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/CoGroupTest.java,119,,"                    Row.withSchema(CG_SCHEMA_1).addValues(""user2"", 5, ""fr"").build(),"
20403,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/CoGroupTest.java,127,,"                ""Create2"","
20404,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/CoGroupTest.java,141,,"                ""Create3"","
20405,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/CoGroupTest.java,157,,"            .addIterableField(""pc1"", FieldType.row(CG_SCHEMA_1))"
20406,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/CoGroupTest.java,158,,"            .addIterableField(""pc2"", FieldType.row(CG_SCHEMA_1))"
20407,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/CoGroupTest.java,159,,"            .addIterableField(""pc3"", FieldType.row(CG_SCHEMA_1))"
20408,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/CoGroupTest.java,232,,"            .apply(""CoGroup"", CoGroup.join(By.fieldNames(""user"", ""country"")));"
20409,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/CoGroupTest.java,242,,"          .addStringField(""country2"")"
20410,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/CoGroupTest.java,247,,"          .addStringField(""user3"")"
20411,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/CoGroupTest.java,249,,"          .addStringField(""country3"")"
20412,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/ConvertTest.java,56,,"    public String field1 = ""field1"";"
20413,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/ConvertTest.java,92,,"    public String yard1 = ""yard2"";"
20414,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/DropFieldsTest.java,44,,"      Schema.builder().addInt32Field(""field1"").addStringField(""field2"").build();"
20415,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/DropFieldsTest.java,54,,"    return Row.withSchema(NESTED_SCHEMA).addValues(nested, ""foo"").build();"
20416,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/DropFieldsTest.java,85,,"                Create.of(simpleRow(1, ""one""), simpleRow(2, ""two""), simpleRow(3, ""three""))"
20417,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/DropFieldsTest.java,85,,"                Create.of(simpleRow(1, ""one""), simpleRow(2, ""two""), simpleRow(3, ""three""))"
20418,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/DropFieldsTest.java,85,,"                Create.of(simpleRow(1, ""one""), simpleRow(2, ""two""), simpleRow(3, ""three""))"
20419,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/FilterTest.java,65,,"        .apply(Create.of(new AutoValue_FilterTest_Simple(""pass"", 52, 2)))"
20420,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/GroupTest.java,94,,"          .addStringField(""field1"")"
20421,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/GroupTest.java,95,,"          .addInt64Field(""field2"")"
20422,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/GroupTest.java,106,,"                    Basic.of(""key1"", 1, ""value1""),"
20423,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/GroupTest.java,106,,"                    Basic.of(""key1"", 1, ""value1""),"
20424,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/GroupTest.java,107,,"                    Basic.of(""key1"", 2, ""value2""),"
20425,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/GroupTest.java,108,,"                    Basic.of(""key2"", 3, ""value3""),"
20426,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/GroupTest.java,108,,"                    Basic.of(""key2"", 3, ""value3""),"
20427,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/GroupTest.java,109,,"                    Basic.of(""key2"", 4, ""value4"")))"
20428,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/GroupTest.java,115,,"            .addRowField(""key"", keySchema)"
20429,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/GroupTest.java,116,,"            .addIterableField(""value"", FieldType.row(BASIC_SCHEMA))"
20430,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/GroupTest.java,212,,"            .apply(Group.byFieldNames(""inner.field1"", ""inner.field2""));"
20431,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/GroupTest.java,329,,"                    .aggregateField(""field1"", Sum.ofLongs(), ""field1_sum"")"
20432,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/GroupTest.java,330,,"                    .aggregateField(""field3"", Sum.ofIntegers(), ""field3_sum"")"
20433,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/GroupTest.java,331,,"                    .aggregateField(""field1"", Top.largestLongsFn(1), ""field1_top""));"
20434,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/JoinTest.java,48,,"          .addStringField(""user"")"
20435,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/JoinTest.java,50,,"          .addStringField(""country"")"
20436,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/JoinTest.java,54,,"          .addStringField(""user2"")"
20437,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/JoinTest.java,56,,"          .addStringField(""country2"")"
20438,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/JoinTest.java,64,,"            Row.withSchema(CG_SCHEMA_1).addValues(""user1"", 1, ""us"").build(),"
20439,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/JoinTest.java,72,,"            Row.withSchema(CG_SCHEMA_1).addValues(""user3"", 8, ""ar"").build());"
20440,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/JoinTest.java,83,,"            Row.withSchema(CG_SCHEMA_1).addValues(""user4"", 8, ""ar"").build());"
20441,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/JoinTest.java,85,,"    PCollection<Row> pc1 = pipeline.apply(""Create1"", Create.of(pc1Rows)).setRowSchema(CG_SCHEMA_1);"
20442,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/JoinTest.java,86,,"    PCollection<Row> pc2 = pipeline.apply(""Create2"", Create.of(pc2Rows)).setRowSchema(CG_SCHEMA_1);"
20443,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/RenameFieldsTest.java,50,,"    Schema schema = Schema.builder().addStringField(""field1"").addInt32Field(""field2"").build();"
20444,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/RenameFieldsTest.java,50,,"    Schema schema = Schema.builder().addStringField(""field1"").addInt32Field(""field2"").build();"
20445,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/RenameFieldsTest.java,55,,"                        Row.withSchema(schema).addValues(""one"", 1).build(),"
20446,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/RenameFieldsTest.java,56,,"                        Row.withSchema(schema).addValues(""two"", 2).build())"
20447,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/RenameFieldsTest.java,58,,"            .apply(RenameFields.<Row>create().rename(""field1"", ""new1"").rename(""field2"", ""new2""));"
20448,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/RenameFieldsTest.java,58,,"            .apply(RenameFields.<Row>create().rename(""field1"", ""new1"").rename(""field2"", ""new2""));"
20449,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/RenameFieldsTest.java,74,,"        Schema.builder().addStringField(""field1"").addRowField(""nested"", nestedSchema).build();"
20450,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/RenameFieldsTest.java,138,,"                    .rename(""field1"", ""top1"")"
20451,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/SelectTest.java,66,,"      return new AutoValue_SelectTest_Schema1(""field1"", 42, 3.14);"
20452,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/SelectTest.java,217,,"            .apply(Select.fieldNames(""field2""))"
20453,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/SelectTest.java,299,,"            .apply(Select.fieldNames(""field1.field1"", ""field1.field3""))"
20454,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/SelectTest.java,299,,"            .apply(Select.fieldNames(""field1.field1"", ""field1.field3""))"
20455,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/SelectTest.java,313,,"              ""key1"", Schema1.create(),"
20456,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/SelectTest.java,314,,"              ""key2"", Schema1.create(),"
20457,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/transforms/SelectTest.java,315,,"              ""key3"", Schema1.create()));"
20458,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/utils/AvroUtilsTest.java,153,,"            ""arrayField"","
20459,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/utils/AvroUtilsTest.java,185,,"            ""bool"", org.apache.avro.Schema.create(Type.BOOLEAN), """", null));"
20460,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/utils/AvroUtilsTest.java,187,,"        new org.apache.avro.Schema.Field(""int"", org.apache.avro.Schema.create(Type.INT), """", null));"
20461,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/utils/AvroUtilsTest.java,193,,"        name, null, ""topLevelRecord"", false, getAvroSubSchemaFields());"
20462,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/utils/AvroUtilsTest.java,215,,"            ""string"", org.apache.avro.Schema.create(Type.STRING), """", (Object) null));"
20463,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/utils/AvroUtilsTest.java,228,,"            ""timestampMillis"","
20464,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/utils/AvroUtilsTest.java,232,,"    fields.add(new org.apache.avro.Schema.Field(""row"", getAvroSubSchema(""row""), """", (Object) null));"
20465,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/utils/AvroUtilsTest.java,235,,"            ""array"","
20466,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/utils/AvroUtilsTest.java,241,,"            ""map"", org.apache.avro.Schema.createMap(getAvroSubSchema(""map"")), """", (Object) null));"
20467,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/utils/AvroUtilsTest.java,523,,"            ""union"", org.apache.avro.Schema.createUnion(unionFields), """", null));"
20468,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/utils/AvroUtilsTest.java,568,,"            + ""  }, """
20469,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/utils/AvroUtilsTest.java,569,,"            + ""  { """
20470,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/utils/JavaBeanUtilsTest.java,125,,"    simpleBean.setStr(""field1"");"
20471,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/utils/JavaBeanUtilsTest.java,131,,"    simpleBean.setDateTime(DateTime.parse(""1979-03-14""));"
20472,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/utils/JavaBeanUtilsTest.java,132,,"    simpleBean.setInstant(DateTime.parse(""1979-03-15"").toInstant());"
20473,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/utils/JavaBeanUtilsTest.java,133,,"    simpleBean.setBytes(""bytes1"".getBytes(StandardCharsets.UTF_8));"
20474,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/utils/JavaBeanUtilsTest.java,134,,"    simpleBean.setByteBuffer(ByteBuffer.wrap(""bytes2"".getBytes(StandardCharsets.UTF_8)));"
20475,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/utils/JavaBeanUtilsTest.java,136,,"    simpleBean.setStringBuilder(new StringBuilder(""stringBuilder""));"
20476,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/utils/POJOUtilsTest.java,127,,"            ""field1"","
20477,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/utils/POJOUtilsTest.java,138,,"            new StringBuilder(""stringBuilder""));"
20478,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/utils/SelectHelpersTest.java,50,,"          .addStringField(""field1"")"
20479,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/utils/SelectHelpersTest.java,51,,"          .addInt32Field(""field2"")"
20480,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/utils/SelectHelpersTest.java,52,,"          .addDoubleField(""field3"")"
20481,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/utils/SelectHelpersTest.java,53,,"          .addStringField(""field_extra"")"
20482,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/utils/SelectHelpersTest.java,56,,"      Row.withSchema(FLAT_SCHEMA).addValues(""first"", 42, 3.14, ""extra"").build();"
20483,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/utils/SelectHelpersTest.java,59,,"      Schema.builder().addRowField(""nested"", FLAT_SCHEMA).addStringField(""foo"").build();"
20484,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/utils/TestJavaBeans.java,303,,"          .addByteField(""aByte"")"
20485,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/utils/TestJavaBeans.java,304,,"          .addInt16Field(""aShort"")"
20486,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/utils/TestPOJOs.java,75,,"      Schema.builder().addNullableField(""str"", FieldType.STRING).addInt32Field(""anInt"").build();"
20487,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/utils/TestPOJOs.java,230,,"    @SchemaFieldName(""aByte"")"
20488,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/schemas/utils/TestPOJOs.java,233,,"    @SchemaFieldName(""aShort"")"
20489,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/testing/CoderPropertiesTest.java,48,,"    CoderProperties.coderDeterministic(StringUtf8Coder.of(), ""TestData"", ""TestData"");"
20490,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/testing/CoderPropertiesTest.java,80,,"    fail(""Expected AssertionError"");"
20491,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/testing/PAssertTest.java,252,,"    ""deprecation"", // test of deprecated function"
20492,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/testing/PAssertTest.java,494,,"    assertThat(message, containsString(""Expected: iterable with items [] in any order""));"
20493,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/testing/PAssertTest.java,578,,"    PCollection<Integer> create = pipeline.apply(""FirstCreate"", Create.of(1, 2, 3));"
20494,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/testing/PAssertTest.java,606,,"    PCollection<Integer> secondCollection = pipeline.apply(""SecondCreate"", Create.of(4, 5, 6));"
20495,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/testing/RestoreSystemPropertiesTest.java,40,,"    System.getProperties().put(""TestA"", ""TestA"");"
20496,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/testing/RestoreSystemPropertiesTest.java,42,,"    assertNull(System.getProperty(""TestB""));"
20497,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/testing/TestStreamTest.java,193,,"            .addElements(TimestampedValue.of(""onTimePane"", new Instant(500)))"
20498,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/testing/TestStreamTest.java,273,,"                TimestampedValue.of(""foo"", endOfGlobalWindow),"
20499,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/testing/TestStreamTest.java,274,,"                TimestampedValue.of(""bar"", endOfGlobalWindow))"
20500,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/testing/TestStreamTest.java,378,,"                    .via(v -> KV.of(""key"", v)))"
20501,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/CombineFnsTest.java,130,,"            .apply(WithKeys.of(""global""))"
20502,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/CombineTest.java,149,,"      PCollection<Integer> sum = globallyInput.apply(""Sum"", Combine.globally(new SumInts()));"
20503,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/CombineTest.java,818,,"      assertThat(displayData, hasDisplayItem(""combineFn"", combineFn.getClass()));"
20504,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/CombineTest.java,1100,,"                  KV.of(""a"", ""2:11""), KV.of(""a"", ""5:4""), KV.of(""b"", ""5:1""), KV.of(""b"", ""13:13"")));"
20505,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/CombineTest.java,1100,,"                  KV.of(""a"", ""2:11""), KV.of(""a"", ""5:4""), KV.of(""b"", ""5:1""), KV.of(""b"", ""13:13"")));"
20506,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/CombineTest.java,1202,,"                  KV.of(""a"", ""1:1""),"
20507,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/CreateTest.java,222,,"            new UnserializableRecord(""foo""),"
20508,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/CreateTest.java,223,,"            new UnserializableRecord(""bar""),"
20509,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/DeduplicateTest.java,106,,"                TimestampedValue.of(""maybedup"", base.plus(Duration.standardSeconds(59))))"
20510,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/DistinctTest.java,292,,"    predupedContents.put(3, ""foo"");"
20511,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/DistinctTest.java,293,,"    predupedContents.put(4, ""foos"");"
20512,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/DistinctTest.java,294,,"    predupedContents.put(6, ""barbaz"");"
20513,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/DistinctTest.java,295,,"    predupedContents.put(6, ""bazbar"");"
20514,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/DoFnTesterTest.java,209,,"      assertThat(tester.processBundle(1L, 2L, 3L), contains(""1/0"", ""1/0"", ""1/0""));"
20515,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/DoFnTesterTest.java,421,,"      checkState(state == LifecycleState.UNINITIALIZED, ""Wrong state: %s"", state);"
20516,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/FilterTest.java,163,,"    assertThat(DisplayData.from(Filter.lessThan(123)), hasDisplayItem(""predicate"", ""x < 123""));"
20517,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/FlatMapElementsTest.java,208,,"    assertThat(DisplayData.from(simpleMap), hasDisplayItem(""class"", simpleFn.getClass()));"
20518,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/FlatMapElementsTest.java,236,,"            builder.add(DisplayData.item(""foo"", ""baz""));"
20519,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/FlatMapElementsTest.java,236,,"            builder.add(DisplayData.item(""foo"", ""baz""));"
20520,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/GroupByKeyTest.java,211,,"          p.apply(Create.of(KV.of(""hello"", ""goodbye"")))"
20521,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/GroupByKeyTest.java,211,,"          p.apply(Create.of(KV.of(""hello"", ""goodbye"")))"
20522,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/GroupByKeyTest.java,537,,"                      TimestampedValue.of(KV.of(""foo"", 1), new Instant(1)),"
20523,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/GroupByKeyTest.java,539,,"                      TimestampedValue.of(KV.of(""bar"", 3), new Instant(3))))"
20524,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/GroupIntoBatchesTest.java,103,,"            .apply(""Input data"", Create.of(data))"
20525,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/GroupIntoBatchesTest.java,107,,"    PAssert.that(""Incorrect batch size in one or more elements"", collection)"
20526,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/GroupIntoBatchesTest.java,126,,"    PAssert.thatSingleton(""Incorrect collection size"", collection.apply(""Count"", Count.globally()))"
20527,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/GroupIntoBatchesTest.java,126,,"    PAssert.thatSingleton(""Incorrect collection size"", collection.apply(""Count"", Count.globally()))"
20528,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/JsonToRowTest.java,62,,"          jsonPerson(""person1"", ""80"", ""true""),"
20529,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/JsonToRowTest.java,62,,"          jsonPerson(""person1"", ""80"", ""true""),"
20530,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/JsonToRowTest.java,63,,"          jsonPerson(""person2"", ""70"", ""false""),"
20531,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/JsonToRowTest.java,63,,"          jsonPerson(""person2"", ""70"", ""false""),"
20532,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/JsonToRowTest.java,64,,"          jsonPerson(""person3"", ""60"", ""true""),"
20533,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/JsonToRowTest.java,65,,"          jsonPerson(""person4"", ""50"", ""false""),"
20534,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/JsonToRowTest.java,66,,"          jsonPerson(""person5"", ""40"", ""true""));"
20535,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/JsonToRowTest.java,101,,"          Stream.of(ImmutableList.of(""{}"", ""Is it 42?""), JSON_PERSON)"
20536,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/JsonToRowTest.java,117,,"            ""jsonPersons"","
20537,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/KeysTest.java,44,,"        KV.of(""one"", 1), KV.of(""two"", 2), KV.of(""three"", 3), KV.of(""dup"", 4), KV.of(""dup"", 5)"
20538,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/KvSwapTest.java,50,,"        KV.of(""dup"", 4),"
20539,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/LatestTest.java,61,,"                    TimestampedValue.of(""bar"", new Instant(300)),"
20540,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/MapElementsTest.java,82,,"      return KV.of(input, ""hello"");"
20541,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/MapElementsTest.java,178,,"        .apply(""Polymorphic Identity"", MapElements.via(new PolymorphicSimpleFunction<>()))"
20542,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/MapElementsTest.java,182,,"            ""Test Consumer"","
20543,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/MapElementsTest.java,348,,"        DisplayData.from(serializableMap), hasDisplayItem(""class"", serializableFn.getClass()));"
20544,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/MapElementsTest.java,398,,"            builder.add(DisplayData.item(""foo"", ""baz""));"
20545,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/MapElementsTest.java,398,,"            builder.add(DisplayData.item(""foo"", ""baz""));"
20546,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoLifecycleTest.java,182,,"      fail(""Pipeline should have failed with an exception"");"
20547,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoSchemaTest.java,93,,"        Schema.builder().addStringField(""string_field"").addInt32Field(""integer_field"").build();"
20548,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoSchemaTest.java,93,,"        Schema.builder().addStringField(""string_field"").addInt32Field(""integer_field"").build();"
20549,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoSchemaTest.java,113,,"    PAssert.that(output).containsInAnyOrder(""a:1"", ""b:2"", ""c:3"");"
20550,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoSchemaTest.java,113,,"    PAssert.that(output).containsInAnyOrder(""a:1"", ""b:2"", ""c:3"");"
20551,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoSchemaTest.java,113,,"    PAssert.that(output).containsInAnyOrder(""a:1"", ""b:2"", ""c:3"");"
20552,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoSchemaTest.java,127,,"        Schema.builder().addStringField(""string2_field"").addInt32Field(""integer2_field"").build();"
20553,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoSchemaTest.java,127,,"        Schema.builder().addStringField(""string2_field"").addInt32Field(""integer2_field"").build();"
20554,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoSchemaTest.java,142,,"                ""first"","
20555,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoSchemaTest.java,159,,"                ""second"","
20556,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoSchemaTest.java,335,,"                      @FieldAccess(""foo"")"
20557,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoSchemaTest.java,688,,"                    KV.of(""hello"", Row.withSchema(type).addValue(""a"").build()),"
20558,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java,243,,"      c.output(""finished"", BoundedWindow.TIMESTAMP_MIN_VALUE, GlobalWindow.INSTANCE);"
20559,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java,473,,"              builder.add(DisplayData.item(""doFnMetadata"", ""bar""));"
20560,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java,620,,"      String testOptionValue = ""not fake anymore"";"
20561,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java,666,,"      TupleTag<String> mainOutputTag = new TupleTag<String>(""main"") {};"
20562,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java,777,,"      final TupleTag<Integer> additionalOutputTag = new TupleTag<Integer>(""additional"") {};"
20563,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java,825,,"              .apply(""CreateSideInput1"", Create.of(11))"
20564,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java,826,,"              .apply(""ViewSideInput1"", View.asSingleton());"
20565,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java,829,,"              .apply(""CreateSideInputUnread"", Create.of(-3333))"
20566,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java,830,,"              .apply(""ViewSideInputUnread"", View.asSingleton());"
20567,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java,833,,"              .apply(""CreateSideInput2"", Create.of(222))"
20568,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java,834,,"              .apply(""ViewSideInput2"", View.asSingleton());"
20569,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java,886,,"      final String sideInputTag1 = ""tag1"";"
20570,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java,896,,"          pipeline.apply(""Create main input"", Create.of(2)).apply(ParDo.of(fn));"
20571,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java,1414,,"      PCollectionTuple firstApplication = longs.apply(""first"", parDo);"
20572,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java,1621,,"        stream = stream.addElements(KV.of(""key"" + (i % 10), i));"
20573,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java,1968,,"      final String stateId = ""foo"";"
20574,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java,1989,,"              .apply(Create.of(KV.of(""hello"", 42), KV.of(""hello"", 97), KV.of(""hello"", 84)))"
20575,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java,2065,,"      pipeline.apply(Create.of(""hello"", ""goodbye"", ""hello again"")).apply(ParDo.of(fn));"
20576,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java,2065,,"      pipeline.apply(Create.of(""hello"", ""goodbye"", ""hello again"")).apply(ParDo.of(fn));"
20577,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java,2198,,"              r.output(KV.of(""sizzle"", currentValue));"
20578,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java,2335,,"      final String countStateId = ""count"";"
20579,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java,2591,,"            @TimerId(""timer"")"
20580,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java,2660,,"                r.output(""right on"");"
20581,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java,3845,,"                            ""Pipeline didn't fail with the expected strings: %s"","
20582,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java,4221,,"              r.output(""timer_output"");"
20583,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java,4227,,"              .addElements(KV.of(""key"", ""input1""))"
20584,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java,4228,,"              .addElements(KV.of(""key"", ""input2""))"
20585,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java,4574,,"            @StateId(""timerFired"")"
20586,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java,4893,,"      final String timerId = ""processing-timer"";"
20587,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java,4931,,"      final String timerId = ""event-timer"";"
20588,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ParDoTest.java,5632,,"              r.output(""process"");"
20589,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/RegexTest.java,44,,"        p.apply(Create.of(""aj"", ""xj"", ""yj"", ""zj"")).apply(Regex.find(""[xyz]""));"
20590,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/RegexTest.java,74,,"            .apply(Regex.find(""(?<namedgroup>[xyz])"", ""namedgroup""));"
20591,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/RegexTest.java,84,,"        p.apply(Create.of(""aj"", ""xjx"", ""yjy"", ""zjz"")).apply(Regex.findAll(""([xyz])j([xyz])""));"
20592,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/RegexTest.java,84,,"        p.apply(Create.of(""aj"", ""xjx"", ""yjy"", ""zjz"")).apply(Regex.findAll(""([xyz])j([xyz])""));"
20593,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/RegexTest.java,84,,"        p.apply(Create.of(""aj"", ""xjx"", ""yjy"", ""zjz"")).apply(Regex.findAll(""([xyz])j([xyz])""));"
20594,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/RegexTest.java,110,,"        p.apply(Create.of(""a b c"")).apply(Regex.findKV(""a (b) (c)"", 1, 2));"
20595,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/RegexTest.java,110,,"        p.apply(Create.of(""a b c"")).apply(Regex.findKV(""a (b) (c)"", 1, 2));"
20596,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/RegexTest.java,121,,"        p.apply(Create.of(""x y z"")).apply(Regex.findKV(""a (b) (c)"", 1, 2));"
20597,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/RegexTest.java,133,,"            .apply(Regex.findKV(""a (?<keyname>b) (?<valuename>c)"", ""keyname"", ""valuename""));"
20598,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/RegexTest.java,133,,"            .apply(Regex.findKV(""a (?<keyname>b) (?<valuename>c)"", ""keyname"", ""valuename""));"
20599,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/RegexTest.java,133,,"            .apply(Regex.findKV(""a (?<keyname>b) (?<valuename>c)"", ""keyname"", ""valuename""));"
20600,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/RegexTest.java,272,,"        p.apply(Create.of(""xj"", ""yj"", ""zj"")).apply(Regex.replaceAll(""[xyz]"", ""new""));"
20601,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/RegexTest.java,274,,"    PAssert.that(output).containsInAnyOrder(""newj"", ""newj"", ""newj"");"
20602,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/RegexTest.java,283,,"        p.apply(Create.of(""abc"", ""xj"", ""yj"", ""zj"", ""def"")).apply(Regex.replaceAll(""[xyz]"", ""new""));"
20603,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/RegexTest.java,283,,"        p.apply(Create.of(""abc"", ""xj"", ""yj"", ""zj"", ""def"")).apply(Regex.replaceAll(""[xyz]"", ""new""));"
20604,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ReifyTest.java,56,,"                KV.of(""foo"", TimestampedValue.of(0, new Instant(0))),"
20605,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ReifyTest.java,58,,"                KV.of(""bar"", TimestampedValue.of(2, new Instant(2))),"
20606,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ReifyTest.java,59,,"                KV.of(""baz"", TimestampedValue.of(3, new Instant(3)))));"
20607,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ReifyTimestampsTest.java,47,,"            .apply(Create.of(KV.of(""foo"", 0), KV.of(""foo"", 1), KV.of(""bar"", 2), KV.of(""baz"", 3)))"
20608,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ReifyTimestampsTest.java,47,,"            .apply(Create.of(KV.of(""foo"", 0), KV.of(""foo"", 1), KV.of(""bar"", 2), KV.of(""baz"", 3)))"
20609,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ReifyTimestampsTest.java,47,,"            .apply(Create.of(KV.of(""foo"", 0), KV.of(""foo"", 1), KV.of(""bar"", 2), KV.of(""baz"", 3)))"
20610,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/SetsTest.java,70,,"    PAssert.that(first.apply(""strings"", Sets.intersectDistinct(second)))"
20611,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/SetsTest.java,73,,"    PCollection<Row> results = firstRows.apply(""rows"", Sets.intersectDistinct(secondRows));"
20612,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/SetsTest.java,86,,"    PCollection<String> third = p.apply(""third"", Create.of(Arrays.asList(""b"", ""b"", ""c"", ""f"")));"
20613,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/SetsTest.java,87,,"    PCollection<Row> thirdRows = p.apply(""thirdRows"", Create.of(toRows(""b"", ""b"", ""c"", ""f"")));"
20614,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/SetsTest.java,93,,"                .apply(""stringsCols"", Sets.intersectDistinct()))"
20615,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/SetsTest.java,100,,"            .apply(""rowCols"", Sets.intersectDistinct());"
20616,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/SplittableDoFnTest.java,146,,"        p.apply(Create.of(""a"", ""bb"", ""ccccc""))"
20617,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/SplittableDoFnTest.java,311,,"        p.apply(Create.of(""foo""))"
20618,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ToStringTest.java,55,,"    kvs.add(KV.of(""one"", 1));"
20619,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ToStringTest.java,56,,"    kvs.add(KV.of(""two"", 2));"
20620,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/TopTest.java,57,,"  @SuppressWarnings(""unchecked"")"
20621,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ViewTest.java,102,,"                ""OutputSideInputs"","
20622,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ViewTest.java,128,,"            .apply(""SideWindowInto"", Window.into(FixedWindows.of(Duration.millis(10))))"
20623,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ViewTest.java,139,,"            .apply(""MainWindowInto"", Window.into(FixedWindows.of(Duration.millis(10))))"
20624,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ViewTest.java,260,,"        pipeline.apply(""CreateSideInput"", Create.of(11, 13, 17, 23)).apply(View.asList());"
20625,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ViewTest.java,264,,"            .apply(""CreateMainInput"", Create.of(29, 31))"
20626,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ViewTest.java,340,,"        pipeline.apply(""CreateEmptyView"", Create.empty(VarIntCoder.of())).apply(View.asList());"
20627,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ViewTest.java,344,,"            .apply(""Create1"", Create.of(1))"
20628,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ViewTest.java,397,,"                              fail(""Expected UnsupportedOperationException on remove()"");"
20629,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ViewTest.java,563,,"            .apply(""CreateMainInput"", Create.of(""apple"", ""banana"", ""blackberry""))"
20630,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ViewTest.java,563,,"            .apply(""CreateMainInput"", Create.of(""apple"", ""banana"", ""blackberry""))"
20631,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ViewTest.java,563,,"            .apply(""CreateMainInput"", Create.of(""apple"", ""banana"", ""blackberry""))"
20632,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/ViewTest.java,1406,,"                ""OutputMainAndSideInputs"","
20633,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/WatchTest.java,186,,"            .apply(""Drop input"", Values.create());"
20634,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/WithKeysTest.java,43,,"  private static final String[] COLLECTION = new String[] {""a"", ""aa"", ""b"", ""bb"", ""bbb""};"
20635,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/WithKeysTest.java,134,,"    PCollection<String> values = p.apply(Create.of(""1234"", ""3210"", ""0"", ""-12""));"
20636,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/WithKeysTest.java,134,,"    PCollection<String> values = p.apply(Create.of(""1234"", ""3210"", ""0"", ""-12""));"
20637,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/WithTimestampsTest.java,53,,"    String yearTwoThousand = ""946684800000"";"
20638,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/WithTimestampsTest.java,55,,"        p.apply(Create.of(""1234"", ""0"", Integer.toString(Integer.MAX_VALUE), yearTwoThousand))"
20639,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/display/DisplayDataMatchersTest.java,48,,"    assertThat(createDisplayDataWithItem(""foo"", ""bar""), matcher);"
20640,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/display/DisplayDataMatchersTest.java,48,,"    assertThat(createDisplayDataWithItem(""foo"", ""bar""), matcher);"
20641,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/display/DisplayDataTest.java,162,,"                builder.add(DisplayData.item(""foo"", ""bar""));"
20642,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/display/DisplayDataTest.java,162,,"                builder.add(DisplayData.item(""foo"", ""bar""));"
20643,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/display/DisplayDataTest.java,182,,"    @SuppressWarnings(""unchecked"")"
20644,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/display/DisplayDataTest.java,370,,"                    .addIfNotDefault(DisplayData.item(""integer"", 123), 123)"
20645,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/display/DisplayDataTest.java,375,,"                    .addIfNotDefault(DisplayData.item(""float"", 1.23f), 1.23f)"
20646,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/display/DisplayDataTest.java,381,,"                    .addIfNotDefault(DisplayData.item(""boolean"", true), true)"
20647,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/display/DisplayDataTest.java,672,,"            builder.add(DisplayData.item(""foo"", ""bar"")).add(DisplayData.item(""foo"", ""baz""));"
20648,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/display/DisplayDataTest.java,862,,"                    .add(DisplayData.item(""string"", ""foobar""))"
20649,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/display/DisplayDataTest.java,862,,"                    .add(DisplayData.item(""string"", ""foobar""))"
20650,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/display/DisplayDataTest.java,866,,"                    .add(DisplayData.item(""java_class"", DisplayDataTest.class))"
20651,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/display/DisplayDataTest.java,867,,"                    .add(DisplayData.item(""timestamp"", Instant.now()))"
20652,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/display/DisplayDataTest.java,868,,"                    .add(DisplayData.item(""duration"", Duration.standardHours(1)));"
20653,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/display/DisplayDataTest.java,904,,"            .put(DisplayData.Type.INTEGER, ""string value"")"
20654,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/display/DisplayDataTest.java,1097,,"              builder.add(DisplayData.item(""key"", (String) null));"
20655,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/join/CoGroupByKeyTest.java,155,,"            KV.of(1, ""Shoes""),"
20656,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/join/CoGroupByKeyTest.java,159,,"            KV.of(8, ""House""),"
20657,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/join/CoGroupByKeyTest.java,160,,"            KV.of(4, ""Suit""),"
20658,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/join/CoGroupByKeyTest.java,172,,"            KV.of(3, ""29 School Rd""),"
20659,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/join/CoGroupByKeyTest.java,487,,"            KV.of(""Click t4:Car t6"", ""4:7""),"
20660,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/reflect/DoFnInvokersTest.java,776,,"            return ""foo"";"
20661,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/reflect/DoFnInvokersTest.java,1215,,"              public void processElement(@SuppressWarnings(""unused"") ProcessContext c) {"
20662,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/reflect/DoFnInvokersTest.java,1216,,"                throw new IllegalArgumentException(""bogus"");"
20663,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/reflect/DoFnSignaturesProcessElementTest.java,32,,"@SuppressWarnings(""unused"")"
20664,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/reflect/DoFnSignaturesTest.java,241,,"    FieldAccessDescriptor descriptor = FieldAccessDescriptor.withFieldNames(""foo"", ""bar"");"
20665,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/reflect/DoFnSignaturesTest.java,424,,"    thrown.expectMessage(""bizzle"");"
20666,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/reflect/DoFnSignaturesTest.java,440,,"    thrown.expectMessage(""my-id"");"
20667,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/reflect/DoFnSignaturesTest.java,475,,"      public static final String TIMER_ID = ""my-timer-id"";"
20668,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/reflect/DoFnSignaturesTest.java,492,,"    thrown.expectMessage(""declared in a different class"");"
20669,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/reflect/DoFnSignaturesTest.java,522,,"    thrown.expectMessage(""myProcessElement"");"
20670,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/reflect/DoFnSignaturesTest.java,879,,"    thrown.expectMessage(""index 1"");"
20671,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/reflect/DoFnSignaturesTest.java,1329,,"    @StateId(""state"")"
20672,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/reflect/DoFnSignaturesTest.java,1352,,"    @TimerId(""timer"")"
20673,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/reflect/testhelper/DoFnInvokersTestHelper.java,42,,"  @SuppressWarnings(""ClassCanBeStatic"")"
20674,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/windowing/PaneInfoTest.java,62,,"        ""PaneInfo encoding should remain the same."","
20675,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/windowing/WindowTest.java,102,,"            .apply(Create.of(""hello"", ""world"").withCoder(StringUtf8Coder.of()))"
20676,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/windowing/WindowTest.java,102,,"            .apply(Create.of(""hello"", ""world"").withCoder(StringUtf8Coder.of()))"
20677,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/windowing/WindowTest.java,161,,"            .apply(""Window"", Window.into(fixed10))"
20678,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/windowing/WindowTest.java,521,,"    assertThat(displayData, hasDisplayItem(""windowFn"", windowFn.getClass()));"
20679,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/windowing/WindowTest.java,524,,"    assertThat(displayData, hasDisplayItem(""trigger"", triggerBuilder.toString()));"
20680,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/windowing/WindowTest.java,527,,"        hasDisplayItem(""accumulationMode"", AccumulationMode.ACCUMULATING_FIRED_PANES.toString()));"
20681,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/windowing/WindowTest.java,528,,"    assertThat(displayData, hasDisplayItem(""allowedLateness"", allowedLateness));"
20682,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/windowing/WindowTest.java,529,,"    assertThat(displayData, hasDisplayItem(""closingBehavior"", closingBehavior.toString()));"
20683,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/transforms/windowing/WindowTest.java,530,,"    assertThat(displayData, hasDisplayItem(""timestampCombiner"", timestampCombiner.toString()));"
20684,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/util/BufferedElementCountingOutputStreamTest.java,145,,"    BufferedElementCountingOutputStream os = createAndWriteValues(toBytes(""abcdefghij""), baos);"
20685,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/util/CoderUtilsTest.java,82,,"    expectedException.expectMessage(""Caller does not own the underlying"");"
20686,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/util/CoderUtilsTest.java,83,,"    CoderUtils.decodeFromBase64(new ClosingCoder(), ""test-value"");"
20687,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/util/HistogramDataTest.java,67,,"    assertThat(String.format(""%.3f"", histogramData1.p50()), equalTo(""4.200""));"
20688,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/util/InstanceBuilderTest.java,49,,"            .withArg(String.class, ""hello world!"")"
20689,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/util/NameUtilsTest.java,42,,"    assertEquals(""Embedded"", NameUtils.approximateSimpleName(""EmbeddedDoFn"", true));"
20690,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/util/NameUtilsTest.java,174,,"    NameOverride overriddenName = () -> ""CUSTOM_NAME"";"
20691,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/util/NumberedShardedFileTest.java,141,,"            ""Unable to read file(s) after retrying "" + NumberedShardedFile.MAX_READ_RETRIES));"
20692,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/util/RowJsonTest.java,87,,"              .addByteField(""f_byte"")"
20693,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/util/RowJsonTest.java,89,,"              .addInt32Field(""f_int32"")"
20694,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/util/RowJsonTest.java,94,,"              .addStringField(""f_string"")"
20695,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/util/RowJsonTest.java,99,,"          ""{\n"""
20696,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/util/RowJsonTest.java,102,,"              + ""\""f_int32\"" : 32,\n"""
20697,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/util/ShardedKeyTest.java,30,,"  private static final String KEY = ""key"";"
20698,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/util/ShardedKeyTest.java,32,,"  private static final byte[] SHARD = ""shard_id"".getBytes(UTF_8);"
20699,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/util/StringUtilsTest.java,50,,"    assertEquals(3, StringUtils.getLevenshteinDistance("""", ""abc"")); // first empty"
20700,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/util/WindowedValueTest.java,94,,"    WindowedValue.of(""foo"", Instant.now(), ImmutableList.of(), PaneInfo.NO_FIRING);"
20701,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/util/ZipFilesTest.java,72,,"    File zipDir = new File(tmpDir, ""zip"");"
20702,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/util/ZipFilesTest.java,76,,"    createFileWithContents(subDir2, ""myTextFile.txt"", ""Simple Text"");"
20703,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/util/ZipFilesTest.java,76,,"    createFileWithContents(subDir2, ""myTextFile.txt"", ""Simple Text"");"
20704,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/values/RowTest.java,60,,"                Schema.Field.of(""f_byte"", FieldType.BYTE).withNullable(true),"
20705,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/values/RowTest.java,61,,"                Schema.Field.of(""f_int16"", FieldType.INT16).withNullable(true),"
20706,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/values/RowTest.java,62,,"                Schema.Field.of(""f_int32"", FieldType.INT32).withNullable(true),"
20707,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/values/RowTest.java,63,,"                Schema.Field.of(""f_int64"", FieldType.INT64).withNullable(true),"
20708,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/values/RowTest.java,64,,"                Schema.Field.of(""f_decimal"", FieldType.DECIMAL).withNullable(true),"
20709,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/values/RowTest.java,65,,"                Schema.Field.of(""f_float"", FieldType.FLOAT).withNullable(true),"
20710,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/values/RowTest.java,66,,"                Schema.Field.of(""f_double"", FieldType.DOUBLE).withNullable(true),"
20711,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/values/RowTest.java,67,,"                Schema.Field.of(""f_string"", FieldType.STRING).withNullable(true),"
20712,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/values/RowTest.java,68,,"                Schema.Field.of(""f_datetime"", FieldType.DATETIME).withNullable(true),"
20713,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/values/RowTest.java,69,,"                Schema.Field.of(""f_boolean"", FieldType.BOOLEAN).withNullable(true),"
20714,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/values/RowTest.java,70,,"                Schema.Field.of(""f_array"", FieldType.array(FieldType.DATETIME)).withNullable(true),"
20715,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/values/RowTest.java,73,,"                Schema.Field.of(""f_map"", FieldType.map(FieldType.INT32, FieldType.DOUBLE))"
20716,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/values/RowTest.java,109,,"    Schema type = Stream.of(Schema.Field.of(""f_int"", Schema.FieldType.INT32)).collect(toSchema());"
20717,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/values/RowTest.java,163,,"        Stream.of(Schema.Field.of(""f1_str"", Schema.FieldType.STRING)).collect(toSchema());"
20718,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/values/RowTest.java,180,,"        Stream.of(Schema.Field.of(""array"", Schema.FieldType.array(Schema.FieldType.INT32)))"
20719,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/values/RowTest.java,190,,"        Stream.of(Schema.Field.of(""iter"", Schema.FieldType.iterable(Schema.FieldType.INT32)))"
20720,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/values/RowTest.java,255,,"            Row.withSchema(nestedType).addValues(""one"").build(),"
20721,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/values/RowTest.java,256,,"            Row.withSchema(nestedType).addValues(""two"").build(),"
20722,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/values/RowTest.java,257,,"            Row.withSchema(nestedType).addValues(""three"").build());"
20723,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/values/RowTest.java,339,,"            .add(ImmutableMap.of(1, ""value1""))"
20724,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/values/RowTest.java,340,,"            .add(ImmutableMap.of(2, ""value2""))"
20725,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/values/RowTest.java,377,,"        Stream.of(Schema.Field.of(""map"", FieldType.map(FieldType.INT32, FieldType.STRING)))"
20726,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/values/RowTest.java,487,,"    EnumerationType enumerationType = EnumerationType.create(""zero"", ""one"", ""two"");"
20727,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/values/RowTest.java,489,,"        Stream.of(Schema.Field.of(""f1_enum"", FieldType.logicalType(enumerationType)))"
20728,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/values/RowTest.java,530,,"                Schema.Field.of(""f_str"", FieldType.STRING),"
20729,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/values/RowTest.java,542,,"                Schema.Field.of(""f_iterable"", FieldType.iterable(FieldType.STRING)),"
20730,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/values/RowTest.java,598,,"                Schema.Field.of(""top_int"", FieldType.INT32),"
20731,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/values/RowTest.java,604,,"            .withFieldValue(""f_nested.f_str"", ""string"")"
20732,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/values/RowTest.java,604,,"            .withFieldValue(""f_nested.f_str"", ""string"")"
20733,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/values/RowTest.java,605,,"            .withFieldValue(""f_nested.f_int"", 43)"
20734,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/values/RowTest.java,649,,"    Row modifiedRow = Row.fromRow(sourceRow).withFieldValue(""f_str"", ""modifiedString"").build();"
20735,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/values/RowTest.java,749,,"    Schema schema = Schema.builder().addLogicalTypeField(""char"", FixedBytes.of(10)).build();"
20736,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/values/TimestampedValueTest.java,42,,"    TimestampedValue<String> tsv = TimestampedValue.of(""foobar"", now);"
20737,./TargetProjects/beam/sdks/java/core/src/test/java/org/apache/beam/sdk/values/TimestampedValueTest.java,71,,"            TimestampedValue.of(""foo"", new Instant(1000)),"
20738,./TargetProjects/beam/sdks/java/expansion-service/src/test/java/org/apache/beam/sdk/expansion/service/ExpansionServerTest.java,34,,"        ExpansionServer.create(new ExpansionService(), ""localhost"", 0)) {"
20739,./TargetProjects/beam/sdks/java/expansion-service/src/test/java/org/apache/beam/sdk/expansion/service/ExpansionServiceTest.java,210,,"                              hasProperty(""key"", equalTo(entry.getKey())),"
20740,./TargetProjects/beam/sdks/java/expansion-service/src/test/java/org/apache/beam/sdk/expansion/service/ExpansionServiceTest.java,211,,"                              hasProperty(""value"", equalTo(entry.getValue()))))"
20741,./TargetProjects/beam/sdks/java/extensions/arrow/src/main/java/org/apache/beam/sdk/extensions/arrow/ArrowConversion.java,78,,"                        ""Type \'"" + type.toString() + ""\' not supported."");"
20742,./TargetProjects/beam/sdks/java/extensions/arrow/src/main/java/org/apache/beam/sdk/extensions/arrow/ArrowConversion.java,78,,"                        ""Type \'"" + type.toString() + ""\' not supported."");"
20743,./TargetProjects/beam/sdks/java/extensions/euphoria/src/main/java/org/apache/beam/sdk/extensions/euphoria/core/client/operator/Distinct.java,216,,"    @SuppressWarnings(""unchecked"")"
20744,./TargetProjects/beam/sdks/java/extensions/euphoria/src/main/java/org/apache/beam/sdk/extensions/euphoria/core/client/operator/Join.java,203,,"      @SuppressWarnings(""unchecked"")"
20745,./TargetProjects/beam/sdks/java/extensions/euphoria/src/main/java/org/apache/beam/sdk/extensions/euphoria/core/client/operator/ReduceByKey.java,261,,"    @SuppressWarnings(""unchecked"")"
20746,./TargetProjects/beam/sdks/java/extensions/euphoria/src/main/java/org/apache/beam/sdk/extensions/euphoria/core/client/operator/ReduceWindow.java,212,,"    @SuppressWarnings(""unchecked"")"
20747,./TargetProjects/beam/sdks/java/extensions/euphoria/src/main/java/org/apache/beam/sdk/extensions/euphoria/core/client/operator/TopPerKey.java,237,,"    @SuppressWarnings(""unchecked"")"
20748,./TargetProjects/beam/sdks/java/extensions/euphoria/src/main/java/org/apache/beam/sdk/extensions/euphoria/core/translate/AbstractJoinTranslator.java,36,,"    @SuppressWarnings(""unchecked"")"
20749,./TargetProjects/beam/sdks/java/extensions/euphoria/src/main/java/org/apache/beam/sdk/extensions/euphoria/core/translate/ReduceByKeyTranslator.java,94,,"      @SuppressWarnings(""unchecked"")"
20750,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/client/operator/CountByKeyTest.java,52,,"        CountByKey.named(""CountByKey1"")"
20751,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/client/operator/FlatMapTest.java,45,,"        FlatMap.named(""FlatMap1"")"
20752,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/client/operator/JoinTest.java,62,,"        Join.named(""Join1"")"
20753,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/client/operator/JoinTest.java,224,,"    @SuppressWarnings(""unchecked"")"
20754,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/client/operator/MapElementsTest.java,43,,"    final PCollection<String> mapped = MapElements.named(""Map1"").of(dataset).using(s -> s).output();"
20755,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/client/operator/ReduceByKeyTest.java,85,,"    @SuppressWarnings(""unchecked"")"
20756,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/client/operator/ReduceWindowTest.java,47,,"  @SuppressWarnings(""unchecked"")"
20757,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/client/operator/ReduceWindowTest.java,53,,"    assertEquals(1L, (long) collectSingle(rw.getReducer(), Stream.of(""blah"")));"
20758,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/client/operator/UnionTest.java,46,,"    final PCollection<String> unioned = Union.named(""Union1"").of(left, right).output();"
20759,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/docs/DocumentationExamplesTest.java,163,,"            .apply(Create.of(""mouse"", ""rat"", ""elephant"", ""cat"", ""X"", ""duck""))"
20760,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/docs/DocumentationExamplesTest.java,163,,"            .apply(Create.of(""mouse"", ""rat"", ""elephant"", ""cat"", ""X"", ""duck""))"
20761,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/docs/DocumentationExamplesTest.java,163,,"            .apply(Create.of(""mouse"", ""rat"", ""elephant"", ""cat"", ""X"", ""duck""))"
20762,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/docs/DocumentationExamplesTest.java,163,,"            .apply(Create.of(""mouse"", ""rat"", ""elephant"", ""cat"", ""X"", ""duck""))"
20763,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/docs/DocumentationExamplesTest.java,163,,"            .apply(Create.of(""mouse"", ""rat"", ""elephant"", ""cat"", ""X"", ""duck""))"
20764,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/docs/DocumentationExamplesTest.java,306,,"            .apply(""left"", Create.of(1, 2, 3, 0, 4, 3, 1))"
20765,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/docs/DocumentationExamplesTest.java,310,,"            .apply(""right"", Create.of(""mouse"", ""rat"", ""elephant"", ""cat"", ""X"", ""duck""))"
20766,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/docs/DocumentationExamplesTest.java,328,,"                KV.of(1, ""1+X""),"
20767,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/docs/DocumentationExamplesTest.java,329,,"                KV.of(3, ""3+cat""),"
20768,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/docs/DocumentationExamplesTest.java,330,,"                KV.of(3, ""3+rat""),"
20769,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/docs/DocumentationExamplesTest.java,331,,"                KV.of(4, ""4+duck""),"
20770,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/docs/DocumentationExamplesTest.java,556,,"        ReduceByKey.named(""to-letters-couts"")"
20771,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/testkit/BroadcastHashJoinTest.java,114,,"                KV.of(2, ""2+12""),"
20772,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/testkit/BroadcastHashJoinTest.java,117,,"                KV.of(1, ""1+11""),"
20773,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/testkit/BroadcastHashJoinTest.java,119,,"                KV.of(3, ""3+13""),"
20774,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/testkit/JoinTest.java,97,,"                KV.of(0, ""0+null""),"
20775,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/testkit/JoinTest.java,98,,"                KV.of(2, ""2+12""),"
20776,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/testkit/JoinTest.java,100,,"                KV.of(4, ""4+14""),"
20777,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/testkit/JoinTest.java,101,,"                KV.of(1, ""1+11""),"
20778,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/testkit/JoinTest.java,103,,"                KV.of(3, ""3+13""),"
20779,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/testkit/JoinTest.java,105,,"                KV.of(5, ""null+15""));"
20780,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/testkit/JoinTest.java,414,,"                KV.of(1, ""1+null""),"
20781,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/testkit/JoinTest.java,417,,"                KV.of(3, ""3+null""),"
20782,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/testkit/ReduceByKeyTest.java,295,,"                KV.of(""one"", 5L), KV.of(""two"", 4L), KV.of(""three"", 3L), KV.of(""four"", 2L));"
20783,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/testkit/ReduceByKeyTest.java,295,,"                KV.of(""one"", 5L), KV.of(""two"", 4L), KV.of(""three"", 3L), KV.of(""four"", 2L));"
20784,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/testkit/ReduceByKeyTest.java,295,,"                KV.of(""one"", 5L), KV.of(""two"", 4L), KV.of(""three"", 3L), KV.of(""four"", 2L));"
20785,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/testkit/ReduceByKeyTest.java,432,,"                KV.of(new Word(""euphoria""), 300L),"
20786,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/testkit/ReduceByKeyTest.java,434,,"                KV.of(new Word(""spark""), 900L),"
20787,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/testkit/TopPerKeyTest.java,66,,"                Triple.of(""one"", ""one-999"", 999),"
20788,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/testkit/TopPerKeyTest.java,66,,"                Triple.of(""one"", ""one-999"", 999),"
20789,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/testkit/TopPerKeyTest.java,67,,"                Triple.of(""two"", ""two"", 10),"
20790,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/testkit/TopPerKeyTest.java,68,,"                Triple.of(""three"", ""3-three"", 2));"
20791,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/testkit/TopPerKeyTest.java,68,,"                Triple.of(""three"", ""3-three"", 2));"
20792,./TargetProjects/beam/sdks/java/extensions/euphoria/src/test/java/org/apache/beam/sdk/extensions/euphoria/core/translate/provider/GenericTranslatorProviderTest.java,44,,"    String translatorName = ""translator"";"
20793,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/options/GcpOptionsTest.java,75,,"      assertEquals(""test-project"", runGetProjectTest(tmpFolder.newFile(""properties""), environment));"
20794,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/options/GcpOptionsTest.java,75,,"      assertEquals(""test-project"", runGetProjectTest(tmpFolder.newFile(""properties""), environment));"
20795,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/options/GcpOptionsTest.java,85,,"          runGetProjectTest(new File(tmpFolder.newFolder(""gcloud""), ""properties""), environment));"
20796,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/options/GcpOptionsTest.java,91,,"      System.setProperty(""user.home"", tmpFolder.getRoot().getAbsolutePath());"
20797,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/options/GcpOptionsTest.java,95,,"              new File(tmpFolder.newFolder("".config"", ""gcloud""), ""properties""), environment));"
20798,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/options/GoogleApiDebugOptionsTest.java,57,,"        Transport.newStorageClient(options).build().objects().get(""testBucketId"", ""testObjectId"");"
20799,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/options/GoogleApiDebugOptionsTest.java,57,,"        Transport.newStorageClient(options).build().objects().get(""testBucketId"", ""testObjectId"");"
20800,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/options/GoogleApiDebugOptionsTest.java,58,,"    assertEquals(""GetTraceDestination"", request.get(""$trace""));"
20801,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/options/GoogleApiDebugOptionsTest.java,70,,"        Transport.newStorageClient(options).build().objects().list(""testProjectId"");"
20802,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/options/GoogleApiDebugOptionsTest.java,101,,"    assertEquals(""TraceDestination"", getRequest.get(""$trace""));"
20803,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/storage/GcsFileSystemTest.java,75,,"    items.add(new StorageObject().setBucket(""testbucket"").setName(""testdirectory/""));"
20804,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/storage/GcsFileSystemTest.java,78,,"    items.add(createStorageObject(""gs://testbucket/testdirectory/file1name"", 1L /* fileSize */));"
20805,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/storage/GcsFileSystemTest.java,79,,"    items.add(createStorageObject(""gs://testbucket/testdirectory/file2name"", 2L /* fileSize */));"
20806,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/storage/GcsFileSystemTest.java,80,,"    items.add(createStorageObject(""gs://testbucket/testdirectory/file3name"", 3L /* fileSize */));"
20807,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/storage/GcsFileSystemTest.java,81,,"    items.add(createStorageObject(""gs://testbucket/testdirectory/file4name"", 4L /* fileSize */));"
20808,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/storage/GcsFileSystemTest.java,82,,"    items.add(createStorageObject(""gs://testbucket/testdirectory/otherfile"", 5L /* fileSize */));"
20809,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/storage/GcsResourceIdTest.java,67,,"        toResourceIdentifier(""gs://my_bucket"").resolve(""tmp"", StandardResolveOptions.RESOLVE_FILE));"
20810,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/storage/GcsResourceIdTest.java,79,,"        toResourceIdentifier(""gs://my_bucket/tmp/""),"
20811,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/storage/GcsResourceIdTest.java,80,,"        toResourceIdentifier(""gs://my_bucket/"")"
20812,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/storage/GcsResourceIdTest.java,106,,"        toResourceIdentifier(""gs://my_bucket/tmp dir/""),"
20813,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/util/CustomHttpErrorsTest.java,79,,"    builder.addErrorForCode(403, ""Custom Error Msg"");"
20814,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/util/GcsUtilTest.java,184,,"    items.add(new StorageObject().setBucket(""testbucket"").setName(""testdirectory/""));"
20815,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/util/GcsUtilTest.java,217,,"              GcsPath.fromUri(""gs://testbucket/testdirectory/file1name""),"
20816,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/util/GcsUtilTest.java,218,,"              GcsPath.fromUri(""gs://testbucket/testdirectory/file2name""),"
20817,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/util/GcsUtilTest.java,219,,"              GcsPath.fromUri(""gs://testbucket/testdirectory/file3name""));"
20818,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/util/GcsUtilTest.java,323,,"            HttpStatusCodes.STATUS_CODE_NOT_FOUND, ""It don't exist"", ""Nothing here to see"");"
20819,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/util/GcsUtilTest.java,374,,"    when(mockStorageObjects.get(""testbucket"", ""testobject"")).thenReturn(mockStorageGet);"
20820,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/util/GcsUtilTest.java,416,,"        .thenThrow(new SocketTimeoutException(""SocketException""))"
20821,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/util/GcsUtilTest.java,440,,"    GenericJson error = new GenericJson().set(""error"", new GenericJson().set(""code"", 404));"
20822,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/util/GcsUtilTest.java,440,,"    GenericJson error = new GenericJson().set(""error"", new GenericJson().set(""code"", 404));"
20823,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/util/RetryHttpRequestInitializerTest.java,132,,"            .setApplicationName(""test"")"
20824,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/util/UploadIdResponseInterceptorTest.java,76,,"    new UploadIdResponseInterceptor().interceptResponse(buildHttpResponse(null, null, ""type""));"
20825,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/util/gcsfs/GcsPathTest.java,65,,"          new TestCase(""gs://bucket/then/object"", ""bucket"", ""then"", ""object""),"
20826,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/util/gcsfs/GcsPathTest.java,65,,"          new TestCase(""gs://bucket/then/object"", ""bucket"", ""then"", ""object""),"
20827,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/util/gcsfs/GcsPathTest.java,65,,"          new TestCase(""gs://bucket/then/object"", ""bucket"", ""then"", ""object""),"
20828,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/util/gcsfs/GcsPathTest.java,73,,"          new TestCase(""gs://bucket/"", ""bucket""));"
20829,./TargetProjects/beam/sdks/java/extensions/google-cloud-platform-core/src/test/java/org/apache/beam/sdk/extensions/gcp/util/gcsfs/GcsPathTest.java,180,,"    GcsPath a = GcsPath.fromComponents(null, ""a/b/c"");"
20830,./TargetProjects/beam/sdks/java/extensions/jackson/src/test/java/org/apache/beam/sdk/extensions/jackson/JacksonTransformsTest.java,451,,"                      entry.getValue().get(""className""));"
20831,./TargetProjects/beam/sdks/java/extensions/join-library/src/main/java/org/apache/beam/sdk/extensions/joinlibrary/Join.java,70,,"              .apply(""CoGBK"", CoGroupByKey.create());"
20832,./TargetProjects/beam/sdks/java/extensions/join-library/src/main/java/org/apache/beam/sdk/extensions/joinlibrary/Join.java,74,,"              ""Join"","
20833,./TargetProjects/beam/sdks/java/extensions/join-library/src/test/java/org/apache/beam/sdk/extensions/joinlibrary/InnerJoinTest.java,54,,"    leftListOfKv.add(KV.of(""Key2"", 4L));"
20834,./TargetProjects/beam/sdks/java/extensions/join-library/src/test/java/org/apache/beam/sdk/extensions/joinlibrary/InnerJoinTest.java,55,,"    PCollection<KV<String, Long>> leftCollection = p.apply(""CreateLeft"", Create.of(leftListOfKv));"
20835,./TargetProjects/beam/sdks/java/extensions/join-library/src/test/java/org/apache/beam/sdk/extensions/joinlibrary/InnerJoinTest.java,58,,"    rightListOfKv.add(KV.of(""Key2"", ""bar""));"
20836,./TargetProjects/beam/sdks/java/extensions/join-library/src/test/java/org/apache/beam/sdk/extensions/joinlibrary/InnerJoinTest.java,60,,"        p.apply(""CreateRight"", Create.of(rightListOfKv));"
20837,./TargetProjects/beam/sdks/java/extensions/join-library/src/test/java/org/apache/beam/sdk/extensions/joinlibrary/OuterFullJoinTest.java,55,,"    leftListOfKv.add(KV.of(""Key2"", 4L));"
20838,./TargetProjects/beam/sdks/java/extensions/join-library/src/test/java/org/apache/beam/sdk/extensions/joinlibrary/OuterFullJoinTest.java,56,,"    PCollection<KV<String, Long>> leftCollection = p.apply(""CreateLeft"", Create.of(leftListOfKv));"
20839,./TargetProjects/beam/sdks/java/extensions/join-library/src/test/java/org/apache/beam/sdk/extensions/joinlibrary/OuterFullJoinTest.java,59,,"    rightListOfKv.add(KV.of(""Key2"", ""bar""));"
20840,./TargetProjects/beam/sdks/java/extensions/join-library/src/test/java/org/apache/beam/sdk/extensions/joinlibrary/OuterFullJoinTest.java,61,,"        p.apply(""CreateRight"", Create.of(rightListOfKv));"
20841,./TargetProjects/beam/sdks/java/extensions/join-library/src/test/java/org/apache/beam/sdk/extensions/joinlibrary/OuterLeftJoinTest.java,55,,"    leftListOfKv.add(KV.of(""Key2"", 4L));"
20842,./TargetProjects/beam/sdks/java/extensions/join-library/src/test/java/org/apache/beam/sdk/extensions/joinlibrary/OuterLeftJoinTest.java,56,,"    PCollection<KV<String, Long>> leftCollection = p.apply(""CreateLeft"", Create.of(leftListOfKv));"
20843,./TargetProjects/beam/sdks/java/extensions/join-library/src/test/java/org/apache/beam/sdk/extensions/joinlibrary/OuterLeftJoinTest.java,59,,"    rightListOfKv.add(KV.of(""Key2"", ""bar""));"
20844,./TargetProjects/beam/sdks/java/extensions/join-library/src/test/java/org/apache/beam/sdk/extensions/joinlibrary/OuterLeftJoinTest.java,61,,"        p.apply(""CreateRight"", Create.of(rightListOfKv));"
20845,./TargetProjects/beam/sdks/java/extensions/join-library/src/test/java/org/apache/beam/sdk/extensions/joinlibrary/OuterRightJoinTest.java,55,,"    leftListOfKv.add(KV.of(""Key2"", 4L));"
20846,./TargetProjects/beam/sdks/java/extensions/join-library/src/test/java/org/apache/beam/sdk/extensions/joinlibrary/OuterRightJoinTest.java,56,,"    PCollection<KV<String, Long>> leftCollection = p.apply(""CreateLeft"", Create.of(leftListOfKv));"
20847,./TargetProjects/beam/sdks/java/extensions/join-library/src/test/java/org/apache/beam/sdk/extensions/joinlibrary/OuterRightJoinTest.java,59,,"    rightListOfKv.add(KV.of(""Key2"", ""bar""));"
20848,./TargetProjects/beam/sdks/java/extensions/join-library/src/test/java/org/apache/beam/sdk/extensions/joinlibrary/OuterRightJoinTest.java,61,,"        p.apply(""CreateRight"", Create.of(rightListOfKv));"
20849,./TargetProjects/beam/sdks/java/extensions/ml/src/test/java/org/apache/beam/sdk/extensions/ml/MapStringToDlpRowTest.java,41,,"            .apply(Create.of(KV.of(""key"", ""value"")))"
20850,./TargetProjects/beam/sdks/java/extensions/protobuf/src/main/java/org/apache/beam/sdk/extensions/protobuf/ProtoByteBuddyUtils.java,190,,"  private static final String DEFAULT_PROTO_GETTER_PREFIX = ""get"";"
20851,./TargetProjects/beam/sdks/java/extensions/protobuf/src/main/java/org/apache/beam/sdk/extensions/protobuf/ProtoCoder.java,125,,"    @SuppressWarnings(""unchecked"")"
20852,./TargetProjects/beam/sdks/java/extensions/protobuf/src/main/java/org/apache/beam/sdk/extensions/protobuf/ProtoDynamicMessageSchema.java,725,,"      throw new IllegalStateException(""Value conversion can't be done outside a protobuf message"");"
20853,./TargetProjects/beam/sdks/java/extensions/protobuf/src/test/java/org/apache/beam/sdk/extensions/protobuf/ProtoPayloadSerializerProviderTest.java,68,,"        () -> provider.getSerializer(SHUFFLED_SCHEMA, ImmutableMap.of(""protoClass"", """")));"
20854,./TargetProjects/beam/sdks/java/extensions/protobuf/src/test/java/org/apache/beam/sdk/extensions/protobuf/ProtoSchemaTranslatorTest.java,141,,"    assertEquals(""foobar in message"", optionMessage.getString(""single_string""));"
20855,./TargetProjects/beam/sdks/java/extensions/protobuf/src/test/java/org/apache/beam/sdk/extensions/protobuf/ProtoSchemaTranslatorTest.java,142,,"    assertEquals(Integer.valueOf(12), optionMessage.getInt32(""single_int32""));"
20856,./TargetProjects/beam/sdks/java/extensions/protobuf/src/test/java/org/apache/beam/sdk/extensions/protobuf/ProtoSchemaTranslatorTest.java,143,,"    assertEquals(Long.valueOf(34L), optionMessage.getInt64(""single_int64""));"
20857,./TargetProjects/beam/sdks/java/extensions/protobuf/src/test/java/org/apache/beam/sdk/extensions/protobuf/ProtoSchemaTranslatorTest.java,180,,"    Schema.Options options = schema.getField(""field_one"").getOptions();"
20858,./TargetProjects/beam/sdks/java/extensions/protobuf/src/test/java/org/apache/beam/sdk/extensions/protobuf/TestProtoSchemas.java,145,,"              1.1, 2.2F, 32, 64L, 33, 65L, 123, 124L, 30, 62L, 31, 63L, true, ""horsey"", BYTE_ARRAY)"
20859,./TargetProjects/beam/sdks/java/extensions/protobuf/src/test/java/org/apache/beam/sdk/extensions/protobuf/TestProtoSchemas.java,396,,"          .addValues(ONE_OF_TYPE.createValue(""oneof_int32"", 1), ""foo"", 0)"
20860,./TargetProjects/beam/sdks/java/extensions/sorter/src/test/java/org/apache/beam/sdk/extensions/sorter/SortValuesTest.java,55,,"                    KV.of(""key1"", KV.of(""secondaryKey2"", 20)),"
20861,./TargetProjects/beam/sdks/java/extensions/sorter/src/test/java/org/apache/beam/sdk/extensions/sorter/SortValuesTest.java,55,,"                    KV.of(""key1"", KV.of(""secondaryKey2"", 20)),"
20862,./TargetProjects/beam/sdks/java/extensions/sorter/src/test/java/org/apache/beam/sdk/extensions/sorter/SortValuesTest.java,58,,"                    KV.of(""key1"", KV.of(""secondaryKey1"", 10)),"
20863,./TargetProjects/beam/sdks/java/extensions/sql/datacatalog/src/test/java/org/apache/beam/sdk/extensions/sql/meta/provider/datacatalog/DataCatalogGCSIT.java,72,,"              row(1, ""customer1"", ""test""),"
20864,./TargetProjects/beam/sdks/java/extensions/sql/datacatalog/src/test/java/org/apache/beam/sdk/extensions/sql/meta/provider/datacatalog/SchemaUtilsTest.java,60,,"                  .setMode(""NULLABLE"")"
20865,./TargetProjects/beam/sdks/java/extensions/sql/datacatalog/src/test/java/org/apache/beam/sdk/extensions/sql/meta/provider/datacatalog/SchemaUtilsTest.java,108,,"                  .setMode(""REQUIRED"")"
20866,./TargetProjects/beam/sdks/java/extensions/sql/hcatalog/src/test/java/org/apache/beam/sdk/extensions/sql/meta/provider/hcatalog/BeamSqlHiveSchemaTest.java,92,,"                    .withTableProvider(""hive"", hiveTableProvider()))"
20867,./TargetProjects/beam/sdks/java/extensions/sql/hcatalog/src/test/java/org/apache/beam/sdk/extensions/sql/meta/provider/hcatalog/BeamSqlHiveSchemaTest.java,183,,"                        + ""  INNER JOIN \n"""
20868,./TargetProjects/beam/sdks/java/extensions/sql/jdbc/src/test/java/org/apache/beam/sdk/extensions/sql/jdbc/BeamSqlLineIT.java,121,,"                convertTimestampToMillis(""2018-07-01 21:25:20""),"
20869,./TargetProjects/beam/sdks/java/extensions/sql/jdbc/src/test/java/org/apache/beam/sdk/extensions/sql/jdbc/BeamSqlLineIT.java,122,,"                taxiRideJSON(""id1"", 1, 40.702, -74.001, 1000, 10, ""enroute"", 2)),"
20870,./TargetProjects/beam/sdks/java/extensions/sql/jdbc/src/test/java/org/apache/beam/sdk/extensions/sql/jdbc/BeamSqlLineIT.java,124,,"                convertTimestampToMillis(""2018-07-01 21:26:06""),"
20871,./TargetProjects/beam/sdks/java/extensions/sql/perf-tests/src/test/java/org/apache/beam/sdk/extensions/sql/meta/provider/bigquery/BigQueryIOPushDownIT.java,92,,"  @SuppressWarnings(""initialization.static.fields.uninitialized"")"
20872,./TargetProjects/beam/sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/impl/cep/CEPLiteral.java,75,,"          throw new IllegalStateException(""The other object should be an instance of CEPLiteral"");"
20873,./TargetProjects/beam/sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/impl/cep/CEPLiteral.java,80,,"              ""The other CEPLiteral should have type """
20874,./TargetProjects/beam/sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/impl/cep/CEPLiteral.java,82,,"                  + "", given: """
20875,./TargetProjects/beam/sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/impl/cep/CEPLiteral.java,333,,"    throw new IllegalStateException(""the class must be subclassed properly to get the value"");"
20876,./TargetProjects/beam/sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/impl/udf/BuiltinStringFunctions.java,114,,"      funcName = ""LPAD"","
20877,./TargetProjects/beam/sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/impl/udf/BuiltinStringFunctions.java,129,,"      throw new IllegalArgumentException(""returnLength cannot be 0 or pattern cannot be empty."");"
20878,./TargetProjects/beam/sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/impl/udf/BuiltinStringFunctions.java,185,,"      funcName = ""RPAD"","
20879,./TargetProjects/beam/sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/meta/provider/pubsublite/PubsubLiteTableProvider.java,171,,"    if (!properties.containsKey(""deadLetterQueue"")) {"
20880,./TargetProjects/beam/sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/meta/provider/text/TextTableProvider.java,93,,"    String format = MoreObjects.firstNonNull(properties.getString(""format""), ""csv"");"
20881,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamAnalyticFunctionsTest.java,38,,"            .addStringField(""item"")"
20882,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamAnalyticFunctionsTest.java,39,,"            .addStringField(""category"")"
20883,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamAnalyticFunctionsTest.java,40,,"            .addInt32Field(""purchases"")"
20884,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamAnalyticFunctionsTest.java,47,,"                        ""kale"","
20885,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamAnalyticFunctionsTest.java,48,,"                        ""vegetable"","
20886,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamAnalyticFunctionsTest.java,50,,"                        ""orange"","
20887,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamAnalyticFunctionsTest.java,51,,"                        ""fruit"","
20888,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamAnalyticFunctionsTest.java,53,,"                        ""cabbage"","
20889,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamAnalyticFunctionsTest.java,56,,"                        ""apple"","
20890,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamAnalyticFunctionsTest.java,59,,"                        ""leek"","
20891,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamAnalyticFunctionsTest.java,62,,"                        ""lettuce"","
20892,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamAnalyticFunctionsTest.java,89,,"        ""SELECT item, purchases, category, sum(purchases) over """
20893,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamAnalyticFunctionsTest.java,91,,"            + ""PARTITION BY category """
20894,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamAnalyticFunctionsTest.java,92,,"            + ""ORDER BY purchases """
20895,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamAnalyticFunctionsTest.java,93,,"            + ""ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW"""
20896,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamAnalyticFunctionsTest.java,95,,"            + "" as total_purchases  FROM PCOLLECTION"";"
20897,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamAnalyticFunctionsTest.java,96,,"    PCollection<Row> result = inputRows.apply(""sql"", SqlTransform.query(sql));"
20898,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamAnalyticFunctionsTest.java,103,,"            .addInt32Field(""total_purchases"")"
20899,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamAnalyticFunctionsTest.java,495,,"    Schema overResultSchema = Schema.builder().addInt32Field(""x"").addInt64Field(""agg"").build();"
20900,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamComplexTypeTest.java,65,,"          .addNullableField(""field1"", FieldType.row(innerRowWithArraySchema))"
20901,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamComplexTypeTest.java,66,,"          .addNullableField(""field2"", FieldType.array(FieldType.row(innerRowWithArraySchema)))"
20902,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamComplexTypeTest.java,67,,"          .addNullableField(""field3"", FieldType.row(nullableInnerRowSchema))"
20903,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamComplexTypeTest.java,100,,"              TestBoundedTable.of(FieldType.array(FieldType.row(innerRowSchema)), ""col"")"
20904,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamComplexTypeTest.java,102,,"                      Arrays.asList(Row.withSchema(innerRowSchema).addValues(""str"", 1L).build())),"
20905,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamComplexTypeTest.java,112,,"                              Row.withSchema(innerRowSchema).addValues(""inner_str_one"", 1L).build(),"
20906,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamComplexTypeTest.java,377,,"            .addField(""dateTimeField"", FieldType.DATETIME)"
20907,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamComplexTypeTest.java,378,,"            .addNullableField(""nullableDateTimeField"", FieldType.DATETIME)"
20908,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamComplexTypeTest.java,389,,"                    ""select """
20909,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamComplexTypeTest.java,396,,"                        + "" from PCOLLECTION""));"
20910,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlCliTest.java,53,,"        ""CREATE EXTERNAL TABLE person (\n"""
20911,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlCliTest.java,54,,"            + ""id int COMMENT 'id', \n"""
20912,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlCliTest.java,55,,"            + ""name varchar COMMENT 'name', \n"""
20913,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlCliTest.java,56,,"            + ""age int COMMENT 'age') \n"""
20914,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlCliTest.java,57,,"            + ""TYPE 'text' \n"""
20915,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlCliTest.java,58,,"            + ""COMMENT '' LOCATION '/home/admin/orders'"");"
20916,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlCliTest.java,59,,"    Table table = metaStore.getTables().get(""person"");"
20917,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlCliTest.java,64,,"                Field.of(""name"", VARCHAR).withDescription(""name"").withNullable(true),"
20918,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlCliTest.java,65,,"                Field.of(""age"", INTEGER).withDescription(""age"").withNullable(true))"
20919,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlCliTest.java,83,,"            + "") \n"""
20920,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslAggregationTest.java,73,,"            .addInt32Field(""f_int2"")"
20921,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslAggregationTest.java,131,,"    Schema resultType = Schema.builder().addInt32Field(""f_int2"").addInt64Field(""size"").build();"
20922,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslAggregationTest.java,192,,"        PCollectionTuple.of(new TupleTag<>(""TABLE_A""), input)"
20923,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslAggregationTest.java,292,,"    PCollection<Row> result = inputRows.apply(""sql"", SqlTransform.query(sql));"
20924,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslAggregationTest.java,321,,"        Schema.builder().addInt64Field(""f_long"").addInt32Field(""f_int2"").build();"
20925,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslAggregationTest.java,323,,"    Schema resultType = Schema.builder().addInt64Field(""finalAnswer"").build();"
20926,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslAggregationTest.java,333,,"    String sql = ""SELECT bit_or(f_long) as bitor "" + ""FROM PCOLLECTION GROUP BY f_int2"";"
20927,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslAggregationTest.java,338,,"        pipeline.apply(""longVals"", Create.of(rowsInTableA).withRowSchema(schemaInTableA));"
20928,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslAggregationTest.java,362,,"    String sql = ""SELECT bit_and(f_long) as bitand "" + ""FROM PCOLLECTION GROUP BY f_int2"";"
20929,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslAggregationTest.java,545,,"        ""SELECT f_int2, COUNT(*) AS `getFieldCount`,"""
20930,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslAggregationTest.java,558,,"            .addDateTimeField(""window_start"")"
20931,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslAggregationTest.java,559,,"            .addDateTimeField(""window_end"")"
20932,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslAggregationTest.java,609,,"                parseTimestampWithoutTimeZone(""2017-01-01 02:00:00""),"
20933,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslAggregationTest.java,629,,"        Schema.builder().addInt32Field(""f_int"").addDateTimeField(""f_timestamp"").build();"
20934,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslAggregationTest.java,636,,"                        .addValues(1, parseTimestampWithoutTimeZone(""2017-01-01 01:01:01""))"
20935,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslAggregationTest.java,851,,"            .addInt32Field(""f_intGroupingKey"")"
20936,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslAggregationTest.java,852,,"            .addInt32Field(""f_intValue"")"
20937,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslAggregationTest.java,879,,"    PAssert.that(result).containsInAnyOrder(rowsWithSingleIntField(""sum"", Arrays.asList(3, 7, 11)));"
20938,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslArrayTest.java,39,,"          .addInt32Field(""f_int"")"
20939,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslArrayTest.java,58,,"            ""sqlQuery"","
20940,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslArrayTest.java,84,,"            Row.withSchema(resultType).addValues(1).addArray(Arrays.asList(""111"", ""222"")).build(),"
20941,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslArrayTest.java,84,,"            Row.withSchema(resultType).addValues(1).addArray(Arrays.asList(""111"", ""222"")).build(),"
20942,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslArrayTest.java,115,,"        pipeline.apply(""boundedInput1"", Create.of(inputRow).withRowSchema(INPUT_SCHEMA));"
20943,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslBase.java,237,,"                ""TO_HEX"","
20944,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslBase.java,262,,"                ""abcdef"".getBytes(UTF_8),"
20945,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslBase.java,264,,"                ""defgh"".getBytes(UTF_8),"
20946,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslJoinTest.java,70,,"        ""SELECT *  """
20947,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslJoinTest.java,71,,"            + ""FROM ORDER_DETAILS1 o1"""
20948,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslJoinTest.java,72,,"            + "" JOIN ORDER_DETAILS2 o2"""
20949,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslJoinTest.java,73,,"            + "" on """
20950,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslJoinTest.java,74,,"            + "" o1.order_id=o2.site_id AND o2.price=o1.site_id"";"
20951,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslJoinTest.java,162,,"        ""SELECT o1.order_id, o1.price, o1.site_id, o2.order_id, o2.price, o2.site_id  """
20952,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslJoinTest.java,170,,"            .apply(""window"", Window.into(FixedWindows.of(Duration.standardSeconds(50))));"
20953,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslJoinTest.java,171,,"    PCollectionTuple inputs = tuple(""ORDER_DETAILS1"", orders, ""ORDER_DETAILS2"", orders);"
20954,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslJoinTest.java,171,,"    PCollectionTuple inputs = tuple(""ORDER_DETAILS1"", orders, ""ORDER_DETAILS2"", orders);"
20955,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslJoinTest.java,173,,"    PAssert.that(inputs.apply(""sql"", SqlTransform.query(sql)))"
20956,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslJoinTest.java,204,,"        stringContainsInOrder(Arrays.asList(""once per window"", ""default trigger"")));"
20957,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslJoinTest.java,204,,"        stringContainsInOrder(Arrays.asList(""once per window"", ""default trigger"")));"
20958,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslNestedRowsTest.java,46,,"            .addInt32Field(""f_nestedInt"")"
20959,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslNestedRowsTest.java,47,,"            .addStringField(""f_nestedString"")"
20960,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslNestedRowsTest.java,48,,"            .addInt32Field(""f_nestedIntPlusOne"")"
20961,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslNestedRowsTest.java,53,,"            .addInt32Field(""f_int"")"
20962,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslNestedRowsTest.java,60,,"        Schema.builder().addInt32Field(""f_int"").addRowField(""f_row"", nestedSchema).build();"
20963,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslNestedRowsTest.java,272,,"                                .addValues(312, ""CC"", 313, Arrays.asList(""one"", ""two""))"
20964,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslNestedRowsTest.java,279,,"                                .addValues(412, ""DD"", 413, Arrays.asList(""three"", ""four""))"
20965,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslProjectTest.java,77,,"        PCollectionTuple.of(new TupleTag<>(""TABLE_A""), input)"
20966,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslSqlStdOperatorsTest.java,183,,"  @SqlOperatorTest(name = ""CARDINALITY"", kind = ""OTHER_FUNCTION"")"
20967,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslSqlStdOperatorsTest.java,710,,"  @SqlOperatorTest(name = ""||"", kind = ""OTHER"")"
20968,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslSqlStdOperatorsTest.java,1294,,"                ""TIMESTAMPDIFF(YEAR, TIMESTAMP '1981-01-19 01:01:58', """
20969,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslSqlStdOperatorsTest.java,1376,,"                ""CASE 2 "" + ""WHEN 1 THEN 'hello' "" + ""WHEN 3 THEN 'bond' "" + ""ELSE 'world' END"","
20970,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslUdfUdafTest.java,63,,"    Schema resultType = Schema.builder().addInt32Field(""f_int2"").addInt32Field(""squaresum"").build();"
20971,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslUdfUdafTest.java,63,,"    Schema resultType = Schema.builder().addInt32Field(""f_int2"").addInt32Field(""squaresum"").build();"
20972,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlDslUdfUdafTest.java,70,,"            ""testUdaf"", SqlTransform.query(sql).registerUdaf(""squaresum"", new SquareSum()));"
20973,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlMapTest.java,36,,"          .addInt32Field(""f_int"")"
20974,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlMapTest.java,56,,"            ""sqlQuery"","
20975,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlMultipleSchemasTest.java,48,,"    PCollection<Row> input = pipeline.apply(create(row(1, ""strstr"")));"
20976,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlMultipleSchemasTest.java,71,,"        pipeline.apply(""mainInput"", create(row(1, ""pcollection_1""), row(2, ""pcollection_2"")));"
20977,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlMultipleSchemasTest.java,71,,"        pipeline.apply(""mainInput"", create(row(1, ""pcollection_1""), row(2, ""pcollection_2"")));"
20978,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlMultipleSchemasTest.java,71,,"        pipeline.apply(""mainInput"", create(row(1, ""pcollection_1""), row(2, ""pcollection_2"")));"
20979,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlMultipleSchemasTest.java,74,,"        pipeline.apply(""extraInput"", create(row(1, ""_extra_table_1""), row(2, ""_extra_table_2"")));"
20980,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlMultipleSchemasTest.java,74,,"        pipeline.apply(""extraInput"", create(row(1, ""_extra_table_1""), row(2, ""_extra_table_2"")));"
20981,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlMultipleSchemasTest.java,74,,"        pipeline.apply(""extraInput"", create(row(1, ""_extra_table_1""), row(2, ""_extra_table_2"")));"
20982,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlMultipleSchemasTest.java,76,,"    TableProvider extraInputProvider = extraTableProvider(""extraTable"", inputExtra);"
20983,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/BeamSqlMultipleSchemasTest.java,81,,"                .withTableProvider(""extraSchema"", extraInputProvider));"
20984,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/InferredJavaBeanSqlTest.java,142,,"            .apply(""input"", Create.of(new PersonBean(""Foo"", 5), new PersonBean(""Bar"", 53)));"
20985,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/InferredJavaBeanSqlTest.java,142,,"            .apply(""input"", Create.of(new PersonBean(""Foo"", 5), new PersonBean(""Bar"", 53)));"
20986,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/InferredJavaBeanSqlTest.java,146,,"    PCollection<Row> result = input.apply(""sql"", SqlTransform.query(sql));"
20987,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/InferredJavaBeanSqlTest.java,151,,"                    Schema.builder().addStringField(""name"").addInt32Field(""ageYears"").build())"
20988,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/InferredJavaBeanSqlTest.java,188,,"                ""orders"","
20989,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/PubsubToBigqueryIT.java,63,,"            + "") \n"""
20990,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/PubsubToBigqueryIT.java,65,,"            + ""LOCATION '"""
20991,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/PubsubToBigqueryIT.java,96,,"            message(ts(1), 3, ""foo""), message(ts(2), 5, ""bar""), message(ts(3), 7, ""baz""));"
20992,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/PubsubToBigqueryIT.java,96,,"            message(ts(1), 3, ""foo""), message(ts(2), 5, ""bar""), message(ts(3), 7, ""baz""));"
20993,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/PubsubToBigqueryIT.java,96,,"            message(ts(1), 3, ""foo""), message(ts(2), 5, ""bar""), message(ts(3), 7, ""baz""));"
20994,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/impl/JdbcDriverTest.java,74,,"          .addNullableField(""name"", Schema.FieldType.STRING)"
20995,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/impl/JdbcDriverTest.java,85,,"          ""test"","
20996,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/impl/JdbcDriverTest.java,207,,"    tableProvider.addRows(""person"", row(1L, ""aaa""), row(2L, ""bbb""));"
20997,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/impl/JdbcDriverTest.java,207,,"    tableProvider.addRows(""person"", row(1L, ""aaa""), row(2L, ""bbb""));"
20998,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/impl/JdbcDriverTest.java,376,,"    ResultSet resultSet = statement.executeQuery(""SELECT * FROM test"");"
20999,./TargetProjects/beam/sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/impl/parser/BeamDDLTest.java,60,,"        ""CREATE EXTERNAL TABLE person (\n"""
