220000,./TargetProjects/pulsar/pulsar-io/kinesis/src/test/java/org/apache/pulsar/io/kinesis/KinesisSourceConfigTests.java,64,,"        assertEquals(config.getAwsKinesisStreamName(), ""my-stream"");"
220001,./TargetProjects/pulsar/pulsar-io/kinesis/src/test/java/org/apache/pulsar/io/kinesis/KinesisSourceConfigTests.java,66,,"                ""{\""accessKey\"":\""myKey\"",\""secretKey\"":\""my-Secret\""}"");"
220002,./TargetProjects/pulsar/pulsar-io/kinesis/src/test/java/org/apache/pulsar/io/kinesis/KinesisSourceConfigTests.java,67,,"        assertEquals(config.getApplicationName(), ""My test application"");"
220003,./TargetProjects/pulsar/pulsar-io/kinesis/src/test/java/org/apache/pulsar/io/kinesis/KinesisSourceConfigTests.java,84,,"        map.put(""awsEndpoint"", ""https://some.endpoint.aws"");"
220004,./TargetProjects/pulsar/pulsar-io/kinesis/src/test/java/org/apache/pulsar/io/kinesis/KinesisSourceConfigTests.java,85,,"        map.put(""awsRegion"", ""us-east-1"");"
220005,./TargetProjects/pulsar/pulsar-io/kinesis/src/test/java/org/apache/pulsar/io/kinesis/KinesisSourceConfigTests.java,86,,"        map.put(""awsKinesisStreamName"", ""my-stream"");"
220006,./TargetProjects/pulsar/pulsar-io/kinesis/src/test/java/org/apache/pulsar/io/kinesis/UtilsTest.java,75,,"        metadata1.put(""version"", ""v1"");"
220007,./TargetProjects/pulsar/pulsar-io/kinesis/src/test/java/org/apache/pulsar/io/kinesis/UtilsTest.java,76,,"        metadata1.put(""ckms"", ""cmks-1"");"
220008,./TargetProjects/pulsar/pulsar-io/nsq/src/test/java/org/apache/pulsar/io/nsq/NSQConfigTests.java,47,,"        map.put(""topic"", ""xxx"");"
220009,./TargetProjects/pulsar/pulsar-io/nsq/src/test/java/org/apache/pulsar/io/nsq/NSQConfigTests.java,49,,"        map.put(""lookupds"", ""xxx"");"
220010,./TargetProjects/pulsar/pulsar-io/rabbitmq/src/main/java/org/apache/pulsar/io/rabbitmq/RabbitMQAbstractConfig.java,65,,"        defaultValue = ""guest"","
220011,./TargetProjects/pulsar/pulsar-io/rabbitmq/src/test/java/org/apache/pulsar/io/rabbitmq/sink/RabbitMQSinkConfigTest.java,42,,"        assertEquals(config.getHost(), ""localhost"");"
220012,./TargetProjects/pulsar/pulsar-io/rabbitmq/src/test/java/org/apache/pulsar/io/rabbitmq/sink/RabbitMQSinkConfigTest.java,43,,"        assertEquals(config.getPort(), Integer.parseInt(""5673""));"
220013,./TargetProjects/pulsar/pulsar-io/rabbitmq/src/test/java/org/apache/pulsar/io/rabbitmq/sink/RabbitMQSinkConfigTest.java,45,,"        assertEquals(config.getUsername(), ""guest"");"
220014,./TargetProjects/pulsar/pulsar-io/rabbitmq/src/test/java/org/apache/pulsar/io/rabbitmq/sink/RabbitMQSinkConfigTest.java,47,,"        assertEquals(config.getConnectionName(), ""test-connection"");"
220015,./TargetProjects/pulsar/pulsar-io/rabbitmq/src/test/java/org/apache/pulsar/io/rabbitmq/sink/RabbitMQSinkConfigTest.java,50,,"        assertEquals(config.getConnectionTimeout(), Integer.parseInt(""60000""));"
220016,./TargetProjects/pulsar/pulsar-io/rabbitmq/src/test/java/org/apache/pulsar/io/rabbitmq/sink/RabbitMQSinkConfigTest.java,51,,"        assertEquals(config.getHandshakeTimeout(), Integer.parseInt(""10000""));"
220017,./TargetProjects/pulsar/pulsar-io/rabbitmq/src/test/java/org/apache/pulsar/io/rabbitmq/sink/RabbitMQSinkConfigTest.java,53,,"        assertEquals(config.getExchangeName(), ""test-exchange"");"
220018,./TargetProjects/pulsar/pulsar-io/rabbitmq/src/test/java/org/apache/pulsar/io/rabbitmq/sink/RabbitMQSinkConfigTest.java,54,,"        assertEquals(config.getExchangeType(), ""test-exchange-type"");"
220019,./TargetProjects/pulsar/pulsar-io/rabbitmq/src/test/java/org/apache/pulsar/io/rabbitmq/source/RabbitMQSourceConfigTest.java,43,,"        assertEquals(""localhost"", config.getHost());"
220020,./TargetProjects/pulsar/pulsar-io/rabbitmq/src/test/java/org/apache/pulsar/io/rabbitmq/source/RabbitMQSourceConfigTest.java,44,,"        assertEquals(Integer.parseInt(""5672""), config.getPort());"
220021,./TargetProjects/pulsar/pulsar-io/rabbitmq/src/test/java/org/apache/pulsar/io/rabbitmq/source/RabbitMQSourceConfigTest.java,46,,"        assertEquals(""guest"", config.getUsername());"
220022,./TargetProjects/pulsar/pulsar-io/rabbitmq/src/test/java/org/apache/pulsar/io/rabbitmq/source/RabbitMQSourceConfigTest.java,48,,"        assertEquals(""test-queue"", config.getQueueName());"
220023,./TargetProjects/pulsar/pulsar-io/rabbitmq/src/test/java/org/apache/pulsar/io/rabbitmq/source/RabbitMQSourceConfigTest.java,49,,"        assertEquals(""test-connection"", config.getConnectionName());"
220024,./TargetProjects/pulsar/pulsar-io/rabbitmq/src/test/java/org/apache/pulsar/io/rabbitmq/source/RabbitMQSourceConfigTest.java,52,,"        assertEquals(Integer.parseInt(""60000""), config.getConnectionTimeout());"
220025,./TargetProjects/pulsar/pulsar-io/rabbitmq/src/test/java/org/apache/pulsar/io/rabbitmq/source/RabbitMQSourceConfigTest.java,53,,"        assertEquals(Integer.parseInt(""10000""), config.getHandshakeTimeout());"
220026,./TargetProjects/pulsar/pulsar-io/rabbitmq/src/test/java/org/apache/pulsar/io/rabbitmq/source/RabbitMQSourceConfigTest.java,64,,"        map.put(""port"", ""5672"");"
220027,./TargetProjects/pulsar/pulsar-io/rabbitmq/src/test/java/org/apache/pulsar/io/rabbitmq/source/RabbitMQSourceConfigTest.java,65,,"        map.put(""virtualHost"", ""/"");"
220028,./TargetProjects/pulsar/pulsar-io/rabbitmq/src/test/java/org/apache/pulsar/io/rabbitmq/source/RabbitMQSourceConfigTest.java,66,,"        map.put(""username"", ""guest"");"
220029,./TargetProjects/pulsar/pulsar-io/rabbitmq/src/test/java/org/apache/pulsar/io/rabbitmq/source/RabbitMQSourceConfigTest.java,67,,"        map.put(""password"", ""guest"");"
220030,./TargetProjects/pulsar/pulsar-io/rabbitmq/src/test/java/org/apache/pulsar/io/rabbitmq/source/RabbitMQSourceConfigTest.java,68,,"        map.put(""queueName"", ""test-queue"");"
220031,./TargetProjects/pulsar/pulsar-io/rabbitmq/src/test/java/org/apache/pulsar/io/rabbitmq/source/RabbitMQSourceConfigTest.java,69,,"        map.put(""connectionName"", ""test-connection"");"
220032,./TargetProjects/pulsar/pulsar-io/rabbitmq/src/test/java/org/apache/pulsar/io/rabbitmq/source/RabbitMQSourceConfigTest.java,70,,"        map.put(""requestedChannelMax"", ""0"");"
220033,./TargetProjects/pulsar/pulsar-io/rabbitmq/src/test/java/org/apache/pulsar/io/rabbitmq/source/RabbitMQSourceConfigTest.java,71,,"        map.put(""requestedFrameMax"", ""0"");"
220034,./TargetProjects/pulsar/pulsar-io/rabbitmq/src/test/java/org/apache/pulsar/io/rabbitmq/source/RabbitMQSourceConfigTest.java,72,,"        map.put(""connectionTimeout"", ""60000"");"
220035,./TargetProjects/pulsar/pulsar-io/rabbitmq/src/test/java/org/apache/pulsar/io/rabbitmq/source/RabbitMQSourceConfigTest.java,73,,"        map.put(""handshakeTimeout"", ""10000"");"
220036,./TargetProjects/pulsar/pulsar-io/rabbitmq/src/test/java/org/apache/pulsar/io/rabbitmq/source/RabbitMQSourceConfigTest.java,74,,"        map.put(""requestedHeartbeat"", ""60"");"
220037,./TargetProjects/pulsar/pulsar-io/rabbitmq/src/test/java/org/apache/pulsar/io/rabbitmq/source/RabbitMQSourceConfigTest.java,75,,"        map.put(""prefetchCount"", ""0"");"
220038,./TargetProjects/pulsar/pulsar-io/rabbitmq/src/test/java/org/apache/pulsar/io/rabbitmq/source/RabbitMQSourceConfigTest.java,76,,"        map.put(""prefetchGlobal"", ""false"");"
220039,./TargetProjects/pulsar/pulsar-io/rabbitmq/src/test/java/org/apache/pulsar/io/rabbitmq/source/RabbitMQSourceConfigTest.java,76,,"        map.put(""prefetchGlobal"", ""false"");"
220040,./TargetProjects/pulsar/pulsar-io/rabbitmq/src/test/java/org/apache/pulsar/io/rabbitmq/source/RabbitMQSourceConfigTest.java,77,,"        map.put(""passive"", ""true"");"
220041,./TargetProjects/pulsar/pulsar-io/redis/src/test/java/org/apache/pulsar/io/redis/sink/RedisSinkConfigTest.java,43,,"        assertEquals(config.getRedisHosts(), ""localhost:6379"");"
220042,./TargetProjects/pulsar/pulsar-io/redis/src/test/java/org/apache/pulsar/io/redis/sink/RedisSinkConfigTest.java,44,,"        assertEquals(config.getRedisPassword(), ""fake@123"");"
220043,./TargetProjects/pulsar/pulsar-io/redis/src/test/java/org/apache/pulsar/io/redis/sink/RedisSinkConfigTest.java,46,,"        assertEquals(config.getClientMode(), ""Standalone"");"
220044,./TargetProjects/pulsar/pulsar-io/redis/src/test/java/org/apache/pulsar/io/redis/sink/RedisSinkConfigTest.java,47,,"        assertEquals(config.getOperationTimeout(), Long.parseLong(""2000""));"
220045,./TargetProjects/pulsar/pulsar-io/redis/src/test/java/org/apache/pulsar/io/redis/sink/RedisSinkConfigTest.java,48,,"        assertEquals(config.getBatchSize(), Integer.parseInt(""100""));"
220046,./TargetProjects/pulsar/pulsar-io/redis/src/test/java/org/apache/pulsar/io/redis/sink/RedisSinkConfigTest.java,49,,"        assertEquals(config.getBatchTimeMs(), Long.parseLong(""1000""));"
220047,./TargetProjects/pulsar/pulsar-io/redis/src/test/java/org/apache/pulsar/io/redis/sink/RedisSinkConfigTest.java,50,,"        assertEquals(config.getConnectTimeout(), Long.parseLong(""3000""));"
220048,./TargetProjects/pulsar/pulsar-io/redis/src/test/java/org/apache/pulsar/io/redis/sink/RedisSinkConfigTest.java,56,,"        map.put(""redisHosts"", ""localhost:6379"");"
220049,./TargetProjects/pulsar/pulsar-io/redis/src/test/java/org/apache/pulsar/io/redis/sink/RedisSinkConfigTest.java,57,,"        map.put(""redisPassword"", ""fake@123"");"
220050,./TargetProjects/pulsar/pulsar-io/redis/src/test/java/org/apache/pulsar/io/redis/sink/RedisSinkConfigTest.java,58,,"        map.put(""redisDatabase"", ""1"");"
220051,./TargetProjects/pulsar/pulsar-io/redis/src/test/java/org/apache/pulsar/io/redis/sink/RedisSinkConfigTest.java,59,,"        map.put(""clientMode"", ""Standalone"");"
220052,./TargetProjects/pulsar/pulsar-io/redis/src/test/java/org/apache/pulsar/io/redis/sink/RedisSinkConfigTest.java,60,,"        map.put(""operationTimeout"", ""2000"");"
220053,./TargetProjects/pulsar/pulsar-io/redis/src/test/java/org/apache/pulsar/io/redis/sink/RedisSinkConfigTest.java,61,,"        map.put(""batchSize"", ""100"");"
220054,./TargetProjects/pulsar/pulsar-io/redis/src/test/java/org/apache/pulsar/io/redis/sink/RedisSinkConfigTest.java,62,,"        map.put(""batchTimeMs"", ""1000"");"
220055,./TargetProjects/pulsar/pulsar-io/redis/src/test/java/org/apache/pulsar/io/redis/sink/RedisSinkConfigTest.java,63,,"        map.put(""connectTimeout"", ""3000"");"
220056,./TargetProjects/pulsar/pulsar-io/solr/src/test/java/org/apache/pulsar/io/solr/SolrSinkConfigTest.java,46,,"        assertEquals(config.getSolrUrl(), ""localhost:2181,localhost:2182/chroot"");"
220057,./TargetProjects/pulsar/pulsar-io/solr/src/test/java/org/apache/pulsar/io/solr/SolrSinkConfigTest.java,47,,"        assertEquals(config.getSolrMode(), ""SolrCloud"");"
220058,./TargetProjects/pulsar/pulsar-io/solr/src/test/java/org/apache/pulsar/io/solr/SolrSinkConfigTest.java,48,,"        assertEquals(config.getSolrCollection(), ""techproducts"");"
220059,./TargetProjects/pulsar/pulsar-io/solr/src/test/java/org/apache/pulsar/io/solr/SolrSinkConfigTest.java,49,,"        assertEquals(config.getSolrCommitWithinMs(), Integer.parseInt(""100""));"
220060,./TargetProjects/pulsar/pulsar-io/solr/src/test/java/org/apache/pulsar/io/solr/SolrSinkConfigTest.java,50,,"        assertEquals(config.getUsername(), ""fakeuser"");"
220061,./TargetProjects/pulsar/pulsar-io/solr/src/test/java/org/apache/pulsar/io/solr/SolrSinkConfigTest.java,51,,"        assertEquals(config.getPassword(), ""fake@123"");"
220062,./TargetProjects/pulsar/pulsar-io/solr/src/test/java/org/apache/pulsar/io/solr/SolrSinkConfigTest.java,57,,"        map.put(""solrUrl"", ""localhost:2181,localhost:2182/chroot"");"
220063,./TargetProjects/pulsar/pulsar-io/solr/src/test/java/org/apache/pulsar/io/solr/SolrSinkConfigTest.java,58,,"        map.put(""solrMode"", ""SolrCloud"");"
220064,./TargetProjects/pulsar/pulsar-io/solr/src/test/java/org/apache/pulsar/io/solr/SolrSinkConfigTest.java,59,,"        map.put(""solrCollection"", ""techproducts"");"
220065,./TargetProjects/pulsar/pulsar-io/solr/src/test/java/org/apache/pulsar/io/solr/SolrSinkConfigTest.java,60,,"        map.put(""solrCommitWithinMs"", ""100"");"
220066,./TargetProjects/pulsar/pulsar-io/solr/src/test/java/org/apache/pulsar/io/solr/SolrSinkConfigTest.java,61,,"        map.put(""username"", ""fakeuser"");"
220067,./TargetProjects/pulsar/pulsar-io/solr/src/test/java/org/apache/pulsar/io/solr/SolrSinkConfigTest.java,62,,"        map.put(""password"", ""fake@123"");"
220068,./TargetProjects/pulsar/pulsar-io/twitter/src/test/java/org/apache/pulsar/io/twitter/TwitterFireHoseConfigTests.java,47,,"        map.put(""consumerKey"", ""xxx"");"
220069,./TargetProjects/pulsar/pulsar-metadata/src/test/java/org/apache/pulsar/metadata/CounterTest.java,41,,"        long l1 = cs1.getNextCounterValue(""/my/path"").join();"
220070,./TargetProjects/pulsar/pulsar-metadata/src/test/java/org/apache/pulsar/metadata/LeaderElectionTest.java,44,,"    @Test(dataProvider = ""impl"")"
220071,./TargetProjects/pulsar/pulsar-metadata/src/test/java/org/apache/pulsar/metadata/LeaderElectionTest.java,58,,"                ""/my/leader-election"", t -> {"
220072,./TargetProjects/pulsar/pulsar-metadata/src/test/java/org/apache/pulsar/metadata/LeaderElectionTest.java,64,,"        LeaderElectionState les = leaderElection.elect(""test-1"").join();"
220073,./TargetProjects/pulsar/pulsar-metadata/src/test/java/org/apache/pulsar/metadata/LeaderElectionTest.java,117,,"        LeaderElectionState les2 = le2.elect(""test-2"").join();"
220074,./TargetProjects/pulsar/pulsar-metadata/src/test/java/org/apache/pulsar/metadata/LockManagerTest.java,52,,"    @Test(dataProvider = ""impl"")"
220075,./TargetProjects/pulsar/pulsar-metadata/src/test/java/org/apache/pulsar/metadata/LockManagerTest.java,63,,"        assertEquals(lockManager.listLocks(""/my/path"").join(), Collections.emptyList());"
220076,./TargetProjects/pulsar/pulsar-metadata/src/test/java/org/apache/pulsar/metadata/LockManagerTest.java,64,,"        assertEquals(lockManager.readLock(""/my/path/1"").join(), Optional.empty());"
220077,./TargetProjects/pulsar/pulsar-metadata/src/test/java/org/apache/pulsar/metadata/LockManagerTest.java,66,,"        ResourceLock<String> lock1 = lockManager.acquireLock(""/my/path/1"", ""lock-1"").join();"
220078,./TargetProjects/pulsar/pulsar-metadata/src/test/java/org/apache/pulsar/metadata/LockManagerTest.java,146,,"        lock.updateValue(""value-2"").join();"
220079,./TargetProjects/pulsar/pulsar-metadata/src/test/java/org/apache/pulsar/metadata/LockManagerTest.java,164,,"        store.put(path1, ""\""value-1\"""".getBytes(StandardCharsets.UTF_8), Optional.of(-1L),"
220080,./TargetProjects/pulsar/pulsar-metadata/src/test/java/org/apache/pulsar/metadata/LockManagerTest.java,166,,"        ResourceLock<String> rl2 = lm2.acquireLock(path1, ""value-1"").join();"
220081,./TargetProjects/pulsar/pulsar-metadata/src/test/java/org/apache/pulsar/metadata/MetadataCacheTest.java,69,,"    @Test(dataProvider = ""impl"")"
220082,./TargetProjects/pulsar/pulsar-metadata/src/test/java/org/apache/pulsar/metadata/MetadataStoreTest.java,52,,"    @Test(dataProvider = ""impl"")"
220083,./TargetProjects/pulsar/pulsar-metadata/src/test/java/org/apache/pulsar/metadata/MetadataStoreTest.java,57,,"        assertFalse(store.exists(""/non-existing-key"").join());"
220084,./TargetProjects/pulsar/pulsar-metadata/src/test/java/org/apache/pulsar/metadata/MetadataStoreTest.java,67,,"            fail(""Should have failed"");"
220085,./TargetProjects/pulsar/pulsar-metadata/src/test/java/org/apache/pulsar/metadata/MetadataStoreTest.java,88,,"            store.put(key1, ""value-1"".getBytes(), Optional.of(0L)).join();"
220086,./TargetProjects/pulsar/pulsar-metadata/src/test/java/org/apache/pulsar/metadata/MetadataStoreTest.java,110,,"            store.put(key1, ""value-2"".getBytes(), Optional.of(-1L)).join();"
220087,./TargetProjects/pulsar/pulsar-metadata/src/test/java/org/apache/pulsar/metadata/MetadataStoreTest.java,148,,"            store.put(key + ""/c-"" + i, new byte[0], Optional.empty()).join();"
220088,./TargetProjects/pulsar/pulsar-metadata/src/test/java/org/apache/pulsar/metadata/MetadataStoreTest.java,204,,"            fail(""The key cannot be empty"");"
220089,./TargetProjects/pulsar/pulsar-package-management/core/src/main/java/org/apache/pulsar/packages/management/core/common/PackageName.java,59,,"        String pkgName = type + ""://"" + tenant + ""/"" + namespace + ""/"" + name + ""@"" + version;"
220090,./TargetProjects/pulsar/pulsar-package-management/core/src/main/java/org/apache/pulsar/packages/management/core/common/PackageName.java,78,,"            throw new IllegalArgumentException(""Invalid package name '"" + packageName + ""'"");"
220091,./TargetProjects/pulsar/pulsar-package-management/core/src/test/java/org/apache/pulsar/packages/management/core/common/PackageNameTest.java,44,,"        Assert.assertEquals(packageName.toString(), type + ""://"" + tenant + ""/"" + ns + ""/"" + name + ""@"" + version);"
220092,./TargetProjects/pulsar/pulsar-package-management/core/src/test/java/org/apache/pulsar/packages/management/core/impl/PackagesManagementImplTest.java,67,,"                Assert.fail(""should not throw any exception"");"
220093,./TargetProjects/pulsar/pulsar-proxy/src/main/java/org/apache/pulsar/proxy/server/DirectProxyHandler.java,119,,"                ch.pipeline().addLast(""frameDecoder"", new LengthFieldBasedFrameDecoder("
220094,./TargetProjects/pulsar/pulsar-proxy/src/main/java/org/apache/pulsar/proxy/server/DirectProxyHandler.java,121,,"                ch.pipeline().addLast(""proxyOutboundHandler"", new ProxyBackendHandler(config, protocolVersion));"
220095,./TargetProjects/pulsar/pulsar-proxy/src/main/java/org/apache/pulsar/proxy/server/ProxyConfiguration.java,430,,"                  + "" used by the Pulsar proxy to authenticate with Pulsar brokers"""
220096,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/AuthedAdminProxyHandlerTest.java,71,,"        conf.setTlsTrustCertsFilePath(getTlsFile(""ca.cert""));"
220097,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/AuthedAdminProxyHandlerTest.java,163,,"            brokerAdmin.tenants().createTenant(""tenant1"","
220098,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/FunctionWorkerRoutingTest.java,45,,"                functionWorkerUrl, ""test"", ""test""));"
220099,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/ProxyAuthenticationTest.java,82,,"			headers.put(""BasicAuthentication"", authParam);"
220100,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/ProxyIsAHttpProxyTest.java,157,,"        props.setProperty(""httpReverseProxy.foobar.path"", ""/ui"");"
220101,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/ProxyIsAHttpProxyTest.java,157,,"        props.setProperty(""httpReverseProxy.foobar.path"", ""/ui"");"
220102,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/ProxyIsAHttpProxyTest.java,158,,"        props.setProperty(""servicePort"", ""0"");"
220103,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/ProxyIsAHttpProxyTest.java,159,,"        props.setProperty(""webServicePort"", ""0"");"
220104,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/ProxyIsAHttpProxyTest.java,168,,"        props.setProperty(""httpReverseProxy.foobar.proxyTo"", backingServer1.getURI().toString());"
220105,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/ProxyIsAHttpProxyTest.java,193,,"            Response r = client.target(webServer.getServiceUri()).path(""/ui/foobar"").request().get();"
220106,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/ProxyIsAHttpProxyTest.java,195,,"            Assert.assertEquals(r.readEntity(String.class).trim(), ""server1,/foobar"");"
220107,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/ProxyKeyStoreTlsTestWithAuth.java,59,,"    protected final String BROKER_KEYSTORE_PW = ""111111"";"
220108,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/ProxyKeyStoreTlsTestWithoutAuth.java,55,,"    protected final String BROKER_KEYSTORE_PW = ""111111"";"
220109,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/ProxyRolesEnforcementTest.java,79,,"            headers.put(""BasicAuthentication"", authParam);"
220110,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/ProxyServiceStarterTest.java,82,,"        sessionFuture.get().getRemote().sendPing(ByteBuffer.wrap(""ping"".getBytes()));"
220111,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/ProxyWithAuthorizationNegTest.java,185,,"                    .topic(""persistent://my-property/proxy-authorization-neg/my-ns/my-topic1"")"
220112,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/ProxyWithAuthorizationTest.java,98,,"        protocols_2.add(""TLSv1.2"");"
220113,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/ProxyWithAuthorizationTest.java,108,,"        ciphers_4.add(""TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"");"
220114,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/ProxyWithAuthorizationTest.java,175,,"        conf.setClusterName(""proxy-authorization"");"
220115,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/ProxyWithAuthorizationTest.java,234,,"        log.info(""-- Starting {} test --"", methodName);"
220116,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/ProxyWithAuthorizationTest.java,242,,"        String namespaceName = ""my-property/proxy-authorization/my-ns"";"
220117,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/ProxyWithAuthorizationTest.java,246,,"        admin.tenants().createTenant(""my-property"","
220118,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/ProxyWithAuthorizationTest.java,247,,"                new TenantInfoImpl(Sets.newHashSet(""appid1"", ""appid2""), Sets.newHashSet(""proxy-authorization"")));"
220119,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/ProxyWithAuthorizationTest.java,247,,"                new TenantInfoImpl(Sets.newHashSet(""appid1"", ""appid2""), Sets.newHashSet(""proxy-authorization"")));"
220120,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/ProxyWithAuthorizationTest.java,250,,"        admin.namespaces().grantPermissionOnNamespace(namespaceName, ""Proxy"","
220121,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/ProxyWithAuthorizationTest.java,252,,"        admin.namespaces().grantPermissionOnNamespace(namespaceName, ""Client"","
220122,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/ProxyWithAuthorizationTest.java,256,,"                .topic(""persistent://my-property/proxy-authorization/my-ns/my-topic1"")"
220123,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/ProxyWithAuthorizationTest.java,257,,"                .subscriptionName(""my-subscriber-name"").subscribe();"
220124,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/ProxyWithAuthorizationTest.java,282,,"        log.info(""-- Exiting {} test --"", methodName);"
220125,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/ProxyWithJwtAuthorizationTest.java,89,,"        conf.setClusterName(""proxy-authorization"");"
220126,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/ProxyWithJwtAuthorizationTest.java,155,,"                    .topic(""persistent://my-property/proxy-authorization/my-ns/my-topic1"")"
220127,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/ProxyWithJwtAuthorizationTest.java,156,,"                    .subscriptionName(""my-subscriber-name"").subscribe();"
220128,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/ProxyWithJwtAuthorizationTest.java,183,,"            String message = ""my-message-"" + i;"
220129,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/ProxyWithJwtAuthorizationTest.java,193,,"            log.debug(""Received message: [{}]"", receivedMessage);"
220130,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/SuperUserAuthedAdminProxyHandlerTest.java,68,,"        conf.setTlsTrustCertsFilePath(getTlsFile(""ca.cert""));"
220131,./TargetProjects/pulsar/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/SuperUserAuthedAdminProxyHandlerTest.java,139,,"            adminAdmin.tenants().createTenant(""tenant1"","
220132,./TargetProjects/pulsar/pulsar-sql/presto-pulsar/src/main/java/org/apache/pulsar/sql/presto/decoder/avro/PulsarAvroColumnDecoder.java,187,,"                    format(""cannot decode object of '%s' as '%s' for column '%s'"","
220133,./TargetProjects/pulsar/pulsar-sql/presto-pulsar/src/main/java/org/apache/pulsar/sql/presto/decoder/avro/PulsarAvroRowDecoderFactory.java,91,,"            throw new PrestoException(NOT_SUPPORTED, ""Topic """
220134,./TargetProjects/pulsar/pulsar-sql/presto-pulsar/src/main/java/org/apache/pulsar/sql/presto/decoder/json/PulsarJsonRowDecoderFactory.java,87,,"            throw new PrestoException(NOT_SUPPORTED, ""Topic """
220135,./TargetProjects/pulsar/pulsar-sql/presto-pulsar/src/main/java/org/apache/pulsar/sql/presto/decoder/protobufnative/PulsarProtobufNativeColumnDecoder.java,172,,"                    format(""cannot decode object of '%s' as '%s' for column '%s'"","
220136,./TargetProjects/pulsar/pulsar-sql/presto-pulsar/src/test/java/org/apache/pulsar/sql/presto/TestPulsarConnector.java,126,,"    protected static final TopicName TOPIC_1 = TopicName.get(""persistent"", NAMESPACE_NAME_1, ""topic-1"");"
220137,./TargetProjects/pulsar/pulsar-sql/presto-pulsar/src/test/java/org/apache/pulsar/sql/presto/TestPulsarConnector.java,126,,"    protected static final TopicName TOPIC_1 = TopicName.get(""persistent"", NAMESPACE_NAME_1, ""topic-1"");"
220138,./TargetProjects/pulsar/pulsar-sql/presto-pulsar/src/test/java/org/apache/pulsar/sql/presto/TestPulsarConnector.java,137,,"            ""partitioned-topic-1"");"
220139,./TargetProjects/pulsar/pulsar-sql/presto-pulsar/src/test/java/org/apache/pulsar/sql/presto/TestPulsarMetadata.java,46,,"    @Test(dataProvider = ""rewriteNamespaceDelimiter"", singleThreaded = true)"
220140,./TargetProjects/pulsar/pulsar-sql/presto-pulsar/src/test/java/org/apache/pulsar/sql/presto/TestPulsarRecordCursor.java,97,,"                        if (fooColumnHandles.get(i).getName().equals(""field1"")) {"
220141,./TargetProjects/pulsar/pulsar-sql/presto-pulsar/src/test/java/org/apache/pulsar/sql/presto/TestPulsarRecordCursor.java,100,,"                        } else if (fooColumnHandles.get(i).getName().equals(""field2"")) {"
220142,./TargetProjects/pulsar/pulsar-sql/presto-pulsar/src/test/java/org/apache/pulsar/sql/presto/TestPulsarSplitManager.java,84,,"    @Test(dataProvider = ""rewriteNamespaceDelimiter"", singleThreaded = true)"
220143,./TargetProjects/pulsar/pulsar-sql/presto-pulsar/src/test/java/org/apache/pulsar/sql/presto/TestPulsarSplitManager.java,91,,"            log.info(""!----- topic: %s -----!"", topicName);"
220144,./TargetProjects/pulsar/pulsar-sql/presto-pulsar/src/test/java/org/apache/pulsar/sql/presto/decoder/avro/TestAvroDecoder.java,103,,"                ""stringField"", VARCHAR, false, false, ""stringField"", null, null, PulsarColumnHandle.HandleKeyValueType.NONE);"
220145,./TargetProjects/pulsar/pulsar-sql/presto-pulsar/src/test/java/org/apache/pulsar/sql/presto/decoder/avro/TestAvroDecoder.java,123,,"                ""longField"", BIGINT, false, false, ""longField"", null, null, PulsarColumnHandle.HandleKeyValueType.NONE);"
220146,./TargetProjects/pulsar/pulsar-sql/presto-pulsar/src/test/java/org/apache/pulsar/sql/presto/decoder/avro/TestAvroDecoder.java,176,,"        Object fieldValue = genericRecord.getAvroRecord().get(""arrayField"");"
220147,./TargetProjects/pulsar/pulsar-sql/presto-pulsar/src/test/java/org/apache/pulsar/sql/presto/decoder/avro/TestAvroDecoder.java,200,,"        Object fieldValue = genericRecord.getAvroRecord().get(""mapField"");"
220148,./TargetProjects/pulsar/pulsar-sql/presto-pulsar/src/test/java/org/apache/pulsar/sql/presto/decoder/json/TestJsonDecoder.java,93,,"                ""stringField"", VARCHAR, false, false, ""stringField"", null, null, PulsarColumnHandle.HandleKeyValueType.NONE);"
220149,./TargetProjects/pulsar/pulsar-sql/presto-pulsar/src/test/java/org/apache/pulsar/sql/presto/decoder/json/TestJsonDecoder.java,113,,"                ""longField"", BIGINT, false, false, ""longField"", null, null, PulsarColumnHandle.HandleKeyValueType.NONE);"
220150,./TargetProjects/pulsar/pulsar-sql/presto-pulsar/src/test/java/org/apache/pulsar/sql/presto/decoder/json/TestJsonDecoder.java,132,,"        Object fieldValue = genericRecord.getJsonNode().get(""arrayField"");"
220151,./TargetProjects/pulsar/pulsar-sql/presto-pulsar/src/test/java/org/apache/pulsar/sql/presto/decoder/json/TestJsonDecoder.java,190,,"        Object fieldValue = genericRecord.getJsonNode().get(""mapField"");"
220152,./TargetProjects/pulsar/pulsar-transaction/coordinator/src/test/java/org/apache/pulsar/transaction/coordinator/MLTransactionMetadataStoreTest.java,65,,"        @Cleanup(""shutdown"")"
220153,./TargetProjects/pulsar/pulsar-transaction/coordinator/src/test/java/org/apache/pulsar/transaction/coordinator/MLTransactionMetadataStoreTest.java,97,,"                subscriptions.add(new TransactionSubscription(""topic1"", ""sub1""));"
220154,./TargetProjects/pulsar/pulsar-transaction/coordinator/src/test/java/org/apache/pulsar/transaction/coordinator/MLTransactionMetadataStoreTest.java,97,,"                subscriptions.add(new TransactionSubscription(""topic1"", ""sub1""));"
220155,./TargetProjects/pulsar/pulsar-transaction/coordinator/src/test/java/org/apache/pulsar/transaction/coordinator/MLTransactionMetadataStoreTest.java,216,,"                subscriptions1.add(new TransactionSubscription(""topic3"", ""sub3""));"
220156,./TargetProjects/pulsar/pulsar-transaction/coordinator/src/test/java/org/apache/pulsar/transaction/coordinator/MLTransactionMetadataStoreTest.java,216,,"                subscriptions1.add(new TransactionSubscription(""topic3"", ""sub3""));"
220157,./TargetProjects/pulsar/pulsar-websocket/src/main/java/org/apache/pulsar/websocket/ConsumerHandler.java,366,,"        if (queryParams.containsKey(""subscriptionType"")) {"
220158,./TargetProjects/pulsar/pulsar-websocket/src/main/java/org/apache/pulsar/websocket/ConsumerHandler.java,372,,"        if (queryParams.containsKey(""subscriptionMode"")) {"
220159,./TargetProjects/pulsar/pulsar-websocket/src/main/java/org/apache/pulsar/websocket/ProducerHandler.java,312,,"        if (queryParams.containsKey(""messageRoutingMode"")) {"
220160,./TargetProjects/pulsar/pulsar-websocket/src/main/java/org/apache/pulsar/websocket/ProducerHandler.java,322,,"        if (queryParams.containsKey(""compressionType"")) {"
220161,./TargetProjects/pulsar/pulsar-websocket/src/main/java/org/apache/pulsar/websocket/ReaderHandler.java,313,,"        if (isNotBlank(queryParams.get(""messageId""))) {"
220162,./TargetProjects/pulsar/pulsar-websocket/src/test/java/org/apache/pulsar/websocket/AbstractWebSocketHandlerTest.java,264,,"            put(""batchingMaxMessages"", ""1001"");"
220163,./TargetProjects/pulsar/pulsar-websocket/src/test/java/org/apache/pulsar/websocket/LookupProtocolTest.java,41,,"        conf.setServiceUrl(""http://localhost:8080"");"
220164,./TargetProjects/pulsar/pulsar-websocket/src/test/java/org/apache/pulsar/websocket/LookupProtocolTest.java,42,,"        conf.setServiceUrlTls(""https://localhost:8443"");"
220165,./TargetProjects/pulsar/pulsar-websocket/src/test/java/org/apache/pulsar/websocket/LookupProtocolTest.java,45,,"        Field lookupField = PulsarClientImpl.class.getDeclaredField(""lookup"");"
220166,./TargetProjects/pulsar/pulsar-websocket/src/test/java/org/apache/pulsar/websocket/admin/WebSocketWebResourceTest.java,142,,"            Assert.fail(""Should not fail"", e);"
220167,./TargetProjects/pulsar/pulsar-websocket/src/test/java/org/apache/pulsar/websocket/admin/WebSocketWebResourceTest.java,161,,"            Assert.fail(""Should fail"");"
220168,./TargetProjects/pulsar/pulsar-zookeeper-utils/src/test/java/org/apache/pulsar/zookeeper/LocalZooKeeperConnectionServiceTest.java,56,,"        LocalZooKeeperConnectionService.checkAndCreatePersistNode(zk, ""/path1"");"
220169,./TargetProjects/pulsar/pulsar-zookeeper-utils/src/test/java/org/apache/pulsar/zookeeper/LocalZooKeeperConnectionServiceTest.java,69,,"        LocalZooKeeperConnectionService.createIfAbsent(zk, ""/path2"", ""data2"", CreateMode.EPHEMERAL);"
220170,./TargetProjects/pulsar/pulsar-zookeeper-utils/src/test/java/org/apache/pulsar/zookeeper/LocalZooKeeperConnectionServiceTest.java,74,,"        LocalZooKeeperConnectionService.createIfAbsent(zk, ""/path3"", ""data3"".getBytes(), CreateMode.EPHEMERAL);"
220171,./TargetProjects/pulsar/pulsar-zookeeper-utils/src/test/java/org/apache/pulsar/zookeeper/ZkBookieRackAffinityMappingTest.java,87,,"        assertEquals(racks1.get(0), ""/rack0"");"
220172,./TargetProjects/pulsar/pulsar-zookeeper-utils/src/test/java/org/apache/pulsar/zookeeper/ZkBookieRackAffinityMappingTest.java,88,,"        assertEquals(racks1.get(1), ""/rack1"");"
220173,./TargetProjects/pulsar/pulsar-zookeeper-utils/src/test/java/org/apache/pulsar/zookeeper/ZkBookieRackAffinityMappingTest.java,96,,"        bkClientConf2.setZkServers(""127.0.0.1"" + "":"" + localZkS.getZookeeperPort());"
220174,./TargetProjects/pulsar/pulsar-zookeeper-utils/src/test/java/org/apache/pulsar/zookeeper/ZkBookieRackAffinityMappingTest.java,117,,"        List<String> racks = mapping.resolve(Lists.newArrayList(""127.0.0.1"", ""127.0.0.2"", ""127.0.0.3""));"
220175,./TargetProjects/pulsar/pulsar-zookeeper-utils/src/test/java/org/apache/pulsar/zookeeper/ZkBookieRackAffinityMappingTest.java,117,,"        List<String> racks = mapping.resolve(Lists.newArrayList(""127.0.0.1"", ""127.0.0.2"", ""127.0.0.3""));"
220176,./TargetProjects/pulsar/pulsar-zookeeper-utils/src/test/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicyTest.java,84,,"        isolationGroups.add(""group1"");"
220177,./TargetProjects/pulsar/pulsar-zookeeper-utils/src/test/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicyTest.java,100,,"        mainBookieGroup.put(BOOKIE1, BookieInfo.builder().rack(""rack0"").build());"
220178,./TargetProjects/pulsar/pulsar-zookeeper-utils/src/test/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicyTest.java,101,,"        mainBookieGroup.put(BOOKIE2, BookieInfo.builder().rack(""rack1"").build());"
220179,./TargetProjects/pulsar/pulsar-zookeeper-utils/src/test/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicyTest.java,107,,"        bookieMapping.put(""group2"", secondaryBookieGroup);"
220180,./TargetProjects/pulsar/pulsar-zookeeper-utils/src/test/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicyTest.java,117,,"        bkClientConf.setProperty(ZooKeeperCache.ZK_CACHE_INSTANCE, new ZooKeeperCache(""test"", localZkc, 30) {"
220181,./TargetProjects/pulsar/pulsar-zookeeper-utils/src/test/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicyTest.java,133,,"            fail(""should not pass"");"
220182,./TargetProjects/pulsar/pulsar-zookeeper-utils/src/test/java/org/apache/pulsar/zookeeper/ZkUtilsParentPathTest.java,54,,"                { ""/a/b"", ""/a"" },"
220183,./TargetProjects/pulsar/pulsar-zookeeper-utils/src/test/java/org/apache/pulsar/zookeeper/ZkUtilsParentPathTest.java,65,,"                { ""a/b"", ""a"" },"
220184,./TargetProjects/pulsar/pulsar-zookeeper-utils/src/test/java/org/apache/pulsar/zookeeper/ZookeeperCacheTest.java,108,,"        String value = ""test"";"
220185,./TargetProjects/pulsar/pulsar-zookeeper-utils/src/test/java/org/apache/pulsar/zookeeper/ZookeeperCacheTest.java,109,,"        zkClient.create(""/my_test"", value.getBytes(), null, null);"
220186,./TargetProjects/pulsar/pulsar-zookeeper-utils/src/test/java/org/apache/pulsar/zookeeper/ZookeeperCacheTest.java,128,,"                    && path.equals(""/other"");"
220187,./TargetProjects/pulsar/pulsar-zookeeper-utils/src/test/java/org/apache/pulsar/zookeeper/ZookeeperCacheTest.java,142,,"        zkClient.create(""/test"", new byte[0], null, null);"
220188,./TargetProjects/pulsar/pulsar-zookeeper-utils/src/test/java/org/apache/pulsar/zookeeper/ZookeeperCacheTest.java,336,,"        zkClient.create(""/my_test2"", value.getBytes(), null, null);"
220189,./TargetProjects/pulsar/pulsar-zookeeper-utils/src/test/java/org/apache/pulsar/zookeeper/ZookeeperCacheTest.java,403,,"        @Cleanup(""shutdownNow"")"
220190,./TargetProjects/pulsar/pulsar-zookeeper-utils/src/test/java/org/apache/pulsar/zookeeper/ZookeeperCacheTest.java,408,,"        ExecutorService zkExecutor = Executors.newSingleThreadExecutor(new DefaultThreadFactory(""mockZk""));"
220191,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/auth/admin/PackagesOpsWithAuthTest.java,120,,"        envs.put(""enablePackagesManagement"", ""true"");"
220192,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/auth/admin/PackagesOpsWithAuthTest.java,129,,"        envs.put(""tokenPublicKey"", ""file://"" + PUBLIC_KEY_PATH_INSIDE_CONTAINER);"
220193,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/auth/admin/PackagesOpsWithAuthTest.java,148,,"            .execCmd(PulsarCluster.PULSAR_COMMAND_SCRIPT, ""tokens"", ""create-key-pair"","
220194,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/auth/token/PulsarTokenAuthenticationBaseSuite.java,106,,"            brokerContainer.withEnv(""authenticationEnabled"", ""true"");"
220195,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/auth/token/PulsarTokenAuthenticationBaseSuite.java,142,,"        final String namespace = tenant + ""/ns-1"";"
220196,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/auth/token/TokenAuthWithPublicPrivateKeys.java,46,,"                .execCmd(PulsarCluster.PULSAR_COMMAND_SCRIPT, ""tokens"", ""create-key-pair"","
220197,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/auth/token/TokenAuthWithPublicPrivateKeys.java,59,,"                .execCmd(PulsarCluster.PULSAR_COMMAND_SCRIPT, ""tokens"", ""create"","
220198,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/auth/token/TokenAuthWithPublicPrivateKeys.java,60,,"                        ""--private-key"", ""file://"" + PRIVATE_KEY_PATH_INSIDE_CONTAINER,"
220199,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/auth/token/TokenAuthWithPublicPrivateKeys.java,60,,"                        ""--private-key"", ""file://"" + PRIVATE_KEY_PATH_INSIDE_CONTAINER,"
220200,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/auth/token/TokenAuthWithPublicPrivateKeys.java,61,,"                        ""--subject"", REGULAR_USER_ROLE)"
220201,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/auth/token/TokenAuthWithSymmetricKeys.java,39,,"                .execCmd(PulsarCluster.PULSAR_COMMAND_SCRIPT, ""tokens"", ""create-secret-key"", ""--base64"")"
220202,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/auth/token/TokenAuthWithSymmetricKeys.java,44,,"                .execCmd(PulsarCluster.PULSAR_COMMAND_SCRIPT, ""tokens"", ""create"","
220203,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/auth/token/TokenAuthWithSymmetricKeys.java,45,,"                        ""--secret-key"", ""data:;base64,"" + secretKey,"
220204,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/auth/token/TokenAuthWithSymmetricKeys.java,45,,"                        ""--secret-key"", ""data:;base64,"" + secretKey,"
220205,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/auth/token/TokenAuthWithSymmetricKeys.java,46,,"                        ""--subject"", REGULAR_USER_ROLE)"
220206,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/cli/CLITest.java,70,,"            ""properties"", ""list"");"
220207,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/cli/CLITest.java,83,,"        final String namespace = ""public/"" + namespaceLocalName;"
220208,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/cli/CLITest.java,110,,"                ""topics"","
220209,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/cli/CLITest.java,188,,"            ""produce"","
220210,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/cli/CLITest.java,227,,"                ""namespaces"","
220211,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/cli/CLITest.java,304,,"            ""schemas"","
220212,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/cli/PackagesCliTest.java,90,,"        ContainerExecResult result = runPackagesCommand(""upload"", ""--description"", ""a test package"","
220213,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/cli/SchemaUpdateStrategyTest.java,59,,"                ""namespaces"", ""get-schema-autoupdate-strategy"", namespace);"
220214,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/cli/SchemaUpdateStrategyTest.java,59,,"                ""namespaces"", ""get-schema-autoupdate-strategy"", namespace);"
220215,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/cli/SchemaUpdateStrategyTest.java,60,,"        Assert.assertEquals(result.getStdout().trim(), ""FULL"");"
220216,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/cli/SchemaUpdateStrategyTest.java,61,,"        pulsarCluster.runAdminCommandOnAnyBroker(""namespaces"", ""set-schema-autoupdate-strategy"","
220217,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/cli/SchemaUpdateStrategyTest.java,66,,"            V1Data v1Data = new V1Data(""test1"", 1);"
220218,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/cli/SchemaUpdateStrategyTest.java,75,,"                Assert.assertTrue(e.getMessage().contains(""IncompatibleSchemaException""));"
220219,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/cli/SchemaUpdateStrategyTest.java,79,,"            V2Data v2Data = new V2Data(""test2"");"
220220,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/cli/SchemaUpdateStrategyTest.java,88,,"                 .subscriptionName(""sub"")"
220221,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/cli/SchemaUpdateStrategyTest.java,91,,"                log.info(""Schema Info : {}"", schema.getSchemaInfo().getSchemaDefinition());"
220222,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/cli/SchemaUpdateStrategyTest.java,307,,"    @AvroAlias(space=""blah"", alias=""data"")"
220223,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/cli/SchemaUpdateStrategyTest.java,307,,"    @AvroAlias(space=""blah"", alias=""data"")"
220224,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/cli/SchemaUpdateStrategyTest.java,320,,"                record.getFields().size() + "" fields in found : "" + record.getFields());"
220225,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/cli/SchemaUpdateStrategyTest.java,321,,"            assertEquals(foo, record.getField(""foo""));"
220226,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/cli/SchemaUpdateStrategyTest.java,394,,"        pulsarCluster.runAdminCommandOnAnyBroker(""namespaces"", ""create"", ""-c"","
220227,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/cli/SchemaUpdateStrategyTest.java,450,,"                                                 ""public/"" + pulsarCluster.getClusterName() + ""/b-p-v1"");"
220228,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/cli/SchemaUpdateStrategyTest.java,454,,"                               ""persistent://public/"" + pulsarCluster.getClusterName() + ""/b-p-v1/topic1"");"
220229,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/compaction/TestCompaction.java,49,,"    @Test(dataProvider = ""ServiceUrls"", timeOut=300_000)"
220230,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/compaction/TestCompaction.java,53,,"        final String namespace = tenant + ""/ns1"";"
220231,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/compaction/TestCompaction.java,54,,"        final String topic = ""persistent://"" + namespace + ""/topic1"";"
220232,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/compaction/TestCompaction.java,56,,"        this.createTenantName(tenant, pulsarCluster.getClusterName(), ""admin"");"
220233,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/compaction/TestCompaction.java,61,,"            client.newConsumer().topic(topic).subscriptionName(""sub1"").subscribe().close();"
220234,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/compaction/TestCompaction.java,66,,"                    .key(""key0"")"
220235,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/compaction/TestCompaction.java,67,,"                    .value(""content0"")"
220236,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/compaction/TestCompaction.java,71,,"                    .value(""content1"")"
220237,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/compaction/TestCompaction.java,114,,"        pulsarCluster.runAdminCommandOnAnyBroker(""namespaces"","
220238,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/compaction/TestCompaction.java,141,,"            pulsarCluster.runAdminCommandOnAnyBroker(""topics"","
220239,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/compaction/TestCompaction.java,177,,"            client.newConsumer().topic(topic + ""-partition-0"").subscriptionName(subscriptionName).subscribe().close();"
220240,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/compaction/TestCompaction.java,178,,"            client.newConsumer().topic(topic + ""-partition-1"").subscriptionName(subscriptionName).subscribe().close();"
220241,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/PulsarFunctionsTest.java,129,,"        String inputTopicName = ""persistent://public/default/test-function-local-run-"" + runtime + ""-input-"" + randomName(8);"
220242,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/PulsarFunctionsTest.java,130,,"        String outputTopicName = ""test-function-local-run-"" + runtime + ""-output-"" + randomName(8);"
220243,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/PulsarFunctionsTest.java,182,,"                        .subscriptionName(""test-sub"")"
220244,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/PulsarFunctionsTest.java,190,,"                    producer.send(""message-"" + i);"
220245,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/PulsarFunctionsTest.java,200,,"                    log.info(""Received: {}"", msg.getValue());"
220246,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/PulsarFunctionsTest.java,275,,"        assertTrue(containerExecResult.getStdout().contains(""\""Created successfully\""""));"
220247,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/PulsarFunctionsTest.java,282,,"                ""functions"","
220248,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/PulsarFunctionsTest.java,284,,"                ""--tenant"", ""public"","
220249,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/PulsarFunctionsTest.java,284,,"                ""--tenant"", ""public"","
220250,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/PulsarFunctionsTest.java,285,,"                ""--namespace"", ""default"","
220251,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/PulsarFunctionsTest.java,285,,"                ""--namespace"", ""default"","
220252,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/PulsarFunctionsTest.java,286,,"                ""--name"", functionName"
220253,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/PulsarFunctionsTest.java,485,,"                ""stats"","
220254,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/PulsarFunctionsTest.java,845,,"        log.info(""---------- Function command: {}"", command);"
220255,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/PulsarFunctionsTest.java,1646,,"                Schema.JSON(Users.UserV1.class), new Users.UserV1(""ran"", 33),"
220256,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/PulsarFunctionsTest.java,1649,,"                Schema.JSON(Users.UserV2.class), new Users.UserV2(""tang"", 18, ""123123123""),"
220257,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/PulsarFunctionsTest.java,1705,,"                assertEquals(jsonNode.get(""name"").textValue(), ""ran"");"
220258,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/PulsarFunctionsTest.java,1706,,"                assertEquals(jsonNode.get(""age"").intValue(), 33);"
220259,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/PulsarStateTest.java,112,,"                SourceStatus status = admin.sources().getSourceStatus(""public"", ""default"", sourceName);"
220260,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/PulsarStateTest.java,112,,"                SourceStatus status = admin.sources().getSourceStatus(""public"", ""default"", sourceName);"
220261,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/PulsarStateTest.java,193,,"                ""sources"", ""create"","
220262,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/PulsarStateTest.java,194,,"                ""--name"", sourceName,"
220263,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/PulsarStateTest.java,212,,"                ""sinks"", ""create"","
220264,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/PulsarStateTest.java,296,,"                ""get"","
220265,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/PulsarStateTest.java,297,,"                ""--tenant"", ""public"","
220266,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/PulsarStateTest.java,298,,"                ""--namespace"", ""default"","
220267,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/PulsarStateTest.java,319,,"            ""functions"","
220268,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/java/PulsarFunctionsJavaTest.java,41,,"   @Test(groups = {""java_function"", ""function""})"
220269,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/java/PulsarFunctionsJavaTest.java,41,,"   @Test(groups = {""java_function"", ""function""})"
220270,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/python/PulsarFunctionsPythonTest.java,32,,"    @Test(groups = {""python_function"", ""function""})"
220271,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/python/PulsarFunctionsPythonTest.java,32,,"    @Test(groups = {""python_function"", ""function""})"
220272,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/utils/CommandGenerator.java,94,,"            commandBuilder.append("" --tenant "" + tenant);"
220273,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/utils/CommandGenerator.java,97,,"            commandBuilder.append("" --namespace "" + namespace);"
220274,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/utils/CommandGenerator.java,100,,"            commandBuilder.append("" --name "" + functionName);"
220275,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/utils/CommandGenerator.java,126,,"                    commandBuilder.append("" --py "" + PYTHONBASE + codeFile);"
220276,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/functions/utils/CommandGenerator.java,133,,"                    commandBuilder.append("" --go "" + GOBASE + codeFile);"
220277,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/PulsarGenericObjectSinkTest.java,109,,"                new SinkSpec(""test-kv-sink-input-string-"" + randomName(8), Schema.STRING, ""foo""),"
220278,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/PulsarGenericObjectSinkTest.java,154,,"                SinkStatus status = admin.sinks().getSinkStatus(""public"", ""default"", sinkName);"
220279,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/PulsarGenericObjectSinkTest.java,154,,"                SinkStatus status = admin.sinks().getSinkStatus(""public"", ""default"", sinkName);"
220280,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/PulsarGenericObjectSinkTest.java,155,,"                log.info(""sink {} status {}"", sinkName, status);"
220281,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/PulsarGenericObjectSinkTest.java,264,,"                ""sinks"", ""create"","
220282,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/PulsarGenericObjectSinkTest.java,265,,"                ""--name"", sinkName,"
220283,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/PulsarGenericObjectSinkTest.java,282,,"                ""--tenant"", ""public"","
220284,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/PulsarGenericObjectSinkTest.java,283,,"                ""--namespace"", ""default"","
220285,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sinks/JdbcPostgresSinkTester.java,59,,"    private final String tableName = ""test"";"
220286,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sinks/PulsarIOSinkRunner.java,58,,"	@SuppressWarnings({ ""rawtypes"", ""unchecked"" })"
220287,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sinks/PulsarIOSinkRunner.java,147,,"                    ""sink"", ""create"","
220288,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sinks/PulsarIOSinkRunner.java,148,,"                    ""--tenant"", tenant,"
220289,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sinks/PulsarIOSinkRunner.java,149,,"                    ""--namespace"", namespace,"
220290,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sinks/PulsarIOSinkRunner.java,150,,"                    ""--name"", sinkName,"
220291,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sinks/PulsarIOSinkRunner.java,152,,"                    ""--sinkConfig"", new Gson().toJson(tester.sinkConfig()),"
220292,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sinks/PulsarIOSinkRunner.java,153,,"                    ""--inputs"", inputTopicName"
220293,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sinks/PulsarIOSinkRunner.java,360,,"            properties.put(""ACTION"", ""INSERT"");"
220294,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sinks/PulsarSinksTest.java,31,,"    @Test(groups = ""sink"")"
220295,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sources/AvroKafkaSourceTest.java,99,,"    @Test(groups = ""source"")"
220296,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sources/AvroKafkaSourceTest.java,271,,"                ""--tenant"", tenant,"
220297,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sources/AvroKafkaSourceTest.java,272,,"                ""--namespace"", namespace,"
220298,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sources/AvroKafkaSourceTest.java,273,,"                ""--name"", sourceName"
220299,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sources/GenericRecordSourceTest.java,79,,"                        SourceStatus status = admin.sources().getSourceStatus(""public"", ""default"", sourceName);"
220300,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sources/GenericRecordSourceTest.java,79,,"                        SourceStatus status = admin.sources().getSourceStatus(""public"", ""default"", sourceName);"
220301,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sources/GenericRecordSourceTest.java,110,,"            ""sources"", ""create"","
220302,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sources/GenericRecordSourceTest.java,111,,"            ""--name"", sourceName,"
220303,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sources/GenericRecordSourceTest.java,128,,"            ""--tenant"", ""public"","
220304,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sources/GenericRecordSourceTest.java,129,,"            ""--namespace"", ""default"","
220305,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sources/PulsarIOSourceRunner.java,57,,"	@SuppressWarnings({ ""rawtypes"", ""unchecked"" })"
220306,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sources/PulsarIOSourceRunner.java,128,,"            ""source"", ""create"","
220307,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sources/PulsarIOSourceRunner.java,129,,"            ""--tenant"", tenant,"
220308,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sources/PulsarIOSourceRunner.java,130,,"            ""--namespace"", namespace,"
220309,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sources/PulsarIOSourceRunner.java,131,,"            ""--name"", sourceName,"
220310,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sources/PulsarSourcePropertyTest.java,64,,"                SourceStatus status = admin.sources().getSourceStatus(""public"", ""default"", sourceName);"
220311,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sources/PulsarSourcePropertyTest.java,64,,"                SourceStatus status = admin.sources().getSourceStatus(""public"", ""default"", sourceName);"
220312,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sources/PulsarSourcePropertyTest.java,98,,"                ""sources"", ""create"","
220313,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sources/PulsarSourcePropertyTest.java,99,,"                ""--name"", sourceName,"
220314,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sources/PulsarSourcePropertyTest.java,116,,"                ""--tenant"", ""public"","
220315,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sources/PulsarSourcePropertyTest.java,117,,"                ""--namespace"", ""default"","
220316,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sources/debezium/DebeziumMongoDbSourceTester.java,72,,"        this.debeziumMongoDbContainer.execCmd(""/bin/bash"", ""-c"","
220317,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sources/debezium/DebeziumMongoDbSourceTester.java,73,,"                ""mongo -u debezium -p dbz --authenticationDatabase admin localhost:27017/inventory "" +"
220318,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sources/debezium/DebeziumMySqlSourceTester.java,86,,"                ""/bin/bash"", ""-c"","
220319,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sources/debezium/DebeziumPostgreSqlSourceTester.java,84,,"        this.debeziumPostgresqlContainer.execCmd(""/bin/bash"", ""-c"","
220320,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sources/debezium/PulsarDebeziumSourcesTest.java,43,,"    @Test(groups = ""source"")"
220321,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/messaging/NonPersistentTopicMessagingTest.java,28,,"    @Test(dataProvider = ""ServiceUrls"")"
220322,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/messaging/PersistentTopicMessagingTest.java,28,,"    @Test(dataProvider = ""ServiceUrls"")"
220323,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/messaging/TopicMessagingBase.java,49,,"        log.info(""-- Starting {} test --"", methodName);"
220324,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/messaging/TopicMessagingBase.java,58,,"                .subscriptionName(""test-sub"")"
220325,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/messaging/TopicMessagingBase.java,82,,"        log.info(""public messages complete."");"
220326,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/messaging/TopicMessagingBase.java,84,,"        log.info(""-- Exiting {} test --"", methodName);"
220327,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/offload/TestBaseOffload.java,57,,"                ""create"", ""--allowed-clusters"", pulsarCluster.getClusterName(),"
220328,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/offload/TestBaseOffload.java,61,,"                ""namespaces"","
220329,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/offload/TestBaseOffload.java,68,,"            client.newConsumer().topic(topic).subscriptionName(""my-sub"").subscribe().close();"
220330,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/offload/TestBaseOffload.java,73,,"                producer.sendAsync(buildEntry(""offload-message"" + i));"
220331,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/offload/TestBaseOffload.java,84,,"            String output = pulsarCluster.runAdminCommandOnAnyBroker(""topics"","
220332,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/presto/TestBasicPresto.java,251,,"            final Stock stock = new Stock(i,""STOCK_"" + i , 100.0 + i * 10);"
220333,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/presto/TestPulsarSQLBase.java,196,,"        log.info(""Executing query: {}"", query);"
220334,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/presto/TestPulsarSQLBase.java,202,,"            timestamps.add(res.getTimestamp(""__publish_time__""));"
220335,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/schema/SchemaTest.java,84,,"        final String namespace = ""test-namespace-"" + randomName(16);"
220336,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/schema/SchemaTest.java,104,,"            person.setName(""Tom Hanks"");"
220337,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/schema/SchemaTest.java,166,,"                .subscriptionName(""test"")"
220338,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/topologies/PulsarCluster.java,112,,"            .withEnv(""clusterName"", clusterName)"
220339,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/topologies/PulsarCluster.java,113,,"            .withEnv(""zkServers"", ZKContainer.NAME)"
220340,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/topologies/PulsarCluster.java,130,,"            .withEnv(""zookeeperServers"", ZKContainer.NAME)"
220341,./TargetProjects/pulsar/tests/integration/src/test/java/org/apache/pulsar/tests/integration/topologies/PulsarTestBase.java,89,,"                        producer.send(""smoke-message-"" + i);"
220342,./TargetProjects/pulsar/tests/pulsar-client-admin-shade-test/src/test/java/org/apache/pulsar/tests/integration/SimpleProducerConsumerTest.java,131,,"                String CERT_FILE_PATH = ""./src/test/resources/certificate/public-key."" + keyName;"
220343,./TargetProjects/pulsar/tests/pulsar-client-admin-shade-test/src/test/java/org/apache/pulsar/tests/integration/SimpleProducerConsumerTest.java,137,,"                        Assert.fail(""Failed to read certificate from "" + CERT_FILE_PATH);"
220344,./TargetProjects/pulsar/tests/pulsar-client-admin-shade-test/src/test/java/org/apache/pulsar/tests/integration/SimpleProducerConsumerTest.java,140,,"                    Assert.fail(""Certificate file "" + CERT_FILE_PATH + "" is not present or not readable."");"
220345,./TargetProjects/pulsar/tests/pulsar-client-admin-shade-test/src/test/java/org/apache/pulsar/tests/integration/SimpleProducerConsumerTest.java,140,,"                    Assert.fail(""Certificate file "" + CERT_FILE_PATH + "" is not present or not readable."");"
220346,./TargetProjects/pulsar/tests/pulsar-client-admin-shade-test/src/test/java/org/apache/pulsar/tests/integration/SimpleProducerConsumerTest.java,147,,"                String CERT_FILE_PATH = ""./src/test/resources/certificate/private-key."" + keyName;"
220347,./TargetProjects/pulsar/tests/pulsar-client-admin-shade-test/src/test/java/org/apache/pulsar/tests/integration/SimpleProducerConsumerTest.java,166,,"                .subscriptionName(""my-subscriber-name"").cryptoKeyReader(new EncKeyReader()).subscribe();"
220348,./TargetProjects/pulsar/tests/pulsar-client-admin-shade-test/src/test/java/org/apache/pulsar/tests/integration/SimpleProducerConsumerTest.java,172,,"                .addEncryptionKey(""client-rsa.pem"").cryptoKeyReader(new EncKeyReader()).create();"
220349,./TargetProjects/pulsar/tests/pulsar-client-admin-shade-test/src/test/java/org/apache/pulsar/tests/integration/SimpleProducerConsumerTest.java,177,,"            String message = ""my-message-"" + i;"
220350,./TargetProjects/pulsar/tests/pulsar-client-admin-shade-test/src/test/java/org/apache/pulsar/tests/integration/SimpleProducerConsumerTest.java,400,,"                .topic(""persistent://my-property/use/myenc-ns/myenc-topic1"").subscriptionName(""my-subscriber-name"")"
220351,./TargetProjects/pulsar/tests/pulsar-client-all-shade-test/src/test/java/org/apache/pulsar/tests/integration/SimpleProducerConsumerTest.java,134,,"                String CERT_FILE_PATH = ""./src/test/resources/certificate/public-key."" + keyName;"
220352,./TargetProjects/pulsar/tests/pulsar-client-all-shade-test/src/test/java/org/apache/pulsar/tests/integration/SimpleProducerConsumerTest.java,140,,"                        Assert.fail(""Failed to read certificate from "" + CERT_FILE_PATH);"
220353,./TargetProjects/pulsar/tests/pulsar-client-all-shade-test/src/test/java/org/apache/pulsar/tests/integration/SimpleProducerConsumerTest.java,143,,"                    Assert.fail(""Certificate file "" + CERT_FILE_PATH + "" is not present or not readable."");"
220354,./TargetProjects/pulsar/tests/pulsar-client-all-shade-test/src/test/java/org/apache/pulsar/tests/integration/SimpleProducerConsumerTest.java,143,,"                    Assert.fail(""Certificate file "" + CERT_FILE_PATH + "" is not present or not readable."");"
220355,./TargetProjects/pulsar/tests/pulsar-client-all-shade-test/src/test/java/org/apache/pulsar/tests/integration/SimpleProducerConsumerTest.java,150,,"                String CERT_FILE_PATH = ""./src/test/resources/certificate/private-key."" + keyName;"
220356,./TargetProjects/pulsar/tests/pulsar-client-all-shade-test/src/test/java/org/apache/pulsar/tests/integration/SimpleProducerConsumerTest.java,169,,"                .subscriptionName(""my-subscriber-name"").cryptoKeyReader(new EncKeyReader()).subscribe();"
220357,./TargetProjects/pulsar/tests/pulsar-client-all-shade-test/src/test/java/org/apache/pulsar/tests/integration/SimpleProducerConsumerTest.java,175,,"                .addEncryptionKey(""client-rsa.pem"").cryptoKeyReader(new EncKeyReader()).create();"
220358,./TargetProjects/pulsar/tests/pulsar-client-all-shade-test/src/test/java/org/apache/pulsar/tests/integration/SimpleProducerConsumerTest.java,180,,"            String message = ""my-message-"" + i;"
220359,./TargetProjects/pulsar/tests/pulsar-client-all-shade-test/src/test/java/org/apache/pulsar/tests/integration/SimpleProducerConsumerTest.java,400,,"                .topic(""persistent://my-property/use/myenc-ns/myenc-topic1"").subscriptionName(""my-subscriber-name"")"
220360,./TargetProjects/pulsar/tests/pulsar-client-shade-test/src/test/java/org/apache/pulsar/tests/integration/SimpleProducerConsumerTest.java,131,,"                String CERT_FILE_PATH = ""./src/test/resources/certificate/public-key."" + keyName;"
220361,./TargetProjects/pulsar/tests/pulsar-client-shade-test/src/test/java/org/apache/pulsar/tests/integration/SimpleProducerConsumerTest.java,137,,"                        Assert.fail(""Failed to read certificate from "" + CERT_FILE_PATH);"
220362,./TargetProjects/pulsar/tests/pulsar-client-shade-test/src/test/java/org/apache/pulsar/tests/integration/SimpleProducerConsumerTest.java,140,,"                    Assert.fail(""Certificate file "" + CERT_FILE_PATH + "" is not present or not readable."");"
220363,./TargetProjects/pulsar/tests/pulsar-client-shade-test/src/test/java/org/apache/pulsar/tests/integration/SimpleProducerConsumerTest.java,140,,"                    Assert.fail(""Certificate file "" + CERT_FILE_PATH + "" is not present or not readable."");"
220364,./TargetProjects/pulsar/tests/pulsar-client-shade-test/src/test/java/org/apache/pulsar/tests/integration/SimpleProducerConsumerTest.java,147,,"                String CERT_FILE_PATH = ""./src/test/resources/certificate/private-key."" + keyName;"
220365,./TargetProjects/pulsar/tests/pulsar-client-shade-test/src/test/java/org/apache/pulsar/tests/integration/SimpleProducerConsumerTest.java,166,,"                .subscriptionName(""my-subscriber-name"").cryptoKeyReader(new EncKeyReader()).subscribe();"
220366,./TargetProjects/pulsar/tests/pulsar-client-shade-test/src/test/java/org/apache/pulsar/tests/integration/SimpleProducerConsumerTest.java,172,,"                .addEncryptionKey(""client-rsa.pem"").cryptoKeyReader(new EncKeyReader()).create();"
220367,./TargetProjects/pulsar/tests/pulsar-client-shade-test/src/test/java/org/apache/pulsar/tests/integration/SimpleProducerConsumerTest.java,177,,"            String message = ""my-message-"" + i;"
220368,./TargetProjects/pulsar/tests/pulsar-client-shade-test/src/test/java/org/apache/pulsar/tests/integration/SimpleProducerConsumerTest.java,397,,"                .topic(""persistent://my-property/use/myenc-ns/myenc-topic1"").subscriptionName(""my-subscriber-name"")"
220369,./TargetProjects/pulsar/tiered-storage/jcloud/src/main/java/org/apache/bookkeeper/mledger/offload/jcloud/impl/BlobStoreManagedLedgerOffloader.java,206,,"                        partPayload.getContentMetadata().setContentType(""application/octet-stream"");"
220370,./TargetProjects/pulsar/tiered-storage/jcloud/src/main/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/JCloudBlobStoreProvider.java,273,,"                ""Either Region or ServiceEndpoint must specified for "" + config.getDriver() + "" offload"");"
220371,./TargetProjects/pulsar/tiered-storage/jcloud/src/test/java/org/apache/bookkeeper/mledger/offload/jcloud/BlobStoreBackedInputStreamTest.java,103,,"        log.debug(""put blob: {} in Bucket: {}, in blobStore, result: {}"", objectKey, BUCKET, ret);"
220372,./TargetProjects/pulsar/tiered-storage/jcloud/src/test/java/org/apache/bookkeeper/mledger/offload/jcloud/BlobStoreTestBase.java,41,,"        if (Boolean.parseBoolean(System.getProperty(""testRealAWS"", ""false""))) {"
220373,./TargetProjects/pulsar/tiered-storage/jcloud/src/test/java/org/apache/bookkeeper/mledger/offload/jcloud/impl/BlobStoreManagedLedgerOffloaderBase.java,71,,"        if (Boolean.parseBoolean(System.getProperty(""testRealAWS"", ""false""))) {"
220374,./TargetProjects/pulsar/tiered-storage/jcloud/src/test/java/org/apache/bookkeeper/mledger/offload/jcloud/impl/BlobStoreManagedLedgerOffloaderStreamingTest.java,95,,"            put(TieredStorageConfiguration.MAX_OFFLOAD_SEGMENT_SIZE_IN_BYTES, ""1000"");"
220375,./TargetProjects/pulsar/tiered-storage/jcloud/src/test/java/org/apache/bookkeeper/mledger/offload/jcloud/impl/BlobStoreManagedLedgerOffloaderStreamingTest.java,96,,"            put(config.getKeys(TieredStorageConfiguration.METADATA_FIELD_MAX_BLOCK_SIZE).get(0), ""5242880"");"
220376,./TargetProjects/pulsar/tiered-storage/jcloud/src/test/java/org/apache/bookkeeper/mledger/offload/jcloud/impl/BlobStoreManagedLedgerOffloaderStreamingTest.java,97,,"            put(TieredStorageConfiguration.MAX_OFFLOAD_SEGMENT_ROLLOVER_TIME_SEC, ""600"");"
220377,./TargetProjects/pulsar/tiered-storage/jcloud/src/test/java/org/apache/bookkeeper/mledger/offload/jcloud/impl/BlockAwareSegmentInputStreamTest.java,251,,"                fail(""meet exception"", e);"
220378,./TargetProjects/pulsar/tiered-storage/jcloud/src/test/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/JCloudBlobStoreProviderTests.java,38,,"        map.put(""managedLedgerOffloadRegion"", ""us-east-1"");"
220379,./TargetProjects/pulsar/tiered-storage/jcloud/src/test/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/JCloudBlobStoreProviderTests.java,38,,"        map.put(""managedLedgerOffloadRegion"", ""us-east-1"");"
220380,./TargetProjects/pulsar/tiered-storage/jcloud/src/test/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/JCloudBlobStoreProviderTests.java,39,,"        map.put(""managedLedgerOffloadBucket"", ""test bucket"");"
220381,./TargetProjects/pulsar/tiered-storage/jcloud/src/test/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/JCloudBlobStoreProviderTests.java,39,,"        map.put(""managedLedgerOffloadBucket"", ""test bucket"");"
220382,./TargetProjects/pulsar/tiered-storage/jcloud/src/test/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/JCloudBlobStoreProviderTests.java,40,,"        map.put(""managedLedgerOffloadMaxBlockSizeInBytes"", ""99999999"");"
220383,./TargetProjects/pulsar/tiered-storage/jcloud/src/test/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/TieredStorageConfigurationTests.java,55,,"        assertEquals(keys.get(1), ""managedLedgerOffloadBucket"");"
220384,./TargetProjects/pulsar/tiered-storage/jcloud/src/test/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/TieredStorageConfigurationTests.java,59,,"        assertEquals(keys.get(1), ""managedLedgerOffloadRegion"");"
220385,./TargetProjects/pulsar/tiered-storage/jcloud/src/test/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/TieredStorageConfigurationTests.java,67,,"        assertEquals(keys.get(1), ""managedLedgerOffloadMaxBlockSizeInBytes"");"
220386,./TargetProjects/pulsar/tiered-storage/jcloud/src/test/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/TieredStorageConfigurationTests.java,71,,"        assertEquals(keys.get(1), ""managedLedgerOffloadReadBufferSizeInBytes"");"
220387,./TargetProjects/pulsar/tiered-storage/jcloud/src/test/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/TieredStorageConfigurationTests.java,81,,"        map.put(""managedLedgerOffloadRegion"", ""us-east-1"");"
220388,./TargetProjects/pulsar/tiered-storage/jcloud/src/test/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/TieredStorageConfigurationTests.java,82,,"        map.put(""managedLedgerOffloadBucket"", ""test bucket"");"
220389,./TargetProjects/pulsar/tiered-storage/jcloud/src/test/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/TieredStorageConfigurationTests.java,84,,"        map.put(""managedLedgerOffloadReadBufferSizeInBytes"", ""500"");"
220390,./TargetProjects/pulsar/tiered-storage/jcloud/src/test/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/TieredStorageConfigurationTests.java,85,,"        map.put(""managedLedgerOffloadServiceEndpoint"", ""http://some-url:9093"");"
220391,./TargetProjects/pulsar/tiered-storage/jcloud/src/test/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/TieredStorageConfigurationTests.java,106,,"        map.put(BC_S3_REGION, ""test region"");"
220392,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/controller/BrokerTokensController.java,53,,"            @ApiResponse(code = 500, message = ""Internal server error"")"
220393,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/controller/BrokerTokensController.java,82,,"            result.put(""error"", ""Role is exist"");"
220394,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/controller/EnvironmentsController.java,109,,"            @ApiResponse(code = 500, message = ""Internal server error"")"
220395,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/controller/EnvironmentsController.java,121,,"        String token = request.getHeader(""token"");"
220396,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/controller/EnvironmentsController.java,171,,"            result.put(""error"", ""User does not have permission to operate"");"
220397,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/controller/LoginController.java,92,,"        String userAccount = body.get(""username"");"
220398,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/controller/LoginController.java,100,,"                result.put(""error"", ""The user is not exist"");"
220399,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/controller/RoleBindingController.java,71,,"            @ApiResponse(code = 404, message = ""Not found""),"
220400,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/controller/RoleBindingController.java,72,,"            @ApiResponse(code = 500, message = ""Internal server error"")"
220401,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/controller/RoleBindingController.java,87,,"        String token = request.getHeader(""token"");"
220402,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/controller/RoleBindingController.java,96,,"        if (validateResult.get(""error"") != null) {"
220403,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/controller/RolesController.java,76,,"            @ApiResponse(code = 404, message = ""Not found""),"
220404,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/controller/RolesController.java,77,,"            @ApiResponse(code = 500, message = ""Internal server error"")"
220405,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/controller/RolesController.java,89,,"        String token = request.getHeader(""token"");"
220406,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/controller/RolesController.java,91,,"        String tenant = request.getHeader(""tenant"");"
220407,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/controller/RolesController.java,95,,"            result.put(""data"", roleInfoEntities);"
220408,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/controller/RolesController.java,99,,"        if (validateResult.get(""error"") != null) {"
220409,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/controller/TopicsController.java,74,,"            @ApiParam(value = ""page_num"", defaultValue = ""1"", example = ""1"")"
220410,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/controller/TopicsController.java,78,,"            @ApiParam(value = ""page_size"", defaultValue = ""10"", example = ""10"")"
220411,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/controller/UsersController.java,103,,"            @ApiResponse(code = 404, message = ""Not found""),"
220412,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/controller/UsersController.java,104,,"            @ApiResponse(code = 500, message = ""Internal server error"")"
220413,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/controller/UsersController.java,134,,"        if (validateResult.get(""error"") != null) {"
220414,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/controller/UsersController.java,152,,"        result.put(""message"", ""Create user success"");"
220415,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/interceptor/AdminHandlerInterceptor.java,74,,"            map.put(""message"", ""Please login."");"
220416,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/mapper/ConsumerStatsMapper.java,34,,"    @Select(""SELECT consumer_stats_id as consumerStatsId,consumer as consumer,topic_stats_id as topicStatsId,"" +"
220417,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/mapper/ConsumerStatsMapper.java,35,,"            ""replication_stats_id as replicationStatsId,subscription_stats_id as subscriptionStatsId,address as address,"" +"
220418,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/mapper/ConsumerStatsMapper.java,36,,"            ""available_permits as availablePermits,connected_since as connectedSince,msg_rate_out as msgRateOut,"" +"
220419,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/mapper/ConsumerStatsMapper.java,37,,"            ""msg_throughput_out as msgThroughputOut,msg_rate_redeliver as msgRateRedeliver,"" +"
220420,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/mapper/ConsumerStatsMapper.java,38,,"            ""client_version as clientVersion,time_stamp ,metadata as metadata FROM consumers_stats "" +"
220421,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/mapper/ConsumerStatsMapper.java,41,,"                                                 @Param(""timestamp"") long timestamp);"
220422,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/mapper/NamespacesMapper.java,42,,"    @Select(""SELECT tenant,namespace,namespace_id as namespaceId "" +"
220423,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/mapper/RoleBindingMapper.java,37,,"    @Select(""SELECT name, role_binding_id as roleBindingId, description, user_id as userId, role_id as roleId "" +"
220424,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/mapper/RolesMapper.java,39,,"            ""resource_name AS resourceName, resource_verbs AS resourceVerbs, resource_id as resourceId,"" +"
220425,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/mapper/RolesMapper.java,52,,"    @Select(""SELECT role_name AS roleName, role_id AS roleId, description, resource_type AS resourceType,"" +"
220426,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/mapper/RolesMapper.java,54,,"            ""role_source AS roleSource, flag FROM roles"")"
220427,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/mapper/TenantsMapper.java,38,,"    @Select(""SELECT tenant, tenant_id as tenantId, admin_roles as adminRoles,allowed_clusters as allowedClusters,"" +"
220428,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/mapper/TenantsMapper.java,39,,"            ""environment_name as environmentName "" +"
220429,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/mapper/TopicsStatsMapper.java,34,,"    @Select(""SELECT topic_stats_id as topicStatsId,environment as environment,cluster as cluster,broker as broker,"" +"
220430,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/mapper/TopicsStatsMapper.java,35,,"            ""tenant as tenant,namespace as namespace,bundle as bundle,persistent as persistent,"" +"
220431,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/mapper/TopicsStatsMapper.java,36,,"            ""topic as topic,producer_count as producerCount,subscription_count as subscriptionCount,"" +"
220432,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/mapper/TopicsStatsMapper.java,37,,"            ""msg_rate_in as msgRateIn,msg_throughput_in as msgThroughputIn,msg_rate_out as msgRateOut,"" +"
220433,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/mapper/TopicsStatsMapper.java,38,,"            ""msg_throughput_out as msgThroughputOut,average_msg_size as averageMsgSize,storage_size as storageSize,"" +"
220434,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/mapper/TopicsStatsMapper.java,39,,"            ""time_stamp  FROM topics_stats "" +"
220435,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/mapper/TopicsStatsMapper.java,51,,"            @Param(""environment"") String environment,"
220436,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/mapper/TopicsStatsMapper.java,54,,"            @Param(""timestamp"") long timestamp);"
220437,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/mapper/TopicsStatsMapper.java,70,,"    @Select({""<script>"","
220438,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/mapper/TopicsStatsMapper.java,83,,"            ""</script>""})"
220439,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/mapper/UsersMapper.java,38,,"    @Select(""SELECT access_token AS accessToken, user_id AS userId, name, description, email,"" +"
220440,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/mapper/UsersMapper.java,40,,"            ""FROM users "" +"
220441,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/service/impl/BrokerStatsServiceImpl.java,131,,"                        if (!url.contains(""http://"")) {"
220442,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/service/impl/RoleBindingServiceImpl.java,52,,"            result.put(""error"", ""User no exist."");"
220443,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/service/impl/RolesServiceImpl.java,99,,"            validateResult.put(""error"", ""Role name cannot be empty"");"
220444,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/service/impl/TopicsServiceImpl.java,137,,"            String topicName = topic.get(""topic"");"
220445,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/service/impl/TopicsServiceImpl.java,138,,"            int partitions = Integer.parseInt(topic.get(""partitions""));"
220446,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/service/impl/TopicsServiceImpl.java,204,,"            topicEntity.put(""persistent"", persistent);"
220447,./TargetProjects/pulsar-manager/src/main/java/org/apache/pulsar/manager/service/impl/UsersServiceImpl.java,34,,"            validateResult.put(""error"", ""User name cannot be empty"");"
220448,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/dao/EnvironmentsRepositoryImplTest.java,47,,"        environmentEntity.setName(""test-environment"");"
220449,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/dao/NamespacesRepositoryImplTest.java,54,,"        namespacesEntity.setTenant(""test-namespace-public"");"
220450,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/dao/NamespacesRepositoryImplTest.java,55,,"        namespacesEntity.setNamespace(""test-namespace-default"");"
220451,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/dao/RolesRepositoryImplTest.java,49,,"        roleInfoEntity.setResourceType(""tenants"");"
220452,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/dao/TenantsRepositoryImplTest.java,40,,"@ActiveProfiles(""test"")"
220453,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/dao/TenantsRepositoryImplTest.java,52,,"            tenantEntity.setAllowedClusters(""test-cluster"");"
220454,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/dao/TenantsRepositoryImplTest.java,53,,"            tenantEntity.setEnvironmentName(""test-environment"");"
220455,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/dao/TenantsRepositoryImplTest.java,104,,"        tenantEntity.setAdminRoles(""test-role"");"
220456,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/dao/UsersRepositoryImplTest.java,52,,"        userInfoEntity.setPhoneNumber(""1356789023456"");"
220457,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/service/BrokerStatsServiceImplTest.java,163,,"        Assert.assertEquals(""localhost:8080"", topicStatsEntity.getBroker());"
220458,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/service/ClustersServiceImplTest.java,64,,"        Mockito.when(pulsarAdminService.clusters(""http://localhost:8080"")).thenReturn(clusters);"
220459,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/service/ClustersServiceImplTest.java,65,,"        Mockito.when(pulsarAdminService.clusters(""http://localhost:8080"").getClusters()).thenReturn(Arrays.asList(""standalone""));"
220460,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/service/EnvironmentCacheServiceImplTest.java,135,,"            fail(""Should fail to get service url if environments is empty"");"
220461,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/service/NamespacesServiceImplTest.java,66,,"        Mockito.when(namespaces.getNamespaces(""public"")).thenReturn(Arrays.asList(""public/default""));"
220462,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/service/PulsarEventImplTest.java,85,,"        superUserInfoEntity.setAccessToken(""super-access-token"");"
220463,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/service/PulsarEventImplTest.java,88,,"        superTenantEntity.setTenant(""superTenant"");"
220464,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/service/PulsarEventImplTest.java,111,,"        adminUserInfoEntity.setAccessToken(""admin-access-token"");"
220465,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/service/PulsarEventImplTest.java,114,,"        adminTenantEntity.setTenant(""adminTenant"");"
220466,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/service/RoleBindingServiceImplTest.java,75,,"        userInfoEntity.setName(""test-user"");"
220467,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/service/RoleBindingServiceImplTest.java,76,,"        userInfoEntity.setAccessToken(""test-access-token"");"
220468,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/service/RoleBindingServiceImplTest.java,83,,"        Assert.assertEquals(""User no exist."", validateErrorUser.get(""error""));"
220469,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/service/RoleBindingServiceImplTest.java,86,,"        tenantEntity.setTenant(""test-tenant"");"
220470,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/service/RoleBindingServiceImplTest.java,87,,"        tenantEntity.setAdminRoles(""test-admin-roles"");"
220471,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/service/RoleBindingServiceImplTest.java,88,,"        tenantEntity.setAllowedClusters(""test-allowed-clusters"");"
220472,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/service/RoleBindingServiceImplTest.java,91,,"        roleInfoEntity.setRoleName(""test-role"");"
220473,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/service/RoleBindingServiceImplTest.java,101,,"        roleBindingEntity.setName(""test-role-binding"");"
220474,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/service/RoleBindingServiceImplTest.java,102,,"        roleBindingEntity.setDescription(""test-role-binding-description"");"
220475,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/service/RoleBindingServiceImplTest.java,161,,"        testRoleInfoEntity.setRoleName(""test-no-binding-role"");"
220476,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/service/RoleBindingServiceImplTest.java,171,,"        testNoBindingTenantEntity.setTenant(""test-no-binding-tenant"");"
220477,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/service/RoleBindingServiceImplTest.java,214,,"        tenantEntity.setTenant(""test-tenant-binding"");"
220478,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/service/RolesServiceImplTest.java,94,,"        Assert.assertEquals(""Role name cannot be empty"", roleNameIsEmpty.get(""error""));"
220479,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/service/RolesServiceImplTest.java,123,,"        tenantEntity.setTenant(""test-tenant"");"
220480,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/service/RolesServiceImplTest.java,206,,"        String account = ""pulsar"";"
220481,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/service/TenantsServiceImplTest.java,66,,"        Mockito.when(pulsarAdminService.tenants(""http://localhost:8080"")).thenReturn(tenants);"
220482,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/service/TenantsServiceImplTest.java,67,,"        Mockito.when(tenants.getTenants()).thenReturn(Arrays.asList(""public""));"
220483,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/service/TopicsServiceImplTest.java,51,,"@ActiveProfiles(""test"")"
220484,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/service/TopicsServiceImplTest.java,68,,"        Mockito.when(pulsarAdminService.topics(""http://localhost:8080"")).thenReturn(topics);"
220485,./TargetProjects/pulsar-manager/src/test/java/org/apache/pulsar/manager/service/UsersServiceImplTest.java,52,,"        Assert.assertEquals(""User name cannot be empty"", validateNameEmpty.get(""error""));"
220486,./TargetProjects/qpid/qpid/tools/src/java/qpid-broker-plugins-management-qmf2/src/main/java/org/apache/qpid/server/qmf2/agentdata/Broker.java,137,,"            if (name.startsWith(""vhost:""))"
220487,./TargetProjects/qpid/qpid/tools/src/java/qpid-broker-plugins-management-qmf2/src/main/java/org/apache/qpid/server/qmf2/agentdata/Connection.java,129,,"        setValue(""authIdentity"", (connection.getPrincipal() == null ? ""unknown"" : connection.getPrincipal()));"
220488,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2-rest/src/main/java/org/apache/qpid/restapi/FileServer.java,63,,"        _mimeTypes.put(""htm"", ""text/html"");"
220489,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2-rest/src/main/java/org/apache/qpid/restapi/FileServer.java,65,,"        _mimeTypes.put(""txt"", ""text/plain"");"
220490,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2-rest/src/main/java/org/apache/qpid/restapi/FileServer.java,83,,"        _mimeTypes.put(""zip"", ""application/octet-stream"");"
220491,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2-rest/src/main/java/org/apache/qpid/restapi/QpidServer.java,197,,"            tx.sendResponse(HTTP_OK, ""application/json"", JSON.fromObject(console.getObjects(params[0])));"
220492,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2-rest/src/main/java/org/apache/qpid/restapi/QpidServer.java,207,,"            tx.sendResponse(HTTP_NOT_FOUND, ""text/plain"", ""404 Too many parameters for objects GET request."");"
220493,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2-rest/src/main/java/org/apache/qpid/restapi/QpidServer.java,227,,"        if (path.startsWith(""/qpid/connection/""))"
220494,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2-rest/src/main/java/org/apache/qpid/restapi/QpidServer.java,273,,"                    tx.sendResponse(HTTP_NOT_FOUND, ""text/plain"", ""404 Not Found."");"
220495,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2-test/src/main/java/org/apache/qpid/qmf2/test/AgentExternalTest.java,221,,"                        event.setValue(""text"", inArgs.getStringValue(""text""));"
220496,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2-test/src/main/java/org/apache/qpid/qmf2/test/AgentExternalTest.java,231,,"                            error.setValue(""error_text"", inArgs.getStringValue(""stringVal""));"
220497,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2-test/src/main/java/org/apache/qpid/qmf2/test/AgentExternalTest.java,237,,"                            error.setValue(""details"", inArgs.getValue(""details""));"
220498,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2-test/src/main/java/org/apache/qpid/qmf2/test/AgentExternalTest.java,244,,"                        String childName = inArgs.getStringValue(""name"");"
220499,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2-test/src/main/java/org/apache/qpid/qmf2/test/AgentExternalTest.java,316,,"System.out.println(""Requested Subscription has already expired or been cancelled"");"
220500,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2-test/src/main/java/org/apache/qpid/qmf2/test/AgentExternalTest.java,393,,"        stopMethod.addArgument(new SchemaProperty(""message"", QmfType.TYPE_STRING, ""{dir:IN}""));"
220501,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2-test/src/main/java/org/apache/qpid/qmf2/test/AgentSubscriptionTestConsole.java,156,,"            System.out.println(""correlationId = "" + correlationId);"
220502,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2-test/src/main/java/org/apache/qpid/qmf2/test/AgentTest.java,157,,"                        event.setValue(""text"", inArgs.getStringValue(""text""));"
220503,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2-test/src/main/java/org/apache/qpid/qmf2/test/AgentTest.java,173,,"                            error.setValue(""details"", inArgs.getValue(""details""));"
220504,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2-test/src/main/java/org/apache/qpid/qmf2/test/AgentTest.java,180,,"                        String childName = inArgs.getStringValue(""name"");"
220505,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2-test/src/main/java/org/apache/qpid/qmf2/test/AgentTest.java,222,,"        stopMethod.addArgument(new SchemaProperty(""message"", QmfType.TYPE_STRING, ""{dir:IN}""));"
220506,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2-test/src/main/java/org/apache/qpid/qmf2/test/AgentTestConsole.java,120,,"                System.out.println(""MethodCount = "" + control.getLongValue(""methodCount""));"
220507,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2-test/src/main/java/org/apache/qpid/qmf2/test/AgentTestConsole.java,120,,"                System.out.println(""MethodCount = "" + control.getLongValue(""methodCount""));"
220508,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2-test/src/main/java/org/apache/qpid/qmf2/test/BrokerSubscriptionTestConsole.java,180,,"            System.out.println(""correlationId = "" + correlationId);"
220509,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2-test/src/main/java/org/apache/qpid/qmf2/test/Test3.java,73,,"            eventMethod.addArgument(new SchemaProperty(""text"", QmfType.TYPE_STRING, ""{dir:IN}""));"
220510,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2-test/src/main/java/org/apache/qpid/qmf2/test/Test4.java,70,,"            mammal.addProperty(new SchemaProperty(""name"", QmfType.TYPE_STRING));"
220511,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2-test/src/main/java/org/apache/qpid/qmf2/test/Test4.java,71,,"            mammal.addProperty(new SchemaProperty(""legs"", QmfType.TYPE_INT));"
220512,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2-tools/src/main/java/org/apache/qpid/qmf2/tools/ConnectionLogger.java,158,,"        List<QmfConsoleData> queues = _console.getObjects(""org.apache.qpid.broker"", ""queue"");"
220513,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2-tools/src/main/java/org/apache/qpid/qmf2/tools/QpidConfig.java,431,,"        List<QmfConsoleData> exchanges = _console.getObjects(""org.apache.qpid.broker"", ""exchange"");"
220514,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2-tools/src/main/java/org/apache/qpid/qmf2/tools/QpidConfig.java,431,,"        List<QmfConsoleData> exchanges = _console.getObjects(""org.apache.qpid.broker"", ""exchange"");"
220515,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2-tools/src/main/java/org/apache/qpid/qmf2/tools/QpidConfig.java,432,,"        List<QmfConsoleData> queues = _console.getObjects(""org.apache.qpid.broker"", ""queue"");"
220516,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2-tools/src/main/java/org/apache/qpid/qmf2/tools/QpidConfig.java,439,,"            String exchangeType = exchange.getStringValue(""type"");"
220517,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2-tools/src/main/java/org/apache/qpid/qmf2/tools/QpidConfig.java,462,,"            boolean isDurable = queue.getBooleanValue(""durable"");"
220518,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2-tools/src/main/java/org/apache/qpid/qmf2/tools/QpidConfig.java,490,,"            String name = exchange.getStringValue(""name"");"
220519,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2-tools/src/main/java/org/apache/qpid/qmf2/tools/QpidConfig.java,516,,"                Map args = (Map)exchange.getValue(""arguments"");"
220520,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2-tools/src/main/java/org/apache/qpid/qmf2/tools/QpidConfig.java,534,,"                if (exchange.hasValue(""altExchange""))"
220521,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2-tools/src/main/java/org/apache/qpid/qmf2/tools/QpidConfig.java,559,,"        List<QmfConsoleData> bindings = _console.getObjects(""org.apache.qpid.broker"", ""binding"");"
220522,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2/src/main/java/org/apache/qpid/qmf2/agent/Agent.java,192,,"                response.setStringProperty(""x-amqp-0-10.app-id"", ""qmf2"");"
220523,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2/src/main/java/org/apache/qpid/qmf2/agent/Agent.java,192,,"                response.setStringProperty(""x-amqp-0-10.app-id"", ""qmf2"");"
220524,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2/src/main/java/org/apache/qpid/qmf2/agent/Agent.java,193,,"                response.setStringProperty(""method"", ""indication"");"
220525,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2/src/main/java/org/apache/qpid/qmf2/agent/Agent.java,193,,"                response.setStringProperty(""method"", ""indication"");"
220526,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2/src/main/java/org/apache/qpid/qmf2/agent/Agent.java,194,,"                response.setStringProperty(""qmf.opcode"", ""_agent_heartbeat_indication"");"
220527,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2/src/main/java/org/apache/qpid/qmf2/agent/Agent.java,195,,"                response.setStringProperty(""qmf.agent"", _name);"
220528,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2/src/main/java/org/apache/qpid/qmf2/agent/Agent.java,196,,"                response.setStringProperty(""qpid.subject"", subject);"
220529,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2/src/main/java/org/apache/qpid/qmf2/agent/Agent.java,544,,"            response.setStringProperty(""method"", ""response"");"
220530,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2/src/main/java/org/apache/qpid/qmf2/agent/Agent.java,578,,"            response.setStringProperty(""qmf.content"", ""_data"");"
220531,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2/src/main/java/org/apache/qpid/qmf2/common/QmfQuery.java,118,,"        setValue(""_what"", _target.toString());"
220532,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2/src/main/java/org/apache/qpid/qmf2/common/QmfQuery.java,161,,"            _predicate = (List)predicateMap.get(""_where"");"
220533,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2/src/main/java/org/apache/qpid/qmf2/common/SchemaMethod.java,86,,"        setValue(""_name"", name);"
220534,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2/src/main/java/org/apache/qpid/qmf2/common/SchemaMethod.java,90,,"            setValue(""_desc"", description);"
220535,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2/src/main/java/org/apache/qpid/qmf2/common/SchemaProperty.java,95,,"                setValue(""_index"", Boolean.valueOf(value));"
220536,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2/src/main/java/org/apache/qpid/qmf2/common/SchemaProperty.java,152,,"                    setValue(""_dir"", ""I"");"
220537,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2/src/main/java/org/apache/qpid/qmf2/common/SchemaProperty.java,313,,"            md5.update(getName().getBytes(""UTF-8""));"
220538,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2/src/main/java/org/apache/qpid/qmf2/console/Agent.java,77,,"        _epoch = hasValue(""_epoch"") ? getLongValue(""_epoch"") : getLongValue(""epoch"");"
220539,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2/src/main/java/org/apache/qpid/qmf2/console/Agent.java,78,,"        _heartbeatInterval = hasValue(""_heartbeat_interval"") ? getLongValue(""_heartbeat_interval"") : "
220540,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2/src/main/java/org/apache/qpid/qmf2/console/Agent.java,80,,"        _timestamp = hasValue(""_timestamp"") ? getLongValue(""_timestamp"") : getLongValue(""timestamp"");"
220541,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2/src/main/java/org/apache/qpid/qmf2/console/Console.java,321,,"            request.setStringProperty(""x-amqp-0-10.app-id"", ""qmf2"");"
220542,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2/src/main/java/org/apache/qpid/qmf2/console/Console.java,321,,"            request.setStringProperty(""x-amqp-0-10.app-id"", ""qmf2"");"
220543,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2/src/main/java/org/apache/qpid/qmf2/console/Console.java,322,,"            request.setStringProperty(""method"", ""request"");"
220544,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2/src/main/java/org/apache/qpid/qmf2/console/Console.java,322,,"            request.setStringProperty(""method"", ""request"");"
220545,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2/src/main/java/org/apache/qpid/qmf2/console/Console.java,323,,"            request.setStringProperty(""qmf.opcode"", ""_agent_locate_request"");"
220546,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2/src/main/java/org/apache/qpid/qmf2/console/Console.java,324,,"            request.setStringProperty(""qpid.subject"", ""console.request.agent_locate"");"
220547,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2/src/main/java/org/apache/qpid/qmf2/console/Console.java,1948,,"            if (optMap.hasValue(""lifetime""))"
220548,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2/src/main/java/org/apache/qpid/qmf2/console/Console.java,1959,,"            if (optMap.hasValue(""timeout""))"
220549,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2/src/main/java/org/apache/qpid/qmf2/console/Console.java,1964,,"            if (optMap.hasValue(""replyHandle""))"
220550,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2/src/main/java/org/apache/qpid/qmf2/console/QmfConsoleData.java,68,,"        _updateTimestamp = m.containsKey(""_update_ts"") ? getLong(m.get(""_update_ts"")) : currentTime;"
220551,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2/src/main/java/org/apache/qpid/qmf2/console/QmfConsoleData.java,69,,"        _createTimestamp = m.containsKey(""_create_ts"") ? getLong(m.get(""_create_ts"")) : currentTime;"
220552,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2/src/main/java/org/apache/qpid/qmf2/console/QmfConsoleData.java,70,,"        _deleteTimestamp = m.containsKey(""_delete_ts"") ? getLong(m.get(""_delete_ts"")) : currentTime;"
220553,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2/src/main/java/org/apache/qpid/qmf2/util/ConnectionHelper.java,458,,"        String connectionURL = ""amqp://"" + username + "":"" + password + ""@QpidJMS/"" + vhost + ""?brokerlist="" + "
220554,./TargetProjects/qpid/qpid/tools/src/java/qpid-qmf2/src/main/java/org/apache/qpid/qmf2/util/ConnectionHelper.java,707,,"                connectdelay = ""&connectdelay='"" + options.get(""reconnect_interval"").toString() + ""000'"";"
220555,./TargetProjects/qpid-broker-j/bdbstore/src/main/java/org/apache/qpid/server/store/berkeleydb/BDBEnvironmentContainer.java,42,,"    void checkpoint(@Param(name = ""force"", defaultValue = ""false"") boolean force);"
220556,./TargetProjects/qpid-broker-j/bdbstore/src/main/java/org/apache/qpid/server/store/berkeleydb/replication/ReplicatedEnvironmentFacade.java,2255,,"                        LOGGER.warn(""Node '"" + nodeName + ""' from group "" + _configuration.getGroupName()"
220557,./TargetProjects/qpid-broker-j/bdbstore/src/main/java/org/apache/qpid/server/store/berkeleydb/upgrade/Upgrader.java,166,,"            throw new StoreException(""Unable to upgrade BDB data store from version "" + fromVersion + "" to version"""
220558,./TargetProjects/qpid-broker-j/bdbstore/src/main/java/org/apache/qpid/server/store/berkeleydb/upgrade/Upgrader.java,166,,"            throw new StoreException(""Unable to upgrade BDB data store from version "" + fromVersion + "" to version"""
220559,./TargetProjects/qpid-broker-j/bdbstore/src/main/java/org/apache/qpid/server/virtualhostnode/berkeleydb/BDBHAVirtualHostNodeImpl.java,850,,"    @SuppressWarnings(""unused"")"
220560,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/store/berkeleydb/BDBHAVirtualHostNodeTest.java,117,,"        String helperAddress = ""localhost:"" + node1PortNumber;"
220561,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/store/berkeleydb/BDBHAVirtualHostNodeTest.java,118,,"        String groupName = ""group"";"
220562,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/store/berkeleydb/BDBHAVirtualHostNodeTest.java,119,,"        String nodeName = ""node1"";"
220563,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/store/berkeleydb/BDBHAVirtualHostNodeTest.java,228,,"        Map<String, Object> node2Attributes = _helper.createNodeAttributes(""node2"", groupName, ""localhost:"" + node2PortNumber, helperAddress, nodeName);"
220564,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/store/berkeleydb/BDBHAVirtualHostNodeTest.java,231,,"        Map<String, Object> node3Attributes = _helper.createNodeAttributes(""node3"", groupName, ""localhost:"" + node3PortNumber, helperAddress, nodeName);"
220565,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/store/berkeleydb/BDBHAVirtualHostNodeTest.java,630,,"        File environmentPathFile = new File(_helper.getMessageStorePath() + File.separator + ""intruder"");"
220566,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/store/berkeleydb/BDBPreferenceStoreTest.java,92,,"                new PreferenceRecordImpl(UUID.randomUUID(), Collections.<String, Object>singletonMap(""name"", ""test"")),"
220567,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/store/berkeleydb/CoalescingCommitterTest.java,56,,"        _coalescingCommitter = new CoalescingCommiter(""Test"", _environmentFacade);"
220568,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/store/berkeleydb/StandardEnvironmentFacadeTest.java,145,,"        Database handle1 = ef.openDatabase(""myDatabase"", createIfAbsentDbConfig);"
220569,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/store/berkeleydb/replication/ReplicatedEnvironmentFacadeTest.java,109,,"    private final String TEST_NODE_HOST_PORT = ""localhost:"" + TEST_NODE_PORT;"
220570,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/store/berkeleydb/replication/ReplicatedEnvironmentFacadeTest.java,191,,"        Database handle1 = ef.openDatabase(""myDatabase"", createIfAbsentDbConfig);"
220571,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/store/berkeleydb/replication/ReplicatedEnvironmentFacadeTest.java,262,,"        assertEquals(""Unexpected message store durability"","
220572,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/store/berkeleydb/replication/ReplicatedEnvironmentFacadeTest.java,299,,"        assertEquals(""Unexpected state"", State.MASTER.name(), createMaster().getNodeState());"
220573,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/store/berkeleydb/replication/ReplicatedEnvironmentFacadeTest.java,310,,"        assertTrue(""Master was not created"", masterListener.awaitForStateChange(State.MASTER,"
220574,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/store/berkeleydb/replication/ReplicatedEnvironmentFacadeTest.java,375,,"        String host = ""localhost"";"
220575,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/store/berkeleydb/replication/ReplicatedEnvironmentFacadeTest.java,416,,"        assertTrue(""Master was not started"", stateChangeListener.awaitForStateChange(State.MASTER,"
220576,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/store/berkeleydb/replication/ReplicatedEnvironmentFacadeTest.java,553,,"        assertTrue(""Environment was not created"", stateChangeListener.awaitForStateChange(State.MASTER,"
220577,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/store/berkeleydb/replication/ReplicatedEnvironmentFacadeTest.java,774,,"        assertTrue(""Environment did not become a master"","
220578,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/store/berkeleydb/replication/ReplicatedEnvironmentFacadeTest.java,982,,"        Database db = node1.openDatabase(""mydb"", createConfig);"
220579,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/store/berkeleydb/replication/ReplicatedEnvironmentFacadeTest.java,997,,"        LOGGER.debug(""RESTARTING "" + replicaName);"
220580,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/store/berkeleydb/replication/ReplicatedEnvironmentFacadeTest.java,1217,,"            putRecord(node1, db, 1, ""value"", true);"
220581,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/store/berkeleydb/upgrade/UpgradeFrom4to5Test.java,97,,"        assertBindingRecord(queueBindings, DURABLE_SUBSCRIPTION_QUEUE, ""amq.topic"", TOPIC_NAME, """");"
220582,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/store/berkeleydb/upgrade/UpgradeFrom4to5Test.java,99,,"        assertBindingRecord(queueBindings, QUEUE_NAME, ""amq.direct"", QUEUE_NAME, null);"
220583,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/store/berkeleydb/upgrade/UpgradeFrom5To6Test.java,294,,"        expected.add(createExpectedQueueMap(""myUpgradeQueue"", Boolean.FALSE, null, null));"
220584,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/store/berkeleydb/upgrade/UpgradeFrom5To6Test.java,295,,"        expected.add(createExpectedQueueMap(""clientid:mySelectorDurSubName"", Boolean.TRUE, ""clientid"", null));"
220585,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/store/berkeleydb/upgrade/UpgradeFrom5To6Test.java,296,,"        expected.add(createExpectedQueueMap(""clientid:myDurSubName"", Boolean.TRUE, ""clientid"", null));"
220586,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/store/berkeleydb/upgrade/UpgradeFrom5To6Test.java,301,,"        expected.add(createExpectedQueueMap(""nonexclusive-with-erroneous-owner"", Boolean.FALSE, null,queueWithOwnerArguments));"
220587,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/store/berkeleydb/upgrade/UpgradeFrom5To6Test.java,318,,"        expected.add(createExpectedQueueBindingMapAndID(""myUpgradeQueue"",""myUpgradeQueue"", ""<<default>>"", null, expectedBindingIDs));"
220588,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/store/berkeleydb/upgrade/UpgradeFrom5To6Test.java,319,,"        expected.add(createExpectedQueueBindingMapAndID(""myUpgradeQueue"", ""myUpgradeQueue"", ""amq.direct"", null, expectedBindingIDs));"
220589,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/store/berkeleydb/upgrade/UpgradeFrom7To8Test.java,90,,"        UUID amqDirectUuid = UUIDGenerator.generateExchangeUUID(""amq.direct"", getVirtualHost().getName());"
220590,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/store/berkeleydb/upgrade/UpgradeFrom7To8Test.java,91,,"        UUID queue1Uuid = UUIDGenerator.generateQueueUUID(""queue1"", getVirtualHost().getName());"
220591,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/virtualhostnode/berkeleydb/BDBHAVirtualHostNodeOperationalLoggingTest.java,100,,"        String helperAddress = ""localhost:"" + node1PortNumber;"
220592,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/virtualhostnode/berkeleydb/BDBHAVirtualHostNodeOperationalLoggingTest.java,101,,"        String groupName = ""group"";"
220593,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/virtualhostnode/berkeleydb/BDBHAVirtualHostNodeOperationalLoggingTest.java,102,,"        String nodeName = ""node1"";"
220594,./TargetProjects/qpid-broker-j/bdbstore/src/test/java/org/apache/qpid/server/virtualhostnode/berkeleydb/BDBHAVirtualHostNodeOperationalLoggingTest.java,256,,"        Map<String, Object> node2Attributes = _helper.createNodeAttributes(""node2"", groupName, ""localhost:"" + node2PortNumber, helperAddress, nodeName);"
220595,./TargetProjects/qpid-broker-j/bdbstore/systests/src/test/java/org/apache/qpid/server/store/berkeleydb/BDBUpgradeTest.java,115,,"            messageA.setStringProperty(""testprop"", ""false"");"
220596,./TargetProjects/qpid-broker-j/bdbstore/systests/src/test/java/org/apache/qpid/server/store/berkeleydb/BDBUpgradeTest.java,425,,"        assertThat(""Failed to receive an expected message"", m, is(notNullValue()));"
220597,./TargetProjects/qpid-broker-j/bdbstore/systests/src/test/java/org/apache/qpid/server/store/berkeleydb/BDBUpgradeTest.java,430,,"        assertThat(""ID property did not match"", m.getIntProperty(""ID""), is(equalTo(1)));"
220598,./TargetProjects/qpid-broker-j/bdbstore/systests/src/test/java/org/apache/qpid/server/store/berkeleydb/replication/MultiNodeTest.java,104,,"            LOGGER.info(""Active connection port {}"", masterPort);"
220599,./TargetProjects/qpid-broker-j/bdbstore/systests/src/test/java/org/apache/qpid/server/store/berkeleydb/replication/MultiNodeTest.java,109,,"            LOGGER.info(""Listener has finished"");"
220600,./TargetProjects/qpid-broker-j/bdbstore/systests/src/test/java/org/apache/qpid/server/store/berkeleydb/replication/MultiNodeTest.java,236,,"            getBrokerAdmin().awaitNodeRole(activeBrokerPort, ""MASTER"", ""REPLICA"");"
220601,./TargetProjects/qpid-broker-j/bdbstore/systests/src/test/java/org/apache/qpid/server/store/berkeleydb/replication/MultiNodeTest.java,236,,"            getBrokerAdmin().awaitNodeRole(activeBrokerPort, ""MASTER"", ""REPLICA"");"
220602,./TargetProjects/qpid-broker-j/bdbstore/systests/src/test/java/org/apache/qpid/server/store/berkeleydb/replication/MultiNodeTest.java,262,,"            LOGGER.info(""Failover has finished"");"
220603,./TargetProjects/qpid-broker-j/bdbstore/systests/src/test/java/org/apache/qpid/server/store/berkeleydb/replication/MultiNodeTest.java,330,,"        assertEquals(""Inactive broker has unexpected role"", ""REPLICA"", attributes.get(BDBHAVirtualHostNode.ROLE));"
220604,./TargetProjects/qpid-broker-j/broker-codegen/src/main/java/org/apache/qpid/server/model/ConfiguredObjectFactoryGenerator.java,162,,"            pw.println(""    {"");"
220605,./TargetProjects/qpid-broker-j/broker-codegen/src/main/java/org/apache/qpid/server/model/ConfiguredObjectFactoryGenerator.java,178,,"            pw.println(""    }"");"
220606,./TargetProjects/qpid-broker-j/broker-codegen/src/main/java/org/apache/qpid/server/model/ConfiguredObjectFactoryGenerator.java,417,,"        pw.println(""                @Override"");"
220607,./TargetProjects/qpid-broker-j/broker-codegen/src/main/java/org/apache/qpid/server/model/ConfiguredObjectFactoryGenerator.java,421,,"        pw.println(""                {"");"
220608,./TargetProjects/qpid-broker-j/broker-codegen/src/main/java/org/apache/qpid/server/model/ConfiguredObjectFactoryGenerator.java,455,,"        pw.println(""                }"");"
220609,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/exchange/AbstractExchange.java,102,,"            new FixedKeyMapCreator(""bindingKey"", ""destination"", ""arguments"");"
220610,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/filter/ArithmeticExpression.java,57,,"                    throw new SelectorParsingException(""Cannot call plus operation on: "" + lvalue + "" and: "" + rvalue);"
220611,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/filter/selector/SelectorParser.java,85,,"    throw new Error(""Missing return statement in function"");"
220612,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java,1347,,"                        throw new IllegalConfigurationException(""Attribute '"" + autoAttr.getName()"
220613,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java,1348,,"                                                                + ""' instance of ""+ getClass().getName()"
220614,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java,1349,,"                                                                + "" named '"" + getName() + ""'"""
220615,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/model/AbstractConfiguredObject.java,1350,,"                                                                + "" cannot have value '"" + desiredValueOrDefault + ""'"""
220616,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java,135,,"                throw new IllegalArgumentException(""Cannot convert type "" + value.getClass() + "" to a UUID"");"
220617,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java,260,,"                    throw new IllegalArgumentException(""Cannot convert string '"" + interpolated + ""' to a long integer"",e);"
220618,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/model/AttributeValueConverter.java,625,,"                                       + "" to a "" + valueType.getSimpleName());"
220619,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/model/Broker.java,86,,"    @SuppressWarnings(""unused"")"
220620,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/model/BrokerAttributeInjector.java,364,,"                    _hotSpotDiagnosticMXBeanClass.getDeclaredMethod(""dumpHeap"", String.class, boolean.class);"
220621,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredObjectCustomSerialization.java,100,,"    @SuppressWarnings(""unused"")"
220622,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/model/ConfiguredObjectTypeRegistry.java,883,,"                                                   + "" does not meet these criteria."");"
220623,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/model/Connection.java,118,,"    @SuppressWarnings(""unused"")"
220624,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/model/Exchange.java,89,,"    @SuppressWarnings(""unused"")"
220625,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/model/Exchange.java,119,,"                 @Param(name = ""bindingKey"", mandatory = true) String bindingKey,"
220626,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/model/Exchange.java,120,,"                 @Param(name = ""arguments"", defaultValue = ""{}"") Map<String, Object> arguments,"
220627,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/model/Exchange.java,136,,"                       @Param(name = ""queue"") Queue<?> queue,"
220628,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/model/Queue.java,94,,"    @SuppressWarnings(""unused"")"
220629,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/model/Queue.java,133,,"                          + ""none is explicitly set"")"
220630,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/model/Queue.java,134,,"    String DEFAULT_ENSURE_NON_DESTRUCTIVE_CONSUMERS = ""false"";"
220631,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/model/Queue.java,526,,"                            @Param(name = ""limit"", description = ""Maximum number of messages to move"", defaultValue = ""-1"") int limit);"
220632,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/model/Queue.java,560,,"            paramRequiringSecure = ""includeHeaders"","
220633,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/model/Session.java,69,,"    @SuppressWarnings(""unused"")"
220634,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/model/TrustStore.java,65,,"    @ManagedAttribute(defaultValue = ""false"", description = ""If true the Trust Store will expose its certificates as a special artificial message source."")"
220635,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/model/port/AmqpPort.java,71,,"    @SuppressWarnings(""unused"")"
220636,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/model/port/HttpPort.java,42,,"    @SuppressWarnings(""unused"")"
220637,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/model/preferences/UserPreferencesImpl.java,495,,"            throw new IllegalStateException(""Current thread does not have a user"");"
220638,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/queue/AbstractQueue.java,172,,"    @ManagedAttributeField( afterSet = ""updateAlertChecks"" )"
220639,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/queue/AbstractQueue.java,673,,"    @SuppressWarnings(""unused"")"
220640,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/queue/LastValueQueueList.java,93,,"                LOGGER.debug(""Adding entry "" + addedEntry + "" for message "" + message.getMessageNumber() + "" with conflation key "" + keyValue);"
220641,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java,163,,"                    ""user '"" + user.getName() + ""' salted password"");"
220642,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/oauth2/OAuth2AuthenticationProviderImpl.java,176,,"        if (!""https"".equals(provider.getAuthorizationEndpointURI().getScheme()))"
220643,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecoverer.java,81,,"            super(""modelVersion"", ""1.0"", ""1.1"");"
220644,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecoverer.java,87,,"            if (record.getType().equals(""Broker""))"
220645,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecoverer.java,95,,"                updatedAttributes.put(""type"", ""STANDARD"");"
220646,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecoverer.java,189,,"                if (attributes.containsKey(""configPath""))"
220647,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecoverer.java,191,,"                    throw new IllegalConfigurationException(""Auto-upgrade of virtual host "" + attributes.get(""name"") + "" having XML configuration is not supported. Virtual host configuration file is "" + attributes.get(""configPath""));"
220648,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecoverer.java,229,,"            if(record.getType().equals(""Port"") && isAmqpPort(record.getAttributes()))"
220649,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecoverer.java,373,,"                    ""BrokerLogger"","
220650,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecoverer.java,506,,"            if (updatedAttributes.containsKey(""includedVirtualHostMessageSources"")"
220651,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecoverer.java,507,,"                || updatedAttributes.containsKey(""excludedVirtualHostMessageSources""))"
220652,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecoverer.java,606,,"                    if (attributes.containsKey(""context""))"
220653,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecoverer.java,774,,"                        addAttributeTransformer(""createdTime"", copyAttribute())."
220654,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecoverer.java,775,,"                        addAttributeTransformer(""createdBy"", copyAttribute())."
220655,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecoverer.java,776,,"                        addAttributeTransformer(""storePath"", copyAttribute())."
220656,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/store/VirtualHostStoreUpgraderAndRecoverer.java,103,,"            super(""modelVersion"", ""0.0"", ""0.1"");"
220657,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/store/VirtualHostStoreUpgraderAndRecoverer.java,115,,"            Map<String, Object> arguments = new LinkedHashMap<String, Object>((Map<String,Object>)binding.get(""arguments""));"
220658,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/store/VirtualHostStoreUpgraderAndRecoverer.java,123,,"            UUID exchangeId = entry.getParents().get(""Exchange"");"
220659,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/store/VirtualHostStoreUpgraderAndRecoverer.java,200,,"            if (""VirtualHost"".equals(type))"
220660,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/store/VirtualHostStoreUpgraderAndRecoverer.java,268,,"            else if (""Queue"".equals(record.getType()))"
220661,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/store/VirtualHostStoreUpgraderAndRecoverer.java,309,,"            ATTRIBUTE_MAPPINGS.put(""x-qpid-dlq-enabled"", ""x-qpid-dlq-enabled"");"
220662,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/store/VirtualHostStoreUpgraderAndRecoverer.java,335,,"                    modelArguments.put(""messageGroupSharedGroups"","
220663,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/store/VirtualHostStoreUpgraderAndRecoverer.java,409,,"        private static final String ALTERNATE_EXCHANGE = ""alternateExchange"";"
220664,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/store/VirtualHostStoreUpgraderAndRecoverer.java,431,,"                virtualHostAttributes.put(""name"", _virtualHostNode.getName());"
220665,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/store/VirtualHostStoreUpgraderAndRecoverer.java,636,,"                Object context = attributes.get(""context"");"
220666,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/store/VirtualHostStoreUpgraderAndRecoverer.java,688,,"                if(record.getAttributes().containsKey(""bindings""))"
220667,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/store/VirtualHostStoreUpgraderAndRecoverer.java,836,,"                            ""Cannot evaluate '%s': %s"","
220668,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/typedmessage/TypedBytesContentReader.java,92,,"                    throw new TypedBytesFormatException(""Unable to convert "" + wireType + "" to a boolean"");"
220669,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/util/CommandLineParser.java,136,,"                (nextOptionSpec.length > 3) ? (""true"".equals(nextOptionSpec[3]) ? true : false) : false,"
220670,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/util/MapValueConverter.java,73,,"            throw new IllegalArgumentException(""Value for attribute "" + name + "" is not of required type "" + clazz.getSimpleName());"
220671,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/virtualhost/AbstractVirtualHost.java,672,,"            _houseKeepingTaskExecutor = new HousekeepingExecutor(""virtualhost-"" + getName() + ""-pool"","
220672,./TargetProjects/qpid-broker-j/broker-core/src/main/java/org/apache/qpid/server/virtualhost/QueueManagingVirtualHost.java,86,,"    @SuppressWarnings(""unused"")"
220673,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/bytebuffer/QpidByteBufferTest.java,166,,"            fail(""Exception not thrown"");"
220674,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/bytebuffer/QpidByteBufferTest.java,201,,"        assertEquals(""Unexpected position"", (long) originalPosition, (long) _parent.position());"
220675,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/bytebuffer/QpidByteBufferTest.java,216,,"        assertEquals(""Unexpected limit"", (long) expectedLimit, (long) _parent.limit());"
220676,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/bytebuffer/QpidByteBufferTest.java,359,,"            assertEquals(""Unexpected capacity"", (long) _slicedBuffer.capacity(), (long) duplicate.capacity());"
220677,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/configuration/store/ManagementModeStoreHandlerTest.java,243,,"        assertEquals(""Unexpected root id"", _rootId, root.getId());"
220678,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/configuration/store/ManagementModeStoreHandlerTest.java,244,,"        assertEquals(""Unexpected children"", Collections.singleton(_portEntryId), getChildrenIds(records, root));"
220679,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/configuration/updater/TaskExecutorTest.java,182,,"                return ""test"";"
220680,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/connection/ConnectionVersionValidatorTest.java,86,,"        contextValues.put(ConnectionVersionValidator.VIRTUALHOST_REJECTED_CONNECTION_VERSION, Arrays.asList(""${}"", ""foo""));"
220681,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/connection/ConnectionVersionValidatorTest.java,190,,"        when(_connectionMock.getClientVersion()).thenReturn(""foo2"");"
220682,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/connection/ConnectionVersionValidatorTest.java,193,,"        when(_connectionMock.getClientVersion()).thenReturn(""baz"");"
220683,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/consumer/AbstractConsumerTargetTest.java,149,,"        assertTrue(""message credit was not restored"", _consumerTarget.isCreditRestored());"
220684,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/DirectExchangeTest.java,261,,"        String boundKey = ""key"";"
220685,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/DirectExchangeTest.java,262,,"        Queue<?> queue = _vhost.createChild(Queue.class, Collections.singletonMap(Queue.NAME, getTestName() + ""_queue""));"
220686,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/DirectExchangeTest.java,288,,"        ServerMessage<?> matchingMessage = createTestMessage(Collections.singletonMap(""prop"", true));"
220687,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/DirectExchangeTest.java,383,,"        assertEquals(""Message routed to unexpected number of queues"","
220688,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/DirectExchangeTest.java,419,,"                                               ""key1"","
220689,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/DirectExchangeTest.java,420,,"                                               Collections.singletonMap(Binding.BINDING_ARGUMENT_REPLACEMENT_ROUTING_KEY, ""key2""),"
220690,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/FanoutExchangeTest.java,98,,"        Queue<?> queue = _vhost.createChild(Queue.class, Collections.singletonMap(Queue.NAME, getTestName() + ""_queue""));"
220691,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/FanoutExchangeTest.java,125,,"        ServerMessage<?> matchingMessage = createTestMessage(Collections.singletonMap(""prop"", true));"
220692,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/FanoutExchangeTest.java,150,,"        String bindingKey = ""key"";"
220693,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/FanoutExchangeTest.java,183,,"                                               Collections.singletonMap(Binding.BINDING_ARGUMENT_REPLACEMENT_ROUTING_KEY, ""key1""),"
220694,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/FanoutExchangeTest.java,208,,"        exchToViaBindArguments.put(Binding.BINDING_ARGUMENT_REPLACEMENT_ROUTING_KEY, ""key2"");"
220695,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/FanoutExchangeTest.java,239,,"        assertTrue(""Bind operation to queue1 should be successful"", bind1);"
220696,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/FanoutExchangeTest.java,242,,"        assertEquals(""Message routed to unexpected number of queues"","
220697,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/HeadersBindingTest.java,212,,"        bindHeaders.put(""A"", ""Value of A"");"
220698,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/HeadersBindingTest.java,227,,"        matchHeaders.setString(""B"", ""Value of B"");"
220699,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/HeadersBindingTest.java,249,,"        bindHeaders.put(""X-match"", ""all"");"
220700,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/HeadersBindingTest.java,249,,"        bindHeaders.put(""X-match"", ""all"");"
220701,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/HeadersBindingTest.java,297,,"        matchHeaders.setString(""C"", ""Value of C"");"
220702,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/HeadersBindingTest.java,323,,"        bindHeaders.put(""X-match"", ""any"");"
220703,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/HeadersExchangeTest.java,145,,"        Queue<?> q1 = createAndBind(""Q1"", ""F0000"");"
220704,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/HeadersExchangeTest.java,146,,"        Queue<?> q2 = createAndBind(""Q2"", ""F0000=Aardvark"");"
220705,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/HeadersExchangeTest.java,147,,"        Queue<?> q3 = createAndBind(""Q3"", ""F0001"");"
220706,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/HeadersExchangeTest.java,148,,"        Queue<?> q4 = createAndBind(""Q4"", ""F0001=Bear"");"
220707,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/HeadersExchangeTest.java,167,,"        Queue<?> q1 = createAndBind(""Q1"", ""F0000"", ""F0001"", ""X-match=any"");"
220708,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/HeadersExchangeTest.java,238,,"        Queue<?> queue = _virtualHost.createChild(Queue.class, Collections.singletonMap(Queue.NAME, getTestName() + ""_queue""));"
220709,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/HeadersExchangeTest.java,330,,"        bindArguments.put(""foo"", null);"
220710,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/HeadersExchangeTest.java,331,,"        bindArguments.put(""bar"", null);"
220711,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/TopicExchangeTest.java,99,,"        Queue<?> queue = _vhost.createChild(Queue.class, Collections.singletonMap(Queue.NAME, getTestName() + ""_queue""));"
220712,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/TopicExchangeTest.java,114,,"        _exchange.bind(queue.getName(), ""a.b"", null, false);"
220713,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/TopicExchangeTest.java,146,,"        result = _exchange.route(_messageWithNoHeaders, ""a.b.c"", _instanceProperties);"
220714,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/TopicExchangeTest.java,298,,"        String bindingKey = ""mybinding"";"
220715,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/TopicExchangeTest.java,303,,"        ServerMessage<?> matchingMessage = createTestMessage(Collections.singletonMap(""prop"", true));"
220716,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/TopicExchangeTest.java,307,,"                                      Collections.singletonMap(JMS_SELECTOR.toString(), ""prop = True""),"
220717,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/TopicExchangeTest.java,309,,"        assertTrue(""Bind operation should be successful"", bind);"
220718,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/TopicExchangeTest.java,339,,"        assertTrue(""Exchange to exchange bind operation should be successful"", exchToViaBind);"
220719,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/TopicExchangeTest.java,342,,"        assertTrue(""Exchange to queue bind operation should be successful"", viaToQueueBind);"
220720,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/TopicExchangeTest.java,361,,"        String replacementKey = ""key1"";"
220721,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/exchange/topic/TopicExchangeResultTest.java,58,,"                          Collections.singletonMap(BINDING_ARGUMENT_REPLACEMENT_ROUTING_KEY, ""replacement""));"
220722,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/logging/messages/ExchangeMessagesTest.java,39,,"        final Exchange<?> exchange = BrokerTestHelper.createExchange(""test"", false, getEventLogger());"
220723,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/AttributeValueConverterTest.java,99,,"            fail(""Exception not thrown"");"
220724,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/AttributeValueConverterTest.java,324,,"        input.put(""string"", expectedStringValue);"
220725,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/AttributeValueConverterTest.java,362,,"        final Map<String, String> map = Collections.singletonMap(""string"", ""mystring"");"
220726,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/UUIDGeneratorTest.java,191,,"        assertFalse(""Consumer IDs should not be equal"", consumer1.equals(consumer2));"
220727,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/VirtualHostTest.java,163,,"        assertEquals(""Unexpected state"", State.ACTIVE, virtualHost.getState());"
220728,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/VirtualHostTest.java,211,,"        Queue queue = virtualHost.createChild(Queue.class, Collections.singletonMap(Queue.NAME, ""myQueue""));"
220729,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/VirtualHostTest.java,439,,"            fail(""Exception not thrown"");"
220730,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImplTest.java,137,,"        input.put(""super"", Sets.newHashSet(""root""));"
220731,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImplTest.java,137,,"        input.put(""super"", Sets.newHashSet(""root""));"
220732,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImplTest.java,188,,"        final String groupName = ""supers"";"
220733,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImplTest.java,232,,"            @SuppressWarnings(""unchecked"") final GroupProvider<?> provider ="
220734,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/adapter/FileBasedGroupProviderImplTest.java,236,,"            final Map<String, Object> groupAttrs = Collections.singletonMap(Group.NAME, ""group"");"
220735,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/adapter/PortFactoryTest.java,202,,"        String keyStoreName = ""myKeyStore"";"
220736,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/port/AmqpPortImplTest.java,187,,"            fail(""Exception not thrown"");"
220737,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/port/AmqpPortImplTest.java,338,,"            assertTrue(_port.acceptNewConnectionAndIncrementCount(new InetSocketAddress(""example.org"", 0)));"
220738,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/preferences/GenericPrincipalTest.java,51,,"        GenericPrincipal p = new GenericPrincipal(String.format(""%s@%s('%s')"", _username, _originType, _originName));"
220739,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/preferences/UserPreferencesTest.java,102,,"                                                       ""test"","
220740,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/preferences/UserPreferencesTest.java,103,,"                                                       ""X-query"","
220741,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/testmodels/hierarchy/AbstractConfiguredObjectTest.java,89,,"            fail(""Exception not thrown"");"
220742,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/testmodels/hierarchy/AbstractConfiguredObjectTest.java,100,,"        final String carName = ""myCar"";"
220743,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/testmodels/hierarchy/AbstractConfiguredObjectTest.java,111,,"        String engineName = ""myEngine"";"
220744,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/testmodels/hierarchy/AbstractConfiguredObjectTest.java,356,,"        assertEquals(""Context variable has unexpected value"","
220745,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/testmodels/hierarchy/AbstractConfiguredObjectTest.java,402,,"                            ""name myCar"","
220746,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/testmodels/hierarchy/AbstractConfiguredObjectTest.java,507,,"                                                       Collections.singletonMap(ConfiguredObject.NAME, ""car""), null);"
220747,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/testmodels/hierarchy/AbstractConfiguredObjectTest.java,510,,"                                                         Collections.singletonMap(ConfiguredObject.NAME, ""engine""));"
220748,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/testmodels/hierarchy/AbstractConfiguredObjectTest.java,564,,"        instrumentPanelAttributes.put(ConfiguredObject.NAME, ""instrumentPanel"");"
220749,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/testmodels/hierarchy/AbstractConfiguredObjectTest.java,569,,"        sensorAttributes.put(ConfiguredObject.NAME, ""sensor"");"
220750,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/testmodels/hierarchy/InjectedAttributeTest.java,137,,"                new ConfiguredSettableInjectedAttribute<TestCar<?>, Integer>(""meaningOfLife"","
220751,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/testmodels/hierarchy/InjectedAttributeTest.java,153,,"        TestCar<?> testCar = new TestStandardCarImpl(Collections.<String,Object>singletonMap(""name"", ""Arthur""), model);"
220752,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/testmodels/hierarchy/InjectedAttributeTest.java,153,,"        TestCar<?> testCar = new TestStandardCarImpl(Collections.<String,Object>singletonMap(""name"", ""Arthur""), model);"
220753,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/testmodels/hierarchy/InjectedAttributeTest.java,155,,"        assertEquals(""incorrect attribute value"", Integer.valueOf(42), testCar.getAttribute(""meaningOfLife""));"
220754,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/testmodels/hierarchy/InjectedAttributeTest.java,349,,"        Method method = InjectedAttributeTest.class.getDeclaredMethod(""fly"", TestCar.class, Integer.TYPE);"
220755,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/testmodels/hierarchy/InjectedAttributeTest.java,392,,"                                                                  """", params, method, new String[] { ""Hello""},"
220756,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/testmodels/lifecycle/AbstractConfiguredObjectTest.java,54,,"        assertFalse(""Unexpected opened"", object.isOpened());"
220757,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/testmodels/lifecycle/AbstractConfiguredObjectTest.java,55,,"        assertEquals(""Unexpected state"", State.ERRORED, object.getState());"
220758,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/testmodels/lifecycle/AbstractConfiguredObjectTest.java,221,,"        TestConfiguredObject parent = new TestConfiguredObject(""parent"");"
220759,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/testmodels/singleton/AbstractConfiguredObjectTest.java,110,,"        final String objectName = ""myName"";"
220760,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/testmodels/singleton/AbstractConfiguredObjectTest.java,128,,"        attributes.put(TestSingleton.DEFAULTED_VALUE, ""override"");"
220761,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/testmodels/singleton/AbstractConfiguredObjectTest.java,176,,"        attributes.put(ConfiguredObject.CONTEXT, Collections.singletonMap(TestSingleton.TEST_CONTEXT_DEFAULT, ""foo""));"
220762,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/testmodels/singleton/AbstractConfiguredObjectTest.java,188,,"        setTestSystemProperty(TestSingleton.TEST_CONTEXT_DEFAULT, ""bar"");"
220763,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/testmodels/singleton/AbstractConfiguredObjectTest.java,323,,"        System.setProperty(sysPropertyName, ""myValue"");"
220764,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/testmodels/singleton/AbstractConfiguredObjectTest.java,442,,"            fail(""Exception not thrown"");"
220765,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/testmodels/singleton/AbstractConfiguredObjectTest.java,477,,"        illegalCreateAttributes.put(TestSingleton.LIST_VALUE_WITH_PATTERN, Arrays.asList(""1.1.1.1"", ""1""));"
220766,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/testmodels/singleton/AbstractConfiguredObjectTest.java,492,,"        legalCreateAttributes.put(TestSingleton.VALUE_WITH_PATTERN, ""foozzzzzbar"");"
220767,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/testmodels/singleton/PreferencesTest.java,118,,"                ""X-testType"","
220768,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/testmodels/singleton/PreferencesTest.java,172,,"                ""propName"","
220769,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/testmodels/singleton/PreferencesTest.java,383,,"            fail(""duplicate id should be prohibited"");"
220770,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/testmodels/singleton/PreferencesTest.java,506,,"                ""X-type-1"","
220771,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/testmodels/singleton/PreferencesTest.java,515,,"                ""X-type-2"","
220772,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/testmodels/singleton/PreferencesTest.java,530,,"                assertEquals(""Unexpected number of preferences"", (long) 0, (long) result.size());"
220773,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/testmodels/singleton/PreferencesTest.java,595,,"                        ""propName2"","
220774,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/model/testmodels/singleton/PreferencesTest.java,1091,,"                ""propName1"","
220775,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/queue/AbstractQueueTestBase.java,189,,"        _consumer = (QueueConsumer<?,?>) _queue.addConsumer(_consumerTarget, null, messageA.getClass(), ""test"","
220776,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/queue/AbstractQueueTestBase.java,370,,"        assertEquals(""Unexpected total number of messages sent to consumer"","
220777,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/queue/AbstractQueueTestBase.java,373,,"        assertFalse(""Redelivery flag should not be set"", queueEntries.get(0).isRedelivered());"
220778,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/queue/AbstractQueueTestBase.java,389,,"        assertNull(""releasedEntry should be cleared after requeue processed"","
220779,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/queue/AbstractQueueTestBase.java,825,,"        assertEquals(""TTL has not been overridden"", 60000l, getExpirationOnQueue(queue, 50000l, 0l));"
220780,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/queue/AbstractQueueTestBase.java,914,,"        assertEquals(""Wrong number of messages in queue"", (long) 3, (long) queue.getQueueDepthMessages());"
220781,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/queue/AbstractQueueTestBase.java,915,,"        assertEquals(""Wrong size of messages in queue"", (long) 300, queue.getQueueDepthBytes());"
220782,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/queue/AbstractQueueTestBase.java,1034,,"            fail(""Expected exception is not thrown"");"
220783,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/queue/LastValueQueueListTest.java,217,,"        assertEquals(""Unexpected last message"", entry1, queueEntryList.getLeastSignificantOldestEntry());"
220784,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/queue/LastValueQueueTest.java,39,,"        arguments.put(LastValueQueue.LVQ_KEY, ""lvqKey"");"
220785,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/queue/PriorityQueueTest.java,111,,"        assertEquals(""Unexpected operation result"", internalMessage3.getMessageNumber() + 1, result);"
220786,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/queue/SortedQueueEntryListTest.java,88,,"        attributes.put(SortedQueue.SORT_KEY, ""KEY"");"
220787,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/queue/SortedQueueEntryListTest.java,229,,"            assertEquals(""Sorted queue entry value is not as expected"", ""samekey"", getSortedKeyValue(iter));"
220788,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/queue/SortedQueueEntryListTest.java,231,,"            assertEquals(""Message id not as expected"", expected, getMessageId(iter));"
220789,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/queue/SortedQueueEntryListTest.java,436,,"        assertEquals(""Unexpected last entry"", entry1, list.getLeastSignificantOldestEntry());"
220790,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/queue/SortedQueueEntryTest.java,61,,"        attributes.put(SortedQueue.SORT_KEY, ""KEY"");"
220791,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/queue/StandardQueueEntryListTest.java,147,,"        assertTrue(""Failed to delete QueueEntry"", remove(entriesMap, 2));"
220792,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/queue/StandardQueueTest.java,65,,"                (QueueConsumer) getQueue().addConsumer(getConsumerTarget(), null, message.getClass(), ""test"","
220793,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/FileKeyStoreTest.java,83,,"        assertEquals(""Unexpected number of key managers"", 1, keyManager.length);"
220794,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/FileKeyStoreTest.java,84,,"        assertNotNull(""Key manager unexpected null"", keyManager[0]);"
220795,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/FileTrustStoreTest.java,106,,"        assertEquals(""Unexpected number of trust managers"", 1, trustManagers.length);"
220796,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/FileTrustStoreTest.java,107,,"        assertNotNull(""Trust manager unexpected null"", trustManagers[0]);"
220797,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/NonJavaKeyStoreTest.java,113,,"        attributes.put(""privateKeyUrl"", privateKeyFile.toFile().getAbsolutePath());"
220798,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/NonJavaKeyStoreTest.java,114,,"        attributes.put(""certificateUrl"", certificateFile.toFile().getAbsolutePath());"
220799,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/auth/AuthenticatedPrincipalTest.java,125,,"        AuthenticatedPrincipal user1principal1 = new AuthenticatedPrincipal(new UsernamePrincipal(""user1"", null));"
220800,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/auth/UsernamePrincipalTest.java,39,,"        final UsernamePrincipal principal = new UsernamePrincipal(""string"", null);"
220801,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/auth/manager/AuthenticationResultCacherTest.java,85,,"                result = _authenticationResultCacher.getOrLoad(new String[]{""credentials""}, _loader);"
220802,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/auth/manager/AuthenticationResultCacherTest.java,86,,"                assertEquals(""Unexpected AuthenticationResult"", _successfulAuthenticationResult, result);"
220803,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/auth/manager/AuthenticationResultCacherTest.java,87,,"                assertEquals(""Unexpected number of loads before cache hit"", (long) 1, (long) _loadCallCount);"
220804,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/auth/manager/ExternalAuthenticationManagerTest.java,76,,"        assertEquals(Collections.singletonList(""EXTERNAL""), _manager.getMechanisms());"
220805,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/auth/manager/ExternalAuthenticationManagerTest.java,133,,"        UsernamePrincipal expectedPrincipal = new UsernamePrincipal(""person"", _manager);"
220806,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/auth/manager/ExternalAuthenticationManagerTest.java,139,,"        assertEquals(""Expected authentication to be successful"","
220807,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/auth/manager/ExternalAuthenticationManagerTest.java,150,,"        UsernamePrincipal expectedPrincipal = new UsernamePrincipal(""person@example.com"", _manager);"
220808,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/auth/manager/ManagedAuthenticationManagerTestBase.java,117,,"        childAttrs.put(User.PASSWORD, ""password"");"
220809,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/auth/manager/PlainPasswordDatabaseAuthenticationManagerTest.java,80,,"        _passwordFile = TestFileUtils.createTempFile(this, "".user.password"", ""user:password"");"
220810,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/auth/manager/PlainPasswordDatabaseAuthenticationManagerTest.java,80,,"        _passwordFile = TestFileUtils.createTempFile(this, "".user.password"", ""user:password"");"
220811,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/auth/manager/PlainPasswordDatabaseAuthenticationManagerTest.java,91,,"        User user = (User) provider.getChildByName(User.class, ""user"");"
220812,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/auth/manager/PrincipalDatabaseAuthenticationManagerTest.java,201,,"        UsernamePrincipal expectedPrincipal = new UsernamePrincipal(""guest"", _manager);"
220813,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/auth/manager/ldap/LDAPSSLSocketFactoryGeneratorTest.java,43,,"        Class<? extends SocketFactory> socketFactoryClass = LDAPSSLSocketFactoryGenerator.createSubClass(""MyNewClass"", _sslSocketFactory);"
220814,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/auth/manager/oauth2/OAuth2AuthenticationProviderImplTest.java,77,,"    private static final String TEST_AUTHORIZATION_ENDPOINT_URI_PATTERN = ""https://%s:%d%s"";"
220815,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/auth/manager/oauth2/OAuth2AuthenticationProviderImplTest.java,190,,"        mockIdentityResolverEndpoint.putExpectedParameter(""token"", TEST_INVALID_ACCESS_TOKEN);"
220816,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/auth/sasl/SaslUtil.java,57,,"        byte[] digestedPasswordBytes = MessageDigest.getInstance(""MD5"").digest(userPassword.getBytes(""UTF-8""));"
220817,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/auth/sasl/external/ExternalNegotiatorTest.java,55,,"        assertEquals(""Unexpected first result status"","
220818,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/auth/sasl/external/ExternalNegotiatorTest.java,65,,"        assertEquals(""Unexpected second result status"","
220819,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/auth/sasl/external/ExternalNegotiatorTest.java,83,,"        assertEquals(""Unexpected first result principal"", VALID_USER_NAME, principalName);"
220820,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/auth/sasl/plain/PlainNegotiatorTest.java,85,,"        assertEquals(""Unexpected first authentication result"", _successfulResult, firstResult);"
220821,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/auth/sasl/scram/ScramNegotiatorTest.java,339,,"            fail(""Server challenge '"" + serverFirstMessage + ""' cannot be parsed"");"
220822,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/encryption/AESGCMKeyFileEncrypterTest.java,87,,"        secretKey = new SecretKeySpec(keyData, ""AES"");"
220823,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/encryption/AESGCMKeyFileEncrypterTest.java,240,,"        assertEquals(""Decrypted text doesnt match original"", SECRET, aesDecryptedPassword);"
220824,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/encryption/AbstractAESKeyFileEncrypterFactoryTest.java,148,,"        String filename = UUID.randomUUID().toString() + "".key"";"
220825,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/encryption/AbstractAESKeyFileEncrypterFactoryTest.java,149,,"        String subdirName = getTestName() + File.separator + ""test"";"
220826,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/group/FileGroupDatabaseCaseInsensitiveTest.java,71,,"        _util.writeAndSetGroupFile(""myGroup.users"", ""user1,user2,user3"");"
220827,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/group/FileGroupDatabaseCaseInsensitiveTest.java,107,,"        _util.writeAndSetGroupFile(""myGroup.users"", ""user1,user2"");"
220828,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/group/FileGroupDatabaseCaseInsensitiveTest.java,122,,"                                   ""myGroup1.users"", ""user1,user3"","
220829,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/group/FileGroupDatabaseCaseInsensitiveTest.java,123,,"                                   ""myGroup2.users"", ""user2,user3"");"
220830,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/group/FileGroupDatabaseTest.java,71,,"        _util.writeAndSetGroupFile(""myGroup.users"", USER1);"
220831,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/group/FileGroupDatabaseTest.java,165,,"        _util.writeAndSetGroupFile(""myGroup.users"", ""user1,user2"");"
220832,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/group/FileGroupDatabaseTest.java,174,,"        _util.writeAndSetGroupFile(""myGroup1.users"", ""user1,user2"", ""myGroup2.users"", ""user1,user3"");"
220833,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/group/FileGroupDatabaseTest.java,174,,"        _util.writeAndSetGroupFile(""myGroup1.users"", ""user1,user2"", ""myGroup2.users"", ""user1,user3"");"
220834,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/security/group/GroupPrincipalTest.java,63,,"        final String string = ""string"";"
220835,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/ssl/TrustManagerTest.java,88,,"            peerManager.checkClientTrusted(new X509Certificate[]{_app1, _ca }, ""RSA"");"
220836,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/ssl/TrustManagerTest.java,156,,"            fail(""Trusted client's validation against the broker's multi store manager failed."");"
220837,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/ssl/TrustManagerTest.java,173,,"            fail(""Untrusted client's validation against the broker's multi store manager unexpectedly passed."");"
220838,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/AbstractConfigurationStoreUpgraderAndRecovererTest.java,43,,"        _recoverer.register(new TestStoreUpgraderPhase(""0.0"", ""1.0""));"
220839,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/AbstractConfigurationStoreUpgraderAndRecovererTest.java,43,,"        _recoverer.register(new TestStoreUpgraderPhase(""0.0"", ""1.0""));"
220840,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/AbstractConfigurationStoreUpgraderAndRecovererTest.java,55,,"            fail(""should fail"");"
220841,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/AbstractDurableConfigurationStoreTestCase.java,268,,"        Queue<?> queue = createTestQueue(getTestName(), getTestName() + ""Owner"", true, null);"
220842,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerRecovererTest.java,183,,"        resolveObjects(_brokerEntry, createAuthProviderRecord(authProviderId, ""authProvider""), createPortRecord("
220843,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecovererTest.java,55,,"    private static final String BROKER_NAME = ""Broker"";"
220844,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecovererTest.java,74,,"        brokerAttributes.put(""createdTime"", BROKER_CREATE_TIME);"
220845,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecovererTest.java,76,,"        brokerAttributes.put(""modelVersion"", ""1.3"");"
220846,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecovererTest.java,77,,"        brokerAttributes.put(""name"", BROKER_NAME);"
220847,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecovererTest.java,78,,"        brokerAttributes.put(""virtualhosts"", _virtaulHosts);"
220848,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecovererTest.java,97,,"        hostAttributes.put(""modelVersion"", ""0.4"");"
220849,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecovererTest.java,99,,"        hostAttributes.put(""connectionURL"", ""jdbc:derby://localhost:1527/tmp/vh/test;create=true"");"
220850,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecovererTest.java,100,,"        hostAttributes.put(""createdBy"", VIRTUALHOST_CREATED_BY);"
220851,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecovererTest.java,105,,"        hostAttributes.put(""storeType"", ""jdbc"");"
220852,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecovererTest.java,106,,"        hostAttributes.put(""type"", ""STANDARD"");"
220853,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecovererTest.java,106,,"        hostAttributes.put(""type"", ""STANDARD"");"
220854,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecovererTest.java,107,,"        hostAttributes.put(""jdbcBigIntType"", ""mybigint"");"
220855,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecovererTest.java,108,,"        hostAttributes.put(""jdbcBlobType"", ""myblob"");"
220856,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecovererTest.java,109,,"        hostAttributes.put(""jdbcVarbinaryType"", ""myvarbinary"");"
220857,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecovererTest.java,113,,"        ConfiguredObjectRecord virtualHostRecord = new ConfiguredObjectRecordImpl(UUID.randomUUID(), ""VirtualHost"","
220858,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecovererTest.java,121,,"        assertEquals(""Unexpected type"", ""VirtualHostNode"", upgradedVirtualHostNodeRecord.getType());"
220859,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecovererTest.java,121,,"        assertEquals(""Unexpected type"", ""VirtualHostNode"", upgradedVirtualHostNodeRecord.getType());"
220860,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecovererTest.java,129,,"        expectedAttributes.put(""defaultVirtualHostNode"", ""true"");"
220861,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecovererTest.java,129,,"        expectedAttributes.put(""defaultVirtualHostNode"", ""true"");"
220862,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecovererTest.java,140,,"        expectedAttributes.put(""context"", context);"
220863,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecovererTest.java,142,,"        assertEquals(""Unexpected attributes"", expectedAttributes, upgradedVirtualHostNodeRecord.getAttributes());"
220864,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecovererTest.java,209,,"        hostAttributes.put(""storePath"", ""/tmp/vh/derby"");"
220865,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecovererTest.java,247,,"        hostAttributes.put(""bdbEnvironmentConfig"", Collections.singletonMap(""je.stats.collect"", ""false""));"
220866,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecovererTest.java,247,,"        hostAttributes.put(""bdbEnvironmentConfig"", Collections.singletonMap(""je.stats.collect"", ""false""));"
220867,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecovererTest.java,284,,"        hostAttributes.put(""haHelperAddress"", ""localhost:7000"");"
220868,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecovererTest.java,327,,"        hostAttributes.put(""storeType"", ""memory"");"
220869,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecovererTest.java,434,,"        ConfiguredObjectRecord portRecord = new ConfiguredObjectRecordImpl(UUID.randomUUID(), ""Port"","
220870,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecovererTest.java,473,,"        hostAttributes.put(""protocols"", ""HTTP"");"
220871,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecovererTest.java,541,,"        _brokerRecord.getAttributes().put(""modelVersion"", ""6.0"");"
220872,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecovererTest.java,577,,"        assertTrue(""Port was not removed"", ports.isEmpty());"
220873,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecovererTest.java,659,,"                ""AuthenticationProvider"","
220874,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecovererTest.java,720,,"        trustStoreAttributes1.put(""password"", ""password"");"
220875,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecovererTest.java,897,,"        context.put(""qpid.security.tls.protocolBlackList"", ""Ssl.*"");"
220876,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/BrokerStoreUpgraderAndRecovererTest.java,899,,"        _brokerRecord.getAttributes().put(""modelVersion"", ""8.0"");"
220877,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/JsonFileConfigStoreTest.java,276,,"        _store.create(new ConfiguredObjectRecordImpl(id, ""Queue"","
220878,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/JsonFileConfigStoreTest.java,281,,"            _store.create(new ConfiguredObjectRecordImpl(id, ""Exchange"","
220879,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/MessageStoreTestCase.java,161,,"        enqueueMessage(message.allContentAdded(), ""dummyQ"");"
220880,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/MessageStoreTestCase.java,324,,"        assertTrue(""Message with id "" + messageId1 + "" is not found"", enqueuedIds.contains(messageId1));"
220881,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/MessageStoreTestCase.java,324,,"        assertTrue(""Message with id "" + messageId1 + "" is not found"", enqueuedIds.contains(messageId1));"
220882,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/VirtualHostStoreUpgraderAndRecovererTest.java,68,,"        rootAttributes.put(""modelVersion"", ""6.1"");"
220883,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/VirtualHostStoreUpgraderAndRecovererTest.java,68,,"        rootAttributes.put(""modelVersion"", ""6.1"");"
220884,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/VirtualHostStoreUpgraderAndRecovererTest.java,69,,"        rootAttributes.put(""name"", ""root"");"
220885,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/VirtualHostStoreUpgraderAndRecovererTest.java,69,,"        rootAttributes.put(""name"", ""root"");"
220886,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/VirtualHostStoreUpgraderAndRecovererTest.java,71,,"                new ConfiguredObjectRecordImpl(UUID.randomUUID(), ""VirtualHost"", rootAttributes);"
220887,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/VirtualHostStoreUpgraderAndRecovererTest.java,76,,"        ConfiguredObjectRecord queueRecord = new ConfiguredObjectRecordImpl(UUID.randomUUID(), ""Queue"", queueAttributes,"
220888,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/VirtualHostStoreUpgraderAndRecovererTest.java,84,,"        assertNotNull(""Upgraded queue record not found "", upgradedQueueRecord);"
220889,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/VirtualHostStoreUpgraderAndRecovererTest.java,87,,"        assertNotNull(""Upgraded attributes not found"", upgradedAttributes);"
220890,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/VirtualHostStoreUpgraderAndRecovererTest.java,96,,"                            ((Map<String, String>) upgradedAttributes.get(""context"")).get(""queue.queueFlowResumeLimit""));"
220891,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/VirtualHostStoreUpgraderAndRecovererTest.java,113,,"        queueAttributes.put(""alternateExchange"", ""testExchange"");"
220892,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/VirtualHostStoreUpgraderAndRecovererTest.java,113,,"        queueAttributes.put(""alternateExchange"", ""testExchange"");"
220893,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/VirtualHostStoreUpgraderAndRecovererTest.java,121,,"        ConfiguredObjectRecord exchangeRecord = new ConfiguredObjectRecordImpl(UUID.randomUUID(), ""Exchange"", exchangeAttributes,"
220894,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/VirtualHostStoreUpgraderAndRecovererTest.java,135,,"                          upgradedAttributes.containsKey(""alternateBinding""));"
220895,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/VirtualHostStoreUpgraderAndRecovererTest.java,236,,"        queueAttributes.put(""messageGroupKey"", ""myheader"");"
220896,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/VirtualHostStoreUpgraderAndRecovererTest.java,237,,"        queueAttributes.put(""messageGroupSharedGroups"", true);"
220897,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/VirtualHostStoreUpgraderAndRecovererTest.java,269,,"                          upgradedAttributes.containsKey(""messageGroupType""));"
220898,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/VirtualHostStoreUpgraderAndRecovererTest.java,321,,"        context.put(""qpid.security.tls.protocolBlackList"", ""Ssl.*"");"
220899,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/preferences/JsonFilePreferenceStoreTest.java,86,,"        Map<String, Object> attributes = Collections.<String, Object>singletonMap(""test1"", ""test2"");"
220900,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/store/preferences/JsonFilePreferenceStoreTest.java,86,,"        Map<String, Object> attributes = Collections.<String, Object>singletonMap(""test1"", ""test2"");"
220901,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/transport/SNITest.java,117,,"                                                    new PrivateKeyEntry(""fooinvalid"","
220902,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/transport/TCPandSSLTransportTest.java,202,,"            LOGGER.error(""Should be able to connect using TLSv1.2"", e);"
220903,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/transport/TCPandSSLTransportTest.java,231,,"            LOGGER.error(""Should be able to connect using TLSv1.3"", e);"
220904,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/transport/TransactionTimeoutTickerTest.java,81,,"        assertTickTime(""Unexpected ticker value when transaction is in-progress"","
220905,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/transport/network/security/ssl/SSLUtilTest.java,75,,"        String[] enabled = {""TLS"", ""TLSv1.1"", ""TLSv1.2"", ""TLSv1.3""};"
220906,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/transport/network/security/ssl/SSLUtilTest.java,75,,"        String[] enabled = {""TLS"", ""TLSv1.1"", ""TLSv1.2"", ""TLSv1.3""};"
220907,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/transport/network/security/ssl/SSLUtilTest.java,75,,"        String[] enabled = {""TLS"", ""TLSv1.1"", ""TLSv1.2"", ""TLSv1.3""};"
220908,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/transport/network/security/ssl/SSLUtilTest.java,75,,"        String[] enabled = {""TLS"", ""TLSv1.1"", ""TLSv1.2"", ""TLSv1.3""};"
220909,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/transport/network/security/ssl/SSLUtilTest.java,79,,"        assertTrue(""unexpected filtered list: expected "" + Arrays.toString(expected) + "" actual "" + Arrays.toString("
220910,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/transport/network/security/ssl/SSLUtilTest.java,79,,"        assertTrue(""unexpected filtered list: expected "" + Arrays.toString(expected) + "" actual "" + Arrays.toString("
220911,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/transport/network/security/ssl/SSLUtilTest.java,175,,"                           Arrays.asList(""amqp.example.com""),"
220912,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/transport/network/security/ssl/SSLUtilTest.java,176,,"                           Arrays.asList(""amqp.example.net"", ""example.com"", ""*.example.com""));"
220913,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/transport/network/security/ssl/SSLUtilTest.java,176,,"                           Arrays.asList(""amqp.example.net"", ""example.com"", ""*.example.com""));"
220914,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/transport/network/security/ssl/SSLUtilTest.java,188,,"                           Arrays.asList(""amqp.example.net"", ""example.com"", ""foo.bar.example.com""));"
220915,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/transport/network/security/ssl/SSLUtilTest.java,192,,"                           Arrays.asList(""amqp.example.net"", ""example.com"", ""foo.bar.example.com"", ""foo.org""));"
220916,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/transport/network/security/ssl/SSLUtilTest.java,199,,"                           Arrays.asList(""amqp.example.org"", ""amqp1.example.org"", ""amqp2.example.org""),"
220917,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/transport/network/security/ssl/SSLUtilTest.java,199,,"                           Arrays.asList(""amqp.example.org"", ""amqp1.example.org"", ""amqp2.example.org""),"
220918,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/transport/network/security/ssl/SSLUtilTest.java,203,,"                           Arrays.asList(""amqp.example.org"", ""example.org""),"
220919,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/transport/network/security/ssl/SSLUtilTest.java,212,,"                           Arrays.asList(""example.org"", ""a.mqp.example.org""));"
220920,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/transport/network/security/ssl/SSLUtilTest.java,245,,"        trustStore.load(new ByteArrayInputStream(TRUSTSTORE), ""password"".toCharArray());"
220921,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/transport/network/security/ssl/SSLUtilTest.java,389,,"                                                                  + ""EwJVUzEQMA4GA1UECBMHcHJpdmF0ZTERMA8GA1UEBxMIcHJvdmluY2UxDTALBgNVBAoTBGNpdHkx"""
220922,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/transport/network/security/ssl/SSLUtilTest.java,417,,"                                                                  + ""VQQGEwJVUzEQMA4GA1UECBMHcHJpdmF0ZTERMA8GA1UEBxMIcHJvdmluY2UxDTALBgNVBAoTBGNp"""
220923,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/txn/AsyncAutoCommitTransactionTest.java,69,,"        setTestSystemProperty(STRICT_ORDER_SYSTEM_PROPERTY, ""false"");"
220924,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/txn/AutoCommitTransactionTest.java,95,,"        assertEquals(""Unexpected transaction state"", TransactionState.NOT_STARTED, _storeTransaction.getState());"
220925,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/txn/AutoCommitTransactionTest.java,96,,"        assertFalse(""Rollback action must not be fired"", _action.isRollbackActionFired());"
220926,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/txn/AutoCommitTransactionTest.java,97,,"        assertTrue(""Post commit action must be fired"", _action.isPostCommitActionFired());"
220927,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/txn/AutoCommitTransactionTest.java,137,,"            fail(""Exception not thrown"");"
220928,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/txn/AutoCommitTransactionTest.java,145,,"        assertTrue(""Rollback action must be fired"", _action.isRollbackActionFired());"
220929,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/txn/LocalTransactionTest.java,101,,"        assertEquals(""Unexpected transaction state"", TransactionState.NOT_STARTED, _storeTransaction.getState());"
220930,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/txn/LocalTransactionTest.java,141,,"            fail(""Exception not thrown"");"
220931,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/txn/LocalTransactionTest.java,148,,"        assertTrue(""Rollback action must be fired"", _action1.isRollbackActionFired());"
220932,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/txn/LocalTransactionTest.java,151,,"        assertFalse(""Post commit action must not be fired"", _action1.isPostCommitActionFired());"
220933,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/txn/LocalTransactionTest.java,549,,"        assertEquals(""Unexpected transaction start time before test"","
220934,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/txn/LocalTransactionTest.java,552,,"        assertEquals(""Unexpected transaction update time before test"","
220935,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/util/ByteBufferInputStreamTest.java,66,,"        assertEquals(""Unexpected length"", (long) 2, (long) length);"
220936,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/util/ByteBufferInputStreamTest.java,95,,"        assertEquals(""Unexpected number of available bytes"", (long) _data.length, (long) available);"
220937,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/util/CommandLineParserTest.java,78,,"                    { ""t1"", ""Test Flag 1."" },"
220938,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/util/CommandLineParserTest.java,79,,"                    { ""t2"", ""Test Option 2."", ""test"" },"
220939,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/util/CommandLineParserTest.java,79,,"                    { ""t2"", ""Test Option 2."", ""test"" },"
220940,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/util/CommandLineParserTest.java,80,,"                    { ""t3"", ""Test Option 3."", ""test"", ""true"" },"
220941,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/util/CommandLineParserTest.java,80,,"                    { ""t3"", ""Test Option 3."", ""test"", ""true"" },"
220942,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/util/CommandLineParserTest.java,81,,"                    { ""t4"", ""Test Option 4."", ""test"", null, ""^test$"" }"
220943,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/util/CommandLineParserTest.java,81,,"                    { ""t4"", ""Test Option 4."", ""test"", null, ""^test$"" }"
220944,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/util/CommandLineParserTest.java,290,,"                    { ""t"", ""Test Option."", ""test"", null, ""^test$"" }"
220945,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/util/CommandLineParserTest.java,323,,"        assertTrue(""The test option was not equal to \""test\"" but was: "" + testProps.get(""t""),"
220946,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/util/FileHelperTest.java,102,,"                Files.write(file.toPath(), ""test"".getBytes(""UTF8""));"
220947,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/util/FileUtilsTest.java,99,,"            assertTrue(""Unable to cleanup"", FileUtils.deleteFile(fileNameCopy));"
220948,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/util/FileUtilsTest.java,310,,"        assertEquals(""File creation was no registered"", (long) (fileCountBefore + 1), (long) fileCountCreated);"
220949,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/util/FileUtilsTest.java,458,,"        String directoryName = ""FileUtilsTest-testRecursiveDelete"";"
220950,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/util/FileUtilsTest.java,467,,"        assertTrue(""Directory exists"", condition);"
220951,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/virtualhost/AbstractVirtualHostTest.java,235,,"        assertEquals(""Unexpected state"", State.ERRORED, host.getState());"
220952,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/virtualhost/SynchronousMessageStoreRecovererTest.java,78,,"    @SuppressWarnings(""unchecked"")"
220953,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/virtualhostalias/VirtualHostAliasTest.java,71,,"        for(String name : new String[] { ""red"", ""blue"", ""purple"", ""black"" })"
220954,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/virtualhostalias/VirtualHostAliasTest.java,71,,"        for(String name : new String[] { ""red"", ""blue"", ""purple"", ""black"" })"
220955,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/virtualhostalias/VirtualHostAliasTest.java,71,,"        for(String name : new String[] { ""red"", ""blue"", ""purple"", ""black"" })"
220956,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/virtualhostalias/VirtualHostAliasTest.java,71,,"        for(String name : new String[] { ""red"", ""blue"", ""purple"", ""black"" })"
220957,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/virtualhostnode/AbstractStandardVirtualHostNodeTest.java,393,,"        doThrow(new RuntimeException(""Cannot open store"")).when(store).init(any(ConfiguredObject.class));"
220958,./TargetProjects/qpid-broker-j/broker-core/src/test/java/org/apache/qpid/server/virtualhostnode/AbstractStandardVirtualHostNodeTest.java,461,,"        assertEquals(""Unexpected node state"", State.ERRORED, node.getState());"
220959,./TargetProjects/qpid-broker-j/broker-core/src/velocity/java/org/apache/qpid/server/logging/GenerateLogMessages.java,293,,"        messageTypeData.put(""name"", messsageName);"
220960,./TargetProjects/qpid-broker-j/broker-plugins/access-control/src/test/java/org/apache/qpid/server/security/access/config/AclFileParserTest.java,73,,"            fail(""fail"");"
220961,./TargetProjects/qpid-broker-j/broker-plugins/access-control/src/test/java/org/apache/qpid/server/security/access/config/AclFileParserTest.java,203,,"        assertEquals(""Rule has unexpected identity"", ""user1"", rule.getIdentity());"
220962,./TargetProjects/qpid-broker-j/broker-plugins/access-control/src/test/java/org/apache/qpid/server/security/access/config/AclFileParserTest.java,203,,"        assertEquals(""Rule has unexpected identity"", ""user1"", rule.getIdentity());"
220963,./TargetProjects/qpid-broker-j/broker-plugins/access-control/src/test/java/org/apache/qpid/server/security/access/config/AclFileParserTest.java,204,,"        assertEquals(""Rule has unexpected operation"", LegacyOperation.ACCESS, rule.getAction().getOperation());"
220964,./TargetProjects/qpid-broker-j/broker-plugins/access-control/src/test/java/org/apache/qpid/server/security/access/config/AclFileParserTest.java,206,,"        assertEquals(""Rule has unexpected object properties"","
220965,./TargetProjects/qpid-broker-j/broker-plugins/access-control/src/test/java/org/apache/qpid/server/security/access/config/AclFileParserTest.java,408,,"                     ""user1"", LegacyOperation.CREATE, ObjectType.USER, new ObjectProperties(""otherUser""));"
220966,./TargetProjects/qpid-broker-j/broker-plugins/access-control/src/test/java/org/apache/qpid/server/security/access/config/AclFileParserTest.java,432,,"                     ""user1"", LegacyOperation.CREATE, ObjectType.GROUP, new ObjectProperties(""groupName""));"
220967,./TargetProjects/qpid-broker-j/broker-plugins/access-control/src/test/java/org/apache/qpid/server/security/access/config/AclRulePredicatesTest.java,87,,"        String networks = ""network1,network2"";"
220968,./TargetProjects/qpid-broker-j/broker-plugins/access-control/src/test/java/org/apache/qpid/server/security/access/config/ActionTest.java,99,,"        objectProperties1.setAttributeNames(Collections.singleton(""test1""));"
220969,./TargetProjects/qpid-broker-j/broker-plugins/access-control/src/test/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapterTest.java,119,,"        when(accessControlProvider.getName()).thenReturn(""TEST"");"
220970,./TargetProjects/qpid-broker-j/broker-plugins/access-control/src/test/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapterTest.java,166,,"        when(mock.getName()).thenReturn(""test"");"
220971,./TargetProjects/qpid-broker-j/broker-plugins/access-control/src/test/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapterTest.java,189,,"                                  Collections.singletonMap(ConfiguredObject.DESCRIPTION, ""Test""));"
220972,./TargetProjects/qpid-broker-j/broker-plugins/access-control/src/test/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapterTest.java,235,,"        when(groupProvider.getName()).thenReturn(""testGroupProvider"");"
220973,./TargetProjects/qpid-broker-j/broker-plugins/access-control/src/test/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapterTest.java,249,,"        when(group.getName()).thenReturn(""testGroup"");"
220974,./TargetProjects/qpid-broker-j/broker-plugins/access-control/src/test/java/org/apache/qpid/server/security/access/config/LegacyAccessControlAdapterTest.java,760,,"        assertEquals(""Unexpected authorise result"", Result.ALLOWED, result);"
220975,./TargetProjects/qpid-broker-j/broker-plugins/access-control/src/test/java/org/apache/qpid/server/security/access/config/RuleBasedAccessControlTest.java,90,,"        rsc.addRule(0, ""user1"", RuleOutcome.ALLOW, LegacyOperation.ACCESS, ObjectType.VIRTUALHOST, ObjectProperties.EMPTY);"
220976,./TargetProjects/qpid-broker-j/broker-plugins/access-control/src/test/java/org/apache/qpid/server/security/access/config/RuleBasedAccessControlTest.java,206,,"                actionProperties.put(ObjectProperties.Property.COMPONENT, ""Test"");"
220977,./TargetProjects/qpid-broker-j/broker-plugins/access-control/src/test/java/org/apache/qpid/server/security/access/config/RuleBasedAccessControlTest.java,329,,"        ObjectProperties ruleProperties = new ObjectProperties(""getAttribute"");"
220978,./TargetProjects/qpid-broker-j/broker-plugins/access-control/src/test/java/org/apache/qpid/server/security/access/config/RuleBasedAccessControlTest.java,407,,"        rs.addRule(1, ""user9"", RuleOutcome.ALLOW, LegacyOperation.ALL, ObjectType.METHOD, new ObjectProperties());"
220979,./TargetProjects/qpid-broker-j/broker-plugins/access-control/src/test/java/org/apache/qpid/server/security/access/config/RuleSetTest.java,62,,"    private static final String TEST_USER = ""user"";"
220980,./TargetProjects/qpid-broker-j/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java,587,,"            exception(session, method, ExecutionErrorCode.NOT_FOUND, ""not-found: destination '""+destination+""'"");"
220981,./TargetProjects/qpid-broker-j/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java,889,,"                          + "" to "" + method.getType() +""."");"
220982,./TargetProjects/qpid-broker-j/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java,1250,,"                    exception(session, method, ExecutionErrorCode.NOT_FOUND, ""Queue: '"" + method.getQueue() + ""' not found"");"
220983,./TargetProjects/qpid-broker-j/broker-plugins/amqp-0-10-protocol/src/test/java/org/apache/qpid/server/protocol/v0_10/MessageConverter_0_10_to_InternalTest.java,84,,"        doTestTextMessage(""helloworld"", ""text/plain"");"
220984,./TargetProjects/qpid-broker-j/broker-plugins/amqp-0-10-protocol/src/test/java/org/apache/qpid/server/protocol/v0_10/MessageConverter_0_10_to_InternalTest.java,417,,"            assertArrayEquals(""Unexpected content"","
220985,./TargetProjects/qpid-broker-j/broker-plugins/amqp-0-10-protocol/src/test/java/org/apache/qpid/server/protocol/v0_10/MessageConverter_Internal_to_0_10Test.java,71,,"        String content = ""testContent"";"
220986,./TargetProjects/qpid-broker-j/broker-plugins/amqp-0-10-protocol/src/test/java/org/apache/qpid/server/protocol/v0_10/MessageConverter_Internal_to_0_10Test.java,80,,"        final String mimeType = ""foo/bar"";"
220987,./TargetProjects/qpid-broker-j/broker-plugins/amqp-0-10-protocol/src/test/java/org/apache/qpid/server/protocol/v0_10/MessageConverter_Internal_to_0_10Test.java,123,,"        doTest(content, null, getObjectStreamMessageBytes(content), ""application/java-object-stream"");"
220988,./TargetProjects/qpid-broker-j/broker-plugins/amqp-0-10-protocol/src/test/java/org/apache/qpid/server/protocol/v0_10/PropertyConverter_0_10_to_InternalTest.java,184,,"        assertEquals(""Unexpected reply-to"", expectedReplyTo, convertedMessage.getMessageHeader().getReplyTo());"
220989,./TargetProjects/qpid-broker-j/broker-plugins/amqp-0-10-protocol/src/test/java/org/apache/qpid/server/protocol/v0_10/PropertyConverter_Internal_to_v0_10Test.java,405,,"        assertEquals(""Unexpected exchange"", """", convertedReplyTo.getExchange());"
220990,./TargetProjects/qpid-broker-j/broker-plugins/amqp-0-10-protocol/src/test/java/org/apache/qpid/server/protocol/v0_10/PropertyConverter_Internal_to_v0_10Test.java,406,,"        assertEquals(""Unexpected routing key"", replyTo, convertedReplyTo.getRoutingKey());"
220991,./TargetProjects/qpid-broker-j/broker-plugins/amqp-0-10-protocol/src/test/java/org/apache/qpid/server/protocol/v0_10/WindowCreditManagerTest.java,59,,"        assertEquals(""unexpected credit value"", (long) 0, _creditManager.getMessageCredit());"
220992,./TargetProjects/qpid-broker-j/broker-plugins/amqp-0-8-protocol/src/main/java/org/apache/qpid/server/protocol/v0_8/AMQChannel.java,1668,,"            LOGGER.debug(""RECV["" + _channelId + ""] AccessRequest["" +"" realm: "" + realm +"
220993,./TargetProjects/qpid-broker-j/broker-plugins/amqp-0-8-protocol/src/main/java/org/apache/qpid/server/protocol/v0_8/AMQChannel.java,1756,,"            LOGGER.debug(""RECV["" + _channelId + ""] BasicConsume["" +"" queue: "" + queue +"
220994,./TargetProjects/qpid-broker-j/broker-plugins/amqp-0-8-protocol/src/main/java/org/apache/qpid/server/protocol/v0_8/AMQChannel.java,1760,,"                          "" exclusive: "" + exclusive + "" nowait: "" + nowait + "" arguments: "" + arguments + "" ]"");"
220995,./TargetProjects/qpid-broker-j/broker-plugins/amqp-0-8-protocol/src/main/java/org/apache/qpid/server/protocol/v0_8/AMQChannel.java,1760,,"                          "" exclusive: "" + exclusive + "" nowait: "" + nowait + "" arguments: "" + arguments + "" ]"");"
220996,./TargetProjects/qpid-broker-j/broker-plugins/amqp-0-8-protocol/src/main/java/org/apache/qpid/server/protocol/v0_8/AMQChannel.java,1849,,"                        ""Cannot subscribe to queue '"""
220997,./TargetProjects/qpid-broker-j/broker-plugins/amqp-0-8-protocol/src/main/java/org/apache/qpid/server/protocol/v0_8/AMQChannel.java,1964,,"            LOGGER.debug(""RECV["" + _channelId + ""] BasicPublish["" +"" exchange: "" + exchangeName +"
220998,./TargetProjects/qpid-broker-j/broker-plugins/amqp-0-8-protocol/src/main/java/org/apache/qpid/server/protocol/v0_8/AMQChannel.java,2120,,"                                      + "" deliveryTag """
220999,./TargetProjects/qpid-broker-j/broker-plugins/amqp-0-8-protocol/src/main/java/org/apache/qpid/server/protocol/v0_8/AMQChannel.java,2410,,"                        replyText = ""Queue '"" + queueName + ""' not found"";"
