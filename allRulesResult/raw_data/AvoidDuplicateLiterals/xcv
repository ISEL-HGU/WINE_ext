73000,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteArraysQueryTest.java,282,,"                    ""dim2"","
73001,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteArraysQueryTest.java,283,,"                    ""dim3"","
73002,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteArraysQueryTest.java,592,,"                        .setAggregatorSpecs(aggregators(new LongSumAggregatorFactory(""a0"", ""cnt"")))"
73003,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteArraysQueryTest.java,609,,"            new Object[]{""abc"", 1, 1L},"
73004,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteArraysQueryTest.java,1156,,"                              ""__acc"","
73005,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteArraysQueryTest.java,1161,,"                              ""array_concat(\""__acc\"", \""a0\"")"","
73006,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteArraysQueryTest.java,1174,,"                              ""array_set_add(\""__acc\"", \""dim1\"")"","
73007,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteArraysQueryTest.java,1175,,"                              ""array_set_add_all(\""__acc\"", \""a1\"")"","
73008,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteArraysQueryTest.java,1286,,"                              ""<LONG>[]"","
73009,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteArraysQueryTest.java,1314,,"                              ""<DOUBLE>[]"","
73010,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteArraysQueryTest.java,1415,,"                              ""array_set_add_all(\""__acc\"", \""a0\"")"","
73011,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteArraysQueryTest.java,1539,,"          new Object[]{""b"", ""[\""1\"",\""abc\"",\""def\""]"", ""1,abc,def""},"
73012,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteArraysQueryTest.java,1539,,"          new Object[]{""b"", ""[\""1\"",\""abc\"",\""def\""]"", ""1,abc,def""},"
73013,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteCorrelatedQueryTest.java,68,,"        ""select country, ANY_VALUE(\n"""
73014,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteCorrelatedQueryTest.java,71,,"        + ""        )\n"""
73015,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteCorrelatedQueryTest.java,73,,"        + ""from visits \n"""
73016,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteCorrelatedQueryTest.java,89,,"                                                                    ""timestamp_floor(\""__time\"",'P1D',null,'UTC')"","
73017,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteCorrelatedQueryTest.java,93,,"                                                                .setDimFilter(not(selector(""country"", null, null)))"
73018,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteCorrelatedQueryTest.java,110,,"                                                                            ""user"","
73019,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteCorrelatedQueryTest.java,131,,"                                                .setDimensions(new DefaultDimensionSpec(""d1"", ""_d0""))"
73020,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteCorrelatedQueryTest.java,137,,"                                                    ""_a0"","
73021,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteCorrelatedQueryTest.java,149,,"                                ""j0."","
73022,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteCorrelatedQueryTest.java,152,,"                                    DruidExpression.fromColumn(""j0._d0"")"
73023,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteCorrelatedQueryTest.java,159,,"                        .setAggregatorSpecs(new LongAnyAggregatorFactory(""a0"", ""j0._a0""))"
73024,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteCorrelatedQueryTest.java,167,,"            new Object[]{""canada"", 3L}"
73025,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteCorrelatedQueryTest.java,181,,"        + ""        select max(\""users\"") from (\n"""
73026,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteCorrelatedQueryTest.java,184,,"        + ""     ) as \""dailyVisits\""\n"""
73027,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteCorrelatedQueryTest.java,187,,"        + "" group by 1"","
73028,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteCorrelatedQueryTest.java,244,,"                                selector(""city"", ""B"", null)"
73029,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteMultiValueStringQueryTest.java,58,,"          new Object[]{""bfoo"", 2L},"
73030,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteMultiValueStringQueryTest.java,59,,"          new Object[]{""foo"", 2L},"
73031,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteMultiValueStringQueryTest.java,82,,"                        .setVirtualColumns(expressionVirtualColumn(""v0"", ""concat(\""dim3\"",'foo')"", ValueType.STRING))"
73032,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteMultiValueStringQueryTest.java,85,,"                                new DefaultDimensionSpec(""v0"", ""_d0"", ValueType.STRING)"
73033,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteMultiValueStringQueryTest.java,88,,"                        .setAggregatorSpecs(aggregators(new LongSumAggregatorFactory(""a0"", ""cnt"")))"
73034,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteMultiValueStringQueryTest.java,234,,"                .filters(new InDimFilter(""dim3"", ImmutableList.of(""a"", ""b""), null))"
73035,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteMultiValueStringQueryTest.java,242,,"            new Object[]{""[\""a\"",\""b\""]""},"
73036,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteParameterQueryTest.java,130,,"                                   expressionPostAgg(""p0"", ""(exp(\""a0\"") + 10)"")"
73037,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteParameterQueryTest.java,146,,"        ""SELECT\n"""
73038,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteParameterQueryTest.java,167,,"                      expressionPostAgg(""p0"", ""'foo'""),"
73039,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteParameterQueryTest.java,183,,"            new Object[]{""foo"", ""xfoo"", ""foo"", "" foo"", ""foo"", ""foo"", ""foo"", ""foo "", ""foox"", "" foo"", ""xfoo"", 6L}"
73040,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteParameterQueryTest.java,187,,"            new SqlParameter(SqlType.VARCHAR, ""xfoox""),"
73041,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteParameterQueryTest.java,191,,"            new SqlParameter(SqlType.VARCHAR, "" foo ""),"
73042,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteParameterQueryTest.java,327,,"            new Object[]{""abc"", 1L},"
73043,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteParameterQueryTest.java,557,,"        ""SELECT COUNT(*)\n"""
73044,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteParameterQueryTest.java,558,,"        + ""FROM druid.numfoo\n"""
73045,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteParameterQueryTest.java,681,,"            new Object[]{""parameter"", 3L}"
73046,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,238,,"                                      .add(""EXPR$0"", ValueType.LONG)"
73047,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,239,,"                                      .add(""EXPR$1"", ValueType.LONG)"
73048,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,240,,"                                      .add(""EXPR$2"", ValueType.LONG)"
73049,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,274,,"                .columns(""dim1"", ""v0"")"
73050,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,315,,"        + ""FROM (\n"""
73051,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,316,,"        + ""    SELECT\n"""
73052,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,321,,"        + "")\n"""
73053,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,322,,"        + ""GROUP BY 1"","
73054,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,343,,"                        .addDimension(new DefaultDimensionSpec(""v0"", ""_d0""))"
73055,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,344,,"                        .addAggregator(new LongSumAggregatorFactory(""_a0"", ""a0""))"
73056,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,378,,"                                        ""j0."","
73057,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,381,,"                                            DruidExpression.fromColumn(""j0.m1"")"
73058,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,388,,"                                .columns(""__time"", ""cnt"", ""dim1"", ""dim2"", ""dim3"", ""j0.m1"", ""m1"", ""m2"", ""unique_dim1"")"
73059,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,388,,"                                .columns(""__time"", ""cnt"", ""dim1"", ""dim2"", ""dim3"", ""j0.m1"", ""m1"", ""m2"", ""unique_dim1"")"
73060,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,388,,"                                .columns(""__time"", ""cnt"", ""dim1"", ""dim2"", ""dim3"", ""j0.m1"", ""m1"", ""m2"", ""unique_dim1"")"
73061,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,388,,"                                .columns(""__time"", ""cnt"", ""dim1"", ""dim2"", ""dim3"", ""j0.m1"", ""m1"", ""m2"", ""unique_dim1"")"
73062,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,388,,"                                .columns(""__time"", ""cnt"", ""dim1"", ""dim2"", ""dim3"", ""j0.m1"", ""m1"", ""m2"", ""unique_dim1"")"
73063,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,398,,"                              new DoubleSumAggregatorFactory(""a0:sum"", ""m2""),"
73064,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,399,,"                              new CountAggregatorFactory(""a0:count"")"
73065,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,413,,"                                    ""quotient"","
73066,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,430,,"            new Object[]{""abc"", 5.0}"
73067,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,790,,"                               .filters(selector(""dim1"", ""nonexistent"", null))"
73068,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,823,,"        ""SELECT\n"""
73069,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,836,,"        + ""FROM foo"","
73070,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,844,,"                      expressionPostAgg(""p0"", ""'foo'""),"
73071,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,860,,"            new Object[]{""foo"", ""xfoo"", ""foo"", "" foo"", ""foo"", ""foo"", ""foo"", ""foo "", ""foox"", "" foo"", ""xfoo"", 6L}"
73072,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,983,,"            new Object[]{""view""},"
73073,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,984,,"            new Object[]{""druid""},"
73074,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,985,,"            new Object[]{""sys""},"
73075,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,986,,"            new Object[]{""INFORMATION_SCHEMA""}"
73076,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,1000,,"            .add(new Object[]{""druid"", CalciteTests.BROADCAST_DATASOURCE, ""TABLE"", ""YES"", ""YES""})"
73077,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,1000,,"            .add(new Object[]{""druid"", CalciteTests.BROADCAST_DATASOURCE, ""TABLE"", ""YES"", ""YES""})"
73078,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,1009,,"            .add(new Object[]{""INFORMATION_SCHEMA"", ""COLUMNS"", ""SYSTEM_TABLE"", ""NO"", ""NO""})"
73079,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,1012,,"            .add(new Object[]{""lookup"", ""lookyloo"", ""TABLE"", ""YES"", ""YES""})"
73080,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,1018,,"            .add(new Object[]{""view"", ""aview"", ""VIEW"", ""NO"", ""NO""})"
73081,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,1069,,"        ""SELECT COLUMN_NAME, DATA_TYPE, IS_NULLABLE\n"""
73082,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,1070,,"        + ""FROM INFORMATION_SCHEMA.COLUMNS\n"""
73083,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,1076,,"            new Object[]{""dim1"", ""VARCHAR"", ""YES""},"
73084,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,1206,,"            new Object[]{timestamp(""2000-01-01""), 1L, """", ""a"", ""[\""a\"",\""b\""]"", 1f, 1.0, HLLC_STRING},"
73085,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,1206,,"            new Object[]{timestamp(""2000-01-01""), 1L, """", ""a"", ""[\""a\"",\""b\""]"", 1f, 1.0, HLLC_STRING},"
73086,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,1207,,"            new Object[]{timestamp(""2000-01-02""), 1L, ""10.1"", NULL_STRING, ""[\""b\"",\""c\""]"", 2f, 2.0, HLLC_STRING},"
73087,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,1207,,"            new Object[]{timestamp(""2000-01-02""), 1L, ""10.1"", NULL_STRING, ""[\""b\"",\""c\""]"", 2f, 2.0, HLLC_STRING},"
73088,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,1207,,"            new Object[]{timestamp(""2000-01-02""), 1L, ""10.1"", NULL_STRING, ""[\""b\"",\""c\""]"", 2f, 2.0, HLLC_STRING},"
73089,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,1208,,"            new Object[]{timestamp(""2000-01-03""), 1L, ""2"", """", ""d"", 3f, 3.0, HLLC_STRING},"
73090,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,1209,,"            new Object[]{timestamp(""2001-01-01""), 1L, ""1"", ""a"", """", 4f, 4.0, HLLC_STRING},"
73091,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,1210,,"            new Object[]{timestamp(""2001-01-02""), 1L, ""def"", ""abc"", NULL_STRING, 5f, 5.0, HLLC_STRING},"
73092,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,1210,,"            new Object[]{timestamp(""2001-01-02""), 1L, ""def"", ""abc"", NULL_STRING, 5f, 5.0, HLLC_STRING},"
73093,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,1211,,"            new Object[]{timestamp(""2001-01-03""), 1L, ""abc"", NULL_STRING, NULL_STRING, 6f, 6.0, HLLC_STRING}"
73094,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,1241,,"                ""forbidden"","
73095,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,1278,,"                    expressionVirtualColumn(""v1"", ""'a'"", ValueType.STRING)"
73096,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,1452,,"                    expressionVirtualColumn(""v0"", ""substring(\""dim2\"", 0, 1)"", ValueType.STRING)"
73097,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,1477,,"                    expressionVirtualColumn(""v0"", ""(\""m1\"" + 1)"", ValueType.FLOAT)"
73098,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,2158,,"        ""SELECT """
73099,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,2161,,"        + ""FROM druid.foo"","
73100,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,2356,,"                                            new FloatLastAggregatorFactory(""a0:a"", ""m1""),"
73101,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,2357,,"                                            new LongLastAggregatorFactory(""a1:a"", ""cnt""),"
73102,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,2358,,"                                            new DoubleLastAggregatorFactory(""a2:a"", ""m2""))"
73103,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,2375,,"                            new LongSumAggregatorFactory(""_a1"", ""a1""),"
73104,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,2376,,"                            new DoubleSumAggregatorFactory(""_a2"", ""a2"")"
73105,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,3303,,"        + ""FROM druid.foo\n"""
73106,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,3417,,"                  .filters(selector(""m1"", ""1.0"", null))"
73107,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,3705,,"        + ""GROUP BY dim1\n"""
73108,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,3741,,"        + ""  dim1,"""
73109,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,3742,,"        + ""  SUBSTRING(dim1, 2)\n"""
73110,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,3752,,"                            expressionPostAgg(""p0"", ""substring(\""d0\"", 1, -1)"")"
73111,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,3760,,"            new Object[]{""10.1"", ""0.1""},"
73112,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,3954,,"        + ""dim1, dim2, SUM(m1), COUNT(*)\n"""
73113,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,3956,,"        + ""WHERE dim2 = 'a' OR dim2 = 'def'\n"""
73114,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,3957,,"        + ""GROUP BY 1, 2"","
73115,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,4046,,"      Assert.fail(""query execution should fail"");"
73116,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,4050,,"          e.getMessage().contains(""Column count mismatch in UNION ALL"")"
73117,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,4421,,"                      equalsCondition(DruidExpression.fromColumn(""dim1""), DruidExpression.fromColumn(""j0.k"")),"
73118,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,4595,,"        + ""FROM foo\n"""
73119,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,4624,,"        + ""  COUNT(*)\n"""
73120,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,4704,,"        ""SELECT COUNT(*)\n"""
73121,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,4742,,"        + ""FROM druid.numfoo\n"""
73122,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,5272,,"        ""SELECT foo.dim1, foo.dim2, l.k, l.v\n"""
73123,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,5384,,"                .columns(""a0"", ""j0.a0"")"
73124,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,5479,,"        ""SELECT COUNT(*) FROM druid.foo\n"""
73125,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,5822,,"                        ""_j0."","
73126,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,6191,,"                          new DoubleSumAggregatorFactory(""a9:sum"", ""d1""),"
73127,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,6193,,"                              new CountAggregatorFactory(""a9:count""),"
73128,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,6251,,"                .postAggregators(expressionPostAgg(""p0"", ""(\""a0\"" + \""a1\"")""))"
73129,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,6924,,"        ""SELECT COUNT(*) FROM druid.foo """
73130,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,6946,,"        + ""WHERE\n"""
73131,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,6957,,"                  .intervals(querySegmentSpec(Intervals.of(""2000/2001""), Intervals.of(""2010/2011"")))"
73132,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,7074,,"        ""SELECT COUNT(*) FROM druid.foo WHERE """
73133,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,7190,,"                          new Interval(DateTimes.MIN, DateTimes.of(""2000"")),"
73134,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,7195,,"                  .filters(not(selector(""dim1"", ""xxx"", null)))"
73135,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,7281,,"                          String.valueOf(DateTimes.of(""1970-01-01"").getMillis()),"
73136,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,7282,,"                          String.valueOf(DateTimes.of(""1970-01-02"").getMillis()),"
73137,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,8032,,"        + ""  SUM(cnt),\n"""
73138,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,8182,,"                            new DefaultDimensionSpec(""d1"", ""_d1"", ValueType.STRING)"
73139,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,8217,,"        + ""  GROUP BY dim2\n"""
73140,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,8564,,"        + ""  SELECT\n"""
73141,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,8567,,"        + ""  FROM druid.foo\n"""
73142,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,8595,,"                                    DruidExpression.fromColumn(""j0.d0"")"
73143,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,9531,,"                        .setDimFilter(selector(""dim4"", ""a"", null))"
73144,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,9831,,"                      expressionVirtualColumn(""v0"", ""timestamp_extract(\""__time\"",'YEAR','UTC')"", ValueType.LONG),"
73145,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,10112,,"            new Object[]{timestamp(""2001""), """", 1L},"
73146,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,10206,,"            new Object[]{""xabc"", 1L}"
73147,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,10220,,"        + ""FROM foo LEFT JOIN lookup.lookyloo ON foo.dim2 = lookyloo.k\n"""
73148,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,10236,,"                        .setDimFilter(selector(""j0.v"", ""123"", null))"
73149,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,10255,,"        ""SELECT lookyloo.v, COUNT(*)\n"""
73150,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,10258,,"        + ""GROUP BY lookyloo.v"","
73151,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,10598,,"                        equalsCondition(DruidExpression.fromColumn(""dim2""), DruidExpression.fromColumn(""_j0.k"")),"
73152,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,10625,,"        + ""INNER JOIN lookup.lookyloo l ON foo.dim2 = l.k\n"""
73153,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,10626,,"        + ""INNER JOIN lookup.lookyloo l2 ON foo.dim2 = l2.k\n"""
73154,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,10627,,"        + ""WHERE l.v = 'xa'\n"""
73155,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,11075,,"                                  DruidExpression.fromColumn(""j0.v0"")"
73156,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,11186,,"                                        DruidExpression.fromColumn(""j0.dim1"")"
73157,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,12063,,"        ""SELECT SUM(cnt), gran FROM (\n"""
73158,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,12065,,"        + ""  cnt FROM druid.foo\n"""
73159,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,12066,,"        + "") AS x\n"""
73160,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,12067,,"        + ""GROUP BY gran\n"""
73161,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,12068,,"        + ""ORDER BY gran"","
73162,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,12175,,"            new Object[]{1L, timestamp(""1999-12-01"", LOS_ANGELES)},"
73163,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,12177,,"            new Object[]{1L, timestamp(""2000-12-01"", LOS_ANGELES)},"
73164,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,12629,,"                          new DoubleSumAggregatorFactory(""a10:sum"", ""d1""),"
73165,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,12631,,"                          ? new CountAggregatorFactory(""a10:count"")"
73166,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,12702,,"                              ""__acc"","
73167,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,12721,,"                                ""bitwiseAnd(\""__acc\"", \""l1\"")"","
73168,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,12738,,"                                  ""bitwiseOr(\""__acc\"", \""l1\"")"","
73169,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,12755,,"                                  ""bitwiseXor(\""__acc\"", \""l1\"")"","
73170,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,13210,,"        ""SELECT gran, SUM(cnt)\n"""
73171,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,13212,,"        + ""  SELECT floor(__time TO month) AS gran, cnt\n"""
73172,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,13217,,"        + ""LIMIT 1"","
73173,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,13283,,"                                ""timestamp_floor(\""__time\"",'P1M',null,'UTC')"","
73174,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,13331,,"        ""SELECT dim2, gran, SUM(cnt)\n"""
73175,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,13499,,"        + ""FROM (SELECT FLOOR(__time TO MONTH) AS gran, COALESCE(dim2, '') dim2, cnt FROM druid.foo) AS x\n"""
73176,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,13509,,"                                ""case_searched(notnull(\""dim2\""),\""dim2\"",'')"","
73177,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,14410,,"                                        .intervals(querySegmentSpec(Intervals.of(""2001-01-02T00:00:00.000Z/146140482-04-24T15:36:27.903Z"")))"
73178,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,16511,,"                .virtualColumns(expressionVirtualColumn(""v0"", ""\'10.1\'"", ValueType.STRING))"
73179,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,16527,,"        ""with abc as\n"""
73180,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,16528,,"        + ""(\n"""
73181,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,16531,,"        + ""SELECT t1.dim1, t1.\""__time\"" from abc as t1 LEFT JOIN abc as t2 on t1.dim1 = t2.dim1 WHERE t1.dim1 = '10.1'\n"","
73182,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,16543,,"                                            DateTimes.of(""1999-01-01"").getMillis(),"
73183,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,16579,,"                .virtualColumns(expressionVirtualColumn(""_v0"", ""\'10.1\'"", ValueType.STRING))"
73184,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,16627,,"                        equalsCondition(DruidExpression.fromExpression(""'10.1'""), DruidExpression.fromColumn(""j0.v0"")),"
73185,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,16656,,"        + ""  SELECT dim1, \""__time\"", m1 from foo WHERE \""dim1\"" = '10.1'\n"""
73186,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java,17149,,"                            DruidExpression.fromColumn(""j0.dim4"")"
73187,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteSimpleQueryTest.java,49,,"        + ""FROM druid.foo\n"""
73188,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteSimpleQueryTest.java,50,,"        + ""GROUP BY 1, 2"","
73189,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteSimpleQueryTest.java,59,,"                                ""timestamp_floor(\""__time\"",'P1M',null,'UTC')"","
73190,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteSimpleQueryTest.java,66,,"                                new DefaultDimensionSpec(""dim2"", ""d1"")"
73191,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteSimpleQueryTest.java,69,,"                        .setAggregatorSpecs(aggregators(new LongSumAggregatorFactory(""a0"", ""cnt"")))"
73192,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteSimpleQueryTest.java,75,,"            new Object[]{timestamp(""2000-01-01""), """", 2L},"
73193,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteSimpleQueryTest.java,77,,"            new Object[]{timestamp(""2001-01-01""), """", 1L},"
73194,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteSimpleQueryTest.java,79,,"            new Object[]{timestamp(""2001-01-01""), ""abc"", 1L}"
73195,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteSimpleQueryTest.java,96,,"        ""SELECT dim2, FLOOR(__time TO MONTH), SUM(cnt)\n"""
73196,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/CalciteSimpleQueryTest.java,235,,"        + ""GROUP BY 1, 2\n"""
73197,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/DruidPlannerResourceAnalyzeTest.java,46,,"            new Resource(""foo"", ResourceType.DATASOURCE)"
73198,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/expression/ExpressionsTest.java,89,,"      .add(""hexstr"", ValueType.STRING)"
73199,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/expression/ExpressionsTest.java,91,,"      .add(""spacey"", ValueType.STRING)"
73200,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/expression/ExpressionsTest.java,92,,"      .add(""newliney"", ValueType.STRING)"
73201,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/expression/ExpressionsTest.java,93,,"      .add(""tstr"", ValueType.STRING)"
73202,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/expression/ExpressionsTest.java,94,,"      .add(""dstr"", ValueType.STRING)"
73203,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/expression/ExpressionsTest.java,98,,"      .put(""t"", DateTimes.of(""2000-02-03T04:05:06"").getMillis())"
73204,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/expression/ExpressionsTest.java,111,,"      .put(""s"", ""foo"")"
73205,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/expression/ExpressionsTest.java,117,,"      .put(""dstr"", ""2000-02-03"")"
73206,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/expression/ExpressionsTest.java,161,,"            testHelper.makeLiteral(""x(.)""),"
73207,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/expression/ExpressionsTest.java,205,,"            testHelper.makeLiteral(""f(.)""),"
73208,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/expression/ExpressionsTest.java,334,,"            testHelper.makeLiteral(""^beep$"")"
73209,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/expression/ExpressionsTest.java,344,,"            testHelper.makeLiteral(""^beep\\nboop$"")"
73210,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/expression/ExpressionsTest.java,1000,,"            testHelper.makeLiteral(DateTimes.of(""2000-02-03T04:05:06Z""))"
73211,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/expression/ExpressionsTest.java,1087,,"            testHelper.makeLiteral(""there"")"
73212,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/expression/ExpressionsTest.java,1097,,"            testHelper.makeLiteral(""There"")"
73213,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/expression/ExpressionsTest.java,1118,,"                testHelper.makeLiteral(""what is""),"
73214,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/expression/ExpressionsTest.java,1165,,"                testHelper.makeLiteral(""yes""),"
73215,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/expression/ExpressionsTest.java,1325,,"            testHelper.makeLiteral(""America/Los_Angeles"")"
73216,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/expression/ExpressionsTest.java,1539,,"            testHelper.makeLiteral(""yyyy-MM-dd HH:mm:ss"")"
73217,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/expression/TimeFormatOperatorConversionTest.java,66,,"        ""yyyy-MM-dd HH:mm:ss"","
73218,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/planner/CalcitesTest.java,33,,"    Assert.assertEquals(""'foo'"", Calcites.escapeStringLiteral(""foo""));"
73219,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/planner/CalcitesTest.java,45,,"    Assert.assertEquals(""x"", Calcites.findUnusedPrefixForDigits(""x"", ImmutableSortedSet.of(""foo"", ""bar"")));"
73220,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/rule/DruidUnionDataSourceRuleTest.java,50,,"                  .add(""col1"", ValueType.STRING)"
73221,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/rule/DruidUnionDataSourceRuleTest.java,51,,"                  .add(""col2"", ValueType.LONG)"
73222,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/schema/DruidSchemaTest.java,102,,"      CalciteTests.createRow(ImmutableMap.of(""t"", ""2000-01-01"", ""m1"", ""1.0"", ""dim1"", """")),"
73223,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/schema/DruidSchemaTest.java,108,,"      CalciteTests.createRow(ImmutableMap.of(""t"", ""2001-01-01"", ""m1"", ""4.0"", ""dim2"", ImmutableList.of(""a""))),"
73224,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/schema/DruidSchemaTest.java,218,,"        ""foo3"","
73225,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/schema/DruidSchemaTest.java,316,,"    Assert.assertEquals(ImmutableSet.of(""foo"", ""foo2""), schema.getTableNames());"
73226,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/schema/DruidSchemaTest.java,316,,"    Assert.assertEquals(ImmutableSet.of(""foo"", ""foo2""), schema.getTableNames());"
73227,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/schema/SystemSchemaTest.java,129,,"      CalciteTests.createRow(ImmutableMap.of(""t"", ""2000-01-01"", ""m1"", ""1.0"", ""dim1"", """")),"
73228,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/schema/SystemSchemaTest.java,135,,"      CalciteTests.createRow(ImmutableMap.of(""t"", ""2001-01-01"", ""m1"", ""4.0"", ""dim2"", ImmutableList.of(""a""))),"
73229,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/schema/SystemSchemaTest.java,290,,"      ImmutableList.of(""met1"", ""met2""),"
73230,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/schema/SystemSchemaTest.java,290,,"      ImmutableList.of(""met1"", ""met2""),"
73231,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/schema/SystemSchemaTest.java,380,,"      new DruidNode(""s1"", ""localhost"", false, 8081, null, true, false),"
73232,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/schema/SystemSchemaTest.java,419,,"          DataNodeService.DISCOVERY_SERVICE_KEY, new DataNodeService(""tier"", 1000, ServerType.BROKER, 0)"
73233,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/schema/SystemSchemaTest.java,487,,"          ""dummy"","
73234,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/schema/SystemSchemaTest.java,494,,"      new DruidServerMetadata(""server2"", ""server2:1234"", null, 5L, ServerType.HISTORICAL, DruidServer.DEFAULT_TIER, 0),"
73235,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/schema/SystemSchemaTest.java,1263,,"    Assert.assertEquals(""wikipedia"", row0[3].toString());"
73236,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/util/CalciteTests.java,155,,"  public static final String DATASOURCE1 = ""foo"";"
73237,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/util/CalciteTests.java,204,,"            return new AuthenticationResult((String) context.get(""user""), AuthConfig.ALLOW_ALL_NAME, null, null);"
73238,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/util/CalciteTests.java,249,,"                    ""abc"", ""xabc"","
73239,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/util/CalciteTests.java,262,,"              DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim1"", ""dim2"", ""dim3"")),"
73240,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/util/CalciteTests.java,262,,"              DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim1"", ""dim2"", ""dim3"")),"
73241,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/util/CalciteTests.java,262,,"              DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim1"", ""dim2"", ""dim3"")),"
73242,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/util/CalciteTests.java,274,,"                  .addAll(DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim1"", ""dim2"", ""dim3"", ""dim4"", ""dim5"")))"
73243,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/util/CalciteTests.java,274,,"                  .addAll(DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim1"", ""dim2"", ""dim3"", ""dim4"", ""dim5"")))"
73244,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/util/CalciteTests.java,315,,"          new CountAggregatorFactory(""cnt""),"
73245,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/util/CalciteTests.java,345,,"          new FloatSumAggregatorFactory(""m1_x"", ""m1_x""),"
73246,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/util/CalciteTests.java,346,,"          new DoubleSumAggregatorFactory(""m2_x"", ""m2_x""),"
73247,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/util/CalciteTests.java,347,,"          new HyperUniquesAggregatorFactory(""unique_dim1_x"", ""dim1_x"")"
73248,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/util/CalciteTests.java,371,,"  private static final List<String> USER_VISIT_DIMS = ImmutableList.of(""user"", ""country"", ""city"");"
73249,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/util/CalciteTests.java,371,,"  private static final List<String> USER_VISIT_DIMS = ImmutableList.of(""user"", ""country"", ""city"");"
73250,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/util/CalciteTests.java,382,,"          .put(""t"", ""2000-01-01"")"
73251,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/util/CalciteTests.java,383,,"          .put(""m1"", ""1.0"")"
73252,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/util/CalciteTests.java,390,,"          .put(""t"", ""2000-01-02"")"
73253,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/util/CalciteTests.java,391,,"          .put(""m1"", ""2.0"")"
73254,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/util/CalciteTests.java,393,,"          .put(""dim1"", ""10.1"")"
73255,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/util/CalciteTests.java,399,,"          .put(""m1"", ""3.0"")"
73256,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/util/CalciteTests.java,407,,"          .put(""m1"", ""4.0"")"
73257,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/util/CalciteTests.java,415,,"          .put(""m1"", ""5.0"")"
73258,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/util/CalciteTests.java,423,,"          .put(""m1"", ""6.0"")"
73259,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/util/CalciteTests.java,436,,"              .put(""dim2_x"", ImmutableList.of(""a""))"
73260,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/util/CalciteTests.java,437,,"              .put(""dim3_x"", ImmutableList.of(""a"", ""b""))"
73261,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/util/CalciteTests.java,666,,"          ImmutableMap.of(""user"", ""alice"", ""country"", ""canada"", ""city"", ""A"")"
73262,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/util/CalciteTests.java,666,,"          ImmutableMap.of(""user"", ""alice"", ""country"", ""canada"", ""city"", ""A"")"
73263,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/util/CalciteTests.java,674,,"      toRow(""2021-01-01T04:00:00Z"", USER_VISIT_DIMS, ImmutableMap.of(""user"", ""alice"", ""country"", ""India"", ""city"", ""Y"")),"
73264,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/util/CalciteTests.java,774,,"        new ServiceEmitter(""dummy"", ""dummy"", new NoopEmitter()),"
73265,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/calcite/util/TestServerInventoryView.java,50,,"      ""dummy"","
73266,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/guice/SqlModuleTest.java,139,,"    props.setProperty(SqlModule.PROPERTY_SQL_ENABLE, ""true"");"
73267,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/http/SqlResourceTest.java,266,,"            ImmutableMap.of(""cnt"", 6, ""TheFoo"", ""foo"")"
73268,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/http/SqlResourceTest.java,305,,"            ImmutableMap.of(""__time"", ""2000-01-01T00:00:00.000Z"", ""t2"", ""2000-01-01T00:00:00.000Z"")"
73269,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/http/SqlResourceTest.java,305,,"            ImmutableMap.of(""__time"", ""2000-01-01T00:00:00.000Z"", ""t2"", ""2000-01-01T00:00:00.000Z"")"
73270,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/http/SqlResourceTest.java,405,,"            ImmutableMap.of(""x"", ""abc"", ""y"", ""abc"")"
73271,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/http/SqlResourceTest.java,421,,"    final String query = ""SELECT *, CASE dim2 WHEN '' THEN dim2 END FROM foo LIMIT 2"";"
73272,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/http/SqlResourceTest.java,431,,"                ""[\""a\"",\""b\""]"","
73273,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/http/SqlResourceTest.java,434,,"                ""org.apache.druid.hll.VersionOneHyperLogLogCollector"","
73274,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/http/SqlResourceTest.java,438,,"                ""2000-01-02T00:00:00.000Z"","
73275,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/http/SqlResourceTest.java,440,,"                ""10.1"","
73276,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/http/SqlResourceTest.java,442,,"                ""[\""b\"",\""c\""]"","
73277,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/http/SqlResourceTest.java,461,,"            Arrays.asList(""__time"", ""cnt"", ""dim1"", ""dim2"", ""dim3"", ""m1"", ""m2"", ""unique_dim1"", ""EXPR$8""),"
73278,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/http/SqlResourceTest.java,461,,"            Arrays.asList(""__time"", ""cnt"", ""dim1"", ""dim2"", ""dim3"", ""m1"", ""m2"", ""unique_dim1"", ""EXPR$8""),"
73279,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/http/SqlResourceTest.java,461,,"            Arrays.asList(""__time"", ""cnt"", ""dim1"", ""dim2"", ""dim3"", ""m1"", ""m2"", ""unique_dim1"", ""EXPR$8""),"
73280,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/http/SqlResourceTest.java,461,,"            Arrays.asList(""__time"", ""cnt"", ""dim1"", ""dim2"", ""dim3"", ""m1"", ""m2"", ""unique_dim1"", ""EXPR$8""),"
73281,./TargetProjects/druid/sql/src/test/java/org/apache/druid/sql/http/SqlResourceTest.java,461,,"            Arrays.asList(""__time"", ""cnt"", ""dim1"", ""dim2"", ""dim3"", ""m1"", ""m2"", ""unique_dim1"", ""EXPR$8""),"
73282,./TargetProjects/dubbo/dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/router/condition/ConditionRouter.java,139,,"                    throw new ParseException(""Illegal route rule \"""""
73283,./TargetProjects/dubbo/dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/router/condition/ConditionRouter.java,140,,"                            + rule + ""\"", The error char '"" + separator"
73284,./TargetProjects/dubbo/dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/router/condition/ConditionRouter.java,141,,"                            + ""' at index "" + matcher.start() + "" before \"""""
73285,./TargetProjects/dubbo/dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/router/condition/ConditionRouter.java,141,,"                            + ""' at index "" + matcher.start() + "" before \"""""
73286,./TargetProjects/dubbo/dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/router/condition/ConditionRouter.java,142,,"                            + content + ""\""."", matcher.start());"
73287,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/configurator/absent/AbsentConfiguratorTest.java,37,,"        Assertions.assertEquals(""200"", url.getParameter(""timeout""));"
73288,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/configurator/absent/AbsentConfiguratorTest.java,40,,"        Assertions.assertEquals(""1000"", url.getParameter(""timeout""));"
73289,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/configurator/override/OverrideConfiguratorTest.java,37,,"        Assertions.assertEquals(""200"", url.getParameter(""timeout""));"
73290,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/configurator/override/OverrideConfiguratorTest.java,37,,"        Assertions.assertEquals(""200"", url.getParameter(""timeout""));"
73291,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/configurator/parser/ConfigParserTest.java,89,,"            Assertions.assertEquals(""127.0.0.1"", url.getAddress());"
73292,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/configurator/parser/ConfigParserTest.java,116,,"            Assertions.assertEquals(""random"", url.getParameter(LOADBALANCE_KEY));"
73293,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/configurator/parser/ConfigParserTest.java,117,,"            Assertions.assertEquals(url.getApplication(), ""demo-consumer"");"
73294,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/ConfigConditionRouterTest.java,39,,"        String serviceStr = ""---\n"" +"
73295,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/ConfigConditionRouterTest.java,41,,"                ""force: true\n"" +"
73296,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/ConfigConditionRouterTest.java,43,,"                ""enabled: true\n"" +"
73297,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/ConfigConditionRouterTest.java,48,,"                ""..."";"
73298,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/condition/ConditionRouterTest.java,59,,"        boolean matchWhen = ((ConditionRouter) router).matchWhen(URL.valueOf(""consumer://1.1.1.1/com.foo.BarService""), invocation);"
73299,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/condition/ConditionRouterTest.java,92,,"        Invoker<String> invoker2 = new MockInvoker<String>(URL.valueOf(""dubbo://"" + LOCAL_HOST"
73300,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/condition/ConditionRouterTest.java,93,,"                + "":20880/com.foo.BarService""));"
73301,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/condition/ConditionRouterTest.java,104,,"                ""host = "" + LOCAL_HOST + "" => "" + "" host = 10.20.3.3"").addParameter(FORCE_KEY,"
73302,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/condition/ConditionRouterTest.java,104,,"                ""host = "" + LOCAL_HOST + "" => "" + "" host = 10.20.3.3"").addParameter(FORCE_KEY,"
73303,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/condition/ConditionRouterTest.java,124,,"        List<Invoker<String>> filteredInvokers1 = router1.route(invokers, URL.valueOf(""consumer://"" + LOCAL_HOST + ""/com.foo.BarService""), new RpcInvocation());"
73304,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/condition/ConditionRouterTest.java,124,,"        List<Invoker<String>> filteredInvokers1 = router1.route(invokers, URL.valueOf(""consumer://"" + LOCAL_HOST + ""/com.foo.BarService""), new RpcInvocation());"
73305,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/condition/ConditionRouterTest.java,164,,"        Invoker<String> invoker1 = new MockInvoker<String>(URL.valueOf(""dubbo://10.20.3.3:20880/com.foo.BarService""));"
73306,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/condition/ConditionRouterTest.java,213,,"        Router router = new ConditionRouterFactory().getRouter(getRouteUrl(""host = "" + LOCAL_HOST + "" => "" + "" host = "" + LOCAL_HOST));"
73307,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/condition/ConditionRouterTest.java,288,,"        Router router = new ConditionRouterFactory().getRouter(getRouteUrl(""host = "" + LOCAL_HOST + "" => "" + "" host = 1.2.3.4""));"
73308,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/mesh/route/MeshAppRuleListenerTest.java,36,,"        MeshAppRuleListener meshAppRuleListener = new MeshAppRuleListener(""qinliujie"");"
73309,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/mesh/route/MeshAppRuleListenerTest.java,41,,"        meshAppRuleListener.receiveConfigInfo(""apiVersion: service.dubbo.apache.org/v1alpha1\n"" +"
73310,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/mesh/route/MeshAppRuleListenerTest.java,44,,"                ""spec:\n"" +"
73311,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/mesh/route/MeshAppRuleListenerTest.java,64,,"                ""        - match:\n"" +"
73312,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/mesh/route/MeshAppRuleListenerTest.java,67,,"                ""          route:\n"" +"
73313,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/mesh/route/MeshRuleManagerTest.java,47,,"            MeshRuleManager.subscribeAppRule(""test"");"
73314,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/mesh/route/MeshRuleManagerTest.java,76,,"                    ""        - match:\n"" +"
73315,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/mesh/route/MeshRuleManagerTest.java,79,,"                    ""          route:\n"" +"
73316,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/mesh/route/MeshRuleRouterTest.java,58,,"        when(url.getServiceKey()).thenReturn(""test"");"
73317,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/mesh/route/MeshRuleRouterTest.java,96,,"            invoker1Map.put(""env"", ""test1"");"
73318,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/mesh/route/MeshRuleRouterTest.java,96,,"            invoker1Map.put(""env"", ""test1"");"
73319,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/mesh/route/MeshRuleRouterTest.java,108,,"            invoker1Map.put(""env"", ""test2"");"
73320,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/mesh/route/MeshRuleRouterTest.java,121,,"            invoker1Map.put(""env"", ""test3"");"
73321,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/mesh/route/MeshRuleRouterTest.java,191,,"            subset.setName(""test4"");"
73322,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/mesh/route/MeshRuleRouterTest.java,378,,"        when(invocation.getMethodName()).thenReturn(""sayHello"");"
73323,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/mesh/route/MeshRuleRouterTest.java,379,,"        when(invocation.getArguments()).thenReturn(new Object[]{""qinliujie""});"
73324,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/mesh/route/MeshRuleRouterTest.java,421,,"            stringMatch.setExact(""sayHi"");"
73325,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/mesh/rule/virtualservice/DubboMatchRequestTest.java,42,,"            nameStringMatch.setExact(""sayHello"");"
73326,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/mesh/rule/virtualservice/DubboMatchRequestTest.java,64,,"        inputSourceLablesMap2.put(""key1"", ""other"");"
73327,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/mesh/rule/virtualservice/DubboMatchRequestTest.java,80,,"                eagleeyecontextMatchMap.put(""name"", nameMatch);"
73328,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/mesh/rule/virtualservice/match/DubboAttachmentMatchTest.java,39,,"        nameMatch.setExact(""qinliujie"");"
73329,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/mesh/rule/virtualservice/match/DubboAttachmentMatchTest.java,40,,"        dubbocontextMatchMap.put(""name"", nameMatch);"
73330,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/mesh/rule/virtualservice/match/DubboAttachmentMatchTest.java,44,,"        machineGroupMatch.setExact(""test_host"");"
73331,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/mesh/rule/virtualservice/match/DubboAttachmentMatchTest.java,45,,"        dubbocontextMatchMap.put(""machineGroup"", machineGroupMatch);"
73332,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/mesh/rule/virtualservice/match/DubboAttachmentMatchTest.java,52,,"        invokeDubboContextMap.put(""other"", ""other"");"
73333,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/mesh/rule/virtualservice/match/DubboMethodMatchTest.java,36,,"        nameStringMatch.setExact(""sayHello"");"
73334,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/mesh/rule/virtualservice/match/DubboMethodMatchTest.java,73,,"        assertTrue(DubboMethodMatch.isMatch(dubboMethodMatch, ""sayHello"", new String[]{""java.lang.Long"", ""java.lang.String""}, new Object[]{}));"
73335,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/mesh/rule/virtualservice/match/DubboMethodMatchTest.java,132,,"        assertTrue(DubboMethodMatch.isMatch(dubboMethodMatch, ""test"", new String[]{""int"", ""java.lang.String""}, new Object[]{10, ""sayHello""}));"
73336,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/mesh/rule/virtualservice/match/DubboMethodMatchTest.java,132,,"        assertTrue(DubboMethodMatch.isMatch(dubboMethodMatch, ""test"", new String[]{""int"", ""java.lang.String""}, new Object[]{10, ""sayHello""}));"
73337,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/mesh/rule/virtualservice/match/StringMatchTest.java,45,,"        assertFalse(StringMatch.isMatch(stringMatch, ""com.alibaba.hsf""));"
73338,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/support/AbstractClusterInvokerTest.java,104,,"        invocation.setMethodName(""sayHello"");"
73339,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/support/AbstractClusterInvokerTest.java,117,,"        given(invoker1.getUrl()).willReturn(turl.setPort(1).addParameter(""name"", ""invoker1""));"
73340,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/support/wrapper/MockClusterInvokerTest.java,58,,"        URL url = URL.valueOf(""remote://1.2.3.4/"" + IHelloService.class.getName());"
73341,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/support/wrapper/MockClusterInvokerTest.java,63,,"        URL mockUrl = URL.valueOf(""mock://localhost/"" + IHelloService.class.getName()"
73342,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/support/wrapper/MockClusterInvokerTest.java,72,,"        invocation.setMethodName(""getSomething"");"
73343,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/support/wrapper/MockClusterInvokerTest.java,78,,"        invocation.setMethodName(""sayHello"");"
73344,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/support/wrapper/MockClusterInvokerTest.java,92,,"                .addParameter(""invoke_return_error"", ""true"");"
73345,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/support/wrapper/MockClusterInvokerTest.java,92,,"                .addParameter(""invoke_return_error"", ""true"");"
73346,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/support/wrapper/MockClusterInvokerTest.java,95,,"                .addParameter(""getSomething.mock"",""return aa"")"
73347,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/support/wrapper/MockClusterInvokerTest.java,111,,"        invocation.setMethodName(""getSomething2"");"
73348,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/support/wrapper/MockClusterInvokerTest.java,192,,"                                + ""&"" + ""getSomething.mock=fail:return x"""
73349,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/support/wrapper/MockClusterInvokerTest.java,209,,"        invocation.setMethodName(""getSomething3"");"
73350,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/support/wrapper/MockClusterInvokerTest.java,443,,"        Assertions.assertEquals(""somethingmock"", ret.getValue());"
73351,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/support/wrapper/MockClusterInvokerTest.java,538,,"        invocation.setMethodName(""getBoolean2"");"
73352,./TargetProjects/dubbo/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/support/wrapper/MockClusterInvokerTest.java,543,,"    @SuppressWarnings(""unchecked"")"
73353,./TargetProjects/dubbo/dubbo-common/src/main/java/org/apache/dubbo/common/URL.java,662,,"            throw new IllegalArgumentException(""defaultValue <= 0"");"
73354,./TargetProjects/dubbo/dubbo-common/src/main/java/org/apache/dubbo/common/bytecode/Wrapper.java,153,,"            c1.append("" if( $2.equals(\"""").append(fn).append(""\"") ){ w."").append(fn).append('=').append(arg(ft, ""$3"")).append(""; return; }"");"
73355,./TargetProjects/dubbo/dubbo-common/src/main/java/org/apache/dubbo/common/bytecode/Wrapper.java,312,,"                return ""((Number)"" + name + "").doubleValue()"";"
73356,./TargetProjects/dubbo/dubbo-common/src/main/java/org/apache/dubbo/common/constants/CommonConstants.java,28,,"    String DUBBO = ""dubbo"";"
73357,./TargetProjects/dubbo/dubbo-common/src/main/java/org/apache/dubbo/common/extension/ExtensionLoader.java,164,,"    @SuppressWarnings(""unchecked"")"
73358,./TargetProjects/dubbo/dubbo-common/src/main/java/org/apache/dubbo/common/extension/ExtensionLoader.java,422,,"            throw new IllegalArgumentException(""Extension name == null"");"
73359,./TargetProjects/dubbo/dubbo-common/src/main/java/org/apache/dubbo/common/extension/ExtensionLoader.java,569,,"            throw new IllegalStateException(""Input type "" +"
73360,./TargetProjects/dubbo/dubbo-common/src/main/java/org/apache/dubbo/common/io/Bytes.java,500,,"            throw new IllegalArgumentException(""Base64 code length < 64."");"
73361,./TargetProjects/dubbo/dubbo-common/src/main/java/org/apache/dubbo/common/json/JSON.java,317,,"                            throw new ParseException(""Unexcepted token expect [ VALUE or '[' or '{' ] get '"" + JSONToken.token2string(token.type) + ""'"");"
73362,./TargetProjects/dubbo/dubbo-common/src/main/java/org/apache/dubbo/common/threadlocal/InternalThreadLocal.java,49,,"    @SuppressWarnings(""unchecked"")"
73363,./TargetProjects/dubbo/dubbo-common/src/main/java/org/apache/dubbo/common/utils/AtomicPositiveInteger.java,60,,"            throw new IllegalArgumentException(""new value "" + newValue + "" < 0"");"
73364,./TargetProjects/dubbo/dubbo-common/src/main/java/org/apache/dubbo/common/utils/ConfigUtils.java,264,,"                logger.warn(""Failed to load "" + fileName + "" file from "" + fileName + ""(ignore this file): "" + e.getMessage(), e);"
73365,./TargetProjects/dubbo/dubbo-common/src/main/java/org/apache/dubbo/common/utils/ConfigUtils.java,264,,"                logger.warn(""Failed to load "" + fileName + "" file from "" + fileName + ""(ignore this file): "" + e.getMessage(), e);"
73366,./TargetProjects/dubbo/dubbo-common/src/main/java/org/apache/dubbo/common/utils/ConfigUtils.java,264,,"                logger.warn(""Failed to load "" + fileName + "" file from "" + fileName + ""(ignore this file): "" + e.getMessage(), e);"
73367,./TargetProjects/dubbo/dubbo-common/src/main/java/org/apache/dubbo/common/utils/MethodUtils.java,71,,"        return (name.startsWith(""get"") || name.startsWith(""is""))"
73368,./TargetProjects/dubbo/dubbo-common/src/main/java/org/apache/dubbo/common/utils/PojoUtils.java,108,,"    @SuppressWarnings(""unchecked"")"
73369,./TargetProjects/dubbo/dubbo-common/src/main/java/org/apache/dubbo/common/utils/ReflectUtils.java,383,,"            if (""void"".equals(t)) {"
73370,./TargetProjects/dubbo/dubbo-common/src/main/java/org/apache/dubbo/common/utils/ReflectUtils.java,385,,"            } else if (""boolean"".equals(t)) {"
73371,./TargetProjects/dubbo/dubbo-common/src/main/java/org/apache/dubbo/common/utils/ReflectUtils.java,387,,"            } else if (""byte"".equals(t)) {"
73372,./TargetProjects/dubbo/dubbo-common/src/main/java/org/apache/dubbo/common/utils/ReflectUtils.java,389,,"            } else if (""char"".equals(t)) {"
73373,./TargetProjects/dubbo/dubbo-common/src/main/java/org/apache/dubbo/common/utils/ReflectUtils.java,391,,"            } else if (""double"".equals(t)) {"
73374,./TargetProjects/dubbo/dubbo-common/src/main/java/org/apache/dubbo/common/utils/ReflectUtils.java,393,,"            } else if (""float"".equals(t)) {"
73375,./TargetProjects/dubbo/dubbo-common/src/main/java/org/apache/dubbo/common/utils/ReflectUtils.java,395,,"            } else if (""int"".equals(t)) {"
73376,./TargetProjects/dubbo/dubbo-common/src/main/java/org/apache/dubbo/common/utils/ReflectUtils.java,397,,"            } else if (""long"".equals(t)) {"
73377,./TargetProjects/dubbo/dubbo-common/src/main/java/org/apache/dubbo/common/utils/ReflectUtils.java,399,,"            } else if (""short"".equals(t)) {"
73378,./TargetProjects/dubbo/dubbo-common/src/main/java/org/apache/dubbo/common/utils/UrlUtils.java,192,,"                    String group = params.get(""group"");"
73379,./TargetProjects/dubbo/dubbo-common/src/main/java/org/apache/dubbo/common/utils/UrlUtils.java,193,,"                    String version = params.get(""version"");"
73380,./TargetProjects/dubbo/dubbo-common/src/main/java/org/apache/dubbo/common/utils/Utf8Utils.java,88,,"                    throw new IllegalArgumentException(""invalid UTF-8."");"
73381,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/BaseServiceMetadataTest.java,30,,"        baseServiceMetadata.setGroup(""group1"");"
73382,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/BaseServiceMetadataTest.java,31,,"        baseServiceMetadata.setServiceInterfaceName(""org.apache.dubbo.common.TestInterface"");"
73383,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/BaseServiceMetadataTest.java,32,,"        baseServiceMetadata.setVersion(""1.0.0"");"
73384,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/BaseServiceMetadataTest.java,38,,"        assertEquals(baseServiceMetadata.getServiceKey(), ""group1/org.apache.dubbo.common.TestInterface:1.0.0"");"
73385,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/InterfaceAddressURLTest.java,71,,"        assertEquals(""5000"", interfaceAddressURL.getMethodParameter(""sayHello"", TIMEOUT_KEY));"
73386,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/URLBuilderTest.java,42,,"                .addParameter(""version"", 1) // override"
73387,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/URLBuilderTest.java,87,,"        URL url1 = URL.valueOf(""dubbo://admin:hello1234@10.20.130.230:20880/context/path?version=1.0.0&application=morgan&key2=v2"");"
73388,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/URLBuilderTest.java,92,,"        assertThat(url2.getVersion(), equalTo(""1.0.0""));"
73389,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/URLBuilderTest.java,99,,"                .addParameterIfAbsent(""absentKey"", ""absentValue"")"
73390,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/URLBuilderTest.java,99,,"                .addParameterIfAbsent(""absentKey"", ""absentValue"")"
73391,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/URLBuilderTest.java,100,,"                .addParameterIfAbsent(""version"", ""2.0.0"") // should not override"
73392,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/URLTest.java,48,,"        assertEquals(""dubbo"", url.getProtocol());"
73393,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/URLTest.java,49,,"        assertEquals(""admin"", url.getUsername());"
73394,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/URLTest.java,50,,"        assertEquals(""hello1234"", url.getPassword());"
73395,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/URLTest.java,51,,"        assertEquals(""10.20.130.230"", url.getHost());"
73396,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/URLTest.java,52,,"        assertEquals(""10.20.130.230:20880"", url.getAddress());"
73397,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/URLTest.java,54,,"        assertEquals(""context/path"", url.getPath());"
73398,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/URLTest.java,56,,"        assertEquals(""1.0.0"", url.getVersion());"
73399,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/URLTest.java,73,,"        assertEquals(""morgan"", url.getParameter(""application""));"
73400,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/URLTest.java,73,,"        assertEquals(""morgan"", url.getParameter(""application""));"
73401,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/URLTest.java,83,,"        assertEquals(""path"", url.getPath());"
73402,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/URLTest.java,162,,"        assertEquals(""file"", url.getProtocol());"
73403,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/URLTest.java,168,,"        assertEquals(""home/user1/router.js"", url.getPath());"
73404,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/URLTest.java,284,,"        url = URL.valueOf(""dubbo://admin:hello1234@10.20.130.230:20880/context/path?version=1.0.0&application=morgan"");"
73405,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/URLTest.java,381,,"        params.put(""version"", ""1.0.0"");"
73406,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/URLTest.java,414,,"        url = url.setHost(""host"");"
73407,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/URLTest.java,435,,"        assertEquals(""host:1"", url.getAddress());"
73408,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/URLTest.java,456,,"        url = url.setProtocol(""protocol"");"
73409,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/URLTest.java,554,,"        URL url = URL.valueOf(""dubbo://admin:hello1234@10.20.130.230:20880/context/path?application=morgan"");"
73410,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/URLTest.java,599,,"        url = url.addParameters(""k1"", ""v1"", ""k2"", ""v2"", ""application"", ""xxx"");"
73411,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/URLTest.java,781,,"        URL url = URL.valueOf(""ad@min:hello@1234@10.20.130.230:20880/context/path?version=1.0.0&application=morgan"");"
73412,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/URLTest.java,858,,"        URL url1 = URL.valueOf(""10.20.130.230:20880/context/path?interface=org.apache.dubbo.test.interfaceName&group=group&version=1.0.0"");"
73413,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/URLTest.java,935,,"        URL url6 = URL.valueOf(""consumer://30.225.20.150/org.apache.dubbo.rpc.service.GenericService?application="" +"
73414,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/URLTest.java,936,,"                ""dubbo-demo-api-consumer&category=consumers&check=false&dubbo=2.0.2&generic=true&interface="" +"
73415,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/URLTest.java,940,,"                ""org.apache.dubbo.demo.DemoService&pid=7375&side=consumer&sticky=false&timestamp=2299556506417"");"
73416,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/beanutil/JavaBeanSerializeUtilTest.java,342,,"        map.put(""first"", address);"
73417,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/bytecode/WrapperTest.java,42,,"        w.invokeMethod(obj, ""hello"", new Class<?>[]{String.class}, new Object[]{""qianlei""});"
73418,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/bytecode/WrapperTest.java,71,,"        Assertions.assertTrue(w.hasMethod(""setFloat""));"
73419,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/compiler/support/JavaCodeTest.java,27,,"        code.append(""package org.apache.dubbo.common.compiler.support;"");"
73420,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/compiler/support/JavaCodeTest.java,29,,"        code.append(""public class HelloServiceImpl"" + SUBFIX.getAndIncrement() + "" implements HelloService {"");"
73421,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/compiler/support/JavaCodeTest.java,30,,"        code.append(""   public String sayHello() { "");"
73422,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/compiler/support/JavaCodeTest.java,31,,"        code.append(""       return \""Hello world!\""; "");"
73423,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/compiler/support/JavaCodeTest.java,32,,"        code.append(""   }"");"
73424,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/compiler/support/JavassistCompilerTest.java,32,,"        Method sayHello = instance.getClass().getMethod(""sayHello"");"
73425,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/compiler/support/JavassistCompilerTest.java,33,,"        Assertions.assertEquals(""Hello world!"", sayHello.invoke(instance));"
73426,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/compiler/support/JdkCompilerTest.java,31,,"        Method sayHello = instance.getClass().getMethod(""sayHello"");"
73427,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/compiler/support/JdkCompilerTest.java,32,,"        Assertions.assertEquals(""Hello world!"", sayHello.invoke(instance));"
73428,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/config/configcenter/file/FileSystemDynamicConfigurationTest.java,133,,"        configuration.addListener(""test"", ""test"", event -> {"
73429,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/config/configcenter/file/FileSystemDynamicConfigurationTest.java,139,,"        configuration.publishConfig(""test"", ""test"", ""TEST"");"
73430,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/extension/ExtensionLoaderTest.java,128,,"        assertEquals(""impl1"", name);"
73431,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/extension/ExtensionLoaderTest.java,143,,"        assertTrue(getExtensionLoader(SimpleExt.class).getExtension(""impl2"") instanceof SimpleExtImpl2);"
73432,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/extension/ExtensionLoaderTest.java,258,,"            getExtensionLoader(AddExt1.class).getExtension(""Manual1"");"
73433,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/extension/ExtensionLoaderTest.java,400,,"                .getActivateExtension(url, new String[]{}, ""default_group"");"
73434,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/extension/ExtensionLoaderTest.java,421,,"        url = url.addParameter(GROUP_KEY, ""value"");"
73435,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/extension/ExtensionLoader_Adaptive_Test.java,62,,"            URL url = new ServiceConfigURL(""p1"", ""1.2.3.4"", 1010, ""path1"", map);"
73436,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/extension/ExtensionLoader_Adaptive_Test.java,62,,"            URL url = new ServiceConfigURL(""p1"", ""1.2.3.4"", 1010, ""path1"", map);"
73437,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/extension/ExtensionLoader_Adaptive_Test.java,64,,"            String echo = ext.echo(url, ""haha"");"
73438,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/extension/ExtensionLoader_Adaptive_Test.java,72,,"            map.put(""simple.ext"", ""impl2"");"
73439,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/extension/ExtensionLoader_Adaptive_Test.java,199,,"        map.put(""ext2"", ""impl1"");"
73440,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/io/BytesTest.java,54,,"        String str = Bytes.bytes2base64(""dubbo"".getBytes());"
73441,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/io/StreamUtilsTest.java,35,,"        InputStream is = StreamUtilsTest.class.getResourceAsStream(""/StreamUtilsTest.txt"");"
73442,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/io/UnsafeByteArrayInputStreamTest.java,30,,"        UnsafeByteArrayInputStream stream = new UnsafeByteArrayInputStream(""abc"".getBytes(), 1);"
73443,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/io/UnsafeStringReaderTest.java,30,,"        UnsafeStringReader reader = new UnsafeStringReader(""abc"");"
73444,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/io/UnsafeStringWriterTest.java,32,,"        writer.write(""abc"", 1, 1);"
73445,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/json/JSONTest.java,56,,"    @SuppressWarnings(""unchecked"")"
73446,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/json/JSONTest.java,59,,"        map.put(""aaa"", ""bbb"");"
73447,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/json/JSONTest.java,59,,"        map.put(""aaa"", ""bbb"");"
73448,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/logger/LoggerTest.java,54,,"        logger.error(""error"");"
73449,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/logger/LoggerTest.java,55,,"        logger.warn(""warn"");"
73450,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/logger/LoggerTest.java,56,,"        logger.info(""info"");"
73451,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/logger/LoggerTest.java,57,,"        logger.debug(""debug"");"
73452,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/logger/slf4j/Slf4jLoggerTest.java,37,,"        logger.error(""error"");"
73453,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/logger/slf4j/Slf4jLoggerTest.java,39,,"        logger.warn(""warn"");"
73454,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/logger/slf4j/Slf4jLoggerTest.java,40,,"        logger.info(""info"");"
73455,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/logger/slf4j/Slf4jLoggerTest.java,41,,"        logger.debug(""debug"");"
73456,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/logger/support/FailsafeLoggerTest.java,42,,"        failsafeLogger.error(""error"");"
73457,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/logger/support/FailsafeLoggerTest.java,43,,"        failsafeLogger.warn(""warn"");"
73458,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/logger/support/FailsafeLoggerTest.java,44,,"        failsafeLogger.info(""info"");"
73459,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/logger/support/FailsafeLoggerTest.java,45,,"        failsafeLogger.debug(""debug"");"
73460,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/logger/support/FailsafeLoggerTest.java,58,,"        failsafeLogger.trace(new Exception(""trace""));"
73461,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/status/StatusTest.java,31,,"        Status status = new Status(OK, ""message"", ""description"");"
73462,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/status/support/StatusUtilsTest.java,39,,"        statuses.put(""status1"", status1);"
73463,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/status/support/StatusUtilsTest.java,40,,"        statuses.put(""status2"", status2);"
73464,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/store/support/SimpleDataStoreTest.java,35,,"        dataStore.put(""name"", ""key"", ""1"");"
73465,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/store/support/SimpleDataStoreTest.java,35,,"        dataStore.put(""name"", ""key"", ""1"");"
73466,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/store/support/SimpleDataStoreTest.java,52,,"        Map<String, Object> map = dataStore.get(""component"");"
73467,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/threadpool/support/AbortPolicyWithReportTest.java,36,,"        AbortPolicyWithReport abortPolicyWithReport = new AbortPolicyWithReport(""Test"", url);"
73468,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/timer/HashedWheelTimerTest.java,89,,"                    new NamedThreadFactory(""dubbo-future-timeout"", true),"
73469,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/url/URLParamTest.java,35,,"        Assertions.assertEquals(""aaa"", urlParam1.getParameter(""aaa""));"
73470,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/url/URLParamTest.java,36,,"        Assertions.assertEquals(""bbb"", urlParam1.getParameter(""bbb""));"
73471,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/url/URLParamTest.java,37,,"        Assertions.assertEquals(""1.0"", urlParam1.getParameter(""version""));"
73472,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/url/URLParamTest.java,37,,"        Assertions.assertEquals(""1.0"", urlParam1.getParameter(""version""));"
73473,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/url/URLParamTest.java,39,,"        Assertions.assertEquals(""123"", urlParam1.getParameter(""ccc""));"
73474,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/url/URLParamTest.java,54,,"        Assertions.assertEquals(""2.0"", urlParam5.getParameter(""version""));"
73475,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/url/URLParamTest.java,63,,"        map.put(""side"", ""consumer"");"
73476,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/url/URLParamTest.java,63,,"        map.put(""side"", ""consumer"");"
73477,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/url/URLParamTest.java,96,,"        Assertions.assertEquals(""provider"", urlParam4.getParameter(""side""));"
73478,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/AnnotationUtilsTest.java,98,,"        assertEquals(""java.lang.CharSequence"", getAttribute(annotation, ""interfaceName""));"
73479,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/AnnotationUtilsTest.java,103,,"        assertEquals(true, getAttribute(annotation, ""export""));"
73480,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/AssertTest.java,29,,"        Assertions.assertThrows(IllegalArgumentException.class, () -> notNull(null, ""null object""));"
73481,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/ClassUtilsTest.java,37,,"            ClassUtils.forNameWithThreadContextClassLoader(""a.b.c.D"");"
73482,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/CollectionUtilsTest.java,101,,"        input.put(""key1"", Arrays.asList(""1:a"", ""2:b"", ""3:c""));"
73483,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/CollectionUtilsTest.java,101,,"        input.put(""key1"", Arrays.asList(""1:a"", ""2:b"", ""3:c""));"
73484,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/CollectionUtilsTest.java,101,,"        input.put(""key1"", Arrays.asList(""1:a"", ""2:b"", ""3:c""));"
73485,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/CollectionUtilsTest.java,102,,"        input.put(""key2"", Arrays.asList(""1:a"", ""2:b""));"
73486,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/CollectionUtilsTest.java,103,,"        input.put(""key3"", null);"
73487,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/CollectionUtilsTest.java,104,,"        input.put(""key4"", new ArrayList<String>());"
73488,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/CompatibleTypeUtilsTest.java,69,,"            result = CompatibleTypeUtils.compatibleTypeConvert(""2011-12-11 12:24:12"", Date.class);"
73489,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/ConfigUtilsTest.java,82,,"                asList(""fixed"", ""default.limited"", ""cached""));"
73490,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/ConfigUtilsTest.java,82,,"                asList(""fixed"", ""default.limited"", ""cached""));"
73491,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/ConfigUtilsTest.java,82,,"                asList(""fixed"", ""default.limited"", ""cached""));"
73492,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/ConfigUtilsTest.java,83,,"        assertEquals(asList(""fixed"", ""cached"", ""aaa"", ""bbb"", ""default.custom""), merged);"
73493,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/ConfigUtilsTest.java,161,,"        assertThat((String) p.get(""dubbo""), equalTo(""properties""));"
73494,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/LFUCacheTest.java,32,,"        cache.put(""one"", 1);"
73495,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/LFUCacheTest.java,33,,"        cache.put(""two"", 2);"
73496,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/LFUCacheTest.java,34,,"        cache.put(""three"", 3);"
73497,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/LRUCacheTest.java,31,,"        cache.put(""one"", 1);"
73498,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/LRUCacheTest.java,32,,"        cache.put(""two"", 2);"
73499,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/LRUCacheTest.java,33,,"        cache.put(""three"", 3);"
73500,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/LRUCacheTest.java,44,,"        cache.put(""four"", 4);"
73501,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/LogHelperTest.java,33,,"        LogHelper.trace(logger, ""trace"");"
73502,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/LogHelperTest.java,46,,"        LogHelper.debug(logger, ""debug"");"
73503,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/LogHelperTest.java,59,,"        LogHelper.info(logger, ""info"");"
73504,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/LogHelperTest.java,72,,"        LogHelper.warn(logger, ""warn"");"
73505,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/LogHelperTest.java,85,,"        LogHelper.error(logger, ""error"");"
73506,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/LogUtilTest.java,96,,"        when(log.getLogMessage()).thenReturn(""message"");"
73507,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/MethodUtilsTest.java,90,,"        Assertions.assertTrue(overrides(MethodOverrideClazz.class.getMethod(""get""),"
73508,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/NetUtilsTest.java,74,,"        assertTrue(NetUtils.isLocalHost(""localhost""));"
73509,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/NetUtilsTest.java,81,,"        assertTrue(NetUtils.isAnyHost(""0.0.0.0""));"
73510,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/NetUtilsTest.java,92,,"        assertTrue(NetUtils.isInvalidLocalHost(""127.0.0.1""));"
73511,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/NetUtilsTest.java,226,,"        assertTrue(NetUtils.matchIpRange(""*.*.*.*"", ""192.168.1.63"", 90));"
73512,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/NetUtilsTest.java,237,,"        assertTrue(NetUtils.matchIpRange(""234e:0:4567:0:0:0:3d:*"", ""234e:0:4567::3d:ff"", 90));"
73513,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/NetUtilsTest.java,238,,"        assertTrue(NetUtils.matchIpRange(""234e:0:4567:0:0:0:3d:ee"", ""234e:0:4567::3d:ee"", 90));"
73514,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/PojoUtilsTest.java,108,,"        @SuppressWarnings(""unchecked"")"
73515,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/PojoUtilsTest.java,294,,"        jsonObject.put(""1"", ""test"");"
73516,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/PojoUtilsTest.java,395,,"        p.setName(""jerry"");"
73517,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/PojoUtilsTest.java,398,,"        c.setToy(""haha"");"
73518,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/ReflectUtilsTest.java,91,,"        assertFalse(ReflectUtils.isCompatible(new Class[]{double.class}, new Object[]{""hello""}));"
73519,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/ReflectUtilsTest.java,230,,"        assertEquals(ReflectUtils.getPropertyNameFromBeanReadMethod(method), ""property"");"
73520,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/ReflectUtilsTest.java,232,,"        assertEquals(ReflectUtils.getPropertyNameFromBeanReadMethod(method), ""set"");"
73521,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/ReflectUtilsTest.java,335,,"                    ""overrideMethod"", new String[]{""int""});"
73522,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/ReflectUtilsTest.java,412,,"        Assertions.assertEquals(""java.lang.String"", types[0].getTypeName());"
73523,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/StackTest.java,33,,"        stack.push(""one"");"
73524,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/StackTest.java,37,,"        stack.push(""two"");"
73525,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/StringUtilsTest.java,55,,"        assertThat(StringUtils.length(""abc""), equalTo(3));"
73526,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/StringUtilsTest.java,93,,"        assertThat(StringUtils.replace(""any"", null, ""*""), equalTo(""any""));"
73527,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/StringUtilsTest.java,96,,"        assertThat(StringUtils.replace(""aba"", ""a"", null), equalTo(""aba""));"
73528,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/StringUtilsTest.java,105,,"        assertThat(StringUtils.replace(""abaa"", ""a"", null, -1), equalTo(""abaa""));"
73529,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/StringUtilsTest.java,169,,"        assertTrue(StringUtils.isInteger(""123""));"
73530,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/StringUtilsTest.java,201,,"        assertThat(StringUtils.getQueryStringValue(""key1=value1&key2=value2"", ""key2""), equalTo(""value2""));"
73531,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/StringUtilsTest.java,201,,"        assertThat(StringUtils.getQueryStringValue(""key1=value1&key2=value2"", ""key2""), equalTo(""value2""));"
73532,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/StringUtilsTest.java,282,,"        assertEquals(StringUtils.translate(s, ""123456"", ""abcdef""), ""afcad"");"
73533,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/StringUtilsTest.java,340,,"        assertEquals(""ab-cd-ef"", StringUtils.camelToSplitName(""abCdEf"", ""-""));"
73534,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/StringUtilsTest.java,347,,"        assertEquals(""Ab_Cd_Ef"", StringUtils.camelToSplitName(""Ab_Cd_Ef"", ""-""));"
73535,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/StringUtilsTest.java,348,,"        assertEquals(""AB_CD_EF"", StringUtils.camelToSplitName(""AB_CD_EF"", ""-""));"
73536,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/StringUtilsTest.java,488,,"        value = toCommaDelimitedString(""one"");"
73537,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/UrlUtilsTest.java,59,,"        assertEquals(""root"", url.getUsername());"
73538,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/UrlUtilsTest.java,60,,"        assertEquals(""alibaba"", url.getPassword());"
73539,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/UrlUtilsTest.java,78,,"        assertEquals(""dubbo"", url.getProtocol());"
73540,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/UrlUtilsTest.java,151,,"        String key = ""perf/dubbo.test.api.HelloService:1.0.0"";"
73541,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/UrlUtilsTest.java,160,,"        String key = ""dubbo.test.api.HelloService"";"
73542,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/UrlUtilsTest.java,163,,"        service.put(""dubbo://127.0.0.1:20880/com.xxx.XxxService"", ""version=1.0.0&group=test&dubbo.version=2.0.0"");"
73543,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/UrlUtilsTest.java,198,,"        service.put(""dubbo://127.0.0.1:20880/com.xxx.XxxService"", ""group=perf&version=1.0.0"");"
73544,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/UrlUtilsTest.java,299,,"        URL providerUrl = URL.valueOf(""http://127.0.0.1:8080/com.xxx.XxxService?version=1.0.0&group=test"");"
73545,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/UrlUtilsTest.java,346,,"        URL pattern = url.addParameter(GROUP_KEY, ""test"")"
73546,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/utils/UrlUtilsTest.java,367,,"        assertTrue(UrlUtils.isMatchGlobPattern(""*"", ""value""));"
73547,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/common/version/VersionTest.java,41,,"        Assertions.assertFalse(Version.isSupportResponseAttachment(""3.0.0""));"
73548,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/descriptor/MethodDescriptorTest.java,32,,"        Method method = DescriptorService.class.getMethod(""noParameterMethod"");"
73549,./TargetProjects/dubbo/dubbo-common/src/test/java/org/apache/dubbo/rpc/support/ProtocolUtilsTest.java,29,,"        assertServiceKey(port, serviceName, ""1.0.0"", ""group"");"
73550,./TargetProjects/dubbo/dubbo-compatible/src/test/java/org/apache/dubbo/config/ApplicationConfigTest.java,46,,"        application.setName(""app"");"
73551,./TargetProjects/dubbo/dubbo-compatible/src/test/java/org/apache/dubbo/config/ApplicationConfigTest.java,119,,"        application.setMonitor(new MonitorConfig(""monitor-addr""));"
73552,./TargetProjects/dubbo/dubbo-compatible/src/test/java/org/apache/dubbo/config/ModuleConfigTest.java,41,,"        module.setName(""module-name"");"
73553,./TargetProjects/dubbo/dubbo-compatible/src/test/java/org/apache/dubbo/generic/GenericServiceTest.java,61,,"        URL url = URL.valueOf(""dubbo://127.0.0.1:5342/"" + DemoService.class.getName() + ""?version=1.0.0"");"
73554,./TargetProjects/dubbo/dubbo-compatible/src/test/java/org/apache/dubbo/generic/GenericServiceTest.java,66,,"        Object result = client.$invoke(""sayHello"", new String[]{""java.lang.String""}, new Object[]{""haha""});"
73555,./TargetProjects/dubbo/dubbo-compatible/src/test/java/org/apache/dubbo/generic/GenericServiceTest.java,66,,"        Object result = client.$invoke(""sayHello"", new String[]{""java.lang.String""}, new Object[]{""haha""});"
73556,./TargetProjects/dubbo/dubbo-compatible/src/test/java/org/apache/dubbo/generic/GenericServiceTest.java,66,,"        Object result = client.$invoke(""sayHello"", new String[]{""java.lang.String""}, new Object[]{""haha""});"
73557,./TargetProjects/dubbo/dubbo-compatible/src/test/java/org/apache/dubbo/generic/GenericServiceTest.java,67,,"        Assertions.assertEquals(""hello haha"", result);"
73558,./TargetProjects/dubbo/dubbo-compatible/src/test/java/org/apache/dubbo/generic/GenericServiceTest.java,81,,"        URL url = URL.valueOf(""dubbo://127.0.0.1:5342/"" + DemoService.class.getName() + ""?version=1.0.0&generic=true$timeout=3000"");"
73559,./TargetProjects/dubbo/dubbo-compatible/src/test/java/org/apache/dubbo/generic/GenericServiceTest.java,235,,"        Assertions.assertSame(""java.lang.String"", inner3TypeDefinition.getProperties().get(""innerA3""));"
73560,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/utils/ReferenceConfigCache.java,105,,"    @SuppressWarnings(""unchecked"")"
73561,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/AbstractConfigTest.java,195,,"        Assertions.assertThrows(IllegalStateException.class, () -> ConfigValidationUtils.checkExtension(Greeting.class, ""hello"", ""world""));"
73562,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/AbstractConfigTest.java,243,,"            fail(""the value should be legal."");"
73563,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/AbstractConfigTest.java,321,,"            overrideConfig.setAddress(""override-config://127.0.0.1:2181"");"
73564,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/AbstractConfigTest.java,322,,"            overrideConfig.setProtocol(""override-config"");"
73565,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/AbstractConfigTest.java,323,,"            overrideConfig.setEscape(""override-config://"");"
73566,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/AbstractConfigTest.java,327,,"            external.put(""dubbo.override.address"", ""external://127.0.0.1:2181"");"
73567,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/AbstractConfigTest.java,327,,"            external.put(""dubbo.override.address"", ""external://127.0.0.1:2181"");"
73568,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/AbstractConfigTest.java,329,,"            external.put(""dubbo.override.exclude"", ""external"");"
73569,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/AbstractConfigTest.java,337,,"            SysProps.setProperty(""dubbo.override.address"", ""system://127.0.0.1:2181"");"
73570,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/AbstractConfigTest.java,338,,"            SysProps.setProperty(""dubbo.override.protocol"", ""system"");"
73571,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/AbstractInterfaceConfigTest.java,154,,"        interfaceConfig.setLocal(""GreetingMock"");"
73572,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/ApplicationConfigTest.java,57,,"        application.setName(""app"");"
73573,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/ApplicationConfigTest.java,134,,"        application.setMonitor(new MonitorConfig(""monitor-addr""));"
73574,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/ApplicationConfigTest.java,209,,"            Assertions.assertEquals(""value1"", parameters.get(""tag1""));"
73575,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/ApplicationConfigTest.java,209,,"            Assertions.assertEquals(""value1"", parameters.get(""tag1""));"
73576,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/ApplicationConfigTest.java,210,,"            Assertions.assertEquals(""value2"", parameters.get(""tag2""));"
73577,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/ApplicationConfigTest.java,210,,"            Assertions.assertEquals(""value2"", parameters.get(""tag2""));"
73578,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/ApplicationConfigTest.java,211,,"            Assertions.assertEquals(""value3"", parameters.get(""tag3""));"
73579,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/ApplicationConfigTest.java,211,,"            Assertions.assertEquals(""value3"", parameters.get(""tag3""));"
73580,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/ApplicationConfigTest.java,245,,"        SysProps.setProperty(""dubbo.application.name"", ""demo-app"");"
73581,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/ApplicationConfigTest.java,247,,"        SysProps.setProperty(""dubbo.application.version"", ""1.2.3"");"
73582,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/ConfigCenterConfigTest.java,65,,"        config.setAddress(""zookeeper://127.0.0.1:2181"");"
73583,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/ConfigCenterConfigTest.java,81,,"        SysProps.setProperty(""dubbo.config-center.check"", ""false"");"
73584,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/ConfigCenterConfigTest.java,81,,"        SysProps.setProperty(""dubbo.config-center.check"", ""false"");"
73585,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/ConfigCenterConfigTest.java,91,,"                        .application(""demo-app"")"
73586,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/ConfigCenterConfigTest.java,141,,"        SysProps.setProperty(""dubbo.config-center.timeout"", ""1234"");"
73587,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/ConsumerConfigTest.java,106,,"        SysProps.setProperty(""dubbo.consumer.check"", ""false"");"
73588,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/ConsumerConfigTest.java,107,,"        SysProps.setProperty(""dubbo.consumer.group"", ""demo"");"
73589,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/ConsumerConfigTest.java,107,,"        SysProps.setProperty(""dubbo.consumer.group"", ""demo"");"
73590,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/ConsumerConfigTest.java,112,,"            consumerConfig.setGroup(""groupA"");"
73591,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/ConsumerConfigTest.java,117,,"                    .application(""demo-app"")"
73592,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/MetadataReportConfigTest.java,31,,"        metadataReportConfig.setFile(""file"");"
73593,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/MethodConfigTest.java,271,,"        SysProps.setProperty(""dubbo.reference.""+ interfaceName +"".sayName.timeout"", ""1234"");"
73594,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/MethodConfigTest.java,271,,"        SysProps.setProperty(""dubbo.reference.""+ interfaceName +"".sayName.timeout"", ""1234"");"
73595,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/MethodConfigTest.java,271,,"        SysProps.setProperty(""dubbo.reference.""+ interfaceName +"".sayName.timeout"", ""1234"");"
73596,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/MethodConfigTest.java,272,,"        SysProps.setProperty(""dubbo.reference.""+ interfaceName +"".sayName.sticky"", ""true"");"
73597,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/MethodConfigTest.java,272,,"        SysProps.setProperty(""dubbo.reference.""+ interfaceName +"".sayName.sticky"", ""true"");"
73598,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/MethodConfigTest.java,273,,"        SysProps.setProperty(""dubbo.reference.""+ interfaceName +"".sayName.parameters"", ""[{a:1},{b:2}]"");"
73599,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/MethodConfigTest.java,273,,"        SysProps.setProperty(""dubbo.reference.""+ interfaceName +"".sayName.parameters"", ""[{a:1},{b:2}]"");"
73600,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/MethodConfigTest.java,284,,"            .application(""demo-app"")"
73601,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/MethodConfigTest.java,335,,"        SysProps.setProperty(""dubbo.service.""+ interfaceName +"".sayName.timeout"", ""1234"");"
73602,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/MethodConfigTest.java,338,,"        SysProps.setProperty(""dubbo.service.""+ interfaceName +"".group"", ""demo"");"
73603,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/MethodConfigTest.java,339,,"        SysProps.setProperty(""dubbo.registry.address"", ""N/A"");"
73604,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/MethodConfigTest.java,339,,"        SysProps.setProperty(""dubbo.registry.address"", ""N/A"");"
73605,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/ModuleConfigTest.java,40,,"        module.setName(""module-name"");"
73606,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/ProtocolConfigTest.java,234,,"        SysProps.setProperty(""dubbo.protocol.name"", ""rest"");"
73607,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/ProtocolConfigTest.java,234,,"        SysProps.setProperty(""dubbo.protocol.name"", ""rest"");"
73608,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/ProtocolConfigTest.java,235,,"        SysProps.setProperty(""dubbo.protocol.port"", String.valueOf(port));"
73609,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/ProtocolConfigTest.java,241,,"                    .application(""test-app"")"
73610,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/ReferenceConfigTest.java,98,,"            System.setProperty(""java.net.preferIPv4Stack"", ""true"");"
73611,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/ServiceConfigTest.java,96,,"        ApplicationConfig app = new ApplicationConfig(""app"");"
73612,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/ServiceConfigTest.java,99,,"        protocolConfig.setName(""mockprotocol2"");"
73613,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/ServiceConfigTest.java,164,,"        assertThat(url.getParameters(), hasEntry(ANYHOST_KEY, ""true""));"
73614,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/ServiceConfigTest.java,169,,"        assertThat(url.getParameters(), hasEntry(""echo.0.callback"", ""false""));"
73615,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/ServiceConfigTest.java,371,,"                setName(""dubbo"");"
73616,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/ServiceConfigTest.java,375,,"            methodConfig.setName(""sayName"");"
73617,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/DubboBootstrapTest.java,82,,"        SysProps.setProperty(""dubbo.application.name"", ""demo"");"
73618,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractBuilderTest.java,41,,"        parameters.put(""default.num"", ""one"");"
73619,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractBuilderTest.java,41,,"        parameters.put(""default.num"", ""one"");"
73620,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractBuilderTest.java,42,,"        parameters.put(""num"", ""ONE"");"
73621,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractBuilderTest.java,42,,"        parameters.put(""num"", ""ONE"");"
73622,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractInterfaceBuilderTest.java,44,,"        builder.local(""GreetingMock"");"
73623,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractInterfaceBuilderTest.java,80,,"        builder.monitor(""123"");"
73624,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractInterfaceBuilderTest.java,98,,"        builder.proxy(""mockproxyfactory"");"
73625,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractInterfaceBuilderTest.java,106,,"        builder.cluster(""mockcluster"");"
73626,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractInterfaceBuilderTest.java,114,,"        builder.filter(""mockfilter"");"
73627,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractInterfaceBuilderTest.java,122,,"        builder.listener(""mockinvokerlistener"");"
73628,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractInterfaceBuilderTest.java,130,,"        builder.owner(""owner"");"
73629,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractInterfaceBuilderTest.java,146,,"        builder.layer(""layer"");"
73630,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractInterfaceBuilderTest.java,197,,"        builder.registryIds(""registryIds"");"
73631,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractInterfaceBuilderTest.java,213,,"        builder.ondisconnect(""ondisconnect"");"
73632,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractInterfaceBuilderTest.java,248,,"        builder.scope(""scope"");"
73633,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractMethodBuilderTest.java,56,,"        builder.loadbalance(""mockloadbalance"");"
73634,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractMethodBuilderTest.java,80,,"        builder.mock(""mock"");"
73635,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractMethodBuilderTest.java,98,,"        builder.merger(""merger"");"
73636,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractMethodBuilderTest.java,105,,"        builder.cache(""cache"");"
73637,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractMethodBuilderTest.java,112,,"        builder.validation(""validation"");"
73638,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractMethodBuilderTest.java,119,,"        builder.appendParameter(""default.num"", ""one"").appendParameter(""num"", ""ONE"");"
73639,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractMethodBuilderTest.java,119,,"        builder.appendParameter(""default.num"", ""one"").appendParameter(""num"", ""ONE"");"
73640,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractMethodBuilderTest.java,119,,"        builder.appendParameter(""default.num"", ""one"").appendParameter(""num"", ""ONE"");"
73641,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractMethodBuilderTest.java,119,,"        builder.appendParameter(""default.num"", ""one"").appendParameter(""num"", ""ONE"");"
73642,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractReferenceBuilderTest.java,83,,"        builder.reconnect(""reconnect"");"
73643,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractReferenceBuilderTest.java,99,,"        builder.version(""version"");"
73644,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractReferenceBuilderTest.java,106,,"        builder.group(""group"");"
73645,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractServiceBuilderTest.java,32,,"        builder.version(""version"");"
73646,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractServiceBuilderTest.java,39,,"        builder.group(""group"");"
73647,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractServiceBuilderTest.java,94,,"        builder.token(""token"");"
73648,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractServiceBuilderTest.java,112,,"        builder.accesslog(""accesslog"");"
73649,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractServiceBuilderTest.java,151,,"        builder.protocolIds(""protocolIds"");"
73650,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractServiceBuilderTest.java,158,,"        builder.tag(""tag"");"
73651,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractServiceBuilderTest.java,188,,"        builder.serialization(""serialization"");"
73652,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ApplicationBuilderTest.java,42,,"        builder.version(""version"");"
73653,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ApplicationBuilderTest.java,49,,"        builder.owner(""owner"");"
73654,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ApplicationBuilderTest.java,56,,"        builder.organization(""organization"");"
73655,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ApplicationBuilderTest.java,63,,"        builder.architecture(""architecture"");"
73656,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ApplicationBuilderTest.java,71,,"        builder.environment(""develop"");"
73657,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ApplicationBuilderTest.java,82,,"        builder.compiler(""compiler"");"
73658,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ApplicationBuilderTest.java,89,,"        builder.logger(""log4j"");"
73659,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ApplicationBuilderTest.java,116,,"        builder.registryIds(""registryIds"");"
73660,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ApplicationBuilderTest.java,122,,"        MonitorConfig monitor = new MonitorConfig(""monitor-addr"");"
73661,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ApplicationBuilderTest.java,150,,"        builder.dumpDirectory(""dumpDirectory"");"
73662,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ApplicationBuilderTest.java,186,,"        builder.shutwait(""shutwait"");"
73663,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ApplicationBuilderTest.java,193,,"        builder.appendParameter(""default.num"", ""one"").appendParameter(""num"", ""ONE"");"
73664,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ApplicationBuilderTest.java,193,,"        builder.appendParameter(""default.num"", ""one"").appendParameter(""num"", ""ONE"");"
73665,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ApplicationBuilderTest.java,193,,"        builder.appendParameter(""default.num"", ""one"").appendParameter(""num"", ""ONE"");"
73666,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ApplicationBuilderTest.java,193,,"        builder.appendParameter(""default.num"", ""one"").appendParameter(""num"", ""ONE"");"
73667,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ApplicationBuilderTest.java,226,,"        builder.livenessProbe(""TestProbe"");"
73668,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ArgumentBuilderTest.java,36,,"        builder.type(""int"");"
73669,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ConfigCenterBuilderTest.java,32,,"        builder.protocol(""protocol"");"
73670,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ConfigCenterBuilderTest.java,39,,"        builder.address(""address"");"
73671,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ConfigCenterBuilderTest.java,46,,"        builder.cluster(""cluster"");"
73672,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ConfigCenterBuilderTest.java,53,,"        builder.namespace(""namespace"");"
73673,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ConfigCenterBuilderTest.java,60,,"        builder.group(""group"");"
73674,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ConfigCenterBuilderTest.java,74,,"        builder.password(""password"");"
73675,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ConfigCenterBuilderTest.java,102,,"        builder.configFile(""configFile"");"
73676,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ConfigCenterBuilderTest.java,109,,"        builder.appConfigFile(""appConfigFile"");"
73677,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ConfigCenterBuilderTest.java,116,,"        builder.appendParameter(""default.num"", ""one"").appendParameter(""num"", ""ONE"");"
73678,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ConfigCenterBuilderTest.java,116,,"        builder.appendParameter(""default.num"", ""one"").appendParameter(""num"", ""ONE"");"
73679,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ConfigCenterBuilderTest.java,116,,"        builder.appendParameter(""default.num"", ""one"").appendParameter(""num"", ""ONE"");"
73680,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ConfigCenterBuilderTest.java,116,,"        builder.appendParameter(""default.num"", ""one"").appendParameter(""num"", ""ONE"");"
73681,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ConsumerBuilderTest.java,36,,"        builder.client(""client"");"
73682,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ConsumerBuilderTest.java,43,,"        builder.threadPool(""threadPool"");"
73683,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/MetadataReportBuilderTest.java,32,,"        builder.address(""address"");"
73684,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/MetadataReportBuilderTest.java,39,,"        builder.username(""username"");"
73685,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/MetadataReportBuilderTest.java,46,,"        builder.password(""password"");"
73686,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/MetadataReportBuilderTest.java,60,,"        builder.group(""group"");"
73687,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/MetadataReportBuilderTest.java,67,,"        builder.appendParameter(""default.num"", ""one"").appendParameter(""num"", ""ONE"");"
73688,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/MetadataReportBuilderTest.java,67,,"        builder.appendParameter(""default.num"", ""one"").appendParameter(""num"", ""ONE"");"
73689,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/MetadataReportBuilderTest.java,67,,"        builder.appendParameter(""default.num"", ""one"").appendParameter(""num"", ""ONE"");"
73690,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/MetadataReportBuilderTest.java,67,,"        builder.appendParameter(""default.num"", ""one"").appendParameter(""num"", ""ONE"");"
73691,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/MethodBuilderTest.java,32,,"        builder.name(""name"");"
73692,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/MethodBuilderTest.java,88,,"        builder.oninvoke(""on-invoke-object"");"
73693,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/MethodBuilderTest.java,95,,"        builder.oninvokeMethod(""on-invoke-method"");"
73694,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/MethodBuilderTest.java,102,,"        builder.onreturn(""on-return-object"");"
73695,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/MethodBuilderTest.java,109,,"        builder.onreturnMethod(""on-return-method"");"
73696,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/MethodBuilderTest.java,116,,"        builder.onthrow(""on-throw-object"");"
73697,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/MethodBuilderTest.java,123,,"        builder.onthrowMethod(""on-throw-method"");"
73698,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/MethodBuilderTest.java,148,,"        builder.service(""service"");"
73699,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/MethodBuilderTest.java,155,,"        builder.serviceId(""serviceId"");"
73700,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ModuleBuilderTest.java,33,,"        builder.name(""name"");"
73701,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ModuleBuilderTest.java,40,,"        builder.version(""version"");"
73702,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ModuleBuilderTest.java,47,,"        builder.owner(""owner"");"
73703,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ModuleBuilderTest.java,54,,"        builder.organization(""organization"");"
73704,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/MonitorBuilderTest.java,32,,"        builder.protocol(""protocol"");"
73705,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/MonitorBuilderTest.java,39,,"        builder.address(""address"");"
73706,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/MonitorBuilderTest.java,46,,"        builder.username(""username"");"
73707,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/MonitorBuilderTest.java,53,,"        builder.password(""password"");"
73708,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/MonitorBuilderTest.java,60,,"        builder.group(""group"");"
73709,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/MonitorBuilderTest.java,67,,"        builder.version(""version"");"
73710,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/MonitorBuilderTest.java,74,,"        builder.interval(""interval"");"
73711,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/MonitorBuilderTest.java,88,,"        builder.appendParameter(""default.num"", ""one"").appendParameter(""num"", ""ONE"");"
73712,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/MonitorBuilderTest.java,88,,"        builder.appendParameter(""default.num"", ""one"").appendParameter(""num"", ""ONE"");"
73713,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/MonitorBuilderTest.java,88,,"        builder.appendParameter(""default.num"", ""one"").appendParameter(""num"", ""ONE"");"
73714,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/MonitorBuilderTest.java,88,,"        builder.appendParameter(""default.num"", ""one"").appendParameter(""num"", ""ONE"");"
73715,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProtocolBuilderTest.java,32,,"        builder.name(""name"");"
73716,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProtocolBuilderTest.java,39,,"        builder.host(""host"");"
73717,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProtocolBuilderTest.java,53,,"        builder.contextpath(""contextpath"");"
73718,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProtocolBuilderTest.java,67,,"        builder.threadpool(""mockthreadpool"");"
73719,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProtocolBuilderTest.java,109,,"        builder.codec(""mockcodec"");"
73720,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProtocolBuilderTest.java,116,,"        builder.serialization(""serialization"");"
73721,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProtocolBuilderTest.java,123,,"        builder.charset(""utf-8"");"
73722,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProtocolBuilderTest.java,151,,"        builder.accesslog(""accesslog"");"
73723,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProtocolBuilderTest.java,158,,"        builder.transporter(""mocktransporter"");"
73724,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProtocolBuilderTest.java,165,,"        builder.exchanger(""mockexchanger"");"
73725,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProtocolBuilderTest.java,172,,"        builder.dispatcher(""mockdispatcher"");"
73726,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProtocolBuilderTest.java,186,,"        builder.networker(""networker"");"
73727,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProtocolBuilderTest.java,193,,"        builder.server(""server"");"
73728,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProtocolBuilderTest.java,200,,"        builder.client(""client"");"
73729,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProtocolBuilderTest.java,207,,"        builder.telnet(""mocktelnethandler"");"
73730,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProtocolBuilderTest.java,214,,"        builder.prompt(""prompt"");"
73731,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProtocolBuilderTest.java,221,,"        builder.status(""mockstatuschecker"");"
73732,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProtocolBuilderTest.java,242,,"        builder.optimizer(""optimizer"");"
73733,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProtocolBuilderTest.java,249,,"        builder.extension(""extension"");"
73734,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProtocolBuilderTest.java,256,,"        builder.appendParameter(""default.num"", ""one"").appendParameter(""num"", ""ONE"");"
73735,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProtocolBuilderTest.java,256,,"        builder.appendParameter(""default.num"", ""one"").appendParameter(""num"", ""ONE"");"
73736,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProtocolBuilderTest.java,256,,"        builder.appendParameter(""default.num"", ""one"").appendParameter(""num"", ""ONE"");"
73737,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProtocolBuilderTest.java,256,,"        builder.appendParameter(""default.num"", ""one"").appendParameter(""num"", ""ONE"");"
73738,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProviderBuilderTest.java,29,,"        builder.host(""host"");"
73739,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProviderBuilderTest.java,43,,"        builder.contextPath(""contextpath"");"
73740,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProviderBuilderTest.java,50,,"        builder.threadPool(""mockthreadpool"");"
73741,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProviderBuilderTest.java,85,,"        builder.codec(""mockcodec"");"
73742,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProviderBuilderTest.java,92,,"        builder.charset(""utf-8"");"
73743,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProviderBuilderTest.java,113,,"        builder.transporter(""mocktransporter"");"
73744,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProviderBuilderTest.java,120,,"        builder.exchanger(""mockexchanger"");"
73745,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProviderBuilderTest.java,127,,"        builder.dispatcher(""mockdispatcher"");"
73746,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProviderBuilderTest.java,134,,"        builder.networker(""networker"");"
73747,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProviderBuilderTest.java,141,,"        builder.server(""server"");"
73748,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProviderBuilderTest.java,148,,"        builder.client(""client"");"
73749,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProviderBuilderTest.java,155,,"        builder.telnet(""mocktelnethandler"");"
73750,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProviderBuilderTest.java,162,,"        builder.prompt(""prompt"");"
73751,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProviderBuilderTest.java,169,,"        builder.status(""mockstatuschecker"");"
73752,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ReferenceBuilderTest.java,50,,"        builder.client(""client"");"
73753,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ReferenceBuilderTest.java,57,,"        builder.url(""url"");"
73754,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ReferenceBuilderTest.java,90,,"        builder.protocol(""protocol"");"
73755,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/RegistryBuilderTest.java,32,,"        builder.address(""address"");"
73756,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/RegistryBuilderTest.java,39,,"        builder.username(""username"");"
73757,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/RegistryBuilderTest.java,46,,"        builder.password(""password"");"
73758,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/RegistryBuilderTest.java,60,,"        builder.protocol(""protocol"");"
73759,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/RegistryBuilderTest.java,67,,"        builder.transporter(""transporter"");"
73760,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/RegistryBuilderTest.java,81,,"        builder.server(""server"");"
73761,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/RegistryBuilderTest.java,88,,"        builder.client(""client"");"
73762,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/RegistryBuilderTest.java,95,,"        builder.cluster(""cluster"");"
73763,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/RegistryBuilderTest.java,102,,"        builder.group(""group"");"
73764,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/RegistryBuilderTest.java,109,,"        builder.version(""version"");"
73765,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/RegistryBuilderTest.java,130,,"        builder.file(""file"");"
73766,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/RegistryBuilderTest.java,172,,"        builder.appendParameter(""default.num"", ""one"").appendParameter(""num"", ""ONE"");"
73767,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/RegistryBuilderTest.java,172,,"        builder.appendParameter(""default.num"", ""one"").appendParameter(""num"", ""ONE"");"
73768,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/RegistryBuilderTest.java,172,,"        builder.appendParameter(""default.num"", ""one"").appendParameter(""num"", ""ONE"");"
73769,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/RegistryBuilderTest.java,172,,"        builder.appendParameter(""default.num"", ""one"").appendParameter(""num"", ""ONE"");"
73770,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ServiceBuilderTest.java,39,,"        builder.path(""path"");"
73771,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ServiceBuilderTest.java,72,,"        builder.providerIds(""providerIds"");"
73772,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/url/InvokerSideConfigUrlTest.java,64,,"            {""subscribe"", ""subscribe"", ""boolean"", true, false, """", """", """", """", """"},"
73773,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/url/InvokerSideConfigUrlTest.java,64,,"            {""subscribe"", ""subscribe"", ""boolean"", true, false, """", """", """", """", """"},"
73774,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/url/InvokerSideConfigUrlTest.java,65,,"            {""dynamic"", ""dynamic"", ""boolean"", true, false, """", """", """", """", """"},"
73775,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/url/InvokerSideConfigUrlTest.java,69,,"            {""timeout"", ""registry.timeout"", ""int"", 5000, 9000, """", """", """", """", """"},"
73776,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/url/InvokerSideConfigUrlTest.java,69,,"            {""timeout"", ""registry.timeout"", ""int"", 5000, 9000, """", """", """", """", """"},"
73777,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/url/InvokerSideConfigUrlTest.java,70,,"            {""file"", ""registry.file"", ""string"", """", ""regConfForServiceTable.log"", """", """", """", """", """"},"
73778,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/url/InvokerSideConfigUrlTest.java,78,,"            {""actives"", ""eatTiger.actives"", ""int"", 0, 90, """", """", """", """", """"},"
73779,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/url/InvokerSideConfigUrlTest.java,81,,"            {""async"", ""eatTiger.async"", ""boolean"", false, true, """", """", """", """", """"},"
73780,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/url/InvokerSideConfigUrlTest.java,91,,"            {""retries"", ""retries"", ""int"", 2, 5, """", """", """", """", """"},"
73781,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/url/InvokerSideConfigUrlTest.java,92,,"            {""connections"", ""connections"", ""boolean"", 100, 20, """", """", """", """", """"},"
73782,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/url/InvokerSideConfigUrlTest.java,93,,"            {""loadbalance"", ""loadbalance"", ""string"", ""random"", ""roundrobin"", ""leastactive"", """", """", """"},"
73783,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/url/InvokerSideConfigUrlTest.java,97,,"            {""check"", ""check"", ""boolean"", false, true, """", """", """", """", """"},"
73784,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/url/InvokerSideConfigUrlTest.java,102,,"            {""proxy"", ""proxy"", ""boolean"", ""javassist"", ""jdk"", """", """", """", """", """"},"
73785,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/url/InvokerSideConfigUrlTest.java,103,,"            {""client"", ""client"", ""string"", ""netty"", ""mina"", """", """", """", """", """"},"
73786,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/url/InvokerSideConfigUrlTest.java,105,,"            {""owner"", ""owner"", ""string"", """", ""haomin,ludvik"", """", """", """", """", """"},"
73787,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/url/InvokerSideConfigUrlTest.java,107,,"            {""cluster"", ""cluster"", ""string"", ""failover"", ""failfast"", ""failsafe"", ""failback"", ""forking"", """", """"},"
73788,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/url/UrlTestBase.java,63,,"            {""proxy"", ""proxy"", ""string"", ""javassist"", ""jdk"", ""javassist"", """", """", """", """"},"
73789,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/url/UrlTestBase.java,64,,"            {""actives"", ""actives"", ""int"", 0, 90, """", """", """", """", """"},"
73790,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/url/UrlTestBase.java,66,,"            {""deprecated"", ""deprecated"", ""boolean"", false, true, """", """", """", """", """"},"
73791,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/url/UrlTestBase.java,67,,"            {""dynamic"", ""dynamic"", ""boolean"", true, false, """", """", """", """", """"},"
73792,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/utils/ReferenceConfigCacheTest.java,43,,"        MockReferenceConfig config = buildMockReferenceConfig(""org.apache.dubbo.config.utils.service.FooService"", ""group1"", ""1.0.0"");"
73793,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/utils/ReferenceConfigCacheTest.java,43,,"        MockReferenceConfig config = buildMockReferenceConfig(""org.apache.dubbo.config.utils.service.FooService"", ""group1"", ""1.0.0"");"
73794,./TargetProjects/dubbo/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/utils/ReferenceConfigCacheTest.java,43,,"        MockReferenceConfig config = buildMockReferenceConfig(""org.apache.dubbo.config.utils.service.FooService"", ""group1"", ""1.0.0"");"
73795,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/main/java/org/apache/dubbo/config/spring/schema/DubboBeanDefinitionParser.java,86,,"    @SuppressWarnings(""unchecked"")"
73796,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/AbstractRegistryService.java,62,,"            logger.info(""Register service: "" + url.getServiceKey() + "",url:"" + url);"
73797,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/AbstractRegistryService.java,98,,"            throw new IllegalArgumentException(""service == null"");"
73798,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/ConfigTest.java,104,,"    @Disabled(""waiting-to-fix"")"
73799,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/ConfigTest.java,129,,"            String hello = demoService.sayName(""hello"");"
73800,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/ConfigTest.java,151,,"                    .application(new ApplicationConfig(""consumer""))"
73801,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/ConfigTest.java,165,,"    @SuppressWarnings(""unchecked"")"
73802,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/ConfigTest.java,287,,"            List<URL> urls = registryService.getRegistered().get(""org.apache.dubbo.config.spring.api.DemoService"");"
73803,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/ConfigTest.java,290,,"            assertEquals(""dubbo://"" + NetUtils.getLocalHost() + "":20824/org.apache.dubbo.config.spring.api.DemoService"", urls.get(0).toIdentityString());"
73804,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/ConfigTest.java,389,,"                assertEquals(""aop:say:hello"", demoActionBySetter.getDemoService().sayName(""hello""));"
73805,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/ConfigTest.java,429,,"        service.setProtocol(new ProtocolConfig(""dubbo"", 20880));"
73806,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/ConfigTest.java,516,,"                DemoService demoService = (DemoService) ctx.getBean(""demoService"");"
73807,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/ConfigTest.java,517,,"                assertEquals(""say:world"", demoService.sayName(""world""));"
73808,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/ConfigTest.java,647,,"            ApplicationConfig application = (ApplicationConfig) providerContext.getBean(""application"");"
73809,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/ConfigTest.java,652,,"            assertEquals(""N/A"", registry.getAddress());"
73810,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/ConfigTest.java,698,,"            assertEquals(""world"", url.getParameter(""owner""));"
73811,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/ConfigTest.java,712,,"        SysProps.setProperty(""dubbo.protocol.port"", ""20899""); // override fail"
73812,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/ConfigTest.java,748,,"        SysProps.setProperty(""dubbo.application.name"", ""sysover"");"
73813,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/ConfigTest.java,748,,"        SysProps.setProperty(""dubbo.application.name"", ""sysover"");"
73814,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/ConfigTest.java,749,,"        SysProps.setProperty(""dubbo.application.owner"", ""sysowner"");"
73815,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/ConfigTest.java,749,,"        SysProps.setProperty(""dubbo.application.owner"", ""sysowner"");"
73816,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/ConfigTest.java,750,,"        SysProps.setProperty(""dubbo.registry.address"", ""N/A"");"
73817,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/ConfigTest.java,751,,"        SysProps.setProperty(""dubbo.protocol.name"", ""dubbo"");"
73818,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/beans/factory/annotation/MergedAnnotationTest.java,43,,"        Assertions.assertEquals(""group"", reference2.group());"
73819,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/beans/factory/annotation/MergedAnnotationTest.java,44,,"        Assertions.assertEquals(""2.0"", reference2.version());"
73820,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/beans/factory/annotation/ReferenceAnnotationBeanPostProcessorTest.java,122,,"    @Reference(id = ""helloService"", methods = @Method(name = ""sayHello"", timeout = 100))"
73821,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/beans/factory/annotation/ReferenceAnnotationBeanPostProcessorTest.java,146,,"        Assertions.assertNotNull(context.getBean(""myDemoService""));"
73822,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/beans/factory/annotation/ReferenceAnnotationBeanPostProcessorTest.java,155,,"        Assertions.assertEquals(defaultHelloServiceResult + directInvokeSuffix, defaultHelloService.sayHello(""Mercy""));"
73823,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/beans/factory/annotation/ReferenceCreatorTest.java,86,,"            services = {""service1"", ""service2"", ""service3"", ""service2"", ""service1""},"
73824,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/beans/factory/annotation/ReferenceCreatorTest.java,86,,"            services = {""service1"", ""service2"", ""service3"", ""service2"", ""service1""},"
73825,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/context/annotation/DubboComponentScanRegistrarTest.java,61,,"        String value = demoService.sayName(""Mercy"");"
73826,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/context/annotation/DubboComponentScanRegistrarTest.java,63,,"        Assertions.assertEquals(""Hello,Mercy"", value);"
73827,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/context/annotation/EnableDubboTest.java,75,,"        String value = demoService.sayName(""Mercy"");"
73828,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/context/annotation/EnableDubboTest.java,77,,"        Assertions.assertEquals(""Hello,Mercy"", value);"
73829,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/context/annotation/consumer/ConsumerConfiguration.java,72,,"    @Reference(version = ""2.5.7"", url = remoteURL)"
73830,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/context/annotation/consumer/test/TestConsumerConfiguration.java,43,,"            version = ""2.5.7"","
73831,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/context/annotation/consumer/test/TestConsumerConfiguration.java,45,,"            application = ""dubbo-demo-application"","
73832,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/context/annotation/consumer/test/TestConsumerConfiguration.java,46,,"            filter = ""mymock"")"
73833,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/reference/ReferenceKeyTest.java,117,,"            Assertions.fail(""Reference bean check failed"");"
73834,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/reference/ReferenceKeyTest.java,198,,"        @DubboReference(methods = @Method(name = ""sayHello"", timeout = 100, retries = 0))"
73835,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/reference/ReferenceKeyTest.java,211,,"        @DubboReference(check = false, parameters = {""a"", ""2"", ""b"", ""1""}, filter = {""echo""})"
73836,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/reference/ReferenceKeyTest.java,237,,"    @ImportResource({""classpath:/org/apache/dubbo/config/spring/init-reference-keys.xml"","
73837,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/reference/ReferenceKeyTest.java,238,,"            ""classpath:/org/apache/dubbo/config/spring/init-reference-properties.xml""})"
73838,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/reference/ReferenceKeyTest.java,242,,"        @DubboReference(group = ""demo"", version = ""1.2.3"", consumer=""my-consumer"", init=false,"
73839,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/reference/ReferenceKeyTest.java,242,,"        @DubboReference(group = ""demo"", version = ""1.2.3"", consumer=""my-consumer"", init=false,"
73840,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/reference/javaconfig/JavaConfigReferenceBeanTest.java,75,,"        Assertions.assertNotNull(helloServiceMap.get(""helloServiceImpl""));"
73841,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/reference/javaconfig/JavaConfigReferenceBeanTest.java,80,,"        Assertions.assertEquals(""demo"", referenceBean.getGroup());"
73842,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/reference/javaconfig/JavaConfigReferenceBeanTest.java,227,,"            Assertions.fail(""Should not load application"");"
73843,./TargetProjects/dubbo/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/reference/javaconfig/JavaConfigReferenceBeanTest.java,310,,"        @DubboService(group = ""${myapp.group}"")"
73844,./TargetProjects/dubbo/dubbo-configcenter/dubbo-configcenter-nacos/src/test/java/org/apache/dubbo/configcenter/support/nacos/NacosDynamicConfigurationTest.java,62,,"        put(""dubbo.properties"", ""test"", ""aaa=bbb"");"
73845,./TargetProjects/dubbo/dubbo-configcenter/dubbo-configcenter-nacos/src/test/java/org/apache/dubbo/configcenter/support/nacos/NacosDynamicConfigurationTest.java,80,,"        config.addListener(""AService.configurators"", listener1);"
73846,./TargetProjects/dubbo/dubbo-configcenter/dubbo-configcenter-nacos/src/test/java/org/apache/dubbo/configcenter/support/nacos/NacosDynamicConfigurationTest.java,82,,"        config.addListener(""testapp.tag-router"", listener3);"
73847,./TargetProjects/dubbo/dubbo-configcenter/dubbo-configcenter-zookeeper/src/test/java/org/apache/dubbo/configcenter/support/zookeeper/ZookeeperDynamicConfigurationTest.java,110,,"        configuration.addListener(""service:version:group.configurators"", listener1);"
73848,./TargetProjects/dubbo/dubbo-configcenter/dubbo-configcenter-zookeeper/src/test/java/org/apache/dubbo/configcenter/support/zookeeper/ZookeeperDynamicConfigurationTest.java,112,,"        configuration.addListener(""appname.tag-router"", listener3);"
73849,./TargetProjects/dubbo/dubbo-configcenter/dubbo-configcenter-zookeeper/src/test/java/org/apache/dubbo/configcenter/support/zookeeper/ZookeeperDynamicConfigurationTest.java,140,,"        String content = ""test"";"
73850,./TargetProjects/dubbo/dubbo-filter/dubbo-filter-cache/src/test/java/org/apache/dubbo/cache/filter/CacheFilterTest.java,81,,"    @MethodSource(""cacheFactories"")"
73851,./TargetProjects/dubbo/dubbo-filter/dubbo-filter-cache/src/test/java/org/apache/dubbo/cache/support/expiring/ExpiringCacheFactoryTest.java,52,,"        cache.put(""testKey"", ""testValue"");"
73852,./TargetProjects/dubbo/dubbo-filter/dubbo-filter-cache/src/test/java/org/apache/dubbo/cache/support/expiring/ExpiringCacheFactoryTest.java,52,,"        cache.put(""testKey"", ""testValue"");"
73853,./TargetProjects/dubbo/dubbo-filter/dubbo-filter-validation/src/test/java/org/apache/dubbo/validation/filter/ValidationFilterTest.java,55,,"        given(invoker.invoke(invocation)).willReturn(new AppResponse(""success""));"
73854,./TargetProjects/dubbo/dubbo-filter/dubbo-filter-validation/src/test/java/org/apache/dubbo/validation/filter/ValidationFilterTest.java,57,,"        given(invocation.getMethodName()).willReturn(""echo1"");"
73855,./TargetProjects/dubbo/dubbo-filter/dubbo-filter-validation/src/test/java/org/apache/dubbo/validation/filter/ValidationFilterTest.java,59,,"        given(invocation.getArguments()).willReturn(new Object[]{""arg1""});"
73856,./TargetProjects/dubbo/dubbo-filter/dubbo-filter-validation/src/test/java/org/apache/dubbo/validation/support/jvalidation/JValidatorTest.java,35,,"            URL url = URL.valueOf(""test://test:11/org.apache.dubbo.validation.support.jvalidation.mock.JValidatorTestTarget"");"
73857,./TargetProjects/dubbo/dubbo-metadata/dubbo-metadata-api/src/main/java/org/apache/dubbo/metadata/AbstractServiceNameMapping.java,59,,"            logger.info(subscribedURL.getServiceInterface() + "" mapping to "" + serviceNames + "" instructed by provided-by set by user."");"
73858,./TargetProjects/dubbo/dubbo-metadata/dubbo-metadata-api/src/main/java/org/apache/dubbo/metadata/MetadataService.java,97,,"        throw new UnsupportedOperationException(""This operation is not supported for consumer."");"
73859,./TargetProjects/dubbo/dubbo-metadata/dubbo-metadata-api/src/test/java/org/apache/dubbo/metadata/MetadataInfoTest.java,30,,"        MetadataInfo metadataInfo = new MetadataInfo(""demo"");"
73860,./TargetProjects/dubbo/dubbo-metadata/dubbo-metadata-api/src/test/java/org/apache/dubbo/metadata/rest/SpringRestService.java,59,,"        String result = header + "" , "" + header2 + "" , "" + param;"
73861,./TargetProjects/dubbo/dubbo-metadata/dubbo-metadata-api/src/test/java/org/apache/dubbo/metadata/rest/StandardRestService.java,60,,"        String result = header + "" , "" + header2 + "" , "" + param;"
73862,./TargetProjects/dubbo/dubbo-metadata/dubbo-metadata-processor/src/test/java/org/apache/dubbo/metadata/annotation/processing/builder/MapTypeDefinitionBuilderTest.java,93,,"                ""java.lang.String"","
73863,./TargetProjects/dubbo/dubbo-metadata/dubbo-metadata-processor/src/test/java/org/apache/dubbo/metadata/annotation/processing/util/AnnotationUtilsTest.java,99,,"        assertEquals(""org.apache.dubbo.config.annotation.Service"", iterator.next().getAnnotationType().toString());"
73864,./TargetProjects/dubbo/dubbo-metadata/dubbo-metadata-processor/src/test/java/org/apache/dubbo/metadata/annotation/processing/util/AnnotationUtilsTest.java,179,,"        assertEquals(""javax.ws.rs.Path"", findAnnotation(testType, Path.class).getAnnotationType().toString());"
73865,./TargetProjects/dubbo/dubbo-metadata/dubbo-metadata-processor/src/test/java/org/apache/dubbo/metadata/annotation/processing/util/FieldUtilsTest.java,112,,"        testGetDeclaredField(type, ""str"", String.class);"
73866,./TargetProjects/dubbo/dubbo-metadata/dubbo-metadata-processor/src/test/java/org/apache/dubbo/metadata/annotation/processing/util/LoggerUtilsTest.java,40,,"        info(""Hello,%s"", ""World"");"
73867,./TargetProjects/dubbo/dubbo-metadata/dubbo-metadata-processor/src/test/java/org/apache/dubbo/metadata/annotation/processing/util/MethodUtilsTest.java,169,,"        ExecutableElement declaringMethod = findMethod(getType(TestService.class), ""echo"", ""java.lang.String"");"
73868,./TargetProjects/dubbo/dubbo-metadata/dubbo-metadata-processor/src/test/java/org/apache/dubbo/metadata/annotation/processing/util/MethodUtilsTest.java,169,,"        ExecutableElement declaringMethod = findMethod(getType(TestService.class), ""echo"", ""java.lang.String"");"
73869,./TargetProjects/dubbo/dubbo-metadata/dubbo-metadata-processor/src/test/java/org/apache/dubbo/metadata/annotation/processing/util/ServiceAnnotationUtilsTest.java,70,,"        assertEquals(""org.apache.dubbo.config.annotation.Service"", SERVICE_ANNOTATION_TYPE);"
73870,./TargetProjects/dubbo/dubbo-metadata/dubbo-metadata-processor/src/test/java/org/apache/dubbo/metadata/annotation/processing/util/TypeUtilsTest.java,220,,"        assertEquals(""org.apache.dubbo.metadata.tools.TestServiceImpl"", iterator.next().toString());"
73871,./TargetProjects/dubbo/dubbo-metadata/dubbo-metadata-processor/src/test/java/org/apache/dubbo/metadata/annotation/processing/util/TypeUtilsTest.java,221,,"        assertEquals(""org.apache.dubbo.metadata.tools.GenericTestService"", iterator.next().toString());"
73872,./TargetProjects/dubbo/dubbo-metadata/dubbo-metadata-processor/src/test/java/org/apache/dubbo/metadata/annotation/processing/util/TypeUtilsTest.java,222,,"        assertEquals(""org.apache.dubbo.metadata.tools.DefaultTestService"", iterator.next().toString());"
73873,./TargetProjects/dubbo/dubbo-metadata/dubbo-metadata-processor/src/test/java/org/apache/dubbo/metadata/annotation/processing/util/TypeUtilsTest.java,224,,"        assertEquals(""org.apache.dubbo.metadata.tools.TestService"", iterator.next().toString());"
73874,./TargetProjects/dubbo/dubbo-metadata/dubbo-metadata-processor/src/test/java/org/apache/dubbo/metadata/annotation/processing/util/TypeUtilsTest.java,225,,"        assertEquals(""java.lang.AutoCloseable"", iterator.next().toString());"
73875,./TargetProjects/dubbo/dubbo-metadata/dubbo-metadata-processor/src/test/java/org/apache/dubbo/metadata/annotation/processing/util/TypeUtilsTest.java,226,,"        assertEquals(""java.io.Serializable"", iterator.next().toString());"
73876,./TargetProjects/dubbo/dubbo-metadata/dubbo-metadata-processor/src/test/java/org/apache/dubbo/metadata/annotation/processing/util/TypeUtilsTest.java,227,,"        assertEquals(""java.util.EventListener"", iterator.next().toString());"
73877,./TargetProjects/dubbo/dubbo-metadata/dubbo-metadata-processor/src/test/java/org/apache/dubbo/metadata/rest/SpringRestService.java,59,,"        String result = header + "" , "" + header2 + "" , "" + param;"
73878,./TargetProjects/dubbo/dubbo-metadata/dubbo-metadata-processor/src/test/java/org/apache/dubbo/metadata/rest/StandardRestService.java,60,,"        String result = header + "" , "" + header2 + "" , "" + param;"
73879,./TargetProjects/dubbo/dubbo-metadata/dubbo-metadata-report-nacos/src/main/java/org/apache/dubbo/metadata/store/nacos/NacosMetadataReport.java,308,,"            logger.error(""Failed to remove "" + identifier + "" from nacos , cause: "" + t.getMessage(), t);"
73880,./TargetProjects/dubbo/dubbo-metadata/dubbo-metadata-report-redis/src/main/java/org/apache/dubbo/metadata/store/redis/RedisMetadataReport.java,135,,"            logger.error(""Failed to put "" + metadataIdentifier + "" to redis cluster "" + v + "", cause: "" + e.getMessage(), e);"
73881,./TargetProjects/dubbo/dubbo-metadata/dubbo-metadata-report-redis/src/main/java/org/apache/dubbo/metadata/store/redis/RedisMetadataReport.java,135,,"            logger.error(""Failed to put "" + metadataIdentifier + "" to redis cluster "" + v + "", cause: "" + e.getMessage(), e);"
73882,./TargetProjects/dubbo/dubbo-metadata/dubbo-metadata-report-redis/src/main/java/org/apache/dubbo/metadata/store/redis/RedisMetadataReport.java,161,,"            logger.error(""Failed to delete "" + metadataIdentifier + "" from redis cluster , cause: "" + e.getMessage(), e);"
73883,./TargetProjects/dubbo/dubbo-metadata/dubbo-metadata-report-redis/src/main/java/org/apache/dubbo/metadata/store/redis/RedisMetadataReport.java,161,,"            logger.error(""Failed to delete "" + metadataIdentifier + "" from redis cluster , cause: "" + e.getMessage(), e);"
73884,./TargetProjects/dubbo/dubbo-metadata/dubbo-metadata-report-redis/src/main/java/org/apache/dubbo/metadata/store/redis/RedisMetadataReport.java,170,,"            logger.error(""Failed to delete "" + metadataIdentifier + "" from redis , cause: "" + e.getMessage(), e);"
73885,./TargetProjects/dubbo/dubbo-metadata/dubbo-metadata-report-redis/src/main/java/org/apache/dubbo/metadata/store/redis/RedisMetadataReport.java,187,,"            logger.error(""Failed to get "" + metadataIdentifier + "" from redis cluster , cause: "" + e.getMessage(), e);"
73886,./TargetProjects/dubbo/dubbo-metadata/dubbo-metadata-report-zookeeper/src/test/java/org/apache/dubbo/metadata/store/zookeeper/ZookeeperMetadataReportTest.java,76,,"        String interfaceName = ""org.apache.dubbo.metadata.store.zookeeper.ZookeeperMetadataReport4TstService"";"
73887,./TargetProjects/dubbo/dubbo-metadata/dubbo-metadata-report-zookeeper/src/test/java/org/apache/dubbo/metadata/store/zookeeper/ZookeeperMetadataReportTest.java,130,,"        String version = ""1.0.0"";"
73888,./TargetProjects/dubbo/dubbo-metadata/dubbo-metadata-report-zookeeper/src/test/java/org/apache/dubbo/metadata/store/zookeeper/ZookeeperMetadataReportTest.java,132,,"        String application = ""etc-metadata-report-consumer-test"";"
73889,./TargetProjects/dubbo/dubbo-metadata/dubbo-metadata-report-zookeeper/src/test/java/org/apache/dubbo/metadata/store/zookeeper/ZookeeperMetadataReportTest.java,133,,"        String revision = ""90980"";"
73890,./TargetProjects/dubbo/dubbo-metadata/dubbo-metadata-report-zookeeper/src/test/java/org/apache/dubbo/metadata/store/zookeeper/ZookeeperMetadataReportTest.java,134,,"        String protocol = ""xxx"";"
73891,./TargetProjects/dubbo/dubbo-monitor/dubbo-monitor-api/src/test/java/org/apache/dubbo/monitor/support/AbstractMonitorFactoryTest.java,65,,"        URL url = URL.valueOf(""dubbo://"" + NetUtils.getLocalAddress().getHostAddress() + "":2233"");"
73892,./TargetProjects/dubbo/dubbo-monitor/dubbo-monitor-api/src/test/java/org/apache/dubbo/monitor/support/MonitorFilterTest.java,118,,"        Invocation invocation = new RpcInvocation(""aaa"", MonitorService.class.getName(), """", new Class<?>[0], new Object[0]);"
73893,./TargetProjects/dubbo/dubbo-monitor/dubbo-monitor-default/src/test/java/org/apache/dubbo/monitor/dubbo/DubboMonitorTest.java,99,,"                .addParameter(MonitorService.APPLICATION, ""morgan"")"
73894,./TargetProjects/dubbo/dubbo-monitor/dubbo-monitor-default/src/test/java/org/apache/dubbo/monitor/dubbo/DubboMonitorTest.java,100,,"                .addParameter(MonitorService.INTERFACE, ""MemberService"")"
73895,./TargetProjects/dubbo/dubbo-monitor/dubbo-monitor-default/src/test/java/org/apache/dubbo/monitor/dubbo/DubboMonitorTest.java,101,,"                .addParameter(MonitorService.METHOD, ""findPerson"")"
73896,./TargetProjects/dubbo/dubbo-monitor/dubbo-monitor-default/src/test/java/org/apache/dubbo/monitor/dubbo/DubboMonitorTest.java,102,,"                .addParameter(MonitorService.CONSUMER, ""10.20.153.11"")"
73897,./TargetProjects/dubbo/dubbo-monitor/dubbo-monitor-default/src/test/java/org/apache/dubbo/monitor/dubbo/MetricsFilterTest.java,142,,"        Invocation invocation = new RpcInvocation(""sayName"", DemoService.class.getName(), """", new Class<?>[]{Integer.class}, new Object[0]);"
73898,./TargetProjects/dubbo/dubbo-monitor/dubbo-monitor-default/src/test/java/org/apache/dubbo/monitor/dubbo/MetricsFilterTest.java,160,,"        Assertions.assertEquals(100, dubboClient.getMethodCountPerCategory(0).get(""success"").get(timestamp));"
73899,./TargetProjects/dubbo/dubbo-monitor/dubbo-monitor-default/src/test/java/org/apache/dubbo/monitor/dubbo/MetricsFilterTest.java,329,,"                methodMetricMap.get(""org.apache.dubbo.monitor.dubbo.service.DemoService.void sayName()"").get(""success_bucket_count""));"
73900,./TargetProjects/dubbo/dubbo-monitor/dubbo-monitor-default/src/test/java/org/apache/dubbo/monitor/dubbo/MetricsFilterTest.java,331,,"                methodMetricMap.get(""org.apache.dubbo.monitor.dubbo.service.DemoService.void echo(Integer)"").get(""success_bucket_count""));"
73901,./TargetProjects/dubbo/dubbo-monitor/dubbo-monitor-default/src/test/java/org/apache/dubbo/monitor/dubbo/StatisticsTest.java,36,,"        URL statistics = new URLBuilder(DUBBO_PROTOCOL, ""10.20.153.10"", 0)"
73902,./TargetProjects/dubbo/dubbo-plugin/dubbo-auth/src/test/java/org/apache/dubbo/auth/AccessKeyAuthenticatorTest.java,46,,"        URL url = URL.valueOf(""dubbo://10.10.10.10:2181"")"
73903,./TargetProjects/dubbo/dubbo-plugin/dubbo-auth/src/test/java/org/apache/dubbo/auth/AccessKeyAuthenticatorTest.java,48,,"                .addParameter(CommonConstants.APPLICATION_KEY, ""test"")"
73904,./TargetProjects/dubbo/dubbo-plugin/dubbo-auth/src/test/java/org/apache/dubbo/auth/AccessKeyAuthenticatorTest.java,54,,"        when(helper.getSignature(eq(url), eq(invocation), eq(""sk""), anyString())).thenReturn(""dubbo"");"
73905,./TargetProjects/dubbo/dubbo-plugin/dubbo-auth/src/test/java/org/apache/dubbo/auth/filter/ProviderAuthFilterTest.java,55,,"        URL url = URL.valueOf(""dubbo://10.10.10.10:2181"")"
73906,./TargetProjects/dubbo/dubbo-plugin/dubbo-auth/src/test/java/org/apache/dubbo/auth/filter/ProviderAuthFilterTest.java,58,,"                .addParameter(CommonConstants.APPLICATION_KEY, ""test"")"
73907,./TargetProjects/dubbo/dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/command/impl/PortTelnetTest.java,55,,"        given(mockInvoker.getUrl()).willReturn(URL.valueOf(""dubbo://127.0.0.1:"" + availablePort + ""/demo""));"
73908,./TargetProjects/dubbo/dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/legacy/ChangeTelnetHandlerTest.java,56,,"        given(mockChannel.getAttribute(""telnet.service"")).willReturn(""org.apache.dubbo.rpc.protocol.dubbo.support.DemoService"");"
73909,./TargetProjects/dubbo/dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/legacy/service/generic/GenericServiceTest.java,70,,"                if (""getUsers"".equals(method)) {"
73910,./TargetProjects/dubbo/dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/legacy/service/generic/GenericServiceTest.java,82,,"                .application(new ApplicationConfig(""generic-test""))"
73911,./TargetProjects/dubbo/dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/legacy/service/generic/GenericServiceTest.java,83,,"                .registry(new RegistryConfig(""N/A""))"
73912,./TargetProjects/dubbo/dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/legacy/service/generic/GenericServiceTest.java,84,,"                .protocol(new ProtocolConfig(""dubbo"", 29581))"
73913,./TargetProjects/dubbo/dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/legacy/service/generic/GenericServiceTest.java,138,,"            user.put(""name"", ""actual.provider"");"
73914,./TargetProjects/dubbo/dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/legacy/service/generic/GenericServiceTest.java,175,,"                    .getExtension(""nativejava"").serialize(null, bos).writeObject(name);"
73915,./TargetProjects/dubbo/dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/textui/TKvTest.java,29,,"        tKv.add(""KEY-2"", ""1234567890"");"
73916,./TargetProjects/dubbo/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/client/migration/MigrationInvoker.java,97,,"            Object object = consumerModel.getServiceMetadata().getAttribute(""currentClusterInvoker"");"
73917,./TargetProjects/dubbo/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/support/FailbackRegistry.java,218,,"                throw new IllegalStateException(""Failed to register "" + url + "" to registry "" + getUrl().getAddress() + "", cause: "" + t.getMessage(), t);"
73918,./TargetProjects/dubbo/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/support/FailbackRegistry.java,218,,"                throw new IllegalStateException(""Failed to register "" + url + "" to registry "" + getUrl().getAddress() + "", cause: "" + t.getMessage(), t);"
73919,./TargetProjects/dubbo/dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/support/FailbackRegistry.java,220,,"                logger.error(""Failed to register "" + url + "", waiting for retry, cause: "" + t.getMessage(), t);"
73920,./TargetProjects/dubbo/dubbo-registry/dubbo-registry-api/src/test/java/org/apache/dubbo/registry/CacheableFailbackRegistryTest.java,90,,"        URL url2 = url1.setHost(""192.168.1.1"");"
73921,./TargetProjects/dubbo/dubbo-registry/dubbo-registry-api/src/test/java/org/apache/dubbo/registry/ZKTools.java,49,,"        client = CuratorFrameworkFactory.newClient(""127.0.0.1:2181"", 60 * 1000, 60 * 1000,"
73922,./TargetProjects/dubbo/dubbo-registry/dubbo-registry-api/src/test/java/org/apache/dubbo/registry/ZKTools.java,131,,"        String str = ""---\n"" +"
73923,./TargetProjects/dubbo/dubbo-registry/dubbo-registry-api/src/test/java/org/apache/dubbo/registry/ZKTools.java,141,,"                ""..."";"
73924,./TargetProjects/dubbo/dubbo-registry/dubbo-registry-api/src/test/java/org/apache/dubbo/registry/client/ServiceDiscoveryTest.java,67,,"        DefaultServiceInstance serviceInstance = new DefaultServiceInstance(""A"", ""127.0.0.1"", 8080);"
73925,./TargetProjects/dubbo/dubbo-registry/dubbo-registry-api/src/test/java/org/apache/dubbo/registry/client/event/listener/ServiceInstancesChangedListenerTest.java,139,,"        Mockito.doReturn(metadataInfo_111).when(metadataService).getMetadataInfo(""111"");"
73926,./TargetProjects/dubbo/dubbo-registry/dubbo-registry-api/src/test/java/org/apache/dubbo/registry/client/event/listener/ServiceInstancesChangedListenerTest.java,140,,"        Mockito.doReturn(metadataInfo_222).when(metadataService).getMetadataInfo(""222"");"
73927,./TargetProjects/dubbo/dubbo-registry/dubbo-registry-api/src/test/java/org/apache/dubbo/registry/client/event/listener/ServiceInstancesChangedListenerTest.java,152,,"        serviceNames.add(""app1"");"
73928,./TargetProjects/dubbo/dubbo-registry/dubbo-registry-api/src/test/java/org/apache/dubbo/registry/client/event/listener/ServiceInstancesChangedListenerTest.java,198,,"            List<URL> serviceUrls = listener.getAddresses(service1 + "":dubbo"", consumerURL);"
73929,./TargetProjects/dubbo/dubbo-registry/dubbo-registry-api/src/test/java/org/apache/dubbo/registry/client/event/listener/ServiceInstancesChangedListenerTest.java,214,,"        serviceNames.add(""app2"");"
73930,./TargetProjects/dubbo/dubbo-registry/dubbo-registry-api/src/test/java/org/apache/dubbo/registry/client/event/listener/ServiceInstancesChangedListenerTest.java,243,,"            Assertions.assertTrue(serviceUrls2.get(0).getIp().contains(""30.10.""));"
73931,./TargetProjects/dubbo/dubbo-registry/dubbo-registry-api/src/test/java/org/apache/dubbo/registry/client/migration/DefaultMigrationAddressComparatorTest.java,49,,"        Mockito.when(url.getDisplayServiceKey()).thenReturn(""test"");"
73932,./TargetProjects/dubbo/dubbo-registry/dubbo-registry-api/src/test/java/org/apache/dubbo/registry/support/AbstractRegistryFactoryTest.java,82,,"        URL url = URL.valueOf(""dubbo://"" + NetUtils.getLocalAddress().getHostAddress() + "":2233"");"
73933,./TargetProjects/dubbo/dubbo-registry/dubbo-registry-api/src/test/java/org/apache/dubbo/registry/support/AbstractRegistryTest.java,58,,"        mockUrl = new ServiceConfigURL(""dubbo"", ""192.168.0.1"", 2200);"
73934,./TargetProjects/dubbo/dubbo-registry/dubbo-registry-api/src/test/java/org/apache/dubbo/registry/support/AbstractRegistryTest.java,58,,"        mockUrl = new ServiceConfigURL(""dubbo"", ""192.168.0.1"", 2200);"
73935,./TargetProjects/dubbo/dubbo-registry/dubbo-registry-api/src/test/java/org/apache/dubbo/registry/support/AbstractRegistryTest.java,321,,"        URL url2 = new ServiceConfigURL(""dubbo"", ""192.168.0.2"", 2201, parametersConsumer);"
73936,./TargetProjects/dubbo/dubbo-registry/dubbo-registry-api/src/test/java/org/apache/dubbo/registry/support/AbstractRegistryTest.java,324,,"        URL url3 = new ServiceConfigURL(""dubbo"", ""192.168.0.3"", 2202, parametersConsumer);"
73937,./TargetProjects/dubbo/dubbo-registry/dubbo-registry-api/src/test/java/org/apache/dubbo/registry/support/FailbackRegistryTest.java,201,,"                throw new RuntimeException(""can not invoke!"");"
73938,./TargetProjects/dubbo/dubbo-registry/dubbo-registry-dns/src/test/java/org/apache/dubbo/registry/dns/DNSServiceDiscoveryTest.java,134,,"        Mockito.when(dnsResolver.resolve(""Test.Service."")).thenReturn(resolveResult);"
73939,./TargetProjects/dubbo/dubbo-registry/dubbo-registry-kubernetes/src/test/java/org/apache/dubbo/registry/kubernetes/KubernetesServiceDiscoveryTest.java,76,,"                .withNewMetadata().withName(""TestServer"").withLabels(selector).endMetadata()"
73940,./TargetProjects/dubbo/dubbo-registry/dubbo-registry-kubernetes/src/test/java/org/apache/dubbo/registry/kubernetes/KubernetesServiceDiscoveryTest.java,80,,"                .withNewMetadata().withName(""TestService"").endMetadata()"
73941,./TargetProjects/dubbo/dubbo-registry/dubbo-registry-kubernetes/src/test/java/org/apache/dubbo/registry/kubernetes/KubernetesServiceDiscoveryTest.java,88,,"                .addNewPort(""Test"", ""Test"", 12345, ""TCP"").endSubset()"
73942,./TargetProjects/dubbo/dubbo-registry/dubbo-registry-zookeeper/src/main/java/org/apache/dubbo/registry/zookeeper/ZookeeperRegistry.java,117,,"            logger.warn(""Failed to close zookeeper client "" + getUrl() + "", cause: "" + e.getMessage(), e);"
73943,./TargetProjects/dubbo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/telnet/support/TelnetUtils.java,37,,"                buf.append(""\r\n"");"
73944,./TargetProjects/dubbo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/telnet/support/command/HelpTelnetHandler.java,49,,"            buf.append(message + "" "" + help.parameter().replace(""\r\n"", "" "").replace(""\n"", "" ""));"
73945,./TargetProjects/dubbo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/AbstractClient.java,67,,"                            + "" connect to the server "" + getRemoteAddress() + "", cause: "" + t.getMessage(), t);"
73946,./TargetProjects/dubbo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/AbstractClient.java,192,,"                logger.warn(""No need to connect to server "" + getRemoteAddress() + "" from "" + getClass().getSimpleName() + "" """
73947,./TargetProjects/dubbo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/AbstractClient.java,193,,"                        + NetUtils.getLocalHost() + "" using dubbo version "" + Version.getVersion() + "", cause: client status is closed or closing."");"
73948,./TargetProjects/dubbo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/dispatcher/ChannelEventRunnable.java,59,,"                logger.warn(""ChannelEventRunnable handle "" + state + "" operation error, channel is "" + channel"
73949,./TargetProjects/dubbo/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/dispatcher/ChannelEventRunnable.java,59,,"                logger.warn(""ChannelEventRunnable handle "" + state + "" operation error, channel is "" + channel"
73950,./TargetProjects/dubbo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/codec/ExchangeCodecTest.java,196,,"                    ""Data length too large: "" + Bytes.bytes2int(new byte[]{1, 1, 1, 1})));"
73951,./TargetProjects/dubbo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/codec/TelnetCodecTest.java,193,,"        testDecode_assertEquals(""aaa"".getBytes(), ""aaa"", false);"
73952,./TargetProjects/dubbo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/exchange/support/header/HeaderExchangeChannelTest.java,104,,"        String message = ""this is a test message"";"
73953,./TargetProjects/dubbo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/exchange/support/header/HeaderExchangeChannelTest.java,248,,"        header.setAttribute(""test"", ""test"");"
73954,./TargetProjects/dubbo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/telnet/TelnetUtilsTest.java,38,,"        table.add(Arrays.asList(""abc"",""abc"",""abc""));"
73955,./TargetProjects/dubbo/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/transport/codec/DeprecatedExchangeCodec.java,314,,"            throw new IOException(StringUtils.toString(""Read object failed."", e));"
73956,./TargetProjects/dubbo/dubbo-remoting/dubbo-remoting-zookeeper-curator5/src/test/java/org/apache/dubbo/remoting/zookeeper/curator5/Curator5ZookeeperClientTest.java,99,,"            curatorClient.create(""/testPath"", true);"
73957,./TargetProjects/dubbo/dubbo-remoting/dubbo-remoting-zookeeper-curator5/src/test/java/org/apache/dubbo/remoting/zookeeper/curator5/Curator5ZookeeperClientTest.java,170,,"        curatorClient.create(path + ""/d.json"", value, true);"
73958,./TargetProjects/dubbo/dubbo-remoting/dubbo-remoting-zookeeper-curator5/src/test/java/org/apache/dubbo/remoting/zookeeper/curator5/support/AbstractZookeeperTransporterTest.java,50,,"        zookeeperClient = new Curator5ZookeeperTransporter().connect(URL.valueOf(""zookeeper://127.0.0.1:"" +"
73959,./TargetProjects/dubbo/dubbo-remoting/dubbo-remoting-zookeeper-curator5/src/test/java/org/apache/dubbo/remoting/zookeeper/curator5/support/AbstractZookeeperTransporterTest.java,69,,"        URL url = URL.valueOf(""zookeeper://127.0.0.1:"" + zkServerPort + ""/org.apache.dubbo.registry.RegistryService?backup=127.0.0.1:"" + 9099 + ""&application=metadatareport-local-xml-provider2&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=47418&specVersion=2.7.0-SNAPSHOT&timestamp=1547102428828"");"
73960,./TargetProjects/dubbo/dubbo-remoting/dubbo-remoting-zookeeper-curator5/src/test/java/org/apache/dubbo/remoting/zookeeper/curator5/support/AbstractZookeeperTransporterTest.java,69,,"        URL url = URL.valueOf(""zookeeper://127.0.0.1:"" + zkServerPort + ""/org.apache.dubbo.registry.RegistryService?backup=127.0.0.1:"" + 9099 + ""&application=metadatareport-local-xml-provider2&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=47418&specVersion=2.7.0-SNAPSHOT&timestamp=1547102428828"");"
73961,./TargetProjects/dubbo/dubbo-remoting/dubbo-remoting-zookeeper-curator5/src/test/java/org/apache/dubbo/remoting/zookeeper/curator5/support/AbstractZookeeperTransporterTest.java,72,,"        Assertions.assertEquals(stringList.get(0), ""127.0.0.1:"" + zkServerPort);"
73962,./TargetProjects/dubbo/dubbo-remoting/dubbo-remoting-zookeeper-curator5/src/test/java/org/apache/dubbo/remoting/zookeeper/curator5/support/AbstractZookeeperTransporterTest.java,95,,"        newZookeeperClient.getContent(""/dubbo/test"");"
73963,./TargetProjects/dubbo/dubbo-remoting/dubbo-remoting-zookeeper-curator5/src/test/java/org/apache/dubbo/remoting/zookeeper/curator5/support/AbstractZookeeperTransporterTest.java,99,,"        URL url2 = URL.valueOf(""zookeeper://127.0.0.1:"" + zkServerPort + ""/org.apache.dubbo.metadata.store.MetadataReport?address=zookeeper://127.0.0.1:2181&application=metadatareport-local-xml-provider2&cycle-report=false&interface=org.apache.dubbo.metadata.store.MetadataReport&retry-period=4590&retry-times=23&sync-report=true"");"
73964,./TargetProjects/dubbo/dubbo-remoting/dubbo-remoting-zookeeper/src/test/java/org/apache/dubbo/remoting/zookeeper/curator/CuratorZookeeperClientTest.java,99,,"            curatorClient.create(""/testPath"", true);"
73965,./TargetProjects/dubbo/dubbo-remoting/dubbo-remoting-zookeeper/src/test/java/org/apache/dubbo/remoting/zookeeper/curator/CuratorZookeeperClientTest.java,170,,"        curatorClient.create(path + ""/d.json"", value, true);"
73966,./TargetProjects/dubbo/dubbo-remoting/dubbo-remoting-zookeeper/src/test/java/org/apache/dubbo/remoting/zookeeper/curator/support/AbstractZookeeperTransporterTest.java,50,,"        zookeeperClient = new CuratorZookeeperTransporter().connect(URL.valueOf(""zookeeper://127.0.0.1:"" +"
73967,./TargetProjects/dubbo/dubbo-remoting/dubbo-remoting-zookeeper/src/test/java/org/apache/dubbo/remoting/zookeeper/curator/support/AbstractZookeeperTransporterTest.java,69,,"        URL url = URL.valueOf(""zookeeper://127.0.0.1:"" + zkServerPort + ""/org.apache.dubbo.registry.RegistryService?backup=127.0.0.1:"" + 9099 + ""&application=metadatareport-local-xml-provider2&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=47418&specVersion=2.7.0-SNAPSHOT&timestamp=1547102428828"");"
73968,./TargetProjects/dubbo/dubbo-remoting/dubbo-remoting-zookeeper/src/test/java/org/apache/dubbo/remoting/zookeeper/curator/support/AbstractZookeeperTransporterTest.java,69,,"        URL url = URL.valueOf(""zookeeper://127.0.0.1:"" + zkServerPort + ""/org.apache.dubbo.registry.RegistryService?backup=127.0.0.1:"" + 9099 + ""&application=metadatareport-local-xml-provider2&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=47418&specVersion=2.7.0-SNAPSHOT&timestamp=1547102428828"");"
73969,./TargetProjects/dubbo/dubbo-remoting/dubbo-remoting-zookeeper/src/test/java/org/apache/dubbo/remoting/zookeeper/curator/support/AbstractZookeeperTransporterTest.java,72,,"        Assertions.assertEquals(stringList.get(0), ""127.0.0.1:"" + zkServerPort);"
73970,./TargetProjects/dubbo/dubbo-remoting/dubbo-remoting-zookeeper/src/test/java/org/apache/dubbo/remoting/zookeeper/curator/support/AbstractZookeeperTransporterTest.java,95,,"        newZookeeperClient.getContent(""/dubbo/test"");"
73971,./TargetProjects/dubbo/dubbo-remoting/dubbo-remoting-zookeeper/src/test/java/org/apache/dubbo/remoting/zookeeper/curator/support/AbstractZookeeperTransporterTest.java,99,,"        URL url2 = URL.valueOf(""zookeeper://127.0.0.1:"" + zkServerPort + ""/org.apache.dubbo.metadata.store.MetadataReport?address=zookeeper://127.0.0.1:2181&application=metadatareport-local-xml-provider2&cycle-report=false&interface=org.apache.dubbo.metadata.store.MetadataReport&retry-period=4590&retry-times=23&sync-report=true"");"
73972,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/main/java/org/apache/dubbo/rpc/AppResponse.java,226,,"        throw new UnsupportedOperationException(""AppResponse represents an concrete business response, there will be no status changes, you should get internal values directly."");"
73973,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/main/java/org/apache/dubbo/rpc/Invocation.java,87,,"    @Experimental(""Experiment api for supporting Object transmission"")"
73974,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/main/java/org/apache/dubbo/rpc/Result.java,102,,"    @Experimental(""Experiment api for supporting Object transmission"")"
73975,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/main/java/org/apache/dubbo/rpc/RpcContext.java,224,,"    @SuppressWarnings(""unchecked"")"
73976,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/main/java/org/apache/dubbo/rpc/RpcContext.java,511,,"    @Experimental(""Experiment api for supporting Object transmission"")"
73977,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/main/java/org/apache/dubbo/rpc/RpcContextAttachment.java,53,,"    @Experimental(""Experiment api for supporting Object transmission"")"
73978,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/main/java/org/apache/dubbo/rpc/RpcServiceContext.java,96,,"    @SuppressWarnings(""unchecked"")"
73979,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/main/java/org/apache/dubbo/rpc/filter/GenericFilter.java,134,,"                                    ""Generic serialization ["" +"
73980,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/main/java/org/apache/dubbo/rpc/protocol/AbstractInvoker.java,275,,"                    invocation.getMethodName() + "", provider: "" + getUrl() + "", cause: "" + e.getMessage(), e);"
73981,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/main/java/org/apache/dubbo/rpc/protocol/AbstractInvoker.java,275,,"                    invocation.getMethodName() + "", provider: "" + getUrl() + "", cause: "" + e.getMessage(), e);"
73982,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/RpcContextTest.java,54,,"        context.setLocalAddress(""127.0.0.1"", 20880);"
73983,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/RpcContextTest.java,92,,"        map.put(""_11"", ""1111"");"
73984,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/RpcContextTest.java,92,,"        map.put(""_11"", ""1111"");"
73985,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/RpcContextTest.java,93,,"        map.put(""_22"", ""2222"");"
73986,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/RpcContextTest.java,94,,"        map.put("".33"", ""3333"");"
73987,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/RpcContextTest.java,94,,"        map.put("".33"", ""3333"");"
73988,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/RpcContextTest.java,100,,"        context.setAttachment(""_11"", ""11.11"");"
73989,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/RpcContextTest.java,103,,"        context.setAttachment(null, ""22222"");"
73990,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/filter/CompatibleFilterFilterTest.java,55,,"        given(invocation.getArguments()).willReturn(new Object[]{""hello""});"
73991,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/filter/CompatibleFilterFilterTest.java,61,,"        result.setValue(""High"");"
73992,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/filter/CompatibleFilterFilterTest.java,63,,"        URL url = URL.valueOf(""test://test:11/test?group=dubbo&version=1.1"");"
73993,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/filter/ExceptionFilterTest.java,46,,"    @SuppressWarnings(""unchecked"")"
73994,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/filter/ExceptionFilterTest.java,54,,"        RpcInvocation invocation = new RpcInvocation(""sayHello"", DemoService.class.getName(), """", new Class<?>[]{String.class}, new Object[]{""world""});"
73995,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/filter/ExceptionFilterTest.java,54,,"        RpcInvocation invocation = new RpcInvocation(""sayHello"", DemoService.class.getName(), """", new Class<?>[]{String.class}, new Object[]{""world""});"
73996,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/filter/ExecuteLimitFilterTest.java,46,,"        when(invoker.invoke(any(Invocation.class))).thenReturn(new AppResponse(""result""));"
73997,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/filter/GenericFilterTest.java,55,,"        person.put(""name"", ""dubbo"");"
73998,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/filter/GenericFilterTest.java,55,,"        person.put(""name"", ""dubbo"");"
73999,./TargetProjects/dubbo/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/filter/GenericFilterTest.java,56,,"        person.put(""age"", 10);"
