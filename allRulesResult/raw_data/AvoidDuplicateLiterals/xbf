31000,./TargetProjects/camel/components/camel-hbase/src/test/java/org/apache/camel/component/hbase/processor/idempotent/HBaseIdempotentRepositoryIT.java,123,,"        template.sendBodyAndHeader(""direct:in"", ""a"", ""messageId"", key01);"
31001,./TargetProjects/camel/components/camel-hbase/src/test/java/org/apache/camel/component/hbase/processor/idempotent/HBaseIdempotentRepositoryIT.java,123,,"        template.sendBodyAndHeader(""direct:in"", ""a"", ""messageId"", key01);"
31002,./TargetProjects/camel/components/camel-hdfs/src/generated/java/org/apache/camel/component/hdfs/HdfsEndpointConfigurer.java,90,,"        case ""schedulerproperties"":"
31003,./TargetProjects/camel/components/camel-hdfs/src/generated/java/org/apache/camel/component/hdfs/HdfsEndpointConfigurer.java,91,,"        case ""schedulerProperties"": target.setSchedulerProperties(property(camelContext, java.util.Map.class, value)); return true;"
31004,./TargetProjects/camel/components/camel-hdfs/src/main/java/org/apache/camel/component/hdfs/HdfsConfiguration.java,56,,"    @UriParam(label = ""advanced"")"
31005,./TargetProjects/camel/components/camel-hdfs/src/test/java/org/apache/camel/component/hdfs/HdfsConsumerTest.java,95,,"        String hdfsPath = ""hdfs://localhost/target/test/multiple-consumers"";"
31006,./TargetProjects/camel/components/camel-hdfs/src/test/java/org/apache/camel/component/hdfs/HdfsConsumerTest.java,138,,"        when(endpointConfig.getOwner()).thenReturn(""spiderman"");"
31007,./TargetProjects/camel/components/camel-hdfs/src/test/java/org/apache/camel/component/hdfs/HdfsOutputStreamTest.java,75,,"        String hdfsPath = ""hdfs://localhost/target/test/multiple-consumers"";"
31008,./TargetProjects/camel/components/camel-hdfs/src/test/java/org/apache/camel/component/hdfs/HdfsProducerSplitTest.java,60,,"            template.sendBody(""direct:start3"", ""CIAO"" + i);"
31009,./TargetProjects/camel/components/camel-hdfs/src/test/java/org/apache/camel/component/hdfs/HdfsProducerSplitTest.java,120,,"                        .to(""hdfs:localhost/"" + BASE_FILE.toUri() + ""1?fileSystemType=LOCAL&splitStrategy=MESSAGES:1"");"
31010,./TargetProjects/camel/components/camel-hdfs/src/test/java/org/apache/camel/component/hdfs/HdfsProducerTest.java,64,,"        template.sendBody(""direct:start1"", ""PAPPO"");"
31011,./TargetProjects/camel/components/camel-hdfs/src/test/java/org/apache/camel/component/hdfs/HdfsProducerTest.java,67,,"        Path file1 = new Path(""file:///"" + TEMP_DIR.toUri() + ""/test-camel1"");"
31012,./TargetProjects/camel/components/camel-hdfs/src/test/java/org/apache/camel/component/hdfs/HdfsProducerTest.java,204,,"        String txt = ""CIAO MONDO !"";"
31013,./TargetProjects/camel/components/camel-hdfs/src/test/java/org/apache/camel/component/hdfs/HdfsProducerTest.java,291,,"            template.sendBodyAndHeader(""direct:write_dynamic_filename"", ""CIAO"" + i, Exchange.FILE_NAME, ""file"" + i);"
31014,./TargetProjects/camel/components/camel-hdfs/src/test/java/org/apache/camel/component/hdfs/HdfsProducerTest.java,349,,"                        .to(""hdfs:localhost/"" + TEMP_DIR.toUri()"
31015,./TargetProjects/camel/components/camel-hdfs/src/test/java/org/apache/camel/component/hdfs/integration/HdfsAppendIT.java,81,,"                from(""direct:start1"")"
31016,./TargetProjects/camel/components/camel-hdfs/src/test/java/org/apache/camel/component/hdfs/integration/HdfsConsumerIntegrationIT.java,83,,"        deleteDirectory(""target/test"");"
31017,./TargetProjects/camel/components/camel-hdfs/src/test/java/org/apache/camel/component/hdfs/integration/HdfsConsumerIntegrationIT.java,99,,"        MockEndpoint resultEndpoint = context.getEndpoint(""mock:result"", MockEndpoint.class);"
31018,./TargetProjects/camel/components/camel-hdfs/src/test/java/org/apache/camel/component/hdfs/integration/HdfsConsumerIntegrationIT.java,104,,"                from(""hdfs:localhost/"" + file.toUri() + ""?fileSystemType=LOCAL&chunkSize=4096&initialDelay=0"")"
31019,./TargetProjects/camel/components/camel-hdfs/src/test/java/org/apache/camel/component/hdfs/integration/HdfsConsumerIntegrationIT.java,137,,"                from(""hdfs://"" + rootdir.toURI()"
31020,./TargetProjects/camel/components/camel-hdfs/src/test/java/org/apache/camel/component/hdfs/integration/HdfsConsumerIntegrationIT.java,296,,"                from(""hdfs:localhost/"" + file.toUri() + ""?fileSystemType=LOCAL&fileType=SEQUENCE_FILE&initialDelay=0"")"
31021,./TargetProjects/camel/components/camel-hdfs/src/test/java/org/apache/camel/component/hdfs/integration/HdfsProducerConsumerIntegrationIT.java,59,,"                        .to(""mock:result"");"
31022,./TargetProjects/camel/components/camel-headersmap/src/test/java/org/apache/camel/component/headersmap/FastHeadersMapFactoryTest.java,34,,"        assertNull(map.get(""foo""));"
31023,./TargetProjects/camel/components/camel-headersmap/src/test/java/org/apache/camel/component/headersmap/FastHeadersMapFactoryTest.java,36,,"        map.put(""foo"", ""cheese"");"
31024,./TargetProjects/camel/components/camel-headersmap/src/test/java/org/apache/camel/component/headersmap/FastHeadersMapFactoryTest.java,39,,"        assertEquals(""cheese"", map.get(""Foo""));"
31025,./TargetProjects/camel/components/camel-hl7/src/main/java/org/apache/camel/component/hl7/HL7Charset.java,34,,"    ISO_8859_1(""8859/1"", ""ISO-8859-1""),"
31026,./TargetProjects/camel/components/camel-hl7/src/test/java/org/apache/camel/component/hl7/AckExpressionTest.java,73,,"        assertEquals(""Problem!"", ack.getERR().getErrorCodeAndLocation(0).getCodeIdentifyingError()"
31027,./TargetProjects/camel/components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7ByteArrayRouteTest.java,69,,"        String out = template.requestBody(""mina:tcp://127.0.0.1:"" + getPort() + ""?sync=true&codec=#hl7codec"", in.toString(),"
31028,./TargetProjects/camel/components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7ByteArrayRouteTest.java,69,,"        String out = template.requestBody(""mina:tcp://127.0.0.1:"" + getPort() + ""?sync=true&codec=#hl7codec"", in.toString(),"
31029,./TargetProjects/camel/components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7DataFormatTest.java,52,,"        MockEndpoint mock = getMockEndpoint(""mock:marshal"");"
31030,./TargetProjects/camel/components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7DataFormatTest.java,55,,"        mock.message(0).body(String.class).contains(""MSA|AA|123"");"
31031,./TargetProjects/camel/components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7DataFormatTest.java,56,,"        mock.message(0).body(String.class).contains(""QRD|20080805120000"");"
31032,./TargetProjects/camel/components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7DataFormatTest.java,59,,"        template.sendBody(""direct:marshal"", message);"
31033,./TargetProjects/camel/components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7DataFormatTest.java,122,,"        mock.expectedHeaderReceived(HL7Constants.HL7_VERSION_ID, ""2.4"");"
31034,./TargetProjects/camel/components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7MLLPNettyCodecByteArrayRouteTest.java,71,,"                ""netty:tcp://127.0.0.1:"" + getPort() + ""?sync=true&encoders=#hl7encoder&decoders=#hl7decoder"", in.toString(),"
31035,./TargetProjects/camel/components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7MLLPNettyCodecByteArrayRouteTest.java,71,,"                ""netty:tcp://127.0.0.1:"" + getPort() + ""?sync=true&encoders=#hl7encoder&decoders=#hl7decoder"", in.toString(),"
31036,./TargetProjects/camel/components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7NettyRouteTest.java,75,,"                ""netty:tcp://127.0.0.1:"" + getPort() + ""?sync=true&decoders=#hl7decoder&encoders=#hl7encoder"", in.toString(),"
31037,./TargetProjects/camel/components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7NettyRouteTest.java,75,,"                ""netty:tcp://127.0.0.1:"" + getPort() + ""?sync=true&decoders=#hl7decoder&encoders=#hl7encoder"", in.toString(),"
31038,./TargetProjects/camel/components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7RouteTest.java,66,,"        String out = template.requestBody(""mina:tcp://127.0.0.1:"" + getPort() + ""?sync=true&codec=#hl7codec"", in.toString(),"
31039,./TargetProjects/camel/components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7RouteTest.java,66,,"        String out = template.requestBody(""mina:tcp://127.0.0.1:"" + getPort() + ""?sync=true&codec=#hl7codec"", in.toString(),"
31040,./TargetProjects/camel/components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7ValidateTest.java,50,,"        MockEndpoint mock = getMockEndpoint(""mock:unmarshal"");"
31041,./TargetProjects/camel/components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7ValidateTest.java,91,,"        MockEndpoint mock = getMockEndpoint(""mock:end"");"
31042,./TargetProjects/camel/components/camel-hl7/src/test/java/org/apache/camel/component/hl7/HL7XmlDataFormatTest.java,40,,"        MockEndpoint mock = getMockEndpoint(""mock:unmarshal"");"
31043,./TargetProjects/camel/components/camel-http-common/src/main/java/org/apache/camel/http/common/CamelServlet.java,136,,"        log.error(""Error processing request"", e);"
31044,./TargetProjects/camel/components/camel-http-common/src/main/java/org/apache/camel/http/common/HttpCommonEndpoint.java,48,,"    @UriParam(label = ""producer"", defaultValue = ""true"","
31045,./TargetProjects/camel/components/camel-http-common/src/main/java/org/apache/camel/http/common/HttpCommonEndpoint.java,48,,"    @UriParam(label = ""producer"", defaultValue = ""true"","
31046,./TargetProjects/camel/components/camel-http-common/src/main/java/org/apache/camel/http/common/HttpCommonEndpoint.java,61,,"    @UriParam(label = ""consumer"","
31047,./TargetProjects/camel/components/camel-http-common/src/main/java/org/apache/camel/http/common/HttpCommonEndpoint.java,93,,"    @UriParam(label = ""consumer,advanced"","
31048,./TargetProjects/camel/components/camel-http-common/src/main/java/org/apache/camel/http/common/HttpCommonEndpoint.java,141,,"    @UriParam(label = ""producer,security"","
31049,./TargetProjects/camel/components/camel-http-common/src/main/java/org/apache/camel/http/common/HttpCommonEndpoint.java,155,,"    @UriParam(label = ""producer,proxy"", description = ""Proxy hostname to use"")"
31050,./TargetProjects/camel/components/camel-http-common/src/main/java/org/apache/camel/http/common/HttpConfiguration.java,26,,"    @Metadata(label = ""producer,security"","
31051,./TargetProjects/camel/components/camel-http-common/src/main/java/org/apache/camel/http/common/HttpConfiguration.java,40,,"    @Metadata(label = ""producer,proxy"", description = ""Proxy hostname to use"")"
31052,./TargetProjects/camel/components/camel-http-common/src/test/java/org/apache/camel/http/common/HttpHeaderFilterStrategyTest.java,45,,"        assertFalse(filter.applyFilterToExternalHeaders(""content-type"", ""text/xml"", exchange));"
31053,./TargetProjects/camel/components/camel-http-common/src/test/java/org/apache/camel/http/common/HttpHeaderFilterStrategyTest.java,47,,"        assertFalse(filter.applyFilterToExternalHeaders(""cache-control"", ""no-cache"", exchange));"
31054,./TargetProjects/camel/components/camel-http-common/src/test/java/org/apache/camel/http/common/HttpHeaderFilterStrategyTest.java,49,,"        assertFalse(filter.applyFilterToExternalHeaders(""connection"", ""close"", exchange));"
31055,./TargetProjects/camel/components/camel-http-common/src/test/java/org/apache/camel/http/common/HttpHeaderFilterStrategyTest.java,55,,"        assertFalse(filter.applyFilterToExternalHeaders(""trailer"", ""Max-Forwards"", exchange));"
31056,./TargetProjects/camel/components/camel-http-common/src/test/java/org/apache/camel/http/common/HttpHeaderFilterStrategyTest.java,57,,"        assertFalse(filter.applyFilterToExternalHeaders(""transfer-encoding"", ""chunked"", exchange));"
31057,./TargetProjects/camel/components/camel-http-common/src/test/java/org/apache/camel/http/common/HttpHeaderFilterStrategyTest.java,59,,"        assertFalse(filter.applyFilterToExternalHeaders(""upgrade"", ""HTTP/2.0"", exchange));"
31058,./TargetProjects/camel/components/camel-http-common/src/test/java/org/apache/camel/http/common/HttpHeaderFilterStrategyTest.java,61,,"        assertFalse(filter.applyFilterToExternalHeaders(""via"", ""1.1 nowhere.com"", exchange));"
31059,./TargetProjects/camel/components/camel-http-common/src/test/java/org/apache/camel/http/common/HttpHeaderFilterStrategyTest.java,63,,"        assertFalse(filter.applyFilterToExternalHeaders(""warning"", ""199 Miscellaneous warning"", exchange));"
31060,./TargetProjects/camel/components/camel-http-common/src/test/java/org/apache/camel/http/common/HttpHeaderFilterStrategyTest.java,67,,"        assertTrue(filter.applyFilterToExternalHeaders(""CamelHeader"", ""test"", exchange));"
31061,./TargetProjects/camel/components/camel-http-common/src/test/java/org/apache/camel/http/common/HttpHeaderFilterStrategyTest.java,72,,"        assertFalse(filter.applyFilterToExternalHeaders(""host"", ""dummy.host.com"", exchange));"
31062,./TargetProjects/camel/components/camel-http-common/src/test/java/org/apache/camel/http/common/HttpRestHeaderFilterStrategyTest.java,35,,"        assertTrue(strategy.applyFilterToCamelHeaders(""uriToken1"", ""value"", NOT_USED));"
31063,./TargetProjects/camel/components/camel-http-common/src/test/java/org/apache/camel/http/common/HttpSendDynamicAwareTest.java,40,,"        assertEquals(""localhost"", result[0], ""Parse should not add port if http and not specified"");"
31064,./TargetProjects/camel/components/camel-http-common/src/test/java/org/apache/camel/http/common/cookie/CookieHandlerTest.java,58,,"                        ""http://www.sub.example.com/acme/foo"", 0, ""InstanceCookieHandler with ACCEPT_ORIGINAL_SERVER""),"
31065,./TargetProjects/camel/components/camel-http/src/generated/java/org/apache/camel/component/http/HttpEndpointConfigurer.java,73,,"        case ""httpclientoptions"":"
31066,./TargetProjects/camel/components/camel-http/src/generated/java/org/apache/camel/component/http/HttpEndpointConfigurer.java,74,,"        case ""httpClientOptions"": target.setHttpClientOptions(property(camelContext, java.util.Map.class, value)); return true;"
31067,./TargetProjects/camel/components/camel-http/src/main/java/org/apache/camel/component/http/HttpComponent.java,83,,"    @Metadata(label = ""advanced"","
31068,./TargetProjects/camel/components/camel-http/src/main/java/org/apache/camel/component/http/HttpComponent.java,108,,"                            + "" A timeout value of zero is interpreted as an infinite timeout."""
31069,./TargetProjects/camel/components/camel-http/src/main/java/org/apache/camel/component/http/HttpComponent.java,126,,"    @Metadata(label = ""producer,proxy"", enums = ""Basic,Digest,NTLM"", description = ""Proxy authentication method to use"")"
31070,./TargetProjects/camel/components/camel-http/src/main/java/org/apache/camel/component/http/HttpComponent.java,248,,"            proxyAuthScheme = secure ? ""https"" : ""http"";"
31071,./TargetProjects/camel/components/camel-http/src/main/java/org/apache/camel/component/http/HttpComponentVerifierExtension.java,56,,"        final boolean isRest = verifyParams.entrySet().stream().anyMatch(e -> e.getKey().startsWith(""rest.""));"
31072,./TargetProjects/camel/components/camel-http/src/main/java/org/apache/camel/component/http/HttpComponentVerifierExtension.java,60,,"            verifyParams.put(""httpUri"", buildHttpUriFromRestParameters(parameters));"
31073,./TargetProjects/camel/components/camel-http/src/main/java/org/apache/camel/component/http/HttpEndpoint.java,71,,"    @UriParam(label = ""advanced"", description = ""To use a custom HttpContext instance"")"
31074,./TargetProjects/camel/components/camel-http/src/main/java/org/apache/camel/component/http/HttpEndpoint.java,94,,"                            + "" A timeout value of zero is interpreted as an infinite timeout."""
31075,./TargetProjects/camel/components/camel-http/src/main/java/org/apache/camel/component/http/HttpEndpoint.java,112,,"    @UriParam(label = ""producer,advanced"", description = ""To use a custom CookieStore."""
31076,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/CamelComponentVerifierExtensionTest.java,125,,"        parameters.put(""httpUri"", getLocalServerUri(""/basic""));"
31077,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/CamelComponentVerifierTest.java,124,,"        parameters.put(""httpUri"", getLocalServerUri(""/basic""));"
31078,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/HttpAuthenticationTest.java,79,,"        Exchange exchange = template.request(""http://"" + localServer.getInetAddress().getHostName() + "":"""
31079,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/HttpBodyTest.java,53,,"                .registerHandler(""/post"", new BasicValidationHandler(POST.name(), null, getBody(), getExpectedContent()))"
31080,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/HttpCompressionTest.java,70,,"        expectedHeaders.put(CONTENT_ENCODING, ""gzip"");"
31081,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/HttpDefaultPortNumberTest.java,48,,"                .registerHandler(""/search"", new BasicValidationHandler(GET.name(), null, null, getExpectedContent())).create();"
31082,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/HttpDefaultPortNumberTest.java,69,,"                from(""direct:start"")"
31083,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/HttpDefaultPortNumberTest.java,70,,"                        .to(""http://"" + localServer.getInetAddress().getHostName() + ""/search"");"
31084,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/HttpDefaultPortNumberTest.java,81,,"        assertRefused(exchange, "":80"");"
31085,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/HttpMethodsTest.java,59,,"                        new BasicValidationHandler(PATCH.name(), null, ""rocks camel?"", getExpectedContent()))"
31086,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/HttpProducerBridgeEndpointTest.java,47,,"        String[] absentHeaders = new String[] { ""qp1"", ""qp2"", ""qp3"", ""qp4"", ""qp5"" };"
31087,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/HttpProducerBridgeEndpointTest.java,47,,"        String[] absentHeaders = new String[] { ""qp1"", ""qp2"", ""qp3"", ""qp4"", ""qp5"" };"
31088,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/HttpProducerBridgeEndpointTest.java,47,,"        String[] absentHeaders = new String[] { ""qp1"", ""qp2"", ""qp3"", ""qp4"", ""qp5"" };"
31089,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/HttpProducerBridgeEndpointTest.java,47,,"        String[] absentHeaders = new String[] { ""qp1"", ""qp2"", ""qp3"", ""qp4"", ""qp5"" };"
31090,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/HttpProducerBridgeEndpointTest.java,47,,"        String[] absentHeaders = new String[] { ""qp1"", ""qp2"", ""qp3"", ""qp4"", ""qp5"" };"
31091,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/HttpProducerSelectMethodTest.java,49,,"                .registerHandler(""/myget"", new BasicValidationHandler(GET.name(), null, null, getExpectedContent()))"
31092,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/HttpProducerSelectMethodTest.java,71,,"        HttpComponent component = context.getComponent(""http"", HttpComponent.class);"
31093,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/HttpProducerSessionTest.java,68,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""New New World"", ""New New World"");"
31094,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/HttpProducerSessionTest.java,69,,"        template.sendBody(""direct:start"", ""World"");"
31095,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/HttpProducerTwoHeadersWithSameKeyTest.java,55,,"                    response.setHeader(""bar"", ""yes"");"
31096,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/HttpProducerTwoHeadersWithSameKeyTest.java,56,,"                    response.addHeader(""foo"", ""123"");"
31097,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/HttpRedirectTest.java,73,,"        String uri = ""http://"" + localServer.getInetAddress().getHostName() + "":"" + localServer.getLocalPort()"
31098,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/HttpSOTimeoutTest.java,58,,"        Exchange exchange = template.request(""http://"" + localServer.getInetAddress().getHostName() + "":"""
31099,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/HttpSendDynamicAwareBasicAuthTest.java,44,,"                .registerHandler(""/moes"", new DrinkAuthValidationHandler(GET.name(), null, null, ""drink""))"
31100,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/HttpSendDynamicAwareRawTest.java,46,,"                .registerHandler(""/moes"", new DrinkValidationHandler(GET.name(), ""drink=beer&password=se+%ret"", null, ""drink""))"
31101,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/HttpSendDynamicAwareTest.java,42,,"                .registerHandler(""/moes"", new DrinkValidationHandler(GET.name(), null, null, ""drink""))"
31102,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/HttpsProducerWithSystemPropertiesTest.java,65,,"        System.setProperty(""javax.net.ssl.keyStorePassword"", ""changeit"");"
31103,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/helper/HttpHelperTest.java,45,,"        HttpHelper.appendHeader(headers, ""foo"", ""a"");"
31104,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/helper/HttpHelperTest.java,46,,"        HttpHelper.appendHeader(headers, ""bar"", ""b"");"
31105,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/helper/HttpHelperTest.java,76,,"                createHttpEndpoint(false, ""http://camel.apache.org""));"
31106,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/helper/HttpHelperTest.java,105,,"        assertEquals(""http://www.google.com/search"", url);"
31107,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/helper/HttpHelperTest.java,193,,"        assertFalse(HttpHelper.isStatusCodeOk(199, ""200-299""));"
31108,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/helper/HttpHelperTest.java,197,,"        assertFalse(HttpHelper.isStatusCodeOk(300, ""301-304""));"
31109,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/helper/HttpHelperTest.java,205,,"        assertFalse(HttpHelper.isStatusCodeOk(199, ""200-299,404,301-304""));"
31110,./TargetProjects/camel/components/camel-http/src/test/java/org/apache/camel/component/http/rest/RestCamelComponentVerifierTest.java,115,,"        parameters.put(""method"", ""get"");"
31111,./TargetProjects/camel/components/camel-huawei/camel-huaweicloud-functiongraph/src/main/java/org/apache/camel/FunctionGraphEndpoint.java,63,,"    @UriParam(description = ""Proxy server ip/hostname"", displayName = ""Proxy server host"", secret = false, label = ""proxy"")"
31112,./TargetProjects/camel/components/camel-huawei/camel-huaweicloud-obs/src/main/java/org/apache/camel/component/huaweicloud/obs/OBSProducer.java,134,,"                LOG.error(""No bucket name given"");"
31113,./TargetProjects/camel/components/camel-hystrix/src/test/java/org/apache/camel/component/hystrix/processor/HystrixCircuitOpenTest.java,45,,"                template.asyncRequestBody(""direct:start"", ""Request Body"");"
31114,./TargetProjects/camel/components/camel-hystrix/src/test/java/org/apache/camel/component/hystrix/processor/HystrixCircuitOpenTest.java,45,,"                template.asyncRequestBody(""direct:start"", ""Request Body"");"
31115,./TargetProjects/camel/components/camel-hystrix/src/test/java/org/apache/camel/component/hystrix/processor/HystrixCircuitOpenTest.java,55,,"        getMockEndpoint(""mock:result"").expectedPropertyReceived(CircuitBreakerConstants.RESPONSE_SHORT_CIRCUITED, true);"
31116,./TargetProjects/camel/components/camel-hystrix/src/test/java/org/apache/camel/component/hystrix/processor/HystrixHierarchicalConfigTest.java,41,,"        def.setThreadPoolKey(""global-thread-key"");"
31117,./TargetProjects/camel/components/camel-hystrix/src/test/java/org/apache/camel/component/hystrix/processor/HystrixHierarchicalConfigTest.java,49,,"        registry.bind(""ref-hystrix"", ref);"
31118,./TargetProjects/camel/components/camel-hystrix/src/test/java/org/apache/camel/component/hystrix/processor/HystrixHierarchicalConfigTest.java,56,,"                        .groupKey(""local-conf-group-key"")"
31119,./TargetProjects/camel/components/camel-hystrix/src/test/java/org/apache/camel/component/hystrix/processor/HystrixRouteFallbackTest.java,28,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Fallback message"");"
31120,./TargetProjects/camel/components/camel-hystrix/src/test/java/org/apache/camel/component/hystrix/processor/HystrixRouteFallbackViaNetworkTest.java,28,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Fallback message"");"
31121,./TargetProjects/camel/components/camel-hystrix/src/test/java/org/apache/camel/component/hystrix/processor/HystrixRouteOkTest.java,54,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Bye World"");"
31122,./TargetProjects/camel/components/camel-hystrix/src/test/java/org/apache/camel/component/hystrix/processor/HystrixTimeoutTest.java,42,,"        Object out = template.requestBody(""direct:start"", ""fast"");"
31123,./TargetProjects/camel/components/camel-ical/src/test/java/org/apache/camel/component/ical/ICalDataFormatTest.java,79,,"        MockEndpoint endpoint = getMockEndpoint(""mock:result"");"
31124,./TargetProjects/camel/components/camel-iec60870/src/main/java/org/apache/camel/component/iec60870/BaseOptions.java,45,,"    @UriParam(enums = ""SIZE_1, SIZE_2"", label = ""connection"")"
31125,./TargetProjects/camel/components/camel-iec60870/src/main/java/org/apache/camel/component/iec60870/server/ServerOptions.java,33,,"    @UriParam(javaType = ""DataModuleOptions"", label = ""data"")"
31126,./TargetProjects/camel/components/camel-iec60870/src/test/java/org/apache/camel/component/iec60870/ConnectionIdTest.java,28,,"        ConnectionId id1 = new ConnectionId(""host"", 1202, ""id1"");"
31127,./TargetProjects/camel/components/camel-iec60870/src/test/java/org/apache/camel/component/iec60870/testing/ExampleApplication1.java,43,,"                        .to(""stream:err"");"
31128,./TargetProjects/camel/components/camel-ignite/src/generated/java/org/apache/camel/component/ignite/cache/IgniteCacheEndpointConfigurer.java,47,,"        case ""query"": target.setQuery(property(camelContext, org.apache.ignite.cache.query.Query.class, value)); return true;"
31129,./TargetProjects/camel/components/camel-ignite/src/generated/java/org/apache/camel/component/ignite/cache/IgniteCacheEndpointConfigurer.java,48,,"        case ""remotefilter"":"
31130,./TargetProjects/camel/components/camel-ignite/src/generated/java/org/apache/camel/component/ignite/cache/IgniteCacheEndpointConfigurer.java,49,,"        case ""remoteFilter"": target.setRemoteFilter(property(camelContext, org.apache.ignite.cache.CacheEntryEventSerializableFilter.class, value)); return true;"
31131,./TargetProjects/camel/components/camel-ignite/src/main/java/org/apache/camel/component/ignite/cache/IgniteCacheEndpoint.java,62,,"    @UriParam(label = ""consumer"")"
31132,./TargetProjects/camel/components/camel-ignite/src/main/java/org/apache/camel/component/ignite/cache/IgniteCacheProducer.java,97,,"    @SuppressWarnings(""unchecked"")"
31133,./TargetProjects/camel/components/camel-ignite/src/main/java/org/apache/camel/component/ignite/compute/IgniteComputeEndpoint.java,48,,"    @UriParam(label = ""producer"")"
31134,./TargetProjects/camel/components/camel-ignite/src/main/java/org/apache/camel/component/ignite/compute/IgniteComputeProducer.java,104,,"    @SuppressWarnings({ ""unchecked"", ""rawtypes"" })"
31135,./TargetProjects/camel/components/camel-ignite/src/main/java/org/apache/camel/component/ignite/queue/IgniteQueueEndpoint.java,49,,"    @UriParam(label = ""producer"")"
31136,./TargetProjects/camel/components/camel-ignite/src/test/java/org/apache/camel/component/ignite/IgniteCacheContinuousQueryTest.java,90,,"        IgniteCache<Integer, Person> cache = ignite().getOrCreateCache(""testcontinuous1"");"
31137,./TargetProjects/camel/components/camel-ignite/src/test/java/org/apache/camel/component/ignite/IgniteCacheTest.java,58,,"        template.requestBodyAndHeader(""ignite-cache:"" + resourceUid + ""?operation=PUT"", ""1234"","
31138,./TargetProjects/camel/components/camel-ignite/src/test/java/org/apache/camel/component/ignite/IgniteCacheTest.java,58,,"        template.requestBodyAndHeader(""ignite-cache:"" + resourceUid + ""?operation=PUT"", ""1234"","
31139,./TargetProjects/camel/components/camel-ignite/src/test/java/org/apache/camel/component/ignite/IgniteCacheTest.java,59,,"                IgniteConstants.IGNITE_CACHE_KEY, ""abcd"");"
31140,./TargetProjects/camel/components/camel-ignite/src/test/java/org/apache/camel/component/ignite/IgniteCacheTest.java,67,,"        template.requestBody(""ignite-cache:"" + resourceUid + ""?operation=PUT"", ImmutableMap.of(""abcd"", ""1234"", ""efgh"", ""5678""));"
31141,./TargetProjects/camel/components/camel-ignite/src/test/java/org/apache/camel/component/ignite/IgniteCacheTest.java,78,,"        String result = template.requestBody(""ignite-cache:"" + resourceUid + ""?operation=GET"", ""abcd"", String.class);"
31142,./TargetProjects/camel/components/camel-ignite/src/test/java/org/apache/camel/component/ignite/IgniteComputeTest.java,63,,"            template.requestBody(""ignite-compute:"" + resourceUid + ""?executionType=EXECUTE"","
31143,./TargetProjects/camel/components/camel-ignite/src/test/java/org/apache/camel/component/ignite/IgniteComputeTest.java,83,,"        Assertions.assertThat(result).isEqualTo(""hello"");"
31144,./TargetProjects/camel/components/camel-ignite/src/test/java/org/apache/camel/component/ignite/IgniteComputeTest.java,150,,"        Assertions.assertThat(colResult).containsExactly(""hello Camel"", ""hello Camel"", ""hello Camel"");"
31145,./TargetProjects/camel/components/camel-ignite/src/test/java/org/apache/camel/component/ignite/IgniteEventsTest.java,68,,"        cache.put(resourceUid, ""123"");"
31146,./TargetProjects/camel/components/camel-ignite/src/test/java/org/apache/camel/component/ignite/IgniteIdGenTest.java,45,,"                        template.requestBody(""ignite-idgen:"" + resourceUid + ""?initialValue=0&operation=GET"", null, Long.class))"
31147,./TargetProjects/camel/components/camel-ignite/src/test/java/org/apache/camel/component/ignite/IgniteMessagingTest.java,65,,"        template.requestBody(""ignite-messaging:"" + TOPIC1, 1);"
31148,./TargetProjects/camel/components/camel-ignite/src/test/java/org/apache/camel/component/ignite/IgniteQueueTest.java,56,,"        boolean result = template.requestBody(""ignite-queue:"" + resourceUid + ""?operation=ADD"", ""hello"", boolean.class);"
31149,./TargetProjects/camel/components/camel-ignite/src/test/java/org/apache/camel/component/ignite/IgniteQueueTest.java,56,,"        boolean result = template.requestBody(""ignite-queue:"" + resourceUid + ""?operation=ADD"", ""hello"", boolean.class);"
31150,./TargetProjects/camel/components/camel-ignite/src/test/java/org/apache/camel/component/ignite/IgniteQueueTest.java,56,,"        boolean result = template.requestBody(""ignite-queue:"" + resourceUid + ""?operation=ADD"", ""hello"", boolean.class);"
31151,./TargetProjects/camel/components/camel-ignite/src/test/java/org/apache/camel/component/ignite/IgniteQueueTest.java,80,,"        int size = template.requestBody(""ignite-queue:"" + resourceUid + ""?operation=SIZE"", ""hello"", int.class);"
31152,./TargetProjects/camel/components/camel-ignite/src/test/java/org/apache/camel/component/ignite/IgniteQueueTest.java,144,,"        Set<String> toAdd = Sets.newHashSet(""hello101"", ""hello102"", ""hello103"");"
31153,./TargetProjects/camel/components/camel-ignite/src/test/java/org/apache/camel/component/ignite/IgniteSetTest.java,51,,"        boolean result = template.requestBody(""ignite-set:"" + resourceUid + ""?operation=ADD"", ""hello"", boolean.class);"
31154,./TargetProjects/camel/components/camel-ignite/src/test/java/org/apache/camel/component/ignite/IgniteSetTest.java,51,,"        boolean result = template.requestBody(""ignite-set:"" + resourceUid + ""?operation=ADD"", ""hello"", boolean.class);"
31155,./TargetProjects/camel/components/camel-ignite/src/test/java/org/apache/camel/component/ignite/IgniteSetTest.java,51,,"        boolean result = template.requestBody(""ignite-set:"" + resourceUid + ""?operation=ADD"", ""hello"", boolean.class);"
31156,./TargetProjects/camel/components/camel-ignite/src/test/java/org/apache/camel/component/ignite/IgniteSetTest.java,75,,"        int size = template.requestBody(""ignite-set:"" + resourceUid + ""?operation=SIZE"", ""hello"", int.class);"
31157,./TargetProjects/camel/components/camel-infinispan/camel-infinispan-common/src/main/java/org/apache/camel/component/infinispan/InfinispanConfiguration.java,24,,"    @UriParam(label = ""producer"", defaultValue = ""PUT"", description = ""The operation to perform"")"
31158,./TargetProjects/camel/components/camel-infinispan/camel-infinispan-common/src/test/java/org/apache/camel/component/infinispan/InfinispanIdempotentRepositoryTestSupport.java,42,,"        assertTrue(getIdempotentRepository().add(""One""));"
31159,./TargetProjects/camel/components/camel-infinispan/camel-infinispan-common/src/test/java/org/apache/camel/component/infinispan/InfinispanIdempotentRepositoryTestSupport.java,43,,"        assertTrue(getIdempotentRepository().add(""Two""));"
31160,./TargetProjects/camel/components/camel-infinispan/camel-infinispan-common/src/test/java/org/apache/camel/component/infinispan/InfinispanProducerTestSupport.java,78,,"                .to(""direct:start"")"
31161,./TargetProjects/camel/components/camel-infinispan/camel-infinispan-common/src/test/java/org/apache/camel/component/infinispan/InfinispanProducerTestSupport.java,441,,"        getCache().put(KEY_ONE, ""existing value"");"
31162,./TargetProjects/camel/components/camel-infinispan/camel-infinispan-embedded/src/generated/java/org/apache/camel/component/infinispan/embedded/InfinispanEmbeddedComponentConfigurer.java,36,,"        case ""cacheContainer"": getOrCreateConfiguration(target).setCacheContainer(property(camelContext, org.infinispan.manager.EmbeddedCacheManager.class, value)); return true;"
31163,./TargetProjects/camel/components/camel-infinispan/camel-infinispan-embedded/src/generated/java/org/apache/camel/component/infinispan/embedded/InfinispanEmbeddedComponentConfigurer.java,38,,"        case ""cacheContainerConfiguration"": getOrCreateConfiguration(target).setCacheContainerConfiguration(property(camelContext, org.infinispan.configuration.cache.Configuration.class, value)); return true;"
31164,./TargetProjects/camel/components/camel-infinispan/camel-infinispan-embedded/src/generated/java/org/apache/camel/component/infinispan/embedded/InfinispanEmbeddedEndpointConfigurer.java,27,,"        case ""cacheContainer"": target.getConfiguration().setCacheContainer(property(camelContext, org.infinispan.manager.EmbeddedCacheManager.class, value)); return true;"
31165,./TargetProjects/camel/components/camel-infinispan/camel-infinispan-embedded/src/generated/java/org/apache/camel/component/infinispan/embedded/InfinispanEmbeddedEndpointConfigurer.java,29,,"        case ""cacheContainerConfiguration"": target.getConfiguration().setCacheContainerConfiguration(property(camelContext, org.infinispan.configuration.cache.Configuration.class, value)); return true;"
31166,./TargetProjects/camel/components/camel-infinispan/camel-infinispan-embedded/src/main/java/org/apache/camel/component/infinispan/embedded/InfinispanEmbeddedConfiguration.java,37,,"    @UriParam(label = ""consumer"", defaultValue = ""true"")"
31167,./TargetProjects/camel/components/camel-infinispan/camel-infinispan-embedded/src/test/java/org/apache/camel/component/infinispan/embedded/InfinispanEmbeddedAggregationRepositoryTest.java,38,,"                from(""direct:start"")"
31168,./TargetProjects/camel/components/camel-infinispan/camel-infinispan-embedded/src/test/java/org/apache/camel/component/infinispan/embedded/InfinispanEmbeddedProducerTest.java,51,,"                .to(""direct:start"")"
31169,./TargetProjects/camel/components/camel-infinispan/camel-infinispan-embedded/src/test/java/org/apache/camel/component/infinispan/embedded/InfinispanEmbeddedQueryProducerTest.java,54,,"        Exchange request = template.request(""direct:start"","
31170,./TargetProjects/camel/components/camel-infinispan/camel-infinispan/src/generated/java/org/apache/camel/component/infinispan/remote/InfinispanRemoteComponentConfigurer.java,36,,"        case ""cacheContainer"": getOrCreateConfiguration(target).setCacheContainer(property(camelContext, org.infinispan.client.hotrod.RemoteCacheManager.class, value)); return true;"
31171,./TargetProjects/camel/components/camel-infinispan/camel-infinispan/src/generated/java/org/apache/camel/component/infinispan/remote/InfinispanRemoteComponentConfigurer.java,38,,"        case ""cacheContainerConfiguration"": getOrCreateConfiguration(target).setCacheContainerConfiguration(property(camelContext, org.infinispan.client.hotrod.configuration.Configuration.class, value)); return true;"
31172,./TargetProjects/camel/components/camel-infinispan/camel-infinispan/src/generated/java/org/apache/camel/component/infinispan/remote/InfinispanRemoteComponentConfigurer.java,40,,"        case ""configurationproperties"":"
31173,./TargetProjects/camel/components/camel-infinispan/camel-infinispan/src/generated/java/org/apache/camel/component/infinispan/remote/InfinispanRemoteComponentConfigurer.java,41,,"        case ""configurationProperties"": getOrCreateConfiguration(target).setConfigurationProperties(property(camelContext, java.util.Map.class, value)); return true;"
31174,./TargetProjects/camel/components/camel-infinispan/camel-infinispan/src/generated/java/org/apache/camel/component/infinispan/remote/InfinispanRemoteEndpointConfigurer.java,27,,"        case ""cacheContainer"": target.getConfiguration().setCacheContainer(property(camelContext, org.infinispan.client.hotrod.RemoteCacheManager.class, value)); return true;"
31175,./TargetProjects/camel/components/camel-infinispan/camel-infinispan/src/generated/java/org/apache/camel/component/infinispan/remote/InfinispanRemoteEndpointConfigurer.java,29,,"        case ""cacheContainerConfiguration"": target.getConfiguration().setCacheContainerConfiguration(property(camelContext, org.infinispan.client.hotrod.configuration.Configuration.class, value)); return true;"
31176,./TargetProjects/camel/components/camel-infinispan/camel-infinispan/src/generated/java/org/apache/camel/component/infinispan/remote/InfinispanRemoteEndpointConfigurer.java,30,,"        case ""configurationproperties"":"
31177,./TargetProjects/camel/components/camel-infinispan/camel-infinispan/src/generated/java/org/apache/camel/component/infinispan/remote/InfinispanRemoteEndpointConfigurer.java,31,,"        case ""configurationProperties"": target.getConfiguration().setConfigurationProperties(property(camelContext, java.util.Map.class, value)); return true;"
31178,./TargetProjects/camel/components/camel-infinispan/camel-infinispan/src/main/java/org/apache/camel/component/infinispan/remote/InfinispanRemoteConfiguration.java,37,,"    @UriParam(label = ""common, security"")"
31179,./TargetProjects/camel/components/camel-infinispan/camel-infinispan/src/main/java/org/apache/camel/component/infinispan/remote/InfinispanRemoteConfiguration.java,48,,"    @UriParam(label = ""advanced"")"
31180,./TargetProjects/camel/components/camel-infinispan/camel-infinispan/src/test/java/org/apache/camel/component/infinispan/remote/InfinispanRemoteAggregationRepositoryIT.java,41,,"                from(""direct:start"")"
31181,./TargetProjects/camel/components/camel-infinispan/camel-infinispan/src/test/java/org/apache/camel/component/infinispan/remote/InfinispanRemoteConfigurationIT.java,54,,"                            ""misc_cache"","
31182,./TargetProjects/camel/components/camel-infinispan/camel-infinispan/src/test/java/org/apache/camel/component/infinispan/remote/InfinispanRemoteProducerIT.java,46,,"                .to(""direct:start"")"
31183,./TargetProjects/camel/components/camel-infinispan/camel-infinispan/src/test/java/org/apache/camel/component/infinispan/remote/InfinispanRemoteQueryProducerIT.java,68,,"        Exchange request = template.request(""direct:start"","
31184,./TargetProjects/camel/components/camel-influxdb/src/generated/java/org/apache/camel/component/influxdb/InfluxDbComponentConfigurer.java,27,,"        case ""influxDB"": target.setInfluxDB(property(camelContext, org.influxdb.InfluxDB.class, value)); return true;"
31185,./TargetProjects/camel/components/camel-influxdb/src/test/java/org/apache/camel/component/influxdb/InfluxDbProducerTest.java,44,,"                from(""direct:test"")"
31186,./TargetProjects/camel/components/camel-influxdb/src/test/java/org/apache/camel/component/influxdb/converters/CamelInfluxDbConverterTest.java,38,,"        pointInMapFormat.put(InfluxDbConstants.MEASUREMENT_NAME, ""testCPU"");"
31187,./TargetProjects/camel/components/camel-influxdb/src/test/java/org/apache/camel/component/influxdb/converters/CamelInfluxDbConverterTest.java,40,,"        pointInMapFormat.put(""busy"", value);"
31188,./TargetProjects/camel/components/camel-ipfs/src/test/java/org/apache/camel/component/ipfs/SimpleIPFSTest.java,79,,"                boolean notRunning = e.getCause().getMessage().contains(""Is IPFS running"");"
31189,./TargetProjects/camel/components/camel-ipfs/src/test/java/org/apache/camel/component/ipfs/SimpleIPFSTest.java,80,,"                assumeFalse(notRunning, ""IPFS is running"");"
31190,./TargetProjects/camel/components/camel-ipfs/src/test/java/org/apache/camel/component/ipfs/SimpleIPFSTest.java,93,,"                    from(""direct:start"").to(""ipfs:add"");"
31191,./TargetProjects/camel/components/camel-irc/src/main/java/org/apache/camel/component/irc/IrcConfiguration.java,51,,"    @UriParam(label = ""security"", secret = true)"
31192,./TargetProjects/camel/components/camel-irc/src/main/java/org/apache/camel/component/irc/IrcConfiguration.java,53,,"    @UriParam(label = ""common"")"
31193,./TargetProjects/camel/components/camel-irc/src/main/java/org/apache/camel/component/irc/IrcConfiguration.java,65,,"    @UriParam(defaultValue = ""true"")"
31194,./TargetProjects/camel/components/camel-irc/src/main/java/org/apache/camel/component/irc/IrcConfiguration.java,70,,"    @UriParam(defaultValue = ""true"", label = ""filter"")"
31195,./TargetProjects/camel/components/camel-irc/src/test/java/org/apache/camel/component/irc/IrcConfigurationTest.java,31,,"        IrcComponent component = context.getComponent(""irc"", IrcComponent.class);"
31196,./TargetProjects/camel/components/camel-irc/src/test/java/org/apache/camel/component/irc/IrcConfigurationTest.java,37,,"        assertEquals(""camelbot"", conf.getNickname());"
31197,./TargetProjects/camel/components/camel-irc/src/test/java/org/apache/camel/component/irc/IrcConfigurationTest.java,38,,"        assertEquals(""irc.freenode.net"", conf.getHostname());"
31198,./TargetProjects/camel/components/camel-irc/src/test/java/org/apache/camel/component/irc/IrcConfigurationTest.java,41,,"        assertEquals(""#camel"", channels.get(0).getName());"
31199,./TargetProjects/camel/components/camel-irc/src/test/java/org/apache/camel/component/irc/IrcConfigurationTest.java,74,,"        assertNotNull(conf.findChannel(""#smx""));"
31200,./TargetProjects/camel/components/camel-irc/src/test/java/org/apache/camel/component/irc/IrcEndpointTest.java,46,,"        channels.add(new IrcChannel(""#chan1"", null));"
31201,./TargetProjects/camel/components/camel-irc/src/test/java/org/apache/camel/component/irc/IrcEndpointTest.java,47,,"        channels.add(new IrcChannel(""#chan2"", ""chan2key""));"
31202,./TargetProjects/camel/components/camel-irc/src/test/java/org/apache/camel/component/irc/IrcProducerTest.java,97,,"        when(message.getBody(String.class)).thenReturn(""foo"");"
31203,./TargetProjects/camel/components/camel-ironmq/src/generated/java/org/apache/camel/component/ironmq/IronMQEndpointConfigurer.java,64,,"        case ""schedulerproperties"":"
31204,./TargetProjects/camel/components/camel-ironmq/src/generated/java/org/apache/camel/component/ironmq/IronMQEndpointConfigurer.java,65,,"        case ""schedulerProperties"": target.setSchedulerProperties(property(camelContext, java.util.Map.class, value)); return true;"
31205,./TargetProjects/camel/components/camel-ironmq/src/main/java/org/apache/camel/component/ironmq/IronMQConfiguration.java,53,,"    @UriParam(defaultValue = ""1"", label = ""consumer"")"
31206,./TargetProjects/camel/components/camel-ironmq/src/test/java/org/apache/camel/component/ironmq/IronMQBatchConsumerTest.java,68,,"        parameters.put(""projectId"", ""dummy"");"
31207,./TargetProjects/camel/components/camel-ironmq/src/test/java/org/apache/camel/component/ironmq/IronMQBatchDeleteConsumerTest.java,70,,"        parameters.put(""projectId"", ""dummy"");"
31208,./TargetProjects/camel/components/camel-ironmq/src/test/java/org/apache/camel/component/ironmq/IronMQBatchProducerTest.java,68,,"        parameters.put(""projectId"", ""dummy"");"
31209,./TargetProjects/camel/components/camel-ironmq/src/test/java/org/apache/camel/component/ironmq/IronMQComponentSpringTest.java,46,,"                exchange.getIn().setBody(""This is my message text."");"
31210,./TargetProjects/camel/components/camel-ironmq/src/test/java/org/apache/camel/component/ironmq/IronMQComponentTest.java,47,,"        template.sendBody(""direct:start"", ""some payload"");"
31211,./TargetProjects/camel/components/camel-ironmq/src/test/java/org/apache/camel/component/ironmq/IronMQComponentTest.java,62,,"                exchange.getIn().setBody(""This is my message text."");"
31212,./TargetProjects/camel/components/camel-ironmq/src/test/java/org/apache/camel/component/ironmq/IronMQComponentTest.java,102,,"        parameters.put(""projectId"", ""dummy"");"
31213,./TargetProjects/camel/components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalTest.java,36,,"        MockEndpoint mock = getMockEndpoint(""mock:reverse"");"
31214,./TargetProjects/camel/components/camel-jackson/src/test/java/org/apache/camel/component/jackson/converter/JacksonConversionsPojoTest.java,30,,"        context.getGlobalOptions().put(JacksonConstants.ENABLE_TYPE_CONVERTER, ""true"");"
31215,./TargetProjects/camel/components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalTest.java,38,,"        MockEndpoint mock = getMockEndpoint(""mock:reverse"");"
31216,./TargetProjects/camel/components/camel-jasypt/src/test/java/org/apache/camel/component/jasypt/JasyptPropertiesParserTest.java,36,,"    private static final String KNOW_DECRYPTED = ""tiger"";"
31217,./TargetProjects/camel/components/camel-jaxb/src/test/java/org/apache/camel/converter/jaxb/FilteringXmlStreamWriterTest.java,49,,"        lenient().when(nonXmlCharFiltererMock.filter(""value"")).thenReturn(""filteredValue"");"
31218,./TargetProjects/camel/components/camel-jaxb/src/test/java/org/apache/camel/converter/jaxb/FilteringXmlStreamWriterTest.java,49,,"        lenient().when(nonXmlCharFiltererMock.filter(""value"")).thenReturn(""filteredValue"");"
31219,./TargetProjects/camel/components/camel-jaxb/src/test/java/org/apache/camel/converter/jaxb/FilteringXmlStreamWriterTest.java,54,,"        filteringXmlStreamWriter.writeAttribute(""localName"", ""value"");"
31220,./TargetProjects/camel/components/camel-jaxb/src/test/java/org/apache/camel/converter/jaxb/FilteringXmlStreamWriterTest.java,60,,"        filteringXmlStreamWriter.writeAttribute(""namespaceURI"", ""localName"", ""value"");"
31221,./TargetProjects/camel/components/camel-jaxb/src/test/java/org/apache/camel/converter/jaxb/JaxbDataFormatSchemaValidationSpringTest.java,107,,"        assertTrue(cause.getMessage().contains(""org.xml.sax.SAXParseException""));"
31222,./TargetProjects/camel/components/camel-jaxb/src/test/java/org/apache/camel/example/Address.java,28,,"    @XmlElement(namespace = ""http://www.camel.apache.org/jaxb/example/address/1"")"
31223,./TargetProjects/camel/components/camel-jaxb/src/test/java/org/apache/camel/example/JAXBConvertTest.java,42,,"        assertEquals(123.45, purchaseOrder.getAmount(), 0, ""amount"");"
31224,./TargetProjects/camel/components/camel-jaxb/src/test/java/org/apache/camel/example/RouteWithErrorHandlerTest.java,38,,"        template.sendBody(""direct:start"", ""<purchaseOrder name='Wine' amount='123.45' price='2.22'/>"");"
31225,./TargetProjects/camel/components/camel-jaxb/src/test/java/org/apache/camel/jaxb/CamelJaxbFallbackConverterTest.java,54,,"        exchange.setProperty(Exchange.CHARSET_NAME, ""UTF-8"");"
31226,./TargetProjects/camel/components/camel-jaxb/src/test/java/org/apache/camel/jaxb/CamelJaxbTest.java,43,,"        MockEndpoint resultEndpoint = resolveMandatoryEndpoint(""mock:result"", MockEndpoint.class);"
31227,./TargetProjects/camel/components/camel-jaxb/src/test/java/org/apache/camel/jaxb/CamelJaxbTest.java,74,,"        person.setLastName(""bar"");"
31228,./TargetProjects/camel/components/camel-jaxb/src/test/java/org/apache/camel/jaxb/CamelJaxbTest.java,104,,"        person.setFirstName(""foo"");"
31229,./TargetProjects/camel/components/camel-jaxb/src/test/java/org/apache/camel/jaxb/CamelJaxbTest.java,192,,"                JaxbDataFormat dataFormat = new JaxbDataFormat(""org.apache.camel.foo.bar"");"
31230,./TargetProjects/camel/components/camel-jaxb/src/test/java/org/apache/camel/jaxb/FallbackTypeConverterShouldThrowExceptionTest.java,41,,"        getMockEndpoint(""mock:a"").expectedBodiesReceived(foo);"
31231,./TargetProjects/camel/components/camel-jaxb/src/test/java/org/apache/camel/jaxb/FallbackTypeConverterShouldThrowExceptionTest.java,42,,"        getMockEndpoint(""mock:b"").expectedBodiesReceived(foo);"
31232,./TargetProjects/camel/components/camel-jaxb/src/test/java/org/apache/camel/jaxb/FallbackTypeConverterShouldThrowExceptionTest.java,44,,"        template.sendBody(""direct:a"", foo);"
31233,./TargetProjects/camel/components/camel-jbpm/src/generated/java/org/apache/camel/component/jbpm/JBPMEndpointConfigurer.java,34,,"        case ""entities"": target.getConfiguration().setEntities(property(camelContext, java.util.List.class, value)); return true;"
31234,./TargetProjects/camel/components/camel-jbpm/src/generated/java/org/apache/camel/component/jbpm/JBPMEndpointConfigurer.java,53,,"        case ""parameters"": target.getConfiguration().setParameters(property(camelContext, java.util.Map.class, value)); return true;"
31235,./TargetProjects/camel/components/camel-jbpm/src/generated/java/org/apache/camel/component/jbpm/JBPMEndpointConfigurer.java,59,,"        case ""statuses"": target.getConfiguration().setStatuses(property(camelContext, java.util.List.class, value)); return true;"
31236,./TargetProjects/camel/components/camel-jbpm/src/test/java/org/apache/camel/component/jbpm/JBPMComponentIT.java,42,,"        getMockEndpoint(""mock:result"").expectedMessageCount(1);"
31237,./TargetProjects/camel/components/camel-jbpm/src/test/java/org/apache/camel/component/jbpm/JBPMComponentIT.java,53,,"        template.sendBodyAndHeaders(""direct:start"", null, headers);"
31238,./TargetProjects/camel/components/camel-jbpm/src/test/java/org/apache/camel/component/jbpm/workitem/CamelWorkItemHandlerIT.java,44,,"    @EndpointInject(""mock:result"")"
31239,./TargetProjects/camel/components/camel-jbpm/src/test/java/org/apache/camel/component/jbpm/workitem/CamelWorkItemHandlerIT.java,47,,"    @Produce(""direct:start"")"
31240,./TargetProjects/camel/components/camel-jbpm/src/test/java/org/apache/camel/component/jbpm/workitem/CamelWorkItemHandlerIT.java,58,,"                        .setBody(simple(""${body.getParameter(\""Request\"")}""))"
31241,./TargetProjects/camel/components/camel-jbpm/src/test/java/org/apache/camel/component/jbpm/workitem/CamelWorkItemHandlerIT.java,75,,"                        .throwException(new IllegalArgumentException(""Illegal contennt!""))"
31242,./TargetProjects/camel/components/camel-jbpm/src/test/java/org/apache/camel/component/jbpm/workitem/CamelWorkItemHandlerIT.java,89,,"            String expectedBody = ""helloRequest"";"
31243,./TargetProjects/camel/components/camel-jbpm/src/test/java/org/apache/camel/component/jbpm/workitem/CamelWorkItemHandlerIT.java,93,,"            workItem.setParameter(JBPMConstants.CAMEL_ENDPOINT_ID_WI_PARAM, ""start"");"
31244,./TargetProjects/camel/components/camel-jbpm/src/test/java/org/apache/camel/component/jbpm/workitem/CamelWorkItemHandlerIT.java,94,,"            workItem.setParameter(""Request"", expectedBody);"
31245,./TargetProjects/camel/components/camel-jcache/src/generated/java/org/apache/camel/component/jcache/JCacheEndpointConfigurer.java,31,,"        case ""cacheloaderfactory"":"
31246,./TargetProjects/camel/components/camel-jcache/src/generated/java/org/apache/camel/component/jcache/JCacheEndpointConfigurer.java,32,,"        case ""cacheLoaderFactory"": target.getConfiguration().setCacheLoaderFactory(property(camelContext, javax.cache.configuration.Factory.class, value)); return true;"
31247,./TargetProjects/camel/components/camel-jcache/src/generated/java/org/apache/camel/component/jcache/JCacheEndpointConfigurer.java,33,,"        case ""cachewriterfactory"":"
31248,./TargetProjects/camel/components/camel-jcache/src/generated/java/org/apache/camel/component/jcache/JCacheEndpointConfigurer.java,34,,"        case ""cacheWriterFactory"": target.getConfiguration().setCacheWriterFactory(property(camelContext, javax.cache.configuration.Factory.class, value)); return true;"
31249,./TargetProjects/camel/components/camel-jcache/src/generated/java/org/apache/camel/component/jcache/JCacheEndpointConfigurer.java,41,,"        case ""eventfilters"":"
31250,./TargetProjects/camel/components/camel-jcache/src/generated/java/org/apache/camel/component/jcache/JCacheEndpointConfigurer.java,42,,"        case ""eventFilters"": target.getConfiguration().setEventFilters(property(camelContext, java.util.List.class, value)); return true;"
31251,./TargetProjects/camel/components/camel-jcache/src/generated/java/org/apache/camel/component/jcache/JCacheEndpointConfigurer.java,47,,"        case ""expirypolicyfactory"":"
31252,./TargetProjects/camel/components/camel-jcache/src/generated/java/org/apache/camel/component/jcache/JCacheEndpointConfigurer.java,48,,"        case ""expiryPolicyFactory"": target.getConfiguration().setExpiryPolicyFactory(property(camelContext, javax.cache.configuration.Factory.class, value)); return true;"
31253,./TargetProjects/camel/components/camel-jcache/src/main/java/org/apache/camel/component/jcache/JCacheConfiguration.java,51,,"    @UriParam(label = ""advanced"")"
31254,./TargetProjects/camel/components/camel-jcache/src/test/java/org/apache/camel/component/jcache/JCacheProducerGetTest.java,42,,"        final Cache<Object, Object> cache = getCacheFromEndpoint(""jcache://test-cache"");"
31255,./TargetProjects/camel/components/camel-jcache/src/test/java/org/apache/camel/component/jcache/JCacheProducerInvokeTest.java,48,,"        final Cache<Object, Object> cache = getCacheFromEndpoint(""jcache://test-cache"");"
31256,./TargetProjects/camel/components/camel-jcache/src/test/java/org/apache/camel/component/jcache/JCacheProducerPutTest.java,39,,"        final Cache<Object, Object> cache = getCacheFromEndpoint(""jcache://test-cache"");"
31257,./TargetProjects/camel/components/camel-jcache/src/test/java/org/apache/camel/component/jcache/JCacheProducerRemoveTest.java,36,,"        final Cache<Object, Object> cache = getCacheFromEndpoint(""jcache://test-cache"");"
31258,./TargetProjects/camel/components/camel-jcache/src/test/java/org/apache/camel/component/jcache/JCacheProducerReplaceTest.java,38,,"        final Cache<Object, Object> cache = getCacheFromEndpoint(""jcache://test-cache"");"
31259,./TargetProjects/camel/components/camel-jcache/src/test/java/org/apache/camel/component/jcache/JCacheProducerReplaceTest.java,47,,"        headers.put(JCacheConstants.ACTION, ""REPLACE"");"
31260,./TargetProjects/camel/components/camel-jcache/src/test/java/org/apache/camel/component/jcache/JCacheProducerReplaceTest.java,49,,"        sendBody(""direct:replace"", val1, headers);"
31261,./TargetProjects/camel/components/camel-jcache/src/test/java/org/apache/camel/component/jcache/JCacheProducerReplaceTest.java,51,,"        MockEndpoint mock = getMockEndpoint(""mock:replace"");"
31262,./TargetProjects/camel/components/camel-jcache/src/test/java/org/apache/camel/component/jcache/JCacheProducerReplaceTest.java,58,,"                assertNotNull(exchange.getIn().getBody(), ""body"");"
31263,./TargetProjects/camel/components/camel-jcache/src/test/java/org/apache/camel/component/jcache/policy/CacheManagerFromRegistryTest.java,37,,"    private CacheManager cc = Caching.getCachingProvider().getCacheManager(URI.create(""hzsecond""), null);"
31264,./TargetProjects/camel/components/camel-jcache/src/test/java/org/apache/camel/component/jcache/policy/JCachePolicyProcessorTest.java,44,,"        MockEndpoint mock = getMockEndpoint(""mock:value"");"
31265,./TargetProjects/camel/components/camel-jcache/src/test/java/org/apache/camel/component/jcache/policy/JCachePolicyProcessorTest.java,45,,"        Cache cache = lookupCache(""simple"");"
31266,./TargetProjects/camel/components/camel-jcache/src/test/java/org/apache/camel/component/jcache/policy/JCachePolicyProcessorTest.java,48,,"        Object responseBody = this.template().requestBody(""direct:cached-simple"", key);"
31267,./TargetProjects/camel/components/camel-jcache/src/test/java/org/apache/camel/component/jcache/policy/JCachePolicyProcessorTest.java,162,,"        Object responseBody = this.template().requestBodyAndHeader(""direct:cached-byheader"", body, ""mykey"", key);"
31268,./TargetProjects/camel/components/camel-jcache/src/test/java/org/apache/camel/component/jcache/policy/JCachePolicyTest.java,48,,"        assertEquals(1, getMockEndpoint(""mock:value"").getExchanges().size());"
31269,./TargetProjects/camel/components/camel-jcache/src/test/java/org/apache/camel/component/jcache/policy/JCachePolicyTest.java,95,,"        assertEquals(generateValue(key), lookupCache(""setManagerNameExists"").get(key));"
31270,./TargetProjects/camel/components/camel-jcache/src/test/java/org/apache/camel/component/jcache/policy/SpringJCachePolicyTest.java,44,,"        MockEndpoint mock = getMockEndpoint(""mock:spring"");"
31271,./TargetProjects/camel/components/camel-jcache/src/test/java/org/apache/camel/component/jcache/policy/SpringJCachePolicyTest.java,56,,"        Object responseBody = this.template().requestBody(""direct:spring"", key);"
31272,./TargetProjects/camel/components/camel-jcache/src/test/java/org/apache/camel/component/jcache/policy/SpringJCachePolicyTest.java,59,,"        Cache cache = lookupCache(""spring"");"
31273,./TargetProjects/camel/components/camel-jcache/src/test/java/org/apache/camel/component/jcache/processor/idempotent/JCacheIdempotentRepositoryTest.java,66,,"        assertTrue(repository.add(""One""));"
31274,./TargetProjects/camel/components/camel-jcache/src/test/java/org/apache/camel/component/jcache/processor/idempotent/JCacheIdempotentRepositoryTest.java,67,,"        assertTrue(repository.add(""Two""));"
31275,./TargetProjects/camel/components/camel-jclouds/src/generated/java/org/apache/camel/component/jclouds/JcloudsComponentConfigurer.java,26,,"        case ""blobstores"":"
31276,./TargetProjects/camel/components/camel-jclouds/src/generated/java/org/apache/camel/component/jclouds/JcloudsComponentConfigurer.java,27,,"        case ""blobStores"": target.setBlobStores(property(camelContext, java.util.List.class, value)); return true;"
31277,./TargetProjects/camel/components/camel-jclouds/src/generated/java/org/apache/camel/component/jclouds/JcloudsComponentConfigurer.java,30,,"        case ""computeservices"":"
31278,./TargetProjects/camel/components/camel-jclouds/src/generated/java/org/apache/camel/component/jclouds/JcloudsComponentConfigurer.java,31,,"        case ""computeServices"": target.setComputeServices(property(camelContext, java.util.List.class, value)); return true;"
31279,./TargetProjects/camel/components/camel-jclouds/src/main/java/org/apache/camel/component/jclouds/JcloudsConfiguration.java,35,,"    @UriParam(label = ""producer,compute"")"
31280,./TargetProjects/camel/components/camel-jclouds/src/test/java/org/apache/camel/component/jclouds/JcloudsBlobStoreProducerTest.java,59,,"        template.sendBody(""direct:put"", ""Some message"");"
31281,./TargetProjects/camel/components/camel-jclouds/src/test/java/org/apache/camel/component/jclouds/JcloudsBlobStoreProducerTest.java,66,,"        template.sendBody(""direct:put-and-get"", message);"
31282,./TargetProjects/camel/components/camel-jclouds/src/test/java/org/apache/camel/component/jclouds/JcloudsBlobStoreProducerTest.java,87,,"        template.sendBody(""direct:put-and-count"", message);"
31283,./TargetProjects/camel/components/camel-jclouds/src/test/java/org/apache/camel/component/jclouds/JcloudsBlobStoreProducerTest.java,96,,"        template.sendBody(""direct:put-and-remove"", message);"
31284,./TargetProjects/camel/components/camel-jclouds/src/test/java/org/apache/camel/component/jclouds/JcloudsBlobStoreProducerTest.java,168,,"                        .to(""jclouds:blobstore:transient"").to(""mock:results"");"
31285,./TargetProjects/camel/components/camel-jclouds/src/test/java/org/apache/camel/component/jclouds/JcloudsSpringBlobstoreTest.java,61,,"        template.sendBody(""direct:start"", ""Some message"");"
31286,./TargetProjects/camel/components/camel-jclouds/src/test/java/org/apache/camel/component/jclouds/JcloudsSpringComputeTest.java,51,,"        template.sendBodyAndHeaders(""direct:start"", null, destroyHeaders(null, null));"
31287,./TargetProjects/camel/components/camel-jclouds/src/test/java/org/apache/camel/component/jclouds/JcloudsSpringComputeTest.java,113,,"        template.sendBodyAndHeaders(""direct:start"", null, createHeaders(""1"", ""default""));"
31288,./TargetProjects/camel/components/camel-jclouds/src/test/java/org/apache/camel/component/jclouds/JcloudsSpringComputeTest.java,134,,"        template.sendBodyAndHeaders(""direct:start"", null, createHeaders(""1"", ""other""));"
31289,./TargetProjects/camel/components/camel-jdbc/src/generated/java/org/apache/camel/component/jdbc/JdbcEndpointConfigurer.java,36,,"        case ""parameters"": target.setParameters(property(camelContext, java.util.Map.class, value)); return true;"
31290,./TargetProjects/camel/components/camel-jdbc/src/test/java/org/apache/camel/component/jdbc/AbstractJdbcGeneratedKeysTest.java,36,,"        Endpoint endpoint = context.getEndpoint(""direct:hello"");"
31291,./TargetProjects/camel/components/camel-jdbc/src/test/java/org/apache/camel/component/jdbc/JdbcGeneratedKeysTest.java,26,,"        super.testRetrieveGeneratedKeys(""insert into tableWithAutoIncr (content) values ('value2')"");"
31292,./TargetProjects/camel/components/camel-jdbc/src/test/java/org/apache/camel/component/jdbc/JdbcParameterizedQueryGeneratedKeysTest.java,36,,"        super.testRetrieveGeneratedKeys(""insert into tableWithAutoIncr (content) values (:?value)"", VALUE_MAP);"
31293,./TargetProjects/camel/components/camel-jdbc/src/test/java/org/apache/camel/component/jdbc/JdbcParameterizedQueryTest.java,34,,"        MockEndpoint mock = getMockEndpoint(""mock:result"");"
31294,./TargetProjects/camel/components/camel-jdbc/src/test/java/org/apache/camel/component/jdbc/JdbcParameterizedQueryTest.java,40,,"        jdbcParams.put(""name"", ""jstrachan"");"
31295,./TargetProjects/camel/components/camel-jdbc/src/test/java/org/apache/camel/component/jdbc/JdbcParameterizedQueryTest.java,42,,"        template.sendBodyAndHeaders(""direct:start"", ""select * from customer where id = 'cust1' and name = ? order by ID"","
31296,./TargetProjects/camel/components/camel-jetty-common/src/main/java/org/apache/camel/component/jetty/JettyHttpComponent.java,429,,"        filterHolder.setInitParameter(""deleteFiles"", ""true"");"
31297,./TargetProjects/camel/components/camel-jetty-common/src/main/java/org/apache/camel/component/jetty/JettyHttpComponent.java,512,,"              label = ""security"", secret = true)"
31298,./TargetProjects/camel/components/camel-jetty-common/src/main/java/org/apache/camel/component/jetty/JettyHttpComponent.java,552,,"    @Metadata(description = ""This option is used to set the ErrorHandler that Jetty server uses."", label = ""advanced"")"
31299,./TargetProjects/camel/components/camel-jetty-common/src/main/java/org/apache/camel/component/jetty/JettyHttpComponent.java,734,,"              label = ""consumer"")"
31300,./TargetProjects/camel/components/camel-jetty-common/src/main/java/org/apache/camel/component/jetty/JettyHttpComponent.java,1081,,"            config = CamelContextHelper.getRestConfiguration(getCamelContext(), ""jetty"");"
31301,./TargetProjects/camel/components/camel-jetty-common/src/main/java/org/apache/camel/component/jetty/JettyHttpEndpoint.java,36,,"    @UriParam(label = ""consumer"","
31302,./TargetProjects/camel/components/camel-jetty-common/src/main/java/org/apache/camel/component/jetty/JettyHttpEndpoint.java,65,,"    @UriParam(label = ""consumer,advanced"","
31303,./TargetProjects/camel/components/camel-jetty/src/generated/java/org/apache/camel/component/jetty9/JettyHttpComponent9Configurer.java,65,,"        case ""socketconnectorproperties"":"
31304,./TargetProjects/camel/components/camel-jetty/src/generated/java/org/apache/camel/component/jetty9/JettyHttpComponent9Configurer.java,66,,"        case ""socketConnectorProperties"": target.setSocketConnectorProperties(property(camelContext, java.util.Map.class, value)); return true;"
31305,./TargetProjects/camel/components/camel-jetty/src/generated/java/org/apache/camel/component/jetty9/JettyHttpComponent9Configurer.java,67,,"        case ""socketconnectors"":"
31306,./TargetProjects/camel/components/camel-jetty/src/generated/java/org/apache/camel/component/jetty9/JettyHttpComponent9Configurer.java,68,,"        case ""socketConnectors"": target.setSocketConnectors(property(camelContext, java.util.Map.class, value)); return true;"
31307,./TargetProjects/camel/components/camel-jetty/src/generated/java/org/apache/camel/component/jetty9/JettyHttpComponent9Configurer.java,75,,"        case ""sslsocketconnectorproperties"":"
31308,./TargetProjects/camel/components/camel-jetty/src/generated/java/org/apache/camel/component/jetty9/JettyHttpComponent9Configurer.java,76,,"        case ""sslSocketConnectorProperties"": target.setSslSocketConnectorProperties(property(camelContext, java.util.Map.class, value)); return true;"
31309,./TargetProjects/camel/components/camel-jetty/src/generated/java/org/apache/camel/component/jetty9/JettyHttpComponent9Configurer.java,77,,"        case ""sslsocketconnectors"":"
31310,./TargetProjects/camel/components/camel-jetty/src/generated/java/org/apache/camel/component/jetty9/JettyHttpComponent9Configurer.java,78,,"        case ""sslSocketConnectors"": target.setSslSocketConnectors(property(camelContext, java.util.Map.class, value)); return true;"
31311,./TargetProjects/camel/components/camel-jetty/src/generated/java/org/apache/camel/component/jetty9/JettyHttpEndpoint9Configurer.java,44,,"        case ""filterinitparameters"":"
31312,./TargetProjects/camel/components/camel-jetty/src/generated/java/org/apache/camel/component/jetty9/JettyHttpEndpoint9Configurer.java,45,,"        case ""filterInitParameters"": target.setFilterInitParameters(property(camelContext, java.util.Map.class, value)); return true;"
31313,./TargetProjects/camel/components/camel-jetty/src/generated/java/org/apache/camel/component/jetty9/JettyHttpEndpoint9Configurer.java,46,,"        case ""filters"": target.setFilters(property(camelContext, java.util.List.class, value)); return true;"
31314,./TargetProjects/camel/components/camel-jetty/src/generated/java/org/apache/camel/component/jetty9/JettyHttpEndpoint9Configurer.java,47,,"        case ""handlers"": target.setHandlers(property(camelContext, java.util.List.class, value)); return true;"
31315,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/EnableCORSTest.java,37,,"        httpMethod.addHeader(""Origin"", ""http://localhost:9000"");"
31316,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HandlerTest.java,50,,"        InputStream html = (InputStream) template.requestBody(""http://localhost:"" + port1, """");"
31317,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpAuthMethodPriorityTest.java,74,,"                ""Hello World"","
31318,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpBridgeRouteTest.java,35,,"        String response = template.requestBodyAndHeader(""http://localhost:"" + port2 + ""/test/hello"","
31319,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpClientRouteTest.java,54,,"        MockEndpoint mockEndpoint = getMockEndpoint(""mock:a"");"
31320,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpClientRouteTest.java,95,,"        Exchange exchange = template.send(""http://localhost:"" + port2 + ""/querystring"", new Processor() {"
31321,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpClientRouteTest.java,131,,"                from(""jetty:http://localhost:"" + port1 + ""/hello"").process(proc).setHeader(Exchange.HTTP_CHUNKED)"
31322,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpConverterTest.java,58,,"                                assertEquals(""Hello World"", s);"
31323,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpConverterTest.java,60,,"                        }).transform(constant(""Bye World""));"
31324,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpFilterNoCamelHeadersTest.java,35,,"        getMockEndpoint(""mock:input"").expectedMessageCount(1);"
31325,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpFilterNoCamelHeadersTest.java,39,,"        getMockEndpoint(""mock:result"").expectedMessageCount(1);"
31326,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpGZipEncodingTest.java,42,,"        String response = template.requestBodyAndHeader(""http://localhost:"" + port1 + ""/gzip?httpClientConfigurer=#configurer"","
31327,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpGZipEncodingTest.java,43,,"                new ByteArrayInputStream(""<Hello>World</Hello>"".getBytes()), Exchange.CONTENT_ENCODING, ""gzip"", String.class);"
31328,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpGZipEncodingTest.java,43,,"                new ByteArrayInputStream(""<Hello>World</Hello>"".getBytes()), Exchange.CONTENT_ENCODING, ""gzip"", String.class);"
31329,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpGZipEncodingTest.java,44,,"        assertEquals(""<b>Hello World</b>"", response, ""The response is wrong"");"
31330,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpGZipEncodingTest.java,44,,"        assertEquals(""<b>Hello World</b>"", response, ""The response is wrong"");"
31331,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpProducerTwoParametersWithSameKeyTest.java,43,,"        assertEquals(""yes"", out.getMessage().getHeader(""bar""));"
31332,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpProducerTwoParametersWithSameKeyTest.java,45,,"        List<?> foo = out.getMessage().getHeader(""foo"", List.class);"
31333,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpRouteTest.java,93,,"        InputStream is = new URL(""http://localhost:"" + port2 + ""/hello"").openStream();"
31334,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpRouteTest.java,106,,"        assertEquals(""HelloWorld"", out, ""Get a wrong output "");"
31335,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpRouteTest.java,210,,"                from(""jetty:http://localhost:"" + port1 + ""/test"").to(""mock:a"");"
31336,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpSendFileTest.java,38,,"        mock.message(0).header(""Content-Type"").isEqualTo(""image/jpeg"");"
31337,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpStreamCacheFileStopIssueTest.java,39,,"        deleteDirectory(""target/cachedir"");"
31338,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpTwoEndpointTest.java,38,,"        assertEquals(246, a.getMessage().getHeader(""foo"", Integer.class).intValue());"
31339,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpsAsyncRouteTest.java,98,,"        if (isPlatform(""windows"")) {"
31340,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpsRouteTest.java,148,,"                () -> template.sendBodyAndHeader(""http://localhost:"" + port1 + ""/test"", expectedBody, ""Content-Type"","
31341,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/InterfacesTest.java,73,,"        getMockEndpoint(""mock:endpoint"").expectedMessageCount(expectedMessages);"
31342,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/InterfacesTest.java,75,,"        URL localUrl = new URL(""http://localhost:"" + port1 + ""/testRoute"");"
31343,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyCamelHttpUrlCBRTest.java,29,,"        getMockEndpoint(""mock:foo"").expectedBodiesReceived(""Hello World"");"
31344,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyContentTypeTest.java,41,,"            exchange.getIn().setHeader(""Content-Type"", ""text/xml"");"
31345,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyContentTypeTest.java,41,,"            exchange.getIn().setHeader(""Content-Type"", ""text/xml"");"
31346,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyContentTypeTest.java,58,,"        sendMessageWithContentType(""UTF-8"", false);"
31347,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyEnableJmxTest.java,72,,"        MockEndpoint mock = getMockEndpoint(""mock:result"");"
31348,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyEnableJmxTest.java,77,,"        template.requestBody(serverUri0 + ""&x=foo"", null, Object.class);"
31349,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyEnableJmxTest.java,84,,"        Set<ObjectName> s = mbsc.queryNames(new ObjectName(""org.eclipse.jetty.server:type=server,*""), null);"
31350,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyEnableJmxTest.java,130,,"                serverUri0 = ""http://localhost:"" + port1 + ""/myservice?enableJmx=true"";"
31351,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyEnableJmxTest.java,135,,"                from(""jetty:"" + serverUri0).routeId(""route0"").setBody().simple(""<html><body>${in.header.x}</body></html>"")"
31352,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyEnableJmxTest.java,135,,"                from(""jetty:"" + serverUri0).routeId(""route0"").setBody().simple(""<html><body>${in.header.x}</body></html>"")"
31353,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyHttpContentTypeTest.java,33,,"        getMockEndpoint(""mock:input"").expectedBodiesReceived(""Hello World"");"
31354,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyHttpContentTypeTest.java,33,,"        getMockEndpoint(""mock:input"").expectedBodiesReceived(""Hello World"");"
31355,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyHttpGetWithParamAsExchangeHeaderTest.java,34,,"        MockEndpoint mock = getMockEndpoint(""mock:result"");"
31356,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyHttpGetWithParamAsExchangeHeaderTest.java,38,,"        mock.expectedHeaderReceived(Exchange.HTTP_METHOD, ""GET"");"
31357,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyHttpGetWithParamAsExchangeHeaderTest.java,49,,"        mock.expectedHeaderReceived(""message"", ""Keine g\u00FCltige GPS-Daten!"");"
31358,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyHttpGetWithParamTest.java,39,,"        MockEndpoint mock = getMockEndpoint(""mock:result"");"
31359,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyHttpGetWithParamTest.java,40,,"        mock.expectedBodiesReceived(""Bye World"");"
31360,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyHttpGetWithParamTest.java,41,,"        mock.expectedHeaderReceived(""one"", ""eins"");"
31361,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyHttpGetWithParamTest.java,41,,"        mock.expectedHeaderReceived(""one"", ""eins"");"
31362,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyHttpGetWithParamTest.java,42,,"        mock.expectedHeaderReceived(""two"", ""zwei"");"
31363,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyHttpGetWithParamTest.java,42,,"        mock.expectedHeaderReceived(""two"", ""zwei"");"
31364,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyHttpHeadersTest.java,29,,"        getMockEndpoint(""mock:input"").expectedBodiesReceived(""Hello World"");"
31365,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyHttpMapHttpMessageHeadersTest.java,31,,"        MockEndpoint mock = getMockEndpoint(""mock:result"");"
31366,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyHttpMapHttpMessageHeadersTest.java,33,,"        mock.expectedHeaderReceived(""one"", null);"
31367,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyHttpMapHttpMessageHeadersTest.java,34,,"        mock.expectedHeaderReceived(""two"", null);"
31368,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyHttpMapHttpMessageHeadersTest.java,35,,"        mock.expectedHeaderReceived(Exchange.HTTP_METHOD, ""GET"");"
31369,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyHttpMapHttpMessageHeadersTest.java,44,,"        MockEndpoint mock = getMockEndpoint(""mock:result1"");"
31370,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyHttpMapHttpMessageHeadersTest.java,85,,"        mock.expectedBodiesReceived(""Hello World"");"
31371,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyHttpMapHttpMessageHeadersTest.java,87,,"        mock.expectedHeaderReceived(""header1"", ""pippo"");"
31372,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyLongestContextPathMatchTest.java,29,,"        getMockEndpoint(""mock:aaa"").expectedMessageCount(1);"
31373,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyLongestContextPathMatchTest.java,30,,"        getMockEndpoint(""mock:bbb"").expectedMessageCount(0);"
31374,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyLongestContextPathMatchTest.java,31,,"        getMockEndpoint(""mock:ccc"").expectedMessageCount(0);"
31375,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettyLongestContextPathMatchTest.java,32,,"        getMockEndpoint(""mock:ddd"").expectedMessageCount(0);"
31376,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettySimulateInOnlyTest.java,55,,"                }).to(""mock:result"");"
31377,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettySwitchingStatusCode204Test.java,47,,"        Exchange inExchange = this.createExchangeWithBody(""Hello World"");"
31378,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/JettySwitchingStatusCode204Test.java,71,,"        assertEquals(""No Content"", EntityUtils.toString(httpResponse.getEntity()));"
31379,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/MultiPartFormWithCustomFilterTest.java,70,,"        HttpEntity entity = MultipartEntityBuilder.create().addTextBody(""comment"", ""A binary file of some kind"")"
31380,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/MultiThreadedHttpGetTest.java,72,,"        MockEndpoint mockEndpoint = resolveMandatoryEndpoint(""mock:results"", MockEndpoint.class);"
31381,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/async/JettyAsyncThrottleTest.java,40,,"        getMockEndpoint(""mock:result"").expectedMinimumMessageCount(1);"
31382,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/async/JettyAsyncThrottleTest.java,42,,"        template.asyncRequestBody(""http://localhost:{{port}}/myservice"", null);"
31383,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/javabody/HttpJavaBodyTest.java,44,,"        HttpCommonComponent jetty = context.getComponent(""jetty"", HttpCommonComponent.class);"
31384,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/javabody/HttpJavaBodyTest.java,47,,"        HttpComponent http = context.getComponent(""http"", HttpComponent.class);"
31385,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/javabody/HttpJavaBodyTest.java,53,,"                from(""jetty:http://localhost:{{port}}/myapp/myservice"").process(new Processor() {"
31386,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/javabody/HttpJavaBodyTest.java,59,,"                        assertEquals(""Camel"", cool.getName());"
31387,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/javabody/HttpJavaBodyTest.java,72,,"        String reply = template.requestBodyAndHeader(""http://localhost:{{port}}/myapp/myservice"", cool, Exchange.CONTENT_TYPE,"
31388,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/javabody/HttpJavaBodyTest.java,98,,"                        MyCoolBean reply = new MyCoolBean(456, ""Camel rocks"");"
31389,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/javabody/HttpJavaBodyTest.java,133,,"                        assertEquals(""Hello World"", body);"
31390,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/proxy/HttpClientProxyTest.java,38,,"        String out = template.requestBody(""direct:cool"", ""World"", String.class);"
31391,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/proxy/HttpClientProxyTransferExceptionTest.java,34,,"        String out = template.requestBody(""direct:cool"", ""World"", String.class);"
31392,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/proxy/HttpClientProxyTransferExceptionTest.java,41,,"            template.requestBody(""direct:cool"", ""Kaboom"");"
31393,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/rest/RestJettyAcceptTest.java,43,,"        String out = fluentTemplate.withHeader(Exchange.CONTENT_TYPE, ""application/json"")"
31394,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/rest/RestJettyRemoveAddRestAndRouteTest.java,37,,"        InputStream stream = new URL(""http://localhost:"" + getPort() + ""/issues/35"").openStream();"
31395,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/rest/RestJettyRemoveAddRestAndRouteTest.java,46,,"        context.getRouteController().stopRoute(""issues"");"
31396,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/rest/RestJettyRequiredBodyTest.java,35,,"        String out = fluentTemplate.withHeader(Exchange.CONTENT_TYPE, ""application/json"")"
31397,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/rest/RestJettyRequiredHttpHeaderTest.java,35,,"        String out = fluentTemplate.withHeader(Exchange.CONTENT_TYPE, ""application/json"")"
31398,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/rest/RestJettyRequiredQueryParameterTest.java,35,,"        String out = fluentTemplate.withHeader(Exchange.CONTENT_TYPE, ""application/json"")"
31399,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/rest/RestJettyVerbTest.java,31,,"        String out = template.requestBodyAndHeader(""http://localhost:"" + getPort() + ""/users"", null, Exchange.HTTP_METHOD,"
31400,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/rest/RestJettyVerbTest.java,31,,"        String out = template.requestBodyAndHeader(""http://localhost:"" + getPort() + ""/users"", null, Exchange.HTTP_METHOD,"
31401,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/rest/RestJettyVerbTest.java,40,,"        assertEquals(""{ \""id\"":\""1\"", \""name\"":\""Scott\"" }"", out);"
31402,./TargetProjects/camel/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/rest/producer/JettyRestProducerPojoInOutTest.java,35,,"        String out = fluentTemplate.to(""rest:get:users/lives"").withHeader(Exchange.CONTENT_TYPE, ""application/json"")"
31403,./TargetProjects/camel/components/camel-jgroups-raft/src/test/java/org/apache/camel/component/jgroups/raft/cluster/JGroupsRaftClusteredRoutePolicyTest.java,43,,"        JChannel chA = new JChannel(""raftABC.xml"").name(""A"");"
31404,./TargetProjects/camel/components/camel-jira/src/main/java/org/apache/camel/component/jira/JiraConfiguration.java,27,,"    @UriParam(label = ""security"", secret = true)"
31405,./TargetProjects/camel/components/camel-jira/src/main/java/org/apache/camel/component/jira/JiraEndpoint.java,87,,"    @UriParam(label = ""consumer"")"
31406,./TargetProjects/camel/components/camel-jira/src/test/java/org/apache/camel/component/jira/Utils.java,74,,"        URI selfUri = URI.create(TEST_JIRA_URL + ""/rest/api/latest/issue/"" + id);"
31407,./TargetProjects/camel/components/camel-jira/src/test/java/org/apache/camel/component/jira/producer/AddIssueLinkProducerTest.java,123,,"        String comment = ""A new test comment "" + new Date();"
31408,./TargetProjects/camel/components/camel-jira/src/test/java/org/apache/camel/component/jira/producer/AddIssueLinkProducerTest.java,124,,"        String linkType = ""Relates"";"
31409,./TargetProjects/camel/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsComponent.java,60,,"    @Metadata(label = ""advanced"", description = ""To use a shared JMS configuration"")"
31410,./TargetProjects/camel/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsConfiguration.java,78,,"              enums = ""SESSION_TRANSACTED,CLIENT_ACKNOWLEDGE,AUTO_ACKNOWLEDGE,DUPS_OK_ACKNOWLEDGE"", label = ""consumer"","
31411,./TargetProjects/camel/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsConfiguration.java,81,,"    @UriParam(label = ""advanced"","
31412,./TargetProjects/camel/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsConfiguration.java,89,,"    @UriParam(label = ""consumer,advanced"", defaultValue = ""Default"","
31413,./TargetProjects/camel/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsConfiguration.java,105,,"    @UriParam(defaultValue = ""true"", label = ""consumer,logging"","
31414,./TargetProjects/camel/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsConfiguration.java,141,,"                            + "" See also the maxMessagesPerTask option to control dynamic scaling up/down of threads."""
31415,./TargetProjects/camel/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsConfiguration.java,145,,"    @UriParam(defaultValue = ""1"", label = ""producer"","
31416,./TargetProjects/camel/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsConfiguration.java,163,,"    @UriParam(defaultValue = ""5000"", label = ""advanced"", javaType = ""java.time.Duration"","
31417,./TargetProjects/camel/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsConfiguration.java,275,,"    @UriParam(defaultValue = ""true"", label = ""transaction,advanced"","
31418,./TargetProjects/camel/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsConfiguration.java,314,,"    @UriParam(label = ""producer,advanced"","
31419,./TargetProjects/camel/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsEndpoint.java,81,,"    @UriPath(defaultValue = ""queue"", enums = ""queue,topic,temp-queue,temp-topic"","
31420,./TargetProjects/camel/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsQueueEndpoint.java,41,,"        setDestinationType(""queue"");"
31421,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/AggregratedJmsRouteTest.java,101,,"                from(""jms:queue:point1"").process(new MyProcessor()).to(""jms:queue:reply"");"
31422,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/BrowsableQueueTest.java,45,,"            template.sendBodyAndHeader(""activemq:test.b"", expectedBody, ""counter"", i);"
31423,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/DefaultJmsHeaderKeyFormatStrategyTest.java,29,,"        assertEquals(""foo"", strategy.encodeKey(""foo""));"
31424,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/DefaultJmsHeaderKeyFormatStrategyTest.java,30,,"        assertEquals(""foo123bar"", strategy.encodeKey(""foo123bar""));"
31425,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/DefaultJmsHeaderKeyFormatStrategyTest.java,31,,"        assertEquals(""CamelFileName"", strategy.encodeKey(""CamelFileName""));"
31426,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/FromTextToBytesMessageTest.java,38,,"        MockEndpoint mock = getMockEndpoint(""mock:bar"");"
31427,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsAllowNullBodyTest.java,40,,"        getMockEndpoint(""mock:result"").expectedMessageCount(1);"
31428,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsAllowNullBodyTest.java,42,,"        getMockEndpoint(""mock:result"").message(0).header(""bar"").isEqualTo(123);"
31429,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsBatchResequencerJMSPriorityTest.java,40,,"        template.sendBodyAndHeader(""jms:queue:foo?preserveMessageQos=true"", ""A"", ""JMSPriority"", 6);"
31430,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsBatchResequencerJMSPriorityTest.java,40,,"        template.sendBodyAndHeader(""jms:queue:foo?preserveMessageQos=true"", ""A"", ""JMSPriority"", 6);"
31431,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsBindingTest.java,79,,"        Object value = jmsBindingUnderTest.getValidJMSHeaderValue(""foo"", new BigInteger(""12345""));"
31432,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsDeadLetterQueueTest.java,53,,"        mock.expectedBodiesReceived(""Kabom"");"
31433,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsDeadLetterQueueUsingTransferExchangeTest.java,51,,"        mock.expectedBodiesReceived(""Kabom"");"
31434,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsDefaultTaskExecutorTypeTest.java,80,,"        doSendMessages(""foo.default"", 500, 5, null);"
31435,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsEndpointConfigurationTest.java,58,,"    private final Processor dummyProcessor = exchange -> LOG.info(""Received: "" + exchange);"
31436,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsEndpointConfigurationTest.java,79,,"        assertEquals(true, configuration.isSubscriptionDurable(), ""isSubscriptionDurable()"");"
31437,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsEndpointConfigurationTest.java,80,,"        assertEquals(true, configuration.isSubscriptionShared(), ""isSubscriptionShared()"");"
31438,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsEndpointConfigurationTest.java,81,,"        assertEquals(""James"", configuration.getSubscriptionName(), ""getSubscriptionName()"");"
31439,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsEndpointConfigurationTest.java,81,,"        assertEquals(""James"", configuration.getSubscriptionName(), ""getSubscriptionName()"");"
31440,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsEndpointConfigurationTest.java,422,,"        endpoint.setClientId(""bar"");"
31441,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsHeaderFilteringTest.java,56,,"            exchange.getIn().setHeader(""testheader"", 1020);"
31442,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsHeaderFilteringTest.java,57,,"            exchange.getIn().setHeader(""anotherheader"", 1030);"
31443,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsInOnlyDisableTimeToLiveTest.java,41,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""World 1"");"
31444,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsInOutBeanReturnNullTest.java,43,,"        MyBean out = template.requestBody(""activemq:queue:foo"", ""Camel"", MyBean.class);"
31445,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsInOutBeanReturnNullTest.java,50,,"        Object out = template.requestBody(""activemq:queue:foo"", ""foo"");"
31446,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsInOutDisableTimeToLiveTest.java,43,,"        getMockEndpoint(""mock:result"").expectedMessageCount(0);"
31447,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsInOutIndividualRequestTimeoutTest.java,43,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Bye Camel"");"
31448,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsInOutIndividualRequestTimeoutTest.java,45,,"        String out = template.requestBody(""direct:start"", ""Camel"", String.class);"
31449,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsIncludeAllJMSXPropertiesTest.java,35,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Hello World"");"
31450,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsLoadBalanceFailoverWithForceSendOriginalJmsMessageTest.java,45,,"        oneMock.expectedHeaderReceived(""foo"", ""bar"");"
31451,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsLoadBalanceFailoverWithForceSendOriginalJmsMessageTest.java,45,,"        oneMock.expectedHeaderReceived(""foo"", ""bar"");"
31452,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsLoadBalanceFailoverWithForceSendOriginalJmsMessageTest.java,52,,"        String out = template.requestBodyAndHeader(""jms:queue:start"", ""Hello World"", ""foo"", ""bar"", String.class);"
31453,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsMessageBodySetNullTest.java,38,,"                from(""jms:queue:foo"")"
31454,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsMessageBodySetNullTest.java,39,,"                        .to(""mock:foo"")"
31455,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsMessageBodySetNullTest.java,41,,"                        .to(""mock:bar"");"
31456,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsMessageBodySetNullTest.java,46,,"        getMockEndpoint(""mock:foo"").expectedBodiesReceived(""Hello World"");"
31457,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsMessageBodySetNullTest.java,69,,"        getMockEndpoint(""mock:foo"").expectedHeaderReceived(""code"", 123);"
31458,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsMessageTypeTest.java,56,,"        MockEndpoint mock = getMockEndpoint(""mock:result"");"
31459,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsMessageTypeTest.java,57,,"        mock.expectedBodiesReceived(""Hello World"");"
31460,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsMessageTypeTest.java,62,,"        template.sendBodyAndHeader(""direct:foo"", new MyFooBean(""World""), JMS_MESSAGE_TYPE, ""Text"");"
31461,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsMessageTypeTest.java,62,,"        template.sendBodyAndHeader(""direct:foo"", new MyFooBean(""World""), JMS_MESSAGE_TYPE, ""Text"");"
31462,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsMessageTypeTest.java,96,,"        mock.expectedBodiesReceived(""Bye World"".getBytes());"
31463,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsMessageTypeTest.java,136,,"        template.sendBodyAndHeader(""direct:foo"", new MyFooBean(""Claus""), JMS_MESSAGE_TYPE, ""Map"");"
31464,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsMessageTypeTest.java,140,,"        assertEquals(""Claus"", mock.getExchanges().get(0).getIn().getBody(Map.class).get(""name""));"
31465,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsMessageTypeTest.java,182,,"        template.sendBodyAndHeader(""direct:foo"", new MyFooBean(""James""), JMS_MESSAGE_TYPE, ""Object"");"
31466,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsMultipleConsumersTest.java,37,,"                from(""direct:start"").to(""mock:result"");"
31467,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsMultipleConsumersTest.java,61,,"                from(""jms:queue:foo"").to(""mock:result"");"
31468,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsNotIncludeAllJMSXPropertiesTest.java,35,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Hello World"");"
31469,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsOnCompletionAndInterceptAndOnExceptionTest.java,37,,"        getMockEndpoint(""mock:sync"").expectedBodiesReceived(""Bye World"");"
31470,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsOnCompletionTest.java,38,,"        getMockEndpoint(""mock:sync"").expectedBodiesReceived(""Bye World"");"
31471,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsPollingConsumerTest.java,36,,"        MockEndpoint mock = getMockEndpoint(""mock:result"");"
31472,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsPollingConsumerTest.java,37,,"        mock.expectedBodiesReceived(""Hello Claus"");"
31473,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsPollingConsumerTest.java,42,,"            String body = consumer.receiveBody(""activemq:queue.start"", String.class);"
31474,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsPollingConsumerTest.java,43,,"            template.sendBody(""activemq:queue.foo"", body + "" Claus"");"
31475,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsPollingConsumerTest.java,49,,"        template.sendBody(""direct:start"", ""Hello"");"
31476,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsPollingConsumerTest.java,49,,"        template.sendBody(""direct:start"", ""Hello"");"
31477,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsProducerWithJMSHeaderTest.java,43,,"        MockEndpoint mock = getMockEndpoint(""mock:result"");"
31478,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsProducerWithJMSHeaderTest.java,45,,"        mock.message(0).header(""JMSPriority"").isEqualTo(2);"
31479,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsProducerWithJMSHeaderTest.java,47,,"        template.sendBodyAndHeader(""activemq:queue:foo?preserveMessageQos=true"", ""Hello World"", ""JMSPriority"", ""2"");"
31480,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsProducerWithJMSHeaderTest.java,47,,"        template.sendBodyAndHeader(""activemq:queue:foo?preserveMessageQos=true"", ""Hello World"", ""JMSPriority"", ""2"");"
31481,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsProducerWithJMSHeaderTest.java,80,,"        mock.message(0).header(""JMSDeliveryMode"").isEqualTo(2);"
31482,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsProducerWithJMSHeaderTest.java,116,,"        template.sendBodyAndHeader(""activemq:queue:bar?preserveMessageQos=true"", ""Hello World"", ""JMSExpiration"", ttl);"
31483,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsProducerWithJMSHeaderTest.java,116,,"        template.sendBodyAndHeader(""activemq:queue:bar?preserveMessageQos=true"", ""Hello World"", ""JMSExpiration"", ttl);"
31484,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsProducerWithJMSHeaderTest.java,122,,"        Exchange bar = consumer.receive(""activemq:queue:bar"", 10000);"
31485,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsProducerWithJMSHeaderTest.java,125,,"        template.send(""activemq:queue:foo"", bar);"
31486,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsProducerWithJMSHeaderTest.java,231,,"        mock.message(0).header(""JMSDestination"").isNotNull();"
31487,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsQosRouteTest.java,37,,"        preserveEndpoint1.message(0).header(""JMSPriority"").isEqualTo(1);"
31488,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsQosRouteTest.java,43,,"        template.sendBody(componentName + "":queue:p1?explicitQosEnabled=true&priority=1"", ""test"");"
31489,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsRequestReplyCorrelationTest.java,52,,"        MockEndpoint result = getMockEndpoint(""mock:result"");"
31490,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsRequestReplyCorrelationTest.java,55,,"        Exchange out = template.send(""jms:queue:hello"", ExchangePattern.InOut, exchange -> {"
31491,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsRequestReplyCorrelationTest.java,57,,"            in.setBody(""Hello World"");"
31492,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsRequestReplyCorrelationTest.java,58,,"            in.setHeader(""JMSCorrelationID"", ""a"");"
31493,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsRequestReplyExclusiveReplyToComponentTest.java,40,,"        assertEquals(""Hello A"", template.requestBody(""activemq:queue:foo?replyTo=bar"", ""A""));"
31494,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsRequestReplyExclusiveReplyToRemoveAddRouteTest.java,43,,"                from(""direct:start2"").routeId(""start2"")"
31495,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsRequestReplyExclusiveReplyToTest.java,44,,"        assertEquals(""Hello A"", template.requestBody(""activemq:queue:foo?replyTo=bar&replyToType=Exclusive"", ""A""));"
31496,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsRequestReplyFixedReplyToInEndpointTest.java,37,,"        assertTrue(reply.getMessage().hasHeaders(), ""Should have headers"");"
31497,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsRequestReplyFixedReplyToInEndpointTest.java,38,,"        String replyTo = reply.getMessage().getHeader(""JMSReplyTo"", String.class);"
31498,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsRequestReplyProcessRepliesConcurrentUsingThreadsTest.java,44,,"        template.sendBody(""seda:start"", ""A"");"
31499,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsRequestReplySharedReplyToTest.java,40,,"        assertEquals(""Hello A"", template.requestBody(""activemq:queue:foo?replyTo=bar&replyToType=Shared"", ""A""));"
31500,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsRouteDeliveryModePreserveQoSTest.java,41,,"        MockEndpoint mock = getMockEndpoint(""mock:bar"");"
31501,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsRouteDeliveryModePreserveQoSTest.java,42,,"        mock.expectedBodiesReceived(""Hello World"");"
31502,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsRouteDeliveryModePreserveQoSTest.java,44,,"        template.sendBody(""activemq:queue:foo?preserveMessageQos=true"", ""Hello World"");"
31503,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsRouteDeliveryModePreserveQoSTest.java,51,,"        assertEquals(DeliveryMode.PERSISTENT, map.get(""JMSDeliveryMode""));"
31504,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsRouteDeliveryModePreserveQoSTest.java,121,,"        mock.expectedBodiesReceived(""Beer is good..."");"
31505,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsRouteWithDefaultKeyFormatStrategyTest.java,52,,"        MockEndpoint mock = getMockEndpoint(""mock:result"");"
31506,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsRouteWithDefaultKeyFormatStrategyTest.java,53,,"        mock.expectedBodiesReceived(""Hello World"");"
31507,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsRouteWithDefaultKeyFormatStrategyTest.java,55,,"        template.sendBody(""direct:start"", ""Hello World"");"
31508,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsRouteWithDefaultKeyFormatStrategyTest.java,64,,"        mock.expectedHeaderReceived(""foo"", ""cheese"");"
31509,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsRouteWithDefaultKeyFormatStrategyTest.java,64,,"        mock.expectedHeaderReceived(""foo"", ""cheese"");"
31510,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsSelectorInTest.java,37,,"        template.sendBodyAndHeader(""activemq:queue:foo"", ""Carlsberg"", ""drink"", ""beer"");"
31511,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsSelectorOptionTest.java,44,,"        endpointA.expectedHeaderReceived(""color"", ""blue"");"
31512,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsSelectorOptionTest.java,51,,"        template.sendBodyAndHeader(""activemq:queue:hello"", ""A blue car!"", ""color"", ""blue"");"
31513,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsSelectorOptionTest.java,54,,"        template.sendBodyAndHeader(""activemq:queue:hello"", ""Message1"", ""SIZE_NUMBER"", 1505);"
31514,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsSimpleHeaderTest.java,35,,"        MockEndpoint mock = getMockEndpoint(""mock:result"");"
31515,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsSimpleHeaderTest.java,37,,"        mock.message(0).header(""data"").isEqualTo((byte) 40);"
31516,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsSimpleHeaderTest.java,39,,"        template.sendBodyAndHeader(""activemq:queue:foo"", ""Hello World"", ""data"", (byte) 40);"
31517,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsSimpleRequestReplyTest.java,45,,"        Exchange out = template.send(""activemq:queue:hello"", ExchangePattern.InOut, exchange -> {"
31518,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsStreamMessageTypeTest.java,57,,"        getMockEndpoint(""mock:result"").expectedMessageCount(1);"
31519,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsToDSendDynamicTwoDisabledTest.java,33,,"        template.sendBodyAndHeader(""direct:start"", ""Hello bar"", ""where"", ""bar"");"
31520,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsToDSendDynamicTwoTest.java,33,,"        template.sendBodyAndHeader(""direct:start"", ""Hello bar"", ""where"", ""bar"");"
31521,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsTransferExchangeTest.java,37,,"        MockEndpoint mock = getMockEndpoint(""mock:result"");"
31522,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsTransferExchangeTest.java,38,,"        mock.expectedBodiesReceived(""Hello World"");"
31523,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsTransferExchangeTest.java,41,,"        template.sendBody(""direct:start"", ""Hello World"");"
31524,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsTransferExchangeTest.java,50,,"        mock.expectedHeaderReceived(""foo"", ""cheese"");"
31525,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsTransferExchangeTest.java,50,,"        mock.expectedHeaderReceived(""foo"", ""cheese"");"
31526,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsXMLRouteTest.java,46,,"        MockEndpoint mock = getMockEndpoint(""mock:london"");"
31527,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsXMLRouteTest.java,48,,"        mock.message(0).body(String.class).contains(""James"");"
31528,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsXMLRouteTest.java,53,,"        template.sendBody(""direct:object"", source);"
31529,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsXMLRouteTest.java,67,,"        template.sendBody(""direct:bytes"", source);"
31530,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsXMLRouteTest.java,81,,"        template.sendBody(""direct:default"", source);"
31531,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsXMLRouteTest.java,88,,"        MockEndpoint mock = getMockEndpoint(""mock:tampa"");"
31532,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsXMLRouteTest.java,222,,"                        }).to(""seda:choice"");"
31533,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsXPathHeaderTest.java,35,,"        getMockEndpoint(""mock:true"").expectedMessageCount(1);"
31534,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsXPathHeaderTest.java,36,,"        getMockEndpoint(""mock:other"").expectedMessageCount(0);"
31535,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsXPathHeaderTest.java,38,,"        template.sendBodyAndHeader(""activemq:queue:in"", ""<hello>World</hello>"", ""foo"", ""true"");"
31536,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/ManagedJmsEndpointTest.java,82,,"        template.sendBody(""activemq:queue:start"", ""Hello World"");"
31537,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/ManagedJmsSelectorTest.java,76,,"        template.sendBodyAndHeader(""activemq:queue:start"", ""Pepsi"", ""brand"", ""softdrink"");"
31538,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/ManagedJmsSelectorTest.java,76,,"        template.sendBodyAndHeader(""activemq:queue:start"", ""Pepsi"", ""brand"", ""softdrink"");"
31539,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/PassThroughJmsKeyFormatStrategyTest.java,29,,"        assertEquals(""foo"", strategy.encodeKey(""foo""));"
31540,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/PassThroughJmsKeyFormatStrategyTest.java,30,,"        assertEquals(""foo123bar"", strategy.encodeKey(""foo123bar""));"
31541,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/PassThroughJmsKeyFormatStrategyTest.java,31,,"        assertEquals(""CamelFileName"", strategy.encodeKey(""CamelFileName""));"
31542,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/PassThroughJmsKeyFormatStrategyTest.java,33,,"        assertEquals(""Content-Type"", strategy.encodeKey(""Content-Type""));"
31543,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/PassThroughJmsKeyFormatStrategyTest.java,34,,"        assertEquals(""My-Header.You"", strategy.encodeKey(""My-Header.You""));"
31544,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/PayloadByteArrayJmsTest.java,44,,"        MockEndpoint mock = getMockEndpoint(""mock:result"");"
31545,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/PayloadByteArrayJmsTest.java,47,,"        mock.message(0).body(String.class).isEqualTo(""Hello World"");"
31546,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/PayloadByteArrayJmsTest.java,51,,"        template.sendBody(""activemq:queue:hello"", body);"
31547,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/TwoConsumerOnSameQueueTest.java,46,,"        getMockEndpoint(""mock:a"").expectedMessageCount(0);"
31548,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/TwoConsumerOnSameQueueTest.java,47,,"        getMockEndpoint(""mock:b"").expectedBodiesReceived(""Bye World"", ""Bye World"");"
31549,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/TwoConsumerOnSameQueueTest.java,47,,"        getMockEndpoint(""mock:b"").expectedBodiesReceived(""Bye World"", ""Bye World"");"
31550,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/TwoConsumerOnSameQueueTest.java,49,,"        template.sendBody(""activemq:queue:foo"", ""Bye World"");"
31551,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/TwoConsumerOnSameQueueTest.java,84,,"        getMockEndpoint(""mock:a"").expectedBodiesReceived(""Hello World"");"
31552,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/TwoConsumerOnSameTopicTest.java,41,,"        getMockEndpoint(""mock:a"").expectedBodiesReceived(""Hello Camel 1"", ""Hello Camel 2"", ""Hello Camel 3"", ""Hello Camel 4"");"
31553,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/TwoConsumerOnSameTopicTest.java,42,,"        getMockEndpoint(""mock:b"").expectedBodiesReceived(""Hello Camel 1"", ""Hello Camel 2"", ""Hello Camel 3"", ""Hello Camel 4"");"
31554,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/TwoConsumerOnSameTopicTest.java,44,,"        template.sendBody(""activemq:topic:foo"", ""Hello Camel 1"");"
31555,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/TwoConsumerOnSameTopicTest.java,63,,"        getMockEndpoint(""mock:b"").expectedBodiesReceived(""Bye World"");"
31556,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/async/AsyncJmsProducerTest.java,39,,"        getMockEndpoint(""mock:after"").expectedBodiesReceived(""Bye Camel"");"
31557,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/ActiveMQPropagateSerializableHeadersTest.java,66,,"        firstMessageExpectations.header(""myCal"").isEqualTo(calValue);"
31558,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/ActiveMQPropagateSerializableHeadersTest.java,67,,"        firstMessageExpectations.header(""myMap"").isEqualTo(mapValue);"
31559,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/DynamicRoutersWithJMSMessageLostHeadersIssueTest.java,62,,"                        .setHeader(""HEADER1"", constant(""header1""))"
31560,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/DynamicRoutersWithJMSMessageLostHeadersIssueTest.java,62,,"                        .setHeader(""HEADER1"", constant(""header1""))"
31561,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/DynamicRoutersWithJMSMessageLostHeadersIssueTest.java,64,,"                        .to(""mock:checkHeader"");"
31562,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsBeanMethodHeaderTest.java,45,,"        mock.expectedBodiesReceived(""Hello World"");"
31563,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsBeanMethodHeaderTest.java,46,,"        mock.expectedHeaderReceived(""foo"", ""yes"");"
31564,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsBeanMethodHeaderTest.java,66,,"        MockEndpoint mock = getMockEndpoint(""mock:approve"");"
31565,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsBlockedAsyncRoutingEngineTest.java,93,,"            template.asyncRequestBody(""activemq:queue:test?requestTimeout=500&useMessageIDAsCorrelationID=true"", ""hello"");"
31566,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsBlockedAsyncRoutingEngineTest.java,101,,"        template.asyncCallbackRequestBody(""activemq:queue:test?requestTimeout=500&useMessageIDAsCorrelationID=true"", ""beSlow"","
31567,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsDirectStartupOrderIssueTest.java,42,,"        template.sendBody(""activemq:queue:foo"", ""Hello World"");"
31568,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsGetHeaderKeyFormatIssueTest.java,42,,"        mock.message(0).header(""HEADER_1"").isEqualTo(""VALUE_2"");"
31569,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsGetHeaderKeyFormatIssueTest.java,42,,"        mock.message(0).header(""HEADER_1"").isEqualTo(""VALUE_2"");"
31570,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsGetHeaderKeyFormatIssueWithContentTypeHeaderTest.java,47,,"        mock.message(0).header(""Content-Type"").isEqualTo(""text/plain"");"
31571,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsGetHeaderKeyFormatIssueWithContentTypeHeaderTest.java,47,,"        mock.message(0).header(""Content-Type"").isEqualTo(""text/plain"");"
31572,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsHeaderAsObjectTest.java,38,,"        mock.expectedBodiesReceived(""Hello World"");"
31573,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsHeaderAsObjectTest.java,39,,"        mock.message(0).header(""foo"").isEqualTo(""bar"");"
31574,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsHeaderAsObjectTest.java,39,,"        mock.message(0).header(""foo"").isEqualTo(""bar"");"
31575,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsInOnlyIssueTest.java,37,,"        MockEndpoint mock = getMockEndpoint(""mock:result"");"
31576,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsInOnlyIssueTest.java,38,,"        mock.expectedBodiesReceived(""Bye World"");"
31577,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsInOnlyIssueTest.java,40,,"        template.sendBody(""activemq:queue:in"", ""Hello World"");"
31578,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsInOnlyIssueTest.java,40,,"        template.sendBody(""activemq:queue:in"", ""Hello World"");"
31579,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsInOnlyParameterTest.java,35,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Bye World"");"
31580,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsInOnlyParameterTest.java,35,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Bye World"");"
31581,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsInOnlyParameterTest.java,36,,"        getMockEndpoint(""mock:result"").message(0).header(""JMSCorrelationID"").isNull();"
31582,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsInOnlyParameterTest.java,39,,"        getMockEndpoint(""mock:in"").expectedBodiesReceived(""Hello World"");"
31583,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsInOnlyParameterTest.java,39,,"        getMockEndpoint(""mock:in"").expectedBodiesReceived(""Hello World"");"
31584,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsInOutIssueTest.java,38,,"        String reply = template.requestBody(""activemq:queue:in"", ""Hello World"", String.class);"
31585,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsInOutIssueTest.java,38,,"        String reply = template.requestBody(""activemq:queue:in"", ""Hello World"", String.class);"
31586,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsInOutIssueTest.java,39,,"        assertEquals(""Bye World"", reply);"
31587,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsInOutPersistentReplyQueueTest.java,36,,"        template.sendBody(""seda:start"", ""A"");"
31588,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsInOutPipelineWithBeanTest.java,70,,"                from(""activemq:testA"").to(""bean:dummyBean"").to(""activemq:a"").to(""activemq:b"");"
31589,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsInOutPipelineWithBeanTest.java,70,,"                from(""activemq:testA"").to(""bean:dummyBean"").to(""activemq:a"").to(""activemq:b"");"
31590,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsMQSpecialHeaderTest.java,38,,"        mock.expectedBodiesReceived(""Hello IBM"");"
31591,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsMQSpecialHeaderTest.java,39,,"        mock.message(0).header(""JMS_IBM_Character_Set"").isEqualTo(""ISO8859_1"");"
31592,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsMQSpecialHeaderTest.java,39,,"        mock.message(0).header(""JMS_IBM_Character_Set"").isEqualTo(""ISO8859_1"");"
31593,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsMutateMessageTest.java,43,,"        mock.message(0).header(""HEADER_1"").isEqualTo(""VALUE_2"");"
31594,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsMutateRemoveHeaderMessageTest.java,44,,"        mock.message(0).header(""HEADER_1"").isNull();"
31595,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsPassThroughtJmsKeyFormatStrategyEndUserIssueTest.java,42,,"        mock.message(0).header(""HEADER_1"").isEqualTo(""VALUE_2"");"
31596,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsPassThroughtJmsKeyFormatStrategyEndUserIssueTest.java,42,,"        mock.message(0).header(""HEADER_1"").isEqualTo(""VALUE_2"");"
31597,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsPassThroughtJmsKeyFormatStrategyEndpointTest.java,42,,"        mock.message(0).header(""HEADER_1"").isEqualTo(""VALUE_1"");"
31598,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsPassThroughtJmsKeyFormatStrategyEndpointTest.java,42,,"        mock.message(0).header(""HEADER_1"").isEqualTo(""VALUE_1"");"
31599,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsPassThroughtJmsKeyFormatStrategyEndpointTest.java,43,,"        mock.message(0).header(""HEADER_2"").isEqualTo(""VALUE_2"");"
31600,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsPassThroughtJmsKeyFormatStrategyEndpointTest.java,43,,"        mock.message(0).header(""HEADER_2"").isEqualTo(""VALUE_2"");"
31601,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsPassThroughtJmsKeyFormatStrategyTest.java,44,,"        mock.message(0).header(""HEADER_1"").isEqualTo(""VALUE_1"");"
31602,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsPassThroughtJmsKeyFormatStrategyTest.java,44,,"        mock.message(0).header(""HEADER_1"").isEqualTo(""VALUE_1"");"
31603,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsPassThroughtJmsKeyFormatStrategyTest.java,45,,"        mock.message(0).header(""HEADER_2"").isEqualTo(""VALUE_2"");"
31604,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsPassThroughtJmsKeyFormatStrategyTest.java,45,,"        mock.message(0).header(""HEADER_2"").isEqualTo(""VALUE_2"");"
31605,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsPassThroughtJmsKeyFormatStrategyUsingJmsConfigurationTest.java,44,,"        mock.message(0).header(""HEADER_1"").isEqualTo(""VALUE_1"");"
31606,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsPassThroughtJmsKeyFormatStrategyUsingJmsConfigurationTest.java,44,,"        mock.message(0).header(""HEADER_1"").isEqualTo(""VALUE_1"");"
31607,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsPassThroughtJmsKeyFormatStrategyUsingJmsConfigurationTest.java,45,,"        mock.message(0).header(""HEADER_2"").isEqualTo(""VALUE_2"");"
31608,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsPassThroughtJmsKeyFormatStrategyUsingJmsConfigurationTest.java,45,,"        mock.message(0).header(""HEADER_2"").isEqualTo(""VALUE_2"");"
31609,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsPassThroughtJmsKeyFormatStrategyUsingJmsConfigurationTest.java,46,,"        mock.message(0).header(""HEADER_3"").isEqualTo(""VALUE_3"");"
31610,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsPassThroughtJmsKeyFormatStrategyUsingJmsConfigurationTest.java,46,,"        mock.message(0).header(""HEADER_3"").isEqualTo(""VALUE_3"");"
31611,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/issues/JmsTypeConverterIssueTest.java,85,,"                        .setHeader(""agentId"", xpath(""/agent/@id""))"
31612,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/temp/JmsReconnectTest.java,104,,"        String ret = proxy.echo(""test"");"
31613,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/tx/JMSTXInOutPersistentQueueTest.java,39,,"        getMockEndpoint(""mock:foo"").expectedBodiesReceived(""World"", ""World"", ""World"");"
31614,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/tx/JMSTXInOutPersistentQueueTest.java,43,,"            template.sendBody(""direct:start"", ""World"");"
31615,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/tx/JMXTXUseOriginalBodyTest.java,59,,"        error.expectedBodiesReceived(""foo"");"
31616,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/tx/JMXTXUseOriginalBodyTest.java,61,,"        checkpoint2.expectedBodiesReceived(""oh no"");"
31617,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/tx/JMXTXUseOriginalBodyWithDLCErrorHandlerTest.java,32,,"    @EndpointInject(""mock:end"")"
31618,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/tx/JMXTXUseOriginalBodyWithDLCErrorHandlerTest.java,41,,"    @EndpointInject(""mock:checkpoint1"")"
31619,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/tx/JMXTXUseOriginalBodyWithDLCErrorHandlerTest.java,44,,"    @EndpointInject(""mock:checkpoint2"")"
31620,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/tx/JMXTXUseOriginalBodyWithDLCErrorHandlerTest.java,67,,"        error.expectedBodiesReceived(""foo"");"
31621,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/tx/JMXTXUseOriginalBodyWithDLCErrorHandlerTest.java,69,,"        checkpoint2.expectedBodiesReceived(""oh no"");"
31622,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/tx/JMXTXUseOriginalBodyWithTXErrorHandlerTest.java,61,,"        error.expectedBodiesReceived(""foo"");"
31623,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/tx/JMXTXUseOriginalBodyWithTXErrorHandlerTest.java,63,,"        checkpoint2.expectedBodiesReceived(""oh no"");"
31624,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/tx/JmsToJmsTransactedSecurityTest.java,42,,"                from(""activemq:queue:foo"")"
31625,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/tx/JmsToJmsTransactedTest.java,39,,"                from(""activemq:queue:foo"")"
31626,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/tx/JmsToJmsTransactedTest.java,41,,"                        .to(""activemq:queue:bar"");"
31627,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/tx/JmsToJmsTransactedTest.java,46,,"        template.sendBody(""activemq:queue:foo"", ""Hello World"");"
31628,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/tx/JmsToJmsTransactedTest.java,59,,"                        .to(""mock:start"")"
31629,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/tx/JmsToJmsTransactedTest.java,63,,"                from(""activemq:queue:bar"").to(""log:bar"").to(""mock:bar"");"
31630,./TargetProjects/camel/components/camel-jms/src/test/java/org/apache/camel/component/jms/tx/TransactedAsyncUsingThreadsTest.java,51,,"        getMockEndpoint(""mock:async"").expectedMessageCount(1);"
31631,./TargetProjects/camel/components/camel-jmx/src/generated/java/org/apache/camel/component/jmx/JMXEndpointConfigurer.java,57,,"        case ""objectproperties"":"
31632,./TargetProjects/camel/components/camel-jmx/src/generated/java/org/apache/camel/component/jmx/JMXEndpointConfigurer.java,58,,"        case ""objectProperties"": target.setObjectProperties(property(camelContext, java.util.Map.class, value)); return true;"
31633,./TargetProjects/camel/components/camel-jmx/src/main/java/org/apache/camel/component/jmx/JMXEndpoint.java,136,,"    @UriParam(label = ""gauge"")"
31634,./TargetProjects/camel/components/camel-jmx/src/main/java/org/apache/camel/component/jmx/JMXEndpoint.java,202,,"    @UriParam(label = ""advanced"")"
31635,./TargetProjects/camel/components/camel-jmx/src/test/java/org/apache/camel/component/jmx/CamelJmxConsumerObserveAttributeMatchStringDifferTest.java,35,,"        getMockEndpoint(""mock:result"").expectedMinimumMessageCount(1);"
31636,./TargetProjects/camel/components/camel-jmx/src/test/java/org/apache/camel/component/jmx/CamelJmxConsumerObserveAttributeMatchStringDifferTest.java,40,,"        ManagedRouteMBean mr = context.getExtension(ManagedCamelContext.class).getManagedRoute(""foo"");"
31637,./TargetProjects/camel/components/camel-jmx/src/test/java/org/apache/camel/component/jmx/CamelJmxConsumerObserveAttributeMatchStringTest.java,35,,"        getMockEndpoint(""mock:result"").expectedMinimumMessageCount(1);"
31638,./TargetProjects/camel/components/camel-jmx/src/test/java/org/apache/camel/component/jmx/CamelJmxConsumerObserveAttributeMatchStringTest.java,40,,"        ManagedRouteMBean mr = context.getExtension(ManagedCamelContext.class).getManagedRoute(""foo"");"
31639,./TargetProjects/camel/components/camel-jmx/src/test/java/org/apache/camel/component/jmx/CamelJmxConsumerObserveAttributeTest.java,35,,"        getMockEndpoint(""mock:result"").expectedMinimumMessageCount(1);"
31640,./TargetProjects/camel/components/camel-jmx/src/test/java/org/apache/camel/component/jmx/JMXEndpointTest.java,54,,"            fail(""expected exception"");"
31641,./TargetProjects/camel/components/camel-jmx/src/test/java/org/apache/camel/component/jmx/JMXEndpointTest.java,84,,"        JMXEndpoint ep = context.getEndpoint(""jmx:platform?objectDomain=FooDomain&key.name=theObjectName"", JMXEndpoint.class);"
31642,./TargetProjects/camel/components/camel-jmx/src/test/java/org/apache/camel/component/jmx/SimpleBeanFixture.java,88,,"        unregisterBean(makeObjectName(""simpleBean""));"
31643,./TargetProjects/camel/components/camel-jmx/src/test/java/org/apache/camel/component/jmx/beans/SimpleBean.java,124,,"                = new MBeanServerNotification(""mbeanserver"", this, mSequence++, new ObjectName(""TestDomain"", ""name"", ""foo""));"
31644,./TargetProjects/camel/components/camel-jmx/src/test/java/org/apache/camel/component/jmx/beans/SimpleBean.java,124,,"                = new MBeanServerNotification(""mbeanserver"", this, mSequence++, new ObjectName(""TestDomain"", ""name"", ""foo""));"
31645,./TargetProjects/camel/components/camel-jooq/src/generated/java/org/apache/camel/component/jooq/JooqEndpointConfigurer.java,57,,"        case ""schedulerproperties"":"
31646,./TargetProjects/camel/components/camel-jooq/src/generated/java/org/apache/camel/component/jooq/JooqEndpointConfigurer.java,58,,"        case ""schedulerProperties"": target.setSchedulerProperties(property(camelContext, java.util.Map.class, value)); return true;"
31647,./TargetProjects/camel/components/camel-jooq/src/test/java/org/apache/camel/component/jooq/JooqProducerTest.java,43,,"                = (Result) producerTemplate.sendBody(context.getEndpoint(""direct:select""), ExchangePattern.InOut, querySelect);"
31648,./TargetProjects/camel/components/camel-jooq/src/test/java/org/apache/camel/component/jooq/JooqXMLTest.java,42,,"                ExchangePattern.InOut, ""empty"");"
31649,./TargetProjects/camel/components/camel-joor/src/main/java/org/apache/camel/language/joor/JoorCompiler.java,185,,"        if (!script.contains(""return "")) {"
31650,./TargetProjects/camel/components/camel-joor/src/main/java/org/apache/camel/language/joor/JoorScriptingCompiler.java,175,,"        if (!script.contains(""return "")) {"
31651,./TargetProjects/camel/components/camel-joor/src/test/java/org/apache/camel/language/joor/JoorBeanTest.java,31,,"                from(""direct:start"")"
31652,./TargetProjects/camel/components/camel-joor/src/test/java/org/apache/camel/language/joor/JoorBeanTest.java,43,,"        template.sendBodyAndHeader(""direct:start"", 123, ""user"", ""tony"");"
31653,./TargetProjects/camel/components/camel-joor/src/test/java/org/apache/camel/language/joor/JoorLanguageTest.java,46,,"        assertExpression(""return \""Hello \"" + exchange.getIn().getBody();"", ""Hello World"");"
31654,./TargetProjects/camel/components/camel-joor/src/test/java/org/apache/camel/language/joor/JoorLanguageTest.java,57,,"        exchange.getIn().setHeader(""foo"", 22);"
31655,./TargetProjects/camel/components/camel-joor/src/test/java/org/apache/camel/language/joor/JoorOptionalPredicateTest.java,30,,"                from(""direct:start"")"
31656,./TargetProjects/camel/components/camel-joor/src/test/java/org/apache/camel/language/joor/JoorPreCompileFalseTest.java,34,,"                from(""direct:start"")"
31657,./TargetProjects/camel/components/camel-joor/src/test/java/org/apache/camel/language/joor/JoorPredicateTest.java,30,,"                from(""direct:start"")"
31658,./TargetProjects/camel/components/camel-joor/src/test/java/org/apache/camel/language/joor/JoorStreamPredicateTest.java,32,,"                from(""direct:start"")"
31659,./TargetProjects/camel/components/camel-joor/src/test/java/org/apache/camel/language/joor/JoorTransformResourceTest.java,30,,"                from(""direct:start"")"
31660,./TargetProjects/camel/components/camel-jpa/src/generated/java/org/apache/camel/component/jpa/JpaEndpointConfigurer.java,37,,"        case ""deletehandler"":"
31661,./TargetProjects/camel/components/camel-jpa/src/generated/java/org/apache/camel/component/jpa/JpaEndpointConfigurer.java,38,,"        case ""deleteHandler"": target.setDeleteHandler(property(camelContext, org.apache.camel.component.jpa.DeleteHandler.class, value)); return true;"
31662,./TargetProjects/camel/components/camel-jpa/src/generated/java/org/apache/camel/component/jpa/JpaEndpointConfigurer.java,39,,"        case ""entitymanagerproperties"":"
31663,./TargetProjects/camel/components/camel-jpa/src/generated/java/org/apache/camel/component/jpa/JpaEndpointConfigurer.java,40,,"        case ""entityManagerProperties"": target.setEntityManagerProperties(property(camelContext, java.util.Map.class, value)); return true;"
31664,./TargetProjects/camel/components/camel-jpa/src/generated/java/org/apache/camel/component/jpa/JpaEndpointConfigurer.java,66,,"        case ""parameters"": target.setParameters(property(camelContext, java.util.Map.class, value)); return true;"
31665,./TargetProjects/camel/components/camel-jpa/src/generated/java/org/apache/camel/component/jpa/JpaEndpointConfigurer.java,71,,"        case ""predeletehandler"":"
31666,./TargetProjects/camel/components/camel-jpa/src/generated/java/org/apache/camel/component/jpa/JpaEndpointConfigurer.java,72,,"        case ""preDeleteHandler"": target.setPreDeleteHandler(property(camelContext, org.apache.camel.component.jpa.DeleteHandler.class, value)); return true;"
31667,./TargetProjects/camel/components/camel-jpa/src/generated/java/org/apache/camel/component/jpa/JpaEndpointConfigurer.java,77,,"        case ""resultclass"":"
31668,./TargetProjects/camel/components/camel-jpa/src/generated/java/org/apache/camel/component/jpa/JpaEndpointConfigurer.java,78,,"        case ""resultClass"": target.setResultClass(property(camelContext, java.lang.Class.class, value)); return true;"
31669,./TargetProjects/camel/components/camel-jpa/src/generated/java/org/apache/camel/component/jpa/JpaEndpointConfigurer.java,84,,"        case ""schedulerproperties"":"
31670,./TargetProjects/camel/components/camel-jpa/src/generated/java/org/apache/camel/component/jpa/JpaEndpointConfigurer.java,85,,"        case ""schedulerProperties"": target.setSchedulerProperties(property(camelContext, java.util.Map.class, value)); return true;"
31671,./TargetProjects/camel/components/camel-jpa/src/main/java/org/apache/camel/component/jpa/JpaEndpoint.java,67,,"    @UriParam(defaultValue = ""true"")"
31672,./TargetProjects/camel/components/camel-jpa/src/main/java/org/apache/camel/component/jpa/JpaEndpoint.java,73,,"    @UriParam(label = ""consumer"", defaultValue = ""true"")"
31673,./TargetProjects/camel/components/camel-jpa/src/main/java/org/apache/camel/component/jpa/JpaEndpoint.java,101,,"    @UriParam(label = ""producer"", defaultValue = ""true"")"
31674,./TargetProjects/camel/components/camel-jpa/src/test/java/org/apache/camel/component/jpa/AbstractJpaMethodTest.java,62,,"        setUp(""jpa://"" + Customer.class.getName() + ""?usePersist="" + (usePersist() ? ""true"" : ""false""));"
31675,./TargetProjects/camel/components/camel-jpa/src/test/java/org/apache/camel/component/jpa/AbstractJpaMethodTest.java,62,,"        setUp(""jpa://"" + Customer.class.getName() + ""?usePersist="" + (usePersist() ? ""true"" : ""false""));"
31676,./TargetProjects/camel/components/camel-jpa/src/test/java/org/apache/camel/component/jpa/AbstractJpaMethodTest.java,62,,"        setUp(""jpa://"" + Customer.class.getName() + ""?usePersist="" + (usePersist() ? ""true"" : ""false""));"
31677,./TargetProjects/camel/components/camel-jpa/src/test/java/org/apache/camel/component/jpa/AbstractJpaMethodTest.java,62,,"        setUp(""jpa://"" + Customer.class.getName() + ""?usePersist="" + (usePersist() ? ""true"" : ""false""));"
31678,./TargetProjects/camel/components/camel-jpa/src/test/java/org/apache/camel/component/jpa/JpaComponentTest.java,43,,"                = (JpaEndpoint) comp.createEndpoint(""jpa://"" + SendEmail.class.getName() + ""?lockModeType=PESSIMISTIC_WRITE"");"
31679,./TargetProjects/camel/components/camel-jpa/src/test/java/org/apache/camel/component/jpa/JpaEndpointTest.java,41,,"        assertEquals(""jpa://org.apache.camel.examples.SendEmail"", jpa.getEndpointUri());"
31680,./TargetProjects/camel/components/camel-jpa/src/test/java/org/apache/camel/component/jpa/JpaEndpointTest.java,42,,"        assertEquals(""camel"", jpa.getPersistenceUnit());"
31681,./TargetProjects/camel/components/camel-jpa/src/test/java/org/apache/camel/component/jpa/JpaTest.java,67,,"                exchange.getIn().setBody(new SendEmail(""foo@bar.com""));"
31682,./TargetProjects/camel/components/camel-jpa/src/test/java/org/apache/camel/component/jpa/JpaTest.java,75,,"        assertEquals(""foo@bar.com"", mail.getAddress(), ""address property"");"
31683,./TargetProjects/camel/components/camel-jpa/src/test/java/org/apache/camel/component/jpa/JpaWithNamedQueryAndParametersTest.java,86,,"                customer.setName(""Willem"");"
31684,./TargetProjects/camel/components/camel-jpa/src/test/java/org/apache/camel/component/jpa/JpaWithNamedQueryTest.java,84,,"                exchange.getIn().setBody(new MultiSteps(""foo@bar.com""));"
31685,./TargetProjects/camel/components/camel-jpa/src/test/java/org/apache/camel/processor/jpa/JpaIdempotentConsumerTest.java,88,,"                        header(""messageId""),"
31686,./TargetProjects/camel/components/camel-jpa/src/test/java/org/apache/camel/processor/jpa/JpaIdempotentConsumerTest.java,95,,"        resultEndpoint.expectedBodiesReceived(""one"", ""two"", ""three"");"
31687,./TargetProjects/camel/components/camel-jpa/src/test/java/org/apache/camel/processor/jpa/JpaIdempotentConsumerTest.java,95,,"        resultEndpoint.expectedBodiesReceived(""one"", ""two"", ""three"");"
31688,./TargetProjects/camel/components/camel-jpa/src/test/java/org/apache/camel/processor/jpa/JpaIdempotentConsumerTest.java,95,,"        resultEndpoint.expectedBodiesReceived(""one"", ""two"", ""three"");"
31689,./TargetProjects/camel/components/camel-jpa/src/test/java/org/apache/camel/processor/jpa/JpaNonTXRollbackTest.java,40,,"        template.sendBody(""jpa://"" + SendEmail.class.getName(), new SendEmail(""foo@beer.org""));"
31690,./TargetProjects/camel/components/camel-jpa/src/test/java/org/apache/camel/processor/jpa/JpaPollingConsumerLockEntityTest.java,62,,"        template.asyncRequestBodyAndHeaders(""direct:locked"", ""message"", headers);"
31691,./TargetProjects/camel/components/camel-jpa/src/test/java/org/apache/camel/processor/jpa/JpaPollingConsumerLockEntityTest.java,113,,"                        .simple(""jpa://"" + Customer.class.getName()"
31692,./TargetProjects/camel/components/camel-jpa/src/test/java/org/apache/camel/processor/jpa/JpaProducerWithQueryTest.java,61,,"        template.sendBody(""direct:deleteMultiSteps"", """");"
31693,./TargetProjects/camel/components/camel-jpa/src/test/java/org/apache/camel/processor/jpa/JpaProducerWithQueryTest.java,64,,"        template.sendBody(""direct:addMultiSteps"", m1);"
31694,./TargetProjects/camel/components/camel-jpa/src/test/java/org/apache/camel/processor/jpa/JpaProducerWithQueryTest.java,130,,"                        .to(""jpa://"" + MultiSteps.class.getName() + ""?query=select o from "" + MultiSteps.class.getName()"
31695,./TargetProjects/camel/components/camel-jpa/src/test/java/org/apache/camel/processor/jpa/JpaRouteMaximumResultsTest.java,34,,"        template.sendBody(""direct:start"", new SendEmail(""one@somewhere.org""));"
31696,./TargetProjects/camel/components/camel-jpa/src/test/java/org/apache/camel/processor/jpa/JpaRouteSharedEntityManagerTest.java,55,,"        MockEndpoint mock = getMockEndpoint(""mock:result"");"
31697,./TargetProjects/camel/components/camel-jpa/src/test/java/org/apache/camel/processor/jpa/JpaRouteSharedEntityManagerTest.java,59,,"        assertThat(""brokerCount"", countStart, equalTo(1));"
31698,./TargetProjects/camel/components/camel-jpa/src/test/java/org/apache/camel/processor/jpa/JpaRouteSharedEntityManagerTest.java,114,,"                from(""direct:startNotshared"").to(""jpa://"" + SendEmail.class.getName() + ""?"");"
31699,./TargetProjects/camel/components/camel-jpa/src/test/java/org/apache/camel/processor/jpa/JpaRouteSkipLockedEntityTest.java,49,,"        template.sendBody(""jpa://"" + VersionedItem.class.getName(), new VersionedItem(""one""));"
31700,./TargetProjects/camel/components/camel-jpa/src/test/java/org/apache/camel/processor/jpa/JpaRoutemaxMessagesPerPollTest.java,32,,"        template.sendBody(""direct:start"", new SendEmail(""one@somewhere.org""));"
31701,./TargetProjects/camel/components/camel-jpa/src/test/java/org/apache/camel/processor/jpa/JpaTXRollbackTest.java,39,,"        template.sendBody(""jpa://"" + SendEmail.class.getName(), new SendEmail(""foo@beer.org""));"
31702,./TargetProjects/camel/components/camel-jsch/src/main/java/org/apache/camel/component/scp/ScpComponent.java,88,,"                    ScpComponent.this.log.error(""[JSCH] {}"", message);"
31703,./TargetProjects/camel/components/camel-jsch/src/main/java/org/apache/camel/component/scp/ScpConfiguration.java,33,,"    @UriParam(label = ""security"", defaultValue = ""true"")"
31704,./TargetProjects/camel/components/camel-jsch/src/test/java/org/apache/camel/component/scp/ScpSimpleProduceTest.java,39,,"                        .to(""mock:result"");"
31705,./TargetProjects/camel/components/camel-jsch/src/test/java/org/apache/camel/component/scp/ScpSimpleProduceTest.java,48,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Hello World"");"
31706,./TargetProjects/camel/components/camel-jsch/src/test/java/org/apache/camel/component/scp/ScpSimpleProduceTest.java,50,,"        String uri = getScpUri() + ""?username=admin&password=admin&knownHostsFile="" + getKnownHostsFile();"
31707,./TargetProjects/camel/components/camel-jsch/src/test/java/org/apache/camel/component/scp/ScpSimpleProduceTest.java,60,,"        getMockEndpoint(""mock:result"").expectedBodiesReceivedInAnyOrder(""Hello World"", ""Bye World"");"
31708,./TargetProjects/camel/components/camel-jslt/src/generated/java/org/apache/camel/component/jslt/JsltComponentConfigurer.java,28,,"        case ""functions"": target.setFunctions(property(camelContext, java.util.Collection.class, value)); return true;"
31709,./TargetProjects/camel/components/camel-jslt/src/test/java/org/apache/camel/component/jslt/JsltBasicTest.java,34,,"        getMockEndpoint(""mock:result"").expectedMinimumMessageCount(1);"
31710,./TargetProjects/camel/components/camel-jslt/src/test/java/org/apache/camel/component/jslt/JsltBasicTest.java,42,,"        sendBody(""direct://start"","
31711,./TargetProjects/camel/components/camel-jslt/src/test/java/org/apache/camel/component/jslt/JsltVariablesTest.java,36,,"        getMockEndpoint(""mock:result"").expectedMinimumMessageCount(1);"
31712,./TargetProjects/camel/components/camel-json-validator/src/test/java/org/apache/camel/component/jsonvalidator/ValidatorRouteTest.java,32,,"    @EndpointInject(""mock:valid"")"
31713,./TargetProjects/camel/components/camel-json-validator/src/test/java/org/apache/camel/component/jsonvalidator/ValidatorRouteTest.java,46,,"        template.sendBody(""direct:start"","
31714,./TargetProjects/camel/components/camel-json-validator/src/test/java/org/apache/camel/component/jsonvalidator/ValidatorRouteTest.java,57,,"        template.sendBodyAndHeader(""direct:startHeaders"","
31715,./TargetProjects/camel/components/camel-json-validator/src/test/java/org/apache/camel/component/jsonvalidator/ValidatorRouteTest.java,59,,"                ""headerToValidate"","
31716,./TargetProjects/camel/components/camel-json-validator/src/test/java/org/apache/camel/component/jsonvalidator/ValidatorRouteTest.java,71,,"                ""{ \""name\"": \""Joe Doe\"", \""id\"": \""ABC123\"", \""price\"": 12.5 }"");"
31717,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/JsonPathBeanTest.java,29,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""foo foo2 bar"");"
31718,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/JsonPathBeanTest.java,30,,"        template.sendBody(""direct:start"", json);"
31719,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/JsonPathCBRTest.java,34,,"                from(""direct:start"")"
31720,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/JsonPathCBRTest.java,37,,"                        .to(""mock:cheap"")"
31721,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/JsonPathCBRTest.java,39,,"                        .to(""mock:average"")"
31722,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/JsonPathCBRTest.java,41,,"                        .to(""mock:expensive"");"
31723,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/JsonPathCharsetTest.java,39,,"                from(""direct:start"").transform().jsonpath(""$.store.book[*].title"").to(""mock:authors"");"
31724,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/JsonPathCharsetTest.java,39,,"                from(""direct:start"").transform().jsonpath(""$.store.book[*].title"").to(""mock:authors"");"
31725,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/JsonPathLanguageTest.java,55,,"        Language lan = context.resolveLanguage(""jsonpath"");"
31726,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/JsonPathMockMatchesTest.java,33,,"                from(""direct:start"")"
31727,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/JsonPathSourceTest.java,44,,"                from(""direct:start"").transform().jsonpath(""$.store.book[0].title"", String.class)"
31728,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/JsonPathSourceTest.java,45,,"                        .to(""mock:title"");"
31729,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/JsonPathSourceTest.java,47,,"                from(""direct:second"").transform().jsonpath(""$.store.book[1].title"", String.class)"
31730,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/JsonPathSourceTest.java,55,,"        switchToDefaultCharset(""UTF-8"");"
31731,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/JsonPathSourceTest.java,61,,"                .asGenericFile(""src/test/resources/germanbooks-utf8.json"","
31732,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/JsonPathSourceTest.java,95,,"                .asGenericFile(""src/test/resources/germanbooks-iso-8859-1.json"","
31733,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/JsonPathSplitTest.java,40,,"                        .to(""mock:authors"")"
31734,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/JsonPathStreamCachingCBRTest.java,38,,"                from(""direct:start"")"
31735,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/JsonPathStreamCachingCBRTest.java,42,,"                        .to(""mock:cheap"")"
31736,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/JsonPathStreamCachingCBRTest.java,44,,"                        .to(""mock:average"")"
31737,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/JsonPathStreamCachingCBRTest.java,46,,"                        .to(""mock:expensive"");"
31738,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/JsonPathTransformResultTypeTest.java,34,,"                        .to(""mock:price"");"
31739,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/JsonPathTransformResultTypeTest.java,51,,"        template.sendBody(""direct:start"", new File(""src/test/resources/books.json""));"
31740,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/JsonPathWithSimpleCBRTest.java,32,,"                from(""direct:start"")"
31741,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/JsonPathWithSimpleCBRTest.java,35,,"                        .to(""mock:cheap"")"
31742,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/JsonPathWithSimpleCBRTest.java,37,,"                        .to(""mock:average"")"
31743,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/JsonPathWithSimpleCBRTest.java,39,,"                        .to(""mock:expensive"");"
31744,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/JsonStreamTest.java,34,,"        test(""json_stream/jsonUTF8.txt"", ""UTF-8"");"
31745,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/SpringJsonPathTransformResultTypeTest.java,35,,"        getMockEndpoint(""mock:price"").expectedMessageCount(4);"
31746,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/SpringJsonPathTransformResultTypeTest.java,41,,"        template.sendBody(""direct:start"", new File(""src/test/resources/books.json""));"
31747,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/easypredicate/EasyJsonPathWithRootSimpleCBRTest.java,32,,"                from(""direct:start"")"
31748,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/easypredicate/EasyJsonPathWithRootSimpleCBRTest.java,35,,"                        .to(""mock:cheap"")"
31749,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/easypredicate/EasyJsonPathWithRootSimpleCBRTest.java,37,,"                        .to(""mock:average"")"
31750,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/easypredicate/EasyJsonPathWithRootSimpleCBRTest.java,39,,"                        .to(""mock:expensive"");"
31751,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/easypredicate/EasyJsonPathWithSimpleCBRTest.java,32,,"                from(""direct:start"")"
31752,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/easypredicate/EasyJsonPathWithSimpleCBRTest.java,35,,"                        .to(""mock:cheap"")"
31753,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/easypredicate/EasyJsonPathWithSimpleCBRTest.java,37,,"                        .to(""mock:average"")"
31754,./TargetProjects/camel/components/camel-jsonpath/src/test/java/org/apache/camel/jsonpath/easypredicate/EasyJsonPathWithSimpleCBRTest.java,39,,"                        .to(""mock:expensive"");"
31755,./TargetProjects/camel/components/camel-jt400/src/generated/java/org/apache/camel/component/jt400/Jt400EndpointConfigurer.java,66,,"        case ""schedulerproperties"":"
31756,./TargetProjects/camel/components/camel-jt400/src/generated/java/org/apache/camel/component/jt400/Jt400EndpointConfigurer.java,67,,"        case ""schedulerProperties"": target.setSchedulerProperties(property(camelContext, java.util.Map.class, value)); return true;"
31757,./TargetProjects/camel/components/camel-jt400/src/main/java/org/apache/camel/component/jt400/Jt400Configuration.java,109,,"    @UriPath(label = ""security"")"
31758,./TargetProjects/camel/components/camel-jt400/src/main/java/org/apache/camel/component/jt400/Jt400Configuration.java,147,,"    @UriParam(label = ""consumer"", defaultValue = ""EQ"")"
31759,./TargetProjects/camel/components/camel-jta/src/main/java/org/apache/camel/jta/TransactionErrorHandler.java,279,,"                LOG.error(""Transaction rollback ({}) redelivered({}) for {} due exchange was marked for rollbackOnly"","
31760,./TargetProjects/camel/components/camel-jta/src/main/java/org/apache/camel/jta/TransactionErrorHandler.java,282,,"                LOG.error(""Transaction rollback ({}) redelivered({}) for {} caught: {}"","
31761,./TargetProjects/camel/components/camel-kafka/src/generated/java/org/apache/camel/component/kafka/KafkaComponentConfigurer.java,31,,"        case ""additionalproperties"":"
31762,./TargetProjects/camel/components/camel-kafka/src/generated/java/org/apache/camel/component/kafka/KafkaComponentConfigurer.java,32,,"        case ""additionalProperties"": getOrCreateConfiguration(target).setAdditionalProperties(property(camelContext, java.util.Map.class, value)); return true;"
31763,./TargetProjects/camel/components/camel-kafka/src/generated/java/org/apache/camel/component/kafka/KafkaComponentConfigurer.java,92,,"        case ""kafkaClientFactory"": target.setKafkaClientFactory(property(camelContext, org.apache.camel.component.kafka.KafkaClientFactory.class, value)); return true;"
31764,./TargetProjects/camel/components/camel-kafka/src/generated/java/org/apache/camel/component/kafka/KafkaComponentConfigurer.java,134,,"        case ""offsetrepository"":"
31765,./TargetProjects/camel/components/camel-kafka/src/generated/java/org/apache/camel/component/kafka/KafkaComponentConfigurer.java,135,,"        case ""offsetRepository"": getOrCreateConfiguration(target).setOffsetRepository(property(camelContext, org.apache.camel.spi.StateRepository.class, value)); return true;"
31766,./TargetProjects/camel/components/camel-kafka/src/generated/java/org/apache/camel/component/kafka/KafkaComponentConfigurer.java,142,,"        case ""pollExceptionStrategy"": target.setPollExceptionStrategy(property(camelContext, org.apache.camel.component.kafka.PollExceptionStrategy.class, value)); return true;"
31767,./TargetProjects/camel/components/camel-kafka/src/generated/java/org/apache/camel/component/kafka/KafkaEndpointConfigurer.java,24,,"        case ""additionalproperties"":"
31768,./TargetProjects/camel/components/camel-kafka/src/generated/java/org/apache/camel/component/kafka/KafkaEndpointConfigurer.java,25,,"        case ""additionalProperties"": target.getConfiguration().setAdditionalProperties(property(camelContext, java.util.Map.class, value)); return true;"
31769,./TargetProjects/camel/components/camel-kafka/src/generated/java/org/apache/camel/component/kafka/KafkaEndpointConfigurer.java,124,,"        case ""offsetrepository"":"
31770,./TargetProjects/camel/components/camel-kafka/src/generated/java/org/apache/camel/component/kafka/KafkaEndpointConfigurer.java,125,,"        case ""offsetRepository"": target.getConfiguration().setOffsetRepository(property(camelContext, org.apache.camel.spi.StateRepository.class, value)); return true;"
31771,./TargetProjects/camel/components/camel-kafka/src/main/java/org/apache/camel/component/kafka/KafkaConfiguration.java,58,,"    @UriPath(label = ""common"")"
31772,./TargetProjects/camel/components/camel-kafka/src/main/java/org/apache/camel/component/kafka/KafkaConfiguration.java,69,,"    @UriParam(label = ""consumer"")"
31773,./TargetProjects/camel/components/camel-kafka/src/main/java/org/apache/camel/component/kafka/KafkaConfiguration.java,149,,"    @UriParam(label = ""producer"", defaultValue = KafkaConstants.KAFKA_DEFAULT_PARTITIONER)"
31774,./TargetProjects/camel/components/camel-kafka/src/main/java/org/apache/camel/component/kafka/KafkaConfiguration.java,243,,"    @UriParam(label = ""common,security"")"
31775,./TargetProjects/camel/components/camel-kafka/src/main/java/org/apache/camel/component/kafka/KafkaConfiguration.java,248,,"    @UriParam(label = ""producer,security"", secret = true)"
31776,./TargetProjects/camel/components/camel-kafka/src/main/java/org/apache/camel/component/kafka/KafkaProducer.java,57,,"    @SuppressWarnings(""rawtypes"")"
31777,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/KafkaComponentTest.java,43,,"        assertEquals(""broker1:12345,broker2:12566"", endpoint.getConfiguration().getBrokers());"
31778,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/KafkaComponentTest.java,44,,"        assertEquals(""mytopic"", endpoint.getConfiguration().getTopic());"
31779,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/KafkaComponentTest.java,50,,"        KafkaComponent kafka = context.getComponent(""kafka"", KafkaComponent.class);"
31780,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/KafkaComponentTest.java,70,,"        params.put(""extra.1"", 789);"
31781,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/KafkaComponentTest.java,71,,"        params.put(""extra.3"", ""test.extra.3"");"
31782,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/KafkaComponentTest.java,71,,"        params.put(""extra.3"", ""test.extra.3"");"
31783,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/KafkaComponentTest.java,83,,"        assertEquals(""test"", endpoint.getConfiguration().getAdditionalProperties().get(""extra.2""));"
31784,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/KafkaComponentTest.java,115,,"        assertEquals(""testing"", endpoint.getConfiguration().getClientId());"
31785,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/KafkaComponentTest.java,136,,"        assertEquals(""/abc"", endpoint.getConfiguration().getSslKeystoreLocation());"
31786,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/KafkaComponentTest.java,143,,"        assertEquals(""JKS"", endpoint.getConfiguration().getSslKeystoreType());"
31787,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/KafkaComponentTest.java,260,,"        keyStoreParameters.setPassword(""my-password"");"
31788,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/KafkaProducerTest.java,75,,"    @SuppressWarnings({ ""unchecked"" })"
31789,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/KafkaProducerTest.java,81,,"        endpoint = kafka.createEndpoint(""kafka:sometopic"", ""sometopic"", new HashMap());"
31790,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/KafkaProducerTest.java,188,,"        in.setHeader(KafkaConstants.TOPIC, ""anotherTopic"");"
31791,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/KafkaProducerTest.java,205,,"        in.setHeader(KafkaConstants.KEY, ""someKey"");"
31792,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/KafkaProducerTest.java,276,,"        endpoint.getConfiguration().setTopic(""someTopic"");"
31793,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/KafkaProducerTest.java,367,,"                = createListOfExchangesWithTopics(Arrays.asList(""overridenTopic1"", ""overridenTopic2"", ""overridenTopic3""));"
31794,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/KafkaProducerTest.java,367,,"                = createListOfExchangesWithTopics(Arrays.asList(""overridenTopic1"", ""overridenTopic2"", ""overridenTopic3""));"
31795,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/KafkaProducerTest.java,367,,"                = createListOfExchangesWithTopics(Arrays.asList(""overridenTopic1"", ""overridenTopic2"", ""overridenTopic3""));"
31796,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/KafkaProducerTest.java,410,,"    @SuppressWarnings({ ""unchecked"", ""rawtypes"" })"
31797,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/KafkaProducerTest.java,455,,"        assertEquals(1, recordMetaData1.size(), ""Expected one recordMetaData"");"
31798,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/integration/KafkaConsumerFullIT.java,85,,"                from(from).routeId(""foo"").to(to);"
31799,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/integration/KafkaConsumerFullIT.java,96,,"        to.expectedBodiesReceivedInAnyOrder(""message-0"", ""message-1"", ""message-2"", ""message-3"", ""message-4"");"
31800,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/integration/KafkaConsumerFullIT.java,96,,"        to.expectedBodiesReceivedInAnyOrder(""message-0"", ""message-1"", ""message-2"", ""message-3"", ""message-4"");"
31801,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/integration/KafkaConsumerFullIT.java,96,,"        to.expectedBodiesReceivedInAnyOrder(""message-0"", ""message-1"", ""message-2"", ""message-3"", ""message-4"");"
31802,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/integration/KafkaConsumerFullIT.java,96,,"        to.expectedBodiesReceivedInAnyOrder(""message-0"", ""message-1"", ""message-2"", ""message-3"", ""message-4"");"
31803,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/integration/KafkaConsumerFullIT.java,96,,"        to.expectedBodiesReceivedInAnyOrder(""message-0"", ""message-1"", ""message-2"", ""message-3"", ""message-4"");"
31804,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/integration/KafkaConsumerManualCommitIT.java,73,,"                from(from).routeId(""foo"").to(to).process(e -> {"
31805,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/integration/KafkaProducerFullIT.java,65,,"    private static final String TOPIC_STRINGS = ""test"";"
31806,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/integration/KafkaProducerFullIT.java,77,,"    @EndpointInject(""kafka:"" + TOPIC_STRINGS + ""?requestRequiredAcks=-1"")"
31807,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/integration/KafkaProducerFullIT.java,77,,"    @EndpointInject(""kafka:"" + TOPIC_STRINGS + ""?requestRequiredAcks=-1"")"
31808,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/integration/KafkaProducerFullIT.java,170,,"        sendMessagesInRoute(messageInTopic, stringsTemplate, ""IT test message"", KafkaConstants.PARTITION_KEY, ""0"");"
31809,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/integration/KafkaProducerFullIT.java,171,,"        sendMessagesInRoute(messageInOtherTopic, stringsTemplate, ""IT test message in other topic"","
31810,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/integration/KafkaProducerFullIT.java,180,,"                ""Not all messages were published to the kafka topics. Not received: "" + messagesLatch.getCount());"
31811,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/integration/KafkaProducerFullIT.java,185,,"            @SuppressWarnings(""unchecked"")"
31812,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/integration/KafkaProducerFullIT.java,189,,"            assertTrue(recordMetaData1.get(0).offset() >= 0, ""Offset is positive"");"
31813,./TargetProjects/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/integration/KafkaProducerFullIT.java,190,,"            assertTrue(recordMetaData1.get(0).topic().startsWith(""test""), ""Topic Name start with 'test'"");"
31814,./TargetProjects/camel/components/camel-kamelet/src/generated/java/org/apache/camel/component/kamelet/KameletComponentConfigurer.java,32,,"        case ""routeproperties"":"
31815,./TargetProjects/camel/components/camel-kamelet/src/generated/java/org/apache/camel/component/kamelet/KameletComponentConfigurer.java,33,,"        case ""routeProperties"": target.setRouteProperties(property(camelContext, java.util.Map.class, value)); return true;"
31816,./TargetProjects/camel/components/camel-kamelet/src/generated/java/org/apache/camel/component/kamelet/KameletComponentConfigurer.java,35,,"        case ""routeTemplateLoaderListener"": target.setRouteTemplateLoaderListener(property(camelContext, org.apache.camel.spi.RouteTemplateLoaderListener.class, value)); return true;"
31817,./TargetProjects/camel/components/camel-kamelet/src/generated/java/org/apache/camel/component/kamelet/KameletComponentConfigurer.java,36,,"        case ""templateproperties"":"
31818,./TargetProjects/camel/components/camel-kamelet/src/generated/java/org/apache/camel/component/kamelet/KameletComponentConfigurer.java,37,,"        case ""templateProperties"": target.setTemplateProperties(property(camelContext, java.util.Map.class, value)); return true;"
31819,./TargetProjects/camel/components/camel-kamelet/src/test/java/org/apache/camel/component/kamelet/KameletAggregateTest.java,34,,"        template.sendBody(""direct:start"", ""A"");"
31820,./TargetProjects/camel/components/camel-kamelet/src/test/java/org/apache/camel/component/kamelet/KameletDiscoveryTest.java,36,,"                DefaultRoutesLoader.ROUTES_LOADER_KEY_PREFIX + ""kamelet.yaml"","
31821,./TargetProjects/camel/components/camel-kamelet/src/test/java/org/apache/camel/component/kamelet/KameletEipAggregateGroovyTest.java,30,,"        template.sendBody(""direct:start"", ""A"");"
31822,./TargetProjects/camel/components/camel-kamelet/src/test/java/org/apache/camel/component/kamelet/KameletEipAggregateJoorTest.java,30,,"        template.sendBody(""direct:start"", ""A"");"
31823,./TargetProjects/camel/components/camel-kamelet/src/test/java/org/apache/camel/component/kamelet/KameletEipAggregateTest.java,31,,"        template.sendBody(""direct:start"", ""A"");"
31824,./TargetProjects/camel/components/camel-kamelet/src/test/java/org/apache/camel/component/kamelet/KameletEipTest.java,31,,"        template.sendBody(""direct:start"", ""A"");"
31825,./TargetProjects/camel/components/camel-kamelet/src/test/java/org/apache/camel/component/kamelet/KameletGlobalPropertiesTest.java,69,,"                        .hasFieldOrPropertyWithValue(""endpointUri"","
31826,./TargetProjects/camel/components/camel-kamelet/src/test/java/org/apache/camel/component/kamelet/KameletGlobalPropertiesTest.java,71,,"                        .hasFieldOrPropertyWithValue(""proxyAuthUsername"", ""u+sr"")"
31827,./TargetProjects/camel/components/camel-kamelet/src/test/java/org/apache/camel/component/kamelet/KameletGlobalPropertiesTest.java,71,,"                        .hasFieldOrPropertyWithValue(""proxyAuthUsername"", ""u+sr"")"
31828,./TargetProjects/camel/components/camel-kamelet/src/test/java/org/apache/camel/component/kamelet/KameletGlobalPropertiesTest.java,72,,"                        .hasFieldOrPropertyWithValue(""proxyAuthPassword"", ""p+wd"");"
31829,./TargetProjects/camel/components/camel-kamelet/src/test/java/org/apache/camel/component/kamelet/KameletGlobalPropertiesTest.java,72,,"                        .hasFieldOrPropertyWithValue(""proxyAuthPassword"", ""p+wd"");"
31830,./TargetProjects/camel/components/camel-kamelet/src/test/java/org/apache/camel/component/kamelet/KameletGlobalPropertiesTest.java,121,,"                        .containsEntry(""message"", ""Hello Kamelets"");"
31831,./TargetProjects/camel/components/camel-kamelet/src/test/java/org/apache/camel/component/kamelet/KameletLocalBeanConfigureTest.java,29,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Hi John we are going to Moes"");"
31832,./TargetProjects/camel/components/camel-kamelet/src/test/java/org/apache/camel/component/kamelet/KameletLocalBeanGroovyExternalTest.java,29,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Hi John we are going to Moes"");"
31833,./TargetProjects/camel/components/camel-kamelet/src/test/java/org/apache/camel/component/kamelet/KameletLocalBeanIoCTest.java,29,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Hi John we are going to Moes"");"
31834,./TargetProjects/camel/components/camel-kamelet/src/test/java/org/apache/camel/component/kamelet/KameletLocalBeanJoorExternalTest.java,32,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Hi John we are going to Moes"");"
31835,./TargetProjects/camel/components/camel-kamelet/src/test/java/org/apache/camel/component/kamelet/KameletLocalBeanLanguageTest.java,30,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Hi John we are going to Moes"");"
31836,./TargetProjects/camel/components/camel-kamelet/src/test/java/org/apache/camel/component/kamelet/KameletLocalBeanTest.java,29,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Hi John we are going to Moes"");"
31837,./TargetProjects/camel/components/camel-kamelet/src/test/java/org/apache/camel/component/kamelet/KameletLocationTest.java,41,,"        template.sendBody(""direct:start"", ""Hello"");"
31838,./TargetProjects/camel/components/camel-kubernetes/src/main/java/org/apache/camel/component/kubernetes/KubernetesConfiguration.java,39,,"    @UriParam(label = ""security"", secret = true)"
31839,./TargetProjects/camel/components/camel-kubernetes/src/main/java/org/apache/camel/component/kubernetes/KubernetesConfiguration.java,81,,"    @UriParam(label = ""consumer"")"
31840,./TargetProjects/camel/components/camel-kubernetes/src/test/java/org/apache/camel/component/kubernetes/cluster/KubernetesClusterServiceTest.java,95,,"        LeaderRecorder mypod1 = addMember(""mypod1"", type);"
31841,./TargetProjects/camel/components/camel-kubernetes/src/test/java/org/apache/camel/component/kubernetes/cluster/KubernetesClusterServiceTest.java,96,,"        LeaderRecorder mypod2 = addMember(""mypod2"", type);"
31842,./TargetProjects/camel/components/camel-kubernetes/src/test/java/org/apache/camel/component/kubernetes/cluster/KubernetesClusterServiceTest.java,104,,"        assertTrue(leader.startsWith(""mypod""));"
31843,./TargetProjects/camel/components/camel-kubernetes/src/test/java/org/apache/camel/component/kubernetes/cluster/TimedLeaderNotifierTest.java,71,,"        Set<String> members = new TreeSet<>(Arrays.asList(""one"", ""two"", ""three""));"
31844,./TargetProjects/camel/components/camel-kubernetes/src/test/java/org/apache/camel/component/kubernetes/cluster/TimedLeaderNotifierTest.java,71,,"        Set<String> members = new TreeSet<>(Arrays.asList(""one"", ""two"", ""three""));"
31845,./TargetProjects/camel/components/camel-kubernetes/src/test/java/org/apache/camel/component/kubernetes/cluster/TimedLeaderNotifierTest.java,71,,"        Set<String> members = new TreeSet<>(Arrays.asList(""one"", ""two"", ""three""));"
31846,./TargetProjects/camel/components/camel-kubernetes/src/test/java/org/apache/camel/component/kubernetes/consumer/KubernetesConfigMapsConsumerTest.java,53,,"            exchange.getIn().setHeader(KubernetesConstants.KUBERNETES_NAMESPACE_NAME, ""default"");"
31847,./TargetProjects/camel/components/camel-kubernetes/src/test/java/org/apache/camel/component/kubernetes/consumer/KubernetesConfigMapsConsumerTest.java,54,,"            exchange.getIn().setHeader(KubernetesConstants.KUBERNETES_CONFIGMAP_NAME, ""test"");"
31848,./TargetProjects/camel/components/camel-kubernetes/src/test/java/org/apache/camel/component/kubernetes/consumer/KubernetesNamespacesConsumerTest.java,57,,"            exchange.getIn().setHeader(KubernetesConstants.KUBERNETES_NAMESPACE_NAME, ""test"");"
31849,./TargetProjects/camel/components/camel-kubernetes/src/test/java/org/apache/camel/component/kubernetes/consumer/KubernetesServicesConsumerTest.java,60,,"            exchange.getIn().setHeader(KubernetesConstants.KUBERNETES_SERVICE_NAME, ""test"");"
31850,./TargetProjects/camel/components/camel-kubernetes/src/test/java/org/apache/camel/component/kubernetes/producer/KubernetesConfigMapsProducerTest.java,79,,"        meta.setName(""cm1"");"
31851,./TargetProjects/camel/components/camel-kubernetes/src/test/java/org/apache/camel/component/kubernetes/producer/KubernetesCustomResourcesProducerTest.java,70,,"                .withName(""githubsources.sources.knative.dev"")"
31852,./TargetProjects/camel/components/camel-kubernetes/src/test/java/org/apache/camel/component/kubernetes/producer/KubernetesCustomResourcesProducerTest.java,71,,"                .withGroup(""sources.knative.dev"")"
31853,./TargetProjects/camel/components/camel-kubernetes/src/test/java/org/apache/camel/component/kubernetes/producer/KubernetesCustomResourcesProducerTest.java,72,,"                .withScope(""Namespaced"")"
31854,./TargetProjects/camel/components/camel-kubernetes/src/test/java/org/apache/camel/component/kubernetes/producer/KubernetesCustomResourcesProducerTest.java,73,,"                .withVersion(""v1alpha1"")"
31855,./TargetProjects/camel/components/camel-kubernetes/src/test/java/org/apache/camel/component/kubernetes/producer/KubernetesCustomResourcesProducerTest.java,74,,"                .withPlural(""githubsources"")"
31856,./TargetProjects/camel/components/camel-kubernetes/src/test/java/org/apache/camel/component/kubernetes/producer/KubernetesCustomResourcesProducerTest.java,91,,"        server.expect().get().withPath(""/apis/sources.knative.dev/v1alpha1/namespaces/test/githubsources"")"
31857,./TargetProjects/camel/components/camel-kubernetes/src/test/java/org/apache/camel/component/kubernetes/producer/KubernetesCustomResourcesProducerTest.java,94,,"        Exchange ex = template.request(""direct:listCustomResources"", exchange -> {"
31858,./TargetProjects/camel/components/camel-kubernetes/src/test/java/org/apache/camel/component/kubernetes/producer/KubernetesCustomResourcesProducerTest.java,95,,"            exchange.getIn().setHeader(KubernetesConstants.KUBERNETES_NAMESPACE_NAME, ""test"");"
31859,./TargetProjects/camel/components/camel-kubernetes/src/test/java/org/apache/camel/component/kubernetes/producer/KubernetesDeploymentsProducerTest.java,79,,"        Deployment de1 = new DeploymentBuilder().withNewMetadata().withNamespace(""test"").withName(""de1"")"
31860,./TargetProjects/camel/components/camel-kubernetes/src/test/java/org/apache/camel/component/kubernetes/producer/KubernetesDeploymentsProducerTest.java,83,,"        server.expect().withPath(""/apis/extensions/v1beta1/namespaces/test/deployments/de1"").andReturn(200, de1).once();"
31861,./TargetProjects/camel/components/camel-kubernetes/src/test/java/org/apache/camel/component/kubernetes/producer/KubernetesHPAProducerTest.java,87,,"                = new HorizontalPodAutoscalerBuilder().withNewMetadata().withName(""hpa1"").withNamespace(""test"").and().build();"
31862,./TargetProjects/camel/components/camel-kubernetes/src/test/java/org/apache/camel/component/kubernetes/producer/KubernetesHPAProducerTest.java,87,,"                = new HorizontalPodAutoscalerBuilder().withNewMetadata().withName(""hpa1"").withNamespace(""test"").and().build();"
31863,./TargetProjects/camel/components/camel-kubernetes/src/test/java/org/apache/camel/component/kubernetes/producer/KubernetesNodesProducerTest.java,79,,"        meta.setName(""test"");"
31864,./TargetProjects/camel/components/camel-kubernetes/src/test/java/org/apache/camel/component/kubernetes/producer/KubernetesPodsProducerTest.java,59,,"                exchange -> exchange.getIn().setHeader(KubernetesConstants.KUBERNETES_NAMESPACE_NAME, ""test""));"
31865,./TargetProjects/camel/components/camel-kubernetes/src/test/java/org/apache/camel/component/kubernetes/producer/KubernetesPodsProducerTest.java,83,,"        Pod pod1 = new PodBuilder().withNewMetadata().withName(""pod1"").withNamespace(""test"").and().build();"
31866,./TargetProjects/camel/components/camel-kubernetes/src/test/java/org/apache/camel/component/kubernetes/producer/KubernetesReplicationControllersProducerTest.java,82,,"                = new ReplicationControllerBuilder().withNewMetadata().withName(""rc1"").withNamespace(""test"").and().build();"
31867,./TargetProjects/camel/components/camel-kubernetes/src/test/java/org/apache/camel/component/kubernetes/producer/KubernetesReplicationControllersProducerTest.java,97,,"        server.expect().withPath(""/api/v1/namespaces/test/replicationcontrollers/repl1"")"
31868,./TargetProjects/camel/components/camel-kubernetes/src/test/java/org/apache/camel/component/kubernetes/producer/KubernetesReplicationControllersProducerTest.java,98,,"                .andReturn(200, new ReplicationControllerBuilder().withNewMetadata().withName(""repl1"")"
31869,./TargetProjects/camel/components/camel-kubernetes/src/test/java/org/apache/camel/component/kubernetes/producer/KubernetesSecretsProducerTest.java,79,,"        Secret sc1 = new SecretBuilder().withNewMetadata().withName(""sc1"").withNamespace(""test"").and().build();"
31870,./TargetProjects/camel/components/camel-kubernetes/src/test/java/org/apache/camel/component/kubernetes/producer/KubernetesSecretsProducerTest.java,79,,"        Secret sc1 = new SecretBuilder().withNewMetadata().withName(""sc1"").withNamespace(""test"").and().build();"
31871,./TargetProjects/camel/components/camel-kubernetes/src/test/java/org/apache/camel/component/kubernetes/producer/KubernetesServicesProducerTest.java,78,,"        Service se1 = new ServiceBuilder().withNewMetadata().withName(""se1"").withNamespace(""test"").and().build();"
31872,./TargetProjects/camel/components/camel-kubernetes/src/test/java/org/apache/camel/component/kubernetes/producer/KubernetesServicesProducerTest.java,78,,"        Service se1 = new ServiceBuilder().withNewMetadata().withName(""se1"").withNamespace(""test"").and().build();"
31873,./TargetProjects/camel/components/camel-kudu/src/test/java/org/apache/camel/component/kudu/KuduProducerTest.java,38,,"    @EndpointInject(value = ""mock:result"")"
31874,./TargetProjects/camel/components/camel-ldap/src/test/java/org/apache/camel/component/ldap/LdapRouteManualIT.java,81,,"        camel.addRoutes(createRouteBuilder(""ldap:localhost:"" + port + ""?base=ou=system""));"
31875,./TargetProjects/camel/components/camel-ldap/src/test/java/org/apache/camel/component/ldap/LdapRouteManualIT.java,85,,"        Endpoint endpoint = camel.getEndpoint(""direct:start"");"
31876,./TargetProjects/camel/components/camel-ldif/src/test/java/org/apache/camel/component/ldif/LdifRouteIT.java,140,,"        assertThat(ldifResults.get(0), equalTo(""success""));"
31877,./TargetProjects/camel/components/camel-ldif/src/test/java/org/apache/camel/component/ldif/LdifRouteIT.java,145,,"        NamingEnumeration<SearchResult> searchResults = ldapContext.search(""dc=example,dc=org"", ""(uid=test*)"", SEARCH_CONTROLS);"
31878,./TargetProjects/camel/components/camel-ldif/src/test/java/org/apache/camel/component/ldif/LdifRouteIT.java,145,,"        NamingEnumeration<SearchResult> searchResults = ldapContext.search(""dc=example,dc=org"", ""(uid=test*)"", SEARCH_CONTROLS);"
31879,./TargetProjects/camel/components/camel-leveldb-legacy/src/main/java/org/apache/camel/component/leveldb/LevelDBAggregationRepository.java,74,,"        StringHelper.notEmpty(repositoryName, ""repositoryName"");"
31880,./TargetProjects/camel/components/camel-leveldb-legacy/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateDiscardOnTimeoutTest.java,55,,"        template.sendBodyAndHeader(""direct:start"", ""A"", ""id"", 123);"
31881,./TargetProjects/camel/components/camel-leveldb-legacy/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateForceCompletionHeaderTest.java,49,,"        getMockEndpoint(""mock:aggregated"").expectedMessageCount(0);"
31882,./TargetProjects/camel/components/camel-leveldb-legacy/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateForceCompletionHeaderTest.java,51,,"        template.sendBodyAndHeader(""direct:start"", ""test1"", ""id"", ""1"");"
31883,./TargetProjects/camel/components/camel-leveldb-legacy/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateNotLostRemovedWhenConfirmedTest.java,51,,"        template.sendBodyAndHeader(""direct:start"", ""A"", ""id"", 123);"
31884,./TargetProjects/camel/components/camel-leveldb-legacy/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateNotLostTest.java,54,,"        template.sendBodyAndHeader(""direct:start"", ""A"", ""id"", 123);"
31885,./TargetProjects/camel/components/camel-leveldb-legacy/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateRecoverDeadLetterChannelFailedTest.java,61,,"        getMockEndpoint(""mock:dead"").expectedMinimumMessageCount(2);"
31886,./TargetProjects/camel/components/camel-leveldb-legacy/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateRecoverDeadLetterChannelFailedTest.java,68,,"        template.sendBodyAndHeader(""direct:start"", ""A"", ""id"", 123);"
31887,./TargetProjects/camel/components/camel-leveldb-legacy/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateRecoverDeadLetterChannelTest.java,47,,"        repo.setDeadLetterUri(""mock:dead"");"
31888,./TargetProjects/camel/components/camel-leveldb-legacy/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateRecoverDeadLetterChannelTest.java,59,,"        getMockEndpoint(""mock:aggregated"").expectedMessageCount(4);"
31889,./TargetProjects/camel/components/camel-leveldb-legacy/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateRecoverDeadLetterChannelTest.java,76,,"        template.sendBodyAndHeader(""direct:start"", ""A"", ""id"", 123);"
31890,./TargetProjects/camel/components/camel-leveldb-legacy/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateRecoverTest.java,56,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""ABCDE"");"
31891,./TargetProjects/camel/components/camel-leveldb-legacy/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateRecoverTest.java,62,,"        template.sendBodyAndHeader(""direct:start"", ""A"", ""id"", 123);"
31892,./TargetProjects/camel/components/camel-leveldb-legacy/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateRecoverWithRedeliveryPolicyTest.java,55,,"        getMockEndpoint(""mock:result"").setResultWaitTime(20000);"
31893,./TargetProjects/camel/components/camel-leveldb-legacy/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateRecoverWithRedeliveryPolicyTest.java,66,,"        template.sendBodyAndHeader(""direct:start"", ""A"", ""id"", 123);"
31894,./TargetProjects/camel/components/camel-leveldb-legacy/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateRecoverWithSedaTest.java,56,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""ABCDE"");"
31895,./TargetProjects/camel/components/camel-leveldb-legacy/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateRecoverWithSedaTest.java,62,,"        template.sendBodyAndHeader(""direct:start"", ""A"", ""id"", 123);"
31896,./TargetProjects/camel/components/camel-leveldb-legacy/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateTest.java,49,,"        template.sendBodyAndHeader(""direct:start"", ""A"", ""id"", 123);"
31897,./TargetProjects/camel/components/camel-leveldb-legacy/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateTimeoutCompletionRestartTest.java,47,,"        template.sendBodyAndHeader(""direct:start"", ""A"", ""id"", 123);"
31898,./TargetProjects/camel/components/camel-leveldb-legacy/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregationRepositoryAlotDataTest.java,64,,"            exchange1.getIn().setBody(""counter:"" + i);"
31899,./TargetProjects/camel/components/camel-leveldb-legacy/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregationRepositoryAlotDataTest.java,65,,"            repo.add(context, ""foo"", exchange1);"
31900,./TargetProjects/camel/components/camel-leveldb-legacy/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregationRepositoryLoadExistingTest.java,66,,"        Exchange actual = repo.add(context, ""foo"", exchange1);"
31901,./TargetProjects/camel/components/camel-leveldb-legacy/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregationRepositoryMultipleRepoTest.java,78,,"        actual = repo1.add(context, ""foo"", exchange1);"
31902,./TargetProjects/camel/components/camel-leveldb-legacy/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregationRepositoryMultipleRepoTest.java,95,,"        exchange3.getIn().setBody(""Hello World"");"
31903,./TargetProjects/camel/components/camel-leveldb-legacy/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregationRepositoryMultipleRepoTest.java,96,,"        actual = repo2.add(context, ""bar"", exchange3);"
31904,./TargetProjects/camel/components/camel-leveldb-legacy/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregationRepositoryTest.java,70,,"        actual = repo.add(context, ""foo"", exchange1);"
31905,./TargetProjects/camel/components/camel-leveldb-legacy/src/test/java/org/apache/camel/component/leveldb/LevelDBExchangeSerializationTest.java,68,,"        exchange.getIn().setHeader(""name"", ""Claus"");"
31906,./TargetProjects/camel/components/camel-leveldb-legacy/src/test/java/org/apache/camel/component/leveldb/LevelDBExchangeSerializationTest.java,73,,"        exchange.getIn().setHeader(""date"", now);"
31907,./TargetProjects/camel/components/camel-leveldb-legacy/src/test/java/org/apache/camel/component/leveldb/LevelDBExchangeSerializationTest.java,75,,"        repo.add(context, ""foo"", exchange);"
31908,./TargetProjects/camel/components/camel-leveldb-legacy/src/test/java/org/apache/camel/component/leveldb/LevelDBSpringAggregateRecoverWithRedeliveryPolicyTest.java,56,,"        getMockEndpoint(""mock:result"").setResultWaitTime(20000);"
31909,./TargetProjects/camel/components/camel-leveldb-legacy/src/test/java/org/apache/camel/component/leveldb/LevelDBSpringAggregateRecoverWithRedeliveryPolicyTest.java,66,,"        template.sendBodyAndHeader(""direct:start"", ""A"", ""id"", 123);"
31910,./TargetProjects/camel/components/camel-leveldb-legacy/src/test/java/org/apache/camel/component/leveldb/LevelDBSpringAggregateTest.java,54,,"        template.sendBodyAndHeader(""direct:start"", ""A"", ""id"", 123);"
31911,./TargetProjects/camel/components/camel-leveldb/src/main/java/org/apache/camel/component/leveldb/LevelDBAggregationRepository.java,71,,"        StringHelper.notEmpty(repositoryName, ""repositoryName"");"
31912,./TargetProjects/camel/components/camel-leveldb/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateDiscardOnTimeoutTest.java,45,,"        template.sendBodyAndHeader(""direct:start"", ""A"", ""id"", 123);"
31913,./TargetProjects/camel/components/camel-leveldb/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateForceCompletionHeaderTest.java,47,,"        getMockEndpoint(""mock:aggregated"").expectedMessageCount(0);"
31914,./TargetProjects/camel/components/camel-leveldb/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateForceCompletionHeaderTest.java,49,,"        template.sendBodyAndHeader(""direct:start"", ""test1"", ""id"", ""1"");"
31915,./TargetProjects/camel/components/camel-leveldb/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateNotLostRemovedWhenConfirmedTest.java,50,,"        template.sendBodyAndHeader(""direct:start"", ""A"", ""id"", 123);"
31916,./TargetProjects/camel/components/camel-leveldb/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateNotLostTest.java,48,,"        template.sendBodyAndHeader(""direct:start"", ""A"", ""id"", 123);"
31917,./TargetProjects/camel/components/camel-leveldb/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateRecoverDeadLetterChannelFailedTest.java,56,,"        getMockEndpoint(""mock:dead"").expectedMinimumMessageCount(2);"
31918,./TargetProjects/camel/components/camel-leveldb/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateRecoverDeadLetterChannelFailedTest.java,63,,"        template.sendBodyAndHeader(""direct:start"", ""A"", ""id"", 123);"
31919,./TargetProjects/camel/components/camel-leveldb/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateRecoverDeadLetterChannelTest.java,42,,"        getRepo().setDeadLetterUri(""mock:dead"");"
31920,./TargetProjects/camel/components/camel-leveldb/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateRecoverDeadLetterChannelTest.java,54,,"        getMockEndpoint(""mock:aggregated"").expectedMessageCount(4);"
31921,./TargetProjects/camel/components/camel-leveldb/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateRecoverDeadLetterChannelTest.java,71,,"        template.sendBodyAndHeader(""direct:start"", ""A"", ""id"", 123);"
31922,./TargetProjects/camel/components/camel-leveldb/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateRecoverTest.java,63,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""ABCDE"");"
31923,./TargetProjects/camel/components/camel-leveldb/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateRecoverTest.java,69,,"        template.sendBodyAndHeader(""direct:start"", ""A"", ""id"", 123);"
31924,./TargetProjects/camel/components/camel-leveldb/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateRecoverWithRedeliveryPolicyTest.java,62,,"        getMockEndpoint(""mock:result"").setResultWaitTime(20000);"
31925,./TargetProjects/camel/components/camel-leveldb/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateRecoverWithRedeliveryPolicyTest.java,73,,"        template.sendBodyAndHeader(""direct:start"", ""A"", ""id"", 123);"
31926,./TargetProjects/camel/components/camel-leveldb/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateRecoverWithSedaTest.java,60,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""ABCDE"");"
31927,./TargetProjects/camel/components/camel-leveldb/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateRecoverWithSedaTest.java,66,,"        template.sendBodyAndHeader(""direct:start"", ""A"", ""id"", 123);"
31928,./TargetProjects/camel/components/camel-leveldb/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateTest.java,48,,"        template.sendBodyAndHeader(""direct:start"", ""A"", ""id"", 123);"
31929,./TargetProjects/camel/components/camel-leveldb/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregateTimeoutCompletionRestartTest.java,44,,"        template.sendBodyAndHeader(""direct:start"", ""A"", ""id"", 123);"
31930,./TargetProjects/camel/components/camel-leveldb/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregationRepositoryAlotDataTest.java,63,,"            exchange1.getIn().setBody(""counter:"" + i);"
31931,./TargetProjects/camel/components/camel-leveldb/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregationRepositoryAlotDataTest.java,64,,"            repo.add(context, ""foo"", exchange1);"
31932,./TargetProjects/camel/components/camel-leveldb/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregationRepositoryLoadExistingTest.java,65,,"        Exchange actual = repo.add(context, ""foo"", exchange1);"
31933,./TargetProjects/camel/components/camel-leveldb/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregationRepositoryMultipleRepoTest.java,77,,"        actual = repo1.add(context, ""foo"", exchange1);"
31934,./TargetProjects/camel/components/camel-leveldb/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregationRepositoryMultipleRepoTest.java,94,,"        exchange3.getIn().setBody(""Hello World"");"
31935,./TargetProjects/camel/components/camel-leveldb/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregationRepositoryMultipleRepoTest.java,95,,"        actual = repo2.add(context, ""bar"", exchange3);"
31936,./TargetProjects/camel/components/camel-leveldb/src/test/java/org/apache/camel/component/leveldb/LevelDBAggregationRepositoryTest.java,69,,"        actual = repo.add(context, ""foo"", exchange1);"
31937,./TargetProjects/camel/components/camel-leveldb/src/test/java/org/apache/camel/component/leveldb/LevelDBBinaryTest.java,63,,"        template.sendBodyAndHeader(""direct:start"", a, ""id"", 123);"
31938,./TargetProjects/camel/components/camel-leveldb/src/test/java/org/apache/camel/component/leveldb/LevelDBCustomSerializationTest.java,68,,"        template.sendBodyAndHeader(""direct:start"", objectA, ""id"", 123);"
31939,./TargetProjects/camel/components/camel-leveldb/src/test/java/org/apache/camel/component/leveldb/LevelDBExchangeSerializationTest.java,67,,"        exchange.getIn().setHeader(""name"", ""Claus"");"
31940,./TargetProjects/camel/components/camel-leveldb/src/test/java/org/apache/camel/component/leveldb/LevelDBExchangeSerializationTest.java,72,,"        exchange.getIn().setHeader(""date"", now);"
31941,./TargetProjects/camel/components/camel-leveldb/src/test/java/org/apache/camel/component/leveldb/LevelDBExchangeSerializationTest.java,74,,"        repo.add(context, ""foo"", exchange);"
31942,./TargetProjects/camel/components/camel-leveldb/src/test/java/org/apache/camel/component/leveldb/LevelDBSpringAggregateRecoverWithRedeliveryPolicyTest.java,56,,"        getMockEndpoint(""mock:result"").setResultWaitTime(20000);"
31943,./TargetProjects/camel/components/camel-leveldb/src/test/java/org/apache/camel/component/leveldb/LevelDBSpringAggregateRecoverWithRedeliveryPolicyTest.java,66,,"        template.sendBodyAndHeader(""direct:start"", ""A"", ""id"", 123);"
31944,./TargetProjects/camel/components/camel-leveldb/src/test/java/org/apache/camel/component/leveldb/LevelDBSpringAggregateTest.java,54,,"        template.sendBodyAndHeader(""direct:start"", ""A"", ""id"", 123);"
31945,./TargetProjects/camel/components/camel-log/src/generated/java/org/apache/camel/component/log/LogComponentConfigurer.java,27,,"        case ""exchangeFormatter"": target.setExchangeFormatter(property(camelContext, org.apache.camel.spi.ExchangeFormatter.class, value)); return true;"
31946,./TargetProjects/camel/components/camel-log/src/main/java/org/apache/camel/component/log/LogEndpoint.java,64,,"    @UriParam(defaultValue = ""true"")"
31947,./TargetProjects/camel/components/camel-log/src/main/java/org/apache/camel/component/log/LogEndpoint.java,72,,"    @UriParam(label = ""formatting"", description = ""Show the unique exchange ID."")"
31948,./TargetProjects/camel/components/camel-lra/src/test/java/org/apache/camel/service/lra/LRAManualIT.java,39,,"        sendBody(""direct:saga"", ""hello"", Collections.singletonMap(""myid"", ""1""));"
31949,./TargetProjects/camel/components/camel-lra/src/test/java/org/apache/camel/service/lra/LRAOptionsIT.java,38,,"        complete.expectedHeaderReceived(""name"", ""Nicola"");"
31950,./TargetProjects/camel/components/camel-lra/src/test/java/org/apache/camel/service/lra/LRAOptionsIT.java,38,,"        complete.expectedHeaderReceived(""name"", ""Nicola"");"
31951,./TargetProjects/camel/components/camel-lra/src/test/java/org/apache/camel/service/lra/LRAOptionsIT.java,41,,"        template.sendBodyAndHeader(""direct:workflow"", ""Hello"", ""myname"", ""Nicola"");"
31952,./TargetProjects/camel/components/camel-lra/src/test/java/org/apache/camel/service/lra/LRATimeoutIT.java,34,,"        MockEndpoint compensate = getMockEndpoint(""mock:compensate"");"
31953,./TargetProjects/camel/components/camel-lra/src/test/java/org/apache/camel/service/lra/LRATimeoutIT.java,36,,"        compensate.expectedHeaderReceived(""id"", ""myid"");"
31954,./TargetProjects/camel/components/camel-lra/src/test/java/org/apache/camel/service/lra/LRATimeoutIT.java,38,,"        MockEndpoint end = getMockEndpoint(""mock:end"");"
31955,./TargetProjects/camel/components/camel-lucene/src/test/java/org/apache/camel/component/lucene/LuceneIndexAndQueryProducerIT.java,71,,"        template.send(""direct:start"", new Processor() {"
31956,./TargetProjects/camel/components/camel-lucene/src/test/java/org/apache/camel/component/lucene/LuceneIndexAndQueryProducerIT.java,89,,"                in.setHeader(""QUERY"", """");"
31957,./TargetProjects/camel/components/camel-lucene/src/test/java/org/apache/camel/component/lucene/LuceneIndexAndQueryProducerIT.java,120,,"        MockEndpoint mockSearchEndpoint = getMockEndpoint(""mock:searchResult"");"
31958,./TargetProjects/camel/components/camel-lucene/src/test/java/org/apache/camel/component/lucene/LuceneIndexAndQueryProducerIT.java,127,,"                        .to(""direct:next"");"
31959,./TargetProjects/camel/components/camel-lucene/src/test/java/org/apache/camel/component/lucene/LuceneIndexAndQueryProducerIT.java,136,,"                        LOG.debug(""Number of hits: "" + hits.getNumberOfHits());"
31960,./TargetProjects/camel/components/camel-lucene/src/test/java/org/apache/camel/component/lucene/LuceneIndexAndQueryProducerIT.java,138,,"                            LOG.debug(""Hit "" + i + "" Index Location:"" + hits.getHit().get(i).getHitLocation());"
31961,./TargetProjects/camel/components/camel-lucene/src/test/java/org/apache/camel/processor/lucene/LuceneQueryProcessorIT.java,55,,"        MockEndpoint mockSearchEndpoint = getMockEndpoint(""mock:searchResult"");"
31962,./TargetProjects/camel/components/camel-lucene/src/test/java/org/apache/camel/processor/lucene/LuceneQueryProcessorIT.java,63,,"                            .process(new LuceneQueryProcessor(""target/stdindexDir"", analyzer, null, 20, 20)).to(""direct:next"");"
31963,./TargetProjects/camel/components/camel-lucene/src/test/java/org/apache/camel/processor/lucene/LuceneQueryProcessorIT.java,77,,"                            LOG.debug(""Hit "" + i + "" Index Location:"" + hits.getHit().get(i).getHitLocation());"
31964,./TargetProjects/camel/components/camel-mail/src/generated/java/org/apache/camel/component/mail/MailEndpointConfigurer.java,114,,"        case ""schedulerproperties"":"
31965,./TargetProjects/camel/components/camel-mail/src/generated/java/org/apache/camel/component/mail/MailEndpointConfigurer.java,115,,"        case ""schedulerProperties"": target.setSchedulerProperties(property(camelContext, java.util.Map.class, value)); return true;"
31966,./TargetProjects/camel/components/camel-mail/src/main/java/org/apache/camel/component/mail/MailBinding.java,148,,"        if (exchange.getIn().getHeader(""contentType"") != null) {"
31967,./TargetProjects/camel/components/camel-mail/src/main/java/org/apache/camel/component/mail/MailBinding.java,224,,"        part.setHeader(""Content-Type"", contentType);"
31968,./TargetProjects/camel/components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConfiguration.java,60,,"    @Metadata(label = ""producer"")"
31969,./TargetProjects/camel/components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConfiguration.java,65,,"    @UriParam(label = ""advanced"")"
31970,./TargetProjects/camel/components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConfiguration.java,67,,"    @UriParam(defaultValue = ""true"", label = ""consumer,advanced"")"
31971,./TargetProjects/camel/components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConfiguration.java,80,,"    @Metadata(label = ""consumer"")"
31972,./TargetProjects/camel/components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConfiguration.java,133,,"    @UriParam(label = ""advanced"", prefix = ""mail."", multiValue = true)"
31973,./TargetProjects/camel/components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConverters.java,174,,"            if (s.startsWith(""now"")) {"
31974,./TargetProjects/camel/components/camel-mail/src/test/java/org/apache/camel/component/mail/AuthenticatorTest.java,140,,"                return new PasswordAuthentication(""james3"", ""secret"");"
31975,./TargetProjects/camel/components/camel-mail/src/test/java/org/apache/camel/component/mail/AuthenticatorTest.java,145,,"                    return new PasswordAuthentication(""james4"", ""secret"");"
31976,./TargetProjects/camel/components/camel-mail/src/test/java/org/apache/camel/component/mail/DetermineContentTypeIssueTest.java,37,,"        exchange.getIn().setHeader(""Content-Type"", contentType);"
31977,./TargetProjects/camel/components/camel-mail/src/test/java/org/apache/camel/component/mail/MailAttachmentRedeliveryTest.java,60,,"        in.addAttachment(""logo.jpeg"", new DataHandler(new FileDataSource(""src/test/data/logo.jpeg"")));"
31978,./TargetProjects/camel/components/camel-mail/src/test/java/org/apache/camel/component/mail/MailBindingAttachmentFileTest.java,59,,"        assertThat(attachments).containsKey(""file.txt"");"
31979,./TargetProjects/camel/components/camel-mail/src/test/java/org/apache/camel/component/mail/MailComponentTest.java,39,,"        assertEquals(""smtp"", config.getProtocol(), ""getProtocol()"");"
31980,./TargetProjects/camel/components/camel-mail/src/test/java/org/apache/camel/component/mail/MailComponentTest.java,39,,"        assertEquals(""smtp"", config.getProtocol(), ""getProtocol()"");"
31981,./TargetProjects/camel/components/camel-mail/src/test/java/org/apache/camel/component/mail/MailComponentTest.java,40,,"        assertEquals(""myhost"", config.getHost(), ""getHost()"");"
31982,./TargetProjects/camel/components/camel-mail/src/test/java/org/apache/camel/component/mail/MailComponentTest.java,40,,"        assertEquals(""myhost"", config.getHost(), ""getHost()"");"
31983,./TargetProjects/camel/components/camel-mail/src/test/java/org/apache/camel/component/mail/MailComponentTest.java,41,,"        assertEquals(25, config.getPort(), ""getPort()"");"
31984,./TargetProjects/camel/components/camel-mail/src/test/java/org/apache/camel/component/mail/MailComponentTest.java,42,,"        assertEquals(""james"", config.getUsername(), ""getUsername()"");"
31985,./TargetProjects/camel/components/camel-mail/src/test/java/org/apache/camel/component/mail/MailComponentTest.java,42,,"        assertEquals(""james"", config.getUsername(), ""getUsername()"");"
31986,./TargetProjects/camel/components/camel-mail/src/test/java/org/apache/camel/component/mail/MailComponentTest.java,43,,"        assertEquals(""james@myhost"", config.getRecipients().get(Message.RecipientType.TO),"
31987,./TargetProjects/camel/components/camel-mail/src/test/java/org/apache/camel/component/mail/MailComponentTest.java,44,,"                ""getRecipients().get(Message.RecipientType.TO)"");"
31988,./TargetProjects/camel/components/camel-mail/src/test/java/org/apache/camel/component/mail/MailComponentTest.java,45,,"        assertEquals(""INBOX"", config.getFolderName(), ""folder"");"
31989,./TargetProjects/camel/components/camel-mail/src/test/java/org/apache/camel/component/mail/MailComponentTest.java,45,,"        assertEquals(""INBOX"", config.getFolderName(), ""folder"");"
31990,./TargetProjects/camel/components/camel-mail/src/test/java/org/apache/camel/component/mail/MailComponentTest.java,88,,"        assertEquals(""camel@localhost"", config.getFrom(), ""from"");"
31991,./TargetProjects/camel/components/camel-mail/src/test/java/org/apache/camel/component/mail/MailComponentTest.java,88,,"        assertEquals(""camel@localhost"", config.getFrom(), ""from"");"
31992,./TargetProjects/camel/components/camel-mail/src/test/java/org/apache/camel/component/mail/MailComponentTest.java,89,,"        assertEquals(""secret"", config.getPassword(), ""password"");"
31993,./TargetProjects/camel/components/camel-mail/src/test/java/org/apache/camel/component/mail/MailComponentTest.java,89,,"        assertEquals(""secret"", config.getPassword(), ""password"");"
31994,./TargetProjects/camel/components/camel-mail/src/test/java/org/apache/camel/component/mail/MailComponentTest.java,92,,"        assertEquals(-1, config.getFetchSize(), ""fetchSize"");"
31995,./TargetProjects/camel/components/camel-mail/src/test/java/org/apache/camel/component/mail/MailComponentTest.java,93,,"        assertEquals(""text/plain"", config.getContentType(), ""contentType"");"
31996,./TargetProjects/camel/components/camel-mail/src/test/java/org/apache/camel/component/mail/MailComponentTest.java,93,,"        assertEquals(""text/plain"", config.getContentType(), ""contentType"");"
31997,./TargetProjects/camel/components/camel-mail/src/test/java/org/apache/camel/component/mail/MailComponentTest.java,94,,"        assertEquals(true, config.isUnseen(), ""unseen"");"
31998,./TargetProjects/camel/components/camel-mail/src/test/java/org/apache/camel/component/mail/MailContentTypeTest.java,42,,"        sendBody(""direct:a"", ""<html><body><h1>Hello</h1>World</body></html>"");"
31999,./TargetProjects/camel/components/camel-mail/src/test/java/org/apache/camel/component/mail/MailContentTypeTest.java,55,,"        sendBody(""direct:b"", ""Hello World"");"
