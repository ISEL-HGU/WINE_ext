188000,./TargetProjects/netbeans/platform/api.search/test/unit/src/org/netbeans/api/search/ui/SearchPatternControllerTest.java,51,,"        assertTrue(""Exception should be thrown when trying to bind """
188001,./TargetProjects/netbeans/platform/api.search/test/unit/src/org/netbeans/api/search/ui/SearchPatternControllerTest.java,55,,"                SearchPattern.create(""test"", false, false, MatchType.LITERAL));"
188002,./TargetProjects/netbeans/platform/api.search/test/unit/src/org/netbeans/modules/search/FindDialogMemoryTest.java,114,,"            memory.storeFileNamePattern(String.format(""%s%03d"", fillPrefix, i++));"
188003,./TargetProjects/netbeans/platform/api.search/test/unit/src/org/netbeans/modules/search/MatchingObjectTest.java,80,,"        assertEquals(""next1"", adapt(""test1"", ""next1""));"
188004,./TargetProjects/netbeans/platform/api.search/test/unit/src/org/netbeans/modules/search/MatchingObjectTest.java,94,,"        assertEquals(""MBox"", adapt(""JPanel"", ""MBox""));"
188005,./TargetProjects/netbeans/platform/api.search/test/unit/src/org/netbeans/modules/search/MatchingObjectTest.java,98,,"        assertEquals(""DaRealJunk"", adapt(""MyClass"", ""DaRealJunk""));"
188006,./TargetProjects/netbeans/platform/api.search/test/unit/src/org/netbeans/modules/search/MatchingObjectTest.java,98,,"        assertEquals(""DaRealJunk"", adapt(""MyClass"", ""DaRealJunk""));"
188007,./TargetProjects/netbeans/platform/api.search/test/unit/src/org/netbeans/modules/search/MatchingObjectTest.java,117,,"                replaceInFilePreserveCase(""writing dta"", ""dta"", ""data""));"
188008,./TargetProjects/netbeans/platform/api.search/test/unit/src/org/netbeans/modules/search/MatchingObjectTest.java,117,,"                replaceInFilePreserveCase(""writing dta"", ""dta"", ""data""));"
188009,./TargetProjects/netbeans/platform/api.search/test/unit/src/org/netbeans/modules/search/TextDetailTest.java,50,,"        assertTrue(htmlName.startsWith(""<b>"" + match + ""</b>""));"
188010,./TargetProjects/netbeans/platform/api.search/test/unit/src/org/netbeans/modules/search/TextDetailTest.java,50,,"        assertTrue(htmlName.startsWith(""<b>"" + match + ""</b>""));"
188011,./TargetProjects/netbeans/platform/api.search/test/unit/src/org/netbeans/modules/search/TextDetailTest.java,51,,"        assertEquals('b', htmlName.charAt(match.length() + ""<b></b>"".length()));"
188012,./TargetProjects/netbeans/platform/api.search/test/unit/src/org/netbeans/modules/search/TextDetailTest.java,107,,"        String line = createLongString('M', ""inner"", 'N', 300, 300);"
188013,./TargetProjects/netbeans/platform/api.search/test/unit/src/org/netbeans/modules/search/TextDetailTest.java,210,,"                TextDetail.optimizeText(""Hello everybody"", 3, 7, 10).toString());"
188014,./TargetProjects/netbeans/platform/api.search/test/unit/src/org/netbeans/modules/search/TextRegexpUtilTest.java,243,,"        checkMatch(""public"", ""x"", null);"
188015,./TargetProjects/netbeans/platform/api.search/test/unit/src/org/netbeans/modules/search/TextRegexpUtilTest.java,262,,"        checkMatchWW("""", ""???"", null);"
188016,./TargetProjects/netbeans/platform/api.search/test/unit/src/org/netbeans/modules/search/matcher/BufferedCharSequenceTest.java,83,,"        fail(""The test case is a prototype."");"
188017,./TargetProjects/netbeans/platform/api.search/test/unit/src/org/netbeans/modules/search/matcher/BufferedCharSequenceTest.java,124,,"        @SuppressWarnings(""deprecation"")"
188018,./TargetProjects/netbeans/platform/api.search/test/unit/src/org/netbeans/modules/search/matcher/DefaultMatcherTest.java,54,,"            OutputStream os = root.createAndOpen(""file"");"
188019,./TargetProjects/netbeans/platform/api.templates/test/unit/src/org/netbeans/modules/templates/SCFTHandlerTest.java,104,,"        DataFolder folder = DataFolder.findFolder(FileUtil.createFolder(root, ""target""));"
188020,./TargetProjects/netbeans/platform/api.templates/test/unit/src/org/netbeans/modules/templates/SCFTHandlerTest.java,107,,"        DataObject n = obj.createFromTemplate(folder, ""complex"", parameters);"
188021,./TargetProjects/netbeans/platform/api.templates/test/unit/src/org/netbeans/modules/templates/SCFTHandlerTest.java,109,,"        assertEquals(""Created in right place"", folder, n.getFolder());"
188022,./TargetProjects/netbeans/platform/api.templates/test/unit/src/org/netbeans/modules/templates/SCFTHandlerTest.java,110,,"        assertEquals(""Created with right name"", ""complex.txt"", n.getName());"
188023,./TargetProjects/netbeans/platform/api.templates/test/unit/src/org/netbeans/modules/templates/SCFTHandlerTest.java,110,,"        assertEquals(""Created with right name"", ""complex.txt"", n.getName());"
188024,./TargetProjects/netbeans/platform/api.visual/src/org/netbeans/modules/visual/graph/layout/HierarchicalLayout.java,636,,"            @SuppressWarnings({""unchecked"", ""rawtypes""})"
188025,./TargetProjects/netbeans/platform/api.visual/src/org/netbeans/modules/visual/graph/layout/HierarchicalLayout.java,636,,"            @SuppressWarnings({""unchecked"", ""rawtypes""})"
188026,./TargetProjects/netbeans/platform/api.visual/test/unit/src/org/netbeans/modules/visual/apichanges/AnchorNotificationTest.java,71,,"                ""notifyRevalidate\n"" +"
188027,./TargetProjects/netbeans/platform/api.visual/test/unit/src/org/netbeans/modules/visual/basic/ObjectSceneLazyTest.java,114,,"        Object item = new String(""lazyItem"");"
188028,./TargetProjects/netbeans/platform/api.visual/test/unit/src/org/netbeans/modules/visual/bugs/ObjectScene100275Test.java,68,,"            getRef ().println (""selectionChanged: "" + previousSelection + "" -> "" + newSelection);"
188029,./TargetProjects/netbeans/platform/autoupdate.services/libsrc/org/netbeans/updater/ModuleDeactivator.java,121,,"                XMLUtil.LOG.info(""File "" + file + "" modified."" );"
188030,./TargetProjects/netbeans/platform/autoupdate.services/libsrc/org/netbeans/updater/ModuleDeactivator.java,168,,"            XMLUtil.LOG.info(""File "" + f + "" deleted."");"
188031,./TargetProjects/netbeans/platform/autoupdate.services/libsrc/org/netbeans/updater/ModuleUpdater.java,134,,"            XMLUtil.LOG.info(""File "" + later + "" deleted."");"
188032,./TargetProjects/netbeans/platform/autoupdate.services/libsrc/org/netbeans/updater/ModuleUpdater.java,134,,"            XMLUtil.LOG.info(""File "" + later + "" deleted."");"
188033,./TargetProjects/netbeans/platform/autoupdate.services/libsrc/org/netbeans/updater/ModuleUpdater.java,362,,"                            XMLUtil.LOG.info(""Backup file "" + destFile + "" to "" + bckFile);"
188034,./TargetProjects/netbeans/platform/autoupdate.services/libsrc/org/netbeans/updater/UpdateTracking.java,70,,"    private static final String XML_EXT = "".xml""; // NOI18N"
188035,./TargetProjects/netbeans/platform/autoupdate.services/libsrc/org/netbeans/updater/UpdateTracking.java,678,,"                searchFor = replaced + "".jar""; // NOI18N"
188036,./TargetProjects/netbeans/platform/autoupdate.services/libsrc/org/netbeans/updater/UpdateTracking.java,935,,"                pw.println(""    <param name=\""autoload\"">"" + autoload + ""</param>"");"
188037,./TargetProjects/netbeans/platform/autoupdate.services/src/org/netbeans/api/autoupdate/TrampolineAPI.java,64,,"        throw new UnsupportedOperationException(""Not supported yet."");"
188038,./TargetProjects/netbeans/platform/autoupdate.services/src/org/netbeans/modules/autoupdate/services/FeatureUpdateUnitImpl.java,111,,"                assert iuei == null || iuei instanceof ModuleUpdateElementImpl : ""Impl of "" + iue + "" is instanceof ModuleUpdateElementImpl"";"
188039,./TargetProjects/netbeans/platform/autoupdate.services/src/org/netbeans/modules/autoupdate/services/InstallManager.java,151,,"                        ERR.log(Level.WARNING, ""There is no write permission to write in target cluster "" + targetCluster + "" for "" + update.getUpdateElement());"
188040,./TargetProjects/netbeans/platform/autoupdate.services/src/org/netbeans/modules/autoupdate/services/InstallManager.java,151,,"                        ERR.log(Level.WARNING, ""There is no write permission to write in target cluster "" + targetCluster + "" for "" + update.getUpdateElement());"
188041,./TargetProjects/netbeans/platform/autoupdate.services/src/org/netbeans/modules/autoupdate/services/InstallSupportImpl.java,115,,"    @SuppressWarnings(""ThrowableResultIgnored"")"
188042,./TargetProjects/netbeans/platform/autoupdate.services/src/org/netbeans/modules/autoupdate/services/InstallSupportImpl.java,324,,"                        assert false : ""Unsupported type "" + toUpdateImpl;"
188043,./TargetProjects/netbeans/platform/autoupdate.services/src/org/netbeans/modules/autoupdate/services/InstallSupportImpl.java,350,,"                    LOG.log (Level.FINE, ""Source URL for "" + moduleImpl.getCodeName () + "" is "" + source);"
188044,./TargetProjects/netbeans/platform/autoupdate.services/src/org/netbeans/modules/autoupdate/services/InstallSupportImpl.java,976,,"            LOG.log(Level.FINE, ""Download of "" + source + "" was cancelled"");"
188045,./TargetProjects/netbeans/platform/autoupdate.services/src/org/netbeans/modules/autoupdate/services/InstallSupportImpl.java,976,,"            LOG.log(Level.FINE, ""Download of "" + source + "" was cancelled"");"
188046,./TargetProjects/netbeans/platform/autoupdate.services/src/org/netbeans/modules/autoupdate/services/ModuleDeleterImpl.java,225,,"                    err.log(Level.FINE, ""Control file "" + configFile + "" is deleted."");"
188047,./TargetProjects/netbeans/platform/autoupdate.services/src/org/netbeans/modules/autoupdate/services/ModuleDeleterImpl.java,314,,"            assert file.exists () : ""File "" + file + "" exists."";"
188048,./TargetProjects/netbeans/platform/autoupdate.services/src/org/netbeans/modules/autoupdate/services/OperationSupportImpl.java,158,,"            assert false : ""Not supported yet"";"
188049,./TargetProjects/netbeans/platform/autoupdate.services/src/org/netbeans/modules/autoupdate/services/OperationSupportImpl.java,337,,"            throw new UnsupportedOperationException (""Not supported yet."");"
188050,./TargetProjects/netbeans/platform/autoupdate.services/src/org/netbeans/modules/autoupdate/services/OperationValidator.java,265,,"                        LOGGER.log (Level.WARNING, ""The module "" + module + "" cannot be planned for uninstall because is read-only."");"
188051,./TargetProjects/netbeans/platform/autoupdate.services/src/org/netbeans/modules/autoupdate/services/UpdateUnitProviderImpl.java,330,,"        assert providerPreferences != null : ""Preferences node "" + codeName + "" found."";"
188052,./TargetProjects/netbeans/platform/autoupdate.services/src/org/netbeans/modules/autoupdate/services/UpdateUnitProviderImpl.java,330,,"        assert providerPreferences != null : ""Preferences node "" + codeName + "" found."";"
188053,./TargetProjects/netbeans/platform/autoupdate.services/src/org/netbeans/modules/autoupdate/services/Utilities.java,403,,"        assert clusters != null : ""Clusters cannot be empty.""; // NOI18N"
188054,./TargetProjects/netbeans/platform/autoupdate.services/src/org/netbeans/modules/autoupdate/updateprovider/AutoupdateCatalogFactory.java,229,,"                            buf.append(URLEncoder.encode (a, ""UTF-8""));"
188055,./TargetProjects/netbeans/platform/autoupdate.services/src/org/netbeans/modules/autoupdate/updateprovider/AutoupdateCatalogParser.java,287,,"                ERR.info (""Not supported yet."");"
188056,./TargetProjects/netbeans/platform/autoupdate.services/src/org/netbeans/modules/autoupdate/updateprovider/AutoupdateInfoParser.java,115,,"                    ""    updater in platform exist = "" + updaterPlatform.exists() + (updaterPlatform.exists() ? ("", length = "" + updaterPlatform.length() + "" bytes"") : """") + ""\n"" +"
188057,./TargetProjects/netbeans/platform/autoupdate.services/src/org/netbeans/modules/autoupdate/updateprovider/AutoupdateInfoParser.java,115,,"                    ""    updater in platform exist = "" + updaterPlatform.exists() + (updaterPlatform.exists() ? ("", length = "" + updaterPlatform.length() + "" bytes"") : """") + ""\n"" +"
188058,./TargetProjects/netbeans/platform/autoupdate.services/src/org/netbeans/modules/autoupdate/updateprovider/AutoupdateInfoParser.java,199,,"                ERR.info (""Not supported yet."");"
188059,./TargetProjects/netbeans/platform/autoupdate.services/src/org/netbeans/modules/autoupdate/updateprovider/InstallInfo.java,45,,"            assert false : ""Feature not supported yet."";"
188060,./TargetProjects/netbeans/platform/autoupdate.services/src/org/netbeans/modules/autoupdate/updateprovider/InstallInfo.java,47,,"            assert false : ""Unkown type of UpdateItem "" + item;"
188061,./TargetProjects/netbeans/platform/autoupdate.services/src/org/netbeans/spi/autoupdate/TrampolineSPI.java,40,,"        throw new UnsupportedOperationException(""Not supported yet."");"
188062,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/api/autoupdate/DifferentReleaseVersionsTest.java,116,,"        PrintWriter pw = new PrintWriter(new OutputStreamWriter(new FileOutputStream(catalogFile), ""UTF-8""));"
188063,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/api/autoupdate/InternalUpdatesTest.java,117,,"        PrintWriter pw = new PrintWriter(new OutputStreamWriter(new FileOutputStream(catalogFile), ""UTF-8""));"
188064,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/api/autoupdate/InternalUpdatesTest.java,177,,"        mf.getMainAttributes().put(Attributes.Name.MANIFEST_VERSION, ""1.0"");"
188065,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/api/autoupdate/OperationContainerTest.java,37,,"        assertNull(""empty container"",install.getSupport());"
188066,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/api/autoupdate/OperationContainerTest.java,76,,"        UpdateUnit engineUnit = getUpdateUnit(""org.yourorghere.engine"");"
188067,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/api/autoupdate/OperationContainerTest.java,77,,"        assertNull(""cannot be installed"",engineUnit.getInstalled());"
188068,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/api/autoupdate/OperationContainerTest.java,89,,"        UpdateUnit independentUnit = getUpdateUnit(""org.yourorghere.independent"");"
188069,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/api/autoupdate/OperationContainerTest.java,121,,"        UpdateUnit dependingUnit = getUpdateUnit(""org.yourorghere.depending"");"
188070,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/modules/autoupdate/services/AutoupdateCatalogFactoryTest.java,48,,"        f.setAttribute(""displayName"", ""Whatever"");"
188071,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/modules/autoupdate/services/AutoupdateCatalogFactoryTest.java,50,,"        f.setAttribute(""iconBase"", ""org/netbeans/modules/autoupdate/services/resources/icon-standard.png"");"
188072,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/modules/autoupdate/services/CrossDependencyTest.java,54,,"        return ""<module codenamebase=\"""" + codeName + ""\"" "" +"
188073,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/modules/autoupdate/services/FeatureDependsOnFeatureTest.java,79,,"            assertNotNull(""Impl of "" + pilotItem + "" available"", Trampoline.SPI.impl(pilotItem));"
188074,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/modules/autoupdate/services/FeatureDependsOnFeatureTest.java,129,,"            res.put(""testFeatureDependsOnModules"","
188075,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/modules/autoupdate/services/FeatureNotUpToDateTest.java,76,,"            assertNotNull (""Impl of "" + pilotItem + "" available"", Trampoline.SPI.impl (pilotItem));"
188076,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/modules/autoupdate/services/InstallEagerModuleTest.java,72,,"        assertTrue (eagerModule + "" found in parsed items."", updates.keySet ().contains (eagerModule + ""_1.3""));"
188077,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/modules/autoupdate/services/InstallEagerModuleTest.java,87,,"                generateModuleElement (eagerModule, ""1.0"", null, null, false, true,"
188078,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/modules/autoupdate/services/InstallEagerModuleTest.java,95,,"        UpdateUnitProviderFactory.getDefault ().create (""test-update-provider"", ""test-update-provider"", generateFile (catalog));"
188079,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/modules/autoupdate/services/NbmAdvancedTestCase.java,96,,"        String res = ""<module codenamebase=\"""" + codeName + ""\"" "" +"
188080,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/modules/autoupdate/services/NbmAdvancedTestCase.java,106,,"        res += ""</module>"";"
188081,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/modules/autoupdate/services/NbmExternalTest.java,129,,"        PrintWriter pw = new PrintWriter(new OutputStreamWriter(new FileOutputStream(catalogFile), ""UTF-8""));"
188082,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/modules/autoupdate/services/NbmExternalTest.java,206,,"        mf.getMainAttributes().put(Attributes.Name.MANIFEST_VERSION, ""1.0"");"
188083,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/modules/autoupdate/services/NbmsInDownloadedTabTest.java,84,,"            assertEquals (info.getUpdateElement () + "" doesn't have any broken dependencies."","
188084,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/modules/autoupdate/services/OperationsTestImpl.java,70,,"        modulesRoot = FileUtil.getConfigFile(""Modules""); // NOI18N"
188085,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/modules/autoupdate/services/OperationsTestImpl.java,187,,"        File modules = new File (f, ""modules"");"
188086,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/modules/autoupdate/services/OperationsTestImpl.java,344,,"        File configModules = new File (getWorkDir (), ""config/Modules"");"
188087,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/modules/autoupdate/services/TargetClusterTest.java,49,,"        assertEquals (""Goes into "" + platformDir.getName (), platformDir.getName (), getTargetCluster (platformDir.getName (), true).getName ());"
188088,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/modules/autoupdate/services/TargetClusterTestCase.java,71,,"        assertNotNull (""Some modules are installed."", updates);"
188089,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/modules/autoupdate/services/TargetClusterTestCase.java,77,,"        UpdateUnitProviderFactory.getDefault ().create (""test-update-provider"", ""test-update-provider"", generateFile (catalog));"
188090,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/modules/autoupdate/services/UpdateDisabledModuleTest.java,73,,"        man.getMainAttributes ().putValue (""OpenIDE-Module"", ""com.example.testmodule.cluster"");"
188091,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/modules/autoupdate/services/UpdateDisabledModuleTest.java,78,,"        new File(ud, ""config"").mkdirs();"
188092,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/modules/autoupdate/services/UpdateUnitFactoryTest.java,80,,"        assertNotNull (""Some units found."", newImpls);"
188093,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/modules/autoupdate/services/UpdateUnitProviderImplTest.java,91,,"        assertNotNull(codeName + "" provider found."", newProvider);"
188094,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/modules/autoupdate/services/UpdateUnitProviderImplTest.java,92,,"        assertEquals(""Display name equals."", displayName, newProvider.getDisplayName());"
188095,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/modules/autoupdate/services/UpdateUnitWithOsFactoryTest.java,57,,"                    ""org.openide.filesystems > 6.2"","
188096,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/modules/autoupdate/services/UpdateUnitWithOsFactoryTest.java,58,,"                    ""org.openide.util > 6.2"","
188097,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/modules/autoupdate/services/UpdateUnitWithOsFactoryTest.java,59,,"                    ""org.openide.modules > 6.2"","
188098,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/modules/autoupdate/services/UpdateUnitWithOsFactoryTest.java,60,,"                    ""org.openide.nodes > 6.2"","
188099,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/modules/autoupdate/services/UpdateUnitWithOsFactoryTest.java,61,,"                    ""org.openide.loaders"","
188100,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/modules/autoupdate/services/UpdateUnitWithOsFactoryTest.java,78,,"        assertNotNull (""Some modules are installed."", updates);"
188101,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/modules/autoupdate/services/UpdateUnitWithOsFactoryTest.java,83,,"        assertNotNull (""Some units found."", newImpls);"
188102,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/modules/autoupdate/updateprovider/AutoupdateCatalogParserTest.java,85,,"        UpdateItem item = updateItems.get (""org.netbeans.test.visible_1.0"");"
188103,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/spi/autoupdate/UpdateItemTest.java,61,,"        String specificationVersion = ""1.0"";"
188104,./TargetProjects/netbeans/platform/autoupdate.services/test/unit/src/org/netbeans/spi/autoupdate/UpdateItemTest.java,81,,"                                                          ""test-category"","
188105,./TargetProjects/netbeans/platform/autoupdate.ui/src/org/netbeans/modules/autoupdate/ui/SettingsTab.java,431,,"                    detailsText = new StringBuffer().append(""<b>"").append(NbBundle.getMessage(UnitTab.class, ""UnitTab_ReloadTime"", //NOI18N"
188106,./TargetProjects/netbeans/platform/autoupdate.ui/src/org/netbeans/modules/autoupdate/ui/UnitDetails.java,109,,"            text.append(""<b>"").append(getBundle(""UnitDetails_Plugin_CodeName"")).append(""</b>"").append(u.updateUnit.getCodeName()); // NOI18N"
188107,./TargetProjects/netbeans/platform/autoupdate.ui/src/org/netbeans/modules/autoupdate/ui/UnitDetails.java,109,,"            text.append(""<b>"").append(getBundle(""UnitDetails_Plugin_CodeName"")).append(""</b>"").append(u.updateUnit.getCodeName()); // NOI18N"
188108,./TargetProjects/netbeans/platform/autoupdate.ui/src/org/netbeans/modules/autoupdate/ui/UnitDetails.java,110,,"            text.append(""<br>"");"
188109,./TargetProjects/netbeans/platform/autoupdate.ui/src/org/netbeans/modules/autoupdate/ui/UnitTab.java,1348,,"                return getActionName() + "" \"""" + u.getDisplayName() + ""\""""; //NOI18N"
188110,./TargetProjects/netbeans/platform/autoupdate.ui/src/org/netbeans/modules/autoupdate/ui/UnitTab.java,1568,,"            super (""UnitTab_ActivateAction"", /*KeyStroke.getKeyStroke (KeyEvent.VK_E, KeyEvent.CTRL_DOWN_MASK),*/ ""EnableDisable"");"
188111,./TargetProjects/netbeans/platform/autoupdate.ui/src/org/netbeans/modules/autoupdate/ui/Utilities.java,99,,"        logger.log(Level.FINER, ""makeInstalledCategories ("" + units.size() + "") returns "" + res.size());"
188112,./TargetProjects/netbeans/platform/autoupdate.ui/src/org/netbeans/modules/autoupdate/ui/actions/AutoupdateCheckScheduler.java,241,,"                        err.log (Level.WARNING, ""Plugin "" + operationInfo + // NOI18N"
188113,./TargetProjects/netbeans/platform/autoupdate.ui/src/org/netbeans/modules/autoupdate/ui/wizards/OperationDescriptionPanel.java,62,,"        tpPrimaryTitle.setContentType(""text/html""); // NOI18N"
188114,./TargetProjects/netbeans/platform/autoupdate.ui/src/org/netbeans/modules/autoupdate/ui/wizards/OperationDescriptionStep.java,371,,"                    String updatename = ""<b>"" + el.getDisplayName() + ""</b> ""; // NOI18N"
188115,./TargetProjects/netbeans/platform/autoupdate.ui/src/org/netbeans/modules/autoupdate/ui/wizards/OperationDescriptionStep.java,374,,"                    updatename += ""<br>""; // NOI18N"
188116,./TargetProjects/netbeans/platform/autoupdate.ui/src/org/netbeans/modules/autoupdate/ui/wizards/OperationWizardModel.java,136,,"                        if (brokenDep.toLowerCase ().startsWith (""package"")) {"
188117,./TargetProjects/netbeans/platform/autoupdate.ui/src/org/netbeans/modules/autoupdate/ui/wizards/OperationWizardModel.java,540,,"            assert o instanceof JButton : o + "" instanceof JButton"";"
188118,./TargetProjects/netbeans/platform/autoupdate.ui/src/org/netbeans/modules/autoupdate/ui/wizards/UninstallStep.java,104,,"                    assert false : ""Unknown OperationType "" + model.getOperation ();"
188119,./TargetProjects/netbeans/platform/autoupdate.ui/test/qa-functional/src/org/netbeans/test/autoupdate/Autoupdate.java,83,,"    new JMenuBarOperator(MainWindowOperator.getDefault()).pushMenuNoBlock(""Tools|Plugins"");"
188120,./TargetProjects/netbeans/platform/autoupdate.ui/test/qa-functional/src/org/netbeans/test/autoupdate/Autoupdate.java,85,,"    JDialogOperator jdPlugins = new JDialogOperator( ""Plugins"" );"
188121,./TargetProjects/netbeans/platform/autoupdate.ui/test/qa-functional/src/org/netbeans/test/autoupdate/Autoupdate.java,138,,"    JButtonOperator jbClose = new JButtonOperator( jdPlugins, ""Close"" );"
188122,./TargetProjects/netbeans/platform/core.execution/src/org/netbeans/core/execution/beaninfo/editors/NbClassPathCustomEditor.java,282,,"                               getString(""CTL_Approve_Button_Title""))"
188123,./TargetProjects/netbeans/platform/core.kit/test/perf/src/org/openide/ErrorManagerTest.java,30,,"        prop.put(""perf.test.enabled"", ""-5"");"
188124,./TargetProjects/netbeans/platform/core.kit/test/perf/src/org/openide/ErrorManagerTest.java,56,,"	    en.log(""Logging event #"" + count);"
188125,./TargetProjects/netbeans/platform/core.kit/test/unit/src/org/openide/explorer/windows/TopComponentGetLookupTest.java,377,,"        panel.getActionMap ().put (""focusedRegistration"", act3);"
188126,./TargetProjects/netbeans/platform/core.multiview/src/org/netbeans/core/multiview/TabsComponent.java,755,,"        map.put(""TogglesGoDown"", act);//NOI18N"
188127,./TargetProjects/netbeans/platform/core.multiview/test/unit/src/org/netbeans/core/multiview/AbstractMultiViewTopComponentTestCase.java,74,,"        MultiViewDescription desc1 = new MVDesc(""desc1"", null, 0, elem1);"
188128,./TargetProjects/netbeans/platform/core.multiview/test/unit/src/org/netbeans/core/multiview/AbstractMultiViewTopComponentTestCase.java,75,,"        MultiViewDescription desc2 = new MVDesc(""desc2"", null, 0, elem2);"
188129,./TargetProjects/netbeans/platform/core.multiview/test/unit/src/org/netbeans/core/multiview/AbstractMultiViewTopComponentTestCase.java,76,,"        MultiViewDescription desc3 = new MVDesc(""desc3"", null, 0, elem3);"
188130,./TargetProjects/netbeans/platform/core.multiview/test/unit/src/org/netbeans/core/multiview/AbstractMultiViewTopComponentTestCase.java,124,,"        final MVElem elem1 = new MVElem(new Action[] {new Act1(""act1"")} );"
188131,./TargetProjects/netbeans/platform/core.multiview/test/unit/src/org/netbeans/core/multiview/AbstractMultiViewTopComponentTestCase.java,125,,"        final MVElem elem2 = new MVElem(new Action[] {new Act1(""act2"")} );"
188132,./TargetProjects/netbeans/platform/core.multiview/test/unit/src/org/netbeans/core/multiview/MultiViewActionMapTest.java,91,,"        MultiViewDescription desc1 = new MVDesc(""desc1"", null, 0, elem1);"
188133,./TargetProjects/netbeans/platform/core.multiview/test/unit/src/org/netbeans/core/multiview/MultiViewActionMapTest.java,92,,"        MultiViewDescription desc2 = new MVDesc(""desc2"", null, 0, elem2);"
188134,./TargetProjects/netbeans/platform/core.multiview/test/unit/src/org/netbeans/core/multiview/MultiViewActionMapTest.java,93,,"        MultiViewDescription desc3 = new MVDesc(""desc3"", null, 0, elem3);"
188135,./TargetProjects/netbeans/platform/core.multiview/test/unit/src/org/netbeans/core/multiview/MultiViewActionMapTest.java,100,,"        Action act = new TestAction(""MultiViewAction"");"
188136,./TargetProjects/netbeans/platform/core.multiview/test/unit/src/org/netbeans/core/multiview/MultiViewActionMapTest.java,102,,"        tc.getActionMap().put(""testkey"", act);"
188137,./TargetProjects/netbeans/platform/core.multiview/test/unit/src/org/netbeans/core/multiview/MultiViewActionMapTest.java,206,,"        MVElemTopComponent elem1 = new ComponentShowingElement(""testAction"", act1);"
188138,./TargetProjects/netbeans/platform/core.multiview/test/unit/src/org/netbeans/core/multiview/MultiViewCloneableTopComponentTest.java,81,,"        MultiViewDescription desc2 = new SerMVDesc(""desc2"", null, TopComponent.PERSISTENCE_ONLY_OPENED, elem2);"
188139,./TargetProjects/netbeans/platform/core.multiview/test/unit/src/org/netbeans/core/multiview/MultiViewElementTest.java,65,,"        MultiViewDescription desc1 = new MVDesc(""desc1"", null, 0, elem1);"
188140,./TargetProjects/netbeans/platform/core.multiview/test/unit/src/org/netbeans/core/multiview/MultiViewElementTest.java,66,,"        MultiViewDescription desc2 = new MVDesc(""desc2"", null, 0, elem2);"
188141,./TargetProjects/netbeans/platform/core.multiview/test/unit/src/org/netbeans/core/multiview/MultiViewElementTest.java,67,,"        MultiViewDescription desc3 = new MVDesc(""desc3"", null, 0, elem3);"
188142,./TargetProjects/netbeans/platform/core.multiview/test/unit/src/org/netbeans/core/multiview/MultiViewFactoryTest.java,54,,"        MultiViewDescription desc1 = new MVDesc(""desc1"", null, 0, new MVElem());"
188143,./TargetProjects/netbeans/platform/core.multiview/test/unit/src/org/netbeans/core/multiview/MultiViewFactoryTest.java,55,,"        MultiViewDescription desc2 = new MVDesc(""desc2"", null, 0, new MVElem());"
188144,./TargetProjects/netbeans/platform/core.multiview/test/unit/src/org/netbeans/core/multiview/MultiViewFactoryTest.java,56,,"        MultiViewDescription desc3 = new MVDesc(""desc3"", null, 0, new MVElem());"
188145,./TargetProjects/netbeans/platform/core.multiview/test/unit/src/org/netbeans/core/multiview/MultiViewHandlerTest.java,82,,"        assertEquals(""componentOpened-componentShowing-componentHidden-"", elem1.getLog());"
188146,./TargetProjects/netbeans/platform/core.multiview/test/unit/src/org/netbeans/core/multiview/MultiViewProcessorTest.java,102,,"        assertNotNull(""MultiViewComponent created"", mvc);"
188147,./TargetProjects/netbeans/platform/core.multiview/test/unit/src/org/netbeans/core/multiview/MultiViewProcessorTest.java,107,,"        assertNotNull(""Handler found"", handler);"
188148,./TargetProjects/netbeans/platform/core.multiview/test/unit/src/org/netbeans/core/multiview/MultiViewProcessorTest.java,114,,"        assertFalse(""First one is not for split"", ((ContextAwareDescription)description).isSplitDescription());"
188149,./TargetProjects/netbeans/platform/core.multiview/test/unit/src/org/netbeans/core/multiview/MultiViewProcessorTest.java,117,,"        assertTrue(""Second one is for split"", ((ContextAwareDescription)description).isSplitDescription());"
188150,./TargetProjects/netbeans/platform/core.multiview/test/unit/src/org/netbeans/core/multiview/MultiViewProcessorTest.java,120,,"        MVE.closeState = MultiViewFactory.createUnsafeCloseState(""warn"", new AbstractAction() {"
188151,./TargetProjects/netbeans/platform/core.multiview/test/unit/src/org/netbeans/core/multiview/MultiViewProcessorTest.java,137,,"        CloneableTopComponent cmv = MultiViews.createCloneableMultiView(""text/context"", new LP(lookup));"
188152,./TargetProjects/netbeans/platform/core.multiview/test/unit/src/org/netbeans/core/multiview/MultiViewProcessorTest.java,205,,"        assertEquals(""Contextual"", arr[0].getDisplayName());"
188153,./TargetProjects/netbeans/platform/core.multiview/test/unit/src/org/netbeans/core/multiview/MultiViewProcessorTest.java,221,,"        assertNull(""No integer now"", mvc.getLookup().lookup(Integer.class));"
188154,./TargetProjects/netbeans/platform/core.multiview/test/unit/src/org/netbeans/core/multiview/MultiViewProcessorTest.java,223,,"        assertEquals(""1 now"", Integer.valueOf(1), mvc.getLookup().lookup(Integer.class));"
188155,./TargetProjects/netbeans/platform/core.netigso/src/org/netbeans/core/netigso/Netigso.java,116,,"    @Messages({""#NOI18N"", ""FRAMEWORK_START_LEVEL=""})"
188156,./TargetProjects/netbeans/platform/core.netigso/src/org/netbeans/core/netigso/Netigso.java,273,,"            Object exported = b.getHeaders("""").get(""Export-Package"");"
188157,./TargetProjects/netbeans/platform/core.netigso/test/unit/src/org/netbeans/core/netigso/NetigsoOSGiActivationVisibleTest.java,114,,"        directBundle = toEnable.loadClass(""org.foo.Something"");"
188158,./TargetProjects/netbeans/platform/core.netigso/test/unit/src/org/netbeans/core/netigso/NetigsoOSGiActivationVisibleTest.java,160,,"        URL res = toEnable.getResource(""org/foo/Something.txt"");"
188159,./TargetProjects/netbeans/platform/core.netigso/test/unit/src/org/netbeans/core/netigso/NetigsoSelfQueryTest.java,251,,"            throw new UnsupportedOperationException(""Not supported yet."");"
188160,./TargetProjects/netbeans/platform/core.netigso/test/unit/src/org/netbeans/core/netigso/NetigsoTest.java,58,,"                ""OpenIDE-Module: org.bar/1\n"" +"
188161,./TargetProjects/netbeans/platform/core.netigso/test/unit/src/org/netbeans/core/netigso/NetigsoTest.java,61,,"                ""some"";"
188162,./TargetProjects/netbeans/platform/core.netigso/test/unit/src/org/netbeans/core/netigso/NetigsoTest.java,64,,"            File j2 = changeManifest(new File(jars, ""depends-on-simple-module.jar""), mfBar);"
188163,./TargetProjects/netbeans/platform/core.network/src/org/netbeans/core/network/proxy/pac/datetime/PacUtilsDateTime.java,272,,"        throw new PacDateTimeInputException(""value is "" + obj + "" is not an integer"");"
188164,./TargetProjects/netbeans/platform/core.network/src/org/netbeans/core/network/proxy/pac/impl/HelperScriptFactory.java,31,,"        new JsHelperFunction(""isPlainHostName"",     new String[]{""host""}, Boolean.class),"
188165,./TargetProjects/netbeans/platform/core.network/src/org/netbeans/core/network/proxy/pac/impl/NbPacHelperMethods.java,134,,"            String[] hostIPElements = hostIP.split(""\\."");"
188166,./TargetProjects/netbeans/platform/core.network/test/unit/src/org/netbeans/core/network/proxy/NonProxyHostsTest.java,97,,"        assertEquals (""Connect "" + TO_LOCALHOST + "" DIRECT."", ""[DIRECT]"", selector.select (TO_LOCALHOST).toString ());"
188167,./TargetProjects/netbeans/platform/core.network/test/unit/src/org/netbeans/core/network/proxy/NonProxyHostsTest.java,97,,"        assertEquals (""Connect "" + TO_LOCALHOST + "" DIRECT."", ""[DIRECT]"", selector.select (TO_LOCALHOST).toString ());"
188168,./TargetProjects/netbeans/platform/core.network/test/unit/src/org/netbeans/core/network/proxy/NonProxyHostsTest.java,97,,"        assertEquals (""Connect "" + TO_LOCALHOST + "" DIRECT."", ""[DIRECT]"", selector.select (TO_LOCALHOST).toString ());"
188169,./TargetProjects/netbeans/platform/core.network/test/unit/src/org/netbeans/core/network/proxy/pac/PacUtilsDateTimeTest.java,79,,"        assertTrue(PacUtilsDateTime.isInWeekdayRange(nowMON, ""MON""));"
188170,./TargetProjects/netbeans/platform/core.network/test/unit/src/org/netbeans/core/network/proxy/pac/PacUtilsDateTimeTest.java,82,,"        assertTrue(PacUtilsDateTime.isInWeekdayRange(nowSAT, ""FRI"", ""TUE""));"
188171,./TargetProjects/netbeans/platform/core.network/test/unit/src/org/netbeans/core/network/proxy/pac/PacUtilsDateTimeTest.java,101,,"        assertFalse(PacUtilsDateTime.isInTimeRange(df.parse(""14:00:00""), 13));"
188172,./TargetProjects/netbeans/platform/core.network/test/unit/src/org/netbeans/core/network/proxy/pac/PacUtilsDateTimeTest.java,107,,"        assertTrue(PacUtilsDateTime.isInTimeRange(df.parse(""14:00:20""), 13, 30, 23, 14, 0, 21));"
188173,./TargetProjects/netbeans/platform/core.network/test/unit/src/org/netbeans/core/network/proxy/pac/PacUtilsDateTimeTest.java,125,,"        assertFalse(PacUtilsDateTime.isInDateRange(df.parse(""2016-02-28""), ""MAR"", ""JUN""));"
188174,./TargetProjects/netbeans/platform/core.network/test/unit/src/org/netbeans/core/network/proxy/pac/PacUtilsDateTimeTest.java,126,,"        assertTrue(PacUtilsDateTime.isInDateRange(df.parse(""2016-02-28""), ""DEC"", ""MAR""));"
188175,./TargetProjects/netbeans/platform/core.network/test/unit/src/org/netbeans/core/network/proxy/pac/PacUtilsDateTimeTest.java,130,,"        assertFalse(PacUtilsDateTime.isInDateRange(df.parse(""2016-04-28""), ""DEC"", ""MAR""));"
188176,./TargetProjects/netbeans/platform/core.network/test/unit/src/org/netbeans/core/network/proxy/pac/PacUtilsDateTimeTest.java,145,,"        assertFalse(PacUtilsDateTime.isInDateRange(df.parse(""2016-03-28""), 15, ""NOV"", 31, ""JAN""));"
188177,./TargetProjects/netbeans/platform/core.network/test/unit/src/org/netbeans/core/network/proxy/pac/PacUtilsDateTimeTest.java,145,,"        assertFalse(PacUtilsDateTime.isInDateRange(df.parse(""2016-03-28""), 15, ""NOV"", 31, ""JAN""));"
188178,./TargetProjects/netbeans/platform/core.network/test/unit/src/org/netbeans/core/network/proxy/pac/impl/PacHelperMethodsImplTest.java,95,,"        assertTrue(helpers.dnsDomainIs(""www.netscape.com"", "".netscape.com""));"
188179,./TargetProjects/netbeans/platform/core.network/test/unit/src/org/netbeans/core/network/proxy/pac/impl/PacHelperMethodsImplTest.java,156,,"        fakeDns.addForwardResolution(""isinnet1host"", new InetAddress[]{InetAddress.getByName(""127.0.0.1"")});"
188180,./TargetProjects/netbeans/platform/core.network/test/unit/src/org/netbeans/core/network/proxy/pac/impl/PacHelperMethodsImplTest.java,157,,"        assertTrue(helpers.isInNet(""isinnet1host"", ""127.0.0.1"", ""255.255.255.255""));"
188181,./TargetProjects/netbeans/platform/core.network/test/unit/src/org/netbeans/core/network/proxy/pac/impl/PacHelperMethodsImplTest.java,159,,"        fakeDns.addForwardResolution(""isinnet2host"", new InetAddress[]{InetAddress.getByName(""::1""), InetAddress.getByName(""127.0.0.1"")});"
188182,./TargetProjects/netbeans/platform/core.network/test/unit/src/org/netbeans/core/network/utils/IpAddressUtilsTest.java,70,,"        fakeDns.addForwardResolution(""test1"", addrInput);"
188183,./TargetProjects/netbeans/platform/core.osgi/test/unit/src/org/netbeans/core/osgi/ActivatorTest.java,48,,"                ""OpenIDE-Module: custom"","
188184,./TargetProjects/netbeans/platform/core.osgi/test/unit/src/org/netbeans/core/osgi/ActivatorTest.java,49,,"                ""OpenIDE-Module-Install: "" + ModuleInstallInstall.class.getName(),"
188185,./TargetProjects/netbeans/platform/core.osgi/test/unit/src/org/netbeans/core/osgi/ActivatorTest.java,50,,"                ""OpenIDE-Module-Module-Dependencies: org.openide.modules"").done().run(false);"
188186,./TargetProjects/netbeans/platform/core.osgi/test/unit/src/org/netbeans/core/osgi/ActivatorTest.java,55,,"            System.setProperty(""my.bundle.ran"", ""true"");"
188187,./TargetProjects/netbeans/platform/core.osgi/test/unit/src/org/netbeans/core/osgi/DependencyQueueTest.java,41,,"        assertEquals(list(""api""), q.offer(""api"", set(""api""), set(), set()));"
188188,./TargetProjects/netbeans/platform/core.osgi/test/unit/src/org/netbeans/core/osgi/DependencyQueueTest.java,42,,"        assertEquals(list(""impl""), q.offer(""impl"", set(), set(""api""), set()));"
188189,./TargetProjects/netbeans/platform/core.osgi/test/unit/src/org/netbeans/core/osgi/OSGiProcess.java,129,,"            JarFile jar = new JarFile(new File(platformDir, ""modules/"" + cnb.replace('.', '-') + "".jar""));"
188190,./TargetProjects/netbeans/platform/core.osgi/test/unit/src/org/netbeans/core/osgi/OSGiProcess.java,129,,"            JarFile jar = new JarFile(new File(platformDir, ""modules/"" + cnb.replace('.', '-') + "".jar""));"
188191,./TargetProjects/netbeans/platform/core.osgi/test/unit/src/org/netbeans/core/osgi/OSGiProcess.java,178,,"            File srcdir = new File(workDir, ""custom"" + newModule.counter);"
188192,./TargetProjects/netbeans/platform/core.osgi/test/unit/src/org/netbeans/core/osgi/OSGiRepositoryTest.java,56,,"                ""OpenIDE-Module: custom"","
188193,./TargetProjects/netbeans/platform/core.osgi/test/unit/src/org/netbeans/core/osgi/OSGiRepositoryTest.java,57,,"                ""OpenIDE-Module-Install: "" + LayersInstall.class.getName(),"
188194,./TargetProjects/netbeans/platform/core.osgi/test/unit/src/org/netbeans/core/osgi/OSGiRepositoryTest.java,60,,"        assertEquals(""whatever"", System.getProperty(""my.file""));"
188195,./TargetProjects/netbeans/platform/core.osgi/test/unit/src/org/netbeans/core/osgi/OSGiRepositoryTest.java,125,,"                newModule().sourceFile(""m1/layer.xml"", ""<filesystem><folder name='Menu'>"","
188196,./TargetProjects/netbeans/platform/core.osgi/test/unit/src/org/netbeans/core/osgi/OSGiRepositoryTest.java,127,,"                ""</folder></filesystem>"").manifest("
188197,./TargetProjects/netbeans/platform/core.output2/test/unit/src/org/netbeans/core/output2/IOExtensionsTest.java,104,,"            io.getOut().println(""Test line "" + i);"
188198,./TargetProjects/netbeans/platform/core.output2/test/unit/src/org/netbeans/core/output2/IOExtensionsTest.java,214,,"        io.getOut().print(""normal"");"
188199,./TargetProjects/netbeans/platform/core.output2/test/unit/src/org/netbeans/core/output2/IntMapTest.java,42,,"            ""zeroth"", ""first"", ""second"", ""third"", ""fourth"", ""fifth"", ""sixth"", "
188200,./TargetProjects/netbeans/platform/core.output2/test/unit/src/org/netbeans/core/output2/IntMapTest.java,42,,"            ""zeroth"", ""first"", ""second"", ""third"", ""fourth"", ""fifth"", ""sixth"", "
188201,./TargetProjects/netbeans/platform/core.output2/test/unit/src/org/netbeans/core/output2/IntMapTest.java,42,,"            ""zeroth"", ""first"", ""second"", ""third"", ""fourth"", ""fifth"", ""sixth"", "
188202,./TargetProjects/netbeans/platform/core.output2/test/unit/src/org/netbeans/core/output2/IntMapTest.java,42,,"            ""zeroth"", ""first"", ""second"", ""third"", ""fourth"", ""fifth"", ""sixth"", "
188203,./TargetProjects/netbeans/platform/core.output2/test/unit/src/org/netbeans/core/output2/IntMapTest.java,42,,"            ""zeroth"", ""first"", ""second"", ""third"", ""fourth"", ""fifth"", ""sixth"", "
188204,./TargetProjects/netbeans/platform/core.output2/test/unit/src/org/netbeans/core/output2/IntMapTest.java,42,,"            ""zeroth"", ""first"", ""second"", ""third"", ""fourth"", ""fifth"", ""sixth"", "
188205,./TargetProjects/netbeans/platform/core.output2/test/unit/src/org/netbeans/core/output2/IntMapTest.java,42,,"            ""zeroth"", ""first"", ""second"", ""third"", ""fourth"", ""fifth"", ""sixth"", "
188206,./TargetProjects/netbeans/platform/core.output2/test/unit/src/org/netbeans/core/output2/IntMapTest.java,43,,"            ""seventh""};"
188207,./TargetProjects/netbeans/platform/core.output2/test/unit/src/org/netbeans/core/output2/IntMapTest.java,73,,"            assertTrue (""Entry after "" + indices[i] + "" should be "" + val + "" not "" + next, next == val);"
188208,./TargetProjects/netbeans/platform/core.output2/test/unit/src/org/netbeans/core/output2/LifecycleTest.java,159,,"        err.println (""hello"");"
188209,./TargetProjects/netbeans/platform/core.output2/test/unit/src/org/netbeans/core/output2/LifecycleTest.java,161,,"        writer.println (""world"");"
188210,./TargetProjects/netbeans/platform/core.output2/test/unit/src/org/netbeans/core/output2/NbIOFoldTest.java,110,,"        NbIO nbIO = new NbIO(""test"");"
188211,./TargetProjects/netbeans/platform/core.output2/test/unit/src/org/netbeans/core/output2/NbIOFoldTest.java,111,,"        nbIO.getOut().println(""FoldA"");"
188212,./TargetProjects/netbeans/platform/core.output2/test/unit/src/org/netbeans/core/output2/NbIOFoldTest.java,175,,"        nbIO.getOut().println(""  FoldB"");"
188213,./TargetProjects/netbeans/platform/core.output2/test/unit/src/org/netbeans/core/output2/NbIOFoldTest.java,178,,"        nbIO.getOut().println(""    FoldC"");"
188214,./TargetProjects/netbeans/platform/core.output2/test/unit/src/org/netbeans/core/output2/NbIOProviderTest.java,46,,"        InputOutput ioDef1 = IOProvider.getDefault().getIO(""test1"", true, null, def);"
188215,./TargetProjects/netbeans/platform/core.output2/test/unit/src/org/netbeans/core/output2/NbIOTest.java,48,,"        NbIO io = new NbIO(""test"");"
188216,./TargetProjects/netbeans/platform/core.output2/test/unit/src/org/netbeans/core/output2/OutWriterTest.java,50,,"        String first = ""This is the first string"";"
188217,./TargetProjects/netbeans/platform/core.output2/test/unit/src/org/netbeans/core/output2/OutWriterTest.java,51,,"        String second = ""This is the second string, ain't it?"";"
188218,./TargetProjects/netbeans/platform/core.output2/test/unit/src/org/netbeans/core/output2/OutWriterTest.java,52,,"        String third = ""This is the third string"";"
188219,./TargetProjects/netbeans/platform/core.output2/test/unit/src/org/netbeans/core/output2/OutWriterTest.java,151,,"        assertEquals(""First string should be \"""" + firstExpected + ""\"" but was \"""" + firstBack + ""\"""","
188220,./TargetProjects/netbeans/platform/core.output2/test/unit/src/org/netbeans/core/output2/OutWriterTest.java,399,,"            assertEquals (""xyz"" + OutWriter.LINE_SEPARATOR, firstReceived);"
188221,./TargetProjects/netbeans/platform/core.output2/test/unit/src/org/netbeans/core/output2/OutputDocumentTest.java,53,,"        String first = ""This is the first string"";"
188222,./TargetProjects/netbeans/platform/core.output2/test/unit/src/org/netbeans/core/output2/OutputDocumentTest.java,54,,"        String second = ""This is the second string, ain't it?"";"
188223,./TargetProjects/netbeans/platform/core.output2/test/unit/src/org/netbeans/core/output2/OutputDocumentTest.java,55,,"        String third = ""This is the third string"";"
188224,./TargetProjects/netbeans/platform/core.output2/test/unit/src/org/netbeans/core/output2/OutputDocumentTest.java,647,,"        assertTrue (""OutputDocument event offset is "" + docOffset + "" but "" + "
188225,./TargetProjects/netbeans/platform/core.output2/test/unit/src/org/netbeans/core/output2/PairMapTest.java,47,,"            String name = ""Item "" + i;"
188226,./TargetProjects/netbeans/platform/core.startup.base/test/unit/src/org/netbeans/core/startup/layers/ArchiveURLMapperTest.java,131,,"        jos.write(""content"".getBytes());"
188227,./TargetProjects/netbeans/platform/core.startup.base/test/unit/src/org/netbeans/core/startup/layers/AttributeChangeIsNotifiedTest.java,97,,"        assertAttr(""The first value is list"", file, ""value"", ""java.awt.List"");"
188228,./TargetProjects/netbeans/platform/core.startup.base/test/unit/src/org/netbeans/core/startup/layers/RemoveWritablesTest.java,85,,"        assertNotNull(""Module layer is installed"", FileUtil.getConfigFile( ""foo"" ) );"
188229,./TargetProjects/netbeans/platform/core.startup.base/test/unit/src/org/netbeans/core/startup/layers/RemoveWritablesTest.java,113,,"        assertFalse( ""local file removed"", writableFile.exists() );"
188230,./TargetProjects/netbeans/platform/core.startup.base/test/unit/src/org/netbeans/core/startup/layers/RemoveWritablesTest.java,118,,"        FileObject existingFile = FileUtil.getConfigFile( ""foo/test1"" );"
188231,./TargetProjects/netbeans/platform/core.startup.base/test/unit/src/org/netbeans/core/startup/layers/SystemFileSystemTest.java,89,,"        FileObject global = FileUtil.createData(FileUtil.getConfigRoot(), ""dir/file.txt"");"
188232,./TargetProjects/netbeans/platform/core.startup.base/test/unit/src/org/netbeans/core/startup/layers/SystemFileSystemTest.java,90,,"        global.setAttribute(""global"", 3);"
188233,./TargetProjects/netbeans/platform/core.startup.base/test/unit/src/org/netbeans/core/startup/layers/SystemFileSystemTest.java,94,,"        fo1.setAttribute(""one"", 1);"
188234,./TargetProjects/netbeans/platform/core.startup.base/test/unit/src/org/netbeans/core/startup/layers/SystemFileSystemTest.java,95,,"        write(fo1, ""fileone"");"
188235,./TargetProjects/netbeans/platform/core.startup.base/test/unit/src/org/netbeans/core/startup/layers/SystemFileSystemTest.java,98,,"        fo2.setAttribute(""two"", 2);"
188236,./TargetProjects/netbeans/platform/core.startup/src/org/netbeans/core/startup/AutomaticDependencies.java,400,,"                if (triggerType.equals(""cancel"")) {"
188237,./TargetProjects/netbeans/platform/core.startup/src/org/netbeans/core/startup/CLIOptions.java,122,,"                    if (!v.equals(/*Places.MEMORY*/""memory"")) {"
188238,./TargetProjects/netbeans/platform/core.startup/src/org/netbeans/core/startup/CLIOptions.java,126,,"                    System.setProperty(""netbeans.user"", v);"
188239,./TargetProjects/netbeans/platform/core.startup/src/org/netbeans/core/startup/Main.java,251,,"                rm(new File(userdir, ""var"")); // NOI18N"
188240,./TargetProjects/netbeans/platform/core.startup/src/org/netbeans/core/startup/ModuleList.java,358,,"                    modName = attrs.getValue(""name""); // NOI18N"
188241,./TargetProjects/netbeans/platform/core.startup/src/org/netbeans/core/startup/ModuleList.java,417,,"        if (k == ""enabled"" // NOI18N"
188242,./TargetProjects/netbeans/platform/core.startup/src/org/netbeans/core/startup/ModuleList.java,418,,"                   || k == ""autoload"" // NOI18N"
188243,./TargetProjects/netbeans/platform/core.startup/src/org/netbeans/core/startup/ModuleList.java,419,,"                   || k == ""eager"" // NOI18N"
188244,./TargetProjects/netbeans/platform/core.startup/src/org/netbeans/core/startup/ModuleList.java,420,,"                   || k == ""reloadable"" // NOI18N"
188245,./TargetProjects/netbeans/platform/core.startup/src/org/netbeans/core/startup/ModuleList.java,424,,"            if (k == ""startlevel"") { // NOI18N "
188246,./TargetProjects/netbeans/platform/core.startup/src/org/netbeans/core/startup/ModuleList.java,437,,"        String jar = (String) m.get(""jar""); // NOI18N"
188247,./TargetProjects/netbeans/platform/core.startup/src/org/netbeans/core/startup/ModuleList.java,638,,"                prop.put(""deps"", deps);"
188248,./TargetProjects/netbeans/platform/core.startup/src/org/netbeans/core/startup/ModuleList.java,775,,"                FileObject xml = folder.getFileObject(nameDashes, ""xml""); // NOI18N"
188249,./TargetProjects/netbeans/platform/core.startup/src/org/netbeans/core/startup/ModuleList.java,795,,"                FileObject ser = folder.getFileObject(nameDashes, ""ser""); // NOI18N"
188250,./TargetProjects/netbeans/platform/core.startup/src/org/netbeans/core/startup/NbEvents.java,89,,"        ""# {0} - module display name"", ""MSG_failed_install_new_unexpected=Warning - could not install module {0}"","
188251,./TargetProjects/netbeans/platform/core.startup/src/org/netbeans/core/startup/Splash.java,565,,"                    if (statusBox.fm.stringWidth(newString + ""..."") > statusBox.bounds.width) { // NOI18N"
188252,./TargetProjects/netbeans/platform/core.startup/src/org/netbeans/core/startup/StartLog.java,209,,"                    (time - zero) + "" - "" + action + "" started"" // NOI18N"
188253,./TargetProjects/netbeans/platform/core.startup/src/org/netbeans/core/startup/TopLogging.java,250,,"        ps.println(""  Operating System        = "" + System.getProperty(""os.name"", ""unknown"")"
188254,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/AutomaticDependenciesCachedTest.java,68,,"        assertNotNull(""Automatic dependencies parsed"", System.getProperty(""log.msg""));"
188255,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/AutomaticDependenciesTest.java,51,,"        deps.addAll(Dependency.create(Dependency.TYPE_MODULE, ""orig > 1.0""));"
188256,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/AutomaticDependenciesTest.java,54,,"        AutomaticDependencies.Report rep = ad.refineDependenciesAndReport(""random"", _deps);"
188257,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/AutomaticDependenciesTest.java,88,,"        deps.addAll(Dependency.create(Dependency.TYPE_PACKAGE, ""javax.death[AbstractCoffin] > 1.0""));"
188258,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/AutomaticDependenciesTest.java,91,,"        assertEquals(""javax.death/1 > 1.0"", normal(_deps));"
188259,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/CLIOptionsTest.java,80,,"        String orig = System.setProperty(""netbeans.user"", ""before"");"
188260,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/InstalledFileLocatorImplDirTest.java,53,,"        touch(file(nbhome, ""a/b""));"
188261,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/InstalledFileLocatorImplDirTest.java,54,,"        touch(file(nbhome, ""a/c""));"
188262,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/InstalledFileLocatorImplDirTest.java,56,,"        touch(file(nbhome, ""e/f/g""));"
188263,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/InstalledFileLocatorImplTest.java,62,,"        touch(file(nbhome, ""a/b""));"
188264,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/InstalledFileLocatorImplTest.java,63,,"        touch(file(nbhome, ""a/c""));"
188265,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/InstalledFileLocatorImplTest.java,65,,"        touch(file(nbhome, ""e/f/g""));"
188266,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/InstalledFileLocatorImplTest.java,70,,"        touch(file(nbhome, ""loc/y.html""));"
188267,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/InstalledFileLocatorImplTest.java,78,,"        touch(file(nbdir2, ""loc/y_foo.html""));"
188268,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/InstalledFileLocatorImplTest.java,175,,"        assertEquals(x1, ifl.locate(""x"", ""mod.a"", false));"
188269,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/NbInstallerCacheTest.java,85,,"            throw new UnsupportedOperationException(""Not supported yet."");"
188270,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/NbInstallerHideClasspathPackagesTest.java,77,,"            ModuleManagerTest.assertDoesNotOverride(m1, ""javax.net.SocketFactory"");"
188271,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/NbInstallerHideClasspathPackagesTest.java,78,,"            ModuleManagerTest.assertOverrides(m1, ""javax.swing.JPanel"");"
188272,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/NbInstallerHideClasspathPackagesTest.java,79,,"            ModuleManagerTest.assertOverrides(m1, ""javax.swing.text.Document"");"
188273,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/NbInstallerHideClasspathPackagesTest.java,80,,"            ModuleManagerTest.assertOverrides(m1, ""javax.naming.Context"");"
188274,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/NbInstallerHideClasspathPackagesTest.java,81,,"            ModuleManagerTest.assertDoesNotOverride(m1, ""javax.naming.spi.Resolver"");"
188275,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/NbInstallerTest5.java,58,,"            assertEquals(null, slurp(""foo/file3.txt""));"
188276,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/NbInstallerTest5.java,61,,"            assertEquals(""base contents"", slurp(""foo/file1.txt""));"
188277,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/NbProblemDisplayerTest.java,60,,"            mf.getMainAttributes().putValue(""OpenIDE-Module"", ""root.module"");"
188278,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/NbProblemDisplayerTest.java,60,,"            mf.getMainAttributes().putValue(""OpenIDE-Module"", ""root.module"");"
188279,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/NbProblemDisplayerTest.java,63,,"            pm.addAttr(""OpenIDE-Module-Name"", ""RootModule"");"
188280,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/NbProblemDisplayerTest.java,63,,"            pm.addAttr(""OpenIDE-Module-Name"", ""RootModule"");"
188281,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/NbProblemDisplayerTest.java,92,,"            pm.addAttr(""OpenIDE-Module-Name"", ""DepModule"");"
188282,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/NbStartStopTest.java,65,,"        assertTrue(""Initialized"", ok[0]);"
188283,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/NbURLStreamHandlerFactoryTest.java,52,,"        ""/test/something"","
188284,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/NbURLStreamHandlerFactoryTest.java,56,,"        ""/test/something.html"","
188285,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/NbURLStreamHandlerFactoryTest.java,102,,"        checkNbresLoc(""/test/something"", "".html"");"
188286,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/PlatformDependencySatisfiedTest.java,80,,"        System.setProperty(""os.name"", ""Windows 2000"");"
188287,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/PlatformDependencySatisfiedTest.java,83,,"        assertEnableModule(""org.openide.modules.os.Windows"", true);"
188288,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/PlatformDependencySatisfiedTest.java,84,,"        assertEnableModule(""org.openide.modules.os.MacOSX"", false);"
188289,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/PlatformDependencySatisfiedTest.java,85,,"        assertEnableModule(""org.openide.modules.os.Unix"", false);"
188290,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/PlatformDependencySatisfiedTest.java,86,,"        assertEnableModule(""org.openide.modules.os.PlainUnix"", false);"
188291,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/PlatformDependencySatisfiedTest.java,87,,"        assertEnableModule(""org.openide.modules.os.Garbage"", false);"
188292,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/PlatformDependencySatisfiedTest.java,88,,"        assertEnableModule(""org.openide.modules.os.OS2"", false);"
188293,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/TopLoggingStartLogTest.java,114,,"            fail(""msg shall be logged: "" + getStream().toString());"
188294,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/TopLoggingStartLogTest.java,121,,"            fail(""msg shall be logged to file: "" + disk);"
188295,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/TopLoggingStartLogTest.java,127,,"        StartLog.logStart(""run"");"
188296,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/TopLoggingTest.java,119,,"        Exception e = new Exception(""One"");"
188297,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/TopLoggingTest.java,120,,"        Exceptions.attachMessage(e, ""Two"");"
188298,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/TopLoggingTest.java,122,,"        Logger.getLogger(TopLoggingTest.class.getName()).log(Level.INFO, ""Three"", e);"
188299,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/TopLoggingTest.java,155,,"        File log = new File(new File(new File(getWorkDir(), ""var""), ""log""), ""messages.log"");"
188300,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/TopLoggingTest.java,155,,"        File log = new File(new File(new File(getWorkDir(), ""var""), ""log""), ""messages.log"");"
188301,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/TopLoggingTest.java,155,,"        File log = new File(new File(new File(getWorkDir(), ""var""), ""log""), ""messages.log"");"
188302,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/TopLoggingTest.java,156,,"        assertTrue(""Log file exists: "" + log, log.canRead());"
188303,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/TopLoggingTest.java,159,,"        File log2 = new File(new File(new File(getWorkDir(), ""var""), ""log""), ""messages.log.1"");"
188304,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/TopLoggingTest.java,166,,"        System.clearProperty(""org.netbeans.log.numberOfFiles"");"
188305,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/TopLoggingTest.java,180,,"        assertTrue(""Backup file exists: "" + log1, log1.canRead());"
188306,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/UpdateAllResourcesTest.java,42,,"        System.getProperties().remove(""org.netbeans.core.update.all.resources"");"
188307,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/layers/CacheManagerTestBaseHid.java,96,,"            loadResource(""data/layer1.xml""));"
188308,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/layers/CacheManagerTestBaseHid.java,158,,"        FileUtil.createData(ffs.getRoot(), ""foo/29356"").setAttribute(""x"", ""val"");"
188309,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/layers/CacheManagerTestBaseHid.java,158,,"        FileUtil.createData(ffs.getRoot(), ""foo/29356"").setAttribute(""x"", ""val"");"
188310,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/layers/CachingPreventsFileTouchesTest.java,114,,"        String p = System.getProperty(""manifestParsing"");"
188311,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/layers/CountingSecurityManager.java,202,,"                File home = new File(System.getProperty(""netbeans.home""));"
188312,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/logging/MessagesHandlerTest.java,81,,"        mh.publish(new LogRecord(Level.INFO, ""Hello""));"
188313,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/preferences/TestNbPreferencesThreading.java,64,,"        prefs.putBoolean(""Guest"", false);"
188314,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/preferences/TestPreferences.java,125,,"            pref.get(null, ""value"");"
188315,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/preferences/TestPreferences.java,132,,"            pref.get(""key"", null);"
188316,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/preferences/TestPreferences.java,162,,"        assertFalse(pref.nodeExists(""sub1""));"
188317,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/preferences/TestPreferences.java,198,,"        assertNull(pref.get(""key1"", null));"
188318,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/preferences/TestPreferences.java,199,,"        pref.put(""key1"", ""value1"");"
188319,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/preferences/TestPreferences.java,208,,"        pref.put(""key1"", ""true"");"
188320,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/preferences/TestPreferences.java,211,,"        pref.put(""key1"", ""false"");"
188321,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/preferences/TestPropertiesStorage.java,92,,"        pref.put(""key"",""value"");"
188322,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/preferences/TestPropertiesStorage.java,92,,"        pref.put(""key"",""value"");"
188323,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/preferences/TestPropertiesStorage.java,244,,"        pref.put(""key0"", ""value10"");"
188324,./TargetProjects/netbeans/platform/core.startup/test/unit/src/org/netbeans/core/startup/preferences/TestPropertiesStorage.java,244,,"        pref.put(""key0"", ""value10"");"
188325,./TargetProjects/netbeans/platform/core.ui/src/org/netbeans/core/ui/notifications/BalloonManager.java,431,,"            g2d.setColor( UIManager.getColor( ""ToolTip.background"" ) ); //NOI18N"
188326,./TargetProjects/netbeans/platform/core.ui/src/org/netbeans/core/ui/options/filetypes/FileAssociationsPanel.java,415,,"        boolean manual = NbPreferences.root().node(""org/openide/actions/FileSystemRefreshAction"").getBoolean(""manual"", false); // NOI18N"
188327,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/PersistenceHandler.java,1009,,"                buffer.append(""\n-- co["" + i + ""]: "" + wmc.editorAreaConstraints[i]);"
188328,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/model/SplitSubModel.java,171,,"                              new java.lang.IllegalArgumentException(""Mode="" +"
188329,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/model/SplitSubModel.java,184,,"            debugLog(""==========================================""); // NOI18N"
188330,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/model/SplitSubModel.java,211,,"            debugLog(""side="" + side); // NOI18N"
188331,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/options/LafPanel.java,170,,"            NbPreferences.root().node( ""laf"" ).put( ""laf"", li.getClassName() ); //NOI18N"
188332,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/GroupParser.java,93,,"        if (DEBUG) Debug.log(GroupParser.class, ""readProperties ENTER"" + "" group:"" + getName());"
188333,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/ModeParser.java,186,,"        if (DEBUG) Debug.log(ModeParser.class, ""readProperties ENTER"" + "" mo:"" + getName());"
188334,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/ModeParser.java,646,,"        if (DEBUG) Debug.log(ModeParser.class, ""removeTCRef ENTER"" + "" tcRef:"" + tcRefName);"
188335,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/ModeParser.java,713,,"                ""[WinSys.ModeParser.addTCRef]"" // NOI18N"
188336,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/ModeParser.java,714,,"                + "" Warning: ModeParser "" + getName() + "". TCRefParser "" // NOI18N"
188337,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/ModeParser.java,1133,,"                    ""[WinSys.ModeParser.handleName]"" // NOI18N"
188338,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/ModeParser.java,1136,,"                    throw new SAXException(""Invalid attribute value""); // NOI18N"
188339,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/ModeParser.java,1248,,"                    ""[WinSys.ModeParser.handleState]"" // NOI18N"
188340,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/ModeParser.java,1296,,"                ""[WinSys.ModeParser.handlePath]"" // NOI18N"
188341,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/ModeParser.java,1350,,"                        ""[WinSys.ModeParser.handleBounds]"" // NOI18N"
188342,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/ModeParser.java,1401,,"                    ""[WinSys.ModeParser.handleRelativeBounds]"" // NOI18N"
188343,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/ModeParser.java,1575,,"                buff.append(""\"" />\n""); // NOI18N"
188344,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/ModeParser.java,1582,,"            buff.append(""\"" "");"
188345,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/PersistenceManager.java,96,,"    public static final String COMPONENT_EXT = ""settings""; // NOI18N"
188346,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/PersistenceManager.java,540,,"                                ""[PersistenceManager.getTopComponentForID]"" // NOI18N"
188347,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/PersistenceManager.java,541,,"                                + "" Problem when deserializing TopComponent for tcID:'"" + stringId  // NOI18N"
188348,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/PersistenceManager.java,569,,"                        + "" Problem when deserializing TopComponent for tcID:'"" + stringId + ""'. Reason: "" // NOI18N"
188349,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/TCGroupParser.java,70,,"        if (DEBUG) Debug.log(TCGroupParser.class, ""load ENTER"" + "" tcGrp:"" + tc_id);"
188350,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/TCGroupParser.java,337,,"                    ""[WinSys.TCGroupParser.handleOpenCloseBehavior]"" // NOI18N"
188351,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/TCGroupParser.java,339,,"                    + "" of element \""open-close-behavior\"".""); // NOI18N"
188352,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/TCRefParser.java,76,,"        if (DEBUG) Debug.log(TCRefParser.class, ""load ENTER"" + "" tcRef:"" + tc_id);"
188353,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/TCRefParser.java,533,,"            buff.append("" />\n""); // NOI18N"
188354,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/WindowManagerParser.java,138,,"            if (DEBUG) Debug.log(WindowManagerParser.class, ""removeMode"" + "" mo:"" + modeName);"
188355,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/WindowManagerParser.java,189,,"            if (DEBUG) Debug.log(WindowManagerParser.class, ""WMParser.removeGroup"" + "" group:"" + groupName);"
188356,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/WindowManagerParser.java,244,,"            if (DEBUG) Debug.log(WindowManagerParser.class, ""removeTCRef ENTER"" + "" tcRef:"" + tcRefName);"
188357,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/WindowManagerParser.java,290,,"            + "" tcGroup:"" + tcGroupName);  // NOI18N"
188358,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/WindowManagerParser.java,1070,,"                ""[WinSys.WindowManagerParser.handleJoinedProperties]"" // NOI18N"
188359,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/WindowManagerParser.java,1072,,"                + "" of element \""joined-properties\""."", exc); // NOI18N"
188360,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/WindowManagerParser.java,1093,,"                s = attrs.getValue(""width""); // NOI18N"
188361,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/WindowManagerParser.java,1109,,"                s = attrs.getValue(""height""); // NOI18N"
188362,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/WindowManagerParser.java,1191,,"                if (""true"".equals(s)) { // NOI18N"
188363,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/WindowManagerParser.java,1193,,"                } else if (""false"".equals(s)) { // NOI18N"
188364,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/WindowManagerParser.java,1285,,"                ""[WinSys.WindowManagerParser.handleSeparatedProperties]"" // NOI18N"
188365,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/WindowManagerParser.java,1287,,"                + "" of element \""separated-properties\""."", exc); // NOI18N"
188366,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/WindowManagerParser.java,1507,,"                ""[WinSys.WindowManagerParser.handlePath]"" // NOI18N"
188367,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/WindowManagerParser.java,1596,,"                    ""[WinSys.WindowManagerParser.handleEditorAreaBounds]"" // NOI18N"
188368,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/WindowManagerParser.java,1647,,"                    ""[WinSys.WindowManagerParser.handleEditorAreaRelativeBounds]"" // NOI18N"
188369,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/WindowManagerParser.java,1777,,"                    ""[WinSys.WindowManagerParser.handleTCRefItem]"" // NOI18N"
188370,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/WindowManagerParser.java,1872,,"                append(""   x=\"""").append(wmc.xJoined).append(""\""\n""). // NOI18N"
188371,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/persistence/WindowManagerParser.java,1935,,"                    append(""\"" height=\"""").append(wmc.editorAreaRelativeBounds.height).append(""\""/>\n""); // NOI18N"
188372,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/services/NbPresenter.java,127,,"        stdNoButton.putClientProperty( ""defaultButton"", Boolean.FALSE ); //NOI18N"
188373,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/view/DefaultView.java,92,,"            toReturn = (String)comp.getClientProperty(""lastSlideSide"");"
188374,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/view/DefaultView.java,440,,"                        ""Could not find mode "" + viewEvent.getSource());"
188375,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/view/DefaultView.java,551,,"            debugLog(""Init view 4=""+(System.currentTimeMillis() - start) + "" ms""); // NOI18N"
188376,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/view/ui/slides/SlideBarContainer.java,198,,"                bottomEmptyBorder = BorderFactory.createMatteBorder(3, 0, 0, 0, UIManager.getColor(""NbSplitPane.background"")); //NOI18N"
188377,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/view/ui/toolbars/ToolbarConfiguration.java,264,,"                        ((JComponent) comps[j]).putClientProperty(""PreferredIconSize"",null); //NOI18N"
188378,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/view/ui/toolbars/ToolbarContainer.java,126,,"        } else if( !""Aqua"".equals(lAndF) && !""GTK"".equals(lAndF) ){ //NOI18N"
188379,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/view/ui/toolbars/ToolbarConvertor.java,108,,"                w.write(ATT_TOOLBAR_NAME); w.write(""=\""""); w.write(tc.getName()); w.write(""\""""); //NOI18N"
188380,./TargetProjects/netbeans/platform/core.windows/src/org/netbeans/core/windows/view/ui/toolbars/ToolbarConvertor.java,110,,"                w.write(ATT_TOOLBAR_VISIBLE); w.write(""=\""""); w.write(tc.isVisible() ? ""true"" : ""false""); w.write(""\""""); //NOI18N"
188381,./TargetProjects/netbeans/platform/core.windows/test/unit/src/org/netbeans/core/windows/RoleTest.java,62,,"        assertTrue( wm.switchRole( ""_unit_test_"", false ) );"
188382,./TargetProjects/netbeans/platform/core.windows/test/unit/src/org/netbeans/core/windows/persistence/GroupParserTest.java,49,,"        GroupParser groupParser = createGroupParser(""data/valid/Windows/Groups"",""group01"");"
188383,./TargetProjects/netbeans/platform/core.windows/test/unit/src/org/netbeans/core/windows/persistence/GroupParserTest.java,61,,"        assertEquals(""moduleCodeNameBase"",""org.netbeans.modules.form"",internalCfg.moduleCodeNameBase);"
188384,./TargetProjects/netbeans/platform/core.windows/test/unit/src/org/netbeans/core/windows/persistence/GroupParserTest.java,146,,"        GroupParser groupParser = createGroupParser(""data/invalid/Windows/Groups"",""group01"");"
188385,./TargetProjects/netbeans/platform/core.windows/test/unit/src/org/netbeans/core/windows/persistence/ModeParserTest.java,73,,"        ModeParser modeParser = createModeParser(""data/valid/Windows/Modes"",""mode01"");"
188386,./TargetProjects/netbeans/platform/core.windows/test/unit/src/org/netbeans/core/windows/persistence/ModeParserTest.java,73,,"        ModeParser modeParser = createModeParser(""data/valid/Windows/Modes"",""mode01"");"
188387,./TargetProjects/netbeans/platform/core.windows/test/unit/src/org/netbeans/core/windows/persistence/ModeParserTest.java,78,,"        assertNotNull(""Could not load data."",modeCfg);"
188388,./TargetProjects/netbeans/platform/core.windows/test/unit/src/org/netbeans/core/windows/persistence/ModeParserTest.java,90,,"        assertEquals(""Mode state"",Constants.MODE_STATE_JOINED,modeCfg.state);"
188389,./TargetProjects/netbeans/platform/core.windows/test/unit/src/org/netbeans/core/windows/persistence/ModeParserTest.java,95,,"        assertNotNull(""Mode constraints are null"",modeCfg.constraints);"
188390,./TargetProjects/netbeans/platform/core.windows/test/unit/src/org/netbeans/core/windows/persistence/ModeParserTest.java,107,,"        assertTrue(""Permanent"",modeCfg.permanent);"
188391,./TargetProjects/netbeans/platform/core.windows/test/unit/src/org/netbeans/core/windows/persistence/ModeParserTest.java,145,,"        assertEquals(""Active TC"",""output"",modeCfg.selectedTopComponentID);"
188392,./TargetProjects/netbeans/platform/core.windows/test/unit/src/org/netbeans/core/windows/persistence/ModeParserTest.java,145,,"        assertEquals(""Active TC"",""output"",modeCfg.selectedTopComponentID);"
188393,./TargetProjects/netbeans/platform/core.windows/test/unit/src/org/netbeans/core/windows/persistence/ModeParserTest.java,363,,"        assertTrue(""Compare configuration data"",modeCfg1.equals(modeCfg2));"
188394,./TargetProjects/netbeans/platform/core.windows/test/unit/src/org/netbeans/core/windows/persistence/ModeParserTest.java,498,,"        ModeParser modeParser = createModeParser(""data/invalid/Windows/Modes"",""mode01"");"
188395,./TargetProjects/netbeans/platform/core.windows/test/unit/src/org/netbeans/core/windows/persistence/TCGroupParserTest.java,49,,"        TCGroupParser tcGroupParser = createGroupParser(""data/valid/Windows/Groups/group00"",""tcgroup00"");"
188396,./TargetProjects/netbeans/platform/core.windows/test/unit/src/org/netbeans/core/windows/persistence/TCGroupParserTest.java,132,,"        TCGroupParser tcGroupParser = createGroupParser(""data/invalid/Windows/Groups/group00"",""tcgroup00"");"
188397,./TargetProjects/netbeans/platform/core.windows/test/unit/src/org/netbeans/core/windows/persistence/TCRefParserTest.java,54,,"        TCRefParser tcRefParser = createRefParser(""data/valid/Windows/Modes/mode00"",""tcref00"");"
188398,./TargetProjects/netbeans/platform/core.windows/test/unit/src/org/netbeans/core/windows/persistence/TCRefParserTest.java,125,,"        assertTrue(""Compare configuration data"",tcRefCfg1.equals(tcRefCfg2));"
188399,./TargetProjects/netbeans/platform/core.windows/test/unit/src/org/netbeans/core/windows/persistence/TCRefParserTest.java,198,,"        TCRefParser tcRefParser = createRefParser(""data/invalid/Windows/Modes/mode00"",""tcref00"");"
188400,./TargetProjects/netbeans/platform/core.windows/test/unit/src/org/netbeans/core/windows/persistence/WindowManagerParserTest.java,71,,"        WindowManagerParser wmParser = createWMParser(""data/valid/Windows"",""windowmanager01"");"
188401,./TargetProjects/netbeans/platform/core.windows/test/unit/src/org/netbeans/core/windows/persistence/WindowManagerParserTest.java,78,,"            fail(""Unexpected exception during parsing"");"
188402,./TargetProjects/netbeans/platform/core.windows/test/unit/src/org/netbeans/core/windows/persistence/WindowManagerParserTest.java,82,,"        assertNotNull(""Could not load data."",wmCfg);"
188403,./TargetProjects/netbeans/platform/core.windows/test/unit/src/org/netbeans/core/windows/persistence/WindowManagerParserTest.java,131,,"        assertEquals(""Active mode"",""editor"",wmCfg.activeModeName);"
188404,./TargetProjects/netbeans/platform/core.windows/test/unit/src/org/netbeans/core/windows/persistence/WindowManagerParserTest.java,136,,"        assertNotNull(""Modes are null"",wmCfg.modes);"
188405,./TargetProjects/netbeans/platform/core.windows/test/unit/src/org/netbeans/core/windows/persistence/WindowManagerParserTest.java,138,,"        assertNotNull(""Groups are null"",wmCfg.groups);"
188406,./TargetProjects/netbeans/platform/core.windows/test/unit/src/org/netbeans/core/windows/persistence/WindowManagerParserTest.java,304,,"        assertEquals(""Compare configuration data"", wmCfg1, wmCfg2);"
188407,./TargetProjects/netbeans/platform/core.windows/test/unit/src/org/netbeans/core/windows/services/DialogDisplayerImplTest.java,173,,"        DialogDescriptor ownerDD = new DialogDescriptor (pane, ""Owner"", true, new Object[] {closeOwner}, null, 0, null, null, leaf);"
188408,./TargetProjects/netbeans/platform/core.windows/test/unit/src/org/netbeans/core/windows/view/ui/popupswitcher/KeyboardPopupSwitcherTestHid.java,61,,"        items1[0] = new DummyItem(""Something.txt"", new DummyIcon(Color.BLUE));"
188409,./TargetProjects/netbeans/platform/core.windows/test/unit/src/org/netbeans/core/windows/view/ui/popupswitcher/KeyboardPopupSwitcherTestHid.java,63,,"        items1[2] = new DummyItem(""Somewhere.txt"", new DummyIcon(Color.YELLOW));"
188410,./TargetProjects/netbeans/platform/core.windows/test/unit/src/org/netbeans/core/windows/view/ui/popupswitcher/KeyboardPopupSwitcherTestHid.java,71,,"            items1[i] = new DummyItem(""s1.txt"", new DummyIcon());"
188411,./TargetProjects/netbeans/platform/core.windows/test/unit/src/org/netbeans/core/windows/view/ui/toolbars/ConfigureToolbarPanelTest.java,81,,"            throw new UnsupportedOperationException(""Not supported yet."");"
188412,./TargetProjects/netbeans/platform/editor.mimelookup.impl/test/unit/src/org/netbeans/modules/editor/mimelookup/impl/CompoundFolderChildrenTest.java,63,,"        TestUtilities.createFile(getWorkDir(), ""Tmp/A/B/C/D/"" + fileName1);"
188413,./TargetProjects/netbeans/platform/editor.mimelookup.impl/test/unit/src/org/netbeans/modules/editor/mimelookup/impl/CompoundFolderChildrenTest.java,64,,"        TestUtilities.createFile(getWorkDir(), ""Tmp/A/B/"" + fileName2);"
188414,./TargetProjects/netbeans/platform/editor.mimelookup.impl/test/unit/src/org/netbeans/modules/editor/mimelookup/impl/CompoundFolderChildrenTest.java,66,,"        CompoundFolderChildren cfch = new CompoundFolderChildren(new String [] { ""Tmp/A/B/C/D"", ""Tmp/A/B"" }, false);"
188415,./TargetProjects/netbeans/platform/editor.mimelookup.impl/test/unit/src/org/netbeans/modules/editor/mimelookup/impl/CompoundFolderChildrenTest.java,66,,"        CompoundFolderChildren cfch = new CompoundFolderChildren(new String [] { ""Tmp/A/B/C/D"", ""Tmp/A/B"" }, false);"
188416,./TargetProjects/netbeans/platform/editor.mimelookup.impl/test/unit/src/org/netbeans/modules/editor/mimelookup/impl/CompoundFolderChildrenTest.java,69,,"        assertEquals(""Wrong number of files"", 2, files.size());"
188417,./TargetProjects/netbeans/platform/editor.mimelookup.impl/test/unit/src/org/netbeans/modules/editor/mimelookup/impl/CompoundFolderChildrenTest.java,132,,"        TestUtilities.createFile(getWorkDir(), ""Tmp/A/"" + fileName2);"
188418,./TargetProjects/netbeans/platform/editor.mimelookup.impl/test/unit/src/org/netbeans/modules/editor/mimelookup/impl/CompoundFolderChildrenTest.java,146,,"        CompoundFolderChildren cfch = new CompoundFolderChildren(new String [] { ""Tmp/A/B/C/D"", ""Tmp/A/B"", ""Tmp/A"" }, false);"
188419,./TargetProjects/netbeans/platform/editor.mimelookup.impl/test/unit/src/org/netbeans/modules/editor/mimelookup/impl/CompoundFolderChildrenTest.java,177,,"        assertEquals(""Wrong first file"", fileName2, ((FileObject) files.get(0)).getNameExt());"
188420,./TargetProjects/netbeans/platform/editor.mimelookup.impl/test/unit/src/org/netbeans/modules/editor/mimelookup/impl/CompoundFolderChildrenTest.java,178,,"        assertEquals(""Wrong second file"", fileName3, ((FileObject) files.get(1)).getNameExt());"
188421,./TargetProjects/netbeans/platform/editor.mimelookup.impl/test/unit/src/org/netbeans/modules/editor/mimelookup/impl/CompoundFolderChildrenTest.java,179,,"        assertEquals(""Wrong third file"", fileName1, ((FileObject) files.get(2)).getNameExt());"
188422,./TargetProjects/netbeans/platform/editor.mimelookup.impl/test/unit/src/org/netbeans/modules/editor/mimelookup/impl/Depr_MimeLookupTest.java,91,,"        lookup = MimeLookup.getMimeLookup(""text/jsp"");//NOI18N"
188423,./TargetProjects/netbeans/platform/editor.mimelookup.impl/test/unit/src/org/netbeans/modules/editor/mimelookup/impl/Depr_MimeLookupTest.java,95,,"        lookup = MimeLookup.getMimeLookup(""text/x-java"").childLookup(""text/xml""); //NOI18N"
188424,./TargetProjects/netbeans/platform/editor.mimelookup.impl/test/unit/src/org/netbeans/modules/editor/mimelookup/impl/Depr_MimeLookupTest.java,95,,"        lookup = MimeLookup.getMimeLookup(""text/x-java"").childLookup(""text/xml""); //NOI18N"
188425,./TargetProjects/netbeans/platform/editor.mimelookup.impl/test/unit/src/org/netbeans/modules/editor/mimelookup/impl/Depr_MimeLookupTest.java,99,,"        lookup = MimeLookup.getMimeLookup(""text/html"").childLookup(""text/xml""); //NOI18N"
188426,./TargetProjects/netbeans/platform/editor.mimelookup.impl/test/unit/src/org/netbeans/modules/editor/mimelookup/impl/Depr_MimeLookupTest.java,126,,"        createFile(""Editors/text/x-java/text/x-properties/testLookupTwo/"" +"
188427,./TargetProjects/netbeans/platform/editor.mimelookup.impl/test/unit/src/org/netbeans/modules/editor/mimelookup/impl/Depr_MimeLookupTest.java,127,,"                ""org-netbeans-modules-editor-mimelookup-impl-TestLookupObjectTwo.instance"");"
188428,./TargetProjects/netbeans/platform/editor.mimelookup.impl/test/unit/src/org/netbeans/modules/editor/mimelookup/impl/Depr_MimeLookupTest.java,129,,"        lookup = MimeLookup.getMimeLookup(""text/x-java"").childLookup(""text/x-properties""); //NOI18N"
188429,./TargetProjects/netbeans/platform/editor.mimelookup.impl/test/unit/src/org/netbeans/modules/editor/mimelookup/impl/Depr_MimeLookupTest.java,134,,"                ""org-netbeans-modules-editor-mimelookup-impl-TestLookupObject.instance"");"
188430,./TargetProjects/netbeans/platform/editor.mimelookup.impl/test/unit/src/org/netbeans/modules/editor/mimelookup/impl/FolderPathLookupTest.java,61,,"        TestUtilities.createFile(getWorkDir(), ""Tmp/A/B/C/D/org-netbeans-modules-editor-mimelookup-impl-DummySettingImpl.instance"");"
188431,./TargetProjects/netbeans/platform/editor.mimelookup.impl/test/unit/src/org/netbeans/modules/editor/mimelookup/impl/FolderPathLookupTest.java,64,,"        Lookup lookup = new FolderPathLookup(new String [] { ""Tmp/A/B/C/D"" });"
188432,./TargetProjects/netbeans/platform/editor.mimelookup.impl/test/unit/src/org/netbeans/modules/editor/mimelookup/impl/FolderPathLookupTest.java,67,,"        assertEquals(""Wrong number of instances"", 1, instances.size());"
188433,./TargetProjects/netbeans/platform/editor.mimelookup.impl/test/unit/src/org/netbeans/modules/editor/mimelookup/impl/FolderPathLookupTest.java,68,,"        assertEquals(""Wrong instance"", DummySettingImpl.class, instances.iterator().next().getClass());"
188434,./TargetProjects/netbeans/platform/editor.mimelookup.impl/test/unit/src/org/netbeans/modules/editor/mimelookup/impl/MimeLookupTest.java,128,,"        createFile(""Editors/text/x-java/text/x-properties/testLookupTwo/"" +"
188435,./TargetProjects/netbeans/platform/editor.mimelookup.impl/test/unit/src/org/netbeans/modules/editor/mimelookup/impl/MimeLookupTest.java,129,,"                ""org-netbeans-modules-editor-mimelookup-impl-TestLookupObjectTwo.instance"");"
188436,./TargetProjects/netbeans/platform/editor.mimelookup.impl/test/unit/src/org/netbeans/modules/editor/mimelookup/impl/MimeLookupTest.java,137,,"                ""org-netbeans-modules-editor-mimelookup-impl-TestLookupObject.instance"");"
188437,./TargetProjects/netbeans/platform/editor.mimelookup.impl/test/unit/src/org/netbeans/modules/editor/mimelookup/impl/MimeLookupTest.java,183,,"        mp = MimePath.get(MimePath.get(""text/html""), ""text/xml""); //NOI18N"
188438,./TargetProjects/netbeans/platform/editor.mimelookup.impl/test/unit/src/org/netbeans/modules/editor/mimelookup/impl/SwitchLookupTest.java,56,,"        TestUtilities.createFile(getWorkDir(), ""Editors/text/x-jsp/text/x-java/org-netbeans-modules-editor-mimelookup-impl-DummySettingImpl.instance"");"
188439,./TargetProjects/netbeans/platform/editor.mimelookup.impl/test/unit/src/org/netbeans/modules/editor/mimelookup/impl/SwitchLookupTest.java,60,,"        Lookup lookup = new SwitchLookup(MimePath.parse(""text/x-jsp/text/x-java""));"
188440,./TargetProjects/netbeans/platform/editor.mimelookup.impl/test/unit/src/org/netbeans/modules/editor/mimelookup/impl/SwitchLookupTest.java,63,,"        assertEquals(""Wrong number of instances"", 1, instances.size());"
188441,./TargetProjects/netbeans/platform/editor.mimelookup.impl/test/unit/src/org/netbeans/modules/editor/mimelookup/impl/SwitchLookupTest.java,64,,"        assertEquals(""Wrong instance"", DummySettingImpl.class, instances.iterator().next().getClass());"
188442,./TargetProjects/netbeans/platform/editor.mimelookup/test/unit/src/org/netbeans/api/editor/mimelookup/MimeLookupMemoryTest.java,53,,"        MimePath path = MimePath.get(""text/x-java"");"
188443,./TargetProjects/netbeans/platform/editor.mimelookup/test/unit/src/org/netbeans/api/editor/mimelookup/MimePathMemoryTest.java,37,,"        MimePath pathA = MimePath.get(""text/x-java"");"
188444,./TargetProjects/netbeans/platform/editor.mimelookup/test/unit/src/org/netbeans/api/editor/mimelookup/MimePathTest.java,55,,"        assertTrue(""text/x-ant+xml"".equals(two));"
188445,./TargetProjects/netbeans/platform/editor.mimelookup/test/unit/src/org/netbeans/api/editor/mimelookup/MimePathTest.java,57,,"        assertTrue(""text/xml"".equals(four));"
188446,./TargetProjects/netbeans/platform/editor.mimelookup/test/unit/src/org/netbeans/modules/editor/mimelookup/MimePathLookupTest.java,73,,"            ""Services/org-netbeans-modules-editor-mimelookup-DummyMimeDataProvider.instance"","
188447,./TargetProjects/netbeans/platform/editor.mimelookup/test/unit/src/org/netbeans/modules/editor/mimelookup/MimePathLookupTest.java,77,,"            ""Services/org-netbeans-modules-editor-mimelookup-DummyMimeLookupInitializer.instance"","
188448,./TargetProjects/netbeans/platform/editor.mimelookup/test/unit/src/org/netbeans/modules/editor/mimelookup/MimePathLookupTest.java,83,,"        MimePath path = MimePath.get(""text/x-java"");"
188449,./TargetProjects/netbeans/platform/editor.mimelookup/test/unit/src/org/netbeans/modules/editor/mimelookup/MimePathLookupTest.java,87,,"        assertEquals(""There should be no markers"", 0, markers.size());"
188450,./TargetProjects/netbeans/platform/editor.mimelookup/test/unit/src/org/netbeans/modules/editor/mimelookup/MimePathLookupTest.java,94,,"        assertEquals(""No markers found"", 1, markers.size());"
188451,./TargetProjects/netbeans/platform/favorites/test/unit/src/org/netbeans/modules/favorites/NodesTest.java,74,,"                    fail (""Node "" + arr[i] + "" does not contain action remove, but:\n"" + set);"
188452,./TargetProjects/netbeans/platform/favorites/test/unit/src/org/netbeans/modules/favorites/VisibilityQueryWorksTest.java,131,,"        err.info(""shadow created: "" + res);"
188453,./TargetProjects/netbeans/platform/favorites/test/unit/src/org/netbeans/modules/favorites/api/FavoritesTest.java,110,,"        assertTrue(""NPE has been thrown"", thrown);"
188454,./TargetProjects/netbeans/platform/javahelp/src/org/netbeans/modules/javahelp/JavaHelp.java,738,,"                        Installer.log.fine(""there is not enough place"");"
188455,./TargetProjects/netbeans/platform/javahelp/src/org/netbeans/modules/javahelp/JavaHelp.java,740,,"                            Installer.log.fine(""relocate both"");"
188456,./TargetProjects/netbeans/platform/javahelp/src/org/netbeans/modules/javahelp/JavaHelp.java,744,,"                            Installer.log.fine(""relocate both and resize help"");"
188457,./TargetProjects/netbeans/platform/javahelp/test/qa-functional/src/javahelp/gui/JavaHelpDialogTest.java,122,,"        String javaPlatformMenu = Bundle.getStringTrimmed(""org.netbeans.modules.java.platform.ui.Bundle"", ""CTL_PlatformManager""); // Java Platforms"
188458,./TargetProjects/netbeans/platform/keyring.fallback/test/unit/src/org/netbeans/modules/keyring/fallback/MasterPasswordEncryptionTest.java,46,,"        doTestEncryption(""muj heslo"", ""hezky česky"");"
188459,./TargetProjects/netbeans/platform/keyring.impl/src/org/netbeans/modules/keyring/mac/MacProvider.java,45,,"            byte[] serviceName = key.getBytes(""UTF-8"");"
188460,./TargetProjects/netbeans/platform/lib.uihandler/src/org/netbeans/lib/uihandler/MultiPartHandler.java,77,,"  private String fieldEncoding = ""ISO-8859-1"";"
188461,./TargetProjects/netbeans/platform/lib.uihandler/src/org/netbeans/lib/uihandler/MultiPartHandler.java,185,,"                String content = (String)partHeaders.get(""content-type"");"
188462,./TargetProjects/netbeans/platform/lib.uihandler/src/org/netbeans/lib/uihandler/ProjectOp.java,87,,"            String type = getStringParam(rec, 0, ""unknown""); // NOI18N"
188463,./TargetProjects/netbeans/platform/lib.uihandler/test/unit/src/org/netbeans/lib/uihandler/DecorableTest.java,106,,"        r.setResourceBundleName(""org.netbeans.lib.uihandler.TestBundle"");"
188464,./TargetProjects/netbeans/platform/lib.uihandler/test/unit/src/org/netbeans/lib/uihandler/LogFormatterTest.java,165,,"        assertEquals(""No @\n"" + s, -1, s.indexOf(""@""));"
188465,./TargetProjects/netbeans/platform/lib.uihandler/test/unit/src/org/netbeans/lib/uihandler/LogFormatterTest.java,177,,"        if (s.indexOf(""SomeName"") == -1) {"
188466,./TargetProjects/netbeans/platform/lib.uihandler/test/unit/src/org/netbeans/lib/uihandler/LogFormatterTest.java,178,,"            fail(""SomeName should be there:\n"" + s);"
188467,./TargetProjects/netbeans/platform/lib.uihandler/test/unit/src/org/netbeans/lib/uihandler/ProjectOpTest.java,59,,"        String what = ""<record>"" +"
188468,./TargetProjects/netbeans/platform/lib.uihandler/test/unit/src/org/netbeans/lib/uihandler/ProjectOpTest.java,72,,"            ""</record>"" +"
188469,./TargetProjects/netbeans/platform/lib.uihandler/test/unit/src/org/netbeans/lib/uihandlerserver/LogRecordsTest.java,138,,"        InputStream is = getClass().getResourceAsStream(""NB1216449736.xml"");"
188470,./TargetProjects/netbeans/platform/lib.uihandler/test/unit/src/org/netbeans/lib/uihandlerserver/LogRecordsTest.java,142,,"            LOG.log(Level.INFO, ""Reading {0}th record"", cnt);"
188471,./TargetProjects/netbeans/platform/lib.uihandler/test/unit/src/org/netbeans/lib/uihandlerserver/LogRecordsTest.java,147,,"            LOG.log(Level.INFO, ""Read {0}th record"", cnt);"
188472,./TargetProjects/netbeans/platform/lib.uihandler/test/unit/src/org/netbeans/lib/uihandlerserver/LogRecordsTest.java,217,,"        assertEquals(""The same amount of records"", cnt, h.cnt);"
188473,./TargetProjects/netbeans/platform/masterfs/src/org/netbeans/modules/masterfs/filebasedfs/fileobjects/BaseFileObj.java,396,,"            FSException.io(""EXC_CannotRename"", file.getName(), parentPath, newNameExt);// NOI18N"
188474,./TargetProjects/netbeans/platform/masterfs/src/org/netbeans/modules/masterfs/filebasedfs/fileobjects/FileObjectFactory.java,510,,"                        @SuppressWarnings(""unchecked"")"
188475,./TargetProjects/netbeans/platform/masterfs/src/org/netbeans/modules/masterfs/filebasedfs/fileobjects/FolderObj.java,231,,"                FSException.io(""EXC_CannotCreateFolder"", folder2Create.getName(), getPath());// NOI18N"
188476,./TargetProjects/netbeans/platform/masterfs/src/org/netbeans/modules/masterfs/filebasedfs/fileobjects/FolderObj.java,362,,"            FSException.io(""EXC_CannotCreateData"", file2Create.getName(), getPath());// NOI18N"
188477,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/ExLocalFileSystemTest.java,57,,"        data.setAttribute(""hello"", ""world"");"
188478,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/BaseFileObjectTestHid.java,97,,"                             ""testdir/mountdir4/file.ext"","
188479,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/BaseFileObjectTestHid.java,345,,"        String txt = fo.asText(""UTF-8"");"
188480,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/BaseFileObjectTestHid.java,525,,"        final File data = new File(fold,""c.data"");"
188481,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/BaseFileObjectTestHid.java,864,,"                    FileObject subpackage1 = root.createFolder(""subpackage1"");"
188482,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/FileUtilAddRecursiveListenerFilterTest.java,103,,"        LOG.log(Level.INFO, ""Thread dump"", new Exception());"
188483,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/FileUtilAddRecursiveListenerStopTest.java,101,,"        LOG.log(Level.INFO, ""Thread dump"", new Exception());"
188484,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/FileUtilAddRecursiveListenerTest.java,91,,"        File fileF = new File(dirF, ""file1"");"
188485,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/FileUtilAddRecursiveListenerTest.java,92,,"        File subdirF = new File(dirF, ""subdir"");"
188486,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/FileUtilAddRecursiveListenerTest.java,93,,"        File subfileF = new File(subdirF, ""subfile"");"
188487,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/FileUtilAddRecursiveListenerTest.java,94,,"        File subsubdirF = new File(subdirF, ""subsubdir"");"
188488,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/FileUtilAddRecursiveListenerTest.java,95,,"        File subsubfileF = new File(subsubdirF, ""subsubfile"");"
188489,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/FileUtilTest.java,105,,"        File dirF = new File(rootF, ""dir"");"
188490,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/FileUtilTest.java,106,,"        File fileF = new File(dirF, ""file"");"
188491,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/FileUtilTest.java,131,,"        assertEquals(""Event not fired when file was created."", 1, fcl.check(EventType.DATA_CREATED));"
188492,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/FileUtilTest.java,134,,"        assertEquals(""No other events should be fired."", 0, fcl.checkAll());"
188493,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/FileUtilTest.java,142,,"        assertEquals(""Event not fired when file was modified."", 2, fcl.check(EventType.CHANGED));"
188494,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/FileUtilTest.java,149,,"        assertEquals(""Event not fired when file deleted."", 1, fcl.check(EventType.DELETED));"
188495,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/FileUtilTest.java,167,,"                    rootFO.setAttribute(""fake"", ""fake"");"
188496,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/FileUtilTest.java,183,,"        dirFO.rename(lock, ""dirRenamed"", null);"
188497,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/FileUtilTest.java,236,,"        File fileF = new File(dirF, ""subdir"");"
188498,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/FileUtilTest.java,470,,"        assertEquals(""Wrong number of events when file was created."", 1, fcl.check(EventType.DATA_CREATED));"
188499,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/FileUtilTest.java,718,,"            assertFalse(""No changes expected"", disabled);"
188500,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/children/ChildrenSupportTest.java,438,,"        List removed = Arrays.asList(new String[] {""removed1"", ""removed2""});"
188501,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/fileobjects/ExternalTouchTest.java,67,,"        FileObject fileObject1 = testFolder.createData(""fileObject1"");"
188502,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/fileobjects/ExternalTouchTest.java,70,,"        assertEquals(""One child"", 1, arr.length);"
188503,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/fileobjects/ExternalTouchTest.java,71,,"        assertEquals(""Right child"", fileObject1, arr[0]);"
188504,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/fileobjects/ExternalTouchTest.java,74,,"        assertNotNull(""File found"", file);"
188505,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/fileobjects/ExternalTouchTest.java,228,,"                sb.append(""FolderCreated"");"
188506,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/fileobjects/ExternalTouchTest.java,233,,"                sb.append(""DataCreated"");"
188507,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/fileobjects/ExternalTouchTest.java,278,,"        flat.assertMessages(""No messages in flat mode"", """");"
188508,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/fileobjects/FileObjSymlinkTest.java,53,,"        Path data = p.resolve(""data.dat"");"
188509,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/fileobjects/FileObjSymlinkTest.java,136,,"        File link = new File(dir, ""link.lnk"");"
188510,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/fileobjects/FileObjectFactoryTest.java,62,,"            File external = new File(workDir, ""externalFile"");        "
188511,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/fileobjects/FileObjectFactoryTest.java,87,,"            external = new File(workDir, ""externalFolder"");        "
188512,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/fileobjects/FolderObjTest.java,108,,"        folder.setAttribute(""name"", ""jmeno"");"
188513,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/fileobjects/FolderObjTest.java,108,,"        folder.setAttribute(""name"", ""jmeno"");"
188514,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/fileobjects/FolderObjTest.java,147,,"        assertTrue(""Is folder"", folder.isFolder());"
188515,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/fileobjects/FolderObjTest.java,151,,"        assertTrue(""Is data"", data.isData());"
188516,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/fileobjects/FolderObjTest.java,344,,"        Logger.getLogger(""org.netbeans.modules.masterfs.filebasedfs.fileobjects.FolderObj"").addHandler(handler);"
188517,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/fileobjects/FolderObjTest.java,546,,"                    FileObject subpackage1 = root.createFolder(""subpackage1"");"
188518,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/fileobjects/FolderObjTest.java,1067,,"        File f = new File(testFile, ""testDelete2/testForExternalRefresh3/"");"
188519,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/fileobjects/FolderObjTest.java,1071,,"        f = new File(f, ""f.txt"");"
188520,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/fileobjects/StatFilesTest.java,77,,"        assertGC(""NamingFactory not cleared."", new WeakReference<FileNaming>(NamingFactory.fromFile(workDir)));"
188521,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/fileobjects/StatFilesTest.java,114,,"        parent = parent.createFolder(""parent"");"
188522,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/fileobjects/StatFilesTest.java,264,,"        FileObject child = parent.createData(""child"");"
188523,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/filebasedfs/utils/FileInfoTest.java,46,,"            {""D:\\a\\b\\c\\a.txt"", ""D:\\""},"
188524,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/providers/ProvidedExtensionsTest.java,506,,"                    assertEquals(""ext"",toRename.getExt());"
188525,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/watcher/CyclicSymlinkTest.java,65,,"        File one = new File(getWorkDir(), ""one"");"
188526,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/watcher/CyclicSymlinkTest.java,66,,"        File two = new File(one, ""two"");"
188527,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/watcher/CyclicSymlinkTest.java,67,,"        File three = new File(two, ""three"");"
188528,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/watcher/CyclicSymlinkTest.java,71,,"        File l = new File(new File(getWorkDir(), ""lnk""), ""three"");"
188529,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/watcher/CyclicSymlinkTest.java,125,,"        throw new UnsupportedOperationException(""Not supported yet."");"
188530,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/watcher/MoveUnlocksWatcherTest.java,47,,"        assertFalse(""Not locked anymore: "" + fo, Watcher.isLocked(fo));"
188531,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/watcher/WatcherTest.java,67,,"        FileObject folder = root.createFolder(""dir"");"
188532,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/watcher/WatcherTest.java,69,,"        notify.assertRegistered(""No registered paths yet"");"
188533,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/watcher/WatcherTest.java,73,,"        notify.assertRegistered(""One path is being listened to"", root.getPath());"
188534,./TargetProjects/netbeans/platform/masterfs/test/unit/src/org/netbeans/modules/masterfs/watcher/WatcherTest.java,77,,"        notify.assertRegistered(""Path has been cleared"", (String)null);"
188535,./TargetProjects/netbeans/platform/netbinox/src/org/netbeans/modules/netbinox/NetigsoBaseLoader.java,160,,"        throw new UnsupportedOperationException(""Not supported yet."");"
188536,./TargetProjects/netbeans/platform/netbinox/src/org/netbeans/modules/netbinox/NetigsoBundleFile.java,68,,"                    throw new UnsupportedOperationException(""Not supported yet."");"
188537,./TargetProjects/netbeans/platform/netbinox/test/unit/src/org/netbeans/SetupHid.java,177,,"        File libraryUndecl = createTestJAR(""library-undecl"", ""library-src"");"
188538,./TargetProjects/netbeans/platform/netbinox/test/unit/src/org/netbeans/SetupHid.java,181,,"        createTestJAR(""depends-on-lib-undecl"", ""depends-on-library-src"", libraryUndecl);"
188539,./TargetProjects/netbeans/platform/netbinox/test/unit/src/org/netbeans/SetupHid.java,213,,"        createTestJAR(""api-mod-export-all"", ""exposes-api"");"
188540,./TargetProjects/netbeans/platform/netbinox/test/unit/src/org/netbeans/SetupHid.java,217,,"        createTestJAR(""uses-api-simple-dep"", ""uses-api"", exposesAPI);"
188541,./TargetProjects/netbeans/platform/netbinox/test/unit/src/org/netbeans/SetupHid.java,223,,"        createTestJAR(""uses-api-transitively"", null, exposesAPI, usesAPI);"
188542,./TargetProjects/netbeans/platform/netbinox/test/unit/src/org/netbeans/modules/netbinox/BundleURLConnectionTest.java,99,,"        assertEquals(""Ahoj"", text);"
188543,./TargetProjects/netbeans/platform/netbinox/test/unit/src/org/netbeans/modules/netbinox/CachingAndExternalPathsTest.java,150,,"        System.getProperties().remove(""activated.ok"");"
188544,./TargetProjects/netbeans/platform/netbinox/test/unit/src/org/netbeans/modules/netbinox/CountingSecurityManager.java,488,,"            file.equals(System.getProperty(""netbeans.home"")) ||"
188545,./TargetProjects/netbeans/platform/netbinox/test/unit/src/org/netbeans/modules/netbinox/CountingSecurityManager.java,547,,"        if (file.startsWith(System.getProperty(""netbeans.home"") + File.separator + ""lib"")) {"
188546,./TargetProjects/netbeans/platform/netbinox/test/unit/src/org/netbeans/modules/netbinox/ExternalDirectoryTest.java,62,,"        os.write(""Ahoj"".getBytes());"
188547,./TargetProjects/netbeans/platform/netbinox/test/unit/src/org/netbeans/modules/netbinox/NetigsoOSGiActivationVisibleTest.java,103,,"        Class<?> directBundle = toEnable.loadClass(""org.foo.Something"");"
188548,./TargetProjects/netbeans/platform/netbinox/test/unit/src/org/netbeans/modules/netbinox/NetigsoTest.java,68,,"                ""some"";"
188549,./TargetProjects/netbeans/platform/netbinox/test/unit/src/org/netbeans/modules/netbinox/NetigsoTest.java,71,,"            File j2 = changeManifest(new File(jars, ""depends-on-simple-module.jar""), mfBar);"
188550,./TargetProjects/netbeans/platform/o.n.bootstrap/src/org/netbeans/MainImpl.java,175,,"                    ResourceBundle.getBundle(""org/netbeans/Bundle"").getString(""MSG_AlreadyRunning""),"
188551,./TargetProjects/netbeans/platform/o.n.bootstrap/src/org/netbeans/ModuleData.java,132,,"                                throw new IllegalArgumentException(""Illegal OpenIDE-Module-Public-Packages: "" + exportsS); // NOI18N"
188552,./TargetProjects/netbeans/platform/o.n.bootstrap/src/org/netbeans/NetigsoModule.java,219,,"                LOG.log(Level.SEVERE, ""Can't load "" + name, ex);"
188553,./TargetProjects/netbeans/platform/o.n.bootstrap/src/org/netbeans/StandardModule.java,636,,"            lib = ifl.locate(""modules/lib/"" + mapped, getCodeNameBase(), false); // NOI18N"
188554,./TargetProjects/netbeans/platform/o.n.bootstrap/src/org/netbeans/StandardModule.java,638,,"                CL_LOG.log(Level.FINE, ""found {0}"", lib);"
188555,./TargetProjects/netbeans/platform/o.n.bootstrap/src/org/netbeans/Util.java,421,,"                throw new IllegalArgumentException(""Bad class file name: "" + name); // NOI18N"
188556,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/CLIHandlerReadingOfInputTest.java,116,,"            assertNotNull(""Attempt "" + i + "": "" + ""Can be read"", h1.arr);"
188557,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/CLIHandlerServerWaitsTest.java,178,,"            assertNotNull(""Attempt "" + i + "": "" + ""Can be read"", h1.arr);"
188558,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/CLIHandlerTest.java,64,,"        System.getProperties().put(""netbeans.user"", tmp.getPath());"
188559,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/CLIHandlerTest.java,112,,"        assertNotNull(""File created"", runner.resultFile());"
188560,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/CLIHandlerTest.java,113,,"        assertTrue(""Port allocated"", runner.resultPort() != 0);"
188561,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/CLIHandlerTest.java,191,,"                    if (""--help"".equals(a)) {"
188562,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/CLIHandlerTest.java,384,,"        assertEquals(""CLI evaluation failed with return code of h1"", 1, res.getExitCode());"
188563,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/CLIHandlerTest.java,396,,"            CLIHandler.Args args = new CLIHandler.Args(new String[0], nullInput, nullOutput, nullOutput, System.getProperty(""user.dir""));"
188564,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/JarClassLoaderTest.java,70,,"        TestFileUtils.writeZipFile(jar, ""resource.txt:content"", ""package/resource.txt:content"");"
188565,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/JarClassLoaderTest.java,73,,"        assertStreamContent(jcl.getResourceAsStream(""package/resource.txt""), ""content"");"
188566,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/JarClassLoaderTest.java,73,,"        assertStreamContent(jcl.getResourceAsStream(""package/resource.txt""), ""content"");"
188567,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/JarClassLoaderTest.java,74,,"        assertStreamContent(jcl.getResourceAsStream(""/package/resource.txt""), ""content"");"
188568,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/JarClassLoaderTest.java,75,,"        assertStreamContent(jcl.getResourceAsStream(""resource.txt""), ""content"");"
188569,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/JarClassLoaderTest.java,76,,"        assertStreamContent(jcl.getResourceAsStream(""/resource.txt""), ""content"");"
188570,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/JarClassLoaderTest.java,215,,"        URL url = jcl.getResource(""package/re source++.txt"");"
188571,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,129,,"            Module m2 = mgr.create(new File(jars, ""depends-on-simple-module.jar""), null, false, false, false);"
188572,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,130,,"            Module m1 = mgr.create(new File(jars, ""simple-module.jar""), null, false, false, false);"
188573,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,157,,"            assertEquals(""correct result of simulateEnable"", Arrays.asList(m1, m2), toEnable);"
188574,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,160,,"                ""prepare"","
188575,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,162,,"                ""load"""
188576,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,171,,"            assertEquals(""hello"", somemethod.invoke(somethingelse.newInstance()));"
188577,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,174,,"            assertEquals(""correct result of simulateDisable"", Arrays.asList(m2, m1), toDisable);"
188578,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,176,,"            assertEquals(""correct result of simulateDisable #2"", Arrays.asList(m2, m1), toDisable);"
188579,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,183,,"                ""unload"","
188580,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,184,,"                ""dispose"","
188581,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,334,,"            Module m3 = mgr.create(new File(jars, ""dep-on-dep-on-simple.jar""), null, false, false, true);"
188582,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,731,,"            File locmanijar = new File(jars, ""localized-manifest.jar"");"
188583,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,736,,"            assertEquals(""en_US bundle main attr"", ""value #1"", m.getLocalizedAttribute(""some-other-key""));"
188584,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,737,,"            assertEquals(""en_US bundle sub attr"", ""value #2"", m.getLocalizedAttribute(""locmani/something.txt/other-key""));"
188585,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,738,,"            assertEquals(""en_US bundle main attr untrans"", ""value #7"", m.getLocalizedAttribute(""other-untrans""));"
188586,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,738,,"            assertEquals(""en_US bundle main attr untrans"", ""value #7"", m.getLocalizedAttribute(""other-untrans""));"
188587,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,739,,"            assertEquals(""en_US bundle sub attr untrans"", ""value #8"", m.getLocalizedAttribute(""locmani/something.txt/other-untrans""));"
188588,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,739,,"            assertEquals(""en_US bundle sub attr untrans"", ""value #8"", m.getLocalizedAttribute(""locmani/something.txt/other-untrans""));"
188589,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,741,,"            assertEquals(""en_US manifest main attr"", ""value #3"", m.getLocalizedAttribute(""some-key""));"
188590,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,742,,"            assertEquals(""en_US manifest sub attr"", ""value #4"", m.getLocalizedAttribute(""locmani/something.txt/key""));"
188591,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,743,,"            assertEquals(""en_US manifest main attr untrans"", ""value #5"", m.getLocalizedAttribute(""untrans""));"
188592,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,743,,"            assertEquals(""en_US manifest main attr untrans"", ""value #5"", m.getLocalizedAttribute(""untrans""));"
188593,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,744,,"            assertEquals(""en_US manifest sub attr untrans"", ""value #6"", m.getLocalizedAttribute(""locmani/something.txt/untrans""));"
188594,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,744,,"            assertEquals(""en_US manifest sub attr untrans"", ""value #6"", m.getLocalizedAttribute(""locmani/something.txt/untrans""));"
188595,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,908,,"            Module m1 = mgr.create(new File(jars, ""prov-foo.jar""), null, false, false, false);"
188596,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,909,,"            Module m2 = mgr.create(new File(jars, ""req-foo.jar""), null, false, false, false);"
188597,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,910,,"            assertEquals(Collections.singletonList(""foo""), assertCnb(m1));"
188598,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,944,,"            Class<?> testclazz = Class.forName(""org.prov_foo.Clazz"", true, m1.getClassLoader());"
188599,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,981,,"            Module m2 = mgr.create(new File(jars, ""recommends-foo.jar""), null, false, false, false);"
188600,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,1011,,"            Module m2 = mgr.create(new File(jars, ""prov-bar-req-foo.jar""), null, false, false, false);"
188601,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,1056,,"            Module m2 = mgr.create(new File(jars, ""prov-foo-bar.jar""), null, false, false, false);"
188602,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,1317,,"                String manifest = ""Manifest-Version: 1.0\n"" +"
188603,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,1541,,"            Module m2 = mgr.create(new File(jars, ""prov-baz.jar""), null, false, false, false);"
188604,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,1542,,"            Module m3 = mgr.create(new File(jars, ""req-foo-baz.jar""), null, false, false, false);"
188605,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,2069,,"            m2.getClassLoader().loadClass(""usesapi.UsesPublicClass"").newInstance();"
188606,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,2070,,"            m2.getClassLoader().loadClass(""usesapi.UsesImplClass"").newInstance();"
188607,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,2120,,"            m1 = mgr.create(new File(jars, ""api-mod-export-api.jar""), null, false, false, false);"
188608,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,2544,,"        File m1j = new File(getWorkDir(), ""m1.jar"");"
188609,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,2545,,"        createJar(m1j, Collections.<String,String>emptyMap(), Collections.singletonMap(""OpenIDE-Module"", ""m1""));"
188610,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,2546,,"        File m2j = new File(getWorkDir(), ""m2.jar"");"
188611,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,2549,,"        mani.put(""OpenIDE-Module-Module-Dependencies"", ""m1"");"
188612,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,2616,,"        assertNotNull(""found "" + rsrc, cpResource);"
188613,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,2798,,"        Module host = mgr.create(new File(jars, ""host-module.jar""), null, false, false, false);"
188614,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,2799,,"        Module fragment = mgr.create(new File(jars, ""fragment-module.jar""), null, false, false, true);"
188615,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,2816,,"        createTestJAR(data, jars, ""fragment-module-missing-token"", null);"
188616,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,2819,,"        Module fragment = mgr.create(new File(jars, ""fragment-module-missing-token.jar""), null, false, false, true);"
188617,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ModuleManagerTest.java,2889,,"        createTestJAR(data, jars, ""client-module"", null);"
188618,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ProxyClassLoaderTest.java,146,,"        ProxyClassLoader cl1 = new CL(new ClassLoader[0], new URL(b, ""1a/""), new URL(b, ""1b/""), ""p/1"");"
188619,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ProxyClassLoaderTest.java,147,,"        ProxyClassLoader cl2 = new CL(new ClassLoader[] {cl1}, new URL(b, ""2a/""), new URL(b, ""2b/""), ""p/2"");"
188620,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ProxyClassLoaderTest.java,150,,"        assertEquals(new URL(b, ""1a/p/1""), cl1.getResource(""p/1""));"
188621,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ProxyClassLoaderTest.java,155,,"        assertEquals(new URL(b, ""2a/p/2""), cl2.getResource(""p/2""));"
188622,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/ProxyClassLoaderTest.java,160,,"        assertEquals(new URL(b, ""3a/p/1""), cl3.findResource(""p/1""));"
188623,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/SetupHid.java,176,,"        File libraryUndecl = createTestJAR(""library-undecl"", ""library-src"");"
188624,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/SetupHid.java,180,,"        createTestJAR(""depends-on-lib-undecl"", ""depends-on-library-src"", libraryUndecl);"
188625,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/SetupHid.java,214,,"        createTestJAR(""api-mod-export-all"", ""exposes-api"");"
188626,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/SetupHid.java,218,,"        createTestJAR(""uses-api-simple-dep"", ""uses-api"", exposesAPI);"
188627,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/SetupHid.java,224,,"        createTestJAR(""uses-api-transitively"", null, exposesAPI, usesAPI);"
188628,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/StampsClusterMovedTest.java,49,,"        new File(platform, "".lastModified"").createNewFile();"
188629,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/StampsClusterMovedTest.java,60,,"        System.setProperty(""netbeans.dirs"", ide.getPath() + File.pathSeparator + mainCluster.getPath());"
188630,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/StampsClusterMovedTest.java,69,,"        Stamps.main(""init"");"
188631,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/StampsClusterMovedTest.java,71,,"        Stamps.getModulesJARs().scheduleSave(this, ""test-cache"", false);"
188632,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/StampsTest.java,75,,"        System.setProperty(""netbeans.user"", userdir.getPath());"
188633,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/StampsTest.java,118,,"        assertNull(s.asByteBuffer(""mycache.dat""));"
188634,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/StampsTest.java,130,,"                assertNotNull(""stream can be obtained"", s.asStream(""mycache.dat""));"
188635,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/StampsTest.java,148,,"        assertEquals(""10 bytes"", 10, bb.remaining());"
188636,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/StampsTest.java,149,,"        assertEquals(""10 bytes stream"", 10, is.available());"
188637,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/StampsTest.java,185,,"        CountingSecurityManager.initialize(new File(userdir, ""var"").getPath());"
188638,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/StampsTest.java,428,,"        assertNull(s.asByteBuffer(""mydir/mycache.dat""));"
188639,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/StampsTest.java,450,,"        File my = new File(new File(new File(new File(userDir, ""var""), ""cache""), ""mydir""), ""mycache.dat"");"
188640,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/StampsTest.java,613,,"        ByteBuffer first = s.asByteBuffer(""branding.cache"");"
188641,./TargetProjects/netbeans/platform/o.n.bootstrap/test/unit/src/org/netbeans/StampsTest.java,636,,"        ByteBuffer first = s.asByteBuffer(""locale.cache"");"
188642,./TargetProjects/netbeans/platform/o.n.core/src/org/netbeans/beaninfo/editors/ColorEditor.java,257,,"            return ""null""; // NOI18N"
188643,./TargetProjects/netbeans/platform/o.n.core/src/org/netbeans/core/NbLoaderPool.java,440,,"                        err.fine(""Module "" + name +"
188644,./TargetProjects/netbeans/platform/o.n.core/src/org/netbeans/core/ui/ProductInformationPanel.java,282,,"            System.getProperty(""os.name"", ""unknown""),"
188645,./TargetProjects/netbeans/platform/o.n.core/test/perf/src/org/netbeans/core/modules/ModuleInitTest.java,268,,"            String name = ""com.testdomain."" + nameBase;"
188646,./TargetProjects/netbeans/platform/o.n.core/test/perf/src/org/netbeans/core/modules/ModuleInitTest.java,390,,"                            if (kid.getAttribute(""name"").equals(piece)) {"
188647,./TargetProjects/netbeans/platform/o.n.core/test/perf/src/org/netbeans/core/projects/XMLSettingsTest.java,117,,"                ffs.add(""folder"" + i + ""/unmodified"" + j + "".settings"", inst);"
188648,./TargetProjects/netbeans/platform/o.n.core/test/perf/src/org/netbeans/core/projects/XMLSettingsTest.java,117,,"                ffs.add(""folder"" + i + ""/unmodified"" + j + "".settings"", inst);"
188649,./TargetProjects/netbeans/platform/o.n.core/test/qa-functional/src/gui/propertyeditors/PropertyEditorsTest.java,83,,"            err.println(CAPTION + "" Trying to set value by customizer-ok {name=""+propertyName+"" / value=""+propertyValue+""} ."");"
188650,./TargetProjects/netbeans/platform/o.n.core/test/qa-functional/src/gui/propertyeditors/PropertyEditorsTest.java,83,,"            err.println(CAPTION + "" Trying to set value by customizer-ok {name=""+propertyName+"" / value=""+propertyValue+""} ."");"
188651,./TargetProjects/netbeans/platform/o.n.core/test/qa-functional/src/gui/propertyeditors/PropertyEditorsTest.java,96,,"            failTest(exc, ""EXCEPTION: setByCustomizer(""+propertyName+"", ""+expectance+"") failed and cause exception:""+exc.getMessage());"
188652,./TargetProjects/netbeans/platform/o.n.core/test/qa-functional/src/gui/propertyeditors/PropertyEditorsTest.java,135,,"            err.println(CAPTION + "" Trying to set value by in-place {name=""+propertyName+"" / value=""+propertyValue+""}  - finished."");"
188653,./TargetProjects/netbeans/platform/o.n.core/test/qa-functional/src/gui/propertyeditors/PropertyEditorsTest.java,150,,"            err.println(CAPTION + "" Trying to set value by combo box {name=""+propertyName+"" / value=""+propertyValue+""} ."");"
188654,./TargetProjects/netbeans/platform/o.n.core/test/qa-functional/src/gui/propertyeditors/PropertyType_NbClassPath.java,95,,"        propertyValueExpectation_L =  ""one.jar""+delim+""two.zip"" + delim + directoryPath;"
188655,./TargetProjects/netbeans/platform/o.n.core/test/qa-functional/src/gui/propertyeditors/PropertyType_NbClassPath.java,95,,"        propertyValueExpectation_L =  ""one.jar""+delim+""two.zip"" + delim + directoryPath;"
188656,./TargetProjects/netbeans/platform/o.n.core/test/qa-functional/src/org/netbeans/core/validation/ResourcesTest.java,75,,"            if (!f.getName().endsWith("".jar""))"
188657,./TargetProjects/netbeans/platform/o.n.core/test/qa-functional/src/org/netbeans/core/validation/ResourcesTest.java,141,,"            msg.append(""Some JARs in IDE contains sparsely populated packages (""+violations.size()+""):\n"");"
188658,./TargetProjects/netbeans/platform/o.n.core/test/qa-functional/src/org/netbeans/core/validation/ValidateLayerConsistencyTest.java,283,,"                        errors.add(""File "" + fo + "" has no original."");"
188659,./TargetProjects/netbeans/platform/o.n.core/test/qa-functional/src/org/netbeans/core/validation/ValidateLayerConsistencyTest.java,286,,"                else if (""shadow"".equals(fo.getExt())) {"
188660,./TargetProjects/netbeans/platform/o.n.core/test/qa-functional/src/org/netbeans/core/validation/ValidateModulesTest.java,59,,"        System.setProperty(""java.awt.headless"", ""true"");"
188661,./TargetProjects/netbeans/platform/o.n.core/test/unit/src/org/netbeans/beaninfo/editors/ColorEditorTest.java,47,,"        System.out.println(""original ""+sc);"
188662,./TargetProjects/netbeans/platform/o.n.core/test/unit/src/org/netbeans/beaninfo/editors/ColorEditorTest.java,60,,"        System.out.println(""restoredColor ""+restoredColor);"
188663,./TargetProjects/netbeans/platform/o.n.core/test/unit/src/org/netbeans/beaninfo/editors/ColorEditorTest.java,61,,"        assertEquals(""Restored value has to be the same"", sc, restoredColor);"
188664,./TargetProjects/netbeans/platform/o.n.core/test/unit/src/org/netbeans/beaninfo/editors/ColorEditorTest.java,62,,"        assertTrue(""It is SuperColor"", restoredColor instanceof ColorEditor.SuperColor);"
188665,./TargetProjects/netbeans/platform/o.n.core/test/unit/src/org/netbeans/beaninfo/editors/FileArrayEditorTest.java,75,,"        chooser.setSelectedFile( new File(""file""));"
188666,./TargetProjects/netbeans/platform/o.n.core/test/unit/src/org/netbeans/beaninfo/editors/FileArrayEditorTest.java,76,,"        chooser.setSelectedFiles( new File[]{ new File(""other"") , "
188667,./TargetProjects/netbeans/platform/o.n.core/test/unit/src/org/netbeans/beaninfo/editors/FileArrayEditorTest.java,77,,"                new File(""other1"")});"
188668,./TargetProjects/netbeans/platform/o.n.core/test/unit/src/org/netbeans/beaninfo/editors/FileArrayEditorTest.java,78,,"        assert myListener.size() == 2 : ""FileArrayEditor should fire"" +"
188669,./TargetProjects/netbeans/platform/o.n.core/test/unit/src/org/netbeans/beaninfo/editors/FileArrayEditorTest.java,79,,"            "" exactly two property change events, but fired ""+"
188670,./TargetProjects/netbeans/platform/o.n.core/test/unit/src/org/netbeans/beaninfo/editors/FileArrayEditorTest.java,80,,"            myListener.size()+ "" event(s)"";"
188671,./TargetProjects/netbeans/platform/o.n.core/test/unit/src/org/netbeans/beaninfo/editors/FileArrayEditorTest.java,122,,"            "" exactly one property change event, but fired ""+"
188672,./TargetProjects/netbeans/platform/o.n.core/test/unit/src/org/netbeans/core/NbAuthenticatorTest.java,41,,"        PasswordAuthentication auth = Authenticator.requestPasswordAuthentication(""wher.ev.er"", Inet4Address.getByName(""1.2.3.4""), 1234, ""http"", null, ""http"","
188673,./TargetProjects/netbeans/platform/o.n.core/test/unit/src/org/netbeans/core/NbErrorManagerTest.java,91,,"        NullPointerException npe = new NullPointerException(""unloc msg"");"
188674,./TargetProjects/netbeans/platform/o.n.core/test/unit/src/org/netbeans/core/NbErrorManagerTest.java,132,,"        npe = new NullPointerException(""msg1"");"
188675,./TargetProjects/netbeans/platform/o.n.core/test/unit/src/org/netbeans/core/NbErrorManagerTest.java,133,,"        IOException ioe = new IOException(""msg2"");"
188676,./TargetProjects/netbeans/platform/o.n.core/test/unit/src/org/netbeans/core/NbErrorManagerTest.java,135,,"        InvocationTargetException ite = new InvocationTargetException(ioe, ""msg3"");"
188677,./TargetProjects/netbeans/platform/o.n.core/test/unit/src/org/netbeans/core/NbErrorManagerTest.java,230,,"        err.annotate(ioe, ""loc msg"");"
188678,./TargetProjects/netbeans/platform/o.n.core/test/unit/src/org/netbeans/core/NbErrorManagerTest.java,346,,"        assertNotNull(""Mock descriptor called"", MockDD.lastDescriptor);"
188679,./TargetProjects/netbeans/platform/o.n.core/test/unit/src/org/netbeans/core/NbErrorManagerTest.java,394,,"            assertTrue(""added [catch] marker in simple cases: "" + s, s.indexOf(""[catch] at "" + NbErrorManagerTest.class.getName() + "".testCatchMarker"") != -1);"
188680,./TargetProjects/netbeans/platform/o.n.core/test/unit/src/org/netbeans/core/NbErrorManagerTest.java,394,,"            assertTrue(""added [catch] marker in simple cases: "" + s, s.indexOf(""[catch] at "" + NbErrorManagerTest.class.getName() + "".testCatchMarker"") != -1);"
188681,./TargetProjects/netbeans/platform/o.n.core/test/unit/src/org/netbeans/core/NbErrorManagerUserQuestionTest.java,76,,"                return ""Reboot?"";"
188682,./TargetProjects/netbeans/platform/o.n.core/test/unit/src/org/netbeans/core/NbKeymapTest.java,100,,"        def1.setAttribute(""instanceCreate"", new DummyAction(""one""));"
188683,./TargetProjects/netbeans/platform/o.n.core/test/unit/src/org/netbeans/core/NbKeymapTest.java,100,,"        def1.setAttribute(""instanceCreate"", new DummyAction(""one""));"
188684,./TargetProjects/netbeans/platform/o.n.core/test/unit/src/org/netbeans/core/NbKeymapTest.java,102,,"        def2.setAttribute(""instanceCreate"", new DummyAction(""two""));"
188685,./TargetProjects/netbeans/platform/o.n.core/test/unit/src/org/netbeans/core/NbKeymapTest.java,106,,"        DataFolder shortcuts = DataFolder.findFolder(makeFolder(""Shortcuts""));"
188686,./TargetProjects/netbeans/platform/o.n.core/test/unit/src/org/netbeans/core/NbKeymapTest.java,186,,"        make(""Shortcuts/C-A.instance"").setAttribute(""instanceCreate"", new DummyAction(""one""));"
188687,./TargetProjects/netbeans/platform/o.n.core/test/unit/src/org/netbeans/core/NbKeymapTest.java,188,,"        make(""Keymaps/Eclipse/C-A.instance"").setAttribute(""instanceCreate"", new DummyAction(""three""));"
188688,./TargetProjects/netbeans/platform/o.n.core/test/unit/src/org/netbeans/core/NbKeymapTest.java,192,,"        FileUtil.getConfigFile(""Keymaps"").setAttribute(""currentKeymap"", ""Eclipse"");"
188689,./TargetProjects/netbeans/platform/o.n.core/test/unit/src/org/netbeans/core/NbKeymapTest.java,192,,"        FileUtil.getConfigFile(""Keymaps"").setAttribute(""currentKeymap"", ""Eclipse"");"
188690,./TargetProjects/netbeans/platform/o.n.core/test/unit/src/org/netbeans/core/NbKeymapTest.java,225,,"        make(""Shortcuts/C-C S-C.instance"").setAttribute(""instanceCreate"", new DummyAction(""four""));"
188691,./TargetProjects/netbeans/platform/o.n.core/test/unit/src/org/netbeans/core/NotifyExceptionTest.java,92,,"        Logger.global.log(Level.WARNING, ""Something is wrong"", new NullPointerException(""npe""));"
188692,./TargetProjects/netbeans/platform/o.n.swing.outline/src/org/netbeans/swing/etable/ETableColumnModel.java,176,,"    @SuppressWarnings(""deprecation"")"
188693,./TargetProjects/netbeans/platform/o.n.swing.outline/test/unit/src/org/netbeans/swing/etable/ETableColumnModelTest.java,149,,"        checkColumnOrder(etcm, ""abcde"");"
188694,./TargetProjects/netbeans/platform/o.n.swing.outline/test/unit/src/org/netbeans/swing/etable/ETableTest.java,68,,"        assertEquals(""Filter should hide rows"", 3, t.convertRowIndexToModel(1));"
188695,./TargetProjects/netbeans/platform/o.n.swing.outline/test/unit/src/org/netbeans/swing/etable/ETableTest.java,75,,"        assertEquals(""Sort reorder (3) not ok"", 3, t.convertRowIndexToModel(0));"
188696,./TargetProjects/netbeans/platform/o.n.swing.outline/test/unit/src/org/netbeans/swing/etable/ETableTest.java,76,,"        assertEquals(""Sort reorder (4) not ok"", 4, t.convertRowIndexToModel(5));"
188697,./TargetProjects/netbeans/platform/o.n.swing.outline/test/unit/src/org/netbeans/swing/etable/ETableTest.java,346,,"        t.writeSettings(p, ""table"");"
188698,./TargetProjects/netbeans/platform/o.n.swing.outline/test/unit/src/org/netbeans/swing/outline/OutlineTest.java,109,,"                return ""root"";"
188699,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/Startup.java,116,,"                        System.err.println(""Custom UI class "" + lfon.lfClassName + "" not found.""); // NOI18N"
188700,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/Startup.java,180,,"            uiClassName = ""javax.swing.plaf.metal.MetalLookAndFeel""; //NOI18N"
188701,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/Startup.java,551,,"        String osName = System.getProperty (""os.name"");"
188702,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/Startup.java,558,,"            || (osName.equals( ""Windows NT (unknown)"" ) && ""6.0"".equals( System.getProperty(""os.version"") ));"
188703,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/Startup.java,558,,"            || (osName.equals( ""Windows NT (unknown)"" ) && ""6.0"".equals( System.getProperty(""os.version"") ));"
188704,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/aqua/AquaLFCustoms.java,60,,"                ""PopupMenuSeparatorUI"", ""org.netbeans.swing.plaf.aqua.AquaSeparatorUI"","
188705,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,198,,"                           ""ctrl C"", ""copy"","
188706,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,199,,"                           ""ctrl V"", ""paste"","
188707,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,200,,"                           ""ctrl X"", ""cut"","
188708,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,204,,"		               ""UP"", ""selectPreviousRow"","
188709,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,205,,"		            ""KP_UP"", ""selectPreviousRow"","
188710,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,206,,"		         ""shift UP"", ""selectPreviousRowExtendSelection"","
188711,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,210,,"                          ""ctrl UP"", ""selectPreviousRowChangeLead"","
188712,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,212,,"		             ""DOWN"", ""selectNextRow"","
188713,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,212,,"		             ""DOWN"", ""selectNextRow"","
188714,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,213,,"		          ""KP_DOWN"", ""selectNextRow"","
188715,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,214,,"		       ""shift DOWN"", ""selectNextRowExtendSelection"","
188716,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,218,,"                        ""ctrl DOWN"", ""selectNextRowChangeLead"","
188717,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,220,,"		             ""LEFT"", ""selectPreviousColumn"","
188718,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,220,,"		             ""LEFT"", ""selectPreviousColumn"","
188719,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,221,,"		          ""KP_LEFT"", ""selectPreviousColumn"","
188720,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,222,,"		       ""shift LEFT"", ""selectPreviousColumnExtendSelection"","
188721,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,226,,"                        ""ctrl LEFT"", ""selectPreviousColumnChangeLead"","
188722,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,226,,"                        ""ctrl LEFT"", ""selectPreviousColumnChangeLead"","
188723,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,227,,"                     ""ctrl KP_LEFT"", ""selectPreviousColumnChangeLead"","
188724,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,228,,"		            ""RIGHT"", ""selectNextColumn"","
188725,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,228,,"		            ""RIGHT"", ""selectNextColumn"","
188726,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,229,,"		         ""KP_RIGHT"", ""selectNextColumn"","
188727,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,230,,"		      ""shift RIGHT"", ""selectNextColumnExtendSelection"","
188728,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,230,,"		      ""shift RIGHT"", ""selectNextColumnExtendSelection"","
188729,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,231,,"		   ""shift KP_RIGHT"", ""selectNextColumnExtendSelection"","
188730,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,234,,"                       ""ctrl RIGHT"", ""selectNextColumnChangeLead"","
188731,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,239,,"                        ""ctrl HOME"", ""selectFirstRowChangeLead"","
188732,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,243,,"                         ""ctrl END"", ""selectLastRowChangeLead"","
188733,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,244,,"		          ""PAGE_UP"", ""scrollUp"","
188734,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,245,,"		    ""shift PAGE_UP"", ""scrollUpExtendSelection"","
188735,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,246,,"               ""ctrl shift PAGE_UP"", ""scrollUpExtendSelection"","
188736,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,248,,"		        ""PAGE_DOWN"", ""scrollDown"","
188737,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,249,,"		  ""shift PAGE_DOWN"", ""scrollDownExtendSelection"","
188738,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,250,,"             ""ctrl shift PAGE_DOWN"", ""scrollDownExtendSelection"","
188739,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,252,,"		           ""ctrl A"", ""selectAll"","
188740,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,385,,"		               ""shift UP"", ""selectPreviousExtendSelection"","
188741,./TargetProjects/netbeans/platform/o.n.swing.plaf/src/org/netbeans/swing/plaf/util/UIUtils.java,393,,"		             ""shift DOWN"", ""selectNextExtendSelection"","
188742,./TargetProjects/netbeans/platform/o.n.swing.tabcontrol/demosrc/org/netbeans/swing/tabcontrol/demo/TestFrame.java,197,,"                    new TabData(new JButton(""inserted 1""), myIcon, ""I-1"", ""tip""),"
188743,./TargetProjects/netbeans/platform/o.n.swing.tabcontrol/src/org/netbeans/swing/tabcontrol/plaf/AbstractTabCellRenderer.java,525,,"                s = getText() + ""...""; //NOI18N"
188744,./TargetProjects/netbeans/platform/o.n.swing.tabcontrol/src/org/netbeans/swing/tabcontrol/plaf/AquaEditorTabCellRenderer.java,133,,"                                         UIManager.getColor(""NbTabControl.selectedTabDarkerBackground"") );"
188745,./TargetProjects/netbeans/platform/o.n.swing.tabcontrol/src/org/netbeans/swing/tabcontrol/plaf/MetalEditorTabCellRenderer.java,108,,"            g.setColor(UIManager.getColor(""controlDkShadow"")); //NOI18N"
188746,./TargetProjects/netbeans/platform/o.n.swing.tabcontrol/src/org/netbeans/swing/tabcontrol/plaf/TabControlButtonFactory.java,118,,"        button.setToolTipText( java.util.ResourceBundle.getBundle(""org/netbeans/swing/tabcontrol/plaf/Bundle"").getString(""Tip_Scroll_Documents_Left"") );"
188747,./TargetProjects/netbeans/platform/o.n.swing.tabcontrol/src/org/netbeans/swing/tabcontrol/plaf/WinClassicEditorTabCellRenderer.java,156,,"                               UIManager.getColor(""TabbedPane.background"") :"
188748,./TargetProjects/netbeans/platform/o.n.swing.tabcontrol/src/org/netbeans/swing/tabcontrol/plaf/WinClassicEditorTabDisplayerUI.java,98,,"        g.setColor (UIManager.getColor(""controlShadow"")); //NOI18N"
188749,./TargetProjects/netbeans/platform/o.n.swing.tabcontrol/src/org/netbeans/swing/tabcontrol/plaf/WinClassicEditorTabDisplayerUI.java,118,,"                    UIManager.getColor(""control""))); //NOI18N"
188750,./TargetProjects/netbeans/platform/o.n.swing.tabcontrol/test/unit/src/org/netbeans/swing/tabcontrol/ButtonPopupSwitcherTestHid.java,61,,"        items[2] = new TabData( new JPanel(), new DummyIcon(Color.YELLOW), ""Somewhere.txt"",  ""Somewhere.txt"");"
188751,./TargetProjects/netbeans/platform/o.n.swing.tabcontrol/test/unit/src/org/netbeans/swing/tabcontrol/DataModelTest.java,113,,"        assertPravda (lastEvent != null, ""Last event should have been fired but is null"");"
188752,./TargetProjects/netbeans/platform/o.n.swing.tabcontrol/test/unit/src/org/netbeans/swing/tabcontrol/DataModelTest.java,255,,"        assertListenerCall (""contentsChanged"");"
188753,./TargetProjects/netbeans/platform/o.n.swing.tabcontrol/test/unit/src/org/netbeans/swing/tabcontrol/DataModelTest.java,449,,"            assertPravda (false, ""No event expected but "" + e + "" receieved"");"
188754,./TargetProjects/netbeans/platform/o.n.swing.tabcontrol/test/unit/src/org/netbeans/swing/tabcontrol/DataModelTest.java,449,,"            assertPravda (false, ""No event expected but "" + e + "" receieved"");"
188755,./TargetProjects/netbeans/platform/o.n.swing.tabcontrol/test/unit/src/org/netbeans/swing/tabcontrol/plaf/SelectionModelTest.java,381,,"            assertPravda (false, ""No event expected but "" + e + "" receieved"");"
188756,./TargetProjects/netbeans/platform/o.n.swing.tabcontrol/test/unit/src/org/netbeans/swing/tabcontrol/plaf/SelectionModelTest.java,381,,"            assertPravda (false, ""No event expected but "" + e + "" receieved"");"
188757,./TargetProjects/netbeans/platform/openide.actions/test/unit/src/org/openide/actions/PasteActionTest.java,89,,"        action.putValue (""delegates"", arr);"
188758,./TargetProjects/netbeans/platform/openide.actions/test/unit/src/org/openide/actions/PasteActionTest.java,132,,"        global.actionPerformed (new ActionEvent (this, 0, ""waitFinished""));"
188759,./TargetProjects/netbeans/platform/openide.actions/test/unit/src/org/openide/actions/PasteActionTest.java,167,,"        listener.assertCnt (""One changes since that"", 1);"
188760,./TargetProjects/netbeans/platform/openide.awt/src/org/netbeans/modules/openide/awt/ActionProcessor.java,269,,"                f.instanceAttribute(""instanceCreate"", Action.class);"
188761,./TargetProjects/netbeans/platform/openide.awt/src/org/netbeans/modules/openide/awt/ActionProcessor.java,273,,"                    f.methodvalue(""instanceCreate"", ""org.openide.awt.Actions"", ""alwaysEnabled"");"
188762,./TargetProjects/netbeans/platform/openide.awt/src/org/netbeans/modules/openide/awt/ActionProcessor.java,474,,"                throw new LayerGenerationException(lfaceFQN + "" is not an interface"", e, processingEnv, as, ""listenOn"");"
188763,./TargetProjects/netbeans/platform/openide.awt/src/org/openide/awt/Actions.java,424,,"        map.put(""displayName"", displayName); // NOI18N"
188764,./TargetProjects/netbeans/platform/openide.awt/src/org/openide/awt/Actions.java,425,,"        map.put(""iconBase"", iconBase); // NOI18N"
188765,./TargetProjects/netbeans/platform/openide.awt/src/org/openide/awt/Actions.java,426,,"        map.put(""noIconInMenu"", noIconInMenu); // NOI18N"
188766,./TargetProjects/netbeans/platform/openide.awt/src/org/openide/awt/AlwaysEnabledAction.java,188,,"                ""iconBase"".equals(name) && // NOI18N"
188767,./TargetProjects/netbeans/platform/openide.awt/src/org/openide/awt/CloseButtonFactory.java,101,,"        String osName = System.getProperty (""os.name"");"
188768,./TargetProjects/netbeans/platform/openide.awt/src/org/openide/awt/CloseButtonFactory.java,103,,"            || (osName.equals( ""Windows NT (unknown)"" ) && ""6.0"".equals( System.getProperty(""os.version"") ));"
188769,./TargetProjects/netbeans/platform/openide.awt/src/org/openide/awt/CloseButtonFactory.java,103,,"            || (osName.equals( ""Windows NT (unknown)"" ) && ""6.0"".equals( System.getProperty(""os.version"") ));"
188770,./TargetProjects/netbeans/platform/openide.awt/src/org/openide/awt/GeneralAction.java,131,,"            enableMonitor = new PropertyMonitor(Action.class, ""enabled""); // NOI18N"
188771,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/awt/ActionProcessorTest.java,73,,"        AnnotationProcessorTestUtils.makeSource(getWorkDir(), ""test.A"","
188772,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/awt/ActionProcessorTest.java,74,,"                  ""import org.openide.awt.ActionRegistration;\n"""
188773,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/awt/ActionProcessorTest.java,75,,"                + ""import org.openide.awt.ActionID;\n"""
188774,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/awt/ActionProcessorTest.java,76,,"                + ""import org.openide.awt.ActionReference;\n"""
188775,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/awt/ActionProcessorTest.java,77,,"                + ""import java.awt.event.*;\n"""
188776,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/awt/ActionProcessorTest.java,78,,"                + ""@ActionID(category=\""Tools\"",id=\""my.action\"")"""
188777,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/awt/ActionProcessorTest.java,81,,"                + ""public class A implements ActionListener {\n"""
188778,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/awt/ActionProcessorTest.java,82,,"                + ""    public void actionPerformed(ActionEvent e) {}"""
188779,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/awt/ActionProcessorTest.java,83,,"                + ""}\n"");"
188780,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/awt/ActionProcessorTest.java,93,,"        id=""my.test.Always"", category=""Tools"""
188781,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/awt/ActionProcessorTest.java,135,,"        assertEquals(""Right position"", 333, shad.getAttribute(""position""));"
188782,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/awt/ActionProcessorTest.java,136,,"        assertEquals(""Proper link"", ""Actions/Tools/my-test-Always.instance"", shad.getAttribute(""originalFile""));"
188783,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/awt/ActionProcessorTest.java,251,,"        assertEquals(""Global Action not called"", 0, Callback.cnt);"
188784,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/awt/ActionProcessorTest.java,458,,"        assertFalse(""Compilation has to fail:\n"" + os, r);"
188785,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/awt/ActionProcessorTest.java,481,,"    @ActionID(category=""eager"", id=""direct.one"")"
188786,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/awt/ActionProcessorTest.java,482,,"    @ActionRegistration(displayName=""Direct Action"")"
188787,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/awt/ActionProcessorTest.java,612,,"        assertEquals(""Direct class is created"", Direct.class, Actions.forID(""eager"", ""direct.one"").getClass());"
188788,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/awt/ActionProcessorTest.java,641,,"            ""import org.openide.util.actions.Presenter;\n"" +"
188789,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/awt/ActionProcessorTest.java,643,,"            ""import javax.swing.*;\n"" +"
188790,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/awt/ActionProcessorTest.java,645,,"            ""@ActionRegistration(displayName=\""AAA\"", key=\""K\"") "" +"
188791,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/awt/ActionProcessorTest.java,662,,"            ""import java.util.List;\n"" +"
188792,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,274,,"        AnnotationProcessorTestUtils.makeSource(getWorkDir(), ""test.A"", "
188793,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,275,,"            ""import org.openide.awt.ActionRegistration;\n"" +"
188794,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,276,,"            ""import org.openide.awt.ActionReference;\n"" +"
188795,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,277,,"            ""import org.openide.awt.ActionState;\n"" +"
188796,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,278,,"            ""import org.openide.awt.ActionID;\n"" +"
188797,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,279,,"            ""import org.openide.util.actions.Presenter;\n"" +"
188798,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,280,,"            ""import java.awt.event.*;\n"" +"
188799,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,281,,"            ""import java.util.List;\n"" +"
188800,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,282,,"            ""import javax.swing.*;\n"" +"
188801,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,283,,"            ""import org.netbeans.modules.openide.awt.StatefulActionProcessorTest.*;\n"" +"
188802,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,285,,"            ""public class A {\n"" +"
188803,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,286,,"            ""    @ActionID(category=\""Tools\"",id=\""test.action\"")"" +"
188804,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,288,,"            ""    @ActionReference(path=\""manka\"", position=11)"" +"
188805,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,289,,"            ""    "" +"
188806,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,290,,"            ""    public static class B implements ActionListener {\n"" +"
188807,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,291,,"            ""       public B(ActionModel mdl) {} \n"" +"
188808,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,292,,"            ""      public void actionPerformed(ActionEvent e) {}\n"" +"
188809,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,293,,"            ""    }\n"" +"
188810,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,294,,"            ""}\n"""
188811,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,450,,"            ""import javax.swing.event.*;\n"" +"
188812,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,579,,"    @ActionID(id = ""test.DefEnableAction"", category=""Foo"")"
188813,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,580,,"    @ActionRegistration(displayName = ""TestAction"", "
188814,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,697,,"    @ActionID(id = ""test.InstAction"", category=""Foo"")"
188815,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,699,,"            enabledOn = @ActionState(property = ""boolProp"")"
188816,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,738,,"        a.actionPerformed(new ActionEvent(this, 0, ""cmd""));"
188817,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,762,,"    @ActionID(id = ""test.CustomEnableAction"", category=""Foo"")"
188818,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,896,,"    @ActionID(id = ""test.ToggleAction"", category=""Foo"")"
188819,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,926,,"        assertFalse(""Action must be unchecked"", (Boolean)a.getValue(Action.SELECTED_KEY));"
188820,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,927,,"        assertFalse(""Action must be disabled without data"", a.isEnabled());"
188821,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,928,,"        assertNull(""Must not eagerly instantiate"", instance2);"
188822,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,933,,"        assertNull(""Must not be created on data presence"", instance2);"
188823,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,934,,"        assertTrue(""Must be enabled when data is ready"", a.isEnabled());"
188824,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,935,,"        assertFalse(""Must not be checked unless guard is true"", (Boolean)a.getValue(Action.SELECTED_KEY));"
188825,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,942,,"        assertTrue(""Must become checked after prop change"", (Boolean)a.getValue(Action.SELECTED_KEY));"
188826,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,945,,"        a.actionPerformed(new ActionEvent(this, 0, ""cmd2""));"
188827,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,1112,,"        assertNull(""Must not instantiate just on data presence"", instance2);"
188828,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/netbeans/modules/openide/openide/awt/StatefulActionProcessorTest.java,1124,,"    @ActionID(id = ""test.CustomToggleAction"", category=""Foo"")"
188829,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/openide/awt/ActionsTest.java,264,,"        action.putValue(""iconBase"", null);"
188830,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/openide/awt/ActionsTest.java,329,,"        action.putValue(Action.NAME, ""new-name"");"
188831,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/openide/awt/ActionsTest.java,522,,"        aa.putValue(""iconBase"", ""org/openide/awt/data/testIcon.gif"");"
188832,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/openide/awt/AlwaysEnabledActionTest.java,112,,"        assertNotNull(""Action created"", a);"
188833,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/openide/awt/AlwaysEnabledActionTest.java,127,,"        assertEquals(""Right localized name"", ""Icon &Name Action"", name);"
188834,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/openide/awt/AlwaysEnabledActionTest.java,127,,"        assertEquals(""Right localized name"", ""Icon &Name Action"", name);"
188835,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/openide/awt/AlwaysEnabledActionTest.java,134,,"        Object base = a.getValue(""iconBase""); "
188836,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/openide/awt/AlwaysEnabledActionTest.java,141,,"        a.actionPerformed(new ActionEvent(this, 0, ""kuk""));"
188837,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/openide/awt/AlwaysEnabledActionTest.java,253,,"        MyAction.last.putValue(MyAction.NAME, ""Ahoj"");"
188838,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/openide/awt/AlwaysEnabledActionTest.java,396,,"        prefsNode.remove(""myKey"");"
188839,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/openide/awt/AsynchronousTest.java,62,,"        Action action = (Action)FileUtil.getConfigFile(""actions/async/none.instance"").getAttribute(""instanceCreate"");"
188840,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/openide/awt/AsynchronousTest.java,86,,"            fail(""No warning about the class: "" + err);"
188841,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/openide/awt/CallbackSystemActionTest.java,149,,"        disabled.put(""somekey"", new Disabled());"
188842,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/openide/awt/ContextActionInjectTest.java,72,,"        assertNotNull(""File found"", fo);"
188843,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/openide/awt/ContextActionInjectTest.java,73,,"        Object obj = fo.getAttribute(""instanceCreate"");"
188844,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/openide/awt/ContextActionInjectTest.java,74,,"        assertNotNull(""Attribute present"", obj);"
188845,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/openide/awt/ContextActionInjectTest.java,83,,"        assertEquals(""Number lover!"", clone.getValue(Action.NAME));"
188846,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/openide/awt/ContextActionInjectTest.java,85,,"        assertEquals(""Global Action not called"", 10, Context.cnt);"
188847,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/openide/awt/ContextActionTest.java,130,,"        ActionsInfraHid.WaitPCL l = new ActionsInfraHid.WaitPCL(""enabled"");"
188848,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/openide/awt/ContextActionTest.java,490,,"        assertEquals(""Our SimpleCookieAction invoked"", 1, SimpleCookieAction.runOn.size());"
188849,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/openide/awt/ContextActionTest.java,772,,"    @ActionID(category = ""Test"", id = ""CheckedTest"")"
188850,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/openide/awt/ContextActionTest.java,772,,"    @ActionID(category = ""Test"", id = ""CheckedTest"")"
188851,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/openide/awt/ContextManagerTest.java,55,,"        Action clone = ((ContextAwareAction) Actions.forID(""cat"", ""survive"")).createContextAwareInstance(lkp);"
188852,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/openide/awt/ContextManagerTest.java,55,,"        Action clone = ((ContextAwareAction) Actions.forID(""cat"", ""survive"")).createContextAwareInstance(lkp);"
188853,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/openide/awt/QuickSearchTest.java,98,,"                fail(""interrupted."");"
188854,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/openide/awt/QuickSearchTest.java,116,,"            Method setGlobalFocusOwner = KeyboardFocusManager.class.getDeclaredMethod(""setGlobalFocusOwner"", Component.class);"
188855,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/openide/awt/SimpleNotificationDisplayerTest.java,50,,"        Notification notification = notificationDisplayer.notify(""title"", null, ""details"", null);"
188856,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/openide/awt/SwingBrowserTest.java,58,,"        final URL url = new URL(""test"", ""localhost"", -1, ""simple"", new MyStreamHandler());"
188857,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/openide/awt/SwingBrowserTest.java,58,,"        final URL url = new URL(""test"", ""localhost"", -1, ""simple"", new MyStreamHandler());"
188858,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/openide/awt/SwingBrowserTest.java,58,,"        final URL url = new URL(""test"", ""localhost"", -1, ""simple"", new MyStreamHandler());"
188859,./TargetProjects/netbeans/platform/openide.awt/test/unit/src/org/openide/awt/UndoRedoTest.java,79,,"        assertSame(""Expected myEdit:"", myEdit, ur.editToBeUndone());"
188860,./TargetProjects/netbeans/platform/openide.compat/test/unit/src/org/openide/explorer/ExplorerPanelTest.java,128,,"        copy.actionPerformed (new java.awt.event.ActionEvent (this, 0, ""waitFinished""));"
188861,./TargetProjects/netbeans/platform/openide.compat/test/unit/src/org/openide/explorer/ExplorerPanelTest.java,173,,"        assertTrue (""It gets enabled"", delete.isEnabled ());"
188862,./TargetProjects/netbeans/platform/openide.compat/test/unit/src/org/openide/explorer/ExplorerPanelTest.java,177,,"        assertEquals (""Destoy was called"", 1, enabledNode.countDelete);"
188863,./TargetProjects/netbeans/platform/openide.compat/test/unit/src/org/openide/explorer/FindHelpTest.java,62,,"            new WithHelpNode(""foo""),"
188864,./TargetProjects/netbeans/platform/openide.compat/test/unit/src/org/openide/explorer/propertysheet/PropertyPanelTest.java,136,,"        envListener.assertChanges (""Notified in environment"", 1, 1);"
188865,./TargetProjects/netbeans/platform/openide.compat/test/unit/src/org/openide/explorer/propertysheet/PropertyPanelTest.java,137,,"        panelListener.assertChanges (""Notified in panel"", 1, 0);"
188866,./TargetProjects/netbeans/platform/openide.compat/test/unit/src/org/openide/explorer/view/RootContextTest.java,146,,"        panel.setName(""preferredID"");"
188867,./TargetProjects/netbeans/platform/openide.compat/test/unit/src/org/openide/explorer/windows/TopComponentActivatedNodesTest.java,164,,"                    assertArrays (""LOOKUP AFTER INTENSIVE CHANGES: nodes in lookup == activated nodes"","
188868,./TargetProjects/netbeans/platform/openide.dialogs/src/org/openide/NotifyDescriptor.java,640,,"            throw new IllegalStateException (""NotificationLineSupport wasn't created yet."");"
188869,./TargetProjects/netbeans/platform/openide.dialogs/src/org/openide/WizardDescriptor.java,474,,"    @SuppressWarnings(""unchecked"")"
188870,./TargetProjects/netbeans/platform/openide.dialogs/test/unit/src/org/openide/AsynchronousValidatingPanelTest.java,118,,"        err.log (""Do Next. Validation will run with: validateMsg="" + mp.validateMsg + "", failedMsg="" + mp.failedMsg);"
188871,./TargetProjects/netbeans/platform/openide.dialogs/test/unit/src/org/openide/AsynchronousValidatingPanelTest.java,129,,"                assertFalse (""Wizard is not valid during validation."",  wd.isForwardEnabled ());"
188872,./TargetProjects/netbeans/platform/openide.dialogs/test/unit/src/org/openide/AsynchronousValidatingPanelTest.java,133,,"        assertFalse (""Finish is disabled during validation."", mp.wasEnabled);"
188873,./TargetProjects/netbeans/platform/openide.dialogs/test/unit/src/org/openide/InstantiatingIteratorTest.java,119,,"        assertNotNull (""InstantiatingIterator was instantiated."", getResult ());"
188874,./TargetProjects/netbeans/platform/openide.dialogs/test/unit/src/org/openide/LoggingTestCaseHid.java,253,,"                                messages.append(""t: "" + threadName + "" interrupts: "" + t.getName() + ""\n"");"
188875,./TargetProjects/netbeans/platform/openide.dialogs/test/unit/src/org/openide/NotificationLineSupportTest.java,58,,"        DialogDescriptor dd = new DialogDescriptor (""Test"", ""Test dialog"", false, options,"
188876,./TargetProjects/netbeans/platform/openide.dialogs/test/unit/src/org/openide/NotificationLineSupportTest.java,58,,"        DialogDescriptor dd = new DialogDescriptor (""Test"", ""Test dialog"", false, options,"
188877,./TargetProjects/netbeans/platform/openide.dialogs/test/unit/src/org/openide/NotificationLineSupportTest.java,60,,"        assertNull (""No NotificationLineSupport created."", dd.getNotificationLineSupport ());"
188878,./TargetProjects/netbeans/platform/openide.dialogs/test/unit/src/org/openide/NotificationLineSupportTest.java,71,,"        testSetInformationMessage (supp, ""Hello"");"
188879,./TargetProjects/netbeans/platform/openide.dialogs/test/unit/src/org/openide/WizardDescTest.java,73,,"        exceptedValue = ""NEXT_OPTION"";"
188880,./TargetProjects/netbeans/platform/openide.dialogs/test/unit/src/org/openide/WizardDescTest.java,74,,"        log (""Do click Next button."");"
188881,./TargetProjects/netbeans/platform/openide.dialogs/test/unit/src/org/openide/WizardDescriptorWhenClosedWindowTest.java,75,,"        assertEquals (""The resultValue is "" + expectedValue, expectedValue, resultValue);"
188882,./TargetProjects/netbeans/platform/openide.explorer/src/org/openide/explorer/propertysheet/CleanComboUI.java,121,,"            comboBox.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_UP, 0), ""selectPrevious""); //NOI18N"
188883,./TargetProjects/netbeans/platform/openide.explorer/src/org/openide/explorer/propertysheet/CleanComboUI.java,122,,"            comboBox.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_DOWN, 0), ""selectNext""); //NOI18N"
188884,./TargetProjects/netbeans/platform/openide.explorer/src/org/openide/explorer/propertysheet/IndexedPropertyEditor.java,123,,"            return ""null""; // NOI18N"
188885,./TargetProjects/netbeans/platform/openide.explorer/src/org/openide/explorer/propertysheet/PropUtils.java,1054,,"        shadowColor = UIManager.getColor(""controlShadow""); //NOI18N"
188886,./TargetProjects/netbeans/platform/openide.explorer/src/org/openide/explorer/propertysheet/PropertyPanel.java,373,,"            boolean tableUI = ((preferences & PREF_TABLEUI) != 0) || Boolean.TRUE.equals(getClientProperty(""flat"")); //NOI18N"
188887,./TargetProjects/netbeans/platform/openide.explorer/src/org/openide/explorer/propertysheet/PropertyPanel.java,615,,"                ""useLabels"".equals(nm)) && (displayer != null) && displayer instanceof PropertyDisplayer_Inline"
188888,./TargetProjects/netbeans/platform/openide.explorer/src/org/openide/explorer/propertysheet/RendererPropertyDisplayer.java,107,,"                firePropertyChange(""preferredSize"", null, null); //NOI18N"
188889,./TargetProjects/netbeans/platform/openide.explorer/src/org/openide/explorer/view/NodeRenderDataProvider.java,56,,"            throw new IllegalStateException(""TreeNode must be VisualizerNode but was: "" + o + "" of class "" + o.getClass().getName());"
188890,./TargetProjects/netbeans/platform/openide.explorer/src/org/openide/explorer/view/NodeRenderDataProvider.java,56,,"            throw new IllegalStateException(""TreeNode must be VisualizerNode but was: "" + o + "" of class "" + o.getClass().getName());"
188891,./TargetProjects/netbeans/platform/openide.explorer/src/org/openide/explorer/view/OutlineView.java,1495,,"                getInputMap(WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).put(ctrlSpace, ""invokeCustomEditor""); //NOI18N"
188892,./TargetProjects/netbeans/platform/openide.explorer/src/org/openide/explorer/view/OutlineView.java,1503,,"            map.put(KeyStroke.getKeyStroke(""control V""), ""none""); // NOI18N"
188893,./TargetProjects/netbeans/platform/openide.explorer/src/org/openide/explorer/view/SheetCell.java,616,,"                @SuppressWarnings(""deprecation"")"
188894,./TargetProjects/netbeans/platform/openide.explorer/src/org/openide/explorer/view/TreeTable.java,156,,"        imp2.put(KeyStroke.getKeyStroke(""control C""), ""none""); // NOI18N"
188895,./TargetProjects/netbeans/platform/openide.explorer/src/org/openide/explorer/view/TreeView.java,1739,,"            getInputMap().put(KeyStroke.getKeyStroke(""control C""), ""none""); // NOI18N"
188896,./TargetProjects/netbeans/platform/openide.explorer/src/org/openide/explorer/view/TreeView.java,1829,,"        @SuppressWarnings(""ResultOfObjectAllocationIgnored"")"
188897,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/ExplorerUtilsTest.java,71,,"                new HelpCtx(""foo""),"
188898,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/propertysheet/EditableDisplayerTest.java,367,,"        assertEquals(""After entering a value, getEnteredValue should return it"", ""VALUE"", custRen.getEnteredValue());"
188899,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/propertysheet/EditableDisplayerTest.java,387,,"                    custRen.getProperty().setValue(""Value"");"
188900,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/propertysheet/EditorDisplayerTest.java,520,,"        private Object myValue = ""Value"";"
188901,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/propertysheet/FindHelpTest.java,139,,"            ss.put(new WithHelpProperty(""prop1"", ""row-help-1""));"
188902,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/propertysheet/FindHelpTest.java,140,,"            ss.put(new WithHelpProperty(""prop2"", ""row-help-2""));"
188903,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/propertysheet/FindHelpTest.java,141,,"            ss.put(new WithHelpProperty(""prop3"", null));"
188904,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/propertysheet/FindHelpTest.java,144,,"            ss.put(new WithHelpProperty(""prop4"", ""row-help-4""));"
188905,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/propertysheet/FindHelpTest.java,145,,"            ss.put(new WithHelpProperty(""prop5"", null));"
188906,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/propertysheet/InplaceEditorFactoryTest.java,67,,"        assertTrue(""InplaceEditor.getValue() returns "" + ied.getValue() + "" should be \""Value\"""", ""Value"".equals(ied.getValue()));"
188907,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/propertysheet/PropertyPanelInDialogTest.java,617,,"        private Object myValue = ""Value"";"
188908,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/propertysheet/ProxyNodeTest.java,95,,"        b.setValue(""notNull"");"
188909,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/propertysheet/ProxyNodeTest.java,171,,"        Property<?> prop = findProperty(pn, ""name"");"
188910,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/propertysheet/ProxyNodeTest.java,172,,"        assertEquals(""Name"", ""name"", prop.getName());"
188911,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/propertysheet/ProxyNodeTest.java,173,,"        assertEquals(""Value"", 1, prop.getValue());"
188912,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/propertysheet/RendererDisplayerTest.java,472,,"        private Object myValue = ""Value"";"
188913,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/BeanTreeViewTest.java,73,,"        ExplorerManager em = doChildRemovalTest(""one"", ""one"");"
188914,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/BeanTreeViewTest.java,80,,"        doChildRemovalTest(""foo"");"
188915,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/BeanTreeViewTest.java,83,,"        doChildRemovalTest(""bar"");"
188916,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/BeanTreeViewTest.java,86,,"        doChildRemovalTest(""bla"");"
188917,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/BeanTreeViewTest.java,118,,"                    root.setName(""test root"");"
188918,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/BeanTreeViewTest.java,144,,"                    fail(""Unexpected PropertyVetoException from ExplorerManager.setSelectedNodes()"");"
188919,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/BeanTreeViewTest.java,148,,"                assertNotNull(""Before removal: one node should be selected, but there are none."", paths);"
188920,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/BeanTreeViewTest.java,187,,"        ExplorerManager em = doChildDestroyTest (""one"", Arrays.asList(""one"", ""two""), ""one"", ""two"");"
188921,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/DragDropUtilitiesTest.java,58,,"        assertNotNull(""Call to convertor"", last);"
188922,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/NodeTableModelTest.java,50,,"        p.setDisplayName( ""displayName1"" );"
188923,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/NodeTableModelTest.java,51,,"        p.setShortDescription( ""shortDescription1"" );"
188924,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/NodeTableModelTest.java,52,,"        p.setValue( ""ColumnMnemonicCharTTV"", """" );"
188925,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/NodeTableModelTest.java,54,,"        checkBox = new JCheckBox( ""displayName"" );"
188926,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/NodeTableModelTest.java,56,,"        assertEquals( ""Invalid accessible name"", checkBox.getAccessibleContext().getAccessibleName(), p.getDisplayName() );"
188927,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/NodeTableModelTest.java,57,,"        assertEquals( ""Invalid accessible description"", checkBox.getAccessibleContext().getAccessibleDescription(), p.getShortDescription() );"
188928,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/NodeTableModelTest.java,58,,"        assertEquals( ""Invalid mnemonic"", checkBox.getMnemonic(), 0 );"
188929,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/NodeTableModelTest.java,108,,"        assertEquals( ""Invalid display name:"", model.getDisplayNameWithMnemonic(p), p.getDisplayName() );"
188930,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/NodeTableModelTest.java,114,,"        p.setValue( ""ColumnDisplayNameWithMnemonicTTV"", ""otherDisplayName"" );"
188931,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/OutlineViewOrderingTest.java,159,,"            firePropertyChange (""unitTestPropName"", null, new Object ());"
188932,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/OutlineViewTest.java,70,,"                    childrenNodes[i] = new TestNode (leafs, ""[1-index from 0 to 99]"");"
188933,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/OutlineViewTest.java,73,,"                    childrenNodes[i] = new TestNode (leafs, ""[10-index from 100 to 199]"");"
188934,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/OutlineViewTest.java,76,,"                    childrenNodes[i] = new TestNode (leafs, ""[2-index from 200 to 299]"");"
188935,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/OutlineViewTest.java,108,,"        assertEquals (""[0]"", view.getOutline ().getValueAt (1, 0).toString ());"
188936,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/OutlineViewTest.java,135,,"        assertEquals (""[299]"", view.getOutline ().getValueAt (2, 0).toString ());"
188937,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/OutlineViewTest.java,136,,"        assertEquals (""[298]"", view.getOutline ().getValueAt (3, 0).toString ());"
188938,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/OutlineViewTest.java,274,,"        view.setPropertyColumnAttribute(""unitTestPropName"", ""SortableColumn"", Boolean.FALSE);"
188939,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/OutlineViewTest.java,283,,"        OutlineView ov = new OutlineView (""test-outline-view-component"");"
188940,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/OutlineViewTest.java,288,,"        outline.writeSettings(p, ""test"");"
188941,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/TreeTableView152857Test.java,73,,"        Node root = new TestNode (children, ""root"");"
188942,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/TreeTableViewTest.java,146,,"            firePropertyChange(""unitTestPropName"", null, new Object());"
188943,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/TreeViewQuickSearchTest.java,130,,"                        assertNotNull(""One node should be selected, but there are none."", paths);"
188944,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/ViewUtilTest.java,53,,"        n.setName(""newName"");"
188945,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/VisualizerNodeEventsOrderTest.java,59,,"        assertEquals(""Child check"", ""c"", getChildAt(2).toString());"
188946,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/VisualizerNodeTest.java,100,,"        assertEquals(""Child check"", ""c"", ta.getChildAt(2).toString());"
188947,./TargetProjects/netbeans/platform/openide.explorer/test/unit/src/org/openide/explorer/view/VisualizerNodeTest.java,101,,"        assertEquals(""Counter should be 1"", 1, lch.cnt);"
188948,./TargetProjects/netbeans/platform/openide.filesystems.compat8/test/unit/src/org/openide/filesystems/FilesystemsAPICompatTest.java,62,,"    @SuppressWarnings(""deprecation"")"
188949,./TargetProjects/netbeans/platform/openide.filesystems.nb/src/org/openide/filesystems/FileChooserBuilder.java,375,,"        String oldFileDialogProp = System.getProperty(""apple.awt.fileDialogForDirectories""); //NOI18N"
188950,./TargetProjects/netbeans/platform/openide.filesystems/src/org/netbeans/modules/openide/filesystems/RecognizeInstanceFiles.java,146,,"                        if (f.hasExt(""instance"") || f.getAttribute(""instanceCreate"") != null) {"
188951,./TargetProjects/netbeans/platform/openide.filesystems/src/org/openide/filesystems/AbstractFileObject.java,220,,"            throw new FSException(NbBundle.getMessage(AbstractFileObject.class, ""EXC_FSisRO"", fs.getDisplayName()));"
188952,./TargetProjects/netbeans/platform/openide.filesystems/src/org/openide/filesystems/AbstractFileObject.java,224,,"            throw new FSException(NbBundle.getMessage(AbstractFileObject.class, ""EXC_FisRO"", name, fs.getDisplayName()));"
188953,./TargetProjects/netbeans/platform/openide.filesystems/src/org/openide/filesystems/AbstractFileObject.java,406,,"                    throw new FileStateInvalidException(NbBundle.getMessage(AbstractFileObject.class, ""EXC_ApplicationCreateError"", getPath(), name));"
188954,./TargetProjects/netbeans/platform/openide.filesystems/src/org/openide/filesystems/DefaultAttributes.java,933,,"                    private final String[] MANDAT_ATTR_KEYS = { ""NAME"" }; // NOI18N"
188955,./TargetProjects/netbeans/platform/openide.filesystems/src/org/openide/filesystems/FileUtil.java,684,,"        if(name.startsWith(""//"") || name.startsWith(""\\\\"")) {      // NOI18N"
188956,./TargetProjects/netbeans/platform/openide.filesystems/src/org/openide/filesystems/FileUtil.java,823,,"            if (fileURL == null || !""file"".equals(fileURL.getProtocol())) {  //NOI18N"
188957,./TargetProjects/netbeans/platform/openide.filesystems/src/org/openide/filesystems/MultiFileObject.java,1066,,"                    throw new FSException(NbBundle.getMessage(MultiFileObject.class, ""EXC_FSisRO"", fs.getDisplayName()));"
188958,./TargetProjects/netbeans/platform/openide.filesystems/src/org/openide/filesystems/MultiFileObject.java,1856,,"            throw new IOException(""Unsupported oepration""); // NOI18N"
188959,./TargetProjects/netbeans/platform/openide.filesystems/src/org/openide/filesystems/Repository.java,798,,"        assert false : ""Deprecated."";"
188960,./TargetProjects/netbeans/platform/openide.filesystems/src/org/openide/filesystems/XMLMapAttr.java,525,,"                if ((objType = XMLMapAttr.Attr.distinguishObject(unObj)) != XMLMapAttr.Attr.isValid(""SERIALVALUE"")) { // NOI18N"
188961,./TargetProjects/netbeans/platform/openide.filesystems/src/org/openide/filesystems/annotations/LayerBuilder.java,782,,"                    e.setAttribute(""name"", piece);"
188962,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/netbeans/modules/openide/filesystems/RecognizeInstanceFilesTest.java,77,,"        inst.setAttribute(""instanceCreate"", Long.valueOf(1000));"
188963,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/netbeans/modules/openide/filesystems/RecognizeInstanceFilesTest.java,155,,"                inst.setAttribute(""position"", 3);"
188964,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/netbeans/modules/openide/filesystems/RecognizeInstanceFilesTest.java,227,,"        i1.setAttribute(""instanceOf"", Runnable.class.getName());"
188965,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/netbeans/modules/openide/filesystems/RecognizeInstanceFilesTest.java,228,,"        i1.setAttribute(""instanceClass"", Do.class.getName());"
188966,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/netbeans/modules/openide/filesystems/declmime/MIMEResolverImplTest.java,144,,"            if (""magic-mask.xml"".equals(s) == false) fail = ""magic-mask rule failure: "" + fo + "" => "" + s;"
188967,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/netbeans/modules/openide/filesystems/declmime/MIMEResolverImplTest.java,150,,"            fo = root.getFileObject(""root"",""xml"");"
188968,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/netbeans/modules/openide/filesystems/declmime/MIMEResolverImplTest.java,156,,"            if (""ns.xml"".equals(s) == false) fail = ""ns rule failure""  + fo + "" => "" + s;"
188969,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/netbeans/modules/openide/filesystems/declmime/MIMEResolverImplTest.java,231,,"        declarativeResolver.findMIMEType(root.getFileObject(""empty.dtd""));"
188970,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/netbeans/modules/openide/filesystems/declmime/MIMEResolverImplTest.java,261,,"        assertMimeType(resolver, ""text/x-php5"", ""php.txt"");"
188971,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/netbeans/modules/openide/filesystems/declmime/MIMEResolverProcessorTest.java,55,,"    mimeType=""text/x-yz"","
188972,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/netbeans/modules/openide/filesystems/declmime/MIMEResolverProcessorTest.java,63,,"    mimeType=""text/x-my+xml"","
188973,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/netbeans/modules/openide/filesystems/declmime/MIMEResolverProcessorTest.java,90,,"        final String PATH = ""Services/MIMEResolver/"""
188974,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/openide/filesystems/AbstractFolderTest.java,59,,"            throw new UnsupportedOperationException(""Not supported yet."");"
188975,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/openide/filesystems/FileObjectTestHid.java,263,,"            fo1.rename(lock, ""Aaa"", ""java"");"
188976,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/openide/filesystems/FileObjectTestHid.java,271,,"                ""expected copy will success on writable FS"","
188977,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/openide/filesystems/FileObjectTestHid.java,302,,"        String testStr = ""text..."";"
188978,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/openide/filesystems/FileObjectTestHid.java,303,,"        String attrName = ""attrName"";"
188979,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/openide/filesystems/FileObjectTestHid.java,304,,"        String value = ""value"";"
188980,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/openide/filesystems/FileObjectTestHid.java,317,,"        fsAssert(""no exception fired but copy returned null"",fo3 != null);"
188981,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/openide/filesystems/FileObjectTestHid.java,318,,"        fsAssert(""content of source and target should equal"",testStr.equals(readStr(fo3)));"
188982,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/openide/filesystems/FileObjectTestHid.java,319,,"        fsAssert(""attributes should be copied too"","
188983,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/openide/filesystems/FileObjectTestHid.java,321,,"        fileDataCreatedAssert(""parent should fire fileDataCreated"",1);"
188984,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/openide/filesystems/FileObjectTestHid.java,384,,"                    FileObject ch = fold.getFileObject(""child.txt"");"
188985,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/openide/filesystems/FileObjectTestHid.java,427,,"        os.write(""Ahoj"".getBytes());"
188986,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/openide/filesystems/FileObjectTestHid.java,540,,"            fsAssert(""OK, if the system is read-only"","
188987,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/openide/filesystems/FileObjectTestHid.java,699,,"            this.fileRenamedAssert(""File was actually renamed."",1);"
188988,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/openide/filesystems/FileObjectTestHid.java,998,,"        fsAssert(""findResource problem"", result != null);"
188989,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/openide/filesystems/FileObjectTestHid.java,1060,,"            fsAssert(""There is not possible to create folder a.b.c"","
188990,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/openide/filesystems/FileObjectTestHid.java,1224,,"            os.write(""Ahoj"".getBytes(""UTF-8""));"
188991,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/openide/filesystems/FileObjectTestHid.java,1283,,"            fo = root.createData(""name"",""ext"");"
188992,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/openide/filesystems/FileObjectTestHid.java,1287,,"            fileDataCreatedAssert(""fs or fo is read-only. So no event should be fired"",0);"
188993,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/openide/filesystems/FileObjectTestHid.java,1294,,"        fileFolderCreatedAssert(""fireFolderDataCreatedEvent  should not be fired "",0);"
188994,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/openide/filesystems/FileObjectTestHid.java,1296,,"        fileRenamedAssert(""fireFileRenamedEvent should not be fired "",0);"
188995,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/openide/filesystems/FileObjectTestHid.java,1297,,"        fileDeletedAssert(""fireFileDeletedEvent should not be fired "",0);"
188996,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/openide/filesystems/FileObjectTestHid.java,1298,,"        fileChangedAssert(""fireFileChangedEvent should not be fired "",0);"
188997,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/openide/filesystems/FileObjectTestHid.java,1406,,"        fileDataCreatedAssert(""fireFileDataCreatedEvent should not be fired "",0);"
188998,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/openide/filesystems/FileObjectTestHid.java,1500,,"            fsAssert(""FileObject could not be deleted. So there was expected fs or fo are read-only"","
188999,./TargetProjects/netbeans/platform/openide.filesystems/test/unit/src/org/openide/filesystems/FileObjectTestHid.java,1514,,"        fsAssert(""FileObject should be invalid after delete"",!fo1.isValid());"
