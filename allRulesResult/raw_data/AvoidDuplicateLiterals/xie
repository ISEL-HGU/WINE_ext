212000,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayAppendFunctionIT.java,84,,"        String[] strings = new String[]{""34567""};"
212001,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayAppendFunctionIT.java,85,,"        Array array = conn.createArrayOf(""VARCHAR"", strings);"
212002,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayAppendFunctionIT.java,87,,"        rs = conn.createStatement().executeQuery(""SELECT ARRAY_APPEND(null,'34567') FROM "" + tableName + "" LIMIT 1"");"
212003,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayAppendFunctionIT.java,108,,"        array = conn.createArrayOf(""INTEGER"", ints);"
212004,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayAppendFunctionIT.java,121,,"        array = conn.createArrayOf(""BIGINT"", longs);"
212005,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayAppendFunctionIT.java,158,,"        rs = conn.createStatement().executeQuery(""SELECT ARRAY_APPEND(varchars,'34567') FROM "" + tableName + "" WHERE region_name = 'SF Bay Area'"");"
212006,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayAppendFunctionIT.java,161,,"        String[] strings = new String[]{""2345"", ""46345"", ""23234"", ""34567""};"
212007,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayAppendFunctionIT.java,161,,"        String[] strings = new String[]{""2345"", ""46345"", ""23234"", ""34567""};"
212008,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayAppendFunctionIT.java,161,,"        String[] strings = new String[]{""2345"", ""46345"", ""23234"", ""34567""};"
212009,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayAppendFunctionIT.java,217,,"        Array array = conn.createArrayOf(""DOUBLE"", doubles);"
212010,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayAppendFunctionIT.java,527,,"        rs = conn.createStatement().executeQuery(""SELECT region_name FROM "" + tableName + "" WHERE ARRAY[2345,46345,23234,456,123]=ARRAY_APPEND(integers,123)"");"
212011,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayAppendFunctionIT.java,530,,"        assertEquals(""SF Bay Area"", rs.getString(1));"
212012,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayConcatFunctionIT.java,38,,"        String ddl = ""CREATE TABLE "" + tableName + "" (region_name VARCHAR PRIMARY KEY,varchars VARCHAR[],integers INTEGER[],doubles DOUBLE[],bigints BIGINT[],chars CHAR(15)[],double1 DOUBLE,char1 CHAR(17),nullcheck INTEGER,chars2 CHAR(15)[], nullvarchar VARCHAR[], nullbigint BIGINT[])"";"
212013,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayConcatFunctionIT.java,40,,"        String dml = ""UPSERT INTO "" + tableName + ""(region_name,varchars,integers,doubles,bigints,chars,double1,char1,nullcheck,chars2) VALUES('SF Bay Area',"" +"
212014,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayConcatFunctionIT.java,63,,"        rs = conn.createStatement().executeQuery(""SELECT ARRAY_CAT(varchars,varchars) FROM "" + tableName + "" WHERE region_name = 'SF Bay Area'"");"
212015,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayConcatFunctionIT.java,68,,"        Array array = conn.createArrayOf(""VARCHAR"", strings);"
212016,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayConcatFunctionIT.java,107,,"        Array array = conn.createArrayOf(""INTEGER"", integers);"
212017,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayConcatFunctionIT.java,124,,"        Array array = conn.createArrayOf(""DOUBLE"", doubles);"
212018,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayConcatFunctionIT.java,171,,"        String[] strings = new String[]{""a"", ""bbbb"", ""c"", ""ddd"", ""e"", ""a"", ""bbbb"", ""c"", ""ddd"", ""e""};"
212019,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayConcatFunctionIT.java,171,,"        String[] strings = new String[]{""a"", ""bbbb"", ""c"", ""ddd"", ""e"", ""a"", ""bbbb"", ""c"", ""ddd"", ""e""};"
212020,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayConcatFunctionIT.java,436,,"        strings = new String[]{""d"", ""fgh"", ""something"", ""something"", ""d"", ""fgh"", ""something"", ""something""};"
212021,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayConcatFunctionIT.java,449,,"        rs = conn.createStatement().executeQuery(""SELECT region_name FROM "" + tableName + "" WHERE ARRAY[2345,46345,23234,456,123]=ARRAY_CAT(integers,ARRAY[123])"");"
212022,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayConcatFunctionIT.java,452,,"        assertEquals(""SF Bay Area"", rs.getString(1));"
212023,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayConcatFunctionIT.java,540,,"        PreparedStatement st = conn.prepareStatement(""SELECT ARRAY_CAT(?,?) FROM "" + tableName + "" WHERE region_name = 'SF Bay Area'"");"
212024,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayFillFunctionIT.java,46,,"        String ddl = ""CREATE TABLE "" + tableName"
212025,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayFillFunctionIT.java,49,,"        String dml = ""UPSERT INTO "" + tableName"
212026,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayFillFunctionIT.java,79,,"            ""SELECT ARRAY_FILL(\""varchar\"",5) FROM "" + tableName + "" WHERE region_name = 'SF Bay Area'"");"
212027,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayFillFunctionIT.java,82,,"        String[] strings = new String[]{""foo"", ""foo"", ""foo"", ""foo"", ""foo""};"
212028,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayFillFunctionIT.java,84,,"        Array array = conn.createArrayOf(""VARCHAR"", strings);"
212029,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayFillFunctionIT.java,119,,"        Array array = conn.createArrayOf(""DOUBLE"", objects);"
212030,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayFillFunctionIT.java,294,,"        Object[] objects = new Object[]{""hello"", ""hello""};"
212031,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayFillFunctionIT.java,479,,"        String[] strings2 = new String[]{"":-)"", "":-)"", "":-)"", "":-)"", "":-)""};"
212032,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayFillFunctionIT.java,502,,"            ""SELECT region_name FROM "" + tableName + "" WHERE ARRAY[12, 12, 12, 12]=ARRAY_FILL(12,4)"");"
212033,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayFillFunctionIT.java,505,,"        assertEquals(""SF Bay Area"", rs.getString(1));"
212034,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayPrependFunctionIT.java,33,,"        conn.createStatement().execute(""CREATE TABLE "" + tableName + "" ( k VARCHAR PRIMARY KEY, a "" + type + ""[],b "" + type + "")"");"
212035,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayPrependFunctionIT.java,35,,"        PreparedStatement stmt = conn.prepareStatement(""UPSERT INTO "" + tableName + "" VALUES(?,?,"" + value + "")"");"
212036,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayPrependFunctionIT.java,87,,"        rs = conn.createStatement().executeQuery(""SELECT ARRAY_PREPEND(1234,integers) FROM "" + tableName + "" WHERE region_name = 'SF Bay Area'"");"
212037,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayPrependFunctionIT.java,92,,"        Array array = conn.createArrayOf(""INTEGER"", integers);"
212038,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayPrependFunctionIT.java,110,,"        Array array = conn.createArrayOf(""VARCHAR"", strings);"
212039,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayPrependFunctionIT.java,126,,"        rs = conn.createStatement().executeQuery(""SELECT ARRAY_PREPEND(b,a) FROM "" + tableName + "" WHERE k = 'a'"");"
212040,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayPrependFunctionIT.java,126,,"        rs = conn.createStatement().executeQuery(""SELECT ARRAY_PREPEND(b,a) FROM "" + tableName + "" WHERE k = 'a'"");"
212041,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayPrependFunctionIT.java,149,,"        String[] s = new String[]{""176"", null, ""212""};"
212042,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayPrependFunctionIT.java,149,,"        String[] s = new String[]{""176"", null, ""212""};"
212043,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayPrependFunctionIT.java,188,,"        Array array = conn.createArrayOf(""DOUBLE"", doubles);"
212044,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayPrependFunctionIT.java,507,,"        rs = conn.createStatement().executeQuery(""SELECT region_name FROM "" + tableName + "" WHERE ARRAY[123,2345,46345,23234,456]=ARRAY_PREPEND(123,integers)"");"
212045,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayPrependFunctionIT.java,510,,"        assertEquals(""SF Bay Area"", rs.getString(1));"
212046,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayRemoveFunctionIT.java,47,,"		String ddl = ""CREATE TABLE "" + tableName"
212047,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayRemoveFunctionIT.java,51,,"		String dml = ""UPSERT INTO "" + tableName"
212048,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayRemoveFunctionIT.java,76,,"				""SELECT ARRAY_REMOVE(varchars,'23234') FROM "" + tableName + "" WHERE region_name = 'SF Bay Area'"");"
212049,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayRemoveFunctionIT.java,79,,"		assertEquals(conn.createArrayOf(""VARCHAR"", new String[] { ""2345"", ""46345"" }), rs.getArray(1));"
212050,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayRemoveFunctionIT.java,79,,"		assertEquals(conn.createArrayOf(""VARCHAR"", new String[] { ""2345"", ""46345"" }), rs.getArray(1));"
212051,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayRemoveFunctionIT.java,79,,"		assertEquals(conn.createArrayOf(""VARCHAR"", new String[] { ""2345"", ""46345"" }), rs.getArray(1));"
212052,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayRemoveFunctionIT.java,89,,"		assertEquals(conn.createArrayOf(""INTEGER"", new Integer[] { 2345, 46345, 23234 }), rs.getArray(1));"
212053,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayRemoveFunctionIT.java,99,,"		assertEquals(conn.createArrayOf(""DOUBLE"", new Double[] { 10.0, 46.345, 23.234, 45.6, 5.78 }), rs.getArray(1));"
212054,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayRemoveFunctionIT.java,121,,"		assertEquals(conn.createArrayOf(""BIGINT"", new Long[] { 12l, 34l, 78l, 910l }), rs.getArray(1));"
212055,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayRemoveFunctionIT.java,152,,"		assertEquals(conn.createArrayOf(""CHAR"", new String[] { ""a"", ""bbbb"", ""c"", ""e"", ""c"" }), rs.getArray(1));"
212056,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayRemoveFunctionIT.java,152,,"		assertEquals(conn.createArrayOf(""CHAR"", new String[] { ""a"", ""bbbb"", ""c"", ""e"", ""c"" }), rs.getArray(1));"
212057,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayRemoveFunctionIT.java,278,,"		assertEquals(conn.createArrayOf(""VARCHAR"", new String[] { ""2345"", ""46345"", ""23234"" }), rs.getArray(1));"
212058,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayToStringFunctionIT.java,40,,"        String ddl = ""CREATE TABLE "" + tableName"
212059,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayToStringFunctionIT.java,43,,"        String dml = ""UPSERT INTO "" + tableName"
212060,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayToStringFunctionIT.java,66,,"                + "" WHERE region_name = 'SF Bay Area'"");"
212061,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayToStringFunctionIT.java,261,,"            ""CREATE TABLE "" + table + "" (region_name VARCHAR PRIMARY KEY,varchar VARCHAR)"";"
212062,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayToStringFunctionIT.java,271,,"            ""SELECT varchar FROM "" + table + "" WHERE region_name = 'SF Bay Area'"");"
212063,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayToStringFunctionIT.java,472,,"        rs = conn.createStatement().executeQuery(""SELECT region_name FROM "" + tableName"
212064,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArrayToStringFunctionIT.java,476,,"        assertEquals(""SF Bay Area"", rs.getString(1));"
212065,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArraysWithNullsIT.java,36,,"            ""CREATE TABLE "" + t1 + "" ( k VARCHAR PRIMARY KEY, a INTEGER[])"");"
212066,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArraysWithNullsIT.java,39,,"            ""UPSERT INTO "" + t1 + "" VALUES('a',ARRAY[null,3,null])"");"
212067,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArraysWithNullsIT.java,43,,"        ResultSet rs = conn.createStatement().executeQuery(""Select a from "" + t1 + "" where k = 'a'"");"
212068,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArraysWithNullsIT.java,43,,"        ResultSet rs = conn.createStatement().executeQuery(""Select a from "" + t1 + "" where k = 'a'"");"
212069,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ArraysWithNullsIT.java,332,,"        assertEquals(rs.getArray(1),conn.createArrayOf(""CHAR"",new String[]{""foo"","""",""fo"",""foo""}));"
212070,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/AuditLoggingIT.java,38,,"                "" mycolumn varchar)"";"
212071,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/AutoPartitionViewsIT.java,89,,"                            ""CREATE TABLE "" + tableName + "" (%s metricId VARCHAR, val1 DOUBLE, val2 DOUBLE CONSTRAINT PK PRIMARY KEY( %s metricId)) %s"","
212072,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/AutoPartitionViewsIT.java,91,,"                                isMultiTenant ? ""tenantId, "": """", String.format(tableDDLOptions, autoSeqName)"
212073,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/AutoPartitionViewsIT.java,117,,"                    ""CREATE VIEW "" + metricView1 + ""  AS SELECT * FROM "" + tableName);"
212074,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/AutoPartitionViewsIT.java,125,,"                ""CREATE VIEW "" + metricView1 + "" AS SELECT * FROM "" + tableName + "" WHERE val2=1.2"");"
212075,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/AutoPartitionViewsIT.java,144,,"                viewConn1.createStatement().execute(""SELECT * FROM "" + metricView1);"
212076,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/AutoPartitionViewsIT.java,161,,"            assertEquals(""Unexpected view statement"", expectedViewStatement1,"
212077,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/AutoPartitionViewsIT.java,172,,"            assertTrue(""Partition column view referenced attribute should be true "","
212078,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/AutoPartitionViewsIT.java,185,,"            assertArrayEquals(""Unexpected Partition column view constant attribute"","
212079,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BackwardCompatibilityIT.java,355,,"            assertFalse(""Coprocessor "" + TaskMetaDataEndpoint.class.getName()"
212080,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BaseAggregateIT.java,54,,"        conn.createStatement().execute(""create table "" + tableName +"
212081,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BaseAggregateIT.java,69,,"        PreparedStatement statement = conn.prepareStatement(""UPSERT INTO "" + tableName + ""(id, uri, appcpu) values (?,?,?)"");"
212082,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BaseAggregateIT.java,220,,"            .setSelectColumns(Lists.newArrayList(""URI""))"
212083,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BaseAggregateIT.java,298,,"        conn.createStatement().execute(""CREATE TABLE "" + tableName + ""(\n"" + "
212084,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BaseAggregateIT.java,361,,"                ""JOURNEY_ID"", ""DATASOURCE"", ""ORGANIZATION_ID""))"
212085,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BaseAggregateIT.java,378,,"        assertEquals(""PARALLEL 1-WAY"","
212086,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BaseAggregateIT.java,384,,"        assertEquals(""SERVER FILTER BY FIRST KEY ONLY"","
212087,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BaseAggregateIT.java,601,,"                    ""ENTITY_ID""+"
212088,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BaseAggregateIT.java,957,,"                       ""pk1 ""+(desc ? ""desc"" : """")+"", ""+"
212089,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BaseOrderByIT.java,60,,"                    Lists.newArrayList(""ENTITY_ID"", ""B_STRING""))"
212090,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BaseOrderByIT.java,131,,"            String ddl = ""CREATE TABLE "" + tableName +"
212091,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BaseOrderByIT.java,136,,"            String dml = ""UPSERT INTO "" + tableName + "" VALUES(?, ?)"";"
212092,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BaseOrderByIT.java,151,,"                        Lists.newArrayList(""COL1""))"
212093,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BaseOrderByIT.java,208,,"        conn.createStatement().execute(""upsert into "" + tableName + "" values ('ABC','aa123', 11)"");"
212094,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BaseOrderByIT.java,224,,"                    Lists.newArrayList(""VAL1"", ""VAL2""))"
212095,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BaseOrderByIT.java,367,,"                        Lists.newArrayList(""CONTAINER_ID"", ""ORGANIZATION_ID""))"
212096,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BaseOrderByIT.java,367,,"                        Lists.newArrayList(""CONTAINER_ID"", ""ORGANIZATION_ID""))"
212097,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BaseOrderByIT.java,616,,"                    ""ORGANIZATION_ID"" +(desc1 ? "" DESC"" : """" )+"",""+"
212098,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BaseOrderByIT.java,618,,"                    ""SCORE""+(desc3 ? "" DESC"" : """" )+"",""+"
212099,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BaseOrderByIT.java,670,,"            queryBuilder.setGroupByClause(""ORGANIZATION_ID, SCORE"");"
212100,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BaseOrderByIT.java,730,,"                conn.createStatement().execute(""UPSERT INTO ""+tableName+"" VALUES (null,'""+i+""','""+i+""','""+i+""')"");"
212101,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BaseOrderByIT.java,734,,"                conn.createStatement().execute(""UPSERT INTO ""+tableName+"" VALUES ('""+i+""','""+i+""','""+i+""','""+i+""')"");"
212102,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BasePermissionsIT.java,114,,"            ""SYSTEM:CATALOG"", ""SYSTEM:SEQUENCE"", ""SYSTEM:STATS"", ""SYSTEM:FUNCTION"", ""SYSTEM:MUTEX"", ""SYSTEM:CHILD_LINK""));"
212103,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BasePermissionsIT.java,698,,"                    assertFalse(stmt.execute(""CREATE INDEX "" + indexName + "" on "" + dataTable + ""(data)""));"
212104,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BaseQueryIT.java,52,,"                    ""CREATE INDEX IF NOT EXISTS %s ON %s (a_integer DESC) INCLUDE ("" + ""    A_STRING, """
212105,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BaseQueryIT.java,53,,"                            + ""    B_STRING, "" + ""    A_DATE)"","
212106,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BaseQueryIT.java,53,,"                            + ""    B_STRING, "" + ""    A_DATE)"","
212107,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BaseTenantSpecificTablesIT.java,58,,"        PARENT_TABLE_DDL = ""CREATE TABLE "" + PARENT_TABLE_NAME + "" ( \n"" + "
212108,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BaseTenantSpecificViewIndexIT.java,127,,"            conn.createStatement().execute(""UPSERT INTO "" + viewName + ""(k2,v1,v2) VALUES("" + i + "",'"" + valuePrefix + ""v1-"" + (i%5) + ""','"" + valuePrefix + ""v2-"" + (i%2) + ""')"");"
212109,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BaseTenantSpecificViewIndexIT.java,162,,"                + ""','"" + valuePrefix + ""v2-1']"";"
212110,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BaseTenantSpecificViewIndexIT.java,223,,"            Arrays.<Object>asList(1,1, valuePrefix + ""v2-1""),"
212111,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BaseViewIT.java,122,,"            conn.createStatement().execute(""UPSERT INTO "" + fullTableName + "" VALUES("" + (i % 4) + "","" + (i+100) + "","" + (i > 5 ? 2 : 1) + "")"");"
212112,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BaseViewIT.java,173,,"            conn.createStatement().execute(""CREATE LOCAL INDEX "" + viewIndexName1 + "" on "" + viewName + ""(k3)"");"
212113,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BaseViewIT.java,206,,"            iteratorTypeAndScanSize = ""PARALLEL """
212114,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BaseViewIT.java,207,,"                + (saltBuckets == null ? 1 : saltBuckets) + ""-WAY"";"
212115,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/BaseViewIT.java,210,,"            clientSortAlgo = ""CLIENT MERGE SORT"";"
212116,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CSVCommonsLoaderIT.java,115,,"            String statements = ""CREATE TABLE IF NOT EXISTS "" + stockTableName"
212117,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CSVCommonsLoaderIT.java,116,,"                    + ""(SYMBOL VARCHAR NOT NULL PRIMARY KEY, COMPANY VARCHAR);"";"
212118,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CSVCommonsLoaderIT.java,129,,"                    .prepareStatement(""SELECT SYMBOL, COMPANY FROM """
212119,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CaseStatementIT.java,93,,"        String query = ""SELECT CASE WHEN a_integer <= 2 THEN 1.5 WHEN a_integer = 3 THEN 2 WHEN a_integer <= 6 THEN 4.5 ELSE 5 END AS a FROM "" + tableName + "" WHERE organization_id=?"";"
212120,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CastAndCoerceIT.java,90,,"        String query = ""SELECT entity_id FROM "" + tableName + "" WHERE organization_id=? AND x_long >= x_integer"";"
212121,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CoalesceFunctionIT.java,77,,"        String ddl = ""CREATE TABLE "" + tableName + ""("""
212122,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CoalesceFunctionIT.java,78,,"                + ""    ID BIGINT NOT NULL, """
212123,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CoalesceFunctionIT.java,79,,"                + ""    \""COUNT\"" BIGINT """
212124,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CoalesceFunctionIT.java,80,,"                + ""    CONSTRAINT pk PRIMARY KEY(ID))"";"
212125,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CoalesceFunctionIT.java,83,,"        conn.createStatement().execute(""UPSERT INTO "" + tableName + ""(ID, \""COUNT\"") VALUES(2, null)"");"
212126,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CoalesceFunctionIT.java,83,,"        conn.createStatement().execute(""UPSERT INTO "" + tableName + ""(ID, \""COUNT\"") VALUES(2, null)"");"
212127,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CoalesceFunctionIT.java,87,,"                ""SELECT """
212128,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CoalesceFunctionIT.java,90,,"                + "" GROUP BY ID"");"
212129,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CoalesceFunctionIT.java,113,,"                + ""FROM "" + tableName"
212130,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ColumnEncodedBytesPropIT.java,67,,"            String ddl = ""CREATE TABLE  "" + dataTableFullName1 +"
212131,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ConcurrentMutationsExtendedIT.java,149,,"        conn.createStatement().execute(""CREATE TABLE "" + tableName"
212132,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ConcurrentMutationsExtendedIT.java,152,,"        conn.createStatement().execute(""CREATE INDEX "" + indexName + "" ON "" + tableName + ""(v1)"");"
212133,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ConcurrentMutationsExtendedIT.java,152,,"        conn.createStatement().execute(""CREATE INDEX "" + indexName + "" ON "" + tableName + ""(v1)"");"
212134,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ConcurrentMutationsExtendedIT.java,191,,"                                    ""UPSERT INTO "" + tableName + "" VALUES ("" + (i % 10)"
212135,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ConcurrentMutationsIT.java,92,,"            conn.createStatement().execute(""CREATE TABLE "" + tableName + ""(k1 CHAR(2) NOT NULL, k2 CHAR(2) NOT NULL, ts TIMESTAMP, V VARCHAR, V2 VARCHAR, CONSTRAINT pk PRIMARY KEY (k1,k2)) COLUMN_ENCODED_BYTES = 0"");"
212136,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ConcurrentMutationsIT.java,96,,"            conn.createStatement().execute(""CREATE INDEX "" + indexName + "" ON "" + tableName + ""(k2,k1,ts) INCLUDE (V, v2)"");"
212137,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ConcurrentMutationsIT.java,96,,"            conn.createStatement().execute(""CREATE INDEX "" + indexName + "" ON "" + tableName + ""(k2,k1,ts) INCLUDE (V, v2)"");"
212138,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ConcurrentMutationsIT.java,96,,"            conn.createStatement().execute(""CREATE INDEX "" + indexName + "" ON "" + tableName + ""(k2,k1,ts) INCLUDE (V, v2)"");"
212139,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ConcurrentMutationsIT.java,100,,"            PreparedStatement stmt = conn.prepareStatement(""UPSERT INTO "" + tableName + "" VALUES('aa','aa',?, '0')"");"
212140,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ConcurrentMutationsIT.java,100,,"            PreparedStatement stmt = conn.prepareStatement(""UPSERT INTO "" + tableName + "" VALUES('aa','aa',?, '0')"");"
212141,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ConcurrentMutationsIT.java,109,,"            stmt = conn.prepareStatement(""UPSERT INTO "" + tableName + "" VALUES('aa','aa',?, null)"");"
212142,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ConfigurableCacheIT.java,46,,"            conn.createStatement().execute(""upsert into "" + table + "" values (100,1,3)"");"
212143,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ConfigurableCacheIT.java,97,,"            conn.createStatement().executeQuery(""SELECT * FROM "" + table);"
212144,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ConvertTimezoneFunctionIT.java,45,,"        String ddl = ""CREATE TABLE IF NOT EXISTS "" + timezone_offset_test"
212145,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ConvertTimezoneFunctionIT.java,46,,"            + "" (k1 INTEGER NOT NULL, dates DATE CONSTRAINT pk PRIMARY KEY (k1))"";"
212146,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ConvertTimezoneFunctionIT.java,48,,"        String dml = ""UPSERT INTO "" + timezone_offset_test"
212147,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ConvertTimezoneFunctionIT.java,49,,"            + "" (k1, dates) VALUES (1, TO_DATE('2014-03-01 00:00:00'))"";"
212148,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CostBasedDecisionIT.java,74,,"            conn.createStatement().execute(""CREATE TABLE "" + tableName + "" (\n"" +"
212149,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CostBasedDecisionIT.java,74,,"            conn.createStatement().execute(""CREATE TABLE "" + tableName + "" (\n"" +"
212150,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CostBasedDecisionIT.java,75,,"                    ""rowkey VARCHAR PRIMARY KEY,\n"" +"
212151,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CostBasedDecisionIT.java,76,,"                    ""c1 VARCHAR,\n"" +"
212152,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CostBasedDecisionIT.java,77,,"                    ""c2 VARCHAR)"");"
212153,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CostBasedDecisionIT.java,78,,"            conn.createStatement().execute(""CREATE LOCAL INDEX "" + tableName + ""_idx ON "" + tableName + "" (c1)"");"
212154,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CostBasedDecisionIT.java,78,,"            conn.createStatement().execute(""CREATE LOCAL INDEX "" + tableName + ""_idx ON "" + tableName + "" (c1)"");"
212155,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CostBasedDecisionIT.java,78,,"            conn.createStatement().execute(""CREATE LOCAL INDEX "" + tableName + ""_idx ON "" + tableName + "" (c1)"");"
212156,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CostBasedDecisionIT.java,84,,"            PreparedStatement stmt = conn.prepareStatement(""UPSERT INTO "" + tableName + "" (rowkey, c1, c2) VALUES (?, ?, ?)"");"
212157,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CostBasedDecisionIT.java,84,,"            PreparedStatement stmt = conn.prepareStatement(""UPSERT INTO "" + tableName + "" (rowkey, c1, c2) VALUES (?, ?, ?)"");"
212158,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CostBasedDecisionIT.java,93,,"            conn.createStatement().execute(""UPDATE STATISTICS "" + tableName);"
212159,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CostBasedDecisionIT.java,122,,"            assertEquals(""PARALLEL 1-WAY"","
212160,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CostBasedDecisionIT.java,124,,"            assertEquals(""RANGE SCAN "","
212161,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CostBasedDecisionIT.java,130,,"            assertEquals(""CLIENT MERGE SORT"","
212162,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CostBasedDecisionIT.java,253,,"                    ""CLIENT PARALLEL 1-WAY RANGE SCAN OVER "" + tableName + "" [2,*] - [2,9,000]\n"" +"
212163,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CostBasedDecisionIT.java,342,,"                    ""    CLIENT PARALLEL 1-WAY RANGE SCAN OVER "" + tableName + "" [*] - ['z']\n"" +"
212164,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CostBasedDecisionIT.java,396,,"                    ""CLIENT PARALLEL 1-WAY FULL SCAN OVER "" + tableName + ""\n"" +"
212165,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CostBasedDecisionIT.java,398,,"                    ""    PARALLEL INNER-JOIN TABLE 0\n"" +"
212166,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CostBasedDecisionIT.java,399,,"                    ""        CLIENT PARALLEL 1-WAY RANGE SCAN OVER "" + tableName + "" [*] - ['z']\n"" +"
212167,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CostBasedDecisionIT.java,498,,"        String q = ""SELECT *\n"" +"
212168,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CostBasedDecisionIT.java,499,,"                ""FROM "" + testTable500 + "" t1 JOIN "" + testTable1000 + "" t2\n"" +"
212169,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CostBasedDecisionIT.java,499,,"                ""FROM "" + testTable500 + "" t1 JOIN "" + testTable1000 + "" t2\n"" +"
212170,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CostBasedDecisionIT.java,499,,"                ""FROM "" + testTable500 + "" t1 JOIN "" + testTable1000 + "" t2\n"" +"
212171,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CostBasedDecisionIT.java,512,,"            assertEquals(""FULL SCAN "","
212172,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CostBasedDecisionIT.java,570,,"                ""        CLIENT PARALLEL 1-WAY RANGE SCAN OVER "" + testTable500 + "" [201] - [*]\n"" +"
212173,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CostBasedDecisionIT.java,684,,"                ""LEFT JOIN "" + testTable990 + "" t3\n"" +"
212174,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CreateSchemaIT.java,53,,"        String ddl1 = ""CREATE SCHEMA \"""" + schemaName1 + ""\"""";"
212175,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CreateTableIT.java,82,,"        conn.createStatement().execute(""CREATE TABLE "" + tableName"
212176,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CreateTableIT.java,106,,"                conn.createStatement().execute(String.format(""CREATE TABLE %s"""
212177,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CreateTableIT.java,107,,"                        + "" (name VARCHAR NOT NULL PRIMARY KEY, city VARCHAR,"""
212178,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CreateTableIT.java,109,,"                fail(""Should have failed with ColumnAlreadyExistsException"");"
212179,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CreateTableIT.java,172,,"                        String.format(""DROP TABLE %s"", tableName));"
212180,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CreateTableIT.java,273,,"            conn.createStatement().execute(""DROP TABLE "" + tableName);"
212181,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CreateTableIT.java,324,,"                ""create table IF NOT EXISTS  "" + tableName + ""  ("" + "" id char(1) NOT NULL,"""
212182,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CreateTableIT.java,324,,"                ""create table IF NOT EXISTS  "" + tableName + ""  ("" + "" id char(1) NOT NULL,"""
212183,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CreateTableIT.java,324,,"                ""create table IF NOT EXISTS  "" + tableName + ""  ("" + "" id char(1) NOT NULL,"""
212184,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CreateTableIT.java,325,,"                        + "" col1 integer NOT NULL,"" + "" col2 bigint NOT NULL,"""
212185,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CreateTableIT.java,325,,"                        + "" col1 integer NOT NULL,"" + "" col2 bigint NOT NULL,"""
212186,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CreateTableIT.java,341,,"        String ddl = ""CREATE TABLE "" + tableName + "" (\n"""
212187,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CreateTableIT.java,356,,"            conn.createStatement().execute(""CREATE LOCAL INDEX I_"" + i + tableName + "" ON "" + tableName + ""(COL1) INCLUDE (COL2,COL3,COL4)"");"
212188,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CreateTableIT.java,378,,"                        + "" col1 integer NOT NULL,"" + "" b.col2 bigint,"" + "" c.col3 bigint, """
212189,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CreateTableIT.java,379,,"                        + "" CONSTRAINT NAME_PK PRIMARY KEY (id, col1)"""
212190,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CreateTableIT.java,707,,"                    ""create IMMUTABLE table """
212191,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CsvBulkLoadToolIT.java,89,,"        FSDataOutputStream outputStream = fs.create(new Path(""/tmp/input1.csv""));"
212192,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CsvBulkLoadToolIT.java,91,,"        printWriter.println(""1,Name 1,1970/01/01"");"
212193,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CsvBulkLoadToolIT.java,92,,"        printWriter.println(""2,Name 2,1970/01/02"");"
212194,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CsvBulkLoadToolIT.java,97,,"        csvBulkLoadTool.getConf().set(DATE_FORMAT_ATTRIB,""yyyy/MM/dd"");"
212195,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CsvBulkLoadToolIT.java,99,,"                ""--input"", ""/tmp/input1.csv"","
212196,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CsvBulkLoadToolIT.java,100,,"                ""--table"", ""table1"","
212197,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CsvBulkLoadToolIT.java,100,,"                ""--table"", ""table1"","
212198,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CsvBulkLoadToolIT.java,101,,"                ""--schema"", ""s"","
212199,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CsvBulkLoadToolIT.java,102,,"                ""--zookeeper"", zkQuorum});"
212200,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CsvBulkLoadToolIT.java,108,,"        assertEquals(""Name 1"", rs.getString(2));"
212201,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CsvBulkLoadToolIT.java,109,,"        assertEquals(DateUtil.parseDate(""1970-01-01""), rs.getDate(3));"
212202,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CsvBulkLoadToolIT.java,112,,"        assertEquals(""Name 2"", rs.getString(2));"
212203,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CsvBulkLoadToolIT.java,113,,"        assertEquals(DateUtil.parseDate(""1970-01-02""), rs.getDate(3));"
212204,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CsvBulkLoadToolIT.java,136,,"        outputStream = fs.create(new Path(""/tmp/input2.csv""));"
212205,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CsvBulkLoadToolIT.java,260,,"        FSDataOutputStream outputStream = fs.create(new Path(""/tmp/input8.csv""));"
212206,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CsvBulkLoadToolIT.java,403,,"            ""FIRST_NAME VARCHAR, LAST_NAME VARCHAR)"");"
212207,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CsvBulkLoadToolIT.java,410,,"        FSDataOutputStream outputStream = fs.create(new Path(""/tmp/input3.csv""));"
212208,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CsvBulkLoadToolIT.java,412,,"        printWriter.println(""1,FirstName 1,LastName 1"");"
212209,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CsvBulkLoadToolIT.java,413,,"        printWriter.println(""2,FirstName 2,LastName 2"");"
212210,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CursorWithRowValueConstructorIT.java,90,,"            String cursorSQL = ""DECLARE "" + cursorName + "" CURSOR FOR "" + querySQL;"
212211,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CursorWithRowValueConstructorIT.java,90,,"            String cursorSQL = ""DECLARE "" + cursorName + "" CURSOR FOR "" + querySQL;"
212212,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CursorWithRowValueConstructorIT.java,92,,"            cursorSQL = ""OPEN "" + cursorName;"
212213,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CursorWithRowValueConstructorIT.java,94,,"            cursorSQL = ""FETCH NEXT FROM "" + cursorName;"
212214,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CursorWithRowValueConstructorIT.java,102,,"            conn.prepareStatement(""CLOSE "" + cursorName).execute();"
212215,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CursorWithRowValueConstructorIT.java,209,,"        String query = ""SELECT a_integer, x_integer FROM ""+ aTable +"" WHERE ?=organization_id AND (a_integer, x_integer) = (7, 5)"";"
212216,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CursorWithRowValueConstructorIT.java,233,,"        String query = ""SELECT a_integer, x_integer FROM ""+aTable+"" WHERE '""+tenantId+""'=organization_id AND (a_integer, x_integer) = (7, 5)"";"
212217,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CursorWithRowValueConstructorIT.java,443,,"        query = query.replaceFirst(""\\?"", ""'""+tenantId+""'"");"
212218,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CursorWithRowValueConstructorIT.java,445,,"        query = query.replaceFirst(""\\?"", ""TO_DATE('""+DateUtil.getDateFormatter(DateUtil.DEFAULT_DATE_FORMAT).format(date)+""')"");"
212219,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CustomEntityDataIT.java,106,,"        stmt.setString(4, ""Curly"");"
212220,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CustomEntityDataIT.java,131,,"        stmt.setString(4, ""Moe"");"
212221,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/CustomEntityDataIT.java,156,,"        stmt.setString(4, ""Larry"");"
212222,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DateArithmeticIT.java,59,,"                    date, null, getUrl(), ""COLUMN_ENCODED_BYTES=0"");"
212223,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DateArithmeticIT.java,176,,"                      ""create table "" + tName + "" (ts timestamp primary key)"");"
212224,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DateArithmeticIT.java,180,,"      stmt = conn.prepareStatement(""upsert into "" + tName + "" values (?)"");"
212225,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DateArithmeticIT.java,180,,"      stmt = conn.prepareStatement(""upsert into "" + tName + "" values (?)"");"
212226,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DateArithmeticIT.java,185,,"      rs = conn.createStatement().executeQuery(""SELECT ts FROM "" + tName + """");"
212227,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DateTimeIT.java,97,,"                ""upsert into "" +tablename+"
212228,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DateTimeIT.java,99,,"                        ""    ORGANIZATION_ID, "" +"
212229,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DateTimeIT.java,437,,"        String query = ""SELECT entity_id FROM "" + this.tableName + "" WHERE a_integer < 4 AND a_date BETWEEN date '"" + today + ""' AND date '"" + tomorrow + ""' "";"
212230,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DateTimeIT.java,479,,"        String query = ""SELECT entity_id FROM "" + this.tableName + "" WHERE  a_integer < 4 AND DATE '"" + date + ""' = DATE '"" + date + ""'"";"
212231,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DateTimeIT.java,608,,"                ""CREATE TABLE IF NOT EXISTS "" + tableName + "" (k1 INTEGER NOT NULL, dates DATE, timestamps TIMESTAMP, times TIME, "" +"
212232,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DateTimeIT.java,608,,"                ""CREATE TABLE IF NOT EXISTS "" + tableName + "" (k1 INTEGER NOT NULL, dates DATE, timestamps TIMESTAMP, times TIME, "" +"
212233,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DateTimeIT.java,609,,"                        ""unsignedDates UNSIGNED_DATE, unsignedTimestamps UNSIGNED_TIMESTAMP, unsignedTimes UNSIGNED_TIME CONSTRAINT pk PRIMARY KEY (k1))"";"
212234,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DateTimeIT.java,611,,"        String dml = ""UPSERT INTO "" + tableName + "" VALUES (1, TO_DATE('2004-03-01 00:00:00'), TO_TIMESTAMP('2006-02-01 00:00:00'), TO_TIME('2008-02-01 00:00:00'), "" +"
212235,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DateTimeIT.java,741,,"                ""CREATE TABLE IF NOT EXISTS "" + tableName + "" (k1 INTEGER NOT NULL, dates DATE, timestamps TIMESTAMP, times TIME CONSTRAINT pk PRIMARY KEY (k1))"";"
212236,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DateTimeIT.java,1003,,"        String dml = ""UPSERT INTO "" + tableName + "" VALUES (1,"" +"
212237,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DateTimeIT.java,1004,,"                ""TO_DATE('2004-02-04 00:10:10'),"" +"
212238,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DateTimeIT.java,1005,,"                ""TO_TIMESTAMP('2006-04-12 00:10:10'))"";"
212239,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DateTimeIT.java,1008,,"        dml = ""UPSERT INTO "" + tableName + "" VALUES (2,"" +"
212240,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DateTimeIT.java,1009,,"                ""TO_DATE('2004-02-04 00:10:10'), "" +"
212241,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DateTimeIT.java,1010,,"                ""TO_TIMESTAMP('2004-02-04 15:10:20'))"";"
212242,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DateTimeIT.java,1013,,"        PreparedStatement stmt = conn.prepareStatement(""UPSERT INTO "" + tableName + "" VALUES (?, ?, ?)"");"
212243,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DateTimeIT.java,1021,,"        dml = ""UPSERT INTO "" + tableName + "" VALUES (4,"" +"
212244,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DateTimeIT.java,1023,,"                ""TO_TIMESTAMP('2004-02-04 00:10:10'))"";"
212245,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DateTimeIT.java,1027,,"        ResultSet rs = conn.createStatement().executeQuery(""SELECT dates = timestamps FROM "" + tableName);"
212246,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DateTimeIT.java,1047,,"                ""TO_TIME('2004-02-04 00:10:10'),"" +"
212247,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DateTimeIT.java,1052,,"                ""TO_TIME('2004-02-04 00:10:10'), "" +"
212248,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DateTimeIT.java,1070,,"        ResultSet rs = conn.createStatement().executeQuery(""SELECT times = timestamps FROM "" + tableName);"
212249,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DateTimeIT.java,1091,,"                ""TO_TIME('2006-04-12 00:10:10'))"";"
212250,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DateTimeIT.java,1096,,"                ""TO_TIME('2004-02-04 15:10:20'))"";"
212251,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DateTimeIT.java,1099,,"        dml = ""UPSERT INTO "" + tableName + "" VALUES (3,"" +"
212252,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DateTimeIT.java,1101,,"                ""TO_TIME('2004-02-04 00:10:10'))"";"
212253,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DateTimeIT.java,1105,,"        ResultSet rs = conn.createStatement().executeQuery(""SELECT dates = times FROM "" + tableName);"
212254,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DateTimeIT.java,1617,,"                ""TO_TIMESTAMP('2004-02-04 00:10:10'), "" +"
212255,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DateTimeIT.java,1705,,"        String query = ""SELECT feature FROM ""+tablename+"" WHERE organization_id = ? and ? - \""DATE\"" > 3"";"
212256,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DecodeFunctionIT.java,45,,"		String ddl = ""CREATE TABLE "" + testTable"
212257,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DecodeFunctionIT.java,46,,"				+ "" ( some_column BINARY(12) NOT NULL CONSTRAINT PK PRIMARY KEY (some_column))"";"
212258,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DecodeFunctionIT.java,58,,"		ResultSet rs = conn.createStatement().executeQuery(""SELECT * FROM "" + testTable"
212259,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DefaultColumnValueIT.java,58,,"        String ddl = ""CREATE TABLE IF NOT EXISTS "" + sharedTable1 + "" ("" +"
212260,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DefaultColumnValueIT.java,59,,"                ""pk1 INTEGER NOT NULL, "" +"
212261,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DefaultColumnValueIT.java,60,,"                ""pk2 INTEGER NOT NULL, "" +"
212262,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DefaultColumnValueIT.java,61,,"                ""pk3 INTEGER NOT NULL DEFAULT 10, "" +"
212263,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DefaultColumnValueIT.java,62,,"                ""test1 INTEGER, "" +"
212264,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DefaultColumnValueIT.java,63,,"                ""CONSTRAINT NAME_PK PRIMARY KEY (pk1, pk2, pk3))"";"
212265,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DefaultColumnValueIT.java,70,,"        String dml = ""UPSERT INTO "" + sharedTable1 + "" VALUES (1, 2)"";"
212266,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DefaultColumnValueIT.java,70,,"        String dml = ""UPSERT INTO "" + sharedTable1 + "" VALUES (1, 2)"";"
212267,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DefaultColumnValueIT.java,80,,"                .executeQuery(""SELECT "" + projection + "" FROM "" + sharedTable1 + "" WHERE pk1 = 1"");"
212268,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DefaultColumnValueIT.java,80,,"                .executeQuery(""SELECT "" + projection + "" FROM "" + sharedTable1 + "" WHERE pk1 = 1"");"
212269,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DefaultColumnValueIT.java,80,,"                .executeQuery(""SELECT "" + projection + "" FROM "" + sharedTable1 + "" WHERE pk1 = 1"");"
212270,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DefaultColumnValueIT.java,93,,"                .executeQuery(""SELECT "" + projection + "" FROM "" + sharedTable1 + "" WHERE pk1 = 11"");"
212271,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DefaultColumnValueIT.java,229,,"        String dml = ""UPSERT INTO "" + table + "" VALUES (1)"";"
212272,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DefaultColumnValueIT.java,236,,"                .executeQuery(""SELECT * FROM "" + table + "" WHERE pk1 = 1"");"
212273,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DefaultColumnValueIT.java,330,,"                .executeQuery(""SELECT * FROM "" + table + "" WHERE pk = 1"");"
212274,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DefaultColumnValueIT.java,440,,"                + ""pk INTEGER PRIMARY KEY,"""
212275,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DefaultColumnValueIT.java,441,,"                + ""c1 INTEGER,"""
212276,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DefaultColumnValueIT.java,571,,"        assertEquals(DateUtil.parseTime(""1900-10-01 14:03:22.559""), rs.getTime(16));"
212277,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DefaultColumnValueIT.java,574,,"        assertEquals(DateUtil.parseTime(""2005-10-01 14:03:22.559""), rs.getTime(19));"
212278,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DefaultColumnValueIT.java,577,,"        assertEquals(""ABCD"", rs.getString(22));"
212279,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DefaultColumnValueIT.java,935,,"                + ""c2 INTEGER DEFAULT 100)"";"
212280,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DefaultColumnValueIT.java,942,,"        ddl = ""CREATE INDEX "" + idx + "" on "" + table + "" (c1) INCLUDE (c2)"";"
212281,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DefaultColumnValueIT.java,951,,"                conn.createStatement().executeQuery(""SELECT c2 FROM "" + table + "" WHERE c1 = 2"");"
212282,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DefaultPhoenixMultiViewListProviderIT.java,62,,"        String indexTable1 = generateUniqueName() + ""_IDX"";"
212283,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DeleteIT.java,90,,"        String upsertStmt = ""UPSERT INTO "" + tableName + "" VALUES(?,?)"";"
212284,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DeleteIT.java,125,,"        String deleteStmt = ""DELETE FROM "" + tableName + "" WHERE 20 = j"";"
212285,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DeleteIT.java,182,,"        ResultSet rs = conn.createStatement().executeQuery(""SELECT count(*) FROM "" + tableName);"
212286,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DeleteIT.java,193,,"            PreparedStatement stmt = conn.prepareStatement(""EXPLAIN "" + query);"
212287,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DeleteIT.java,225,,"                conn.createStatement().execute(""CREATE LOCAL INDEX IF NOT EXISTS "" + localIndexName + "" ON "" + tableName + ""(j)"");"
212288,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DeleteIT.java,356,,"            String s = ""CREATE TABLE IF NOT EXISTS "" + tableName + ""("" +"
212289,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DeleteIT.java,358,,"                    ""DOMAIN VARCHAR NOT NULL, "" +"
212290,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DeleteIT.java,359,,"                    ""FEATURE VARCHAR NOT NULL, "" +"
212291,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DeleteIT.java,360,,"                    ""\""DATE\"" DATE NOT NULL, \n"" + "
212292,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DeleteIT.java,361,,"                    ""USAGE.CORE BIGINT,"" +"
212293,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DeleteIT.java,362,,"                    ""USAGE.DB BIGINT,"" +"
212294,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DeleteIT.java,363,,"                    ""STATS.ACTIVE_VISITOR INTEGER "" +"
212295,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DeleteIT.java,371,,"                stm.execute(""CREATE INDEX "" + indexName + "" ON "" + tableName + "" (CORE,DB,ACTIVE_VISITOR)"");"
212296,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DeleteIT.java,376,,"                    .prepareStatement(""UPSERT INTO "" + tableName + ""(HOST, DOMAIN, FEATURE, \""DATE\"", CORE, DB, ACTIVE_VISITOR) VALUES(?,?, ? , ?, ?, ?, ?)"");"
212297,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DeleteIT.java,465,,"            stm.execute(""CREATE "" + (localIndex ? ""LOCAL"" : """") + "" INDEX "" + indexName1 + "" ON "" + tableName + "" (\""DATE\"", FEATURE)"");"
212298,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DeleteIT.java,465,,"            stm.execute(""CREATE "" + (localIndex ? ""LOCAL"" : """") + "" INDEX "" + indexName1 + "" ON "" + tableName + "" (\""DATE\"", FEATURE)"");"
212299,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DeleteIT.java,465,,"            stm.execute(""CREATE "" + (localIndex ? ""LOCAL"" : """") + "" INDEX "" + indexName1 + "" ON "" + tableName + "" (\""DATE\"", FEATURE)"");"
212300,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DeleteIT.java,978,,"        String tagValue = ""customer-delete"";"
212301,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DerivedTableIT.java,117,,"                        ""CLIENT MERGE SORT\n"" +"
212302,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DerivedTableIT.java,120,,"                        ""CLIENT AGGREGATE INTO DISTINCT ROWS BY [A]\n"" +"
212303,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DerivedTableIT.java,121,,"                        ""CLIENT SORTED BY [A DESC]"","
212304,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DerivedTableIT.java,154,,"            String query = ""SELECT t.eid, t.x + 9 FROM (SELECT entity_id eid, b_string b, a_byte + 1 x FROM ""+tableName+"" WHERE a_byte + 1 < 9) AS t"";"
212305,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DerivedTableIT.java,237,,"            query = ""SELECT t.eid FROM (SELECT entity_id eid, b_string b FROM ""+tableName+"" LIMIT 2) AS t WHERE t.b = '"" + C_VALUE + ""'"";"
212306,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DerivedTableIT.java,363,,"            Array array = conn.createArrayOf(""VARCHAR"", b);"
212307,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DerivedTableIT.java,536,,"            String query = ""SELECT t.eid FROM (SELECT entity_id eid FROM ""+tableName+"" LIMIT 2) AS t"";"
212308,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DescOrderKeysIT.java,42,,"      stmt.execute(""CREATE TABLE "" + tableName +"
212309,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DescOrderKeysIT.java,45,,"      stmt.execute(""UPSERT INTO "" + tableName + "" (COL1, COL2) VALUES ('h1uniq1', 'val1')"");"
212310,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DescOrderKeysIT.java,59,,"      Assert.assertEquals(""Expected a single scan "", 1, plan.getScans().size());"
212311,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DescOrderKeysIT.java,63,,"      Assert.assertEquals(""val5"", rs.getString(2));"
212312,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DescOrderKeysIT.java,67,,"      Assert.assertEquals(""val1"", rs.getString(2));"
212313,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DescOrderKeysIT.java,71,,"      Assert.assertEquals(""val3"", rs.getString(2));"
212314,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DescOrderKeysIT.java,75,,"      Assert.assertEquals(""val6"", rs.getString(2));"
212315,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DescOrderKeysIT.java,79,,"      Assert.assertEquals(""val4"", rs.getString(2));"
212316,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DescOrderKeysIT.java,83,,"      Assert.assertEquals(""val2"", rs.getString(2));"
212317,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DescOrderKeysIT.java,87,,"      Assert.assertEquals(""val7"", rs.getString(2));"
212318,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DescOrderKeysIT.java,102,,"        ""PK PRIMARY KEY (COL1 DESC, COL2 DESC, COL3)) "");"
212319,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DescOrderKeysIT.java,104,,"      stmt.execute(""UPSERT INTO "" + tableName + "" (COL1, COL2, COL3) VALUES "" +"
212320,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DescOrderKeysIT.java,123,,"      final String sql = ""select COL1, COL2, COL3 from "" + tableName;"
212321,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DescOrderKeysIT.java,164,,"      Assert.assertEquals(""val9"", rs.getString(3));"
212322,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DescOrderKeysIT.java,174,,"      Assert.assertEquals(""val8"", rs.getString(3));"
212323,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DistinctPrefixFilterIT.java,121,,"        PreparedStatement stmt = conn.prepareStatement(""UPSERT INTO "" + testTable"
212324,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DistinctPrefixFilterIT.java,122,,"                + ""(prefix1, prefix2, prefix3, col1) VALUES(?,?,NEXT VALUE FOR ""+testSeq+"",rand())"");"
212325,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DistinctPrefixFilterIT.java,122,,"                + ""(prefix1, prefix2, prefix3, col1) VALUES(?,?,NEXT VALUE FOR ""+testSeq+"",rand())"");"
212326,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DistinctPrefixFilterIT.java,146,,"        testSkipRange(""SELECT %s prefix1 FROM ""+ testTable + "" GROUP BY prefix1 ORDER BY prefix1 DESC"", 3);"
212327,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DistinctPrefixFilterIT.java,147,,"        testSkipRange(""SELECT %s DISTINCT prefix1 FROM "" + testTable + "" ORDER BY prefix1 DESC"", 3);"
212328,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DistinctPrefixFilterIT.java,154,,"        testPlan(""SELECT DISTINCT prefix1, prefix2 FROM ""+testTableF+ "" WHERE prefix1 IN (1,2)"", true);"
212329,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DistinctPrefixFilterIT.java,156,,"        testPlan(""SELECT prefix1 FROM ""+testTableF+"" GROUP BY prefix1, TRUNC(prefix1), TRUNC(prefix2)"", true);"
212330,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DistinctPrefixFilterIT.java,160,,"        testPlan(""SELECT DISTINCT SUM(prefix1) FROM ""+testTableF+"" GROUP BY prefix1"", false);"
212331,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DistinctPrefixFilterIT.java,169,,"        testPlan(""SELECT COUNT(DISTINCT prefix1) FROM ""+testTable, true);"
212332,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DistinctPrefixFilterIT.java,252,,"        testSkipRange(""SELECT %s DISTINCT prefix1, prefix2 FROM "" + testTableF + "" WHERE prefix1 IN (1,2)"", 6);"
212333,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DistinctPrefixFilterIT.java,260,,"        testCount(""SELECT %s COUNT(DISTINCT prefix1), COUNT(DISTINCT (prefix1, prefix2)) FROM "" + testTableF + "" WHERE prefix2=2"", 3, 3);"
212334,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DropIndexedColsIT.java,111,,"      viewConn.createStatement().execute(CREATE_INDEX + viewIndex1 + "" ON "" + viewOfTable1"
212335,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DynamicColumnIT.java,88,,"                byte[] key = Bytes.toBytes(""entry1"");"
212336,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DynamicColumnWildcardIT.java,101,,"        conn.createStatement().execute(""UPSERT INTO "" + tableName +"
212337,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DynamicColumnWildcardIT.java,108,,"        ResultSet rs = conn.createStatement().executeQuery(""SELECT * FROM "" + tableName);"
212338,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DynamicColumnWildcardIT.java,125,,"                        assertEquals(""DYN1"", rmd.getColumnName(i));"
212339,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DynamicColumnWildcardIT.java,177,,"                        assertEquals(""test1"", rs.getObject(i));"
212340,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DynamicColumnWildcardIT.java,208,,"                        assertEquals(""DYN2"", rmd.getColumnName(i));"
212341,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/DynamicUpsertIT.java,68,,"        String upsertquery = ""UPSERT INTO "" + tableName"
212342,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/EmptyColumnIT.java,151,,"        tableOptions.getTablePKColumnTypes().add(""CHAR(15)"");"
212343,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/EmptyColumnIT.java,168,,"                String id = String.format(""00A0y000%07d"", rowIndex);"
212344,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/EmptyColumnIT.java,169,,"                String col1 = String.format(""a%05d"", rowIndex + rnd.nextInt(MAX_ROWS));"
212345,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/EmptyColumnIT.java,170,,"                String col2 = String.format(""b%05d"", rowIndex + rnd.nextInt(MAX_ROWS));"
212346,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/EmptyColumnIT.java,171,,"                String col3 = String.format(""c%05d"", rowIndex + rnd.nextInt(MAX_ROWS));"
212347,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/EmptyColumnIT.java,190,,"                    Lists.newArrayList(""ID"", ""COL1"", ""COL2"", ""COL3"", ""COL4"", ""COL5"", ""COL6""));"
212348,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/EmptyColumnIT.java,190,,"                    Lists.newArrayList(""ID"", ""COL1"", ""COL2"", ""COL3"", ""COL4"", ""COL5"", ""COL6""));"
212349,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/EmptyColumnIT.java,190,,"                    Lists.newArrayList(""ID"", ""COL1"", ""COL2"", ""COL3"", ""COL4"", ""COL5"", ""COL6""));"
212350,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/EmptyColumnIT.java,190,,"                    Lists.newArrayList(""ID"", ""COL1"", ""COL2"", ""COL3"", ""COL4"", ""COL5"", ""COL6""));"
212351,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/EmptyColumnIT.java,190,,"                    Lists.newArrayList(""ID"", ""COL1"", ""COL2"", ""COL3"", ""COL4"", ""COL5"", ""COL6""));"
212352,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/EmptyColumnIT.java,190,,"                    Lists.newArrayList(""ID"", ""COL1"", ""COL2"", ""COL3"", ""COL4"", ""COL5"", ""COL6""));"
212353,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/EmptyColumnIT.java,237,,"                            ""COL7"", ""COL8"", ""COL9""));"
212354,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/EmptyColumnIT.java,237,,"                            ""COL7"", ""COL8"", ""COL9""));"
212355,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/EmptyColumnIT.java,237,,"                            ""COL7"", ""COL8"", ""COL9""));"
212356,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/EmptyColumnIT.java,266,,"                    String.format(""00D0x000%s"", schemaBuilder.getDataOptions().getUniqueName());"
212357,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/EmptyColumnIT.java,281,,"            dataWriter.setUpsertColumns(Lists.newArrayList(""OID"", ""KP"", ""ID""));"
212358,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/EmptyColumnIT.java,400,,"                .newArrayList(""COLUMN_ENCODED_BYTES=0"", ""DEFAULT_COLUMN_FAMILY='Z'"")) {"
212359,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/EmptyColumnIT.java,400,,"                .newArrayList(""COLUMN_ENCODED_BYTES=0"", ""DEFAULT_COLUMN_FAMILY='Z'"")) {"
212360,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/EmptyColumnIT.java,403,,"            withTableProps.append(""MULTI_TENANT=true,"").append(additionalProps);"
212361,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/EncodeFunctionIT.java,102,,"        String ddl = ""CREATE TABLE "" + tableName + "" ( pk VARCHAR(10) NOT NULL CONSTRAINT PK PRIMARY KEY (pk))"";"
212362,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/EncodeFunctionIT.java,111,,"        ResultSet rs = conn.createStatement().executeQuery(""SELECT * FROM "" + tableName + "" WHERE pk = ENCODE(1, 'BASE62')"");"
212363,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ExecuteStatementsIT.java,73,,"            ""UPSERT INTO "" + ptsdbTableName + ""(\""DATE\"", val, host) "" +"
212364,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ExecuteStatementsIT.java,162,,"            query = ""select a_string, b_string from "" + tableName;"
212365,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ExecuteStatementsIT.java,193,,"            String upsert = ""UPSERT INTO "" + tableName + "" values (2, '"" + rowKey2 + ""', '"" + testString2+ ""') "";"
212366,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ExecuteStatementsIT.java,193,,"            String upsert = ""UPSERT INTO "" + tableName + "" values (2, '"" + rowKey2 + ""', '"" + testString2+ ""') "";"
212367,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ExecuteStatementsIT.java,202,,"            upsert = ""UPSERT INTO "" + tableName + ""(a_id, a_string, b_string) "" +"
212368,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ExplainPlanWithStatsDisabledIT.java,43,,"        conn.createStatement().execute(""upsert into "" + tableName + "" values (100,1,3)"");"
212369,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ExplainPlanWithStatsDisabledIT.java,62,,"        String sql = ""SELECT * FROM "" + tableA + "" where k >= ?"";"
212370,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ExplainPlanWithStatsEnabledIT.java,83,,"                ""CREATE INDEX "" + indexName + "" ON "" + table + "" (c1.a) INCLUDE (c2.b) "");"
212371,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ExplainPlanWithStatsEnabledIT.java,83,,"                ""CREATE INDEX "" + indexName + "" ON "" + table + "" (c1.a) INCLUDE (c2.b) "");"
212372,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ExplainPlanWithStatsEnabledIT.java,84,,"            conn.createStatement().execute(""UPDATE STATISTICS "" + indexName);"
212373,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ExplainPlanWithStatsEnabledIT.java,91,,"                    .execute(""CREATE TABLE "" + tableName"
212374,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ExplainPlanWithStatsEnabledIT.java,94,,"            conn.createStatement().execute(""upsert into "" + tableName + "" values (100,1,3)"");"
212375,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ExplainPlanWithStatsEnabledIT.java,116,,"        String sql = ""SELECT * FROM "" + tableA + "" where k >= ?"";"
212376,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ExplainPlanWithStatsEnabledIT.java,116,,"        String sql = ""SELECT * FROM "" + tableA + "" where k >= ?"";"
212377,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ExplainPlanWithStatsEnabledIT.java,279,,"        String sql = ""UPSERT INTO "" + tableA + "" SELECT * FROM "" + tableB;"
212378,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ExplainPlanWithStatsEnabledIT.java,430,,"            ddl = ""ALTER TABLE "" + table + "" SET USE_STATS_FOR_PARALLELIZATION = true"";"
212379,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ExplainPlanWithStatsEnabledIT.java,682,,"            conn.createStatement().execute(""CREATE VIEW "" + viewName + "" AS SELECT * FROM """
212380,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ExplainPlanWithStatsEnabledIT.java,682,,"            conn.createStatement().execute(""CREATE VIEW "" + viewName + "" AS SELECT * FROM """
212381,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ExplainPlanWithStatsEnabledIT.java,762,,"            String sql = ""SELECT a FROM "" + tableName + "" WHERE K >= 99"";"
212382,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ExplainPlanWithStatsEnabledIT.java,908,,"                    ""upsert into "" + multiTenantTable + "" values ('"" + tenant1 + ""',1,1,1)"");"
212383,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/FirstValueFunctionIT.java,37,,"        String ddl = ""CREATE TABLE IF NOT EXISTS "" + tableName + "" """
212384,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/FirstValueFunctionIT.java,43,,"            ""UPSERT INTO "" + tableName + "" (id, page_id, \""DATE\"", \""value\"") VALUES (1, 8, 1, 3)"");"
212385,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/FirstValueFunctionIT.java,55,,"            ""SELECT FIRST_VALUE(\""value\"") WITHIN GROUP (ORDER BY \""DATE\"" ASC) FROM "" + tableName"
212386,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/FirstValueFunctionIT.java,56,,"                + "" GROUP BY page_id"");"
212387,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/FirstValuesFunctionIT.java,40,,"        String ddl = ""CREATE TABLE IF NOT EXISTS "" + tableName + "" """
212388,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/FirstValuesFunctionIT.java,41,,"                + ""(id INTEGER NOT NULL PRIMARY KEY, page_id UNSIGNED_LONG,"""
212389,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/FirstValuesFunctionIT.java,42,,"                + "" dates INTEGER, val INTEGER)"";"
212390,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/FirstValuesFunctionIT.java,46,,"            ""UPSERT INTO "" + tableName + "" (id, page_id, dates, val) VALUES (2, 8, 1, 7)"");"
212391,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/FirstValuesFunctionIT.java,46,,"            ""UPSERT INTO "" + tableName + "" (id, page_id, dates, val) VALUES (2, 8, 1, 7)"");"
212392,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/FirstValuesFunctionIT.java,48,,"            ""UPSERT INTO "" + tableName + "" (id, page_id, dates, val) VALUES (3, 8, 2, 9)"");"
212393,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/FirstValuesFunctionIT.java,65,,"                + "" GROUP BY page_id"");"
212394,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/FirstValuesFunctionIT.java,122,,"            ""UPSERT INTO "" + tableName + "" (id, page_id, \""DATE\"", \""value\"") VALUES (5, 8, 4, 2)"");"
212395,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/FirstValuesFunctionIT.java,177,,"                + "" \""DATE\"" INTEGER, \""value\"" UNSIGNED_LONG)"";"
212396,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/FirstValuesFunctionIT.java,397,,"            ""UPSERT INTO "" + tableName + "" (id, page_id, dates, val) VALUES (4, 8, 2, 4)"");"
212397,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/FirstValuesFunctionIT.java,399,,"            ""UPSERT INTO "" + tableName + "" (id, page_id, dates, val) VALUES (5, 8, 2, 2)"");"
212398,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/FirstValuesFunctionIT.java,401,,"            ""UPSERT INTO "" + tableName + "" (id, page_id, dates, val) VALUES (6, 8, 3, 3)"");"
212399,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/FlappingLocalIndexIT.java,64,,"        String indexName = ""IDX_"" + generateUniqueName();"
212400,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/FlappingLocalIndexIT.java,69,,"            conn1.createStatement().execute(""UPSERT INTO "" + tableName + "" values('b',1,2,4,'z')"");"
212401,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/FlappingLocalIndexIT.java,69,,"            conn1.createStatement().execute(""UPSERT INTO "" + tableName + "" values('b',1,2,4,'z')"");"
212402,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/FlappingLocalIndexIT.java,71,,"            conn1.createStatement().execute(""UPSERT INTO "" + tableName + "" values('j',2,4,2,'a')"");"
212403,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/FlappingLocalIndexIT.java,72,,"            conn1.createStatement().execute(""UPSERT INTO "" + tableName + "" values('q',3,1,1,'c')"");"
212404,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/FlappingLocalIndexIT.java,74,,"            conn1.createStatement().execute(""CREATE LOCAL INDEX "" + indexName + "" ON "" + tableName + ""(v1)"");"
212405,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/FlappingLocalIndexIT.java,74,,"            conn1.createStatement().execute(""CREATE LOCAL INDEX "" + indexName + "" ON "" + tableName + ""(v1)"");"
212406,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/FlappingLocalIndexIT.java,74,,"            conn1.createStatement().execute(""CREATE LOCAL INDEX "" + indexName + "" ON "" + tableName + ""(v1)"");"
212407,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/FlappingLocalIndexIT.java,78,,"            ResultSet rs = conn1.createStatement().executeQuery(""SELECT COUNT(*) FROM "" + tableName);"
212408,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/FlappingLocalIndexIT.java,114,,"                assertEquals(strings[25 - j], rs.getString(""t_id""));"
212409,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/FlappingLocalIndexIT.java,165,,"            assertEquals(""PARALLEL "" + numRegions + ""-WAY"","
212410,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/FlappingLocalIndexIT.java,165,,"            assertEquals(""PARALLEL "" + numRegions + ""-WAY"","
212411,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/FlappingLocalIndexIT.java,167,,"            assertEquals(""RANGE SCAN "","
212412,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/FlappingLocalIndexIT.java,173,,"            assertEquals(""SERVER FILTER BY FIRST KEY ONLY"","
212413,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/FlappingLocalIndexIT.java,175,,"            assertEquals(""CLIENT MERGE SORT"","
212414,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/GroupByIT.java,80,,"            assertEquals(rs.getString(3), ""foo"");"
212415,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/GroupByIT.java,222,,"        PreparedStatement stmt = conn.prepareStatement(""upsert into "" + table + "" values(1439853462,'qa9',8.27,1439853462)"");"
212416,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ImmutableTablePropertiesIT.java,50,,"            String ddl = ""CREATE IMMUTABLE TABLE  "" + immutableDataTableFullName +"
212417,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ImmutableTablePropertiesIT.java,51,,"                    ""  (a_string varchar not null, col1 integer"" +"
212418,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,94,,"        conn.createStatement().execute(""CREATE TABLE "" + tableName"
212419,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,100,,"        conn.createStatement().execute(""upsert into "" + tableName + "" (col1, col2, id) values ('a', 'b', 'c')"");"
212420,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,193,,"            String viewDDL = ""CREATE VIEW "" + viewName + "" AS SELECT * FROM "" + tableName;"
212421,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,193,,"            String viewDDL = ""CREATE VIEW "" + viewName + "" AS SELECT * FROM "" + tableName;"
212422,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,237,,"                                .execute(""UPSERT INTO "" + tableName + "" "" + upsertBody);"
212423,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,302,,"    List<List<Object>> DEFAULT_UPSERTS = Arrays.asList(Arrays.<Object>asList(1, 2, 4, 5, 6, ""row1""),"
212424,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,303,,"            Arrays.<Object>asList(2, 3, 4, 5, 6, ""row2""),"
212425,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,304,,"            Arrays.<Object>asList(2, 3, 6, 4, 5, ""row3""),"
212426,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,305,,"            Arrays.<Object>asList(6, 5, 4, 3, 2, ""row4""));"
212427,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,582,,"            ResultSet rs = stmt.executeQuery(""SELECT COUNT(*) FROM SYSTEM.CATALOG WHERE "" +"
212428,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,634,,"            stmt.execute(""CREATE TABLE "" + fullTableName + ""(\n"" +"
212429,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,660,,"            stmt.execute(""CREATE VIEW IF NOT EXISTS "" + tenantView + "" AS SELECT * FROM "" + fullViewName );"
212430,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,702,,"                            "" CONSTRAINT PKVIEW PRIMARY KEY\n"" + "" (\n"" + "" ID1, ID2 DESC\n"" + "")) "" +"
212431,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,712,,"                            "" CONSTRAINT PKVIEW PRIMARY KEY\n"" + "" (ID1, ID2)) "" +"
212432,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,733,,"                viewConn.createStatement().execute(""UPSERT INTO "" + tenantView + ""(ID1, ID2) VALUES "" +"
212433,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,740,,"                        ""SELECT * FROM "" + tenantView + "" WHERE (ID1, ID2) "" +"
212434,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,761,,"                stmt.execute(""DELETE FROM "" + tenantView + "" WHERE (ID2, ID1) IN "" +"
212435,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,761,,"                stmt.execute(""DELETE FROM "" + tenantView + "" WHERE (ID2, ID1) IN "" +"
212436,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,821,,"                rs = stmt.executeQuery(""SELECT COUNT(*) FROM "" + tenantView);"
212437,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,845,,"                        ""SELECT * FROM "" + tenantView + "" WHERE (ID1, ID2) IN "" +"
212438,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,934,,"            assertEquals(""PARALLEL 1-WAY"","
212439,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,936,,"            assertEquals(""RANGE SCAN "","
212440,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,943,,"            assertTrue(queryPlan.getExplainPlan().toString().contains(""CLIENT PARALLEL 1-WAY RANGE SCAN OVER""));"
212441,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,1007,,"                    ""((1, 1),"" +"
212442,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,1008,,"                    ""(2, 2))"");"
212443,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,1041,,"                        "" AS SELECT * FROM "" + tableName + "" WHERE KEY_PREFIX = 'ABC'"");"
212444,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,1043,,"                viewConn.createStatement().execute(""UPSERT INTO "" + tenantView + ""(DOUBLE1, INT1) VALUES "" +"
212445,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,1049,,"                ResultSet rs = stmt.executeQuery(""SELECT COUNT(*) FROM "" + tenantView + "" WHERE (INT1, DOUBLE1) IN "" +"
212446,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,1151,,"                viewConn.createStatement().execute(""UPSERT INTO "" + tenantView + ""(ID1, ID2, ID5, ID4) VALUES "" +"
212447,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,1152,,"                        ""(12, 8, 7, 6)"");"
212448,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,1154,,"                        ""(13, 9, 13, 9)"");"
212449,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,1157,,"                ResultSet rs = stmt.executeQuery(""SELECT ID1, ID2, ID5, ID4 FROM "" + tenantView +"
212450,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,1211,,"                stmt.execute(""CREATE VIEW IF NOT EXISTS "" + tenantView + ""(ID1 BIGINT NOT NULL, ID2 BIGINT NOT NULL, ID4 BIGINT "" +"
212451,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,1223,,"                        ""(13, 13))"");"
212452,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,1243,,"                        ""(10, 12))"");"
212453,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,1285,,"                stmt.execute(""CREATE INDEX "" + tenantIndexView + "" ON "" + tenantView + "" (ID5) INCLUDE (ID4, ID1)"");"
212454,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,1285,,"                stmt.execute(""CREATE INDEX "" + tenantIndexView + "" ON "" + tenantView + "" (ID5) INCLUDE (ID4, ID1)"");"
212455,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InListIT.java,1547,,"                preparedStmt = conn.prepareStatement(""SELECT * FROM "" + view + "" WHERE (ID2, ID1) IN ((1, 1),(2, 2))"");"
212456,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InQueryIT.java,91,,"        String query = ""SELECT entity_id FROM "" + tableName + "" WHERE a_date IN (?,?) AND a_integer < 4"";"
212457,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexExtendedIT.java,237,,"            conn.createStatement().execute(""upsert into "" + dataTableFullName + "" (pk1, pk2, pk3) values ('a', '1', '1')"");"
212458,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexRepairRegionScannerIT.java,196,,"        conn.createStatement().execute(""CREATE TABLE "" + dataTableFullName"
212459,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexRepairRegionScannerIT.java,197,,"            + "" (ID INTEGER NOT NULL PRIMARY KEY, VAL1 INTEGER, VAL2 INTEGER) "" + tableDDLOptions);"
212460,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexRepairRegionScannerIT.java,199,,"            conn.prepareStatement(""UPSERT INTO "" + dataTableFullName + "" VALUES(?,?,?)"");"
212461,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexRepairRegionScannerIT.java,199,,"            conn.prepareStatement(""UPSERT INTO "" + dataTableFullName + "" VALUES(?,?,?)"");"
212462,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexRepairRegionScannerIT.java,208,,"            ""CREATE INDEX %s ON %s (VAL1) INCLUDE (VAL2)"", indexTableName, dataTableFullName));"
212463,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexRepairRegionScannerIT.java,269,,"            expectedStatus, verifyType, disableLoggingType, ""-fi"");"
212464,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexScrutinyToolIT.java,190,,"        upsertRow(dataTableUpsertStmt, 1, ""name-1"", 94010);"
212465,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexScrutinyToolIT.java,191,,"        upsertRow(dataTableUpsertStmt, 2, ""name-2"", 95123);"
212466,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolForNonTxGlobalIndexIT.java,219,,"            conn.createStatement().execute(""CREATE TABLE "" + dataTableFullName"
212467,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolForNonTxGlobalIndexIT.java,222,,"            String upsertStmt = ""UPSERT INTO "" + dataTableFullName + "" VALUES(?,?,?)"";"
212468,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolForNonTxGlobalIndexIT.java,276,,"                    .execute(""upsert into "" + dataTableFullName + "" values (1, 'Phoenix', 'A')"");"
212469,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolForNonTxGlobalIndexIT.java,348,,"                            + "" (ID INTEGER NOT NULL PRIMARY KEY, NAME VARCHAR, ZIP INTEGER) """
212470,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolForNonTxGlobalIndexIT.java,353,,"            String upsertQuery = String.format(""UPSERT INTO %s VALUES(?, ?, ?)"", dataTableFullName);"
212471,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolForNonTxGlobalIndexIT.java,417,,"                            ""CREATE INDEX %s ON %s (NAME) INCLUDE (ZIP) ASYNC "" + this.indexDDLOptions, indexTableName, dataTableFullName);"
212472,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolForNonTxGlobalIndexIT.java,552,,"            conn.createStatement().execute(""CREATE VIEW "" + viewFullName + "" AS SELECT * FROM "" + dataTableFullName);"
212473,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolForNonTxGlobalIndexIT.java,552,,"            conn.createStatement().execute(""CREATE VIEW "" + viewFullName + "" AS SELECT * FROM "" + dataTableFullName);"
212474,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolForNonTxGlobalIndexIT.java,559,,"            TestUtil.addCoprocessor(conn, ""_IDX_"" + dataTableFullName, IndexToolIT.MutationCountingRegionObserver.class);"
212475,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolForNonTxGlobalIndexIT.java,801,,"                    ""CREATE INDEX ""+viewIndexName+"" ON ""+viewFullName+"" (val3) INCLUDE(val5) "" + this.indexDDLOptions));"
212476,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolForNonTxGlobalIndexIT.java,826,,"            conn.createStatement().execute(""DELETE FROM ""+viewFullName+"" WHERE key1=4"");"
212477,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolForNonTxGlobalIndexIT.java,835,,"                        null, 0, IndexTool.IndexVerifyType.ONLY, ""-st"", String.valueOf(t0),""-et"", String.valueOf(t2));"
212478,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolForNonTxGlobalIndexIT.java,835,,"                        null, 0, IndexTool.IndexVerifyType.ONLY, ""-st"", String.valueOf(t0),""-et"", String.valueOf(t2));"
212479,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolForNonTxGlobalIndexIT.java,1353,,"                    ""CREATE TABLE IF NOT EXISTS "" + dataTableFullName + "" (\n"""
212480,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolForNonTxGlobalIndexIT.java,1361,,"                    ""CREATE VIEW IF NOT EXISTS "" + view1FullName + "" (\n"""
212481,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolForNonTxGlobalIndexIT.java,1364,,"                            + "" VIEW_COLA\n"" + "" )) AS \n"" + "" SELECT * FROM "" + dataTableFullName"
212482,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolForNonTxGlobalIndexIT.java,1364,,"                            + "" VIEW_COLA\n"" + "" )) AS \n"" + "" SELECT * FROM "" + dataTableFullName"
212483,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolForPartialBuildIT.java,180,,"                assertEquals(""xxUNAME"" + i*1000 + ""_xyz"", rs.getString(1));"
212484,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolForPartialBuildIT.java,180,,"                assertEquals(""xxUNAME"" + i*1000 + ""_xyz"", rs.getString(1));"
212485,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolIT.java,231,,"                    ""CREATE TABLE "" + dataTableFullName"
212486,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolIT.java,253,,"                                    .executeQuery(""SELECT count(*) from "" + dataTableFullName);"
212487,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolIT.java,255,,"                    assertEquals(""Unexpected row count "", 2, rs.getInt(1));"
212488,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolTimeRangeIT.java,138,,"        String [] args = {""--delete-all-and-rebuild"","
212489,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolTimeRangeIT.java,139,,"                ""--start-time"", myClock.getRelativeTimeAsString(1),"
212490,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolTimeRangeIT.java,140,,"                ""--end-time"", myClock.getRelativeTimeAsString(9)};"
212491,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexVerificationOldDesignIT.java,96,,"            conn.createStatement().execute(""upsert into "" + indexTableFullName + "" values ('Phoenix5', 6,'G')"");"
212492,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InstrFunctionIT.java,65,,"        initTable(conn, tableName, ""ASC"", ""abcdefghijkl"",""fgh"");"
212493,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InstrFunctionIT.java,65,,"        initTable(conn, tableName, ""ASC"", ""abcdefghijkl"",""fgh"");"
212494,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InstrFunctionIT.java,65,,"        initTable(conn, tableName, ""ASC"", ""abcdefghijkl"",""fgh"");"
212495,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InstrFunctionIT.java,74,,"        initTable(conn, tableName, ""DESC"", ""abcdefghijkl"",""fgh"");"
212496,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InstrFunctionIT.java,138,,"        initTable(conn, tableName, ""ASC"", ""asdf"", ""sdf"");"
212497,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/InstrFunctionIT.java,160,,"        query = ""SELECT name FROM "" + tableName + "" WHERE INSTR(name, substr) = 2"";"
212498,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IntArithmeticIT.java,61,,"        String query = ""SELECT entity_id FROM "" + tableName + "" where A_INTEGER - 4  <= 0"";"
212499,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/IsNullIT.java,39,,"        String upsert = ""UPSERT INTO "" + tableName + "" VALUES(4,2)"";"
212500,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LastValueFunctionIT.java,37,,"        String ddl = ""CREATE TABLE IF NOT EXISTS "" + tableName "
212501,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LastValueFunctionIT.java,38,,"                + ""(id INTEGER NOT NULL PRIMARY KEY, page_id UNSIGNED_LONG,"""
212502,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LastValueFunctionIT.java,42,,"        conn.createStatement().execute(""UPSERT INTO "" + tableName + "" (id, page_id, \""DATE\"", \""value\"") """
212503,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LastValueFunctionIT.java,42,,"        conn.createStatement().execute(""UPSERT INTO "" + tableName + "" (id, page_id, \""DATE\"", \""value\"") """
212504,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LastValueFunctionIT.java,57,,"                ""SELECT LAST_VALUE(\""value\"") WITHIN GROUP (ORDER BY \""DATE\"" ASC) FROM "" + tableName + "" GROUP BY page_id"");"
212505,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LastValueFunctionIT.java,57,,"                ""SELECT LAST_VALUE(\""value\"") WITHIN GROUP (ORDER BY \""DATE\"" ASC) FROM "" + tableName + "" GROUP BY page_id"");"
212506,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LastValueFunctionIT.java,75,,"        conn.createStatement().execute(""UPSERT INTO "" + tableName + "" (id, page_id, \""DATE\"", \""value\"") VALUES (1, 8, 1, 3)"");"
212507,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LastValueFunctionIT.java,76,,"        conn.createStatement().execute(""UPSERT INTO "" + tableName + "" (id, page_id, \""DATE\"", \""value\"") VALUES (2, 8, 2, 7)"");"
212508,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LastValueFunctionIT.java,77,,"        conn.createStatement().execute(""UPSERT INTO "" + tableName + "" (id, page_id, \""DATE\"", \""value\"") VALUES (3, 8, 3, 9)"");"
212509,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LastValueFunctionIT.java,97,,"                + "" \""DATE\"" UNSIGNED_INT, \""value\"" UNSIGNED_INT)"";"
212510,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LastValuesFunctionIT.java,40,,"        String ddl = ""CREATE TABLE IF NOT EXISTS "" + tableName + "" """
212511,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LastValuesFunctionIT.java,41,,"                + ""(id INTEGER NOT NULL PRIMARY KEY, page_id UNSIGNED_LONG,"""
212512,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LastValuesFunctionIT.java,42,,"                + "" dates INTEGER, val INTEGER)"";"
212513,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LastValuesFunctionIT.java,46,,"            ""UPSERT INTO "" + tableName + "" (id, page_id, dates, val) VALUES (2, 8, 1, 7)"");"
212514,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LastValuesFunctionIT.java,46,,"            ""UPSERT INTO "" + tableName + "" (id, page_id, dates, val) VALUES (2, 8, 1, 7)"");"
212515,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LastValuesFunctionIT.java,48,,"            ""UPSERT INTO "" + tableName + "" (id, page_id, dates, val) VALUES (3, 8, 2, 9)"");"
212516,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LastValuesFunctionIT.java,65,,"                + "" GROUP BY page_id"");"
212517,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LastValuesFunctionIT.java,122,,"            ""UPSERT INTO "" + tableName + "" (id, page_id, \""DATE\"", \""value\"") VALUES (5, 8, 4, 2)"");"
212518,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LastValuesFunctionIT.java,177,,"                + "" \""DATE\"" INTEGER, \""value\"" UNSIGNED_LONG)"";"
212519,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LastValuesFunctionIT.java,397,,"            ""UPSERT INTO "" + tableName + "" (id, page_id, dates, val) VALUES (4, 8, 2, 4)"");"
212520,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LastValuesFunctionIT.java,399,,"            ""UPSERT INTO "" + tableName + "" (id, page_id, dates, val) VALUES (5, 8, 2, 2)"");"
212521,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LastValuesFunctionIT.java,401,,"            ""UPSERT INTO "" + tableName + "" (id, page_id, dates, val) VALUES (6, 8, 3, 3)"");"
212522,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LikeExpressionIT.java,47,,"            ddl = ""CREATE TABLE "" + tableName + "" (k VARCHAR NOT NULL PRIMARY KEY, i INTEGER)"";"
212523,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LikeExpressionIT.java,62,,"            ""UPSERT INTO "" + tableName + "" VALUES (?, ?)"");"
212524,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LikeExpressionIT.java,107,,"                ""SELECT * FROM "" + table + "" WHERE k1 LIKE '%'"");"
212525,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LikeExpressionIT.java,310,,"                stmt.setString(2, i + ""col1"");"
212526,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LikeExpressionIT.java,311,,"                stmt.setString(3, i + ""col2"");"
212527,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LikeExpressionIT.java,312,,"                stmt.setString(4, i + ""col3"");"
212528,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LikeExpressionIT.java,313,,"                stmt.setString(5, i + ""col4"");"
212529,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LikeExpressionIT.java,319,,"                    ""select cf.* from "" + tableName"
212530,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LikeExpressionIT.java,320,,"                            + "" where cf.col1 like '%col1%' limit 10 offset 2"";"
212531,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LikeExpressionIT.java,326,,"                assertTrue(rs.getString(""COL1"").contains(""col1""));"
212532,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LikeExpressionIT.java,327,,"                assertTrue(rs.getString(""COL2"").contains(""col2""));"
212533,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LikeExpressionIT.java,340,,"                assertTrue(rs.getString(""COL3"").contains(""col3""));"
212534,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LikeExpressionIT.java,341,,"                assertTrue(rs.getString(""COL4"").contains(""col4""));"
212535,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LocalIndexSplitMergeIT.java,109,,"                    .execute(""CREATE LOCAL INDEX "" + indexName + "" ON "" + tableName + ""(v1)"");"
212536,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LocalIndexSplitMergeIT.java,138,,"                    tIdColumnValues[j] = rs.getString(""t_id"");"
212537,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LocalIndexSplitMergeIT.java,158,,"                assertEquals(""RANGE SCAN "","
212538,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LocalIndexSplitMergeIT.java,163,,"                assertEquals(""SERVER FILTER BY FIRST KEY ONLY"","
212539,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LocalIndexSplitMergeIT.java,165,,"                assertEquals(""CLIENT MERGE SORT"","
212540,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LogicalTableNameBaseIT.java,103,,"                new StringBuilder(tableName).append(""-Snapshot"").toString();"
212541,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LogicalTableNameBaseIT.java,138,,"                Put put = new Put(ByteUtil.concat(Bytes.toBytes(""PK3"")));"
212542,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LogicalTableNameBaseIT.java,141,,"                put.addColumn(QueryConstants.DEFAULT_COLUMN_FAMILY_BYTES, Bytes.toBytes(""V1""), Bytes.toBytes(""V13""));"
212543,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LogicalTableNameExtendedIT.java,62,,"        String tableName = ""TBL_"" + generateUniqueName();"
212544,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LogicalTableNameExtendedIT.java,71,,"                conn.createStatement().execute(""CREATE SCHEMA IF NOT EXISTS "" + schemaName);"
212545,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LogicalTableNameExtendedIT.java,76,,"                ResultSet rs = conn2.createStatement().executeQuery(""SELECT * FROM "" + (schemaName + ""."" + view2IndexName1) + "" WHERE \"":PK1\""='PK10'"");"
212546,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LogicalTableNameIT.java,99,,"        String tableName = ""TBL_"" + generateUniqueName();"
212547,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LogicalTableNameIT.java,100,,"        String indexName = ""IDX_"" + generateUniqueName();"
212548,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/LogicalTableNameIT.java,119,,"                ResultSet rs = conn2.createStatement().executeQuery(""SELECT * FROM "" + fullIndexName + "" WHERE \"":PK1\""='PK10'"");"
212549,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/MD5FunctionIT.java,50,,"      byte[] first = MessageDigest.getInstance(""MD5"").digest(testString.getBytes());"
212550,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/MetaDataEndpointImplIT.java,72,,"            ""CREATE TABLE IF NOT EXISTS "" + baseTable + ""  ("" + "" PK2 VARCHAR NOT NULL, V1 VARCHAR, V2 VARCHAR """
212551,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/MetaDataEndpointImplIT.java,72,,"            ""CREATE TABLE IF NOT EXISTS "" + baseTable + ""  ("" + "" PK2 VARCHAR NOT NULL, V1 VARCHAR, V2 VARCHAR """
212552,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/MetaDataEndpointImplIT.java,72,,"            ""CREATE TABLE IF NOT EXISTS "" + baseTable + ""  ("" + "" PK2 VARCHAR NOT NULL, V1 VARCHAR, V2 VARCHAR """
212553,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/MetaDataEndpointImplIT.java,73,,"                + "" CONSTRAINT NAME_PK PRIMARY KEY (PK2)"" + "" )"";"
212554,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/MetaDataEndpointImplIT.java,76,,"        conn.createStatement().execute(""CREATE VIEW "" + rightChild + "" AS SELECT * FROM "" + baseTable);"
212555,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/MetaDataEndpointImplIT.java,98,,"        assertColumnNamesEqual(PhoenixRuntime.getTable(conn, childMostView.getName().getString()), ""PK2"", ""V1"", ""V2"", ""CARRIER"", ""DROPPED_CALLS"");"
212556,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/MetaDataEndpointImplIT.java,98,,"        assertColumnNamesEqual(PhoenixRuntime.getTable(conn, childMostView.getName().getString()), ""PK2"", ""V1"", ""V2"", ""CARRIER"", ""DROPPED_CALLS"");"
212557,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/MetaDataEndpointImplIT.java,114,,"            String view1DDL = ""CREATE VIEW IF NOT EXISTS "" + view + "
212558,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/MetaDataEndpointImplIT.java,221,,"                conn.createStatement().execute(""ALTER TABLE "" + tableName + "" ADD V3 integer"");"
212559,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/MetaDataEndpointImplIT.java,292,,"            .put(""PK2"", ""VARCHAR"")"
212560,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/MultiCfQueryExecIT.java,114,,"        String query = ""SELECT F.RESPONSE_TIME,G.RESPONSE_TIME from "" + fullTableName + "" where ID = '000000000000002'"";"
212561,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/MultiCfQueryExecIT.java,169,,"            List<KeyRange> splits = getAllSplits(conn, fullTableName, ""e.cpu_utilization IS NOT NULL"", ""COUNT(*)"");"
212562,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/MultiCfQueryExecIT.java,192,,"            String upsert = ""UPSERT INTO "" + fullTableName + ""(K1,K2,A) VALUES('"" + Character.toString((char)('A' + i % 10))"
212563,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/MultiCfQueryExecIT.java,349,,"                    ""CREATE TABLE IF NOT EXISTS "" + tableName + "" (pk1 INTEGER NOT NULL PRIMARY KEY, x.v1 VARCHAR, y.v2 INTEGER)"";"
212564,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/MultiCfQueryExecIT.java,354,,"            ResultSet rs = conn.createStatement().executeQuery(""SELECT x.* FROM ""+tableName+"" WHERE y.v2 = 2"");"
212565,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/MultiCfQueryExecIT.java,356,,"            assertEquals(""test"", rs.getString(1));"
212566,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/MultiCfQueryExecIT.java,522,,"                assertEquals(rs.getString(""COL1""), ""222"");"
212567,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/MultiCfQueryExecIT.java,523,,"                assertEquals(rs.getString(""COL2""), ""AAA"");"
212568,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/MultiCfQueryExecIT.java,523,,"                assertEquals(rs.getString(""COL2""), ""AAA"");"
212569,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/MutationStateIT.java,77,,"                conn.prepareStatement(""upsert into "" + fullTableName"
212570,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/MutationStateIT.java,179,,"                        + ""     ELEMENT_ID,\n"""
212571,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/MutationStateIT.java,180,,"                        + ""     ELEMENT_TYPE,\n"""
212572,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/MutationStateIT.java,181,,"                        + ""     TYPE_ID,\n"""
212573,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/MutationStateIT.java,249,,"                ""UPSERT INTO "" + fullTableName + ""\n"""
212574,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/MutationStateIT.java,316,,"        String ddl = ""CREATE TABLE "" + tableName + "" (V BIGINT PRIMARY KEY, K BIGINT)"";"
212575,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/MutationStateIT.java,429,,"        stmt.setString(1, ""ZZZZ"");"
212576,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/MutationStateIT.java,430,,"        stmt.setString(2, ""YYYY"");"
212577,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/NativeHBaseTypesIT.java,163,,"        String query = ""SELECT uint_key, ulong_key, string_key FROM "" + tableName + "" WHERE uint_key > 20 and ulong_key >= 400"";"
212578,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/NoLookbackMutableIndexExtendedIT.java,97,,"                        { false, ""TEPHRA"", false }, { false, ""TEPHRA"", true },"
212579,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/NotQueryIT.java,140,,"        ""FROM "" + tableName + "" WHERE organization_id=? and a_integer != 1 and a_integer <= 2"";"
212580,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/NthValueFunctionIT.java,39,,"        String ddl = ""CREATE TABLE IF NOT EXISTS "" + nthValue + "" """
212581,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/NthValueFunctionIT.java,40,,"                + ""(id INTEGER NOT NULL PRIMARY KEY, page_id UNSIGNED_LONG,"""
212582,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/NthValueFunctionIT.java,41,,"                + "" dates INTEGER, val INTEGER)"";"
212583,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/NthValueFunctionIT.java,45,,"            ""UPSERT INTO "" + nthValue + "" (id, page_id, dates, val) VALUES (2, 8, 1, 7)"");"
212584,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/NthValueFunctionIT.java,45,,"            ""UPSERT INTO "" + nthValue + "" (id, page_id, dates, val) VALUES (2, 8, 1, 7)"");"
212585,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/NthValueFunctionIT.java,47,,"            ""UPSERT INTO "" + nthValue + "" (id, page_id, dates, val) VALUES (3, 8, 2, 9)"");"
212586,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/NthValueFunctionIT.java,56,,"                + "" GROUP BY page_id"");"
212587,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/NthValueFunctionIT.java,136,,"                + "" \""DATE\"" INTEGER, \""value\"" UNSIGNED_LONG)"";"
212588,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/NthValueFunctionIT.java,308,,"            ""UPSERT INTO "" + nthValue + "" (id, page_id, dates, val) VALUES (4, 8, 2, 4)"");"
212589,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/NthValueFunctionIT.java,310,,"            ""UPSERT INTO "" + nthValue + "" (id, page_id, dates, val) VALUES (5, 8, 2, 2)"");"
212590,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/NthValueFunctionIT.java,312,,"            ""UPSERT INTO "" + nthValue + "" (id, page_id, dates, val) VALUES (6, 8, 3, 3)"");"
212591,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/NumericArithmeticIT.java,61,,"        String query = ""SELECT entity_id FROM "" + tableName + "" where A_INTEGER + X_DECIMAL > 11"";"
212592,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/NumericArithmeticIT.java,297,,"            assertEquals(rs.getString(""B_string""), B_VALUE);"
212593,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OnDuplicateKeyIT.java,83,,"        String ddl = "" create table "" + tableName + ""(pk varchar primary key, counter1 bigint, counter2 smallint)"";"
212594,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OnDuplicateKeyIT.java,86,,"        String dml = ""UPSERT INTO "" + tableName + "" VALUES('a',0) ON DUPLICATE KEY UPDATE counter1 = counter1 + 1"";"
212595,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OnDuplicateKeyIT.java,86,,"        String dml = ""UPSERT INTO "" + tableName + "" VALUES('a',0) ON DUPLICATE KEY UPDATE counter1 = counter1 + 1"";"
212596,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OnDuplicateKeyIT.java,90,,"        ResultSet rs = conn.createStatement().executeQuery(""SELECT * FROM "" + tableName + "" WHERE counter1 >= 0"");"
212597,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OnDuplicateKeyIT.java,90,,"        ResultSet rs = conn.createStatement().executeQuery(""SELECT * FROM "" + tableName + "" WHERE counter1 >= 0"");"
212598,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OnDuplicateKeyIT.java,127,,"        assertEquals(""eee"",rs.getString(5));"
212599,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OrderByIT.java,52,,"            String ddl = ""CREATE TABLE "" + tableName +"
212600,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OrderByIT.java,53,,"                    ""  (a_string varchar not null, col1 integer"" +"
212601,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OrderByIT.java,54,,"                    ""  CONSTRAINT pk PRIMARY KEY (a_string))\n"";"
212602,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OrderByIT.java,57,,"            String dml = ""UPSERT INTO "" + tableName + "" VALUES(?, ?)"";"
212603,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OrderByIT.java,57,,"            String dml = ""UPSERT INTO "" + tableName + "" VALUES(?, ?)"";"
212604,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OrderByIT.java,548,,"            assertResultSet(rs, new Object[][]{{""a13""},{""a23""},{""a33""},{""b13""},{""b23""},{""b33""}});"
212605,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OrderByIT.java,548,,"            assertResultSet(rs, new Object[][]{{""a13""},{""a23""},{""a33""},{""b13""},{""b23""},{""b33""}});"
212606,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OrderByIT.java,548,,"            assertResultSet(rs, new Object[][]{{""a13""},{""a23""},{""a33""},{""b13""},{""b23""},{""b33""}});"
212607,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OrderByIT.java,548,,"            assertResultSet(rs, new Object[][]{{""a13""},{""a23""},{""a33""},{""b13""},{""b23""},{""b33""}});"
212608,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OrderByIT.java,548,,"            assertResultSet(rs, new Object[][]{{""a13""},{""a23""},{""a33""},{""b13""},{""b23""},{""b33""}});"
212609,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OrderByIT.java,548,,"            assertResultSet(rs, new Object[][]{{""a13""},{""a23""},{""a33""},{""b13""},{""b23""},{""b33""}});"
212610,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OrderByIT.java,554,,"            sql = ""select sub from (select substr(pk2,0,3) sub,cast (count(pk3) as bigint) cnt from ""+tableName+"" t where pk1 > 'a10' group by v1 ,pk2 order by count(pk3),t.pk2 limit 10) a order by cnt,sub"";"
212611,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OrderByIT.java,556,,"            assertResultSet(rs, new Object[][]{{""a12""},{""a22""},{""a32""},{""b12""},{""b22""},{""b32""}});"
212612,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OrderByIT.java,556,,"            assertResultSet(rs, new Object[][]{{""a12""},{""a22""},{""a32""},{""b12""},{""b22""},{""b32""}});"
212613,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OrderByIT.java,556,,"            assertResultSet(rs, new Object[][]{{""a12""},{""a22""},{""a32""},{""b12""},{""b22""},{""b32""}});"
212614,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OrderByIT.java,556,,"            assertResultSet(rs, new Object[][]{{""a12""},{""a22""},{""a32""},{""b12""},{""b22""},{""b32""}});"
212615,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OrderByIT.java,556,,"            assertResultSet(rs, new Object[][]{{""a12""},{""a22""},{""a32""},{""b12""},{""b22""},{""b32""}});"
212616,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OrderByIT.java,556,,"            assertResultSet(rs, new Object[][]{{""a12""},{""a22""},{""a32""},{""b12""},{""b22""},{""b32""}});"
212617,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OrderByIT.java,563,,"            sql = ""select sub from (select substr(pk2,0,3) sub,cast (count(pk3) as bigint) cnt from ""+tableName+"" t where pk1 > 'a10' group by v1 ,pk2 order by count(pk3) desc,t.pk2 desc limit 10) a ""+"
212618,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OrderByIT.java,582,,"            sql = ""select pk3 from (select pk3,pk2,pk1 from ""+tableName+"" t where v1 > 'a10' order by t.pk1,t.pk2 limit 10) a where pk3 > 'a10' order by pk1,pk2,pk3"";"
212619,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OrderByIT.java,586,,"            sql = ""select sub from (select substr(pk3,0,3) sub,pk2,pk1 from ""+tableName+"" t where v1 > 'a10' order by t.pk1,t.pk2 limit 10) a where sub > 'a10' order by pk1,pk2,sub"";"
212620,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OrphanViewToolIT.java,69,,"    private static final String filePath = ""/tmp/"";"
212621,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OrphanViewToolIT.java,86,,"    private static final String deleteTableRows = ""DELETE FROM "" + SYSTEM_CATALOG_NAME +"
212622,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OrphanViewToolIT.java,87,,"            "" WHERE "" + TABLE_SCHEM + "" %s AND "" +"
212623,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OrphanViewToolIT.java,87,,"            "" WHERE "" + TABLE_SCHEM + "" %s AND "" +"
212624,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OrphanViewToolIT.java,88,,"            TABLE_TYPE + "" = '"" + PTableType.TABLE.getSerializedValue() + ""'"";"
212625,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OrphanViewToolIT.java,91,,"    private static final String countAllViewsQuery = ""SELECT COUNT(*) FROM "" + SYSTEM_CATALOG_NAME +"
212626,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OrphanViewToolIT.java,102,,"            LINK_TYPE + "" = "" + PTable.LinkType.CHILD_TABLE.getSerializedValue();"
212627,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/OrphanViewToolIT.java,169,,"                baseTableSchema == null ? ""IS NULL"" : "" = '"" + baseTableSchema + ""'""));"
212628,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ParallelIteratorsIT.java,101,,"        assertEquals(""Unexpected number of splits: "" + keyRanges, 7, keyRanges.size());"
212629,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ParameterizedIndexUpgradeToolIT.java,172,,"        String mockTableOne = ""TEST."" + generateUniqueName();"
212630,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ParameterizedIndexUpgradeToolIT.java,174,,"        String mockTableTwo = ""TEST1."" + generateUniqueName();"
212631,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ParameterizedIndexUpgradeToolIT.java,190,,"        conn.createStatement().execute(""CREATE TABLE "" + mockTableOne + "" (id bigint NOT NULL """
212632,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ParameterizedIndexUpgradeToolIT.java,190,,"        conn.createStatement().execute(""CREATE TABLE "" + mockTableOne + "" (id bigint NOT NULL """
212633,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ParameterizedIndexUpgradeToolIT.java,215,,"        conn.createStatement().execute(""CREATE VIEW "" + mockOneViewOne + "" (view_column varchar) """
212634,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ParameterizedIndexUpgradeToolIT.java,240,,"        conn.createStatement().execute(""CREATE INDEX "" + indexOneMockOneViewOne + "" ON """
212635,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ParameterizedIndexUpgradeToolIT.java,240,,"        conn.createStatement().execute(""CREATE INDEX "" + indexOneMockOneViewOne + "" ON """
212636,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ParameterizedIndexUpgradeToolIT.java,263,,"            INDEXES_LIST_NAMESPACE[0] = ""TEST:"" + indexOneMockOne;"
212637,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/PhoenixRowTimestampFunctionIT.java,134,,"            String dml = ""UPSERT INTO "" + tableName + "" (PK1, PK2, KV1, KV2) VALUES (?, ?, ?, ?)"";"
212638,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/PhoenixRowTimestampFunctionIT.java,142,,"                    stmt.setString(3, ""KV1_"" + idValue);"
212639,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/PhoenixRowTimestampFunctionIT.java,143,,"                    stmt.setString(4, ""KV2_"" + idValue);"
212640,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/PhoenixRowTimestampFunctionIT.java,176,,"            String dql = ""SELECT PHOENIX_ROW_TIMESTAMP() FROM "" + tableName;"
212641,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/PhoenixRowTimestampFunctionIT.java,332,,"                    "" WHERE PHOENIX_ROW_TIMESTAMP() > PK2 "";"
212642,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/PhoenixRowTimestampFunctionIT.java,403,,"            String sql = ""SELECT COUNT(*) FROM "" + tableName +"
212643,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/PhoenixRuntimeIT.java,104,,"        conn.createStatement().execute(""UPSERT INTO "" + tableName + "" VALUES('"" + t1 + ""','x')"");"
212644,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/PhoenixRuntimeIT.java,104,,"        conn.createStatement().execute(""UPSERT INTO "" + tableName + "" VALUES('"" + t1 + ""','x')"");"
212645,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/PhoenixTTLToolIT.java,103,,"        String ddl = ""CREATE TABLE "" + tableName +"
212646,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/PhoenixTTLToolIT.java,124,,"        String indexTable1 = generateUniqueName() + ""_IDX"";"
212647,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/PhoenixTTLToolIT.java,131,,"        String indexTable = ""_IDX_"" + baseTableFullName;"
212648,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/PhoenixTTLToolIT.java,145,,"                    String.format(VIEW_INDEX_DDL, indexTable1, globalViewName, ""A,B""));"
212649,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/PhoenixTTLToolIT.java,147,,"                    String.format(VIEW_INDEX_DDL, indexTable2, globalViewName, ""C,D""));"
212650,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/PhoenixTTLToolIT.java,176,,"            int status = phoenixTtlTool.run(new String[]{""-runfg"", ""-a""});"
212651,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/PhoenixTTLToolIT.java,299,,"            String ddl = ""CREATE VIEW %s (PK1 BIGINT PRIMARY KEY, "" +"
212652,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/PhoenixTTLToolIT.java,300,,"                    ""A BIGINT, B BIGINT, C BIGINT, D BIGINT)"" +"
212653,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/PhoenixTTLToolIT.java,301,,"                    "" AS SELECT * FROM "" + baseTableFullName + "" WHERE ID ='%s' PHOENIX_TTL = %d"";"
212654,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/PointInTimeQueryIT.java,66,,"            ""upsert into "" + tableName +"
212655,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/PrimitiveTypeIT.java,54,,"        String query = ""SELECT l FROM "" + tableName + "" where l > 1.5"";"
212656,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ProductMetricsIT.java,389,,"        String query = ""SELECT count(1), feature FROM ""+tablename+"" WHERE organization_id=? AND \""DATE\"" >= to_date(?) AND \""DATE\"" <= to_date(?) GROUP BY feature HAVING 1=1"";"
212657,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ProductMetricsIT.java,523,,"        String query = ""SELECT round(\""DATE\"",'hour') FROM ""+tablename+"" WHERE organization_id=?"";"
212658,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ProductMetricsIT.java,1200,,"        String query = ""SELECT feature,unique_users FROM ""+tablename+"" WHERE organization_id=? AND \""DATE\"" >= to_date(?) AND feature > ?"";"
212659,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ProductMetricsIT.java,1385,,"                ""FROM "" + tablename+"
212660,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ProductMetricsIT.java,1386,,"                "" WHERE organization_id=? "" +"
212661,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/PropertiesInSyncIT.java,122,,"                        + "" on "" + tableName + ""(name) """
212662,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/PropertiesInSyncIT.java,185,,"                conn.createStatement().execute(""alter table "" + tableName"
212663,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryDatabaseMetaDataIT.java,139,,"            assertEquals(rs.getString(""TABLE_NAME""), viewName);"
212664,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryDatabaseMetaDataIT.java,140,,"            assertEquals(PTableType.VIEW.toString(), rs.getString(""TABLE_TYPE""));"
212665,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryDatabaseMetaDataIT.java,169,,"            assertEquals(SYSTEM_CATALOG_SCHEMA, rs.getString(""TABLE_SCHEM""));"
212666,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryDatabaseMetaDataIT.java,274,,"            conn.createStatement().execute(""CREATE SEQUENCE "" + seq1FullName);"
212667,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryDatabaseMetaDataIT.java,285,,"            assertNull(rs.getString(""TABLE_CAT""));"
212668,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryDatabaseMetaDataIT.java,367,,"            assertEquals(""SYSTEM"", rs.getString(""TABLE_SCHEM""));"
212669,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryDatabaseMetaDataIT.java,368,,"            assertEquals(null, rs.getString(""TABLE_CATALOG""));"
212670,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryDatabaseMetaDataIT.java,466,,"        assertEquals(SchemaUtil.normalizeIdentifier(""id""), rs.getString(""COLUMN_NAME""));"
212671,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryDatabaseMetaDataIT.java,467,,"        assertEquals(DatabaseMetaData.attributeNoNulls, rs.getShort(""NULLABLE""));"
212672,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryDatabaseMetaDataIT.java,468,,"        assertEquals(PChar.INSTANCE.getSqlType(), rs.getInt(""DATA_TYPE""));"
212673,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryDatabaseMetaDataIT.java,469,,"        assertEquals(1, rs.getInt(""ORDINAL_POSITION""));"
212674,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryDatabaseMetaDataIT.java,470,,"        assertEquals(1, rs.getInt(""COLUMN_SIZE""));"
212675,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryDatabaseMetaDataIT.java,471,,"        assertEquals(0, rs.getInt(""DECIMAL_DIGITS""));"
212676,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryDatabaseMetaDataIT.java,476,,"        assertEquals(SchemaUtil.normalizeIdentifier(""a""), rs.getString(""COLUMN_FAMILY""));"
212677,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryDatabaseMetaDataIT.java,477,,"        assertEquals(SchemaUtil.normalizeIdentifier(""col1""), rs.getString(""COLUMN_NAME""));"
212678,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryDatabaseMetaDataIT.java,490,,"        assertEquals(SchemaUtil.normalizeIdentifier(""col2""), rs.getString(""COLUMN_NAME""));"
212679,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryDatabaseMetaDataIT.java,654,,"            assertEquals(1, rs.getInt(""KEY_SEQ""));"
212680,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryDatabaseMetaDataIT.java,655,,"            assertEquals(null, rs.getString(""PK_NAME""));"
212681,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryDatabaseMetaDataIT.java,672,,"            assertEquals(SchemaUtil.normalizeIdentifier(""key_prefix""), rs.getString(""COLUMN_NAME""));"
212682,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryDatabaseMetaDataIT.java,864,,"            String upsert = ""UPSERT INTO "" + tableName + ""(id,col1,col2) VALUES(?,?,?)"";"
212683,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryDatabaseMetaDataIT.java,873,,"            String query = ""SELECT count(1) FROM "" + tableName;"
212684,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryDatabaseMetaDataIT.java,916,,"                    ""create view "" + generateUniqueName() + ""  (id char(1) not null primary key,\n"""
212685,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryDatabaseMetaDataIT.java,1017,,"                    .executeUpdate(""ALTER TABLE "" + tableName + "" ADD z_integer integer"");"
212686,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryLoggerIT.java,105,,"        String query = ""SELECT * FROM "" + tableName;"
212687,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryLoggerIT.java,116,,"        String logQuery = ""SELECT * FROM "" + SYSTEM_CATALOG_SCHEMA + "".\"""" + SYSTEM_LOG_TABLE + ""\"""";"
212688,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryLoggerIT.java,129,,"                    assertEquals(rs.getString(USER), System.getProperty(""user.name""));"
212689,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryMoreIT.java,178,,"        String upsertDML = ""UPSERT INTO "" + dataTableName + "" VALUES (?, ?, ?, ?, ?, ?, ?)"";"
212690,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryMoreIT.java,262,,"            ""FROM "" + cursorTable + "" \n"" +"
212691,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryMoreIT.java,277,,"        List<Pair<String, String>> columns = queryAgainstTenantSpecificView ? Lists.newArrayList(new Pair<String, String>(null, ""PARENT_ID""), new Pair<String, String>(null, ""CREATED_DATE""), new Pair<String, String>(null, ""ENTITY_HISTORY_ID"")) : Lists.newArrayList(new Pair<String, String>(null, ""TENANT_ID""), new Pair<String, String>(null, ""PARENT_ID""), new Pair<String, String>(null, ""CREATED_DATE""), new Pair<String, String>(null, ""ENTITY_HISTORY_ID""));"
212692,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryMoreIT.java,277,,"        List<Pair<String, String>> columns = queryAgainstTenantSpecificView ? Lists.newArrayList(new Pair<String, String>(null, ""PARENT_ID""), new Pair<String, String>(null, ""CREATED_DATE""), new Pair<String, String>(null, ""ENTITY_HISTORY_ID"")) : Lists.newArrayList(new Pair<String, String>(null, ""TENANT_ID""), new Pair<String, String>(null, ""PARENT_ID""), new Pair<String, String>(null, ""CREATED_DATE""), new Pair<String, String>(null, ""ENTITY_HISTORY_ID""));"
212693,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryMoreIT.java,277,,"        List<Pair<String, String>> columns = queryAgainstTenantSpecificView ? Lists.newArrayList(new Pair<String, String>(null, ""PARENT_ID""), new Pair<String, String>(null, ""CREATED_DATE""), new Pair<String, String>(null, ""ENTITY_HISTORY_ID"")) : Lists.newArrayList(new Pair<String, String>(null, ""TENANT_ID""), new Pair<String, String>(null, ""PARENT_ID""), new Pair<String, String>(null, ""CREATED_DATE""), new Pair<String, String>(null, ""ENTITY_HISTORY_ID""));"
212694,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryMoreIT.java,383,,"            stmt.execute(""CREATE TABLE "" + fullTableName + ""(\n"" + "
212695,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryMoreIT.java,383,,"            stmt.execute(""CREATE TABLE "" + fullTableName + ""(\n"" + "
212696,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryMoreIT.java,384,,"                    ""    ORGANIZATION_ID CHAR(15) NOT NULL,\n"" + "
212697,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryMoreIT.java,387,,"                    ""    CONSTRAINT PAGE_SNAPSHOT_PK PRIMARY KEY (\n"" + "
212698,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryMoreIT.java,388,,"                    ""        ORGANIZATION_ID,\n"" + "
212699,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryMoreIT.java,389,,"                    ""        SCORE DESC,\n"" + "
212700,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryMoreIT.java,391,,"                    ""    )\n"" + "
212701,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryMoreIT.java,392,,"                    "") MULTI_TENANT=TRUE"");"
212702,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryMoreIT.java,604,,"                    + ""(DATE_TIME1, TEXT1, TEXT2) """
212703,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryWithOffsetIT.java,88,,"                .executeQuery(""SELECT t_id from "" + tableName + "" order by t_id limit "" + limit + "" offset "" + offset);"
212704,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryWithOffsetIT.java,88,,"                .executeQuery(""SELECT t_id from "" + tableName + "" order by t_id limit "" + limit + "" offset "" + offset);"
212705,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/QueryWithTableSampleIT.java,57,,"            String query = ""SELECT i1, i2 FROM "" + tableName +"" tablesample 15 "";"
212706,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RTrimFunctionIT.java,55,,"        conn.createStatement().execute(""upsert into "" + tableName + "" (k) values ('a')"");"
212707,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RangeScanIT.java,65,,"        String query = ""SELECT entity_id FROM "" + tableName + "" where A_INTEGER - 4 = -1"";"
212708,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RegexBulkLoadToolIT.java,75,,"                ""--input"", ""/tmp/input1.csv"","
212709,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RegexBulkLoadToolIT.java,76,,"                ""--table"", ""table1"","
212710,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RegexBulkLoadToolIT.java,78,,"                ""--regex"", ""([^,]*),([^,]*),([^,]*)"","
212711,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RegexBulkLoadToolIT.java,78,,"                ""--regex"", ""([^,]*),([^,]*),([^,]*)"","
212712,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RegexBulkLoadToolIT.java,79,,"                ""--zookeeper"", zkQuorum});"
212713,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RegexBulkLoadToolIT.java,190,,"        FSDataOutputStream outputStream = fs.create(new Path(""/tmp/input3.csv""));"
212714,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RegexpSplitFunctionIT.java,73,,"        initTable(conn, ""ONE,TWO,THREE"");"
212715,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RegexpSplitFunctionIT.java,78,,"        assertEquals(""ONE"", rs.getString(1));"
212716,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RegexpSplitFunctionIT.java,125,,"        assertArrayEquals(new String[]{ ""ONE"", ""TWO"", ""THREE"" }, values);"
212717,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RegexpSplitFunctionIT.java,125,,"        assertArrayEquals(new String[]{ ""ONE"", ""TWO"", ""THREE"" }, values);"
212718,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ReverseScanIT.java,159,,"        conn.createStatement().execute(""upsert into "" + tableName + "" values ('a',1,3)"");"
212719,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RoundFloorCeilFuncIT.java,76,,"            Date dateUpserted = DateUtil.parseDate(""2012-01-01 14:25:28"");"
212720,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RoundFloorCeilFuncIT.java,107,,"        Date expectedDate = DateUtil.parseDate(""2012-01-02 00:00:00"");"
212721,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RoundFloorCeilFuncIT.java,109,,"        expectedDate = DateUtil.parseDate(""2012-01-01 14:00:00"");"
212722,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RoundFloorCeilFuncIT.java,111,,"        expectedDate = DateUtil.parseDate(""2012-01-01 14:25:00"");"
212723,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RoundFloorCeilFuncIT.java,113,,"        expectedDate = DateUtil.parseDate(""2012-01-01 14:25:29""); "
212724,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RoundFloorCeilFuncIT.java,117,,"        expectedDate = DateUtil.parseDate(""2012-01-01 00:00:00""); "
212725,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RoundFloorCeilFuncIT.java,126,,"        ResultSet rs = conn.createStatement().executeQuery(""SELECT * FROM "" + tableName"
212726,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RoundFloorCeilFuncIT.java,537,,"		String dateString = ""2015-03-08 09:09:11.665"";"
212727,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RoundFloorCeilFuncIT.java,561,,"							+ ""FROM TIME_AGG_TABLE"").executeQuery();"
212728,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RoundFloorCeilFuncIT.java,564,,"					rs.getTimestamp(""THE_DATE""));"
212729,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RoundFloorCeilFuncIT.java,566,,"					rs.getTimestamp(""day_from_dt""));"
212730,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RoundFloorCeilFuncIT.java,568,,"					rs.getTimestamp(""hour_from_dt""));"
212731,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RoundFloorCeilFuncIT.java,570,,"					rs.getTimestamp(""min_from_dt""));"
212732,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RoundFloorCeilFuncIT.java,572,,"					rs.getTimestamp(""sec_from_dt""));"
212733,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RoundFloorCeilFuncIT.java,574,,"					rs.getTimestamp(""mil_from_dt""));"
212734,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowKeyBytesStringFunctionIT.java,51,,"            conn.createStatement().execute(""UPSERT INTO "" + tableName"
212735,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowTimestampIT.java,121,,"            stmt.setString(1, ""PK1"");"
212736,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowTimestampIT.java,123,,"            stmt.setString(3, ""KV1"");"
212737,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowTimestampIT.java,124,,"            stmt.setString(4, ""KV2"");"
212738,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowTimestampIT.java,341,,"            assertNumRecords(3, ""SELECT count(*) from "" + tableName + "" WHERE PK2 > ?"", conn,"
212739,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowValueConstructorIT.java,73,,"        String query = ""SELECT a_integer, x_integer FROM "" + tableName + "" WHERE ?=organization_id  AND (a_integer, x_integer) = (7, 5)"";"
212740,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowValueConstructorIT.java,257,,"        String upsertQuery = ""UPSERT INTO "" + tableName + "" (organization_id, entity_id, a_string) values (?, ?, ?)"";"
212741,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowValueConstructorIT.java,455,,"        assertTrue(""Number of rows returned: "", count == 3);"
212742,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowValueConstructorIT.java,642,,"            ""upsert into "" +"
212743,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowValueConstructorIT.java,823,,"        conn.createStatement().execute(""CREATE TABLE "" + tableName + "" (pk1 varchar, pk2 varchar, constraint pk primary key (pk1,pk2))"");"
212744,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowValueConstructorIT.java,851,,"        String tenantId = ""ABC"";"
212745,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowValueConstructorIT.java,872,,"        PreparedStatement stmt = conn.prepareStatement(""select pk2, pk3 from "" + viewName + "" WHERE (pk2, pk3) IN ((?, ?), (?, ?)) ORDER BY pk2"");"
212746,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowValueConstructorIT.java,873,,"        stmt.setString(1, ""helo3"");"
212747,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowValueConstructorIT.java,875,,"        stmt.setString(3, ""helo5"");"
212748,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowValueConstructorIT.java,912,,"        PreparedStatement stmt = conn.prepareStatement(""select pk2, pk3 from "" + tableName + "" WHERE (tenantId, pk2, pk3) IN ((?, ?, ?), (?, ?, ?)) ORDER BY pk2"");"
212749,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowValueConstructorIT.java,1123,,"        assertEquals(""helo4"", rs.getString(1));"
212750,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowValueConstructorIT.java,1148,,"        stmt.setString(2, ""helo2"");"
212751,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowValueConstructorIT.java,1153,,"        assertEquals(""helo1"", rs.getString(1));"
212752,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowValueConstructorIT.java,1400,,"        PreparedStatement stmt = conn.prepareStatement(""UPSERT INTO  "" + tableName + "" (region_name, a, b) VALUES('a', 6,3)"");"
212753,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowValueConstructorIT.java,1420,,"        String ddl = ""CREATE TABLE  "" + tableName + ""  (region_name VARCHAR PRIMARY KEY, a VARCHAR, b VARCHAR)"";"
212754,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowValueConstructorOffsetIT.java,52,,"            + ""k2 INTEGER NOT NULL,\n"" + ""v1 INTEGER,\n"" + ""v2 VARCHAR,\n"""
212755,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowValueConstructorOffsetIT.java,55,,"    private static final String DATA_DDL = ""CREATE TABLE %s (k1 TINYINT NOT NULL,\n"" + ""k2 TINYINT NOT NULL,\n"""
212756,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowValueConstructorOffsetIT.java,56,,"            + ""k3 TINYINT NOT NULL,\n"" + ""v1 INTEGER,\n"" + ""CONSTRAINT pk PRIMARY KEY (k1, k2, k3)) "";"
212757,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowValueConstructorOffsetIT.java,114,,"        String createIndex = ""CREATE INDEX IF NOT EXISTS "" + INDEX_NAME + "" ON "" + TABLE_NAME + "" (k2 DESC,k1)"";"
212758,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowValueConstructorOffsetIT.java,114,,"        String createIndex = ""CREATE INDEX IF NOT EXISTS "" + INDEX_NAME + "" ON "" + TABLE_NAME + "" (k2 DESC,k1)"";"
212759,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowValueConstructorOffsetIT.java,932,,"        sql = ""SELECT  v1,v3 FROM "" + longKeyTableName + "" LIMIT 3 OFFSET (v1,v3,k1,k2,k3,k4,k5,k6)=(-1,-3,1,2,3,4,5,6)"";"
212760,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowValueConstructorOffsetIT.java,1133,,"        upserts.add(String.format(upsert,tableName,""'1'"",""'1'""));"
212761,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowValueConstructorOffsetOptionalIT.java,72,,"            ""CHAR"", ""VARCHAR"", ""TIMESTAMP"", ""DATE"", ""DECIMAL"","
212762,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowValueConstructorOffsetOptionalIT.java,72,,"            ""CHAR"", ""VARCHAR"", ""TIMESTAMP"", ""DATE"", ""DECIMAL"","
212763,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowValueConstructorOffsetOptionalIT.java,72,,"            ""CHAR"", ""VARCHAR"", ""TIMESTAMP"", ""DATE"", ""DECIMAL"","
212764,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowValueConstructorOffsetOptionalIT.java,72,,"            ""CHAR"", ""VARCHAR"", ""TIMESTAMP"", ""DATE"", ""DECIMAL"","
212765,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowValueConstructorOffsetOptionalIT.java,72,,"            ""CHAR"", ""VARCHAR"", ""TIMESTAMP"", ""DATE"", ""DECIMAL"","
212766,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowValueConstructorOffsetOptionalIT.java,73,,"            ""DOUBLE"",""SMALLINT"",""INTEGER"",""BIGINT"""
212767,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowValueConstructorOffsetOptionalIT.java,73,,"            ""DOUBLE"",""SMALLINT"",""INTEGER"",""BIGINT"""
212768,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowValueConstructorOffsetOptionalIT.java,73,,"            ""DOUBLE"",""SMALLINT"",""INTEGER"",""BIGINT"""
212769,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowValueConstructorOffsetOptionalIT.java,73,,"            ""DOUBLE"",""SMALLINT"",""INTEGER"",""BIGINT"""
212770,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowValueConstructorOffsetOptionalIT.java,164,,"        String sql = ""SELECT * FROM "" + baseTable + "" LIMIT """
212771,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowValueConstructorOffsetOptionalIT.java,194,,"        String upsertSql = ""UPSERT INTO "" + tenantView + "" (PK1) VALUES (?)"";"
212772,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/RowValueConstructorOffsetOptionalIT.java,211,,"        String ddlBaseTable = ""CREATE TABLE "" + baseTableName + "" ("" +"
212773,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SCNIT.java,53,,"            conn.createStatement().execute(""UPSERT INTO "" + fullTableName + "" VALUES('a','aa')"");"
212774,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SequenceBulkAllocationIT.java,294,,"        conn.createStatement().execute(""UPSERT INTO "" + tableName + "" (id) VALUES (NEXT "" + props.numAllocated +  "" VALUES FOR  "" + sequenceName + "" )"");"
212775,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SequenceBulkAllocationIT.java,406,,"                        ""SELECT NEXT "" + sequenceProps.numAllocated"
212776,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SequenceIT.java,95,,"        conn.createStatement().execute(""CREATE SEQUENCE "" + generateSequenceNameWithSchema());"
212777,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SequenceIT.java,119,,"        conn.createStatement().execute(""CREATE SEQUENCE "" + sequenceName + "" START WITH 2 INCREMENT BY 4\n"");"
212778,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SequenceIT.java,172,,"            nsConn.createStatement().execute(""CREATE SEQUENCE "" + sequenceName + "" START WITH 2 INCREMENT BY 4"");"
212779,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SequenceIT.java,185,,"        String query = ""SELECT sequence_schema, sequence_name, current_value, increment_by FROM \""SYSTEM\"".\""SEQUENCE\"" WHERE sequence_name='"""
212780,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SequenceIT.java,189,,"        assertEquals(sequenceSchemaName, rs.getString(""sequence_schema""));"
212781,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SequenceIT.java,190,,"        assertEquals(sequenceName, rs.getString(""sequence_name""));"
212782,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SequenceIT.java,191,,"        assertEquals(2, rs.getInt(""current_value""));"
212783,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SequenceIT.java,192,,"        assertEquals(4, rs.getInt(""increment_by""));"
212784,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SequenceIT.java,259,,"            rs = conn.createStatement().executeQuery(""SELECT CURRENT VALUE FOR "" + sequenceName);"
212785,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SequenceIT.java,267,,"        rs = conn.createStatement().executeQuery(""SELECT NEXT VALUE FOR "" + sequenceName);"
212786,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SequenceIT.java,291,,"        conn.createStatement().execute(""DROP SEQUENCE "" + sequenceName);"
212787,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SequenceIT.java,306,,"        conn.createStatement().execute(""CREATE SEQUENCE "" + sequenceName + "" START WITH 3 INCREMENT BY 2"");"
212788,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SequenceIT.java,316,,"        conn.createStatement().execute(""CREATE TABLE "" + tableName + "" ( id INTEGER NOT NULL PRIMARY KEY)"");"
212789,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SequenceIT.java,317,,"        conn.createStatement().execute(""UPSERT INTO "" + tableName + "" (id) VALUES (NEXT VALUE FOR "" + sequenceName + "")"");"
212790,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SequenceIT.java,365,,"                                ""SELECT CURRENT VALUE FOR "" + sequenceName + "", NEXT VALUE FOR "" + sequenceName);"
212791,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SequenceIT.java,394,,"        String query = ""SELECT NEXT VALUE FOR "" + sequenceName + "", NEXT VALUE FOR "" + alternateSequenceName + "" FROM "" + PhoenixDatabaseMetaData.SYSTEM_SEQUENCE + "" LIMIT 2"";"
212792,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SequenceIT.java,527,,"        conn.createStatement().execute(""CREATE TABLE "" + tableName + "" (k BIGINT NOT NULL PRIMARY KEY)"");"
212793,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SequenceIT.java,529,,"        PreparedStatement stmt = conn.prepareStatement(""UPSERT INTO "" + tableName + "" VALUES(NEXT VALUE FOR "" + sequenceName + "")"");"
212794,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SequenceIT.java,621,,"        ResultSet rs = conn.createStatement().executeQuery(""SELECT k FROM "" + tableName);"
212795,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SequenceIT.java,636,,"        PreparedStatement stmt1 = conn.prepareStatement(""UPSERT INTO "" + tableName + "" VALUES(NEXT VALUE FOR  "" + sequenceName + "" )"");"
212796,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SequenceIT.java,1264,,"        insertEvent(tableName1, 2, ""user2"", 1);"
212797,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SequencePointInTimeIT.java,73,,"            beforeSeqConn.createStatement().executeQuery(""SELECT next value for "" + seqName);"
212798,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SetPropertyIT.java,87,,"        String ddl = ""CREATE TABLE "" + dataTableFullName + "" (\n"""
212799,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SetPropertyIT.java,87,,"        String ddl = ""CREATE TABLE "" + dataTableFullName + "" (\n"""
212800,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SetPropertyIT.java,88,,"                +""ID1 VARCHAR(15) NOT NULL,\n"""
212801,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SetPropertyIT.java,89,,"                +""ID2 VARCHAR(15) NOT NULL,\n"""
212802,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SetPropertyIT.java,90,,"                +""CREATED_DATE DATE,\n"""
212803,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SetPropertyIT.java,91,,"                +""CREATION_TIME BIGINT,\n"""
212804,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SetPropertyIT.java,92,,"                +""LAST_USED DATE,\n"""
212805,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SetPropertyIT.java,93,,"                +""CONSTRAINT PK PRIMARY KEY (ID1, ID2)) "" + generateDDLOptions(""SALT_BUCKETS = 8"");"
212806,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SetPropertyIT.java,93,,"                +""CONSTRAINT PK PRIMARY KEY (ID1, ID2)) "" + generateDDLOptions(""SALT_BUCKETS = 8"");"
212807,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SetPropertyIT.java,96,,"        ddl = ""ALTER TABLE "" + dataTableFullName + "" SET REPLICATION_SCOPE=1"";"
212808,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SetPropertyIT.java,163,,"                + (!columnEncoded ? "",IMMUTABLE_STORAGE_SCHEME="" + PTable.ImmutableStorageScheme.ONE_CELL_PER_COLUMN : """"));"
212809,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SetPropertyIT.java,184,,"            assertEquals(""CF1"", columnFamilies[1].getNameAsString());"
212810,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SetPropertyIT.java,190,,"            assertEquals(""CF2"", columnFamilies[2].getNameAsString());"
212811,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SetPropertyIT.java,319,,"        ddl = ""ALTER VIEW "" + viewName + "" SET REPLICATION_SCOPE = 1"";"
212812,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SetPropertyIT.java,403,,"            assertEquals(""XYZ"", columnFamilies[1].getNameAsString());"
212813,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SetPropertyIT.java,423,,"                ""  CONSTRAINT pk PRIMARY KEY (a_string)) "" + tableDDLOptions;"
212814,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SetPropertyIT.java,448,,"                ""  (a_string varchar not null, col1 integer, CF1.col2 integer"" +"
212815,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SetPropertyIT.java,755,,"            String ddl = ""create table "" + dataTableFullName + "" ("""
212816,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SetPropertyIT.java,756,,"                    + "" id char(1) NOT NULL,"""
212817,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SetPropertyIT.java,757,,"                    + "" col1 integer NOT NULL,"""
212818,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SetPropertyIT.java,758,,"                    + "" col2 bigint NOT NULL,"""
212819,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SetPropertyIT.java,759,,"                    + "" CONSTRAINT NAME_PK PRIMARY KEY (id, col1, col2)"""
212820,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SetPropertyIT.java,760,,"                    + "" ) "" + generateDDLOptions(""TTL=86400, SALT_BUCKETS = 4, DEFAULT_COLUMN_FAMILY='XYZ'"");"
212821,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SetPropertyIT.java,760,,"                    + "" ) "" + generateDDLOptions(""TTL=86400, SALT_BUCKETS = 4, DEFAULT_COLUMN_FAMILY='XYZ'"");"
212822,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SetPropertyIT.java,888,,"                assertEquals(""NEWCF"", columnFamilies[0].getNameAsString());"
212823,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SkipScanAfterManualSplitIT.java,199,,"        getRegionBoundary(0,  ""00Dxx0000001gER"", ""001xx000003DGz2"", 9223370631742791807L, ""017xx0000022OGX""),"
212824,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SkipScanAfterManualSplitIT.java,286,,"            + ""?, ?, ?, ?, ?, ?, ?, ?, """
212825,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SkipScanQueryIT.java,60,,"        String ddl = ""CREATE TABLE IF NOT EXISTS "" + tableName + "" ("" + "
212826,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SkipScanQueryIT.java,65,,"        String query = ""UPSERT INTO "" + tableName + "" VALUES(?)"";"
212827,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SkipScanQueryIT.java,272,,"            conn.createStatement().execute(""create table "" + tableName + ""(key_1 char(3) not null, key_2 char(4) not null, v varchar(8)  CONSTRAINT pk PRIMARY KEY (key_1,key_2)) split on('000','100','200')"");"
212828,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SkipScanQueryIT.java,274,,"            conn.createStatement().execute(""upsert into "" + tableName + "" values('000','aaaa','value_1')"");"
212829,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SkipScanQueryIT.java,280,,"            ResultSet rs = conn.createStatement().executeQuery(""select * from "" + tableName + "" where key_1>='000' and key_1<'200' and key_2>='aabb' and key_2<'aadd'"");"
212830,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SkipScanQueryIT.java,286,,"            assertEquals(""100"", rs.getString(1));"
212831,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SkipScanQueryIT.java,381,,"            stmt.setString(7, ""chara"");"
212832,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SkipScanQueryIT.java,508,,"            stmt.setString(1, ""00Do0000000a8w1"");"
212833,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortMergeJoinMoreIT.java,46,,"            conn.createStatement().execute(""CREATE TABLE "" + tempTableNoSalting "
212834,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortMergeJoinMoreIT.java,193,,"            String upsertA = ""UPSERT INTO "" + tableA + "" (pkA, colA1, colA2) VALUES(?, ?, ?)"";"
212835,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortMergeJoinMoreIT.java,253,,"            String GRAMMAR_TABLE = ""CREATE TABLE IF NOT EXISTS "" + gTableName + ""  (ID INTEGER PRIMARY KEY, "" +"
212836,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortMergeJoinMoreIT.java,309,,"                    ""CREATE TABLE IF NOT EXISTS "" + eventCountTableName + "" (\n"" +"
212837,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortMergeJoinMoreIT.java,322,,"            stmt.setString(1, ""5SEC"");"
212838,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortMergeJoinMoreIT.java,431,,"                        ""    CLIENT PARALLEL 2-WAY SKIP SCAN ON 2 RANGES OVER "" + eventCountTableName + "" [0,'5SEC',~1462993520000000000,'Tr/Bal'] - [1,'5SEC',~1462993420000000000,'Tr/Bal']\n"" +"
212839,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortMergeJoinMoreIT.java,435,,"                        ""    CLIENT MERGE SORT\n"" +"
212840,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortMergeJoinMoreIT.java,514,,"            String sql=""CREATE TABLE IF NOT EXISTS ""+tableName1+"" ( ""+"
212841,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortMergeJoinMoreIT.java,515,,"                    ""AID INTEGER PRIMARY KEY,""+"
212842,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortMergeJoinMoreIT.java,516,,"                    ""AGE INTEGER""+"
212843,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortMergeJoinMoreIT.java,520,,"            conn.createStatement().execute(""UPSERT INTO ""+tableName1+""(AID,AGE) VALUES (1,11)"");"
212844,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortMergeJoinMoreIT.java,521,,"            conn.createStatement().execute(""UPSERT INTO ""+tableName1+""(AID,AGE) VALUES (2,22)"");"
212845,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortMergeJoinMoreIT.java,522,,"            conn.createStatement().execute(""UPSERT INTO ""+tableName1+""(AID,AGE) VALUES (3,33)"");"
212846,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortMergeJoinMoreIT.java,527,,"                    ""BID INTEGER PRIMARY KEY,""+"
212847,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortMergeJoinMoreIT.java,528,,"                    ""CODE INTEGER""+"
212848,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortMergeJoinMoreIT.java,532,,"            conn.createStatement().execute(""UPSERT INTO ""+tableName2+""(BID,CODE) VALUES (1,66)"");"
212849,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortMergeJoinMoreIT.java,533,,"            conn.createStatement().execute(""UPSERT INTO ""+tableName2+""(BID,CODE) VALUES (2,55)"");"
212850,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortMergeJoinMoreIT.java,534,,"            conn.createStatement().execute(""UPSERT INTO ""+tableName2+""(BID,CODE) VALUES (3,44)"");"
212851,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortMergeJoinMoreIT.java,538,,"            sql=""select /*+ USE_SORT_MERGE_JOIN */ a.aid,b.code from (select aid,age from ""+tableName1+"" where age >=11 and age<=33) a inner join ""+"
212852,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortMergeJoinMoreIT.java,539,,"                ""(select bid,code from ""+tableName2+"" order by code limit 1) b on a.aid=b.bid "";"
212853,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortMergeJoinMoreIT.java,585,,"                ""(select a.aid,b.code from ""+tableName1+"" a inner join ""+tableName2+"" b on a.aid=b.bid where b.code >=44 and b.code<=66 order by b.code limit 3) t1 inner join ""+"
212854,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortMergeJoinMoreIT.java,596,,"            sql=""select t1.aid,t1.codesum,t2.regionsum from ""+"
212855,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortMergeJoinMoreIT.java,597,,"                ""(select a.aid,sum(b.code) codesum from ""+tableName1+"" a inner join ""+tableName2+"" b on a.aid=b.bid where b.code >=44 and b.code<=66 group by a.aid order by codesum limit 3) t1 inner join ""+"
212856,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortMergeJoinMoreIT.java,598,,"                ""(select a.aid,sum(c.region) regionsum from ""+tableName1+"" a inner join ""+tableName3+"" c on a.aid=c.cid where c.region>=77 and c.region<=99 group by a.aid order by regionsum desc limit 2) t2 on t1.aid=t2.aid"";"
212857,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortMergeJoinMoreIT.java,903,,"            sql = ""select /*+ USE_SORT_MERGE_JOIN */ a.aid,b.code from (select aid,age from ""+tableName1+"" where age >=11 and age<=99 order by age limit 10) a inner join ""+"
212858,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortMergeJoinMoreIT.java,982,,"            sql=""select /*+ USE_SORT_MERGE_JOIN */ a.aid from (select aid,age from ""+tableName1+"" where age >=11 and age<=33) a where a.aid in  ""+"
212859,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortMergeJoinMoreIT.java,983,,"                    ""(select bid from ""+tableName2+"" where code > 70 limit 2)"";"
212860,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortOrderIT.java,69,,"        String ddl = ""CREATE table "" + table + "" (pk VARCHAR NOT NULL PRIMARY KEY)"";"
212861,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortOrderIT.java,79,,"        runQueryTest(ddl, upsert(""oid"", ""code""), rows, rows, table);"
212862,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortOrderIT.java,79,,"        runQueryTest(ddl, upsert(""oid"", ""code""), rows, rows, table);"
212863,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortOrderIT.java,121,,"        String ddl = ""CREATE table "" + table + "" (oid CHAR(2) NOT NULL, code INTEGER NOT NULL constraint pk primary key (oid DESC, code DESC))"";"
212864,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortOrderIT.java,131,,"        runQueryTest(ddl, upsert(""pk""), new Object[][]{{""a""}, {""b""}, {""c""}}, new Object[][]{{""b""}}, new WhereCondition(""pk"", ""="", ""'b'""),"
212865,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortOrderIT.java,274,,"        conn.createStatement().execute(""UPSERT INTO "" + table + "" VALUES(4.99)"");"
212866,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortOrderIT.java,327,,"        String ddl = ""CREATE table "" + table + "" (n1 INTEGER NOT NULL, n2 DECIMAL(10, 2) NOT NULL, n3 BIGINT NOT NULL "" +"
212867,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortOrderIT.java,328,,"            ""constraint pk primary key (n1 DESC, n2 DESC, n3 DESC))"";"
212868,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SortOrderIT.java,554,,"            conn.createStatement().execute(""upsert into "" + tableName + "" values (0, null)"");"
212869,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SpillableGroupByIT.java,119,,"        PreparedStatement statement = conn.prepareStatement(""UPSERT INTO """
212870,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SpooledTmpFileDeleteIT.java,102,,"        String query = ""select * from "" + tableName;"
212871,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/StatementHintsIT.java,68,,"            stmt.setString(3, ""123"");"
212872,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/StatementHintsIT.java,69,,"            stmt.setString(4, ""abc"");"
212873,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/StatsEnabledSplitSystemCatalogIT.java,145,,"        conn.createStatement().execute(""UPSERT INTO "" + fullViewName2 + ""(k2) VALUES(122)"");"
212874,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/StatsEnabledSplitSystemCatalogIT.java,234,,"        ResultSet rs = conn.createStatement().executeQuery(""SELECT k FROM "" + fullTableName);"
212875,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/StoreNullsIT.java,140,,"            stmt.executeUpdate(""UPSERT INTO "" + dataTableName + "" VALUES (1, 'v1')"");"
212876,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/StoreNullsIT.java,217,,"            ResultSet rs = historicalStmt.executeQuery( ""SELECT name FROM "" + dataTableName + "" WHERE id = 1"");"
212877,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/StringIT.java,124,,"        conn.createStatement().execute(""CREATE TABLE "" + tableName + "" (k CHAR(3) PRIMARY KEY)"");"
212878,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/StringIT.java,125,,"        conn.createStatement().execute(""UPSERT INTO "" + tableName + "" VALUES('a')"");"
212879,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/StringIT.java,125,,"        conn.createStatement().execute(""UPSERT INTO "" + tableName + "" VALUES('a')"");"
212880,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/StringIT.java,126,,"        conn.createStatement().execute(""UPSERT INTO "" + tableName + "" VALUES('ab')"");"
212881,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/StringIT.java,128,,"        rs = conn.createStatement().executeQuery(""SELECT * FROM "" + tableName + "" ORDER BY k"");"
212882,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/StringIT.java,186,,"        testLpad(conn, Lists.newArrayList(""ABCD"", ""ണഫɰɸ""), 6, Lists.newArrayList("""", """"),"
212883,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/StringIT.java,186,,"        testLpad(conn, Lists.newArrayList(""ABCD"", ""ണഫɰɸ""), 6, Lists.newArrayList("""", """"),"
212884,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/StringIT.java,208,,"        testLpad(conn, Lists.newArrayList(""ABCD"", ""ɰɸɰɸ"", ""ɰɸɰɸ"", ""ABCD""), 8,"
212885,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/StringIT.java,217,,"            Lists.newArrayList(""1234"", ""ണഫɰɸ"", ""1234"", ""ണഫɰɸ""),"
212886,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/StringToArrayFunctionIT.java,42,,"            String ddl = ""CREATE TABLE "" + tableName"
212887,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/StringToArrayFunctionIT.java,45,,"            String dml = ""UPSERT INTO "" + tableName"
212888,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/StringToArrayFunctionIT.java,68,,"                + "" WHERE region_name = 'SF Bay Area'"");"
212889,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/StringToArrayFunctionIT.java,215,,"        PhoenixArray expected = new PhoenixArray(PVarchar.INSTANCE, new Object[]{""hello"", ""hello"", ""hello""});"
212890,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/StringToArrayFunctionIT.java,315,,"            ""SELECT varchars FROM "" + tableName + "" WHERE region_name = 'SF Bay Area'"");"
212891,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SystemCatalogRollbackEnabledIT.java,77,,"            stmt.execute(""CREATE TABLE "" + tableName +"
212892,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SystemCatalogRollbackEnabledIT.java,82,,"                String view1DDL = ""CREATE VIEW "" + tableName +"
212893,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SystemCatalogRollbackEnabledIT.java,178,,"                ddl = ""ALTER VIEW "" + parentViewName + "" ADD col4 INTEGER"";"
212894,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SystemTablesCreationOnConnectionIT.java,314,,"            fail(""Client should not be able to connect to cluster with inconsistent client-server """
212895,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/SystemTablesCreationOnConnectionIT.java,315,,"                    + ""namespace mapping properties"");"
212896,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/TenantIdTypeIT.java,129,,"            String query = ""upsert into "" + table +"
212897,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/TenantIdTypeIT.java,130,,"                    "" values ("" + tenantId + "", 1 , 'valid')"";"
212898,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/TenantIdTypeIT.java,141,,"            ResultSet rs = conn.createStatement().executeQuery(""select * from "" + table);"
212899,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/TenantSpecificTablesDDLIT.java,91,,"        createTestTable(getUrl(), ""CREATE TABLE "" + tableName + "" (K VARCHAR PRIMARY KEY)"");"
212900,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/TenantSpecificTablesDDLIT.java,96,,"            createTestTable(PHOENIX_JDBC_TENANT_SPECIFIC_URL, ""CREATE VIEW "" + viewName + "" (COL VARCHAR) AS SELECT * FROM "" + tableName);"
212901,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/TenantSpecificTablesDDLIT.java,157,,"            createTestTable(PHOENIX_JDBC_TENANT_SPECIFIC_URL, ""CREATE TABLE "" + generateUniqueName() + ""( \n"" + "
212902,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/TenantSpecificTablesDDLIT.java,451,,"              tables.add(rs.getString(""TABLE_NAME""));"
212903,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/TenantSpecificTablesDMLIT.java,54,,"            conn.createStatement().executeUpdate(""upsert into "" + TENANT_TABLE_NAME + "" (id, tenant_col) values (1, 'Cheap Sunglasses')"");"
212904,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/TenantSpecificTablesDMLIT.java,59,,"            assertTrue(""Expected 1 row in result set"", rs.next());"
212905,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/TenantSpecificTablesDMLIT.java,60,,"            assertEquals(""Cheap Sunglasses"", rs.getString(1));"
212906,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/TenantSpecificTablesDMLIT.java,84,,"            ResultSet rs = conn1.createStatement().executeQuery(""select * from "" + TENANT_TABLE_NAME + "" where id = 1"");"
212907,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/TenantSpecificTablesDMLIT.java,102,,"            assertTrue(""Expected row in result set"", rs.next());"
212908,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/TenantSpecificTablesDMLIT.java,176,,"            conn.createStatement().executeUpdate(""delete from "" + PARENT_TABLE_NAME);"
212909,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/TenantSpecificTablesDMLIT.java,177,,"            conn.createStatement().executeUpdate(""upsert into "" + PARENT_TABLE_NAME + "" (tenant_id, tenant_type_id, id, \""user\"") values ('AC/DC', 'abc', 1, 'Bon Scott')"");"
212910,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/TenantSpecificTablesDMLIT.java,178,,"            conn.createStatement().executeUpdate(""upsert into "" + PARENT_TABLE_NAME + "" (tenant_id, tenant_type_id, id, \""user\"") values ('"" + TENANT_ID + ""', '"" + TENANT_TYPE_ID + ""', 1, 'Billy Gibbons')"");"
212911,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/TenantSpecificTablesDMLIT.java,178,,"            conn.createStatement().executeUpdate(""upsert into "" + PARENT_TABLE_NAME + "" (tenant_id, tenant_type_id, id, \""user\"") values ('"" + TENANT_ID + ""', '"" + TENANT_TYPE_ID + ""', 1, 'Billy Gibbons')"");"
212912,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/TenantSpecificTablesDMLIT.java,178,,"            conn.createStatement().executeUpdate(""upsert into "" + PARENT_TABLE_NAME + "" (tenant_id, tenant_type_id, id, \""user\"") values ('"" + TENANT_ID + ""', '"" + TENANT_TYPE_ID + ""', 1, 'Billy Gibbons')"");"
212913,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/TenantSpecificTablesDMLIT.java,179,,"            conn.createStatement().executeUpdate(""upsert into "" + PARENT_TABLE_NAME + "" (tenant_id, tenant_type_id, id, \""user\"") values ('"" + TENANT_ID + ""', 'def', 1, 'Billy Gibbons')"");"
212914,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/TenantSpecificTablesDMLIT.java,187,,"            rs = conn.createStatement().executeQuery(""select count(*) from "" + TENANT_TABLE_NAME);"
212915,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/TenantSpecificTablesDMLIT.java,265,,"            conn.createStatement().executeUpdate(""upsert into "" + PARENT_TABLE_NAME_NO_TENANT_TYPE_ID + "" (tenant_id, id, \""user\"") values ('"" + TENANT_ID + ""', 1, 'Billy Gibbons')"");"
212916,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/TenantSpecificViewIndexIT.java,111,,"                .executeQuery(""select * from "" + tableName + "" where (pk1,pk2) IN (('a','b'),('b','b'))"");"
212917,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/TimezoneOffsetFunctionIT.java,43,,"		String ddl = ""CREATE TABLE IF NOT EXISTS "" + timezone_offset_test"
212918,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/TimezoneOffsetFunctionIT.java,46,,"		String dml = ""UPSERT INTO "" + timezone_offset_test"
212919,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/TimezoneOffsetFunctionIT.java,106,,"				+ ""FROM "" + timezone_offset_test + "" ORDER BY k1 ASC"");"
212920,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/TimezoneOffsetFunctionIT.java,106,,"				+ ""FROM "" + timezone_offset_test + "" ORDER BY k1 ASC"");"
212921,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ToCharFunctionIT.java,72,,"        String ddl = ""create table "" + TO_CHAR_TABLE_NAME +"
212922,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ToCharFunctionIT.java,129,,"        String query = ""select to_char(col_date, '"" + pattern + ""') from "" + TO_CHAR_TABLE_NAME + "" WHERE pk = 1"";"
212923,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ToCharFunctionIT.java,170,,"        String query = ""select pk from "" + TO_CHAR_TABLE_NAME + "" WHERE to_char(col_date, '"" + pattern + ""') = '"" + expectedString + ""'"";"
212924,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ToCharFunctionIT.java,170,,"        String query = ""select pk from "" + TO_CHAR_TABLE_NAME + "" WHERE to_char(col_date, '"" + pattern + ""') = '"" + expectedString + ""'"";"
212925,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ToDateFunctionIT.java,152,,"        props.setProperty(QueryServices.DATE_FORMAT_TIMEZONE_ATTRIB, ""GMT+1"");"
212926,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ToNumberFunctionIT.java,132,,"                ""SELECT a_id FROM "" + TO_NUMBER_TABLE_NAME + "" WHERE to_number(a_string) = 1"";"
212927,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/TransactionalViewIT.java,81,,"            ResultSet rs = conn1.createStatement().executeQuery(""SELECT k FROM "" + fullTableName);"
212928,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UnionAllIT.java,55,,"            String ddl = ""CREATE TABLE "" + tableName1 + "" "" +"
212929,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UnionAllIT.java,57,,"                    ""  CONSTRAINT pk PRIMARY KEY (a_string))\n"";"
212930,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UnionAllIT.java,60,,"            String dml = ""UPSERT INTO "" + tableName1 + "" VALUES(?, ?)"";"
212931,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UnionAllIT.java,60,,"            String dml = ""UPSERT INTO "" + tableName1 + "" VALUES(?, ?)"";"
212932,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UnionAllIT.java,81,,"            ddl = ""select * from "" + tableName1 + "" union all select * from "" + tableName2 + "" union all select * from "" + tableName1;"
212933,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UnionAllIT.java,81,,"            ddl = ""select * from "" + tableName1 + "" union all select * from "" + tableName2 + "" union all select * from "" + tableName1;"
212934,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UnionAllIT.java,129,,"                    ""  (a_string varchar not null, col1 integer"" +"
212935,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UnionAllIT.java,300,,"            ddl = ""select a_string, col1, col1 from "" + tableName1 + "" union all select * from "" + tableName2 + "" union all select a_string, col1 from "" + tableName1;"
212936,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UnionAllIT.java,542,,"            queries[0] = ""select a_string, col1 from "" + tableName1 + "" where a_string in "" +"
212937,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UnionAllIT.java,634,,"            assertEquals(""PARALLEL 1-WAY"","
212938,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UnionAllIT.java,636,,"            assertEquals(""FULL SCAN "","
212939,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UnionAllIT.java,820,,"        String ddl = ""create table "" + tableName1 + "" ( id bigint not null primary key, "" +"
212940,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UnionAllIT.java,823,,"        String dml = ""upsert into "" + tableName1 + "" values (?, ?, ?)"";"
212941,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UnionAllIT.java,823,,"        String dml = ""upsert into "" + tableName1 + "" values (?, ?, ?)"";"
212942,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UnionAllIT.java,826,,"        stmt.setString(2, ""john"");"
212943,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UnionAllIT.java,827,,"        stmt.setString(3, ""doe"");"
212944,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UnionAllIT.java,830,,"        stmt.setString(2, ""jane"");"
212945,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UnionAllIT.java,841,,"        stmt.setString(2, ""sam"");"
212946,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UnionAllIT.java,842,,"        stmt.setString(3, ""johnson"");"
212947,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UnionAllIT.java,845,,"        stmt.setString(2, ""ann"");"
212948,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UnionAllIT.java,846,,"        stmt.setString(3, ""wiely"");"
212949,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UnionAllIT.java,869,,"            assertEquals(""foo"", rs.getString(2));"
212950,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UnnestArrayIT.java,47,,"        String ddl = ""CREATE TABLE "" + tableName + "" (p INTEGER PRIMARY KEY, k INTEGER[])"";"
212951,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UnnestArrayIT.java,52,,"        PreparedStatement stmt = conn.prepareStatement(""UPSERT INTO "" + tableName + "" VALUES (1, ARRAY[2, 3])"");"
212952,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UnnestArrayIT.java,58,,"        stmt = conn.prepareStatement(""SELECT t.k FROM UNNEST((SELECT k FROM "" + tableName + "")) AS t(k)"");"
212953,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UnnestArrayIT.java,58,,"        stmt = conn.prepareStatement(""SELECT t.k FROM UNNEST((SELECT k FROM "" + tableName + "")) AS t(k)"");"
212954,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpdateCacheAcrossDifferentClientsIT.java,71,,"        String url2 = url + PhoenixRuntime.JDBC_PROTOCOL_SEPARATOR + ""LongRunningQueries"";"
212955,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpdateCacheAcrossDifferentClientsIT.java,77,,"                ""create table ""+tableName+"" (k VARCHAR PRIMARY KEY, v1 VARCHAR, v2 VARCHAR)"""
212956,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpdateCacheAcrossDifferentClientsIT.java,77,,"                ""create table ""+tableName+"" (k VARCHAR PRIMARY KEY, v1 VARCHAR, v2 VARCHAR)"""
212957,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpdateCacheAcrossDifferentClientsIT.java,78,,"                + "" UPDATE_CACHE_FREQUENCY=1000000000"";"
212958,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpdateCacheAcrossDifferentClientsIT.java,83,,"                    .execute(""upsert into ""+tableName+"" values ('row1', 'value1', 'key1')"");"
212959,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpdateCacheAcrossDifferentClientsIT.java,83,,"                    .execute(""upsert into ""+tableName+"" values ('row1', 'value1', 'key1')"");"
212960,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpdateCacheAcrossDifferentClientsIT.java,85,,"                    .execute(""upsert into ""+tableName+"" values ('row2', 'value2', 'key2')"");"
212961,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpdateCacheAcrossDifferentClientsIT.java,88,,"                            .executeQuery(""select * from ""+tableName);"
212962,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpdateCacheAcrossDifferentClientsIT.java,225,,"        String value1SelQuery = ""SELECT v2 FROM ""+tableName+"" WHERE v1 = 'value1'"";"
212963,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpdateCacheAcrossDifferentClientsIT.java,236,,"                            .executeQuery(""select k,v1,v2 from ""+tableName);"
212964,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpgradeIT.java,103,,"                    ""CREATE TABLE "" + tableName"
212965,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpgradeNamespaceIT.java,86,,"                .execute(""create local index "" + localIndexName + "" on "" + phoenixFullTableName + ""(K)"");"
212966,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpgradeNamespaceIT.java,88,,"            conn.createStatement().execute(""create index "" + indexName + "" on "" + phoenixFullTableName + ""(k)"");"
212967,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpgradeNamespaceIT.java,90,,"            conn.createStatement().execute(""CREATE VIEW diff."" + viewName + "" (col VARCHAR) AS SELECT * FROM "" + phoenixFullTableName);"
212968,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpgradeNamespaceIT.java,93,,"            conn.createStatement().execute(""CREATE VIEW "" + viewName + ""(col VARCHAR) AS SELECT * FROM "" + phoenixFullTableName);"
212969,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpgradeNamespaceIT.java,95,,"            conn.createStatement().execute(""create index "" + viewIndexName + ""  on diff."" + viewName + ""(col)"");"
212970,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpgradeNamespaceIT.java,100,,"                ResultSet rs = conn.createStatement().executeQuery(""select * from "" + tableName);"
212971,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpsertBigValuesIT.java,52,,"        String upsert = ""UPSERT INTO "" + tableName + "" VALUES(?)"";"
212972,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpsertBigValuesIT.java,60,,"        String select = ""SELECT COUNT(*) from "" + tableName ;"
212973,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpsertBigValuesIT.java,66,,"        select = ""SELECT count(*) FROM "" + tableName + "" where pk >= "" + Integer.MIN_VALUE;"
212974,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpsertBigValuesIT.java,66,,"        select = ""SELECT count(*) FROM "" + tableName + "" where pk >= "" + Integer.MIN_VALUE;"
212975,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpsertBigValuesIT.java,71,,"        select = ""SELECT pk FROM "" + tableName + "" where pk >= "" + Integer.MIN_VALUE +"
212976,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpsertBigValuesIT.java,82,,"        select = ""SELECT count(*) FROM "" + tableName + "" where pk <= "" + Integer.MAX_VALUE;"
212977,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpsertBigValuesIT.java,243,,"        select = ""SELECT kv FROM "" + tableName + "" WHERE kv >= "" + Integer.MIN_VALUE +"
212978,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpsertSelectAutoCommitIT.java,61,,"        conn.createStatement().execute(""CREATE TABLE "" + atable"
212979,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpsertSelectAutoCommitIT.java,96,,"        conn.createStatement().execute(""UPSERT INTO "" + atable2 + "" SELECT * FROM "" + atable);"
212980,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpsertSelectIT.java,154,,"            String ddl = ""create table "" + customEntityTable +"
212981,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpsertSelectIT.java,192,,"                        "" ON "" + aTable + ""(a_string)"");"
212982,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpsertSelectIT.java,199,,"            String upsert = ""UPSERT INTO "" + customEntityTable +"
212983,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpsertSelectIT.java,230,,"            assertEquals(""00A"", rs.getString(1));"
212984,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpsertSelectIT.java,422,,"        query = ""SELECT * FROM "" + ptsdbTable;"
212985,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpsertSelectIT.java,783,,"            stmt.execute(""upsert into "" + tableName +"
212986,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpsertSelectIT.java,794,,"            rs = stmt.executeQuery(""select * from "" + tableName);"
212987,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpsertSelectIT.java,913,,"                    ""CREATE TABLE "" + t2 + ""(ORGANIZATION_ID CHAR(15) NOT NULL, k1 integer "" +"
212988,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpsertSelectIT.java,986,,"            stmt.setString(1, ""PK1"");"
212989,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpsertSelectIT.java,988,,"            stmt.setString(3, ""KV1"");"
212990,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpsertSelectIT.java,1003,,"                    "" WHERE PK1 = ? AND PK2 = ?"")) {"
212991,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpsertSelectIT.java,1077,,"             PreparedStatement stmt = conn.prepareStatement(""UPSERT INTO  "" + tableName +"
212992,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpsertSelectIT.java,1139,,"            stmt.setString(3, ""KV2"");"
212993,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpsertSelectIT.java,1259,,"                 PreparedStatement stmt = conn.prepareStatement(""SELECT * FROM  "" + tableName +"
212994,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpsertSelectIT.java,1346,,"            stmt.setString(5, ""KV3"");"
212995,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpsertSelectIT.java,1364,,"                assertEquals(tenantId, rs.getString(""TENANT_ID""));"
212996,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpsertSelectIT.java,1439,,"                stmt.setString(2, ""KV13"");"
212997,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpsertSelectIT.java,1452,,"                stmt.setString(3, ""KV14"");"
212998,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpsertValuesIT.java,63,,"        PreparedStatement stmt = conn.prepareStatement(""UPSERT INTO "" + tableName + "" (inst,host,\""DATE\"") VALUES(?,'b',CURRENT_DATE())"");"
212999,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpsertValuesIT.java,94,,"        PreparedStatement upsertStmt = conn.prepareStatement(""upsert into "" + tableName + ""(inst,host,\""DATE\"") values('aaa','bbb',to_date('"" + dateString + ""'))"");"
