129000,./TargetProjects/incubator-gobblin/gobblin-core/src/test/java/org/apache/gobblin/writer/http/SalesforceRestWriterTest.java,91,,"    Assert.assertEquals(""POST"", request.get().getMethod());"
129001,./TargetProjects/incubator-gobblin/gobblin-core/src/test/java/org/apache/gobblin/writer/http/SalesforceRestWriterTest.java,178,,"    subResult1.addProperty(""statusCode"", 201); //Success"
129002,./TargetProjects/incubator-gobblin/gobblin-core/src/test/java/org/apache/gobblin/writer/objectstore/ObjectStoreWriterTest.java,56,,"    byte[] objId = client.put(IOUtils.toInputStream(""test"", ""UTF-8""), ConfigFactory.empty());"
129003,./TargetProjects/incubator-gobblin/gobblin-core/src/test/java/org/apache/gobblin/writer/partitioner/TimeBasedAvroWriterPartitionerTest.java,59,,"  private static final String PARTITION_COLUMN_NAME = ""timestamp"";"
129004,./TargetProjects/incubator-gobblin/gobblin-core/src/test/java/org/apache/gobblin/writer/test/GobblinTestEventBusWriterTest.java,43,,"      writer.write(""event1"");"
129005,./TargetProjects/incubator-gobblin/gobblin-core/src/test/java/org/apache/gobblin/writer/test/GobblinTestEventBusWriterTest.java,44,,"      writer.write(""event2"");"
129006,./TargetProjects/incubator-gobblin/gobblin-core/src/test/java/org/apache/gobblin/writer/test/TestingEventBusAsserterTest.java,42,,"      testBus.post(new TestingEventBuses.Event(""event1""));"
129007,./TargetProjects/incubator-gobblin/gobblin-data-management/src/main/java/org/apache/gobblin/data/management/conversion/hive/converter/AbstractAvroToOrcConverter.java,321,,"      conversionEntity.getQueries().add(String.format(""SET %s=%s"", entry.getKey(), entry.getValue()));"
129008,./TargetProjects/incubator-gobblin/gobblin-data-management/src/main/java/org/apache/gobblin/data/management/conversion/hive/query/HiveAvroORCQueryGenerator.java,198,,"    ddl.append("") \n"");"
129009,./TargetProjects/incubator-gobblin/gobblin-data-management/src/main/java/org/apache/gobblin/data/management/conversion/hive/query/HiveAvroORCQueryGenerator.java,266,,"    ddl.append(String.format(""  '%s' %n"", rowFormatSerde));"
129010,./TargetProjects/incubator-gobblin/gobblin-data-management/src/main/java/org/apache/gobblin/data/management/conversion/hive/query/HiveAvroORCQueryGenerator.java,286,,"          ddl.append("", \n"");"
129011,./TargetProjects/incubator-gobblin/gobblin-data-management/src/main/java/org/apache/gobblin/data/management/conversion/hive/query/HiveAvroORCQueryGenerator.java,328,,"    partitionSpecs.append(""PARTITION ("");"
129012,./TargetProjects/incubator-gobblin/gobblin-data-management/src/main/java/org/apache/gobblin/data/management/conversion/hive/query/HiveAvroORCQueryGenerator.java,336,,"      partitionSpecs.append(String.format(""`%s`='%s'"", partition.getKey(), partition.getValue()));"
129013,./TargetProjects/incubator-gobblin/gobblin-data-management/src/main/java/org/apache/gobblin/data/management/conversion/hive/query/HiveAvroORCQueryGenerator.java,345,,"    ddls.add(String.format(""USE %s%n"", dbName));"
129014,./TargetProjects/incubator-gobblin/gobblin-data-management/src/main/java/org/apache/gobblin/data/management/conversion/hive/query/HiveAvroORCQueryGenerator.java,406,,"            String flattenSource = field.getProp(""flatten_source"");"
129015,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/conversion/hive/converter/HiveAvroToOrcConverterTest.java,104,,"      String actualDMLQuery = StringUtils.substringAfter(""SELECT"", queries.get(0).trim());"
129016,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/conversion/hive/converter/HiveAvroToOrcConverterTest.java,209,,"        ""Whitelist blacklist specified in WUS, WhiteListBlackList object should be present"");"
129017,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/conversion/hive/converter/HiveAvroToOrcConverterTest.java,210,,"    Assert.assertTrue(optionalWhitelistBlacklist.get().acceptDb(""mydb""));"
129018,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/conversion/hive/converter/HiveAvroToOrcConverterTest.java,211,,"    Assert.assertTrue(optionalWhitelistBlacklist.get().acceptTable(""mydb"", ""mytable""));"
129019,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/conversion/hive/converter/HiveAvroToOrcConverterTest.java,213,,"    wus.setProp(AbstractAvroToOrcConverter.HIVE_CONVERSION_VIEW_REGISTRATION_WHITELIST, ""yourdb"");"
129020,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/conversion/hive/converter/HiveSchemaEvolutionTest.java,72,,"    Optional<Table> destinationTableMeta = createEvolvedDestinationTable(schemaName, ""default"", """", true);"
129021,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/conversion/hive/converter/HiveSchemaEvolutionTest.java,76,,"            schemaName, ""file:/user/hive/warehouse/"" + schemaName,"
129022,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/conversion/hive/converter/HiveSchemaEvolutionTest.java,87,,"        .generateTableMappingDML(inputSchema, outputSchema, schemaName, schemaName + ""_orc"", Optional.<String>absent(),"
129023,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/conversion/hive/dataset/ConvertibleHiveDatasetTest.java,87,,"    Config config = ConfigFactory.parseResources(testConfFilePath).getConfig(""hive.conversion.avro"");"
129024,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/conversion/hive/dataset/ConvertibleHiveDatasetTest.java,155,,"    Assert.assertEquals(cd.getDestFormats(), ImmutableSet.of(""flattenedOrc""));"
129025,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/conversion/hive/dataset/ConvertibleHiveDatasetTest.java,169,,"    Assert.assertEquals(cd.getDestFormats(), ImmutableSet.of(""flattenedOrc"", ""nestedOrc""));"
129026,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/conversion/hive/materializer/HiveMaterializerTest.java,84,,"        String.format(""SELECT * FROM %s.%s"", this.dbName, this.sourceTableName), 3);"
129027,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/conversion/hive/materializer/HiveMaterializerTest.java,122,,"    Assert.assertEquals(allTable.stream().map(l -> l.get(0)).collect(Collectors.toList()), Lists.newArrayList(""101"", ""102"", ""103"", ""104""));"
129028,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/conversion/hive/materializer/HiveMaterializerTest.java,122,,"    Assert.assertEquals(allTable.stream().map(l -> l.get(0)).collect(Collectors.toList()), Lists.newArrayList(""101"", ""102"", ""103"", ""104""));"
129029,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/conversion/hive/util/HiveAvroORCQueryGeneratorTest.java,59,,"        .generateCreateTableDDL(schema, schemaName, ""file:/user/hive/warehouse/"" + schemaName,"
129030,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/conversion/hive/util/HiveAvroORCQueryGeneratorTest.java,149,,"    String schemaName = ""testRecordWithinRecordWithinRecordDDL"";"
129031,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/conversion/hive/util/HiveAvroORCQueryGeneratorTest.java,151,,"        ""recordWithinRecordWithinRecord_nested.json"");"
129032,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/conversion/hive/util/HiveAvroORCQueryGeneratorTest.java,222,,"    Map<String, String> partitionDDLInfo = ImmutableMap.of(""datepartition"", ""string"", ""id"", ""int"", ""country"", ""string"");"
129033,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/conversion/hive/util/HiveAvroORCQueryGeneratorTest.java,222,,"    Map<String, String> partitionDDLInfo = ImmutableMap.of(""datepartition"", ""string"", ""id"", ""int"", ""country"", ""string"");"
129034,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/conversion/hive/util/HiveAvroORCQueryGeneratorTest.java,222,,"    Map<String, String> partitionDDLInfo = ImmutableMap.of(""datepartition"", ""string"", ""id"", ""int"", ""country"", ""string"");"
129035,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/conversion/hive/util/HiveAvroORCQueryGeneratorTest.java,248,,"    Map<String, String> partitionDMLInfo = ImmutableMap.of(""datepartition"", ""2016-01-01"", ""id"", ""101"", ""country"", ""US"");"
129036,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/conversion/hive/util/HiveAvroORCQueryGeneratorTest.java,302,,"    partitionDMLInfos.add(ImmutableMap.of(""datepartition"", ""2016-01-01"", ""sizepartition"", ""10""));"
129037,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/conversion/hive/util/HiveAvroORCQueryGeneratorTest.java,306,,"    List<String> ddl = HiveAvroORCQueryGenerator.generateDropPartitionsDDL(""db1"", ""table1"", partitionDMLInfos);"
129038,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/conversion/hive/util/HiveAvroORCQueryGeneratorTest.java,306,,"    List<String> ddl = HiveAvroORCQueryGenerator.generateDropPartitionsDDL(""db1"", ""table1"", partitionDMLInfos);"
129039,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/conversion/hive/watermarker/PartitionLevelWatermarkerTest.java,86,,"    Partition part1 = localTestPartition(table, Lists.newArrayList(""2015""));"
129040,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/conversion/hive/watermarker/PartitionLevelWatermarkerTest.java,92,,"    Partition part2 = localTestPartition(table2, Lists.newArrayList(""2016""));"
129041,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/conversion/hive/watermarker/PartitionLevelWatermarkerTest.java,129,,"    previousWus.setProp(ConfigurationKeys.DATASET_URN_KEY, ""test_dataset_urn"");"
129042,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/conversion/hive/watermarker/PartitionLevelWatermarkerTest.java,322,,"    Partition part2012 = localTestPartition(table, ImmutableList.of(""2012""));"
129043,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/conversion/hive/watermarker/PartitionLevelWatermarkerTest.java,323,,"    Partition part2013 = localTestPartition(table, ImmutableList.of(""2013""));"
129044,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/conversion/hive/watermarker/PartitionLevelWatermarkerTest.java,324,,"    Partition part2014 = localTestPartition(table, ImmutableList.of(""2014""));"
129045,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/conversion/hive/watermarker/TableLevelWatermarkerTest.java,44,,"    previousWus.setProp(ConfigurationKeys.DATASET_URN_KEY, ""test_table"");"
129046,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/CopySourcePrioritizationTest.java,55,,"    state.setProp(ConfigurationKeys.SOURCE_FILEBASED_FS_URI, ""file:///"");"
129047,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/CopySourceTest.java,66,,"    state.setProp(ConfigurationKeys.SOURCE_FILEBASED_FS_URI, ""file:///"");"
129048,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/CopySourceTest.java,68,,"    state.setProp(ConfigurationKeys.DATA_PUBLISHER_FINAL_DIR, ""/target/dir"");"
129049,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/CopyableFileTest.java,55,,"            new OwnerAndPermission(""owner"", ""group"", FsPermission.getDefault()),"
129050,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/CopyableFileTest.java,55,,"            new OwnerAndPermission(""owner"", ""group"", FsPermission.getDefault()),"
129051,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/CopyableFileTest.java,122,,"    Assert.assertEquals(source.getMetadata().get(""fsUri""), originFsUri);"
129052,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/CopyableFileTest.java,274,,"        new CopyConfiguration.CopyConfigurationBuilder(fs, properties).targetGroup(Optional.of(""target"")).build());"
129053,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/RecursiveCopyableDatasetTest.java,55,,"    Path source = new Path(""/source"");"
129054,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/RecursiveCopyableDatasetTest.java,56,,"    Path target = new Path(""/target"");"
129055,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/RecursiveCopyableDatasetTest.java,58,,"    List<FileStatus> sourceFiles = Lists.newArrayList(createFileStatus(source, ""file1""), createFileStatus(source, ""file2""));"
129056,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/RecursiveCopyableDatasetTest.java,58,,"    List<FileStatus> sourceFiles = Lists.newArrayList(createFileStatus(source, ""file1""), createFileStatus(source, ""file2""));"
129057,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/RecursiveCopyableDatasetTest.java,59,,"    List<FileStatus> targetFiles = Lists.newArrayList(createFileStatus(target, ""file3""));"
129058,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/RecursiveCopyableDatasetTest.java,153,,"    properties.setProperty(RecursiveCopyableDataset.UPDATE_KEY, ""true"");"
129059,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/TimeAwareRecursiveCopyableDatasetTest.java,94,,"    String datePattern = ""yyyy/MM/dd/HH"";"
129060,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/TimeAwareRecursiveCopyableDatasetTest.java,104,,"      Path filePath = new Path(subDirPath, i + "".avro"");"
129061,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/TimestampBasedCopyableDatasetTest.java,76,,"        new TimestampBasedCopyableDataset(localFs, props, new Path(""dummy""));"
129062,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/hive/HiveCopyEntityHelperTest.java,57,,"  private final Path targetRoot = new Path(""/target"");"
129063,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/hive/HiveCopyEntityHelperTest.java,354,,"        new Table(Table.getEmptyTable(""testDB"", ""testTable""));"
129064,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/hive/HiveCopyEntityHelperTest.java,354,,"        new Table(Table.getEmptyTable(""testDB"", ""testTable""));"
129065,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/hive/HiveDatasetFinderTest.java,51,,"    dbAndTables.add(new HiveDatasetFinder.DbAndTable(""db1"", ""table1""));"
129066,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/hive/HiveDatasetFinderTest.java,51,,"    dbAndTables.add(new HiveDatasetFinder.DbAndTable(""db1"", ""table1""));"
129067,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/hive/HiveDatasetFinderTest.java,52,,"    dbAndTables.add(new HiveDatasetFinder.DbAndTable(""db1"", ""table2""));"
129068,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/hive/HiveDatasetFinderTest.java,53,,"    dbAndTables.add(new HiveDatasetFinder.DbAndTable(""db1"", ""table3""));"
129069,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/hive/HiveDatasetFinderTest.java,119,,"    dbAndTables.add(new HiveDatasetFinder.DbAndTable(""db2"", ""table1""));"
129070,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/hive/HiveDatasetTest.java,53,,"        new HiveDatasetFinder.DbAndTable(""dbPrefix_myDB_dbPostfix"", ""tablePrefix_myTable_tablePostfix""),"
129071,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/hive/HiveDatasetTest.java,55,,"    Assert.assertEquals(logicalDbAndTable.getDb(), ""myDB"", ""DB name not parsed correctly"");"
129072,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/hive/HiveDatasetTest.java,55,,"    Assert.assertEquals(logicalDbAndTable.getDb(), ""myDB"", ""DB name not parsed correctly"");"
129073,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/hive/HiveDatasetTest.java,56,,"    Assert.assertEquals(logicalDbAndTable.getTable(), ""myTable"", ""Table name not parsed correctly"");"
129074,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/hive/HiveDatasetTest.java,56,,"    Assert.assertEquals(logicalDbAndTable.getTable(), ""myTable"", ""Table name not parsed correctly"");"
129075,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/hive/HiveTargetPathHelperTest.java,64,,"    Path source = new Path(TABLE_ROOT, ""partition/file1"");"
129076,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/hive/WhitelistBlacklistTest.java,35,,"    Assert.assertTrue(whitelistBlacklist.acceptDb(""dba""));"
129077,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/hive/WhitelistBlacklistTest.java,36,,"    Assert.assertFalse(whitelistBlacklist.acceptDb(""dbb""));"
129078,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/hive/WhitelistBlacklistTest.java,38,,"    Assert.assertTrue(whitelistBlacklist.acceptTable(""dba"", ""tablea""));"
129079,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/hive/WhitelistBlacklistTest.java,39,,"    Assert.assertFalse(whitelistBlacklist.acceptTable(""dba"", ""tableb""));"
129080,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/hive/WhitelistBlacklistTest.java,144,,"    Assert.assertFalse(whitelistBlacklist.acceptDb(""database""));"
129081,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/hive/filter/LookbackPartitionFilterGeneratorTest.java,54,,"    doTest(""datePartition"", ""P1D"", ""YYYY-MM-dd-HH"", ""datePartition >= \""2016-03-14-10\"""");"
129082,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/publisher/CopyDataPublisherTest.java,84,,"            ImmutableList.of(""a/b"", ""a/c"", ""d/e""));"
129083,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/publisher/CopyDataPublisherTest.java,84,,"            ImmutableList.of(""a/b"", ""a/c"", ""d/e""));"
129084,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/publisher/CopyDataPublisherTest.java,84,,"            ImmutableList.of(""a/b"", ""a/c"", ""d/e""));"
129085,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/writer/FileAwareInputStreamDataWriterTest.java,89,,"    CopyableDatasetMetadata metadata = new CopyableDatasetMetadata(new TestCopyableDataset(new Path(""/source"")));"
129086,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/writer/FileAwareInputStreamDataWriterTest.java,92,,"    state.setProp(ConfigurationKeys.WRITER_STAGING_DIR, new Path(testTempPath, ""staging"").toString());"
129087,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/writer/FileAwareInputStreamDataWriterTest.java,93,,"    state.setProp(ConfigurationKeys.WRITER_OUTPUT_DIR, new Path(testTempPath, ""output"").toString());"
129088,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/writer/FileAwareInputStreamDataWriterTest.java,185,,"    state.setProp(""writer.encrypt."" + EncryptionConfigParser.ENCRYPTION_ALGORITHM_KEY, ""insecure_shift"");"
129089,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/copy/writer/FileAwareInputStreamDataWriterTest.java,219,,"    state.setProp(""writer.encrypt."" + EncryptionConfigParser.ENCRYPTION_ALGORITHM_KEY, ""gpg"");"
129090,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/policy/NewestKSelectionPolicyTest.java,117,,"                          ""Failure for test "" + testName);"
129091,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/policy/TimeBasedSelectionPolicyTest.java,42,,"    Path dummyPath = new Path(""dummy"");"
129092,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/retention/CleanableDatasetBaseTest.java,52,,"    Path datasetRoot = new Path(""/test/dataset"");"
129093,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/retention/CleanableDatasetBaseTest.java,54,,"    DatasetVersion dataset1Version1 = new StringDatasetVersion(""version1"", new Path(datasetRoot, ""version1""));"
129094,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/retention/CleanableDatasetBaseTest.java,55,,"    DatasetVersion dataset1Version2 = new StringDatasetVersion(""version2"", new Path(datasetRoot, ""version2""));"
129095,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/retention/CombineRetentionPolicyTest.java,58,,"            new StringDatasetVersion(""abc"", new Path(""/"")), new StringDatasetVersion(""abcd"", new Path(""/"")),"
129096,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/retention/CombineRetentionPolicyTest.java,58,,"            new StringDatasetVersion(""abc"", new Path(""/"")), new StringDatasetVersion(""abcd"", new Path(""/"")),"
129097,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/retention/ConfigurableCleanableDatasetTest.java,51,,"            ""org.apache.gobblin.data.management.version.finder.WatermarkDatasetVersionFinder"","
129098,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/retention/ConfigurableCleanableDatasetTest.java,58,,"            new Configuration()), new Properties(), new Path(""/someroot""), conf, LoggerFactory.getLogger(ConfigurableCleanableDatasetTest.class));"
129099,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/retention/TimestampedDatasetVersionFinderTest.java,62,,"    DateTime version = parser.getDatasetVersion(new Path(""2015/06/01/10/12""), this.fs.getFileStatus(testDataPathDummyPath)).getDateTime();"
129100,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/retention/WatermarkDatasetVersionFinderTest.java,40,,"    Assert.assertEquals(parser.getDatasetVersion(new Path(""datasetVersion""), new Path(""fullPath"")).getVersion(),"
129101,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/retention/integration/RetentionIntegrationTest.java,91,,"        { ""testTimeBasedRetention"", ""selection.conf"" },"
129102,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/retention/version/HiveDatasetVersionCleanerTest.java,71,,"        + ""This should have been false. "");"
129103,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/source/DatasetFinderSourceTest.java,50,,"    Dataset dataset1 = new SimpleDatasetForTesting(""dataset1"");"
129104,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/source/DatasetFinderSourceTest.java,51,,"    Dataset dataset2 = new SimplePartitionableDatasetForTesting(""dataset2"", Lists.newArrayList(new SimpleDatasetPartitionForTesting(""p1""), new SimpleDatasetPartitionForTesting(""p2"")));"
129105,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/source/DatasetFinderSourceTest.java,52,,"    Dataset dataset3 = new SimpleDatasetForTesting(""dataset3"");"
129106,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/source/LoopingDatasetFinderSourceTest.java,81,,"    Dataset dataset1 = new SimpleDatasetForTesting(""dataset1"");"
129107,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/source/LoopingDatasetFinderSourceTest.java,82,,"    Dataset dataset2 = new SimplePartitionableDatasetForTesting(""dataset2"","
129108,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/source/LoopingDatasetFinderSourceTest.java,84,,"    Dataset dataset3 = new SimpleDatasetForTesting(""dataset3"");"
129109,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/source/LoopingDatasetFinderSourceTest.java,86,,"    Dataset dataset5 = new SimpleDatasetForTesting(""dataset5"");"
129110,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/source/LoopingDatasetFinderSourceTest.java,334,,"    Assert.assertEquals(workUnits.get(1).getProp(ConfigurationKeys.DATASET_URN_KEY), ""dataset2@p1"");"
129111,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/source/LoopingDatasetFinderSourceTest.java,339,,"    Assert.assertEquals(workUnits.get(2).getProp(ConfigurationKeys.DATASET_URN_KEY), ""dataset2@p2"");"
129112,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/util/PathUtilsTest.java,78,,"    Assert.assertEquals(PathUtils.deepestNonGlobPath(new Path(""/path/*"")), new Path(""/path""));"
129113,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/util/PathUtilsTest.java,92,,"    Path path = PathUtils.removeExtension(new Path(""file.txt""), "".txt"");"
129114,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/util/PathUtilsTest.java,92,,"    Path path = PathUtils.removeExtension(new Path(""file.txt""), "".txt"");"
129115,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/util/PathUtilsTest.java,93,,"    Assert.assertEquals(path, new Path(""file""));"
129116,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/util/PathUtilsTest.java,98,,"    path = PathUtils.removeExtension(new Path(""file.txt.gpg""), "".txt"", "".gpg"");"
129117,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/util/PathUtilsTest.java,98,,"    path = PathUtils.removeExtension(new Path(""file.txt.gpg""), "".txt"", "".gpg"");"
129118,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/data/management/version/finder/DatePartitionedHiveVersionFinderTest.java,85,,"    Assert.assertEquals(dv.getDateTime(), formatter.parseDateTime(""2016/01/01/20""));"
129119,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/runtime/embedded/EmbeddedGobblinDistcpTest.java,103,,"      os.write(""myString"".getBytes(Charsets.UTF_8));"
129120,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/util/request_allocation/SimpleHiveDatasetTieringPrioritizerTest.java,40,,"    Assert.assertEquals(prioritizer.compareRequestors(getRequestor(""importantdb"", ""tablea""), getRequestor(""importantdb"", ""tableb"")), 0);"
129121,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/util/request_allocation/SimpleHiveDatasetTieringPrioritizerTest.java,40,,"    Assert.assertEquals(prioritizer.compareRequestors(getRequestor(""importantdb"", ""tablea""), getRequestor(""importantdb"", ""tableb"")), 0);"
129122,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/util/request_allocation/SimpleHiveDatasetTieringPrioritizerTest.java,40,,"    Assert.assertEquals(prioritizer.compareRequestors(getRequestor(""importantdb"", ""tablea""), getRequestor(""importantdb"", ""tableb"")), 0);"
129123,./TargetProjects/incubator-gobblin/gobblin-data-management/src/test/java/org/apache/gobblin/util/request_allocation/SimpleHiveDatasetTieringPrioritizerTest.java,42,,"    Assert.assertEquals(prioritizer.compareRequestors(getRequestor(""somedb"", ""importanttable""), getRequestor(""importantdb"", ""tableb"")), 0);"
129124,./TargetProjects/incubator-gobblin/gobblin-hive-registration/src/main/java/org/apache/gobblin/hive/HiveRegistrationUnit.java,102,,"  @SuppressWarnings(""serial"")"
129125,./TargetProjects/incubator-gobblin/gobblin-hive-registration/src/main/java/org/apache/gobblin/hive/HiveRegistrationUnit.java,124,,"  @SuppressWarnings({ ""serial"", ""unchecked"" })"
129126,./TargetProjects/incubator-gobblin/gobblin-hive-registration/src/main/java/org/apache/gobblin/hive/HiveRegistrationUnitComparator.java,93,,"  @SuppressWarnings(""unchecked"")"
129127,./TargetProjects/incubator-gobblin/gobblin-hive-registration/src/main/java/org/apache/gobblin/hive/metastore/HiveMetaStoreBasedRegister.java,530,,"        log.info(""Dropped table "" + tableName + "" in db "" + dbName);"
129128,./TargetProjects/incubator-gobblin/gobblin-hive-registration/src/test/java/org/apache/gobblin/hive/HiveConfFactoryTest.java,42,,"    HiveConf hiveConf2 = HiveConfFactory.get(Optional.of(""hcat1""), SharedResourcesBrokerFactory.getImplicitBroker());"
129129,./TargetProjects/incubator-gobblin/gobblin-hive-registration/src/test/java/org/apache/gobblin/hive/avro/HiveAvroSerDeManagerTest.java,95,,"    state.setProp(HiveAvroSerDeManager.USE_SCHEMA_TEMP_FILE, ""true"");"
129130,./TargetProjects/incubator-gobblin/gobblin-hive-registration/src/test/java/org/apache/gobblin/hive/policy/HiveRegistrationPolicyBaseTest.java,56,,"    state.appendToListProp(HiveRegistrationPolicyBase.HIVE_DATABASE_NAME, ""db1"");"
129131,./TargetProjects/incubator-gobblin/gobblin-hive-registration/src/test/java/org/apache/gobblin/hive/policy/HiveRegistrationPolicyBaseTest.java,57,,"    state.appendToListProp(ADDITIONAL_HIVE_DATABASE_NAMES, ""db2"");"
129132,./TargetProjects/incubator-gobblin/gobblin-hive-registration/src/test/java/org/apache/gobblin/hive/policy/HiveRegistrationPolicyBaseTest.java,59,,"    state.appendToListProp(HiveRegistrationPolicyBase.HIVE_TABLE_NAME, ""tbl1"");"
129133,./TargetProjects/incubator-gobblin/gobblin-hive-registration/src/test/java/org/apache/gobblin/hive/policy/HiveSnapshotRegistrationPolicyTest.java,49,,"        state.appendToListProp(HiveRegistrationPolicyBase.HIVE_DATABASE_NAME, ""db1"");"
129134,./TargetProjects/incubator-gobblin/gobblin-hive-registration/src/test/java/org/apache/gobblin/hive/policy/HiveSnapshotRegistrationPolicyTest.java,50,,"        state.appendToListProp(HiveRegistrationPolicyBase.ADDITIONAL_HIVE_DATABASE_NAMES, ""db2"");"
129135,./TargetProjects/incubator-gobblin/gobblin-iceberg/src/main/java/org/apache/gobblin/iceberg/Utils/TypeInfoToSchemaParser.java,50,,"  private static final String AVRO_PROP_LOGICAL_TYPE = ""logicalType"";"
129136,./TargetProjects/incubator-gobblin/gobblin-iceberg/src/test/java/org/apache/gobblin/iceberg/writer/HiveMetadataWriterTest.java,95,,"  private String dbName = ""hivedb"";"
129137,./TargetProjects/incubator-gobblin/gobblin-iceberg/src/test/java/org/apache/gobblin/iceberg/writer/HiveMetadataWriterTest.java,97,,"  private String tableName = ""testTable"";"
129138,./TargetProjects/incubator-gobblin/gobblin-iceberg/src/test/java/org/apache/gobblin/iceberg/writer/HiveMetadataWriterTest.java,185,,"            new KafkaPartition.Builder().withTopicName(""GobblinMetadataChangeEvent_test"").withId(1).build(),"
129139,./TargetProjects/incubator-gobblin/gobblin-iceberg/src/test/java/org/apache/gobblin/iceberg/writer/IcebergMetadataWriterTest.java,126,,"        .setTopicPartitionOffsetsRange(ImmutableMap.<String, String>builder().put(""testTopic-1"", ""0-1000"").build())"
129140,./TargetProjects/incubator-gobblin/gobblin-iceberg/src/test/java/org/apache/gobblin/iceberg/writer/IcebergMetadataWriterTest.java,130,,"            .setFileFormat(""avro"")"
129141,./TargetProjects/incubator-gobblin/gobblin-iceberg/src/test/java/org/apache/gobblin/iceberg/writer/IcebergMetadataWriterTest.java,159,,"            new KafkaPartition.Builder().withTopicName(""GobblinMetadataChangeEvent_test"").withId(1).build(),"
129142,./TargetProjects/incubator-gobblin/gobblin-iceberg/src/test/java/org/apache/gobblin/iceberg/writer/IcebergMetadataWriterTest.java,169,,"    Assert.assertFalse(table.properties().containsKey(""offset.range.testTopic-1""));"
129143,./TargetProjects/incubator-gobblin/gobblin-iceberg/src/test/java/org/apache/gobblin/iceberg/writer/IcebergMetadataWriterTest.java,182,,"    Assert.assertEquals(table.properties().get(""gmce.low.watermark.GobblinMetadataChangeEvent_test-1""), ""9"");"
129144,./TargetProjects/incubator-gobblin/gobblin-iceberg/src/test/java/org/apache/gobblin/iceberg/writer/IcebergMetadataWriterTest.java,183,,"    Assert.assertEquals(table.properties().get(""gmce.high.watermark.GobblinMetadataChangeEvent_test-1""), ""20"");"
129145,./TargetProjects/incubator-gobblin/gobblin-iceberg/src/test/java/org/apache/gobblin/iceberg/writer/IcebergMetadataWriterTest.java,232,,"        result = FindFiles.in(table).withMetadataMatching(Expressions.startsWith(""file_path"", filePath_1)).collect().iterator();"
129146,./TargetProjects/incubator-gobblin/gobblin-metastore/src/main/java/org/apache/gobblin/metastore/FsStateStore.java,166,,"      @SuppressWarnings(""deprecation"")"
129147,./TargetProjects/incubator-gobblin/gobblin-metastore/src/main/java/org/apache/gobblin/metastore/MysqlStateStore.java,152,,"    UPSERT_JOB_STATE_SQL = UPSERT_JOB_STATE_TEMPLATE.replace(""$TABLE$"", stateStoreTableName);"
129148,./TargetProjects/incubator-gobblin/gobblin-metastore/src/main/java/org/apache/gobblin/metastore/MysqlStateStore.java,251,,"      throw new IOException(""Failure checking existence of storeName "" + storeName + "" tableName "" + tableName, e);"
129149,./TargetProjects/incubator-gobblin/gobblin-metastore/src/main/java/org/apache/gobblin/metastore/database/DatabaseJobHistoryStoreV100.java,585,,"            taskExecutionQuery += "" AND "" + tableFilter;"
129150,./TargetProjects/incubator-gobblin/gobblin-metastore/src/main/java/org/apache/gobblin/metastore/database/DatabaseJobHistoryStoreV101.java,500,,"            String jobId = jobMetricRs.getString(""job_id"");"
129151,./TargetProjects/incubator-gobblin/gobblin-metastore/src/main/java/org/apache/gobblin/metastore/database/DatabaseJobHistoryStoreV101.java,587,,"        template += "" AND "" + tableFilter;"
129152,./TargetProjects/incubator-gobblin/gobblin-metastore/src/test/java/org/apache/gobblin/metastore/FsStateStoreTest.java,69,,"    this.stateStore.delete(""testStore"");"
129153,./TargetProjects/incubator-gobblin/gobblin-metastore/src/test/java/org/apache/gobblin/metastore/FsStateStoreTest.java,92,,"    Assert.assertFalse(this.stateStore.exists(""testStore"", ""testTable""));"
129154,./TargetProjects/incubator-gobblin/gobblin-metastore/src/test/java/org/apache/gobblin/metastore/MysqlDataSourceFactoryTest.java,43,,"        ConfigurationKeys.STATE_STORE_DB_PASSWORD_KEY, ""dummypwd""));"
129155,./TargetProjects/incubator-gobblin/gobblin-metastore/src/test/java/org/apache/gobblin/metastore/nameParser/GuidDatasetUrnStateStoreNameParserTest.java,55,,"    parser.persistDatasetUrns(Lists.newArrayList(""dataset1"", ""dataset2""));"
129156,./TargetProjects/incubator-gobblin/gobblin-metastore/src/test/java/org/apache/gobblin/metastore/nameParser/GuidDatasetUrnStateStoreNameParserTest.java,55,,"    parser.persistDatasetUrns(Lists.newArrayList(""dataset1"", ""dataset2""));"
129157,./TargetProjects/incubator-gobblin/gobblin-metrics-libs/gobblin-metrics-base/src/main/java/org/apache/gobblin/metrics/reporter/OutputStreamReporter.java,294,,"    this.outputBufferPrintStream.printf(locale, ""             count = %d%n"", meter.getCount());"
129158,./TargetProjects/incubator-gobblin/gobblin-metrics-libs/gobblin-metrics-base/src/test/java/org/apache/gobblin/filesystem/MetricsFileSystemInstrumentationTest.java,88,,"      dirPath2 = new Path(root, dir2 + "".ext"");"
129159,./TargetProjects/incubator-gobblin/gobblin-metrics-libs/gobblin-metrics-base/src/test/java/org/apache/gobblin/filesystem/MetricsFileSystemInstrumentationTest.java,372,,"    HDFSRoot hdfsRoot = new HDFSRoot(""/tmp/create"");"
129160,./TargetProjects/incubator-gobblin/gobblin-metrics-libs/gobblin-metrics-base/src/test/java/org/apache/gobblin/filesystem/MetricsFileSystemInstrumentationTest.java,375,,"    Path newFile = new Path(""/tmp/create/newFile"");"
129161,./TargetProjects/incubator-gobblin/gobblin-metrics-libs/gobblin-metrics-base/src/test/java/org/apache/gobblin/metrics/OutputStreamReporterTest.java,49,,"    Counter counter = metricContext.counter(""com.linkedin.example.counter"");"
129162,./TargetProjects/incubator-gobblin/gobblin-metrics-libs/gobblin-metrics-base/src/test/java/org/apache/gobblin/metrics/OutputStreamReporterTest.java,68,,"    counterSubMetrics.add(""count"");"
129163,./TargetProjects/incubator-gobblin/gobblin-metrics-libs/gobblin-metrics-base/src/test/java/org/apache/gobblin/metrics/broker/MetricContextFactoryTest.java,45,,"        BrokerConfigurationKeyGenerator.generateKey(factory, null, null, MetricContextFactory.TAG_KEY + "".tag1""), ""value1"","
129164,./TargetProjects/incubator-gobblin/gobblin-metrics-libs/gobblin-metrics-base/src/test/java/org/apache/gobblin/metrics/broker/MetricContextFactoryTest.java,46,,"        BrokerConfigurationKeyGenerator.generateKey(factory, null, SimpleScopeType.GLOBAL, MetricContextFactory.TAG_KEY + "".tag2""), ""value2"","
129165,./TargetProjects/incubator-gobblin/gobblin-metrics-libs/gobblin-metrics-base/src/test/java/org/apache/gobblin/metrics/broker/MetricContextFactoryTest.java,57,,"    Assert.assertEquals(tagMap.get(""tag1""), ""value1"");"
129166,./TargetProjects/incubator-gobblin/gobblin-metrics-libs/gobblin-metrics-base/src/test/java/org/apache/gobblin/metrics/broker/MetricContextFactoryTest.java,58,,"    Assert.assertEquals(tagMap.get(""tag2""), ""value2"");"
129167,./TargetProjects/incubator-gobblin/gobblin-metrics-libs/gobblin-metrics-base/src/test/java/org/apache/gobblin/metrics/broker/MetricContextFactoryTest.java,81,,"        new SubTaggedMetricContextKey(""myMetricContext"", ImmutableMap.of(""tag2"", ""value2"")));"
129168,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-azkaban/src/main/java/org/apache/gobblin/data/management/conversion/hive/validation/ValidationJob.java,611,,"      this.warnConversions.put(String.format(""Dataset: %s Instance: %s"", datasetIdentifier, conversionInstance), ""No conversion details found"");"
129169,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-azkaban/src/main/java/org/apache/gobblin/data/management/conversion/hive/validation/ValidationJob.java,612,,"      this.eventSubmitter.submit(EventConstants.VALIDATION_NOOP_EVENT, ImmutableMap.of(""datasetUrn"", datasetIdentifier));"
129170,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-azkaban/src/main/java/org/apache/gobblin/service/modules/orchestration/AzkabanAjaxAPIClient.java,106,,"    params.put(""ajax"", ""fetchprojectflows"");"
129171,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-azkaban/src/main/java/org/apache/gobblin/service/modules/orchestration/AzkabanAjaxAPIClient.java,107,,"    params.put(""project"", azkabanProjectConfig.getAzkabanProjectName());"
129172,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-azkaban/src/main/java/org/apache/gobblin/service/modules/orchestration/AzkabanAjaxAPIClient.java,109,,"    return executeGetRequest(prepareGetRequest(azkabanProjectConfig.getAzkabanServerUrl() + ""/manager"","
129173,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-azkaban/src/main/java/org/apache/gobblin/service/modules/orchestration/AzkabanMultiCallables.java,83,,"        Header contentType = new BasicHeader(HttpHeaders.CONTENT_TYPE, ""application/x-www-form-urlencoded"");"
129174,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-azkaban/src/main/java/org/apache/gobblin/service/modules/orchestration/AzkabanMultiCallables.java,84,,"        Header requestType = new BasicHeader(""X-Requested-With"", ""XMLHttpRequest"");"
129175,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-azkaban/src/main/java/org/apache/gobblin/service/modules/orchestration/AzkabanMultiCallables.java,84,,"        Header requestType = new BasicHeader(""X-Requested-With"", ""XMLHttpRequest"");"
129176,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-azkaban/src/main/java/org/apache/gobblin/service/modules/orchestration/AzkabanMultiCallables.java,124,,"        HttpGet httpGet = new HttpGet(client.url + ""/manager?"" + URLEncodedUtils.format(nvps, ""UTF-8""));"
129177,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-azkaban/src/main/java/org/apache/gobblin/service/modules/orchestration/AzkabanMultiCallables.java,124,,"        HttpGet httpGet = new HttpGet(client.url + ""/manager?"" + URLEncodedUtils.format(nvps, ""UTF-8""));"
129178,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-azkaban/src/test/java/org/apache/gobblin/service/modules/orchestration/AzkabanClientTest.java,95,,"    String flowName = ""test-exec-flow"";"
129179,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-azkaban/src/test/java/org/apache/gobblin/service/modules/orchestration/AzkabanClientTest.java,170,,"    log.info(""Execid: {}"", execStatus.getResponse().execId);"
129180,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-azkaban/src/test/java/org/apache/gobblin/service/modules/orchestration/AzkabanProjectConfigTest.java,42,,"    JobSpec jobSpec = new JobSpec(new URI(""uri""), ""0.0"", ""test job spec"","
129181,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-azkaban/src/test/java/org/apache/gobblin/service/modules/orchestration/AzkabanProjectConfigTest.java,42,,"    JobSpec jobSpec = new JobSpec(new URI(""uri""), ""0.0"", ""test job spec"","
129182,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-azkaban/src/test/java/org/apache/gobblin/service/modules/orchestration/AzkabanProjectConfigTest.java,56,,"    properties.setProperty(""gobblin.service.azkaban.project.namePrefix"", ""randomPrefix"");"
129183,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-compliance/src/main/java/org/apache/gobblin/compliance/HiveProxyQueryExecutor.java,103,,"        ""Missing required property "" + ComplianceConfigurationKeys.GOBBLIN_COMPLIANCE_PROXY_USER);"
129184,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-compliance/src/main/java/org/apache/gobblin/compliance/purger/HivePurgerQueryTemplate.java,83,,"    return ""INSERT OVERWRITE"" + "" TABLE "" + dataset.getCompleteStagingTableName() + "" PARTITION ("" + PartitionUtils"
129185,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-compliance/src/main/java/org/apache/gobblin/compliance/restore/RestorableHivePartitionDataset.java,78,,"        ""Missing required property "" + ComplianceConfigurationKeys.RESTORE_POLICY_CLASS);"
129186,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-compliance/src/main/java/org/apache/gobblin/compliance/retention/HivePartitionVersionRetentionReaper.java,69,,"        ""Missing required property "" + ComplianceConfigurationKeys.BACKUP_OWNER);"
129187,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-couchbase/src/test/java/org/apache/gobblin/couchbase/converter/AnyToCouchbaseJsonConverterTest.java,65,,"    content.put(""value"", testContent);"
129188,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-couchbase/src/test/java/org/apache/gobblin/couchbase/converter/AvroToCouchbaseTupleConverterTest.java,42,,"        .name(""data"").type().bytesType().noDefault()"
129189,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-couchbase/src/test/java/org/apache/gobblin/couchbase/writer/CouchbaseWriterTest.java,114,,"      httpPost.setEntity(new UrlEncodedFormEntity(params, ""UTF-8""));"
129190,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-couchbase/src/test/java/org/apache/gobblin/couchbase/writer/CouchbaseWriterTest.java,141,,"    Config config = getConfig(""default"", Optional.empty(), Optional.empty(), Optional.empty());"
129191,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-couchbase/src/test/java/org/apache/gobblin/couchbase/writer/CouchbaseWriterTest.java,146,,"          SchemaBuilder.record(""Data"").fields().name(""data"").type().bytesType().noDefault().name(""flags"").type().intType()"
129192,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-couchbase/src/test/java/org/apache/gobblin/couchbase/writer/CouchbaseWriterTest.java,146,,"          SchemaBuilder.record(""Data"").fields().name(""data"").type().bytesType().noDefault().name(""flags"").type().intType()"
129193,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-couchbase/src/test/java/org/apache/gobblin/couchbase/writer/CouchbaseWriterTest.java,146,,"          SchemaBuilder.record(""Data"").fields().name(""data"").type().bytesType().noDefault().name(""flags"").type().intType()"
129194,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-couchbase/src/test/java/org/apache/gobblin/couchbase/writer/CouchbaseWriterTest.java,149,,"      Schema schema = SchemaBuilder.record(""TestRecord"").fields().name(""key"").type().stringType().noDefault().name(""data"")"
129195,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-couchbase/src/test/java/org/apache/gobblin/couchbase/writer/CouchbaseWriterTest.java,149,,"      Schema schema = SchemaBuilder.record(""TestRecord"").fields().name(""key"").type().stringType().noDefault().name(""data"")"
129196,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-couchbase/src/test/java/org/apache/gobblin/couchbase/writer/CouchbaseWriterTest.java,154,,"      String testContent = ""hello world"";"
129197,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-couchbase/src/test/java/org/apache/gobblin/couchbase/writer/CouchbaseWriterTest.java,160,,"      testRecord.put(""key"", ""hello"");"
129198,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-couchbase/src/test/java/org/apache/gobblin/couchbase/writer/CouchbaseWriterTest.java,252,,"  @Test(groups={""timeout""})"
129199,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-couchbase/src/test/java/org/apache/gobblin/couchbase/writer/CouchbaseWriterTest.java,261,,"      contentMap.put(""value"", testContent);"
129200,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-crypto-provider/src/test/java/org/apache/gobblin/converter/AvroStringFieldDecryptorConverterTest.java,82,,"    wuState.getJobState().setProp(""converter.fieldsToDecrypt"", ""array1"");"
129201,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-crypto/src/test/java/org/apache/gobblin/crypto/RotatingAESCodecTest.java,104,,"    body = DatatypeConverter.parseBase64Binary(new String(body, ""UTF-8""));"
129202,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-elasticsearch/src/test/java/org/apache/gobblin/elasticsearch/writer/ElasticsearchWriterBaseTest.java,74,,"    props.setProperty(ElasticsearchWriterConfigurationKeys.ELASTICSEARCH_WRITER_INDEX_NAME, ""test"");"
129203,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-elasticsearch/src/test/java/org/apache/gobblin/test/AvroRecordGenerator.java,52,,"        SchemaBuilder.record(""Data"").fields().name(""data"").type().bytesType().noDefault().name(""flags"").type().intType()"
129204,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-elasticsearch/src/test/java/org/apache/gobblin/test/AvroRecordGenerator.java,61,,"            .name(""key"").type().stringType().noDefault()"
129205,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-08/src/main/java/org/apache/gobblin/source/extractor/extract/kafka/KafkaWrapper.java,521,,"      throw new NotImplementedException(""kafka new API has not been implemented"");"
129206,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-08/src/test/java/org/apache/gobblin/kafka/KafkaTestBase.java,152,,"    consumeProps.put(""zookeeper.session.timeout.ms"", ""10000"");"
129207,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-08/src/test/java/org/apache/gobblin/metrics/reporter/KafkaTestBase.java,114,,"    consumeProps.put(""zookeeper.session.timeout.ms"", ""10000"");"
129208,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-09/src/test/java/org/apache/gobblin/kafka/KafkaTestBase.java,168,,"    consumeProps.put(""zookeeper.session.timeout.ms"", ""10000"");"
129209,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-09/src/test/java/org/apache/gobblin/kafka/client/Kafka09ConsumerClientTest.java,47,,"    consumer.assign(Arrays.asList(new TopicPartition(""test_topic"", 0)));"
129210,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-09/src/test/java/org/apache/gobblin/kafka/writer/Kafka09DataWriterTest.java,87,,"    props.setProperty(KafkaWriterConfigurationKeys.KAFKA_PRODUCER_CONFIG_PREFIX+""bootstrap.servers"", ""127.0.0.1:"" + _kafkaTestHelper.getKafkaServerPort());"
129211,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-09/src/test/java/org/apache/gobblin/kafka/writer/Kafka09DataWriterTest.java,87,,"    props.setProperty(KafkaWriterConfigurationKeys.KAFKA_PRODUCER_CONFIG_PREFIX+""bootstrap.servers"", ""127.0.0.1:"" + _kafkaTestHelper.getKafkaServerPort());"
129212,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-09/src/test/java/org/apache/gobblin/kafka/writer/Kafka09DataWriterTest.java,88,,"    props.setProperty(KafkaWriterConfigurationKeys.KAFKA_PRODUCER_CONFIG_PREFIX+""value.serializer"", ""org.apache.kafka.common.serialization.StringSerializer"");"
129213,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-09/src/test/java/org/apache/gobblin/runtime/KafkaAvroJobStatusMonitorTest.java,103,,"    KafkaEventReporter kafkaReporter = builder.build(""localhost:0000"", ""topic1"");"
129214,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-09/src/test/java/org/apache/gobblin/runtime/KafkaAvroJobStatusMonitorTest.java,329,,"    String namespace = ""org.apache.gobblin.metrics"";"
129215,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-09/src/test/java/org/apache/gobblin/runtime/KafkaJobMonitorTest.java,89,,"    Assert.assertTrue(monitor.getJobSpecs().containsKey(new URI(""job1"")));"
129216,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-09/src/test/java/org/apache/gobblin/runtime/KafkaJobMonitorTest.java,94,,"    Assert.assertTrue(monitor.getJobSpecs().containsKey(new URI(""job2"")));"
129217,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-09/src/test/java/org/apache/gobblin/runtime/SLAEventKafkaJobMonitorTest.java,61,,"        new MockSLAEventKafkaJobMonitor(""topic"", null, new URI(""/base/URI""),"
129218,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-09/src/test/java/org/apache/gobblin/runtime/SLAEventKafkaJobMonitorTest.java,64,,"            ImmutableMap.of(""metadataKey1"", ""key1""));"
129219,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-09/src/test/java/org/apache/gobblin/runtime/SLAEventKafkaJobMonitorTest.java,69,,"        ImmutableMap.of(""metadataKey1"",""value1"",""key1"",""value2""));"
129220,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-1/src/test/java/org/apache/gobblin/kafka/KafkaTestBase.java,154,,"    consumeProps.put(""zookeeper.session.timeout.ms"", ""10000"");"
129221,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-1/src/test/java/org/apache/gobblin/kafka/client/Kafka1ConsumerClientTest.java,45,,"    consumer.assign(Arrays.asList(new TopicPartition(""test_topic"", 0)));"
129222,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-1/src/test/java/org/apache/gobblin/kafka/writer/Kafka1DataWriterTest.java,84,,"    props.setProperty(KafkaWriterConfigurationKeys.KAFKA_PRODUCER_CONFIG_PREFIX + ""bootstrap.servers"", ""127.0.0.1:"" + _kafkaTestHelper.getKafkaServerPort());"
129223,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-1/src/test/java/org/apache/gobblin/kafka/writer/Kafka1DataWriterTest.java,84,,"    props.setProperty(KafkaWriterConfigurationKeys.KAFKA_PRODUCER_CONFIG_PREFIX + ""bootstrap.servers"", ""127.0.0.1:"" + _kafkaTestHelper.getKafkaServerPort());"
129224,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-1/src/test/java/org/apache/gobblin/kafka/writer/Kafka1DataWriterTest.java,85,,"    props.setProperty(KafkaWriterConfigurationKeys.KAFKA_PRODUCER_CONFIG_PREFIX + ""value.serializer"", ""org.apache.kafka.common.serialization.StringSerializer"");"
129225,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-common/src/jmh/java/org/apache/gobblin/source/extractor/extract/kafka/HdrHistogramPerformanceBenchmark.java,99,,"    System.out.println(""Histogram serialized string size: "" + histogramString.length());"
129226,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-common/src/main/java/org/apache/gobblin/source/extractor/extract/kafka/ConfigStoreUtils.java,102,,"    Preconditions.checkArgument(properties.containsKey(topicKey), ""Missing required property "" + topicKey);"
129227,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-common/src/main/java/org/apache/gobblin/source/extractor/extract/kafka/workunit/packer/KafkaWorkUnitPacker.java,135,,"      throw new IllegalArgumentException(""WorkUnit size estimator type "" + sizeEstimatorType + "" not found"");"
129228,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-common/src/test/java/org/apache/gobblin/converter/KafkaSchemaChangeInjectorTest.java,78,,"    DecodeableKafkaRecord record1 = getMock(datasetName, getRecord(schema1, ""name1""));"
129229,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-common/src/test/java/org/apache/gobblin/kafka/schemareg/CachingKafkaSchemaRegistryTest.java,37,,"    String name = ""test"";"
129230,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-common/src/test/java/org/apache/gobblin/kafka/schemareg/CachingKafkaSchemaRegistryTest.java,38,,"    String schema1 = new String(""schema"");"
129231,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-common/src/test/java/org/apache/gobblin/kafka/schemareg/GobblinHttpMethodRetryHandlerTest.java,37,,"    Assert.assertTrue(gobblinHttpMethodRetryHandler.retryMethod(mockHttpMethod, new UnknownHostException(""dummyException""), 0));"
129232,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-common/src/test/java/org/apache/gobblin/kafka/writer/KafkaWriterCommonConfigTest.java,58,,"    properties.setProperty(KafkaWriterConfigurationKeys.WRITER_KAFKA_KEYFIELD_CONFIG, ""key"");"
129233,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-common/src/test/java/org/apache/gobblin/metrics/reporter/KafkaEventReporterTest.java,59,,"    KafkaEventReporter kafkaReporter = getBuilder(context, pusher).build(""localhost:0000"", ""topic"");"
129234,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-common/src/test/java/org/apache/gobblin/metrics/reporter/KafkaEventReporterTest.java,59,,"    KafkaEventReporter kafkaReporter = getBuilder(context, pusher).build(""localhost:0000"", ""topic"");"
129235,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-common/src/test/java/org/apache/gobblin/metrics/reporter/KafkaReporterTest.java,90,,"    expected.put(""com.linkedin.example.meter."" + Measurements.COUNT, 2.0);"
129236,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-common/src/test/java/org/apache/gobblin/metrics/reporter/KafkaReporterTest.java,91,,"    expected.put(""com.linkedin.example.histogram."" + Measurements.COUNT, 3.0);"
129237,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-common/src/test/java/org/apache/gobblin/source/extractor/extract/kafka/ConfigStoreUtilsTest.java,77,,"    String commonPath = ""/data/tracking"";"
129238,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-common/src/test/java/org/apache/gobblin/source/extractor/extract/kafka/ConfigStoreUtilsTest.java,78,,"    URI topic1URI = ConfigStoreUtils.getUriStringForTopic(""Topic1"", commonPath, configStoreUri);"
129239,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-common/src/test/java/org/apache/gobblin/source/extractor/extract/kafka/ConfigStoreUtilsTest.java,82,,"    URI topic2URI = ConfigStoreUtils.getUriStringForTopic(""Topic2"", commonPath, configStoreUri);"
129240,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-common/src/test/java/org/apache/gobblin/source/extractor/extract/kafka/KafkaExtractorStatsTrackerTest.java,257,,"        ImmutableMap.of(PARTITION0, ImmutableMap.of(""testKey"", ""testValue""));"
129241,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-common/src/test/java/org/apache/gobblin/source/extractor/extract/kafka/ZipConfigStoreUtilsTest.java,85,,"    properties.setProperty(GOBBLIN_CONFIG_FILTER, ""/data/tracking"");"
129242,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-common/src/test/java/org/apache/gobblin/source/extractor/extract/kafka/ZipConfigStoreUtilsTest.java,91,,"    Assert.assertTrue(result.contains(""Topic1""));"
129243,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-common/src/test/java/org/apache/gobblin/source/extractor/extract/kafka/ZipConfigStoreUtilsTest.java,92,,"    Assert.assertTrue(result.contains(""Topic2""));"
129244,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-common/src/test/java/org/apache/gobblin/source/extractor/extract/kafka/workunit/packer/KafkaTopicGroupingWorkUnitPackerTest.java,63,,"    Map<String, List<WorkUnit>> workUnitsByTopic = ImmutableMap.of(""topic1"", Lists"
129245,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-kafka-common/src/test/java/org/apache/gobblin/source/extractor/extract/kafka/workunit/packer/KafkaTopicGroupingWorkUnitPackerTest.java,90,,"            getWorkUnitWithTopicPartition(""topic1"", 3)), ""topic2"", Lists"
129246,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-metadata/src/main/java/org/apache/gobblin/type/ContentTypeUtils.java,53,,"      return ""UTF-8"";"
129247,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-metadata/src/test/java/org/apache/gobblin/converter/MetadataConverterWrapperTest.java,38,,"        wrapper.convertRecord(""foo"", new RecordWithMetadata<String>(""bar"", buildMetadata(1)), new WorkUnitState());"
129248,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-metadata/src/test/java/org/apache/gobblin/metadata/types/GlobalMetadataTest.java,36,,"    m.setFileMetadata(""file1"", ""key1"", ""val1"");"
129249,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-metadata/src/test/java/org/apache/gobblin/metadata/types/GlobalMetadataTest.java,36,,"    m.setFileMetadata(""file1"", ""key1"", ""val1"");"
129250,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-metadata/src/test/java/org/apache/gobblin/metadata/types/GlobalMetadataTest.java,36,,"    m.setFileMetadata(""file1"", ""key1"", ""val1"");"
129251,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-metadata/src/test/java/org/apache/gobblin/metadata/types/GlobalMetadataTest.java,37,,"    m.addTransferEncoding(""gzip"");"
129252,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-orc/src/test/java/org/apache/gobblin/writer/AvroOrcSchemaConverterTest.java,37,,"    Schema avroUnion = SchemaBuilder.record(""test"")"
129253,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-orc/src/test/java/org/apache/gobblin/writer/AvroOrcSchemaConverterTest.java,39,,"        .name(""test_union"")"
129254,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-service-kafka/src/main/java/org/apache/gobblin/service/SimpleKafkaSpecProducer.java,89,,"    log.info(""Adding Spec: "" + addedSpec + "" using Kafka."");"
129255,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-sql/src/main/java/org/apache/gobblin/source/jdbc/JdbcExtractor.java,669,,"        this.log.error(""Failed to execute sql:"" + query);"
129256,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-sql/src/main/java/org/apache/gobblin/source/jdbc/JdbcExtractor.java,846,,"        String elementDataType = ""string"";"
129257,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-sql/src/main/java/org/apache/gobblin/source/jdbc/MysqlExtractor.java,207,,"    Map<String, String> dataTypeMap = ImmutableMap.<String, String> builder().put(""tinyint"", ""int"")"
129258,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-sql/src/main/java/org/apache/gobblin/source/jdbc/MysqlExtractor.java,209,,"        .put(""double"", ""double"").put(""decimal"", ""double"").put(""numeric"", ""double"").put(""date"", ""date"")"
129259,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-sql/src/main/java/org/apache/gobblin/source/jdbc/MysqlExtractor.java,210,,"        .put(""timestamp"", ""timestamp"").put(""datetime"", ""timestamp"").put(""time"", ""time"").put(""char"", ""string"")"
129260,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-sql/src/main/java/org/apache/gobblin/source/jdbc/OracleExtractor.java,87,,"      .put(""char"", ""string"")"
129261,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-sql/src/main/java/org/apache/gobblin/source/jdbc/OracleExtractor.java,100,,"      .put(""smallint"", ""int"")"
129262,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-sql/src/main/java/org/apache/gobblin/source/jdbc/OracleExtractor.java,105,,"      .put(""binary_double"", ""double"")"
129263,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-sql/src/main/java/org/apache/gobblin/source/jdbc/OracleExtractor.java,115,,"      .put(""interval day"", ""timestamp"")"
129264,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-sql/src/main/java/org/apache/gobblin/source/jdbc/PostgresqlExtractor.java,186,,"        ImmutableMap.<String, String>builder().put(""tinyint"", ""int"").put(""smallint"", ""int"").put(""mediumint"", ""int"")"
129265,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-sql/src/main/java/org/apache/gobblin/source/jdbc/PostgresqlExtractor.java,187,,"            .put(""integer"", ""int"").put(""int"", ""int"").put(""bigint"", ""long"").put(""float"", ""float"").put(""double"", ""double"")"
129266,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-sql/src/main/java/org/apache/gobblin/source/jdbc/PostgresqlExtractor.java,188,,"            .put(""double precision"", ""double"").put(""decimal"", ""double"").put(""numeric"", ""double"").put(""date"", ""date"").put(""timestamp"", ""timestamp"")"
129267,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-sql/src/main/java/org/apache/gobblin/source/jdbc/PostgresqlExtractor.java,190,,"            .put(""datetime"", ""timestamp"").put(""time"", ""time"").put(""char"", ""string"").put(""varchar"", ""string"")"
129268,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-sql/src/main/java/org/apache/gobblin/source/jdbc/SqlServerExtractor.java,169,,"    Map<String, String> dataTypeMap = ImmutableMap.<String, String> builder().put(""smallint"", ""int"")"
129269,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-sql/src/main/java/org/apache/gobblin/source/jdbc/SqlServerExtractor.java,170,,"        .put(""tinyint"", ""int"").put(""int"", ""int"").put(""bigint"", ""long"").put(""decimal"", ""double"").put(""numeric"", ""double"")"
129270,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-sql/src/main/java/org/apache/gobblin/source/jdbc/SqlServerExtractor.java,172,,"        .put(""binary"", ""string"").put(""varbinary"", ""string"").put(""char"", ""string"").put(""varchar"", ""string"")"
129271,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-sql/src/main/java/org/apache/gobblin/source/jdbc/SqlServerExtractor.java,175,,"        .put(""datetime"", ""timestamp"").put(""datetime2"", ""timestamp"").put(""datetimeoffset"", ""timestamp"")"
129272,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-sql/src/main/java/org/apache/gobblin/source/jdbc/TeradataExtractor.java,63,,"  private static final String ELEMENT_DATA_TYPE = ""string"";"
129273,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-sql/src/main/java/org/apache/gobblin/source/jdbc/TeradataExtractor.java,168,,"            .put(""float"", ""float"")"
129274,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-sql/src/main/java/org/apache/gobblin/writer/initializer/JdbcWriterInitializer.java,155,,"        LOG.info(""Staging table "" + tmp + "" does not exist. Creating."");"
129275,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-sql/src/main/java/org/apache/gobblin/writer/initializer/JdbcWriterInitializer.java,228,,"          LOG.info(""User chose to skip staing table on branch "" + this.branchId + "" workunit "" + i);"
129276,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-sql/src/test/java/org/apache/gobblin/converter/jdbc/AvroToJdbcEntryConverterTest.java,74,,"    dateColums.put(""date_of_birth"", JdbcType.DATE);"
129277,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-sql/src/test/java/org/apache/gobblin/converter/jdbc/AvroToJdbcEntryConverterTest.java,75,,"    dateColums.put(""last_modified"", JdbcType.TIME);"
129278,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-sql/src/test/java/org/apache/gobblin/converter/jdbc/AvroToJdbcEntryConverterTest.java,76,,"    dateColums.put(""created"", JdbcType.TIMESTAMP);"
129279,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-sql/src/test/java/org/apache/gobblin/source/jdbc/JdbcExtractorTest.java,228,,"    testCases.put(""2000-01-01 12:34:56.789"", ""2000-01-01 12:34:56"");"
129280,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-sql/src/test/java/org/apache/gobblin/source/jdbc/JdbcExtractorTest.java,228,,"    testCases.put(""2000-01-01 12:34:56.789"", ""2000-01-01 12:34:56"");"
129281,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-sql/src/test/java/org/apache/gobblin/source/jdbc/SqlQueryUtilsTest.java,29,,"    Assert.assertEquals(SqlQueryUtils.addPredicate(""SELECT foo FROM bar"", ""foo != 'blah'""),"
129282,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-sql/src/test/java/org/apache/gobblin/source/jdbc/SqlQueryUtilsTest.java,29,,"    Assert.assertEquals(SqlQueryUtils.addPredicate(""SELECT foo FROM bar"", ""foo != 'blah'""),"
129283,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-sql/src/test/java/org/apache/gobblin/writer/JdbcWriterCommandsTest.java,69,,"    entry.put(""column_name"", ""name"");"
129284,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-sql/src/test/java/org/apache/gobblin/writer/JdbcWriterCommandsTest.java,70,,"    entry.put(""column_type"", ""varchar"");"
129285,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-sql/src/test/java/org/apache/gobblin/writer/PostgresWriterCommandsTest.java,73,,"    entry.put(""column_name"", ""name"");"
129286,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-sql/src/test/java/org/apache/gobblin/writer/PostgresWriterCommandsTest.java,74,,"    entry.put(""data_type"", ""varchar"");"
129287,./TargetProjects/incubator-gobblin/gobblin-modules/gobblin-troubleshooter/src/test/java/org/apache/gobblin/troubleshooter/AutomaticTroubleshooterTest.java,53,,"      log.warn(""Test warning"");"
129288,./TargetProjects/incubator-gobblin/gobblin-modules/google-ingestion/src/main/java/org/apache/gobblin/source/extractor/extract/google/GoogleDriveFsHelper.java,70,,"    Preconditions.checkNotNull(fileId, ""fileId is required"");"
129289,./TargetProjects/incubator-gobblin/gobblin-modules/google-ingestion/src/test/java/org/apache/gobblin/ingestion/google/webmaster/GoogleWebmasterDataFetcherImplTest.java,43,,"    Mockito.when(client.getPages(eq(_property), any(String.class), any(String.class), eq(""ALL""), any(Integer.class),"
129290,./TargetProjects/incubator-gobblin/gobblin-modules/google-ingestion/src/test/java/org/apache/gobblin/ingestion/google/webmaster/GoogleWebmasterDataFetcherImplTest.java,104,,"    Assert.assertEquals(dataFetcher.getPagesSize(""start_date"", ""end_date"", ""country"", null, null), 5000);"
129291,./TargetProjects/incubator-gobblin/gobblin-modules/google-ingestion/src/test/java/org/apache/gobblin/ingestion/google/webmaster/GoogleWebmasterDataFetcherImplTest.java,104,,"    Assert.assertEquals(dataFetcher.getPagesSize(""start_date"", ""end_date"", ""country"", null, null), 5000);"
129292,./TargetProjects/incubator-gobblin/gobblin-modules/google-ingestion/src/test/java/org/apache/gobblin/ingestion/google/webmaster/GoogleWebmasterDataFetcherImplTest.java,104,,"    Assert.assertEquals(dataFetcher.getPagesSize(""start_date"", ""end_date"", ""country"", null, null), 5000);"
129293,./TargetProjects/incubator-gobblin/gobblin-modules/google-ingestion/src/test/java/org/apache/gobblin/ingestion/google/webmaster/SimpleProducerJobTest.java,30,,"    ProducerJob job1 = new SimpleProducerJob(""p1"", ""2016-11-22"", ""2016-11-22"");"
129294,./TargetProjects/incubator-gobblin/gobblin-modules/google-ingestion/src/test/java/org/apache/gobblin/ingestion/google/webmaster/SimpleProducerJobTest.java,33,,"    ProducerJob job2 = new SimpleProducerJob(""p1"", ""2016-11-23"", ""2016-11-22"");"
129295,./TargetProjects/incubator-gobblin/gobblin-modules/google-ingestion/src/test/java/org/apache/gobblin/ingestion/google/webmaster/UrlTriePostOrderIteratorTest.java,55,,"    UrlTrie trie = new UrlTrie(_property, Arrays.asList(_property + ""0"", _property + ""01"", _property + ""012""));"
129296,./TargetProjects/incubator-gobblin/gobblin-modules/google-ingestion/src/test/java/org/apache/gobblin/ingestion/google/webmaster/UrlTrieTest.java,59,,"    UrlTrieNode child = root.getChild(""in/"");"
129297,./TargetProjects/incubator-gobblin/gobblin-modules/google-ingestion/src/test/java/org/apache/gobblin/ingestion/google/webmaster/UrlTrieTest.java,66,,"    UrlTrie trie = new UrlTrie(""https://www.linkedin.com/"","
129298,./TargetProjects/incubator-gobblin/gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/main/java/org/apache/gobblin/service/FlowConfigClient.java,102,,"    LOG.debug(""createFlowConfig with groupName "" + flowConfig.getId().getFlowGroup() + "" flowName "" +"
129299,./TargetProjects/incubator-gobblin/gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/main/java/org/apache/gobblin/service/FlowConfigV2Client.java,113,,"    LOG.debug(""createFlowConfig with groupName "" + flowConfig.getId().getFlowGroup() + "" flowName "" +"
129300,./TargetProjects/incubator-gobblin/gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/main/java/org/apache/gobblin/service/FlowExecutionClient.java,96,,"    LOG.debug(""getFlowExecution with groupName "" + flowStatusId.getFlowGroup() + "" flowName "" +"
129301,./TargetProjects/incubator-gobblin/gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowConfigTest.java,126,,"    flowProperties.put(""param1"", ""value1"");"
129302,./TargetProjects/incubator-gobblin/gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowConfigTest.java,126,,"    flowProperties.put(""param1"", ""value1"");"
129303,./TargetProjects/incubator-gobblin/gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowConfigV2Test.java,87,,"  private static final ServiceRequester TEST_REQUESTER = new ServiceRequester(""testName"", ""USER_PRINCIPAL"", ""testFrom"");"
129304,./TargetProjects/incubator-gobblin/gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowConfigV2Test.java,87,,"  private static final ServiceRequester TEST_REQUESTER = new ServiceRequester(""testName"", ""USER_PRINCIPAL"", ""testFrom"");"
129305,./TargetProjects/incubator-gobblin/gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowConfigV2Test.java,87,,"  private static final ServiceRequester TEST_REQUESTER = new ServiceRequester(""testName"", ""USER_PRINCIPAL"", ""testFrom"");"
129306,./TargetProjects/incubator-gobblin/gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowConfigV2Test.java,155,,"    flowProperties.put(""param1"", ""value1"");"
129307,./TargetProjects/incubator-gobblin/gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowConfigV2Test.java,155,,"    flowProperties.put(""param1"", ""value1"");"
129308,./TargetProjects/incubator-gobblin/gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowConfigV2Test.java,246,,"        .setOwningGroup(""testGroup"");"
129309,./TargetProjects/incubator-gobblin/gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowStatusTest.java,121,,"        org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(""fgroup1"").flowName(""flow1"")"
129310,./TargetProjects/incubator-gobblin/gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowStatusTest.java,121,,"        org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(""fgroup1"").flowName(""flow1"")"
129311,./TargetProjects/incubator-gobblin/gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowStatusTest.java,122,,"            .jobGroup(""jgroup1"").jobName(""job1"").startTime(1000L).endTime(5000L)"
129312,./TargetProjects/incubator-gobblin/gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowStatusTest.java,122,,"            .jobGroup(""jgroup1"").jobName(""job1"").startTime(1000L).endTime(5000L)"
129313,./TargetProjects/incubator-gobblin/gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowStatusTest.java,123,,"            .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).message(""Test message 1"").processedCount(100)"
129314,./TargetProjects/incubator-gobblin/gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowStatusTest.java,124,,"            .jobExecutionId(1).lowWatermark(""watermark:1"").highWatermark(""watermark:2"").issues(Collections.emptyList())"
129315,./TargetProjects/incubator-gobblin/gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowStatusTest.java,124,,"            .jobExecutionId(1).lowWatermark(""watermark:1"").highWatermark(""watermark:2"").issues(Collections.emptyList())"
129316,./TargetProjects/incubator-gobblin/gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowStatusTest.java,133,,"            .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(1).message(""Test message 2"").processedCount(200)"
129317,./TargetProjects/incubator-gobblin/gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowStatusTest.java,134,,"            .jobExecutionId(2).lowWatermark(""watermark:2"").highWatermark(""watermark:3"").issues(Collections.emptyList())"
129318,./TargetProjects/incubator-gobblin/gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowStatusTest.java,138,,"            .jobGroup(""jgroup1"").jobName(""job2"").jobTag(""dataset2"").startTime(2000L).endTime(6000L)"
129319,./TargetProjects/incubator-gobblin/gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-client/src/test/java/org/apache/gobblin/service/FlowStatusTest.java,145,,"            .eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(1).message(""Flow message"")"
129320,./TargetProjects/incubator-gobblin/gobblin-restli/gobblin-flow-config-service/gobblin-flow-config-service-server/src/test/java/org/apache/gobblin/service/FlowConfigResourceLocalHandlerTest.java,43,,"    flowProperties.put(""param1"", ""a:b:c*.d"");"
129321,./TargetProjects/incubator-gobblin/gobblin-restli/gobblin-throttling-service/gobblin-throttling-service-client/src/test/java/org/apache/gobblin/util/limiter/BatchedPermitsRequesterTest.java,57,,"    BatchedPermitsRequester container = BatchedPermitsRequester.builder().resourceId(""resource"")"
129322,./TargetProjects/incubator-gobblin/gobblin-restli/gobblin-throttling-service/gobblin-throttling-service-client/src/test/java/org/apache/gobblin/util/limiter/BatchedPermitsRequesterTest.java,58,,"        .requestorIdentifier(""requestor"").requestSender(new TestRequestSender(queue, false)).build();"
129323,./TargetProjects/incubator-gobblin/gobblin-runtime-hadoop/src/test/java/org/apache/gobblin/runtime/instance/plugin/hadoop/TestHadoopKerberosKeytabAuthenticationPlugin.java,40,,"        .put(""hadoop-inject.hadoop.security.authentication"", ""simple"")"
129324,./TargetProjects/incubator-gobblin/gobblin-runtime-hadoop/src/test/java/org/apache/gobblin/runtime/instance/plugin/hadoop/TestHadoopKerberosKeytabAuthenticationPlugin.java,40,,"        .put(""hadoop-inject.hadoop.security.authentication"", ""simple"")"
129325,./TargetProjects/incubator-gobblin/gobblin-runtime-hadoop/src/test/java/org/apache/gobblin/runtime/instance/plugin/hadoop/TestHadoopKerberosKeytabAuthenticationPlugin.java,41,,"        .put(""gobblin.instance.hadoop.loginUser"", ""foo"")"
129326,./TargetProjects/incubator-gobblin/gobblin-runtime-hadoop/src/test/java/org/apache/gobblin/runtime/instance/plugin/hadoop/TestHadoopKerberosKeytabAuthenticationPlugin.java,42,,"        .put(""gobblin.instance.hadoop.loginUserKeytabFile"", ""/tmp/bar"")"
129327,./TargetProjects/incubator-gobblin/gobblin-runtime/src/main/java/org/apache/gobblin/runtime/TaskExecutor.java,374,,"      metrics.put(name(""queued"", ""current"", ""count""), new Gauge<Integer>() {"
129328,./TargetProjects/incubator-gobblin/gobblin-runtime/src/main/java/org/apache/gobblin/runtime/TaskExecutor.java,374,,"      metrics.put(name(""queued"", ""current"", ""count""), new Gauge<Integer>() {"
129329,./TargetProjects/incubator-gobblin/gobblin-runtime/src/main/java/org/apache/gobblin/runtime/cli/JobStateStoreCLI.java,110,,"      formatter.printHelp(""JobStateStoreCLI"", options);"
129330,./TargetProjects/incubator-gobblin/gobblin-runtime/src/main/java/org/apache/gobblin/runtime/spec_store/FSSpecStore.java,142,,"    Preconditions.checkArgument(null != specUri, ""Spec URI should not be null"");"
129331,./TargetProjects/incubator-gobblin/gobblin-runtime/src/main/java/org/apache/gobblin/scheduler/JobScheduler.java,367,,"    boolean disabled = Boolean.valueOf(jobProps.getProperty(ConfigurationKeys.JOB_DISABLED_KEY, ""false""));"
129332,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/FsDatasetStateStoreTest.java,218,,"    JobState.DatasetState dataset2State = new JobState.DatasetState(""job1"", ""job1_id2"");"
129333,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/FsDatasetStateStoreTest.java,219,,"    dataset2State.setDatasetUrn(""dataset2"");"
129334,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/FsDatasetStateStoreTest.java,227,,"    store.persistDatasetState(""dataset1"", new JobState.DatasetState(""job1"", ""job1_id1""));"
129335,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/JobContextTest.java,67,,"    jobProps.setProperty(ConfigurationKeys.JOB_NAME_KEY, ""test"");"
129336,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/JobContextTest.java,68,,"    jobProps.setProperty(ConfigurationKeys.JOB_ID_KEY, ""job_id_12345"");"
129337,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/JobContextTest.java,69,,"    jobProps.setProperty(ConfigurationKeys.METRICS_ENABLED_KEY, ""false"");"
129338,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/JobLauncherTestHelper.java,86,,"    List<JobState.DatasetState> datasetStateList = this.datasetStateStore.getAll(jobName, sanitizeJobNameForDatasetStore(jobId) + "".jst"");"
129339,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/JobLauncherTestHelper.java,251,,"          this.datasetStateStore.getAll(jobName, ""Dataset"" + i + ""-current.jst"");"
129340,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/JobStateTest.java,59,,"    this.jobState = new JobState(""TestJob"", ""TestJob-1"");"
129341,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/JobStateTest.java,71,,"    this.jobState.setProp(""foo"", ""bar"");"
129342,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/JobStateTest.java,71,,"    this.jobState.setProp(""foo"", ""bar"");"
129343,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/JobStateTest.java,75,,"      initialProps.setProperty(""common1"", ""1"");"
129344,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/JobStateTest.java,76,,"      initialProps.setProperty(""common2"", ""2"");"
129345,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/JobStateTest.java,77,,"      initialProps.setProperty(""spec1"", String.valueOf(i));"
129346,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/JobStateTest.java,78,,"      initialProps.setProperty(""spec2"", ""spec"" + i);"
129347,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/JobStateTest.java,78,,"      initialProps.setProperty(""spec2"", ""spec"" + i);"
129348,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/LimiterStopEventTest.java,46,,"        properties.setProperty(key1, ""1111"");"
129349,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/LocalJobLauncherTest.java,91,,"    String jobId = JobLauncherUtils.newJobId(""beforeResolution"");"
129350,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/LocalJobLauncherTest.java,93,,"    jobProps.setProperty(""job.name"", ""beforeResolution"");"
129351,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/TaskContinuousTest.java,98,,"              new RecordEnvelope<>(record, new DefaultCheckpointableWatermark(""default"", new LongWatermark(index)));"
129352,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/TaskStateTest.java,57,,"    workUnitState.setProp(ConfigurationKeys.JOB_ID_KEY, ""Job-1"");"
129353,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/TaskStateTest.java,58,,"    workUnitState.setProp(ConfigurationKeys.TASK_ID_KEY, ""Task-1"");"
129354,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/TaskStateTest.java,71,,"    this.taskState.setProp(""foo"", ""bar"");"
129355,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/TaskStateTest.java,71,,"    this.taskState.setProp(""foo"", ""bar"");"
129356,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/TaskTest.java,92,,"  @DataProvider(name = ""stateOverrides"")"
129357,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/TestRecordStream.java,103,,"        FlushControlMessage.builder().flushReason(""flush1"").build(), new RecordEnvelope<>(""b""),"
129358,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/TestRecordStream.java,120,,"    Assert.assertEquals(writer.flush_messages, Lists.newArrayList(""flush called"", ""flush called""));"
129359,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/TestRecordStream.java,165,,"        new MetadataUpdateControlMessage<>(GlobalMetadata.<String>builder().schema(""Schema1"").build()), new RecordEnvelope<>(""b""),"
129360,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/TestRecordStream.java,166,,"            new MetadataUpdateControlMessage(GlobalMetadata.<String>builder().schema(""Schema2"").build())});"
129361,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/TestRecordStream.java,176,,"    Assert.assertEquals(converter.records, Lists.newArrayList(""a:schema"", ""b:Schema1""));"
129362,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/TestRecordStream.java,176,,"    Assert.assertEquals(converter.records, Lists.newArrayList(""a:schema"", ""b:Schema1""));"
129363,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/api/SecureJobTemplateTest.java,43,,"		Mockito.when(template.overridableProperties()).thenReturn(Lists.newArrayList(""my.overridable.property1"", ""my.overridable.property2""));"
129364,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/api/SecureJobTemplateTest.java,43,,"		Mockito.when(template.overridableProperties()).thenReturn(Lists.newArrayList(""my.overridable.property1"", ""my.overridable.property2""));"
129365,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/api/SecureJobTemplateTest.java,47,,"				""someProperty"", ""foo"","
129366,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/api/SecureJobTemplateTest.java,48,,"				""my.overridable.property1"", ""bar"""
129367,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/api/SecureJobTemplateTest.java,60,,"				""my.overridable.property1.key2"", ""baz"""
129368,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/api/TestJobSpec.java,41,,"    JobSpec.Builder b = new JobSpec.Builder(""test:job"");"
129369,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/api/TestJobSpec.java,54,,"    props.put(""a1"", ""a_value"");"
129370,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/api/TestJobSpec.java,55,,"    props.put(""a2.b"", ""1"");"
129371,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/api/TestJobSpec.java,56,,"    props.put(""a2.c.d"", ""12.34"");"
129372,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/api/TestJobSpec.java,57,,"    props.put(""a2.c.d2"", ""true"");"
129373,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/api/TestJobSpec.java,61,,"        .withDescription(""A test job"")"
129374,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/instance/hadoop/TestHadoopConfigLoader.java,37,,"        .put(""e.f"", ""2"")"
129375,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/job_catalog/FSJobCatalogHelperTest.java,138,,"    jobProps3.store(new FileWriter(new File(this.subDir11, ""test111.pull"")), """");"
129376,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/job_catalog/TestInMemoryJobCatalog.java,52,,"    JobSpec js1_1 = JobSpec.builder(""test:job1"").withVersion(""1"").build();"
129377,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/job_catalog/TestMutableCachingJobCatalog.java,52,,"    JobSpec js1_1 = JobSpec.builder(""test:job1"").withVersion(""1"").build();"
129378,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/job_spec/JobSpecResolverTest.java,53,,"				.withConfig(ConfigFactory.parseMap(ImmutableMap.of(""key"", ""value"")))"
129379,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/job_spec/JobSpecResolverTest.java,53,,"				.withConfig(ConfigFactory.parseMap(ImmutableMap.of(""key"", ""value"")))"
129380,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/mapreduce/MRJobLauncherTest.java,117,,"    log.info(""out"");"
129381,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/mapreduce/MRJobLauncherTest.java,192,,"  @Test(groups = { ""ignore"" })"
129382,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/spec_store/MysqlSpecStoreTest.java,62,,"  private final URI uri1 = FlowSpec.Utils.createFlowSpecUri(new FlowId().setFlowName(""fg1"").setFlowGroup(""fn1""));"
129383,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/spec_store/MysqlSpecStoreTest.java,63,,"  private final URI uri2 = FlowSpec.Utils.createFlowSpecUri(new FlowId().setFlowName(""fg2"").setFlowGroup(""fn2""));"
129384,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/spec_store/MysqlSpecStoreTest.java,89,,"            .addPrimitive(""key3"", ""value3"")"
129385,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/spec_store/MysqlSpecStoreTest.java,91,,"            .addPrimitive(FLOW_SOURCE_IDENTIFIER_KEY, ""source"")"
129386,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/spec_store/MysqlSpecStoreTest.java,92,,"            .addPrimitive(FLOW_DESTINATION_IDENTIFIER_KEY, ""destination"")"
129387,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/std/TestDefaultConfigurableImpl.java,39,,"    props.put(""a2.b"", ""1"");"
129388,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/std/TestDefaultConfigurableImpl.java,40,,"    props.put(""a2.c.d"", ""12.34"");"
129389,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/std/TestFilteredJobLifecycleListener.java,67,,"    testListener.onStageTransition(jss1_1, ""Stage1"", ""Stage2"");"
129390,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/std/TestFilteredJobLifecycleListener.java,67,,"    testListener.onStageTransition(jss1_1, ""Stage1"", ""Stage2"");"
129391,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/std/TestFilteredJobLifecycleListener.java,68,,"    testListener.onMetadataChange(jss1_1, ""metaKey"", ""value1"", ""value2"");"
129392,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/std/TestFilteredJobLifecycleListener.java,68,,"    testListener.onMetadataChange(jss1_1, ""metaKey"", ""value1"", ""value2"");"
129393,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/std/TestFilteredJobLifecycleListener.java,68,,"    testListener.onMetadataChange(jss1_1, ""metaKey"", ""value1"", ""value2"");"
129394,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/std/TestJobExecutionStateListeners.java,63,,"    state.setStage(""Stage1"");"
129395,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/template/InheritingJobTemplateTest.java,49,,"    TestTemplate template1 = new TestTemplate(new URI(""template1""), Lists.<JobTemplate>newArrayList(), ImmutableMap.of(""key1"", ""value1""),"
129396,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/template/InheritingJobTemplateTest.java,49,,"    TestTemplate template1 = new TestTemplate(new URI(""template1""), Lists.<JobTemplate>newArrayList(), ImmutableMap.of(""key1"", ""value1""),"
129397,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/template/InheritingJobTemplateTest.java,49,,"    TestTemplate template1 = new TestTemplate(new URI(""template1""), Lists.<JobTemplate>newArrayList(), ImmutableMap.of(""key1"", ""value1""),"
129398,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/template/InheritingJobTemplateTest.java,50,,"        Lists.newArrayList(""required""));"
129399,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/template/InheritingJobTemplateTest.java,51,,"    TestTemplate template2 = new TestTemplate(new URI(""template2""), Lists.<JobTemplate>newArrayList(template1), ImmutableMap.of(""key2"", ""value2""),"
129400,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/template/InheritingJobTemplateTest.java,51,,"    TestTemplate template2 = new TestTemplate(new URI(""template2""), Lists.<JobTemplate>newArrayList(template1), ImmutableMap.of(""key2"", ""value2""),"
129401,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/template/InheritingJobTemplateTest.java,51,,"    TestTemplate template2 = new TestTemplate(new URI(""template2""), Lists.<JobTemplate>newArrayList(template1), ImmutableMap.of(""key2"", ""value2""),"
129402,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/template/InheritingJobTemplateTest.java,52,,"        Lists.newArrayList(""required2""));"
129403,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/template/InheritingJobTemplateTest.java,113,,"            Lists.newArrayList(""required3""), catalog));"
129404,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/template/StaticJobTemplateTest.java,48,,"    confMap.put(""key1"", ""value1"");"
129405,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/template/StaticJobTemplateTest.java,48,,"    confMap.put(""key1"", ""value1"");"
129406,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/template/StaticJobTemplateTest.java,50,,"    confMap.put(StaticJobTemplate.SUPER_TEMPLATE_KEY, ""template2"");"
129407,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/template/StaticJobTemplateTest.java,56,,"            Lists.<URI>newArrayList(), ImmutableMap.of(""key2"", ""value2""),"
129408,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/template/StaticJobTemplateTest.java,56,,"            Lists.<URI>newArrayList(), ImmutableMap.of(""key2"", ""value2""),"
129409,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/template/StaticJobTemplateTest.java,115,,"        ""overridableKey"", ""override"","
129410,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/troubleshooter/InMemoryIssueRepositoryTest.java,36,,"    Issue testIssue = getTestIssue(""first"", ""code1"");"
129411,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/troubleshooter/InMemoryIssueRepositoryTest.java,36,,"    Issue testIssue = getTestIssue(""first"", ""code1"");"
129412,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/troubleshooter/InMemoryIssueRepositoryTest.java,51,,"    repository.put(getTestIssue(""second"", ""code2""));"
129413,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/troubleshooter/MultiContextIssueRepositoryTest.java,34,,"    Issue testIssue = getTestIssue(""first"", ""code1"");"
129414,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/troubleshooter/MultiContextIssueRepositoryTest.java,34,,"    Issue testIssue = getTestIssue(""first"", ""code1"");"
129415,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/troubleshooter/MultiContextIssueRepositoryTest.java,35,,"    repository.put(""job1"", testIssue);"
129416,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/troubleshooter/MultiContextIssueRepositoryTest.java,48,,"    repository.put(""job1"", getTestIssue(""second"", ""code2""));"
129417,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/runtime/troubleshooter/MultiContextIssueRepositoryTest.java,64,,"    repository.put(""job2"", job2Issue1);"
129418,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/source/extractor/filebased/TextFileBasedSourceTest.java,58,,"    Files.write(""record4\nrecord5"", new File(dataDir, ""file2""), Charsets.UTF_8);"
129419,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/util/ReflectivePredicateEvaluatorTest.java,32,,"		Assert.assertTrue(evaluator.evaluate(new MyImplementation(1, ""foo"")));"
129420,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/util/ReflectivePredicateEvaluatorTest.java,36,,"				new MyImplementation(1, ""bar"")));"
129421,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/util/SchedulerUtilsTest.java,105,,"    jobProps3.store(new FileWriter(new File(this.subDir11, ""test111.pull"")), """");"
129422,./TargetProjects/incubator-gobblin/gobblin-runtime/src/test/java/org/apache/gobblin/util/SchedulerUtilsTest.java,282,,"        SchedulerUtils.loadGenericJobConfig(new Properties(), new Path(path, ""templated.pull""), path,"
129423,./TargetProjects/incubator-gobblin/gobblin-salesforce/src/main/java/org/apache/gobblin/salesforce/SalesforceExtractor.java,208,,"        String elementDataType = ""string"";"
129424,./TargetProjects/incubator-gobblin/gobblin-salesforce/src/main/java/org/apache/gobblin/salesforce/SalesforceExtractor.java,543,,"        .put(""double"", ""double"").put(""percent"", ""double"").put(""currency"", ""double"").put(""decimal"", ""double"")"
129425,./TargetProjects/incubator-gobblin/gobblin-salesforce/src/main/java/org/apache/gobblin/salesforce/SalesforceSource.java,646,,"        throw new RuntimeException(""Failed to connect."");"
129426,./TargetProjects/incubator-gobblin/gobblin-service/src/main/java/org/apache/gobblin/service/modules/restli/GobblinServiceFlowConfigResourceHandler.java,153,,"          ""Cannot create flowConfig [flowName="" + flowName + "" flowGroup="" + flowGroup + ""]"", e);"
129427,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/GobblinServiceManagerTest.java,121,,"    flowProperties.put(""param1"", ""value1"");"
129428,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/core/GitConfigMonitorTest.java,76,,"  private final File testGroupDir = new File(configDir, ""testGroup"");"
129429,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/core/GitConfigMonitorTest.java,101,,"    this.gitForPush.push().setRemote(""origin"").setRefSpecs(this.masterRefSpec).call();"
129430,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/core/GitConfigMonitorTest.java,172,,"    Assert.assertEquals(spec.getUri(), new URI(""gobblin-flow:/testGroup/testFlow""));"
129431,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/core/GitConfigMonitorTest.java,173,,"    Assert.assertEquals(spec.getConfig().getString(ConfigurationKeys.FLOW_NAME_KEY), ""testFlow"");"
129432,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/core/GitConfigMonitorTest.java,175,,"    Assert.assertEquals(spec.getConfig().getString(""param1""), ""value1"");"
129433,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/core/GitFlowGraphMonitorTest.java,75,,"  private final File node1Dir = new File(flowGraphDir, ""node1"");"
129434,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/core/GitFlowGraphMonitorTest.java,78,,"  private final File node2Dir = new File(flowGraphDir, ""node2"");"
129435,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/core/GitFlowGraphMonitorTest.java,102,,"    this.gitForPush.push().setRemote(""origin"").setRefSpecs(this.masterRefSpec).call();"
129436,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/core/GitFlowGraphMonitorTest.java,157,,"    String fileContents = buildEdgeFileContents(""node1"", ""node2"", ""edge1"", ""value1"");"
129437,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/core/GitFlowGraphMonitorTest.java,157,,"    String fileContents = buildEdgeFileContents(""node1"", ""node2"", ""edge1"", ""value1"");"
129438,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/core/GobblinServiceHATest.java,246,,"    flowProperties.put(""param1"", ""value1"");"
129439,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/core/GobblinServiceHATest.java,246,,"    flowProperties.put(""param1"", ""value1"");"
129440,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/core/GobblinServiceHATest.java,432,,"      Assert.fail(""Get should have raised a 404 error"");"
129441,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/dataset/FSDatasetDescriptorTest.java,35,,"    Config config1 = ConfigFactory.empty().withValue(DatasetDescriptorConfigKeys.PATH_KEY, ConfigValueFactory.fromAnyRef(""/a/b/c/*""))"
129442,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/dataset/FSDatasetDescriptorTest.java,36,,"        .withValue(DatasetDescriptorConfigKeys.PLATFORM_KEY, ConfigValueFactory.fromAnyRef(""hdfs""));"
129443,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/dataset/FSDatasetDescriptorTest.java,67,,"    Config miscConfig = ConfigFactory.empty().withValue(DatasetDescriptorConfigKeys.IS_COMPACTED_AND_DEDUPED_KEY, ConfigValueFactory.fromAnyRef(""true""))"
129444,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/dataset/HiveDatasetDescriptorTest.java,51,,"    Assert.assertTrue(descriptor.whitelistBlacklist.acceptTable(""testDb"", ""abc""));"
129445,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/dataset/HiveDatasetDescriptorTest.java,51,,"    Assert.assertTrue(descriptor.whitelistBlacklist.acceptTable(""testDb"", ""abc""));"
129446,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/dataset/SqlDatasetDescriptorTest.java,38,,"    Config config1 = ConfigFactory.empty().withValue(DatasetDescriptorConfigKeys.PLATFORM_KEY, ConfigValueFactory.fromAnyRef(""sqlserver""))"
129447,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flow/FlowGraphPathTest.java,54,,"      Config jobConfig = baseConfig.withValue(ConfigurationKeys.JOB_NAME_KEY, ConfigValueFactory.fromAnyRef(""job"" + suffix));"
129448,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flow/FlowGraphPathTest.java,81,,"    Assert.assertEquals(dagNew.getStartNodes().get(0).getValue().getJobSpec().getConfig().getString(ConfigurationKeys.JOB_NAME_KEY), ""job0"");"
129449,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flow/FlowGraphPathTest.java,95,,"    Assert.assertEquals(dagNew.getStartNodes().get(1).getValue().getJobSpec().getConfig().getString(ConfigurationKeys.JOB_NAME_KEY), ""job1"");"
129450,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flow/MultiHopFlowCompilerTest.java,203,,"    flowProperties.put(ConfigurationKeys.FLOW_GROUP_KEY, ""testFlowGroup"");"
129451,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flow/MultiHopFlowCompilerTest.java,204,,"    flowProperties.put(ConfigurationKeys.FLOW_NAME_KEY, ""testFlowName"");"
129452,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flow/MultiHopFlowCompilerTest.java,232,,"    FlowSpec spec = createFlowSpec(""flow/flow1.conf"", ""LocalFS-1"", ""ADLS-1"", false, false);"
129453,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flow/MultiHopFlowCompilerTest.java,232,,"    FlowSpec spec = createFlowSpec(""flow/flow1.conf"", ""LocalFS-1"", ""ADLS-1"", false, false);"
129454,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flow/MultiHopFlowCompilerTest.java,232,,"    FlowSpec spec = createFlowSpec(""flow/flow1.conf"", ""LocalFS-1"", ""ADLS-1"", false, false);"
129455,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flow/MultiHopFlowCompilerTest.java,248,,"        join(flowGroup, flowName, ""Distcp"", ""LocalFS-1"", ""HDFS-1"", ""localToHdfs"");"
129456,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flow/MultiHopFlowCompilerTest.java,248,,"        join(flowGroup, flowName, ""Distcp"", ""LocalFS-1"", ""HDFS-1"", ""localToHdfs"");"
129457,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flow/MultiHopFlowCompilerTest.java,248,,"        join(flowGroup, flowName, ""Distcp"", ""LocalFS-1"", ""HDFS-1"", ""localToHdfs"");"
129458,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flow/MultiHopFlowCompilerTest.java,251,,"    String from = jobConfig.getString(""from"");"
129459,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flow/MultiHopFlowCompilerTest.java,253,,"    Assert.assertEquals(from, ""/data/out/testTeam/testDataset"");"
129460,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flow/MultiHopFlowCompilerTest.java,257,,"    Assert.assertEquals(jobConfig.getString(""source.filebased.fs.uri""), sourceFsUri);"
129461,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flow/MultiHopFlowCompilerTest.java,259,,"    String targetFsUri = jobConfig.getString(""target.filebased.fs.uri"");"
129462,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flow/MultiHopFlowCompilerTest.java,263,,"    Assert.assertEquals(jobConfig.getString(""data.publisher.final.dir""), to);"
129463,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flow/MultiHopFlowCompilerTest.java,264,,"    Assert.assertEquals(jobConfig.getString(""type""), ""java"");"
129464,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flow/MultiHopFlowCompilerTest.java,265,,"    Assert.assertEquals(jobConfig.getString(""job.class""), ""org.apache.gobblin.runtime.local.LocalJobLauncher"");"
129465,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flow/MultiHopFlowCompilerTest.java,266,,"    Assert.assertEquals(jobConfig.getString(""launcher.type""), ""LOCAL"");"
129466,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flow/MultiHopFlowCompilerTest.java,285,,"    Assert.assertEquals(to, ""/data/encrypted/testTeam/testDataset"");"
129467,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flow/MultiHopFlowCompilerTest.java,290,,"    Assert.assertEquals(specExecutor.getClass().getCanonicalName(), ""org.apache.gobblin.service.modules.flow.MultiHopFlowCompilerTest.TestAzkabanSpecExecutor"");"
129468,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flow/MultiHopFlowCompilerTest.java,298,,"        join(flowGroup, flowName, ""Distcp"", ""HDFS-1"", ""HDFS-3"", ""hdfsToHdfs"");"
129469,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flow/MultiHopFlowCompilerTest.java,298,,"        join(flowGroup, flowName, ""Distcp"", ""HDFS-1"", ""HDFS-3"", ""hdfsToHdfs"");"
129470,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flow/MultiHopFlowCompilerTest.java,308,,"    Assert.assertEquals(jobConfig.getString(""type""), ""hadoopJava"");"
129471,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flow/MultiHopFlowCompilerTest.java,309,,"    Assert.assertEquals(jobConfig.getString(""job.class""), ""org.apache.gobblin.azkaban.AzkabanJobLauncher"");"
129472,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flow/MultiHopFlowCompilerTest.java,310,,"    Assert.assertEquals(jobConfig.getString(""launcher.type""), ""MAPREDUCE"");"
129473,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flow/MultiHopFlowCompilerTest.java,362,,"    List<String> expectedJobNames = Lists.newArrayList(""SnapshotRetention"", ""Distcp"", ""SnapshotRetention"", ""ConvertToJsonAndEncrypt"", ""SnapshotRetention"" ,"
129474,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flow/MultiHopFlowCompilerTest.java,366,,"    List<String> edgeNames = Lists.newArrayList(""localRetention"", ""localToHdfs"", ""hdfsRetention"","
129475,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flow/MultiHopFlowCompilerTest.java,421,,"        join(flowGroup, flowName, ""Distcp"", ""LocalFS-1"", ""HDFS-2"", ""localToHdfs"");"
129476,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flow/MultiHopFlowCompilerTest.java,711,,"    Assert.assertNull(specCompiler.getFlowGraph().getNode(""node1""));"
129477,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flowgraph/BaseFlowEdgeFactoryTest.java,53,,"    Config config1 = ConfigFactory.empty().withValue(""specStore.fs.dir"", ConfigValueFactory.fromAnyRef(""/tmp1""))."
129478,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flowgraph/BaseFlowEdgeFactoryTest.java,54,,"        withValue(""specExecInstance.capabilities"", ConfigValueFactory.fromAnyRef(""s1:d1""));"
129479,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flowgraph/BaseFlowGraphTest.java,61,,"        ConfigValueFactory.fromAnyRef(""node1""));"
129480,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flowgraph/BaseFlowGraphTest.java,67,,"        ConfigValueFactory.fromAnyRef(""node2""));"
129481,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flowgraph/BaseFlowGraphTest.java,73,,"        ConfigValueFactory.fromAnyRef(""node3""));"
129482,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flowgraph/DagTest.java,39,,"    DagNode<String> dagNode1 = new DagNode<>(""val1"");"
129483,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flowgraph/DagTest.java,40,,"    DagNode<String> dagNode2 = new DagNode<>(""val2"");"
129484,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flowgraph/DagTest.java,41,,"    DagNode<String> dagNode3 = new DagNode<>(""val3"");"
129485,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flowgraph/DagTest.java,42,,"    DagNode<String> dagNode4 = new DagNode<>(""val4"");"
129486,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flowgraph/DagTest.java,43,,"    DagNode<String> dagNode5 = new DagNode<>(""val5"");"
129487,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flowgraph/DagTest.java,106,,"    DagNode<String> dagNode8 = new DagNode<>(""val8"");"
129488,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/flowgraph/datanodes/fs/SftpDataNodeTest.java,39,,"        .withValue(FlowGraphConfigurationKeys.DATA_NODE_ID_KEY, ConfigValueFactory.fromAnyRef(""testId""));"
129489,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/orchestration/DagManagerFlowTest.java,76,,"    Dag<JobExecutionPlan> dag1 = DagManagerTest.buildDag(""0"", flowExecutionId1, ""FINISH_RUNNING"", 1);"
129490,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/orchestration/DagManagerFlowTest.java,88,,"    when(this.dagManager.getJobStatusRetriever().getLatestExecutionIdsForFlow(eq(""flow0""), eq(""group0""), anyInt()))"
129491,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/orchestration/DagManagerFlowTest.java,88,,"    when(this.dagManager.getJobStatusRetriever().getLatestExecutionIdsForFlow(eq(""flow0""), eq(""group0""), anyInt()))"
129492,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/orchestration/DagManagerFlowTest.java,90,,"    when(this.dagManager.getJobStatusRetriever().getLatestExecutionIdsForFlow(eq(""flow1""), eq(""group1""), anyInt()))"
129493,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/orchestration/DagManagerFlowTest.java,90,,"    when(this.dagManager.getJobStatusRetriever().getLatestExecutionIdsForFlow(eq(""flow1""), eq(""group1""), anyInt()))"
129494,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/orchestration/DagManagerFlowTest.java,92,,"    when(this.dagManager.getJobStatusRetriever().getLatestExecutionIdsForFlow(eq(""flow2""), eq(""group2""), anyInt()))"
129495,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/orchestration/DagManagerFlowTest.java,92,,"    when(this.dagManager.getJobStatusRetriever().getLatestExecutionIdsForFlow(eq(""flow2""), eq(""group2""), anyInt()))"
129496,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/orchestration/DagManagerFlowTest.java,120,,"        ""group0"", ""job0"", String.valueOf(ExecutionStatus.CANCELLED)))"
129497,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/orchestration/DagManagerFlowTest.java,241,,"    Mockito.doReturn(DagManagerTest.getMockJobStatus(""flow6"", ""group6"", flowExecutionId,"
129498,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/orchestration/DagManagerTest.java,129,,"          addPrimitive(ConfigurationKeys.FLOW_GROUP_KEY, ""group"" + id)."
129499,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/orchestration/DagManagerTest.java,130,,"          addPrimitive(ConfigurationKeys.FLOW_NAME_KEY, ""flow"" + id)."
129500,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/orchestration/DagManagerTest.java,136,,"        jobConfig = jobConfig.withValue(ConfigurationKeys.JOB_DEPENDENCIES, ConfigValueFactory.fromAnyRef(""job0""));"
129501,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/orchestration/DagManagerTest.java,138,,"        jobConfig = jobConfig.withValue(ConfigurationKeys.JOB_DEPENDENCIES, ConfigValueFactory.fromAnyRef(""job1""));"
129502,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/orchestration/DagManagerTest.java,140,,"        jobConfig = jobConfig.withValue(ConfigurationKeys.JOB_DEPENDENCIES, ConfigValueFactory.fromAnyRef(""job2""));"
129503,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/orchestration/DagManagerTest.java,170,,"    Dag<JobExecutionPlan> dag = buildDag(flowGroupId, flowExecutionId, ""FINISH_RUNNING"", true);"
129504,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/orchestration/DagManagerTest.java,373,,"        getMockJobStatus(flowName, flowGroup, flowExecutionId, ""NA_KEY"", ""NA_KEY"", String.valueOf(ExecutionStatus.PENDING_RESUME));"
129505,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/orchestration/MysqlDagStateStoreTest.java,77,,"    Dag<JobExecutionPlan> dag_0 = DagTestUtils.buildDag(""random_0"", 123L);"
129506,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/orchestration/MysqlDagStateStoreTest.java,78,,"    Dag<JobExecutionPlan> dag_1 = DagTestUtils.buildDag(""random_1"", 456L);"
129507,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/orchestration/OrchestratorTest.java,91,,"    topologyProperties.put(""specStore.fs.dir"", TOPOLOGY_SPEC_STORE_DIR);"
129508,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/restli/FlowConfigUtilsTest.java,96,,"        .setFlowName(""SN_CRMSYNC"")"
129509,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/restli/FlowConfigUtilsTest.java,97,,"        .setFlowGroup(""DYNAMICS-USER-123456789""));"
129510,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/restli/FlowConfigUtilsTest.java,104,,"    properties.put(""gobblin.flow.sourceIdentifier"", ""dynamicsCrm"");"
129511,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/restli/FlowConfigUtilsTest.java,104,,"    properties.put(""gobblin.flow.sourceIdentifier"", ""dynamicsCrm"");"
129512,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/restli/FlowConfigUtilsTest.java,105,,"    properties.put(""gobblin.flow.destinationIdentifier"", ""espresso"");"
129513,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/restli/FlowConfigUtilsTest.java,105,,"    properties.put(""gobblin.flow.destinationIdentifier"", ""espresso"");"
129514,./TargetProjects/incubator-gobblin/gobblin-service/src/test/java/org/apache/gobblin/service/modules/scheduler/GobblinServiceJobSchedulerTest.java,82,,"    FlowSpec flowSpec1 = FlowCatalogTest.initFlowSpec(specDir.getAbsolutePath(), URI.create(""spec1""));"
129515,./TargetProjects/incubator-gobblin/gobblin-test-harness/src/test/java/org/apache/gobblin/TaskErrorIntegrationTest.java,85,,"        GobblinLocalJobLauncherUtils.getJobProperties(""runtime_test/skip_workunits_test.properties"");"
129516,./TargetProjects/incubator-gobblin/gobblin-test-harness/src/test/java/org/apache/gobblin/TaskErrorIntegrationTest.java,88,,"    jobProperties.setProperty(TestExtractor.RAISE_ERROR, ""true"");"
129517,./TargetProjects/incubator-gobblin/gobblin-tunnel/src/test/java/org/apache/gobblin/tunnel/TestTunnelWithArbitraryTCPTraffic.java,132,,"      client.connect(new InetSocketAddress(""localhost"", doubleEchoServer.getServerSocketPort()));"
129518,./TargetProjects/incubator-gobblin/gobblin-tunnel/src/test/java/org/apache/gobblin/tunnel/TestTunnelWithArbitraryTCPTraffic.java,133,,"      writeToSocket(client, ""Knock\n"".getBytes());"
129519,./TargetProjects/incubator-gobblin/gobblin-tunnel/src/test/java/org/apache/gobblin/tunnel/TestTunnelWithArbitraryTCPTraffic.java,136,,"      assertEquals(response, ""Knock Knock\n"");"
129520,./TargetProjects/incubator-gobblin/gobblin-tunnel/src/test/java/org/apache/gobblin/tunnel/TestTunnelWithArbitraryTCPTraffic.java,205,,"      client.write(ByteBuffer.wrap(""Hello\n"".getBytes()));"
129521,./TargetProjects/incubator-gobblin/gobblin-tunnel/src/test/java/org/apache/gobblin/tunnel/TestTunnelWithArbitraryTCPTraffic.java,339,,"      digestMsgsRecvdAtServer.put(Integer.toString(c), MessageDigest.getInstance(""MD5""));"
129522,./TargetProjects/incubator-gobblin/gobblin-tunnel/src/test/java/org/apache/gobblin/tunnel/TunnelTest.java,82,,"    Tunnel tunnel = Tunnel.build(""example.org"", 80, ""localhost"", PORT);"
129523,./TargetProjects/incubator-gobblin/gobblin-tunnel/src/test/java/org/apache/gobblin/tunnel/TunnelTest.java,82,,"    Tunnel tunnel = Tunnel.build(""example.org"", 80, ""localhost"", PORT);"
129524,./TargetProjects/incubator-gobblin/gobblin-tunnel/src/test/java/org/apache/gobblin/tunnel/TunnelTest.java,190,,"    mockServer.when(HttpRequest.request().withMethod(""CONNECT"").withPath(""www.us.apache.org:80""))"
129525,./TargetProjects/incubator-gobblin/gobblin-utility/src/main/java/org/apache/gobblin/util/HiveAvroTypeConstants.java,37,,"      .put(Schema.Type.INT,     ""int"")"
129526,./TargetProjects/incubator-gobblin/gobblin-utility/src/main/java/org/apache/gobblin/util/HiveAvroTypeConstants.java,38,,"      .put(Schema.Type.LONG,    ""bigint"")"
129527,./TargetProjects/incubator-gobblin/gobblin-utility/src/main/java/org/apache/gobblin/util/HiveAvroTypeConstants.java,39,,"      .put(Schema.Type.FLOAT,   ""float"")"
129528,./TargetProjects/incubator-gobblin/gobblin-utility/src/main/java/org/apache/gobblin/util/HiveAvroTypeConstants.java,40,,"      .put(Schema.Type.DOUBLE,  ""double"")"
129529,./TargetProjects/incubator-gobblin/gobblin-utility/src/main/java/org/apache/gobblin/util/HiveAvroTypeConstants.java,42,,"      .put(Schema.Type.STRING,  ""string"")"
129530,./TargetProjects/incubator-gobblin/gobblin-utility/src/main/java/org/apache/gobblin/util/HiveAvroTypeConstants.java,54,,"          .add(""smallint"", ""int"", ""bigint"", ""float"", ""double"", ""decimal"", ""string"", ""varchar"").build())"
129531,./TargetProjects/incubator-gobblin/gobblin-utility/src/main/java/org/apache/gobblin/util/HiveAvroTypeConstants.java,54,,"          .add(""smallint"", ""int"", ""bigint"", ""float"", ""double"", ""decimal"", ""string"", ""varchar"").build())"
129532,./TargetProjects/incubator-gobblin/gobblin-utility/src/main/java/org/apache/gobblin/util/WriterUtils.java,86,,"        ""Missing required property "" + writerStagingDirKey);"
129533,./TargetProjects/incubator-gobblin/gobblin-utility/src/main/java/org/apache/gobblin/util/filesystem/ThrottledFileSystem.java,123,,"      acquirePermit(""listStatus "" + path);"
129534,./TargetProjects/incubator-gobblin/gobblin-utility/src/main/java/org/apache/gobblin/util/hadoop/TokenUtils.java,141,,"    Preconditions.checkArgument(state.contains(KEYTAB_USER), ""Missing required property "" + KEYTAB_USER);"
129535,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/broker/AutoscopedFactoryTest.java,48,,"        taskBroker.getSharedResourceAtScope(new TestFactory<GobblinScopeTypes>(), new TestResourceKey(""myKey""), GobblinScopeTypes.JOB);"
129536,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/broker/DefaultGobblinBrokerTest.java,58,,"        topBroker.newSubscopedBuilder(new JobScopeInstance(""myJob"", ""job123"")).build();"
129537,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/broker/DefaultGobblinBrokerTest.java,58,,"        topBroker.newSubscopedBuilder(new JobScopeInstance(""myJob"", ""job123"")).build();"
129538,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/broker/DefaultGobblinBrokerTest.java,68,,"        taskBroker.getSharedResourceAtScope(new TestFactory<GobblinScopeTypes>(), new TestResourceKey(""myKey""), GobblinScopeTypes.JOB);"
129539,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/broker/DefaultGobblinBrokerTest.java,118,,"        JOINER.join(BrokerConstants.GOBBLIN_BROKER_CONFIG_PREFIX, TestFactory.NAME, ""key2""), ""value2"","
129540,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/broker/GobblinBrokerConfTest.java,42,,"        JOINER.join(BrokerConstants.GOBBLIN_BROKER_CONFIG_PREFIX, TestFactory.NAME, ""key1""), ""value1"","
129541,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/broker/GobblinBrokerConfTest.java,42,,"        JOINER.join(BrokerConstants.GOBBLIN_BROKER_CONFIG_PREFIX, TestFactory.NAME, ""key1""), ""value1"","
129542,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/broker/GobblinBrokerConfTest.java,43,,"        JOINER.join(BrokerConstants.GOBBLIN_BROKER_CONFIG_PREFIX, TestFactory.NAME, ""key2""), ""value2"","
129543,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/broker/GobblinBrokerConfTest.java,44,,"        JOINER.join(BrokerConstants.GOBBLIN_BROKER_CONFIG_PREFIX, TestFactory.NAME, GobblinScopeTypes.CONTAINER.name(), ""key2""), ""value2scope"","
129544,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/broker/GobblinBrokerConfTest.java,45,,"        JOINER.join(BrokerConstants.GOBBLIN_BROKER_CONFIG_PREFIX, TestFactory.NAME, key, ""key2""), ""value2key"","
129545,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/broker/GobblinBrokerConfTest.java,46,,"        JOINER.join(BrokerConstants.GOBBLIN_BROKER_CONFIG_PREFIX, TestFactory.NAME, GobblinScopeTypes.CONTAINER.name(), key, ""key2""), ""value2scopekey"""
129546,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/broker/KeyedScopedConfigViewImplTest.java,43,,"        .put(""key2"", ""value2"")"
129547,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/broker/SharedResourcesBrokerFactoryTest.java,75,,"    srcConfigMap.put(""gobblin.broker.key1"", ""value1"");"
129548,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/broker/SharedResourcesBrokerFactoryTest.java,83,,"    srcConfigMap.put(""gobblin.shared.key2"", ""value2"");"
129549,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/fsm/FiniteStateMachineTest.java,128,,"      throw new RuntimeException(""leave"");"
129550,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/runtime/cli/ConstructorAndPublicMethodsCliObjectFactoryTest.java,38,,"      object = factory.buildObject(new String[]{}, 0, false, ""usage"");"
129551,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/runtime/cli/ConstructorAndPublicMethodsCliObjectFactoryTest.java,45,,"    object = factory.buildObject(new String[]{""-myArg"", ""required""}, 0, false, ""usage"");"
129552,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/runtime/cli/ConstructorAndPublicMethodsCliObjectFactoryTest.java,45,,"    object = factory.buildObject(new String[]{""-myArg"", ""required""}, 0, false, ""usage"");"
129553,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/runtime/cli/ConstructorAndPublicMethodsCliObjectFactoryTest.java,50,,"    object = factory.buildObject(new String[]{""-setString1"", ""str1"", ""-myArg"", ""required""}, 0, false, ""usage"");"
129554,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/runtime/cli/ConstructorAndPublicMethodsCliObjectFactoryTest.java,55,,"    object = factory.buildObject(new String[]{""-foo"", ""bar"", ""-myArg"", ""required""}, 0, false, ""usage"");"
129555,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/runtime/cli/PublicMethodsCliObjectFactoryTest.java,38,,"      object = factory.buildObject(new String[]{}, 0, false, ""usage"");"
129556,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/runtime/cli/PublicMethodsCliObjectFactoryTest.java,45,,"    object = factory.buildObject(new String[]{""required""}, 0, false, ""usage"");"
129557,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/runtime/cli/PublicMethodsCliObjectFactoryTest.java,50,,"    object = factory.buildObject(new String[]{""-setString1"", ""str1"", ""required""}, 0, false, ""usage"");"
129558,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/runtime/cli/PublicMethodsCliObjectFactoryTest.java,55,,"    object = factory.buildObject(new String[]{""-foo"", ""bar"", ""required""}, 0, false, ""usage"");"
129559,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/AvroUtilsTest.java,94,,"        new Schema.Parser().parse(""{\""type\"":\""record\"", \""name\"":\""test\"", "" + ""\""fields\"":["""
129560,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/AvroUtilsTest.java,94,,"        new Schema.Parser().parse(""{\""type\"":\""record\"", \""name\"":\""test\"", "" + ""\""fields\"":["""
129561,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/AvroUtilsTest.java,95,,"            + ""{\""name\"": \""name\"", \""type\"": \""string\""}, "" + ""{\""name\"": \""number\"", \""type\"": \""int\""}"" + ""]}"");"
129562,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/AvroUtilsTest.java,99,,"            + ""{\""name\"": \""name\"", \""type\"": \""string\""}"" + ""]}"");"
129563,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/AvroUtilsTest.java,219,,"        requiredDouble(""double"").optionalFloat(""float"").endRecord();"
129564,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/AvroUtilsTest.java,360,,"    Schema schema = SchemaBuilder.record(""record"").fields().name(""union"").type(union).noDefault().endRecord();"
129565,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/AvroUtilsTest.java,379,,"    Schema inputRecord = SchemaBuilder.record(""test"").fields().requiredInt(""numeric1"")"
129566,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/AvroUtilsTest.java,380,,"            .requiredString(""string1"").endRecord();"
129567,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/AvroUtilsTest.java,382,,"    Schema.Field field = new Schema.Field(""newField"", fieldSchema, """",null);"
129568,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/AvroUtilsTest.java,400,,"            .name(""integer1"")"
129569,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/AvroUtilsTest.java,401,,"              .prop(""innerProp"", ""innerVal"")"
129570,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/AvroUtilsTest.java,401,,"              .prop(""innerProp"", ""innerVal"")"
129571,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/AvroUtilsTest.java,405,,"    inputRecord.addProp(""topLevelProp"", ""topLevelVal"");"
129572,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/AvroUtilsTest.java,435,,"    Schema fieldSchema = SchemaBuilder.record(""innerRecord"")"
129573,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/AvroUtilsTest.java,469,,"    inputRecord.put(""string1"", ""hello"");"
129574,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/AvroUtilsTest.java,496,,"    Schema nestedFieldSchema = SchemaBuilder.builder().record(""metadata"")"
129575,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/ConfigUtilsTest.java,77,,"    properties.setProperty(""k1.kk1"", ""v1"");"
129576,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/ConfigUtilsTest.java,78,,"    properties.setProperty(""k1.kk2"", ""v2"");"
129577,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/ConfigUtilsTest.java,79,,"    properties.setProperty(""k2.kk"", ""v3"");"
129578,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/ConfigUtilsTest.java,81,,"    properties.setProperty(""k3.kk1"", ""v5"");"
129579,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/ConfigUtilsTest.java,82,,"    properties.setProperty(""k3.kk1.kkk1"", ""v6"");"
129580,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/ConfigUtilsTest.java,111,,"    Assert.assertTrue(ConfigUtils.hasNonEmptyPath(ConfigFactory.parseMap(ImmutableMap.of(""key1"", ""value1"")), ""key1""));"
129581,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/ConfigUtilsTest.java,112,,"    Assert.assertFalse(ConfigUtils.hasNonEmptyPath(ConfigFactory.parseMap(ImmutableMap.of(""key2"", ""value1"")), ""key1""));"
129582,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/ConfigUtilsTest.java,120,,"    Assert.assertEquals(ConfigUtils.getStringList(ConfigFactory.parseMap(ImmutableMap.of(""a.b"", ""1,2,3"")), ""a.b""),"
129583,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/ConfigUtilsTest.java,234,,"    props.setProperty(""a.b"", ""123"");"
129584,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/ConfigUtilsTest.java,238,,"    props.setProperty(""a.b.c"", ""123"");"
129585,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/FileListUtilsTest.java,56,,"      Path subDir = new Path(baseDir, ""subDir"");"
129586,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/HadoopUtilsTest.java,78,,"    final Path hadoopUtilsTestDir = new Path(Files.createTempDir().getAbsolutePath(), ""HadoopUtilsTestDir"");"
129587,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/JobLauncherUtilsTest.java,61,,"    Assert.assertEquals(JobLauncherUtils.newTaskId(this.jobId, 0), this.jobId.replace(""job"", ""task"") + ""_0"");"
129588,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/ParallelRunnerTest.java,79,,"      workUnit1.setProp(""foo"", ""bar"");"
129589,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/PropertiesUtilsTest.java,34,,"    properties.setProperty(""k1.kk1"", ""v1"");"
129590,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/PropertiesUtilsTest.java,36,,"    properties.setProperty(""k2.kk"", ""v3"");"
129591,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/PullFileLoaderTest.java,57,,"    path = new Path(this.basePath, ""ajob.pull"");"
129592,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/PullFileLoaderTest.java,59,,"    Assert.assertEquals(pullFile.getString(""key2""), ""aValue"");"
129593,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/PullFileLoaderTest.java,59,,"    Assert.assertEquals(pullFile.getString(""key2""), ""aValue"");"
129594,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/PullFileLoaderTest.java,60,,"    Assert.assertEquals(pullFile.getString(""key10""), ""aValue"");"
129595,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/PullFileLoaderTest.java,64,,"    path = new Path(this.basePath, ""dir1/job.pull"");"
129596,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/PullFileLoaderTest.java,66,,"    Assert.assertEquals(pullFile.getString(""key1""), ""jobValue1,jobValue2,jobValue3"");"
129597,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/PullFileLoaderTest.java,66,,"    Assert.assertEquals(pullFile.getString(""key1""), ""jobValue1,jobValue2,jobValue3"");"
129598,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/PullFileLoaderTest.java,67,,"    Assert.assertEquals(pullFile.getString(""key2""), ""jobValue2"");"
129599,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/PullFileLoaderTest.java,71,,"    path = new Path(this.basePath, ""dir1/job.conf"");"
129600,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/PullFileLoaderTest.java,86,,"    sysProps.put(""key1"", ""sysProps1"");"
129601,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/PullFileLoaderTest.java,191,,"    Assert.assertEquals(pullFile.getString(""key3""), ""rootValue3"");"
129602,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/PullFileLoaderTest.java,191,,"    Assert.assertEquals(pullFile.getString(""key3""), ""rootValue3"");"
129603,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/PullFileLoaderTest.java,199,,"    Assert.assertEquals(pullFile.getString(""key2a""), ""jobValue2"");"
129604,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/PullFileLoaderTest.java,201,,"    Assert.assertEquals(pullFile.getString(""key4""), ""dir1Value4"");"
129605,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/PullFileLoaderTest.java,201,,"    Assert.assertEquals(pullFile.getString(""key4""), ""dir1Value4"");"
129606,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/SerializationUtilsTest.java,53,,"    workUnit1.setProp(""foo"", ""bar"");"
129607,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/TimeRangeCheckerTest.java,42,,"    Assert.assertTrue(TimeRangeChecker.isTimeInRange(Lists.newArrayList(""THURSDAY""), ""00-00"", ""06-00"", dateTime));"
129608,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/TimeRangeCheckerTest.java,42,,"    Assert.assertTrue(TimeRangeChecker.isTimeInRange(Lists.newArrayList(""THURSDAY""), ""00-00"", ""06-00"", dateTime));"
129609,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/TimeRangeCheckerTest.java,42,,"    Assert.assertTrue(TimeRangeChecker.isTimeInRange(Lists.newArrayList(""THURSDAY""), ""00-00"", ""06-00"", dateTime));"
129610,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/concurrent/TaskSchedulerTest.java,41,,"    Task task = new Task(""foo"");"
129611,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/limiter/broker/SharedLimiterFactoryTest.java,56,,"        factory.getAutoScope(broker, broker.getConfigView(SimpleScopeType.LOCAL, new SharedLimiterKey(""resource""), factory.getName())),"
129612,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/reflection/GobblinConstructorUtilsTest.java,90,,"        .invokeLongestConstructor(ConstructorTestClass.class, Integer.valueOf(1), ""String1"", ""String2"");"
129613,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/request_allocation/ConcurrentBoundedPriorityIterableTest.java,46,,"    Assert.assertTrue(iterable.add(""d-50""));"
129614,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/request_allocation/PreOrderAllocatorTest.java,43,,"        new StringRequestor(""r1"", ""a-50"", ""f-50"", ""k-20""),"
129615,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/request_allocation/PreOrderAllocatorTest.java,44,,"        new StringRequestor(""r2"", ""j-10"", ""b-20"", ""e-20""),"
129616,./TargetProjects/incubator-gobblin/gobblin-utility/src/test/java/org/apache/gobblin/util/request_allocation/PreOrderAllocatorTest.java,45,,"        new StringRequestor(""r3"", ""g-20"", ""c-200"", ""d-30""));"
129617,./TargetProjects/incubator-gobblin/gobblin-yarn/src/main/java/org/apache/gobblin/yarn/YarnService.java,588,,"        .append("" --"").append(GobblinClusterConfigurationKeys.APPLICATION_NAME_OPTION_NAME)"
129618,./TargetProjects/incubator-gobblin/gobblin-yarn/src/test/java/org/apache/gobblin/yarn/YarnAutoScalingManagerTest.java,60,,"    Mockito.when(mockJobDag.getAllNodes()).thenReturn(ImmutableSet.of(""job1""));"
129619,./TargetProjects/incubator-gobblin/gobblin-yarn/src/test/java/org/apache/gobblin/yarn/YarnAutoScalingManagerTest.java,64,,"        .thenReturn(ImmutableMap.of(""workflow1"", mockWorkflowConfig));"
129620,./TargetProjects/incubator-gobblin/gobblin-yarn/src/test/java/org/apache/gobblin/yarn/YarnAutoScalingManagerTest.java,74,,"    Mockito.when(mockJobContext.getAssignedParticipant(2)).thenReturn(""GobblinYarnTaskRunner-1"");"
129621,./TargetProjects/incubator-gobblin/gobblin-yarn/src/test/java/org/apache/gobblin/yarn/YarnAutoScalingManagerTest.java,79,,"    Mockito.when(helixDataAccessor.keyBuilder()).thenReturn(new PropertyKey.Builder(""cluster""));"
129622,./TargetProjects/incubator-gobblin/gobblin-yarn/src/test/java/org/apache/gobblin/yarn/YarnAutoScalingManagerTest.java,104,,"    Mockito.when(mockJobDag.getAllNodes()).thenReturn(ImmutableSet.of(""job1"", ""job2""));"
129623,./TargetProjects/incubator-gobblin/gobblin-yarn/src/test/java/org/apache/gobblin/yarn/YarnAutoScalingManagerTest.java,124,,"    Mockito.when(mockJobContext2.getAssignedParticipant(3)).thenReturn(""GobblinYarnTaskRunner-2"");"
129624,./TargetProjects/incubator-gobblin/gobblin-yarn/src/test/java/org/apache/gobblin/yarn/YarnAutoScalingManagerTest.java,178,,"    Mockito.when(mockJobDag2.getAllNodes()).thenReturn(ImmutableSet.of(""job3""));"
129625,./TargetProjects/incubator-gobblin/gobblin-yarn/src/test/java/org/apache/gobblin/yarn/YarnAutoScalingManagerTest.java,184,,"    Mockito.when(mockTaskDriver.getWorkflowContext(""workflow2"")).thenReturn(mockWorkflowContext2);"
129626,./TargetProjects/incubator-gobblin/gobblin-yarn/src/test/java/org/apache/gobblin/yarn/YarnAutoScalingManagerTest.java,189,,"    Mockito.when(mockJobContext3.getAssignedParticipant(4)).thenReturn(""GobblinYarnTaskRunner-3"");"
129627,./TargetProjects/incubator-gobblin/gobblin-yarn/src/test/java/org/apache/gobblin/yarn/YarnServiceTest.java,79,,"@Test(groups = {""gobblin.yarn"", ""disabledOnCI""}, singleThreaded=true)"
129628,./TargetProjects/incubator-gobblin/gobblin-yarn/src/test/java/org/apache/gobblin/yarn/YarnServiceTest.java,79,,"@Test(groups = {""gobblin.yarn"", ""disabledOnCI""}, singleThreaded=true)"
129629,./TargetProjects/incubator-heron/contrib/bolts/kafka/test/java/org/apache/heron/bolts/kafka/KafkaBoltTest.java,81,,"    when(tupleTransformer.transformToKey(tuple)).thenReturn(""key"");"
129630,./TargetProjects/incubator-heron/contrib/bolts/kafka/test/java/org/apache/heron/bolts/kafka/KafkaBoltTest.java,84,,"    when(tupleTransformer.getTopicName(tuple)).thenReturn(""topic"");"
129631,./TargetProjects/incubator-heron/contrib/spouts/kafka/test/java/org/apache/heron/spouts/kafka/KafkaSpoutTest.java,156,,"                ""key"", new byte[]{0xF}))));"
129632,./TargetProjects/incubator-heron/eco/src/java/org/apache/heron/eco/builder/BuilderUtility.java,41,,"  @SuppressWarnings(""rawtypes"")"
129633,./TargetProjects/incubator-heron/eco/src/java/org/apache/heron/eco/builder/ObjectBuilder.java,46,,"  @SuppressWarnings(""rawtypes"")"
129634,./TargetProjects/incubator-heron/eco/tests/java/org/apache/heron/eco/builder/ConfigBuilderTest.java,48,,"  private static final String YAML_PROPERTIES = ""config:\n"""
129635,./TargetProjects/incubator-heron/eco/tests/java/org/apache/heron/eco/builder/ConfigBuilderTest.java,49,,"      + ""  topology.workers: 1\n"""
129636,./TargetProjects/incubator-heron/eco/tests/java/org/apache/heron/eco/builder/ConfigBuilderTest.java,50,,"      + ""  topology.component.resourcemap:\n"""
129637,./TargetProjects/incubator-heron/eco/tests/java/org/apache/heron/eco/builder/ConfigBuilderTest.java,52,,"      + ""    - id: \""spout-1\""\n"""
129638,./TargetProjects/incubator-heron/eco/tests/java/org/apache/heron/eco/builder/ConfigBuilderTest.java,53,,"      + ""      ram: 256000000B\n"""
129639,./TargetProjects/incubator-heron/eco/tests/java/org/apache/heron/eco/builder/ConfigBuilderTest.java,54,,"      + ""      cpu: 0.5\n"""
129640,./TargetProjects/incubator-heron/eco/tests/java/org/apache/heron/eco/builder/ConfigBuilderTest.java,55,,"      + ""      disk: 4GB\n"""
129641,./TargetProjects/incubator-heron/eco/tests/java/org/apache/heron/eco/builder/ConfigBuilderTest.java,57,,"      + ""    - id: \""bolt-1\""\n"""
129642,./TargetProjects/incubator-heron/eco/tests/java/org/apache/heron/eco/builder/ConfigBuilderTest.java,60,,"      + ""      disk: 2GB"";"
129643,./TargetProjects/incubator-heron/eco/tests/java/org/apache/heron/eco/builder/ConfigBuilderTest.java,110,,"      + ""      ram: 256MB\n"""
129644,./TargetProjects/incubator-heron/eco/tests/java/org/apache/heron/eco/builder/heron/HeronStreamBuilderTest.java,96,,"  @SuppressWarnings(""unchecked"")"
129645,./TargetProjects/incubator-heron/eco/tests/java/org/apache/heron/eco/builder/heron/HeronStreamBuilderTest.java,102,,"    final String from = ""from"";"
129646,./TargetProjects/incubator-heron/eco/tests/java/org/apache/heron/eco/builder/heron/HeronStreamBuilderTest.java,322,,"  @SuppressWarnings(""serial"")"
129647,./TargetProjects/incubator-heron/eco/tests/java/org/apache/heron/eco/builder/storm/StormStreamBuilderTest.java,96,,"  @SuppressWarnings(""unchecked"")"
129648,./TargetProjects/incubator-heron/eco/tests/java/org/apache/heron/eco/builder/storm/StormStreamBuilderTest.java,102,,"    final String from = ""from"";"
129649,./TargetProjects/incubator-heron/eco/tests/java/org/apache/heron/eco/builder/storm/StormStreamBuilderTest.java,271,,"  @SuppressWarnings(""serial"")"
129650,./TargetProjects/incubator-heron/eco/tests/java/org/apache/heron/eco/parser/EcoParserTest.java,56,,"      + ""#\n"""
129651,./TargetProjects/incubator-heron/eco/tests/java/org/apache/heron/eco/parser/EcoParserTest.java,58,,"      + ""spouts:\n"""
129652,./TargetProjects/incubator-heron/eco/tests/java/org/apache/heron/eco/parser/EcoParserTest.java,61,,"      + ""    parallelism: 1\n"""
129653,./TargetProjects/incubator-heron/eco/tests/java/org/apache/heron/eco/parser/EcoParserTest.java,64,,"      + ""bolts:\n"""
129654,./TargetProjects/incubator-heron/eco/tests/java/org/apache/heron/eco/parser/EcoParserTest.java,81,,"      + ""    grouping:\n"""
129655,./TargetProjects/incubator-heron/eco/tests/java/org/apache/heron/eco/parser/EcoParserTest.java,172,,"      + ""    constructorArgs:\n"""
129656,./TargetProjects/incubator-heron/examples/src/java/org/apache/heron/examples/api/AckingTopology.java,56,,"    builder.setSpout(""word"", new AckingTestWordSpout(), spouts);"
129657,./TargetProjects/incubator-heron/examples/src/java/org/apache/heron/examples/api/ComponentConfigTopology.java,51,,"    builder.setSpout(""word"", new TestWordSpout(), 2)"
129658,./TargetProjects/incubator-heron/examples/src/java/org/apache/heron/examples/api/ComponentConfigTopology.java,55,,"    builder.setBolt(""exclaim1"", new ExclamationBolt(), 2)"
129659,./TargetProjects/incubator-heron/examples/src/java/org/apache/heron/examples/api/ComponentJVMOptionsTopology.java,51,,"    builder.setSpout(""word"", new TestWordSpout(), 2);"
129660,./TargetProjects/incubator-heron/examples/src/java/org/apache/heron/examples/api/ComponentJVMOptionsTopology.java,52,,"    builder.setBolt(""exclaim1"", new ExclamationBolt(), 2)"
129661,./TargetProjects/incubator-heron/examples/src/java/org/apache/heron/examples/api/MultiStageAckingTopology.java,57,,"    builder.setSpout(""word"", new AckingTestWordSpout(), parallelism);"
129662,./TargetProjects/incubator-heron/examples/src/java/org/apache/heron/examples/api/SentenceWordCountTopology.java,141,,"      declarer.declare(new Fields(""word"", ""count""));"
129663,./TargetProjects/incubator-heron/examples/src/java/org/apache/heron/examples/api/StatefulSlidingWindowTopology.java,67,,"    @SuppressWarnings(""HiddenField"")"
129664,./TargetProjects/incubator-heron/examples/src/java/org/apache/heron/examples/api/StatefulTumblingWindowTopology.java,66,,"    @SuppressWarnings(""HiddenField"")"
129665,./TargetProjects/incubator-heron/examples/src/java/org/apache/heron/examples/api/StatefulWordCountTopology.java,121,,"      outputFieldsDeclarer.declare(new Fields(""word""));"
129666,./TargetProjects/incubator-heron/examples/src/java/org/apache/heron/examples/api/TaskHookTopology.java,63,,"    builder.setSpout(""word"", new AckingTestWordSpout(), 2);"
129667,./TargetProjects/incubator-heron/examples/src/java/org/apache/heron/examples/api/WordCountTopology.java,113,,"      outputFieldsDeclarer.declare(new Fields(""word""));"
129668,./TargetProjects/incubator-heron/heron/api/src/java/org/apache/heron/api/bolt/WindowedBoltExecutor.java,133,,"  @SuppressWarnings(""HiddenField"")"
129669,./TargetProjects/incubator-heron/heron/api/src/java/org/apache/heron/api/serializer/DefaultKryoFactory.java,33,,"  @SuppressWarnings(""rawtypes"")"
129670,./TargetProjects/incubator-heron/heron/api/src/java/org/apache/heron/streamlet/impl/StreamletImpl.java,274,,"    checkNotNull(windowCfg, ""windowCfg cannot be null"");"
129671,./TargetProjects/incubator-heron/heron/api/src/java/org/apache/heron/streamlet/impl/StreamletImpl.java,327,,"    checkNotNull(keyExtractor, ""keyExtractor cannot be null"");"
129672,./TargetProjects/incubator-heron/heron/api/src/java/org/apache/heron/streamlet/impl/StreamletImpl.java,329,,"    checkNotNull(reduceFn, ""reduceFn cannot be null"");"
129673,./TargetProjects/incubator-heron/heron/api/tests/java/org/apache/heron/api/HeronSubmitterTest.java,66,,"    builder.setSpout(""word"", new TestSpout(), spouts);"
129674,./TargetProjects/incubator-heron/heron/api/tests/java/org/apache/heron/api/HeronSubmitterTest.java,67,,"    builder.setBolt(""exclaim1"", new TestBolt(), bolts)"
129675,./TargetProjects/incubator-heron/heron/api/tests/java/org/apache/heron/api/HeronSubmitterTest.java,97,,"    HeronSubmitter.submitTopology(""test"", conf, builder.createTopology());"
129676,./TargetProjects/incubator-heron/heron/api/tests/java/org/apache/heron/api/bolt/BaseWindowedBoltTest.java,85,,"        builder.setBolt(""testBolt"", new TestBolt().withWindow(windowLengthCount,"
129677,./TargetProjects/incubator-heron/heron/api/tests/java/org/apache/heron/api/bolt/WindowedBoltExecutorTest.java,96,,"        return TopologyAPI.StreamId.newBuilder().setComponentName(""s1"").setId(""default"").build();"
129678,./TargetProjects/incubator-heron/heron/api/tests/java/org/apache/heron/api/bolt/WindowedBoltExecutorTest.java,171,,"    conf.put(WindowingConfigs.TOPOLOGY_BOLTS_LATE_TUPLE_STREAM, ""$late"");"
129679,./TargetProjects/incubator-heron/heron/api/tests/java/org/apache/heron/streamlet/impl/StreamletImplTest.java,106,,"    splitter.put(""all"", i -> true);"
129680,./TargetProjects/incubator-heron/heron/api/tests/java/org/apache/heron/streamlet/impl/StreamletImplTest.java,107,,"    splitter.put(""positive"", i -> i > 0);"
129681,./TargetProjects/incubator-heron/heron/api/tests/java/org/apache/heron/streamlet/impl/StreamletImplTest.java,108,,"    splitter.put(""negative"", i -> i < 0);"
129682,./TargetProjects/incubator-heron/heron/api/tests/java/org/apache/heron/streamlet/impl/StreamletImplTest.java,185,,"  @SuppressWarnings(""unchecked"")"
129683,./TargetProjects/incubator-heron/heron/api/tests/java/org/apache/heron/streamlet/impl/StreamletImplTest.java,384,,"        .<String, Double>reduceByKey(x -> (x > 0) ? ""positive"" : ((x < 0) ? ""negative"" : ""zero""),"
129684,./TargetProjects/incubator-heron/heron/api/tests/java/org/apache/heron/streamlet/impl/StreamletImplTest.java,535,,"        ""This is test content"");"
129685,./TargetProjects/incubator-heron/heron/api/tests/java/org/apache/heron/streamlet/impl/operators/JoinOperatorTest.java,68,,"  @SuppressWarnings({""rawtypes"", ""unchecked""})"
129686,./TargetProjects/incubator-heron/heron/api/tests/java/org/apache/heron/streamlet/impl/operators/JoinOperatorTest.java,68,,"  @SuppressWarnings({""rawtypes"", ""unchecked""})"
129687,./TargetProjects/incubator-heron/heron/api/tests/java/org/apache/heron/streamlet/impl/operators/JoinOperatorTest.java,89,,"      Assert.assertEquals(""key1"", keyedWindow.getKey());"
129688,./TargetProjects/incubator-heron/heron/api/tests/java/org/apache/heron/streamlet/impl/operators/JoinOperatorTest.java,132,,"        case ""key2"":"
129689,./TargetProjects/incubator-heron/heron/api/tests/java/org/apache/heron/streamlet/impl/operators/KeyByOperatorTest.java,60,,"    expectedResults.put(""even"", 0);"
129690,./TargetProjects/incubator-heron/heron/api/tests/java/org/apache/heron/streamlet/impl/utils/StreamletUtilsTest.java,33,,"    require(!text.isEmpty(), ""text should not be blank"");"
129691,./TargetProjects/incubator-heron/heron/common/src/java/org/apache/heron/common/basics/ResourceMeasure.java,52,,"  @SuppressWarnings(""unchecked"")"
129692,./TargetProjects/incubator-heron/heron/common/src/java/org/apache/heron/common/basics/TypeUtils.java,45,,"        throw new IllegalArgumentException(""Don't know how to convert "" + o + "" to int"");"
129693,./TargetProjects/incubator-heron/heron/common/src/java/org/apache/heron/common/utils/metrics/JVMMetrics.java,312,,"      String normalizedKeyName = bufferPoolMXBean.getName().replaceAll(""[^\\w]"", ""-"");"
129694,./TargetProjects/incubator-heron/heron/common/tests/java/org/apache/heron/common/utils/TopologyUtilsTest.java,41,,"    spouts.put(""spout"", componentParallelism);"
129695,./TargetProjects/incubator-heron/heron/common/tests/java/org/apache/heron/common/utils/TopologyUtilsTest.java,43,,"    bolts.put(""bolt"", componentParallelism);"
129696,./TargetProjects/incubator-heron/heron/common/tests/java/org/apache/heron/common/utils/TopologyUtilsTest.java,77,,"        TopologyTests.createTopology(""test"", topologyConfig, spouts, bolts)));"
129697,./TargetProjects/incubator-heron/heron/downloaders/tests/java/org/apache/heron/downloader/ExtractorTests.java,52,,"    final Path file1 = Paths.get(tempDirectory, ""file1"");"
129698,./TargetProjects/incubator-heron/heron/downloaders/tests/java/org/apache/heron/downloader/ExtractorTests.java,75,,"    final Path file1 = Paths.get(tempDirectory, ""file"");"
129699,./TargetProjects/incubator-heron/heron/downloaders/tests/java/org/apache/heron/downloader/ExtractorTests.java,76,,"    final Path nestedFile = Paths.get(tempDirectory, ""dir"", ""file"");"
129700,./TargetProjects/incubator-heron/heron/healthmgr/tests/java/org/apache/heron/healthmgr/detectors/BackPressureDetectorTest.java,60,,"        = new Measurement(""bolt"", ""i1"", METRIC_BACK_PRESSURE.text(), now, 55);"
129701,./TargetProjects/incubator-heron/heron/healthmgr/tests/java/org/apache/heron/healthmgr/detectors/GrowingWaitQueueDetectorTest.java,47,,"        ""bolt"", ""i1"", METRIC_WAIT_Q_SIZE.text(), Instant.ofEpochSecond(1497892222), 0.0);"
129702,./TargetProjects/incubator-heron/heron/healthmgr/tests/java/org/apache/heron/healthmgr/detectors/LargeWaitQueueDetectorTest.java,47,,"        ""bolt"", ""i1"", METRIC_WAIT_Q_SIZE.text(), Instant.ofEpochSecond(1497892222), 21);"
129703,./TargetProjects/incubator-heron/heron/healthmgr/tests/java/org/apache/heron/healthmgr/detectors/ProcessingRateSkewDetectorTest.java,50,,"        ""bolt"", ""i1"", METRIC_EXE_COUNT.text(), Instant.ofEpochSecond(1497892222), 1000);"
129704,./TargetProjects/incubator-heron/heron/healthmgr/tests/java/org/apache/heron/healthmgr/detectors/ProcessingRateSkewDetectorTest.java,97,,"    assertEquals(1, symptomsTable.type(""POSITIVE "" + BaseDetector.SymptomType"
129705,./TargetProjects/incubator-heron/heron/healthmgr/tests/java/org/apache/heron/healthmgr/detectors/ProcessingRateSkewDetectorTest.java,99,,"    assertEquals(1, symptomsTable.type(""NEGATIVE "" + BaseDetector.SymptomType"
129706,./TargetProjects/incubator-heron/heron/healthmgr/tests/java/org/apache/heron/healthmgr/detectors/WaitQueueSkewDetectorTest.java,48,,"        ""bolt"", ""i1"", METRIC_WAIT_Q_SIZE.text(), Instant.ofEpochSecond(1497892222), 1501);"
129707,./TargetProjects/incubator-heron/heron/healthmgr/tests/java/org/apache/heron/healthmgr/resolvers/ScaleUpResolverTest.java,81,,"    Collections.singletonList(new Measurement(""bolt"", ""i1"", METRIC_BACK_PRESSURE.text(), now, 123));"
129708,./TargetProjects/incubator-heron/heron/healthmgr/tests/java/org/apache/heron/healthmgr/sensors/BackPressureSensorTest.java,52,,"        Arrays.asList(new String[]{""bolt-1"", ""bolt-2""}));"
129709,./TargetProjects/incubator-heron/heron/healthmgr/tests/java/org/apache/heron/healthmgr/sensors/BackPressureSensorTest.java,52,,"        Arrays.asList(new String[]{""bolt-1"", ""bolt-2""}));"
129710,./TargetProjects/incubator-heron/heron/healthmgr/tests/java/org/apache/heron/healthmgr/sensors/BufferSizeSensorTest.java,47,,"        Arrays.asList(new String[]{""bolt-1"", ""bolt-2""}));"
129711,./TargetProjects/incubator-heron/heron/healthmgr/tests/java/org/apache/heron/healthmgr/sensors/BufferSizeSensorTest.java,47,,"        Arrays.asList(new String[]{""bolt-1"", ""bolt-2""}));"
129712,./TargetProjects/incubator-heron/heron/healthmgr/tests/java/org/apache/heron/healthmgr/sensors/ExecuteCountSensorTest.java,52,,"        Arrays.asList(new String[]{""bolt-1"", ""bolt-2""}));"
129713,./TargetProjects/incubator-heron/heron/healthmgr/tests/java/org/apache/heron/healthmgr/sensors/ExecuteCountSensorTest.java,52,,"        Arrays.asList(new String[]{""bolt-1"", ""bolt-2""}));"
129714,./TargetProjects/incubator-heron/heron/healthmgr/tests/java/org/apache/heron/healthmgr/sensors/MetricsCacheMetricsProviderTest.java,61,,"            .setInstanceId(""container_1_bolt_1"")"
129715,./TargetProjects/incubator-heron/heron/healthmgr/tests/java/org/apache/heron/healthmgr/sensors/MetricsCacheMetricsProviderTest.java,70,,"            .setInstanceId(""container_1_bolt_2"")"
129716,./TargetProjects/incubator-heron/heron/instance/tests/java/org/apache/heron/metrics/GlobalMetricsTest.java,51,,"    GlobalMetrics.incr(""mycounter"");"
129717,./TargetProjects/incubator-heron/heron/instance/tests/java/org/apache/heron/metrics/GlobalMetricsTest.java,58,,"    GlobalMetrics.incr(""mycounter1"");"
129718,./TargetProjects/incubator-heron/heron/instance/tests/java/org/apache/heron/metrics/MultiAssignableMetricTest.java,36,,"    multiAssignableMetric.scope(""metric_a"").setValue(100);"
129719,./TargetProjects/incubator-heron/heron/instance/tests/java/org/apache/heron/metrics/MultiAssignableMetricTest.java,37,,"    multiAssignableMetric.scope(""metric_b"").setValue(200);"
129720,./TargetProjects/incubator-heron/heron/metricscachemgr/tests/java/org/apache/heron/metricscachemgr/metricscache/CacheCoreTest.java,116,,"        ""0.1"", ""0.2"", ""0.3"", ""0.4"", ""0.5"", ""0.6"", ""0.7"", ""0.8"""
129721,./TargetProjects/incubator-heron/heron/metricscachemgr/tests/java/org/apache/heron/metricscachemgr/metricscache/CacheCoreTest.java,116,,"        ""0.1"", ""0.2"", ""0.3"", ""0.4"", ""0.5"", ""0.6"", ""0.7"", ""0.8"""
129722,./TargetProjects/incubator-heron/heron/metricscachemgr/tests/java/org/apache/heron/metricscachemgr/metricscache/CacheCoreTest.java,116,,"        ""0.1"", ""0.2"", ""0.3"", ""0.4"", ""0.5"", ""0.6"", ""0.7"", ""0.8"""
129723,./TargetProjects/incubator-heron/heron/metricscachemgr/tests/java/org/apache/heron/metricscachemgr/metricscache/CacheCoreTest.java,116,,"        ""0.1"", ""0.2"", ""0.3"", ""0.4"", ""0.5"", ""0.6"", ""0.7"", ""0.8"""
129724,./TargetProjects/incubator-heron/heron/metricscachemgr/tests/java/org/apache/heron/metricscachemgr/metricscache/CacheCoreTest.java,116,,"        ""0.1"", ""0.2"", ""0.3"", ""0.4"", ""0.5"", ""0.6"", ""0.7"", ""0.8"""
129725,./TargetProjects/incubator-heron/heron/metricscachemgr/tests/java/org/apache/heron/metricscachemgr/metricscache/CacheCoreTest.java,116,,"        ""0.1"", ""0.2"", ""0.3"", ""0.4"", ""0.5"", ""0.6"", ""0.7"", ""0.8"""
129726,./TargetProjects/incubator-heron/heron/metricscachemgr/tests/java/org/apache/heron/metricscachemgr/metricscache/CacheCoreTest.java,116,,"        ""0.1"", ""0.2"", ""0.3"", ""0.4"", ""0.5"", ""0.6"", ""0.7"", ""0.8"""
129727,./TargetProjects/incubator-heron/heron/metricsmgr/src/java/org/apache/heron/metricsmgr/MetricsManager.java,237,,"        .desc(""The name of the topology to collect metrics from"")"
129728,./TargetProjects/incubator-heron/heron/metricsmgr/src/java/org/apache/heron/metricsmgr/sink/PrometheusSink.java,216,,"            labelKV.put(""metric_instance_id"", metricParts[1]);"
129729,./TargetProjects/incubator-heron/heron/metricsmgr/tests/java/org/apache/heron/metricsmgr/sink/PrometheusSinkTests.java,84,,"    Mockito.when(context.getTopologyName()).thenReturn(""testTopology"");"
129730,./TargetProjects/incubator-heron/heron/metricsmgr/tests/java/org/apache/heron/metricsmgr/sink/PrometheusSinkTests.java,126,,"    Iterable<MetricsInfo> infos = Arrays.asList(new MetricsInfo(""metric_1"", ""1.0""),"
129731,./TargetProjects/incubator-heron/heron/metricsmgr/tests/java/org/apache/heron/metricsmgr/sink/PrometheusSinkTests.java,158,,"        createMetric(topology, ""component"", ""instance_1"", ""metric_1"", ""1.0""),"
129732,./TargetProjects/incubator-heron/heron/metricsmgr/tests/java/org/apache/heron/metricsmgr/sink/PrometheusSinkTests.java,158,,"        createMetric(topology, ""component"", ""instance_1"", ""metric_1"", ""1.0""),"
129733,./TargetProjects/incubator-heron/heron/metricsmgr/tests/java/org/apache/heron/metricsmgr/sink/PrometheusSinkTests.java,196,,"        createMetric(topology, ""__stmgr__"", ""stmgr-1"","
129734,./TargetProjects/incubator-heron/heron/metricsmgr/tests/java/org/apache/heron/metricsmgr/sink/PrometheusSinkTests.java,196,,"        createMetric(topology, ""__stmgr__"", ""stmgr-1"","
129735,./TargetProjects/incubator-heron/heron/metricsmgr/tests/java/org/apache/heron/metricsmgr/sink/PrometheusSinkTests.java,242,,"        createOffsetMetric(topology, ""spout-release-1"", ""container_1_spout-release-1_31"","
129736,./TargetProjects/incubator-heron/heron/metricsmgr/tests/java/org/apache/heron/metricsmgr/sink/PrometheusSinkTests.java,242,,"        createOffsetMetric(topology, ""spout-release-1"", ""container_1_spout-release-1_31"","
129737,./TargetProjects/incubator-heron/heron/metricsmgr/tests/java/org/apache/heron/metricsmgr/sink/PrometheusSinkTests.java,243,,"            ""kafka_offset_partition_spout_lag"", ""event_data"", ""0"", ""1.0""),"
129738,./TargetProjects/incubator-heron/heron/metricsmgr/tests/java/org/apache/heron/metricsmgr/sink/WebSinkTest.java,93,,"    Iterable<MetricsInfo> infos = Arrays.asList(new MetricsInfo(""metric_1"", ""1.0""),"
129739,./TargetProjects/incubator-heron/heron/packing/src/java/org/apache/heron/packing/builder/PackingPlanBuilder.java,158,,"  @SuppressWarnings(""JavadocMethod"")"
129740,./TargetProjects/incubator-heron/heron/packing/tests/java/org/apache/heron/packing/binpacking/FirstFitDecreasingPackingTest.java,471,,"    @SuppressWarnings({""unchecked"", ""rawtypes""})"
129741,./TargetProjects/incubator-heron/heron/packing/tests/java/org/apache/heron/packing/binpacking/FirstFitDecreasingPackingTest.java,471,,"    @SuppressWarnings({""unchecked"", ""rawtypes""})"
129742,./TargetProjects/incubator-heron/heron/packing/tests/java/org/apache/heron/packing/builder/PackingPlanBuilderTest.java,186,,"  @SuppressWarnings({""unchecked"", ""rawtypes""})"
129743,./TargetProjects/incubator-heron/heron/packing/tests/java/org/apache/heron/packing/builder/PackingPlanBuilderTest.java,186,,"  @SuppressWarnings({""unchecked"", ""rawtypes""})"
129744,./TargetProjects/incubator-heron/heron/packing/tests/java/org/apache/heron/packing/builder/PackingPlanBuilderTest.java,188,,"      new Pair<>(1, new InstanceId(""componentA"", 1, 0)),"
129745,./TargetProjects/incubator-heron/heron/packing/tests/java/org/apache/heron/packing/builder/PackingPlanBuilderTest.java,190,,"      new Pair<>(3, new InstanceId(""componentB"", 3, 0))"
129746,./TargetProjects/incubator-heron/heron/packing/tests/java/org/apache/heron/packing/roundrobin/ResourceCompliantRRPackingTest.java,573,,"    @SuppressWarnings({""unchecked"", ""rawtypes""})"
129747,./TargetProjects/incubator-heron/heron/packing/tests/java/org/apache/heron/packing/roundrobin/ResourceCompliantRRPackingTest.java,573,,"    @SuppressWarnings({""unchecked"", ""rawtypes""})"
129748,./TargetProjects/incubator-heron/heron/scheduler-core/tests/java/org/apache/heron/scheduler/RuntimeManagerMainTest.java,209,,"        .when(ReflectionUtils.class, ""newInstance"", Mockito.eq(IStateManager.class.getName()));"
129749,./TargetProjects/incubator-heron/heron/scheduler-core/tests/java/org/apache/heron/scheduler/RuntimeManagerRunnerTest.java,289,,"    Map<String, Integer> changes = runner.parseNewParallelismParam(""foo:1,bar:2"");"
129750,./TargetProjects/incubator-heron/heron/scheduler-core/tests/java/org/apache/heron/scheduler/SchedulerMainTest.java,114,,"        when(ReflectionUtils.class, ""newInstance"", STATE_MANAGER_CLASS);"
129751,./TargetProjects/incubator-heron/heron/scheduler-core/tests/java/org/apache/heron/scheduler/SubmitterMainTest.java,92,,"        .when(ReflectionUtils.class, ""newInstance"", STATE_MANAGER_CLASS);"
129752,./TargetProjects/incubator-heron/heron/schedulers/src/java/org/apache/heron/scheduler/aurora/AuroraCLIController.java,62,,"        new ArrayList<>(Arrays.asList(""aurora"", ""job"", ""create"", ""--wait-until"", ""RUNNING""));"
129753,./TargetProjects/incubator-heron/heron/schedulers/src/java/org/apache/heron/scheduler/aurora/AuroraCLIController.java,62,,"        new ArrayList<>(Arrays.asList(""aurora"", ""job"", ""create"", ""--wait-until"", ""RUNNING""));"
129754,./TargetProjects/incubator-heron/heron/schedulers/src/java/org/apache/heron/scheduler/kubernetes/V1Controller.java,242,,"                + getTopologyName() + ""] in namespace ["" + getNamespace() + ""]"");"
129755,./TargetProjects/incubator-heron/heron/schedulers/src/java/org/apache/heron/scheduler/kubernetes/V1Controller.java,255,,"      throw new TopologyRuntimeManagementException(""Error deleting topology ["""
129756,./TargetProjects/incubator-heron/heron/schedulers/src/java/org/apache/heron/scheduler/mesos/framework/MesosFramework.java,98,,"        LOG.severe(""Job has been killed"");"
129757,./TargetProjects/incubator-heron/heron/schedulers/src/java/org/apache/heron/scheduler/nomad/NomadConstants.java,70,,"  public static final String SERVER_PORT = String.format(""${NOMAD_PORT_%s}"","
129758,./TargetProjects/incubator-heron/heron/schedulers/src/java/org/apache/heron/scheduler/nomad/NomadScheduler.java,112,,"          + Runtime.topologyName(this.runtimeConfig) + "" with error: "" + e.getMessage(), e);"
129759,./TargetProjects/incubator-heron/heron/schedulers/tests/java/org/apache/heron/scheduler/marathon/MarathonControllerTest.java,80,,"        .when(NetworkUtils.class, ""getHttpConnection"", Mockito.anyString());"
129760,./TargetProjects/incubator-heron/heron/schedulers/tests/java/org/apache/heron/scheduler/marathon/MarathonControllerTest.java,103,,"        .when(NetworkUtils.class, ""checkHttpResponseCode"","
129761,./TargetProjects/incubator-heron/heron/schedulers/tests/java/org/apache/heron/scheduler/marathon/MarathonControllerTest.java,116,,"        .when(NetworkUtils.class, ""sendHttpPostRequest"","
129762,./TargetProjects/incubator-heron/heron/schedulers/tests/java/org/apache/heron/scheduler/nomad/NomadSchedulerTest.java,185,,"        NomadScheduler.class, ""restartJobs"","
129763,./TargetProjects/incubator-heron/heron/schedulers/tests/java/org/apache/heron/scheduler/nomad/NomadSchedulerTest.java,341,,"    LOG.info(""task: "" + task);"
129764,./TargetProjects/incubator-heron/heron/schedulers/tests/java/org/apache/heron/scheduler/yarn/HeronMasterDriverTest.java,222,,"    PackingPlan packingPlan = PackingTestUtils.testPackingPlan(""test"", new RoundRobinPacking());"
129765,./TargetProjects/incubator-heron/heron/simulator/tests/java/org/apache/heron/simulator/grouping/FieldsGroupingTest.java,63,,"            setKey(""field1"")."
129766,./TargetProjects/incubator-heron/heron/spi/tests/java/org/apache/heron/spi/packing/PackingPlanTest.java,78,,"        new TestInstance(new InstanceId(""spout"", 1, 0), 3),"
129767,./TargetProjects/incubator-heron/heron/spi/tests/java/org/apache/heron/spi/packing/PackingPlanTest.java,79,,"        new TestInstance(new InstanceId(""bolt"", 3, 0), 2)));"
129768,./TargetProjects/incubator-heron/heron/spi/tests/java/org/apache/heron/spi/utils/NetworkUtilsTest.java,77,,"    Mockito.doThrow(new IOException(""Designed IO exception for testing""))."
129769,./TargetProjects/incubator-heron/heron/spi/tests/java/org/apache/heron/spi/utils/NetworkUtilsTest.java,230,,"    PowerMockito.doReturn(true).when(NetworkUtils.class, ""isLocationReachable"","
129770,./TargetProjects/incubator-heron/heron/statefulstorages/tests/java/org/apache/heron/statefulstorage/dlog/DlogStorageTest.java,144,,"    String checkpoint2 = ""checkpoint2"";"
129771,./TargetProjects/incubator-heron/heron/statefulstorages/tests/java/org/apache/heron/statefulstorage/dlog/DlogStorageTest.java,148,,"        ""component1_task1"","
129772,./TargetProjects/incubator-heron/heron/statefulstorages/tests/java/org/apache/heron/statefulstorage/dlog/DlogStorageTest.java,149,,"        ""component1_task2"");"
129773,./TargetProjects/incubator-heron/heron/statefulstorages/tests/java/org/apache/heron/statefulstorage/dlog/DlogStorageTest.java,151,,"        ""component2_task1"","
129774,./TargetProjects/incubator-heron/heron/statefulstorages/tests/java/org/apache/heron/statefulstorage/dlog/DlogStorageTest.java,152,,"        ""component2_task2"");"
129775,./TargetProjects/incubator-heron/heron/statemgrs/tests/java/org/apache/heron/statemgr/localfs/LocalFileSystemStateManagerTest.java,159,,"        String.format(""%s/%s/%s"", ROOT_ADDR, ""executionstate"", defaultState.getTopologyName()),"
129776,./TargetProjects/incubator-heron/heron/statemgrs/tests/java/org/apache/heron/statemgr/zookeeper/ZkUtilsTest.java,59,,"        NetworkUtils.getInetSocketAddress(String.format(""%s:%d"", host0, port0));"
129777,./TargetProjects/incubator-heron/heron/tools/apiserver/src/java/org/apache/heron/apiserver/resources/TopologyResource.java,84,,"  private static final String FORM_KEY_NAME = ""name"";"
129778,./TargetProjects/incubator-heron/heron/tools/apiserver/src/java/org/apache/heron/apiserver/resources/TopologyResource.java,85,,"  private static final String FORM_KEY_CLUSTER = ""cluster"";"
129779,./TargetProjects/incubator-heron/heron/tools/apiserver/src/java/org/apache/heron/apiserver/resources/TopologyResource.java,86,,"  private static final String FORM_KEY_ROLE = ""role"";"
129780,./TargetProjects/incubator-heron/heron/tools/apiserver/src/java/org/apache/heron/apiserver/resources/TopologyResource.java,87,,"  private static final String FORM_KEY_ENVIRONMENT = ""environment"";"
129781,./TargetProjects/incubator-heron/heron/tools/apiserver/src/java/org/apache/heron/apiserver/resources/TopologyResource.java,129,,"  @SuppressWarnings({""IllegalCatch"", ""JavadocMethod""})"
129782,./TargetProjects/incubator-heron/heron/tools/apiserver/tests/java/org/apache/heron/apiserver/utils/ConfigUtilsTests.java,43,,"  @SuppressWarnings(""unchecked"")"
129783,./TargetProjects/incubator-heron/heron/tools/apiserver/tests/java/org/apache/heron/apiserver/utils/ConfigUtilsTests.java,46,,"        Pair.create(""heron.statemgr.connection.string"", ""zookeeper:2181""),"
129784,./TargetProjects/incubator-heron/heron/tools/apiserver/tests/java/org/apache/heron/apiserver/utils/ConfigUtilsTests.java,46,,"        Pair.create(""heron.statemgr.connection.string"", ""zookeeper:2181""),"
129785,./TargetProjects/incubator-heron/heron/tools/apiserver/tests/java/org/apache/heron/apiserver/utils/ConfigUtilsTests.java,47,,"        Pair.create(""heron.kubernetes.scheduler.uri"", ""http://127.0.0.1:8001"")"
129786,./TargetProjects/incubator-heron/heron/tools/apiserver/tests/java/org/apache/heron/apiserver/utils/ConfigUtilsTests.java,47,,"        Pair.create(""heron.kubernetes.scheduler.uri"", ""http://127.0.0.1:8001"")"
129787,./TargetProjects/incubator-heron/heron/uploaders/src/java/org/apache/heron/uploader/scp/ScpUploader.java,73,,"      throw new RuntimeException(""Missing """
129788,./TargetProjects/incubator-heron/heron/uploaders/src/java/org/apache/heron/uploader/scp/ScpUploader.java,74,,"          + ScpContext.HERON_UPLOADER_SCP_OPTIONS + "" config value"");"
129789,./TargetProjects/incubator-heron/heron/uploaders/tests/java/org/apache/heron/uploader/http/HttpUploaderTest.java,81,,"        .setScheme(""http"")"
129790,./TargetProjects/incubator-heron/heron/uploaders/tests/java/org/apache/heron/uploader/http/HttpUploaderTest.java,89,,"        .put(Key.CLUSTER, ""cluster"")"
129791,./TargetProjects/incubator-heron/heron/uploaders/tests/java/org/apache/heron/uploader/http/HttpUploaderTest.java,90,,"        .put(Key.ROLE, ""role"")"
129792,./TargetProjects/incubator-heron/heron/uploaders/tests/java/org/apache/heron/uploader/http/HttpUploaderTest.java,91,,"        .put(Key.TOPOLOGY_NAME, ""topology"")"
129793,./TargetProjects/incubator-heron/heron/uploaders/tests/java/org/apache/heron/uploader/s3/S3UploaderTest.java,58,,"        .put(S3Context.HERON_UPLOADER_S3_BUCKET, ""bucket"")"
129794,./TargetProjects/incubator-heron/heron/uploaders/tests/java/org/apache/heron/uploader/s3/S3UploaderTest.java,97,,"    String expectedRemotePath = ""test-topology/topology.tar.gz"";"
129795,./TargetProjects/incubator-heron/heron/uploaders/tests/java/org/apache/heron/uploader/s3/S3UploaderTest.java,101,,"    when(mockS3Client.getUrl(expectedBucket, expectedRemotePath)).thenReturn(new URL(""http://url""));"
129796,./TargetProjects/incubator-heron/heron/uploaders/tests/java/org/apache/heron/uploader/s3/S3UploaderTest.java,116,,"    String expectedPreviousVersionPath = ""test-topology/previous_topology.tar.gz"";"
129797,./TargetProjects/incubator-heron/integration_test/src/java/org/apache/heron/integration_test/topology/windowing/stateful/StatefulWindowingTest.java,82,,"  @SuppressWarnings({""rawtypes"", ""unchecked""})"
129798,./TargetProjects/incubator-heron/integration_test/src/java/org/apache/heron/integration_test/topology/windowing/stateful/StatefulWindowingTest.java,113,,"      final String sentence = sentences[myState.get(""count"") % sentences.length];"
129799,./TargetProjects/incubator-heron/storm-compatibility-examples/v0.10.2/src/java/org/apache/storm/examples/MultiStageAckingTopology.java,55,,"    builder.setSpout(""word"", new AckingTestWordSpout(), parallelism);"
129800,./TargetProjects/incubator-heron/storm-compatibility-examples/v0.10.2/src/java/org/apache/storm/examples/TaskHookTopology.java,63,,"    builder.setSpout(""word"", new AckingTestWordSpout(), 2);"
129801,./TargetProjects/incubator-heron/storm-compatibility-examples/v0.10.2/src/java/org/apache/storm/examples/WordCountTopology.java,111,,"      outputFieldsDeclarer.declare(new Fields(""word""));"
129802,./TargetProjects/incubator-heron/storm-compatibility/v0.10.2/src/java/backtype/storm/serialization/DefaultKryoFactory.java,33,,"  @SuppressWarnings(""rawtypes"")"
129803,./TargetProjects/incubator-heron/storm-compatibility/v0.10.2/src/java/backtype/storm/task/WorkerTopologyContext.java,90,,"    throw new RuntimeException(""Not supported"");"
129804,./TargetProjects/incubator-heron/storm-compatibility/v0.10.2/src/java/org/apache/storm/Config.java,47,,"@SuppressWarnings({""rawtypes"", ""unchecked""})"
129805,./TargetProjects/incubator-heron/storm-compatibility/v0.10.2/src/java/org/apache/storm/serialization/DefaultKryoFactory.java,33,,"  @SuppressWarnings(""rawtypes"")"
129806,./TargetProjects/incubator-heron/storm-compatibility/v0.10.2/src/java/org/apache/storm/task/WorkerTopologyContext.java,87,,"    throw new RuntimeException(""Not supported"");"
129807,./TargetProjects/incubator-heron/storm-compatibility/v2.2.0/src/java/org/apache/storm/Config.java,47,,"@SuppressWarnings({""rawtypes"", ""unchecked""})"
129808,./TargetProjects/incubator-heron/storm-compatibility/v2.2.0/src/java/org/apache/storm/serialization/DefaultKryoFactory.java,33,,"  @SuppressWarnings(""rawtypes"")"
129809,./TargetProjects/incubator-heron/storm-compatibility/v2.2.0/src/java/org/apache/storm/task/WorkerTopologyContext.java,87,,"    throw new RuntimeException(""Not supported"");"
129810,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/GeneralLearnerBaseUDTF.java,173,,"        opts.addOption(""loss"", ""loss_function"", true, getLossOptionDescription());"
129811,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/GeneralLearnerBaseUDTF.java,174,,"        opts.addOption(""iter"", ""iterations"", true,"
129812,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/LearnerBaseUDTF.java,176,,"                        + "" initial dimensions"" + (useCovar ? "" w/ covariances"" : """"));"
129813,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/LearnerBaseUDTF.java,176,,"                        + "" initial dimensions"" + (useCovar ? "" w/ covariances"" : """"));"
129814,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/classifier/KPAPredictUDAF.java,115,,"        public void reset(@SuppressWarnings(""deprecation"") AggregationBuffer agg)"
129815,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/ensemble/MaxRowUDAF.java,127,,"        public void reset(@SuppressWarnings(""deprecation"") AggregationBuffer agg)"
129816,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/evaluation/FMeasureUDAF.java,117,,"            opts.addOption(""beta"", true, ""The weight of precision [default: 1.]"");"
129817,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/evaluation/FMeasureUDAF.java,118,,"            opts.addOption(""average"", true, ""The way of average calculation [default: micro]"");"
129818,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/evaluation/FMeasureUDAF.java,145,,"                if (!(average.equals(""binary"") || average.equals(""micro""))) {"
129819,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/evaluation/FMeasureUDAF.java,214,,"        public void reset(@SuppressWarnings(""deprecation"") AggregationBuffer agg)"
129820,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/evaluation/HitRateUDAF.java,156,,"        public void reset(@SuppressWarnings(""deprecation"") AggregationBuffer agg)"
129821,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/evaluation/MAPUDAF.java,138,,"        public void reset(@SuppressWarnings(""deprecation"") AggregationBuffer agg)"
129822,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/evaluation/MRRUDAF.java,138,,"        public void reset(@SuppressWarnings(""deprecation"") AggregationBuffer agg)"
129823,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/evaluation/NDCGUDAF.java,141,,"        public void reset(@SuppressWarnings(""deprecation"") AggregationBuffer agg)"
129824,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/evaluation/PrecisionUDAF.java,139,,"        public void reset(@SuppressWarnings(""deprecation"") AggregationBuffer agg)"
129825,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/evaluation/RecallUDAF.java,138,,"        public void reset(@SuppressWarnings(""deprecation"") AggregationBuffer agg)"
129826,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/factorization/fm/FFMPredictGenericUDAF.java,139,,"        public void reset(@SuppressWarnings(""deprecation"") AggregationBuffer agg)"
129827,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/factorization/fm/FMPredictGenericUDAF.java,168,,"        public void reset(@SuppressWarnings(""deprecation"") AggregationBuffer agg)"
129828,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/factorization/fm/FactorizationMachineModel.java,215,,"            throw new IllegalStateException(""Got "" + nextW0 + "" for next W0\n"" + ""gradW0="" + gradW0"
129829,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/factorization/fm/Feature.java,183,,"                    throw new HiveException(""Index value should not be 0: "" + fv);"
129830,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/factorization/fm/FieldAwareFactorizationMachineModel.java,129,,"                ""Got "" + nextWi + "" for next W["" + x.getFeature() + ""]\n"" + ""Xi="" + Xi + "", gradWi="""
129831,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/factorization/fm/FieldAwareFactorizationMachineModel.java,129,,"                ""Got "" + nextWi + "" for next W["" + x.getFeature() + ""]\n"" + ""Xi="" + Xi + "", gradWi="""
129832,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/factorization/fm/FieldAwareFactorizationMachineModel.java,129,,"                ""Got "" + nextWi + "" for next W["" + x.getFeature() + ""]\n"" + ""Xi="" + Xi + "", gradWi="""
129833,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/factorization/fm/FieldAwareFactorizationMachineModel.java,130,,"                        + gradWi + "", wi="" + wi + "", dloss="" + dloss + "", eta="" + eta + "", t="" + t);"
129834,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/factorization/fm/FieldAwareFactorizationMachineModel.java,355,,"            buf2.append("" + ("").append(wi).append("" * "").append(xi).append(')');"
129835,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/factorization/fm/FieldAwareFactorizationMachineModel.java,361,,"                return buf1.append("" + ... = "")"
129836,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/factorization/mf/BPRMatrixFactorizationUDTF.java,363,,"                ""Detected "" + ret + "" in predict where user="" + user + "" and item="" + item);"
129837,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/ftvec/binning/BuildBinsUDAF.java,194,,"        public void reset(@SuppressWarnings(""deprecation"") AggregationBuffer agg)"
129838,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/ftvec/ranking/BprSamplingUDTF.java,236,,"            throw new HiveException(""Invalid maxItemId: "" + maxItemId);"
129839,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/ftvec/selection/SignalNoiseRatioUDAF.java,186,,"        public void reset(@SuppressWarnings(""deprecation"") AggregationBuffer agg)"
129840,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/ftvec/trans/OnehotEncodingUDAF.java,205,,"        @SuppressWarnings(""deprecation"")"
129841,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/optimizer/EtaEstimator.java,58,,"        hyperParams.put(""eta"", typeName());"
129842,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/optimizer/Optimizer.java,187,,"            this.alpha = Primitives.parseFloat(options.get(""alpha""), 1.f);"
129843,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/optimizer/Optimizer.java,188,,"            this.momentum = Primitives.parseFloat(options.get(""momentum""), 0.9f);"
129844,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/optimizer/Optimizer.java,232,,"            this.eps = Primitives.parseFloat(options.get(""eps""), 1.0f);"
129845,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/optimizer/Optimizer.java,233,,"            this.scale = Primitives.parseFloat(options.get(""scale""), 100.0f);"
129846,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/optimizer/Optimizer.java,282,,"            this.decay = Primitives.parseFloat(options.get(""decay""), 0.95f);"
129847,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/optimizer/Optimizer.java,402,,"            if (!options.containsKey(""eta"")) {"
129848,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/optimizer/Optimizer.java,405,,"            if (!options.containsKey(""eta0"")) {"
129849,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/optimizer/Optimizer.java,469,,"            this.beta1 = Primitives.parseFloat(options.get(""beta1""), 0.9f);"
129850,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/optimizer/Optimizer.java,470,,"            this.beta2 = Primitives.parseFloat(options.get(""beta2""), 0.999f);"
129851,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/optimizer/Regularization.java,66,,"            hyperParams.put(""regularization"", ""no"");"
129852,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/regression/PassiveAggressiveRegressionUDTF.java,38,,"        value = ""_FUNC_(array<int|bigint|string> features, float target [, constant string options])"""
129853,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/sketch/hll/ApproxCountDistinctUDAF.java,146,,"        @SuppressWarnings(""deprecation"")"
129854,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/smile/classification/DecisionTree.java,363,,"                               .append("" ) {\n"");"
129855,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/smile/classification/DecisionTree.java,464,,"                buf.append(""push "").append(output);"
129856,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/smile/regression/RegressionTree.java,334,,"                               .append("") {\n"");"
129857,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/smile/regression/RegressionTree.java,437,,"                buf.append(""push "").append(output);"
129858,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/smile/tools/DecisionPathUDF.java,420,,"                    @SuppressWarnings(""unchecked"")"
129859,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/tools/aggr/MajorityVoteUDAF.java,135,,"        public void reset(@SuppressWarnings(""deprecation"") AggregationBuffer agg)"
129860,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/tools/aggr/MaxByUDAF.java,163,,"        public void reset(@SuppressWarnings(""deprecation"") AggregationBuffer agg)"
129861,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/tools/aggr/MinByUDAF.java,164,,"        public void reset(@SuppressWarnings(""deprecation"") AggregationBuffer agg)"
129862,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/tools/array/ArrayAvgGenericUDAF.java,162,,"        public void reset(@SuppressWarnings(""deprecation"") AggregationBuffer aggr)"
129863,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/tools/array/ArraySliceUDF.java,47,,"                ""  array_slice(\n"" + "
129864,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/tools/array/ArraySliceUDF.java,48,,"                ""   array(\""zero\"", \""one\"", \""two\"", \""three\"", \""four\"", \""five\"", \""six\"", \""seven\"", \""eight\"", \""nine\"", \""ten\""),\n"" + "
129865,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/tools/array/ArraySliceUDF.java,51,,"                ""  ),\n"" + "
129866,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/tools/bits/BitsCollectUDAF.java,105,,"        public void reset(@SuppressWarnings(""deprecation"") AggregationBuffer aggr)"
129867,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/tools/json/ToJsonUDF.java,45,,"                ""  to_json(\n"" +"
129868,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/tools/json/ToJsonUDF.java,47,,"                ""  ),\n"" +"
129869,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/tools/json/ToJsonUDF.java,49,,"                ""     NAMED_STRUCT(\""Name\"", \""John\"", \""age\"", 31),\n"" +"
129870,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/tools/list/UDAFToOrderedList.java,77,,"                ""    UNION ALL\n"" + "
129871,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/tools/list/UDAFToOrderedList.java,116,,"        @SuppressWarnings(""deprecation"")"
129872,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/tools/map/MergeMapsUDAF.java,108,,"        public void reset(@SuppressWarnings(""deprecation"") AggregationBuffer buff)"
129873,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/tools/map/UDAFToMap.java,112,,"        public void reset(@SuppressWarnings(""deprecation"") AggregationBuffer agg)"
129874,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/tools/map/UDAFToOrderedMap.java,78,,"        @SuppressWarnings(""deprecation"")"
129875,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/tools/matrix/TransposeAndDotUDAF.java,158,,"        public void reset(@SuppressWarnings(""deprecation"") AggregationBuffer agg)"
129876,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/topicmodel/LDAPredictUDAF.java,138,,"            opts.addOption(""k"", ""topics"", true, ""The number of topics [default: 10]"");"
129877,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/topicmodel/LDAPredictUDAF.java,139,,"            opts.addOption(""alpha"", true, ""The hyperparameter for theta [default: 1/k]"");"
129878,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/topicmodel/LDAPredictUDAF.java,140,,"            opts.addOption(""delta"", true,"
129879,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/topicmodel/LDAPredictUDAF.java,277,,"        @SuppressWarnings(""deprecation"")"
129880,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/topicmodel/PLSAPredictUDAF.java,139,,"            opts.addOption(""k"", ""topics"", true, ""The number of topics [default: 10]"");"
129881,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/topicmodel/PLSAPredictUDAF.java,140,,"            opts.addOption(""alpha"", true, ""The hyperparameter for P(w|z) update [default: 0.5]"");"
129882,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/topicmodel/PLSAPredictUDAF.java,141,,"            opts.addOption(""delta"", true,"
129883,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/topicmodel/PLSAPredictUDAF.java,279,,"        @SuppressWarnings(""deprecation"")"
129884,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/utils/codec/VariableByteCodec.java,58,,"            throw new IllegalArgumentException(""Illegal value: "" + val);"
129885,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/utils/collections/maps/Long2DoubleOpenHashTable.java,184,,"                        ""Detected infinite loop where key="" + key + "", keyIdx="" + keyIdx);"
129886,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/utils/collections/maps/Long2DoubleOpenHashTable.java,184,,"                        ""Detected infinite loop where key="" + key + "", keyIdx="" + keyIdx);"
129887,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/utils/collections/maps/Long2FloatOpenHashTable.java,182,,"                        ""Detected infinite loop where key="" + key + "", keyIdx="" + keyIdx);"
129888,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/utils/collections/maps/Long2FloatOpenHashTable.java,182,,"                        ""Detected infinite loop where key="" + key + "", keyIdx="" + keyIdx);"
129889,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/utils/collections/maps/Long2IntOpenHashTable.java,166,,"                        ""Detected infinite loop where key="" + key + "", keyIdx="" + keyIdx);"
129890,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/utils/collections/maps/Long2IntOpenHashTable.java,166,,"                        ""Detected infinite loop where key="" + key + "", keyIdx="" + keyIdx);"
129891,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/utils/collections/maps/OpenHashTable.java,161,,"                        ""Detected infinite loop where key="" + key + "", keyIdx="" + keyIdx);"
129892,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/utils/collections/maps/OpenHashTable.java,161,,"                        ""Detected infinite loop where key="" + key + "", keyIdx="" + keyIdx);"
129893,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/utils/datetime/DateTimeFormatter.java,29,,"            return ""0ms"";"
129894,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/utils/hadoop/HiveUtils.java,586,,"            throw new UDFArgumentException(""argument must be a constant value: """
129895,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/utils/hadoop/HiveUtils.java,1121,,"            throw new UDFArgumentTypeException(0, ""Only primitive type arguments are accepted but """
129896,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/utils/hadoop/HiveUtils.java,1122,,"                    + argOI.getTypeName() + "" is passed."");"
129897,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/utils/hadoop/HiveUtils.java,1138,,"                    ""Unexpected type '"" + argOI.getTypeName() + ""' is passed."");"
129898,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/utils/hadoop/HiveUtils.java,1138,,"                    ""Unexpected type '"" + argOI.getTypeName() + ""' is passed."");"
129899,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/utils/hadoop/JsonSerdeUtils.java,133,,"            sb.append(""null"");"
129900,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/utils/lang/ArrayUtils.java,1003,,"            throw new IllegalArgumentException(""attempt to get argmin of an empty array"");"
129901,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/utils/lang/OptionUtils.java,34,,"            throw new NoSuchElementException(""Could not find an option: "" + optionName);"
129902,./TargetProjects/incubator-hivemall/core/src/main/java/hivemall/utils/lang/Preconditions.java,45,,"                throw new IllegalStateException(""Failed to instantiate a class: "" + clazz.getName(),"
129903,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/anomaly/SingularSpectrumTransformTest.java,44,,"        Assert.assertTrue(""#changepoints SHOULD be greater than 0: "" + numChangepoints,"
129904,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/anomaly/SingularSpectrumTransformTest.java,46,,"        Assert.assertTrue(""#changepoints SHOULD be less than 5: "" + numChangepoints,"
129905,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/classifier/GeneralClassifierUDTFTest.java,123,,"        List<String> x = Arrays.asList(""1:-2"", ""2:-1"");"
129906,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/classifier/GeneralClassifierUDTFTest.java,123,,"        List<String> x = Arrays.asList(""1:-2"", ""2:-1"");"
129907,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/classifier/GeneralClassifierUDTFTest.java,412,,"        String filePath = ""adam_test_10000.tsv.gz"";"
129908,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/classifier/GeneralClassifierUDTFTest.java,478,,"            ""CumulativeLoss is expected to be less than 1200: "" + udtf.getCumulativeLoss(),"
129909,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/classifier/GeneralClassifierUDTFTest.java,695,,"            ""CumulativeLoss is expected to be less than 800: "" + udtf.getCumulativeLoss(),"
129910,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/classifier/PerceptronUDTFTest.java,80,,"        FeatureValue word2 = FeatureValue.parse(""opinion"");"
129911,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/evaluation/FMeasureUDAFTest.java,119,,"        String average = ""binary"";"
129912,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/evaluation/FMeasureUDAFTest.java,157,,"        String average = ""micro"";"
129913,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/factorization/fm/FieldAwareFactorizationMachineUDTFTest.java,57,,"        run(""Pure SGD test"", ""bigdata.tr.txt.gz"","
129914,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/factorization/mf/MatrixFactorizationSGDUDTFTest.java,89,,"                print(rating[row][col] + ""["" + predicted + ""]\t"");"
129915,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/ftvec/FeatureUDFTest.java,54,,"        Assert.assertEquals(""1:2"", ret.toString());"
129916,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/ftvec/FeatureUDFTest.java,78,,"        Assert.assertEquals(""1:2.5"", ret.toString());"
129917,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/ftvec/FeatureUDFTest.java,174,,"        Assert.assertEquals(""f1:2.5"", ret.toString());"
129918,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/ftvec/hashing/FeatureHashingUDFTest.java,67,,"        expected = ""0:1"";"
129919,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/ftvec/hashing/FeatureHashingUDFTest.java,85,,"            WritableUtils.val(""apple:3"", ""orange:2"", ""banana"", ""0:1""))};"
129920,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/ftvec/hashing/MurmurHash3UDFTest.java,34,,"        assertEquals(""hash('hive') == 1966097"", 1966097, udf.evaluate(""hive"").get());"
129921,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/ftvec/hashing/MurmurHash3UDFTest.java,35,,"        assertEquals(""hash('mall') == 36971"", 36971, udf.evaluate(""mall"").get());"
129922,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/ftvec/hashing/MurmurHash3UDFTest.java,56,,"        final String[] oneWord = {""hivemall""};"
129923,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/ftvec/hashing/Sha1UDFTest.java,35,,"        assertEquals(""sha1('hive') == 14489008"", 14489008, udf.evaluate(""hive"").get());"
129924,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/ftvec/hashing/Sha1UDFTest.java,36,,"        assertEquals(""sha1('mall') == 8556781"", 8556781, udf.evaluate(""mall"").get());"
129925,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/ftvec/hashing/Sha1UDFTest.java,52,,"        final List<String> oneWord = Arrays.asList(""hivemall"");"
129926,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/ftvec/pairing/PolynomialFeaturesUDFTest.java,34,,"        List<Text> args = WritableUtils.val(""a:0.5"", ""b:0.3"");"
129927,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/ftvec/pairing/PolynomialFeaturesUDFTest.java,34,,"        List<Text> args = WritableUtils.val(""a:0.5"", ""b:0.3"");"
129928,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/ftvec/pairing/PolynomialFeaturesUDFTest.java,45,,"                WritableUtils.val(""a:0.5"", ""a^a:0.25"", ""a^b:0.15"", ""b:0.3"", ""b^b:0.09"");"
129929,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/ftvec/pairing/PolynomialFeaturesUDFTest.java,45,,"                WritableUtils.val(""a:0.5"", ""a^a:0.25"", ""a^b:0.15"", ""b:0.3"", ""b^b:0.09"");"
129930,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/ftvec/pairing/PolynomialFeaturesUDFTest.java,49,,"        expected = WritableUtils.val(""a:0.5"", ""a^a:0.25"", ""a^a^a:0.125"", ""a^a^b:0.075"", ""a^b:0.15"","
129931,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/ftvec/pairing/PolynomialFeaturesUDFTest.java,53,,"        args = WritableUtils.val(""a:0.5"", ""b:0.3"", ""c:0.2"");"
129932,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/ftvec/pairing/PolynomialFeaturesUDFTest.java,56,,"            ""a^a^c:0.05"", ""a^b:0.15"", ""a^b^b:0.045"", ""a^b^c:0.030000001"", ""a^c:0.1"","
129933,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/ftvec/pairing/PoweredFeaturesUDFTest.java,34,,"        List<Text> args = WritableUtils.val(""a:0.5"", ""b:0.3"");"
129934,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/ftvec/pairing/PoweredFeaturesUDFTest.java,34,,"        List<Text> args = WritableUtils.val(""a:0.5"", ""b:0.3"");"
129935,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/ftvec/scaling/L1NormalizationUDFTest.java,43,,"        assertEquals(WritableUtils.val(new String[] {""aaa:1.0""}),"
129936,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/ftvec/scaling/L2NormalizationUDFTest.java,43,,"        assertEquals(WritableUtils.val(new String[] {""aaa:1.0""}),"
129937,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/ftvec/scaling/RescaleUDFTest.java,41,,"        assertEquals(WritableUtils.val(""1:0.5""), udf.evaluate(""1:1"", 1f, 1f));"
129938,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/ftvec/selection/SignalNoiseRatioUDAFTest.java,71,,"        @SuppressWarnings(""unchecked"")"
129939,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/ftvec/trans/VectorizeFeaturesUDFTest.java,70,,"        List<Text> expected = WritableUtils.val(new String[] {""a:0.1""});"
129940,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/knn/similarity/CosineSimilarityUDFTest.java,59,,"        Assert.assertTrue(CosineSimilarityUDF.cosineSimilarity(Arrays.asList(""apple"", ""orange""),"
129941,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/knn/similarity/CosineSimilarityUDFTest.java,59,,"        Assert.assertTrue(CosineSimilarityUDF.cosineSimilarity(Arrays.asList(""apple"", ""orange""),"
129942,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/knn/similarity/CosineSimilarityUDFTest.java,60,,"            Arrays.asList(""banana"", ""apple"")) > 0.f);"
129943,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/knn/similarity/CosineSimilarityUDFTest.java,70,,"                Arrays.asList(""This is a sentence with seven tokens"".split("" "")),"
129944,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/optimizer/OptimizerTest.java,43,,"            options.put(""optimizer"", ""illegal"");"
129945,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/optimizer/OptimizerTest.java,72,,"            options.put(""regularization"", regType);"
129946,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/regression/GeneralRegressorUDTFTest.java,118,,"        List<String> x = Arrays.asList(""1:-2"", ""2:-1"");"
129947,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/regression/GeneralRegressorUDTFTest.java,118,,"        List<String> x = Arrays.asList(""1:-2"", ""2:-1"");"
129948,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/smile/classification/DecisionTreeTest.java,89,,"            ""https://gist.githubusercontent.com/myui/143fa9d05bd6e7db0114/raw/500f178316b802f1cade6e3bf8dc814a96e84b1e/iris.arff"","
129949,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/smile/classification/RandomForestClassifierUDTFTest.java,59,,"            ""https://gist.githubusercontent.com/myui/143fa9d05bd6e7db0114/raw/500f178316b802f1cade6e3bf8dc814a96e84b1e/iris.arff"");"
129950,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/smile/classification/RandomForestClassifierUDTFTest.java,72,,"            PrimitiveObjectInspectorFactory.javaStringObjectInspector, ""-trees 49"");"
129951,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/smile/classification/RandomForestClassifierUDTFTest.java,474,,"        udtf.process(new Object[] {new String[] {""1:1.0"", ""4:1.0"", ""7:1.0"", ""12:1.0""}, 1}); // 0"
129952,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/smile/classification/RandomForestClassifierUDTFTest.java,474,,"        udtf.process(new Object[] {new String[] {""1:1.0"", ""4:1.0"", ""7:1.0"", ""12:1.0""}, 1}); // 0"
129953,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/smile/classification/RandomForestClassifierUDTFTest.java,474,,"        udtf.process(new Object[] {new String[] {""1:1.0"", ""4:1.0"", ""7:1.0"", ""12:1.0""}, 1}); // 0"
129954,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/tools/array/ArraySliceUDFTest.java,58,,"                        new GenericUDF.DeferredJavaObject(Arrays.asList(""zero"", ""one"", ""two"","
129955,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/tools/array/ArraySliceUDFTest.java,58,,"                        new GenericUDF.DeferredJavaObject(Arrays.asList(""zero"", ""one"", ""two"","
129956,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/tools/array/ArraySliceUDFTest.java,58,,"                        new GenericUDF.DeferredJavaObject(Arrays.asList(""zero"", ""one"", ""two"","
129957,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/tools/array/ArraySliceUDFTest.java,59,,"                            ""three"", ""four"", ""five"", ""six"", ""seven"", ""eight"", ""nine"", ""ten"")),"
129958,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/tools/array/ArraySliceUDFTest.java,59,,"                            ""three"", ""four"", ""five"", ""six"", ""seven"", ""eight"", ""nine"", ""ten"")),"
129959,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/tools/array/ArraySliceUDFTest.java,59,,"                            ""three"", ""four"", ""five"", ""six"", ""seven"", ""eight"", ""nine"", ""ten"")),"
129960,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/tools/array/ArraySliceUDFTest.java,59,,"                            ""three"", ""four"", ""five"", ""six"", ""seven"", ""eight"", ""nine"", ""ten"")),"
129961,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/tools/array/ArraySliceUDFTest.java,59,,"                            ""three"", ""four"", ""five"", ""six"", ""seven"", ""eight"", ""nine"", ""ten"")),"
129962,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/tools/array/ArraySliceUDFTest.java,59,,"                            ""three"", ""four"", ""five"", ""six"", ""seven"", ""eight"", ""nine"", ""ten"")),"
129963,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/tools/array/ArraySliceUDFTest.java,59,,"                            ""three"", ""four"", ""five"", ""six"", ""seven"", ""eight"", ""nine"", ""ten"")),"
129964,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/tools/array/ArraySliceUDFTest.java,59,,"                            ""three"", ""four"", ""five"", ""six"", ""seven"", ""eight"", ""nine"", ""ten"")),"
129965,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/tools/array/ConditionalEmitUDTFTest.java,58,,"            new Object[] {Arrays.asList(true, false, true), Arrays.asList(""one"", ""two"", ""three"")});"
129966,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/tools/array/ConditionalEmitUDTFTest.java,58,,"            new Object[] {Arrays.asList(true, false, true), Arrays.asList(""one"", ""two"", ""three"")});"
129967,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/tools/array/ConditionalEmitUDTFTest.java,58,,"            new Object[] {Arrays.asList(true, false, true), Arrays.asList(""one"", ""two"", ""three"")});"
129968,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/tools/list/UDAFToOrderedListTest.java,53,,"        final String[] values = new String[] {""banana"", ""apple"", ""candy""};"
129969,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/tools/list/UDAFToOrderedListTest.java,53,,"        final String[] values = new String[] {""banana"", ""apple"", ""candy""};"
129970,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/tools/list/UDAFToOrderedListTest.java,53,,"        final String[] values = new String[] {""banana"", ""apple"", ""candy""};"
129971,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/tools/list/UDAFToOrderedListTest.java,62,,"        @SuppressWarnings(""unchecked"")"
129972,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/tools/list/UDAFToOrderedListTest.java,517,,"                            ""-k 2 -vk_map"")};"
129973,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/tools/list/UDAFToOrderedListTest.java,721,,"        final String[] values = new String[] {""apple"", ""banana"", ""candy"", ""donut"", ""egg""};"
129974,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/tools/list/UDAFToOrderedListTest.java,721,,"        final String[] values = new String[] {""apple"", ""banana"", ""candy"", ""donut"", ""egg""};"
129975,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/tools/map/MapRouletteUDFTest.java,58,,"        solve.put(""Tom"", 0);"
129976,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/tools/map/MapRouletteUDFTest.java,59,,"        solve.put(""Jerry"", 0);"
129977,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/tools/map/MapRouletteUDFTest.java,60,,"        solve.put(""Amy"", 0);"
129978,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/tools/map/MapRouletteUDFTest.java,61,,"        solve.put(""Wong"", 0);"
129979,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/tools/map/MapRouletteUDFTest.java,62,,"        solve.put(""Zhao"", 0);"
129980,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/tools/map/MapRouletteUDFTest.java,173,,"        m.put(""One"", 324.6);"
129981,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/tools/map/UDAFToOrderedMapTest.java,47,,"        final String[] values = new String[] {""banana"", ""apple"", ""candy""};"
129982,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/tools/map/UDAFToOrderedMapTest.java,47,,"        final String[] values = new String[] {""banana"", ""apple"", ""candy""};"
129983,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/tools/map/UDAFToOrderedMapTest.java,47,,"        final String[] values = new String[] {""banana"", ""apple"", ""candy""};"
129984,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/tools/text/WordNgramsUDFTest.java,44,,"        words.add(new Text(""machine""));"
129985,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/tools/text/WordNgramsUDFTest.java,45,,"        words.add(new Text(""learning""));"
129986,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/topicmodel/IncrementalPLSAModelTest.java,79,,"        println(""========"");"
129987,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/topicmodel/IncrementalPLSAModelTest.java,112,,"            ""doc1 is in topic "" + k1 + "" ("" + (topicDistr[k1] * 100) + ""%), """
129988,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/topicmodel/LDAPredictUDAFTest.java,78,,"        words = new String[] {""fruits"", ""vegetables"", ""healthy"", ""flu"", ""apples"", ""oranges"", ""like"","
129989,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/topicmodel/LDAPredictUDAFTest.java,78,,"        words = new String[] {""fruits"", ""vegetables"", ""healthy"", ""flu"", ""apples"", ""oranges"", ""like"","
129990,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/topicmodel/LDAPredictUDAFTest.java,78,,"        words = new String[] {""fruits"", ""vegetables"", ""healthy"", ""flu"", ""apples"", ""oranges"", ""like"","
129991,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/topicmodel/LDAPredictUDAFTest.java,78,,"        words = new String[] {""fruits"", ""vegetables"", ""healthy"", ""flu"", ""apples"", ""oranges"", ""like"","
129992,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/topicmodel/LDAPredictUDAFTest.java,78,,"        words = new String[] {""fruits"", ""vegetables"", ""healthy"", ""flu"", ""apples"", ""oranges"", ""like"","
129993,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/topicmodel/LDAPredictUDAFTest.java,78,,"        words = new String[] {""fruits"", ""vegetables"", ""healthy"", ""flu"", ""apples"", ""oranges"", ""like"","
129994,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/topicmodel/LDAPredictUDAFTest.java,78,,"        words = new String[] {""fruits"", ""vegetables"", ""healthy"", ""flu"", ""apples"", ""oranges"", ""like"","
129995,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/topicmodel/LDAPredictUDAFTest.java,79,,"                ""avocados"", ""colds"", ""colds"", ""avocados"", ""oranges"", ""like"", ""apples"", ""flu"","
129996,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/topicmodel/LDAPredictUDAFTest.java,79,,"                ""avocados"", ""colds"", ""colds"", ""avocados"", ""oranges"", ""like"", ""apples"", ""flu"","
129997,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/topicmodel/LDAUDTFTest.java,65,,"        println(""========"");"
129998,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/topicmodel/LDAUDTFTest.java,98,,"            ""doc1 is in topic "" + k1 + "" ("" + (topicDistr[k1] * 100) + ""%), """
129999,./TargetProjects/incubator-hivemall/core/src/test/java/hivemall/topicmodel/OnlineLDAModelTest.java,78,,"        println(""========"");"
