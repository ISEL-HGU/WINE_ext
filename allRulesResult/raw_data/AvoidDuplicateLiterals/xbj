35000,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurationConfigurer.java,139,,"        map.put(""Users"", org.zendesk.client.v2.model.User[].class);"
35001,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurationConfigurer.java,140,,"        map.put(""UsersList"", java.util.List.class);"
35002,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurationConfigurer.java,141,,"        map.put(""Variant"", org.zendesk.client.v2.model.dynamic.DynamicContentItemVariant.class);"
35003,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurationConfigurer.java,159,,"        case ""attachments"":"
35004,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurationConfigurer.java,231,,"        case ""labels"":"
35005,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurationConfigurer.java,261,,"        case ""organizationlist"":"
35006,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurationConfigurer.java,265,,"        case ""organizationmembershiplist"":"
35007,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurationConfigurer.java,279,,"        case ""params"":"
35008,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurationConfigurer.java,317,,"        case ""statuses"":"
35009,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurationConfigurer.java,337,,"        case ""ticketlist"":"
35010,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurationConfigurer.java,357,,"        case ""type"":"
35011,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurationConfigurer.java,373,,"        case ""userlist"":"
35012,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurationConfigurer.java,383,,"        case ""userslist"":"
35013,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurer.java,24,,"        map.put(""inBody"", java.lang.String.class);"
35014,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurer.java,25,,"        map.put(""serverUrl"", java.lang.String.class);"
35015,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurer.java,26,,"        map.put(""bridgeErrorHandler"", boolean.class);"
35016,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurer.java,27,,"        map.put(""sendEmptyMessageWhenIdle"", boolean.class);"
35017,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurer.java,28,,"        map.put(""exceptionHandler"", org.apache.camel.spi.ExceptionHandler.class);"
35018,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurer.java,29,,"        map.put(""exchangePattern"", org.apache.camel.ExchangePattern.class);"
35019,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurer.java,30,,"        map.put(""pollStrategy"", org.apache.camel.spi.PollingConsumerPollStrategy.class);"
35020,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurer.java,31,,"        map.put(""lazyStartProducer"", boolean.class);"
35021,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurer.java,32,,"        map.put(""backoffErrorThreshold"", int.class);"
35022,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurer.java,33,,"        map.put(""backoffIdleThreshold"", int.class);"
35023,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurer.java,34,,"        map.put(""backoffMultiplier"", int.class);"
35024,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurer.java,35,,"        map.put(""delay"", long.class);"
35025,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurer.java,36,,"        map.put(""greedy"", boolean.class);"
35026,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurer.java,37,,"        map.put(""initialDelay"", long.class);"
35027,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurer.java,38,,"        map.put(""repeatCount"", long.class);"
35028,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurer.java,39,,"        map.put(""runLoggingLevel"", org.apache.camel.LoggingLevel.class);"
35029,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurer.java,40,,"        map.put(""scheduledExecutorService"", java.util.concurrent.ScheduledExecutorService.class);"
35030,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurer.java,41,,"        map.put(""scheduler"", java.lang.Object.class);"
35031,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurer.java,42,,"        map.put(""schedulerProperties"", java.util.Map.class);"
35032,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurer.java,43,,"        map.put(""startScheduler"", boolean.class);"
35033,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurer.java,44,,"        map.put(""timeUnit"", java.util.concurrent.TimeUnit.class);"
35034,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurer.java,45,,"        map.put(""useFixedDelay"", boolean.class);"
35035,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurer.java,46,,"        map.put(""oauthToken"", java.lang.String.class);"
35036,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurer.java,47,,"        map.put(""password"", java.lang.String.class);"
35037,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurer.java,48,,"        map.put(""token"", java.lang.String.class);"
35038,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurer.java,49,,"        map.put(""username"", java.lang.String.class);"
35039,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/ZendeskEndpointConfigurer.java,89,,"        case ""schedulerproperties"":"
35040,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/internal/ZendeskApiMethod.java,27,,"        arg(""tags"", new String[0].getClass())),"
35041,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/internal/ZendeskApiMethod.java,50,,"        arg(""user"", org.zendesk.client.v2.model.User.class),"
35042,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/internal/ZendeskApiMethod.java,57,,"        arg(""article"", org.zendesk.client.v2.model.hc.Article.class)),"
35043,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/internal/ZendeskApiMethod.java,68,,"        arg(""articleId"", Long.class),"
35044,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/internal/ZendeskApiMethod.java,69,,"        arg(""translation"", org.zendesk.client.v2.model.hc.Translation.class)),"
35045,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/internal/ZendeskApiMethod.java,79,,"        arg(""category"", org.zendesk.client.v2.model.hc.Category.class)),"
35046,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/internal/ZendeskApiMethod.java,90,,"        arg(""ticketId"", long.class),"
35047,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/internal/ZendeskApiMethod.java,96,,"        arg(""item"", org.zendesk.client.v2.model.dynamic.DynamicContentItem.class)),"
35048,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/internal/ZendeskApiMethod.java,101,,"        arg(""itemId"", Long.class),"
35049,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/internal/ZendeskApiMethod.java,117,,"        arg(""groupMembership"", org.zendesk.client.v2.model.GroupMembership.class)),"
35050,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/internal/ZendeskApiMethod.java,122,,"        arg(""user_id"", long.class),"
35051,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/internal/ZendeskApiMethod.java,143,,"        arg(""usersList"", java.util.List.class)),"
35052,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/internal/ZendeskApiMethod.java,158,,"        arg(""organizationMembership"", org.zendesk.client.v2.model.OrganizationMembership.class)),"
35053,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/internal/ZendeskApiMethod.java,184,,"        arg(""organizationList"", java.util.List.class)),"
35054,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/internal/ZendeskApiMethod.java,204,,"        arg(""request"", org.zendesk.client.v2.model.Request.class)),"
35055,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/internal/ZendeskApiMethod.java,209,,"        arg(""ticket"", org.zendesk.client.v2.model.Ticket.class),"
35056,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/internal/ZendeskApiMethod.java,221,,"        arg(""section"", org.zendesk.client.v2.model.hc.Section.class)),"
35057,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/internal/ZendeskApiMethod.java,226,,"        arg(""sectionId"", Long.class),"
35058,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/internal/ZendeskApiMethod.java,263,,"        arg(""ticketList"", java.util.List.class)),"
35059,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/internal/ZendeskApiMethod.java,278,,"        arg(""topic"", org.zendesk.client.v2.model.Topic.class)),"
35060,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/internal/ZendeskApiMethod.java,328,,"        arg(""identity"", org.zendesk.client.v2.model.Identity.class)),"
35061,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/internal/ZendeskApiMethod.java,333,,"        arg(""userId"", long.class),"
35062,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/internal/ZendeskApiMethod.java,339,,"        arg(""userSegment"", org.zendesk.client.v2.model.hc.UserSegment.class)),"
35063,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/internal/ZendeskApiMethod.java,419,,"        ""deleteGroupMembership"","
35064,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/internal/ZendeskApiMethod.java,470,,"        arg(""ids"", long[].class)),"
35065,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/internal/ZendeskApiMethod.java,578,,"        arg(""identityId"", long.class)),"
35066,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/internal/ZendeskApiMethod.java,621,,"        arg(""locale"", String.class)),"
35067,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/internal/ZendeskApiMethod.java,630,,"        ""getArticles""),"
35068,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/internal/ZendeskApiMethod.java,665,,"        arg(""startTime"", java.util.Date.class)),"
35069,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/internal/ZendeskApiMethod.java,1022,,"        ""getSearchResults"","
35070,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/internal/ZendeskApiMethod.java,1023,,"        arg(""query"", String.class)),"
35071,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/internal/ZendeskApiMethod.java,1028,,"        arg(""type"", Class.class),"
35072,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/internal/ZendeskApiMethod.java,1204,,"        arg(""externalId"", String.class)),"
35073,./TargetProjects/camel/components/camel-zendesk/src/generated/java/org/apache/camel/component/zendesk/internal/ZendeskApiMethod.java,1235,,"        ""getTopics""),"
35074,./TargetProjects/camel/components/camel-zendesk/src/main/java/org/apache/camel/component/zendesk/ZendeskComponent.java,36,,"    @Metadata(label = ""security"", secret = true)"
35075,./TargetProjects/camel/components/camel-zendesk/src/main/java/org/apache/camel/component/zendesk/ZendeskConfiguration.java,39,,"    @UriParam(label = ""security"", secret = true)"
35076,./TargetProjects/camel/components/camel-zip-deflater/src/test/java/org/apache/camel/dataformat/deflater/ZipDeflaterDataFormatTest.java,78,,"                from(""direct:start"")"
35077,./TargetProjects/camel/components/camel-zip-deflater/src/test/java/org/apache/camel/dataformat/deflater/ZipDeflaterDataFormatTest.java,124,,"                        .to(""mock:result"");"
35078,./TargetProjects/camel/components/camel-zipfile/src/test/java/org/apache/camel/dataformat/zipfile/ZipFileDataFormatTest.java,93,,"        MockEndpoint mock = getMockEndpoint(""mock:zip"");"
35079,./TargetProjects/camel/components/camel-zipfile/src/test/java/org/apache/camel/dataformat/zipfile/ZipFileDataFormatTest.java,96,,"        template.sendBody(""direct:zip"", TEXT);"
35080,./TargetProjects/camel/components/camel-zipfile/src/test/java/org/apache/camel/dataformat/zipfile/ZipFileDataFormatTest.java,107,,"        getMockEndpoint(""mock:zip"").expectedBodiesReceived(getZippedText(""poem.txt""));"
35081,./TargetProjects/camel/components/camel-zipfile/src/test/java/org/apache/camel/dataformat/zipfile/ZipFileDataFormatTest.java,108,,"        getMockEndpoint(""mock:zip"").expectedHeaderReceived(FILE_NAME, ""poem.txt.zip"");"
35082,./TargetProjects/camel/components/camel-zipfile/src/test/java/org/apache/camel/dataformat/zipfile/ZipFileDataFormatTest.java,139,,"        getMockEndpoint(""mock:unzip"").expectedBodiesReceived(TEXT);"
35083,./TargetProjects/camel/components/camel-zipfile/src/test/java/org/apache/camel/dataformat/zipfile/ZipFileDataFormatTest.java,149,,"        deleteDirectory(new File(""hello_out""));"
35084,./TargetProjects/camel/components/camel-zipfile/src/test/java/org/apache/camel/dataformat/zipfile/ZipFileSplitAndDeleteTest.java,51,,"        getMockEndpoint(""mock:end"").expectedMessageCount(2);"
35085,./TargetProjects/camel/components/camel-zipfile/src/test/java/org/apache/camel/processor/aggregate/zipfile/ZipAggregationStrategyEmptyFileTest.java,54,,"        template.sendBody(""file:target/foo"", ""Hello"");"
35086,./TargetProjects/camel/components/camel-zipkin/src/main/java/org/apache/camel/zipkin/ZipkinTracer.java,645,,"            MDC.put(""traceId"", traceId);"
35087,./TargetProjects/camel/components/camel-zipkin/src/main/java/org/apache/camel/zipkin/ZipkinTracer.java,646,,"            MDC.put(""spanId"", spanId);"
35088,./TargetProjects/camel/components/camel-zipkin/src/main/java/org/apache/camel/zipkin/ZipkinTracer.java,647,,"            MDC.put(""parentId"", parentId);"
35089,./TargetProjects/camel/components/camel-zipkin/src/test/java/org/apache/camel/zipkin/ZipkinABCRouteTest.java,45,,"        zipkin.addClientServiceMapping(""seda:a"", ""a"");"
35090,./TargetProjects/camel/components/camel-zipkin/src/test/java/org/apache/camel/zipkin/ZipkinABCRouteTest.java,46,,"        zipkin.addClientServiceMapping(""seda:b"", ""b"");"
35091,./TargetProjects/camel/components/camel-zipkin/src/test/java/org/apache/camel/zipkin/ZipkinABCRouteTest.java,47,,"        zipkin.addClientServiceMapping(""seda:c"", ""c"");"
35092,./TargetProjects/camel/components/camel-zipkin/src/test/java/org/apache/camel/zipkin/ZipkinClientCustomTagsTest.java,44,,"        zipkin.addClientServiceMapping(""seda:a"", ""a"");"
35093,./TargetProjects/camel/components/camel-zipkin/src/test/java/org/apache/camel/zipkin/ZipkinMDCScopeDecoratorTest.java,44,,"        zipkin.addClientServiceMapping(""seda:cat"", ""cat"");"
35094,./TargetProjects/camel/components/camel-zipkin/src/test/java/org/apache/camel/zipkin/ZipkinMulticastRouteTest.java,45,,"        zipkin.addClientServiceMapping(""seda:a"", ""a"");"
35095,./TargetProjects/camel/components/camel-zipkin/src/test/java/org/apache/camel/zipkin/ZipkinMulticastRouteTest.java,46,,"        zipkin.addClientServiceMapping(""seda:b"", ""b"");"
35096,./TargetProjects/camel/components/camel-zipkin/src/test/java/org/apache/camel/zipkin/ZipkinMulticastRouteTest.java,47,,"        zipkin.addClientServiceMapping(""seda:c"", ""c"");"
35097,./TargetProjects/camel/components/camel-zipkin/src/test/java/org/apache/camel/zipkin/ZipkinOneRouteTest.java,40,,"        zipkin.addClientServiceMapping(""seda:cat"", ""cat"");"
35098,./TargetProjects/camel/components/camel-zipkin/src/test/java/org/apache/camel/zipkin/ZipkinRecipientListRouteTest.java,45,,"        zipkin.addClientServiceMapping(""seda:a"", ""a"");"
35099,./TargetProjects/camel/components/camel-zipkin/src/test/java/org/apache/camel/zipkin/ZipkinServerMulticastTest.java,62,,"                        .log(""routing at ${routeId}"")"
35100,./TargetProjects/camel/components/camel-zipkin/src/test/java/org/apache/camel/zipkin/ZipkinTimerRouteTest.java,46,,"        zipkin.addClientServiceMapping(""seda:timer"", ""timer"");"
35101,./TargetProjects/camel/components/camel-zipkin/src/test/java/org/apache/camel/zipkin/ZipkinTwoRouteTest.java,40,,"        zipkin.addClientServiceMapping(""seda:cat"", ""cat"");"
35102,./TargetProjects/camel/components/camel-zipkin/src/test/java/org/apache/camel/zipkin/ZipkinTwoRouteTest.java,42,,"        zipkin.addClientServiceMapping(""seda:dog"", ""dog"");"
35103,./TargetProjects/camel/components/camel-zipkin/src/test/java/org/apache/camel/zipkin/http/ZipkinAutoConfigureHttp.java,59,,"        zipkin.addClientServiceMapping(""seda:cat"", ""cat"");"
35104,./TargetProjects/camel/components/camel-zipkin/src/test/java/org/apache/camel/zipkin/scribe/ZipkinAutoConfigureScribeManualIT.java,62,,"        zipkin.addClientServiceMapping(""seda:cat"", ""cat"");"
35105,./TargetProjects/camel/components/camel-zookeeper-master/src/test/java/org/apache/camel/component/zookeepermaster/group/GroupTest.java,71,,"        LOGGER.info(""****************************************"");"
35106,./TargetProjects/camel/components/camel-zookeeper-master/src/test/java/org/apache/camel/component/zookeepermaster/group/GroupTest.java,76,,"        container.withNetworkAliases(""zk-"" + port);"
35107,./TargetProjects/camel/components/camel-zookeeper-master/src/test/java/org/apache/camel/component/zookeepermaster/group/GroupTest.java,124,,"                .connectString(""localhost:"" + port)"
35108,./TargetProjects/camel/components/camel-zookeeper-master/src/test/java/org/apache/camel/component/zookeepermaster/group/GroupTest.java,154,,"                group.update(new NodeState(""foo"" + i));"
35109,./TargetProjects/camel/components/camel-zookeeper-master/src/test/java/org/apache/camel/component/zookeepermaster/group/GroupTest.java,192,,"                = new ZooKeeperGroup<>(curator, ""/singletons/test"" + System.currentTimeMillis(), NodeState.class);"
35110,./TargetProjects/camel/components/camel-zookeeper-master/src/test/java/org/apache/camel/component/zookeepermaster/group/internal/ZooKeeperGroupTest.java,82,,"        putChildData(group, PATH + ""/001"", ""container1"");"
35111,./TargetProjects/camel/components/camel-zookeeper-master/src/test/java/org/apache/camel/component/zookeepermaster/group/internal/ZooKeeperGroupTest.java,82,,"        putChildData(group, PATH + ""/001"", ""container1"");"
35112,./TargetProjects/camel/components/camel-zookeeper-master/src/test/java/org/apache/camel/component/zookeepermaster/group/internal/ZooKeeperGroupTest.java,83,,"        putChildData(group, PATH + ""/002"", ""container2"");"
35113,./TargetProjects/camel/components/camel-zookeeper-master/src/test/java/org/apache/camel/component/zookeepermaster/group/internal/ZooKeeperGroupTest.java,83,,"        putChildData(group, PATH + ""/002"", ""container2"");"
35114,./TargetProjects/camel/components/camel-zookeeper-master/src/test/java/org/apache/camel/component/zookeepermaster/group/internal/ZooKeeperGroupTest.java,84,,"        putChildData(group, PATH + ""/003"", ""container3"");"
35115,./TargetProjects/camel/components/camel-zookeeper-master/src/test/java/org/apache/camel/component/zookeepermaster/group/internal/ZooKeeperGroupTest.java,84,,"        putChildData(group, PATH + ""/003"", ""container3"");"
35116,./TargetProjects/camel/components/camel-zookeeper-master/src/test/java/org/apache/camel/component/zookeepermaster/group/internal/ZooKeeperGroupTest.java,98,,"        putChildData(group, PATH + ""/004"", ""container3""); // stale"
35117,./TargetProjects/camel/components/camel-zookeeper-master/src/test/java/org/apache/camel/component/zookeepermaster/group/internal/ZooKeeperGroupTest.java,99,,"        putChildData(group, PATH + ""/005"", ""container2"");"
35118,./TargetProjects/camel/components/camel-zookeeper-master/src/test/java/org/apache/camel/component/zookeepermaster/group/internal/ZooKeeperGroupTest.java,100,,"        putChildData(group, PATH + ""/006"", ""container3"");"
35119,./TargetProjects/camel/components/camel-zookeeper/src/test/java/org/apache/camel/component/zookeeper/integration/ConsumeDataIT.java,67,,"        client.delete(""/camel"");"
35120,./TargetProjects/camel/components/camel-zookeeper/src/test/java/org/apache/camel/component/zookeeper/integration/ZooKeeperProducerIT.java,51,,"                        from(""direct:roundtrip"")"
35121,./TargetProjects/camel/components/camel-zookeeper/src/test/java/org/apache/camel/component/zookeeper/integration/ZooKeeperProducerIT.java,55,,"                                .to(""mock:consumed-from-node"");"
35122,./TargetProjects/camel/components/camel-zookeeper/src/test/java/org/apache/camel/component/zookeeper/operations/integration/DataChangedOperationIT.java,31,,"        client.create(""/datachanged"", ""this won't hurt a bit"");"
35123,./TargetProjects/camel/components/camel-zookeeper/src/test/java/org/apache/camel/component/zookeeper/operations/integration/DataChangedOperationIT.java,43,,"        client.create(""/existedButWasDeleted"", ""this won't hurt a bit"");"
35124,./TargetProjects/camel/core/camel-api/src/main/java/org/apache/camel/FailedToCreateConsumerException.java,27,,"        super(""Failed to create Consumer for endpoint for: "" + endpointURI + "". Reason: "" + cause, cause);"
35125,./TargetProjects/camel/core/camel-base-engine/src/main/java/org/apache/camel/impl/debugger/BacklogDebugger.java,273,,"                logger.log(""Breakpoint at node "" + nodeId + "" is updating message body on exchangeId: """
35126,./TargetProjects/camel/core/camel-base-engine/src/main/java/org/apache/camel/impl/engine/AbstractCamelContext.java,1603,,"        String path = packageName + ""/"" + componentName + "".json"";"
35127,./TargetProjects/camel/core/camel-base-engine/src/main/java/org/apache/camel/impl/engine/DefaultCamelBeanPostProcessor.java,410,,"            LOG.warn(""Ignoring badly annotated method for injection due to incorrect number of parameters: {}"", method);"
35128,./TargetProjects/camel/core/camel-base-engine/src/main/java/org/apache/camel/impl/engine/DefaultFluentProducerTemplate.java,145,,"            throw new IllegalArgumentException(""Not allowed after template has been started"");"
35129,./TargetProjects/camel/core/camel-base-engine/src/main/java/org/apache/camel/impl/engine/DefaultPackageScanClassResolver.java,91,,"        log.debug(""Found: {}"", classes);"
35130,./TargetProjects/camel/core/camel-base-engine/src/main/java/org/apache/camel/impl/engine/DefaultPackageScanResourceResolver.java,75,,"            if (""file:"".equals(scheme)) {"
35131,./TargetProjects/camel/core/camel-base-engine/src/main/java/org/apache/camel/impl/engine/DefaultServiceBootstrapCloseable.java,63,,"                LOG.warn(""Error during closing bootstrap service. This exception is ignored"", e);"
35132,./TargetProjects/camel/core/camel-base-engine/src/main/java/org/apache/camel/impl/engine/DefaultShutdownStrategy.java,428,,"            LOG.warn(""Error occurred while shutting down route: "" + routeId + "". This exception will be ignored."", e);"
35133,./TargetProjects/camel/core/camel-base-engine/src/main/java/org/apache/camel/impl/engine/InternalRouteStartupManager.java,402,,"                        route.getProperties().remove(""route.start.exception"");"
35134,./TargetProjects/camel/core/camel-cloud/src/test/java/org/apache/camel/impl/cloud/CombinedServiceDiscoveryTest.java,33,,"        discovery1.addServer(new DefaultServiceDefinition(""discovery1"", ""localhost"", 1111));"
35135,./TargetProjects/camel/core/camel-cloud/src/test/java/org/apache/camel/impl/cloud/CombinedServiceDiscoveryTest.java,33,,"        discovery1.addServer(new DefaultServiceDefinition(""discovery1"", ""localhost"", 1111));"
35136,./TargetProjects/camel/core/camel-cloud/src/test/java/org/apache/camel/impl/cloud/CombinedServiceDiscoveryTest.java,38,,"        discovery2.addServer(new DefaultServiceDefinition(""discovery2"", ""localhost"", 1114));"
35137,./TargetProjects/camel/core/camel-cloud/src/test/java/org/apache/camel/impl/cloud/CombinedServiceFilterTest.java,55,,"                new DefaultServiceDefinition(""no-name"", ""127.0.0.1"", 1000),"
35138,./TargetProjects/camel/core/camel-cloud/src/test/java/org/apache/camel/impl/cloud/CombinedServiceFilterTest.java,55,,"                new DefaultServiceDefinition(""no-name"", ""127.0.0.1"", 1000),"
35139,./TargetProjects/camel/core/camel-cloud/src/test/java/org/apache/camel/impl/cloud/LoadBalancerTest.java,45,,"                new DefaultServiceDefinition(""no-name"", ""127.0.0.1"", 1003, Collections.singletonMap(""supports"", ""foo,bar"")));"
35140,./TargetProjects/camel/core/camel-cloud/src/test/java/org/apache/camel/impl/cloud/ServiceCallConfigurationTest.java,63,,"                from(""direct:start"")"
35141,./TargetProjects/camel/core/camel-cloud/src/test/java/org/apache/camel/impl/cloud/ServiceCallConfigurationTest.java,64,,"                        .routeId(""default"")"
35142,./TargetProjects/camel/core/camel-cloud/src/test/java/org/apache/camel/impl/cloud/ServiceCallConfigurationTest.java,65,,"                        .serviceCall(""scall"", ""scall/api/${header.customerId}"");"
35143,./TargetProjects/camel/core/camel-cloud/src/test/java/org/apache/camel/impl/cloud/ServiceCallConfigurationTest.java,94,,"        sd.addServer(""service@127.0.0.1:8080"");"
35144,./TargetProjects/camel/core/camel-cloud/src/test/java/org/apache/camel/impl/cloud/ServiceCallConfigurationTest.java,95,,"        sd.addServer(""service@127.0.0.1:8081"");"
35145,./TargetProjects/camel/core/camel-cloud/src/test/java/org/apache/camel/impl/cloud/ServiceCallConfigurationTest.java,98,,"        sf.addServer(""*@127.0.0.1:8080"");"
35146,./TargetProjects/camel/core/camel-cloud/src/test/java/org/apache/camel/impl/cloud/ServiceCallConfigurationTest.java,113,,"                            .component(""file"")"
35147,./TargetProjects/camel/core/camel-cloud/src/test/java/org/apache/camel/impl/cloud/ServiceCallConfigurationTest.java,252,,"        context.addServiceCallConfiguration(""named"", namedConfiguration);"
35148,./TargetProjects/camel/core/camel-cloud/src/test/java/org/apache/camel/impl/cloud/ServiceDefinitionTest.java,54,,"                DefaultServiceDefinition.builder().withName(""service-1"").withHost(""host-1.domain1.com"").withPort(2001).build());"
35149,./TargetProjects/camel/core/camel-cloud/src/test/java/org/apache/camel/impl/cloud/ServiceDefinitionTest.java,70,,"                DefaultServiceDefinition.builder().withName(""service-.*"").withHost(""host-1.domain1.com"").withPort(2001).build()"
35150,./TargetProjects/camel/core/camel-cloud/src/test/java/org/apache/camel/impl/cloud/ServiceDefinitionTest.java,74,,"                DefaultServiceDefinition.builder().withName(""service-.*"").withHost(""host-.*\\.domain.*\\.com"").withPort(2001)"
35151,./TargetProjects/camel/core/camel-cloud/src/test/java/org/apache/camel/impl/cloud/ServiceRegistryTest.java,59,,"                        .routeProperty(ServiceDefinition.SERVICE_META_HOST, ""localhost"")"
35152,./TargetProjects/camel/core/camel-cloud/src/test/java/org/apache/camel/impl/cloud/ServiceRegistryTest.java,61,,"                        .routeProperty(""service.meta1"", ""meta1"")"
35153,./TargetProjects/camel/core/camel-cloud/src/test/java/org/apache/camel/impl/cloud/ServiceRegistryTest.java,61,,"                        .routeProperty(""service.meta1"", ""meta1"")"
35154,./TargetProjects/camel/core/camel-cloud/src/test/java/org/apache/camel/impl/cloud/ServiceRegistryTest.java,62,,"                        .routeProperty(""meta2"", ""meta2"")"
35155,./TargetProjects/camel/core/camel-core-catalog/src/main/java/org/apache/camel/catalog/impl/AbstractCamelCatalog.java,877,,"                    if (option.isSecret() && !val.startsWith(""#"") && !val.startsWith(""RAW("")) {"
35156,./TargetProjects/camel/core/camel-core-engine/src/generated/java/org/apache/camel/impl/ExtendedCamelContextConfigurer.java,78,,"        case ""globaloptions"":"
35157,./TargetProjects/camel/core/camel-core-engine/src/generated/java/org/apache/camel/impl/ExtendedCamelContextConfigurer.java,79,,"        case ""GlobalOptions"": target.setGlobalOptions(property(camelContext, java.util.Map.class, value)); return true;"
35158,./TargetProjects/camel/core/camel-core-engine/src/generated/java/org/apache/camel/impl/RestConfigurationConfigurer.java,36,,"        case ""apiproperties"":"
35159,./TargetProjects/camel/core/camel-core-engine/src/generated/java/org/apache/camel/impl/RestConfigurationConfigurer.java,37,,"        case ""ApiProperties"": target.setApiProperties(property(camelContext, java.util.Map.class, value)); return true;"
35160,./TargetProjects/camel/core/camel-core-engine/src/generated/java/org/apache/camel/impl/RestConfigurationConfigurer.java,46,,"        case ""componentproperties"":"
35161,./TargetProjects/camel/core/camel-core-engine/src/generated/java/org/apache/camel/impl/RestConfigurationConfigurer.java,47,,"        case ""ComponentProperties"": target.setComponentProperties(property(camelContext, java.util.Map.class, value)); return true;"
35162,./TargetProjects/camel/core/camel-core-engine/src/generated/java/org/apache/camel/impl/RestConfigurationConfigurer.java,48,,"        case ""consumerproperties"":"
35163,./TargetProjects/camel/core/camel-core-engine/src/generated/java/org/apache/camel/impl/RestConfigurationConfigurer.java,49,,"        case ""ConsumerProperties"": target.setConsumerProperties(property(camelContext, java.util.Map.class, value)); return true;"
35164,./TargetProjects/camel/core/camel-core-engine/src/generated/java/org/apache/camel/impl/RestConfigurationConfigurer.java,52,,"        case ""corsheaders"":"
35165,./TargetProjects/camel/core/camel-core-engine/src/generated/java/org/apache/camel/impl/RestConfigurationConfigurer.java,53,,"        case ""CorsHeaders"": target.setCorsHeaders(property(camelContext, java.util.Map.class, value)); return true;"
35166,./TargetProjects/camel/core/camel-core-engine/src/generated/java/org/apache/camel/impl/RestConfigurationConfigurer.java,54,,"        case ""dataformatproperties"":"
35167,./TargetProjects/camel/core/camel-core-engine/src/generated/java/org/apache/camel/impl/RestConfigurationConfigurer.java,55,,"        case ""DataFormatProperties"": target.setDataFormatProperties(property(camelContext, java.util.Map.class, value)); return true;"
35168,./TargetProjects/camel/core/camel-core-engine/src/generated/java/org/apache/camel/impl/RestConfigurationConfigurer.java,58,,"        case ""endpointproperties"":"
35169,./TargetProjects/camel/core/camel-core-engine/src/generated/java/org/apache/camel/impl/RestConfigurationConfigurer.java,59,,"        case ""EndpointProperties"": target.setEndpointProperties(property(camelContext, java.util.Map.class, value)); return true;"
35170,./TargetProjects/camel/core/camel-core-engine/src/main/java/org/apache/camel/impl/DefaultCamelContext.java,276,,"            throw new IllegalStateException(""Access to model not supported in lightweight mode"");"
35171,./TargetProjects/camel/core/camel-core-languages/src/main/java/org/apache/camel/language/csimple/CSimpleCodeGenerator.java,103,,"        sb.append(""    }\n"");"
35172,./TargetProjects/camel/core/camel-core-languages/src/main/java/org/apache/camel/language/csimple/CSimpleCodeGenerator.java,106,,"        sb.append(""    @Override\n"");"
35173,./TargetProjects/camel/core/camel-core-languages/src/main/java/org/apache/camel/language/simple/SimpleExpressionBuilder.java,592,,"                bean = context.resolveLanguage(""bean"");"
35174,./TargetProjects/camel/core/camel-core-languages/src/main/java/org/apache/camel/language/simple/SimplePredicateParser.java,444,,"                            ""Binary operator "" + operator + "" has no left hand side token"", token.getToken().getIndex());"
35175,./TargetProjects/camel/core/camel-core-languages/src/main/java/org/apache/camel/language/simple/SimplePredicateParser.java,509,,"                            ""Logical operator "" + operator + "" has no left hand side token"", token.getToken().getIndex());"
35176,./TargetProjects/camel/core/camel-core-languages/src/main/java/org/apache/camel/language/simple/ast/BinaryExpression.java,309,,"            if (!type.endsWith("".class"")) {"
35177,./TargetProjects/camel/core/camel-core-languages/src/main/java/org/apache/camel/language/simple/ast/SimpleFunctionExpression.java,96,,"        remainder = ifStartsWithReturnRemainder(""exception"", function);"
35178,./TargetProjects/camel/core/camel-core-languages/src/main/java/org/apache/camel/language/simple/ast/SimpleFunctionExpression.java,152,,"        remainder = ifStartsWithReturnRemainder(""exchange"", function);"
35179,./TargetProjects/camel/core/camel-core-languages/src/main/java/org/apache/camel/language/simple/ast/SimpleFunctionExpression.java,333,,"        remainder = ifStartsWithReturnRemainder(""body"", function);"
35180,./TargetProjects/camel/core/camel-core-languages/src/main/java/org/apache/camel/language/simple/ast/SimpleFunctionExpression.java,335,,"            remainder = ifStartsWithReturnRemainder(""in.body"", function);"
35181,./TargetProjects/camel/core/camel-core-languages/src/main/java/org/apache/camel/language/simple/ast/SimpleFunctionExpression.java,352,,"                throw new SimpleParserException(""Valid syntax: ${headerAs(key, type)} was: "" + function, token.getIndex());"
35182,./TargetProjects/camel/core/camel-core-languages/src/main/java/org/apache/camel/language/simple/ast/SimpleFunctionExpression.java,367,,"        if (""in.headers"".equals(function) || ""headers"".equals(function)) {"
35183,./TargetProjects/camel/core/camel-core-languages/src/main/java/org/apache/camel/language/simple/ast/SimpleFunctionExpression.java,367,,"        if (""in.headers"".equals(function) || ""headers"".equals(function)) {"
35184,./TargetProjects/camel/core/camel-core-languages/src/main/java/org/apache/camel/language/simple/ast/SimpleFunctionExpression.java,532,,"        remainder = ifStartsWithReturnRemainder(""messageHistory"", function);"
35185,./TargetProjects/camel/core/camel-core-languages/src/main/java/org/apache/camel/language/simple/ast/SimpleFunctionExpression.java,598,,"            if (!type.endsWith("".class"")) {"
35186,./TargetProjects/camel/core/camel-core-languages/src/main/java/org/apache/camel/language/simple/ast/SimpleFunctionExpression.java,622,,"            return ""sys(\"""" + remainder + ""\"")"";"
35187,./TargetProjects/camel/core/camel-core-languages/src/main/java/org/apache/camel/language/simple/ast/SimpleFunctionExpression.java,673,,"            return ""date(exchange, \"""" + parts[0] + ""\"", \"""" + parts[1] + ""\"", \"""" + parts[2] + ""\"")"";"
35188,./TargetProjects/camel/core/camel-core-languages/src/main/java/org/apache/camel/language/simple/ast/SimpleFunctionExpression.java,757,,"                return ""type(exchange, "" + type + "", \"""" + field + ""\"")"";"
35189,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/FaultToleranceConfigurationDefinitionConfigurer.java,23,,"        map.put(""BulkheadEnabled"", java.lang.String.class);"
35190,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/FaultToleranceConfigurationDefinitionConfigurer.java,24,,"        map.put(""BulkheadExecutorServiceRef"", java.lang.String.class);"
35191,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/FaultToleranceConfigurationDefinitionConfigurer.java,25,,"        map.put(""BulkheadMaxConcurrentCalls"", java.lang.String.class);"
35192,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/FaultToleranceConfigurationDefinitionConfigurer.java,26,,"        map.put(""BulkheadWaitingTaskQueue"", java.lang.String.class);"
35193,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/FaultToleranceConfigurationDefinitionConfigurer.java,27,,"        map.put(""CircuitBreakerRef"", java.lang.String.class);"
35194,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/FaultToleranceConfigurationDefinitionConfigurer.java,28,,"        map.put(""Delay"", java.lang.String.class);"
35195,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/FaultToleranceConfigurationDefinitionConfigurer.java,29,,"        map.put(""FailureRatio"", java.lang.String.class);"
35196,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/FaultToleranceConfigurationDefinitionConfigurer.java,31,,"        map.put(""RequestVolumeThreshold"", java.lang.String.class);"
35197,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/FaultToleranceConfigurationDefinitionConfigurer.java,32,,"        map.put(""SuccessThreshold"", java.lang.String.class);"
35198,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/FaultToleranceConfigurationDefinitionConfigurer.java,33,,"        map.put(""TimeoutDuration"", java.lang.String.class);"
35199,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/FaultToleranceConfigurationDefinitionConfigurer.java,34,,"        map.put(""TimeoutEnabled"", java.lang.String.class);"
35200,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/FaultToleranceConfigurationDefinitionConfigurer.java,35,,"        map.put(""TimeoutPoolSize"", java.lang.String.class);"
35201,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/FaultToleranceConfigurationDefinitionConfigurer.java,36,,"        map.put(""TimeoutScheduledExecutorServiceRef"", java.lang.String.class);"
35202,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/HystrixConfigurationDefinitionConfigurer.java,23,,"        map.put(""AllowMaximumSizeToDivergeFromCoreSize"", java.lang.String.class);"
35203,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/HystrixConfigurationDefinitionConfigurer.java,24,,"        map.put(""CircuitBreakerEnabled"", java.lang.String.class);"
35204,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/HystrixConfigurationDefinitionConfigurer.java,25,,"        map.put(""CircuitBreakerErrorThresholdPercentage"", java.lang.String.class);"
35205,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/HystrixConfigurationDefinitionConfigurer.java,26,,"        map.put(""CircuitBreakerForceClosed"", java.lang.String.class);"
35206,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/HystrixConfigurationDefinitionConfigurer.java,27,,"        map.put(""CircuitBreakerForceOpen"", java.lang.String.class);"
35207,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/HystrixConfigurationDefinitionConfigurer.java,28,,"        map.put(""CircuitBreakerRequestVolumeThreshold"", java.lang.String.class);"
35208,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/HystrixConfigurationDefinitionConfigurer.java,29,,"        map.put(""CircuitBreakerSleepWindowInMilliseconds"", java.lang.String.class);"
35209,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/HystrixConfigurationDefinitionConfigurer.java,30,,"        map.put(""CorePoolSize"", java.lang.String.class);"
35210,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/HystrixConfigurationDefinitionConfigurer.java,31,,"        map.put(""ExecutionIsolationSemaphoreMaxConcurrentRequests"", java.lang.String.class);"
35211,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/HystrixConfigurationDefinitionConfigurer.java,32,,"        map.put(""ExecutionIsolationStrategy"", java.lang.String.class);"
35212,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/HystrixConfigurationDefinitionConfigurer.java,33,,"        map.put(""ExecutionIsolationThreadInterruptOnTimeout"", java.lang.String.class);"
35213,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/HystrixConfigurationDefinitionConfigurer.java,34,,"        map.put(""ExecutionTimeoutEnabled"", java.lang.String.class);"
35214,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/HystrixConfigurationDefinitionConfigurer.java,35,,"        map.put(""ExecutionTimeoutInMilliseconds"", java.lang.String.class);"
35215,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/HystrixConfigurationDefinitionConfigurer.java,36,,"        map.put(""FallbackEnabled"", java.lang.String.class);"
35216,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/HystrixConfigurationDefinitionConfigurer.java,37,,"        map.put(""FallbackIsolationSemaphoreMaxConcurrentRequests"", java.lang.String.class);"
35217,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/HystrixConfigurationDefinitionConfigurer.java,38,,"        map.put(""GroupKey"", java.lang.String.class);"
35218,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/HystrixConfigurationDefinitionConfigurer.java,40,,"        map.put(""KeepAliveTime"", java.lang.String.class);"
35219,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/HystrixConfigurationDefinitionConfigurer.java,41,,"        map.put(""MaxQueueSize"", java.lang.String.class);"
35220,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/HystrixConfigurationDefinitionConfigurer.java,42,,"        map.put(""MaximumSize"", java.lang.String.class);"
35221,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/HystrixConfigurationDefinitionConfigurer.java,43,,"        map.put(""MetricsHealthSnapshotIntervalInMilliseconds"", java.lang.String.class);"
35222,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/HystrixConfigurationDefinitionConfigurer.java,44,,"        map.put(""MetricsRollingPercentileBucketSize"", java.lang.String.class);"
35223,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/HystrixConfigurationDefinitionConfigurer.java,45,,"        map.put(""MetricsRollingPercentileEnabled"", java.lang.String.class);"
35224,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/HystrixConfigurationDefinitionConfigurer.java,46,,"        map.put(""MetricsRollingPercentileWindowBuckets"", java.lang.String.class);"
35225,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/HystrixConfigurationDefinitionConfigurer.java,47,,"        map.put(""MetricsRollingPercentileWindowInMilliseconds"", java.lang.String.class);"
35226,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/HystrixConfigurationDefinitionConfigurer.java,48,,"        map.put(""MetricsRollingStatisticalWindowBuckets"", java.lang.String.class);"
35227,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/HystrixConfigurationDefinitionConfigurer.java,49,,"        map.put(""MetricsRollingStatisticalWindowInMilliseconds"", java.lang.String.class);"
35228,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/HystrixConfigurationDefinitionConfigurer.java,50,,"        map.put(""QueueSizeRejectionThreshold"", java.lang.String.class);"
35229,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/HystrixConfigurationDefinitionConfigurer.java,51,,"        map.put(""RequestLogEnabled"", java.lang.String.class);"
35230,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/HystrixConfigurationDefinitionConfigurer.java,52,,"        map.put(""ThreadPoolKey"", java.lang.String.class);"
35231,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/HystrixConfigurationDefinitionConfigurer.java,53,,"        map.put(""ThreadPoolRollingNumberStatisticalWindowBuckets"", java.lang.String.class);"
35232,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/HystrixConfigurationDefinitionConfigurer.java,54,,"        map.put(""ThreadPoolRollingNumberStatisticalWindowInMilliseconds"", java.lang.String.class);"
35233,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/Resilience4jConfigurationDefinitionConfigurer.java,23,,"        map.put(""AutomaticTransitionFromOpenToHalfOpenEnabled"", java.lang.String.class);"
35234,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/Resilience4jConfigurationDefinitionConfigurer.java,24,,"        map.put(""BulkheadEnabled"", java.lang.String.class);"
35235,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/Resilience4jConfigurationDefinitionConfigurer.java,25,,"        map.put(""BulkheadMaxConcurrentCalls"", java.lang.String.class);"
35236,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/Resilience4jConfigurationDefinitionConfigurer.java,26,,"        map.put(""BulkheadMaxWaitDuration"", java.lang.String.class);"
35237,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/Resilience4jConfigurationDefinitionConfigurer.java,27,,"        map.put(""CircuitBreakerRef"", java.lang.String.class);"
35238,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/Resilience4jConfigurationDefinitionConfigurer.java,28,,"        map.put(""ConfigRef"", java.lang.String.class);"
35239,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/Resilience4jConfigurationDefinitionConfigurer.java,29,,"        map.put(""FailureRateThreshold"", java.lang.String.class);"
35240,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/Resilience4jConfigurationDefinitionConfigurer.java,31,,"        map.put(""MinimumNumberOfCalls"", java.lang.String.class);"
35241,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/Resilience4jConfigurationDefinitionConfigurer.java,32,,"        map.put(""PermittedNumberOfCallsInHalfOpenState"", java.lang.String.class);"
35242,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/Resilience4jConfigurationDefinitionConfigurer.java,33,,"        map.put(""SlidingWindowSize"", java.lang.String.class);"
35243,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/Resilience4jConfigurationDefinitionConfigurer.java,34,,"        map.put(""SlidingWindowType"", java.lang.String.class);"
35244,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/Resilience4jConfigurationDefinitionConfigurer.java,35,,"        map.put(""SlowCallDurationThreshold"", java.lang.String.class);"
35245,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/Resilience4jConfigurationDefinitionConfigurer.java,36,,"        map.put(""SlowCallRateThreshold"", java.lang.String.class);"
35246,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/Resilience4jConfigurationDefinitionConfigurer.java,37,,"        map.put(""TimeoutCancelRunningFuture"", java.lang.String.class);"
35247,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/Resilience4jConfigurationDefinitionConfigurer.java,38,,"        map.put(""TimeoutDuration"", java.lang.String.class);"
35248,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/Resilience4jConfigurationDefinitionConfigurer.java,39,,"        map.put(""TimeoutEnabled"", java.lang.String.class);"
35249,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/Resilience4jConfigurationDefinitionConfigurer.java,40,,"        map.put(""TimeoutExecutorServiceRef"", java.lang.String.class);"
35250,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/Resilience4jConfigurationDefinitionConfigurer.java,41,,"        map.put(""WaitDurationInOpenState"", java.lang.String.class);"
35251,./TargetProjects/camel/core/camel-core-model/src/generated/java/org/apache/camel/model/Resilience4jConfigurationDefinitionConfigurer.java,42,,"        map.put(""WritableStackTraceEnabled"", java.lang.String.class);"
35252,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/builder/AdviceWithRouteBuilder.java,222,,"        ObjectHelper.notNull(originalRoute, ""originalRoute"", this);"
35253,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/builder/AdviceWithTasks.java,224,,"                            ""There are no outputs which matches: "" + matchBy.getId() + "" in the route: "" + route);"
35254,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/builder/AdviceWithTasks.java,224,,"                            ""There are no outputs which matches: "" + matchBy.getId() + "" in the route: "" + route);"
35255,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/builder/DataFormatClause.java,838,,"        soap.setVersion(""1.2"");"
35256,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/builder/FlexibleAggregationStrategy.java,58,,"    @SuppressWarnings(""unchecked"")"
35257,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/builder/RouteBuilder.java,557,,"            throw new IllegalArgumentException(""CamelContext has not been injected!"");"
35258,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/AggregateDefinition.java,78,,"    @Metadata(javaType = ""java.lang.Boolean"")"
35259,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/EnrichDefinition.java,47,,"    @Metadata(javaType = ""java.lang.Boolean"")"
35260,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/FaultToleranceConfigurationCommon.java,29,,"    @Metadata(label = ""circuitbreaker"")"
35261,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/FaultToleranceConfigurationCommon.java,35,,"    @Metadata(label = ""circuitbreaker"", defaultValue = ""1"", javaType = ""java.lang.Integer"")"
35262,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/FaultToleranceConfigurationCommon.java,44,,"    @Metadata(label = ""timeout"", defaultValue = ""false"", javaType = ""java.lang.Boolean"")"
35263,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/FaultToleranceConfigurationCommon.java,56,,"    @Metadata(label = ""bulkhead"", defaultValue = ""false"", javaType = ""java.lang.Boolean"")"
35264,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/HystrixConfigurationCommon.java,41,,"    @Metadata(javaType = ""java.lang.Boolean"", label = ""command"", defaultValue = ""true"")"
35265,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/HystrixConfigurationCommon.java,41,,"    @Metadata(javaType = ""java.lang.Boolean"", label = ""command"", defaultValue = ""true"")"
35266,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/HystrixConfigurationCommon.java,41,,"    @Metadata(javaType = ""java.lang.Boolean"", label = ""command"", defaultValue = ""true"")"
35267,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/HystrixConfigurationCommon.java,44,,"    @Metadata(javaType = ""java.lang.Integer"", label = ""command"", defaultValue = ""50"")"
35268,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/HystrixConfigurationCommon.java,107,,"    @Metadata(javaType = ""java.lang.Integer"", label = ""threadpool"", defaultValue = ""10"")"
35269,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/MulticastDefinition.java,45,,"    @Metadata(javaType = ""java.lang.Boolean"")"
35270,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/OnCompletionDefinition.java,49,,"    @Metadata(javaType = ""java.lang.Boolean"")"
35271,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/RecipientListDefinition.java,51,,"    @Metadata(javaType = ""java.lang.Boolean"")"
35272,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/RedeliveryPolicyDefinition.java,41,,"    @Metadata(javaType = ""java.lang.Boolean"")"
35273,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/Resilience4jConfigurationCommon.java,31,,"    @Metadata(label = ""circuitbreaker"")"
35274,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/Resilience4jConfigurationCommon.java,40,,"    @Metadata(label = ""circuitbreaker"", defaultValue = ""10"", javaType = ""java.lang.Integer"")"
35275,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/Resilience4jConfigurationCommon.java,52,,"    @Metadata(label = ""circuitbreaker"", defaultValue = ""true"", javaType = ""java.lang.Boolean"")"
35276,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/Resilience4jConfigurationCommon.java,72,,"    @Metadata(label = ""timeout"", defaultValue = ""false"", javaType = ""java.lang.Boolean"")"
35277,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/RouteDefinition.java,263,,"        setStreamCache(""false"");"
35278,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/RouteDefinition.java,273,,"        setStreamCache(""true"");"
35279,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/RouteDefinition.java,752,,"    @Metadata(javaType = ""java.lang.Boolean"")"
35280,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/SplitDefinition.java,49,,"    @Metadata(javaType = ""java.lang.Boolean"")"
35281,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/cloud/KubernetesServiceCallServiceDiscoveryConfiguration.java,47,,"    @Metadata(label = ""client"")"
35282,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/dataformat/AvroDataFormat.java,45,,"    @Metadata(javaType = ""java.lang.Boolean"", defaultValue = ""true"")"
35283,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/dataformat/BeanioDataFormat.java,40,,"    @Metadata(javaType = ""java.lang.Boolean"")"
35284,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/dataformat/CBORDataFormat.java,38,,"    @Metadata(defaultValue = ""true"", javaType = ""java.lang.Boolean"")"
35285,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/dataformat/CBORDataFormat.java,49,,"    @Metadata(defaultValue = ""false"", javaType = ""java.lang.Boolean"")"
35286,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/dataformat/CsvDataFormat.java,45,,"    @Metadata(javaType = ""java.lang.Boolean"")"
35287,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/dataformat/FhirDataformat.java,30,,"    @Metadata(label = ""advanced"")"
35288,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/dataformat/FhirDataformat.java,36,,"    @Metadata(javaType = ""java.lang.Boolean"")"
35289,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/dataformat/FlatpackDataFormat.java,38,,"    @Metadata(javaType = ""java.lang.Boolean"")"
35290,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java,38,,"    @Metadata(defaultValue = ""false"", javaType = ""java.lang.Boolean"")"
35291,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java,38,,"    @Metadata(defaultValue = ""false"", javaType = ""java.lang.Boolean"")"
35292,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/dataformat/JaxbDataFormat.java,37,,"    @Metadata(javaType = ""java.lang.Boolean"")"
35293,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/dataformat/JsonDataFormat.java,40,,"    @Metadata(javaType = ""java.lang.Boolean"", defaultValue = ""true"")"
35294,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/dataformat/ProtobufDataFormat.java,41,,"    @Metadata(javaType = ""java.lang.Boolean"", defaultValue = ""true"","
35295,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/dataformat/UniVocityAbstractDataFormat.java,39,,"    @Metadata(javaType = ""java.lang.Boolean"", defaultValue = ""true"")"
35296,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/dataformat/YAMLDataFormat.java,56,,"    @Metadata(javaType = ""java.lang.Boolean"", defaultValue = ""true"")"
35297,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/language/JsonPathExpression.java,40,,"    @Metadata(defaultValue = ""false"", javaType = ""java.lang.Boolean"")"
35298,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/language/TokenizerExpression.java,44,,"    @Metadata(javaType = ""java.lang.Boolean"")"
35299,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/language/XPathExpression.java,43,,"    @Metadata(javaType = ""java.lang.Boolean"")"
35300,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/language/XPathExpression.java,46,,"    @Metadata(label = ""advanced"")"
35301,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/rest/RestConfigurationDefinition.java,48,,"    @Metadata(label = ""consumer"")"
35302,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/rest/RestDefinition.java,54,,"@Metadata(label = ""rest"")"
35303,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/rest/RestDefinition.java,393,,"            throw new IllegalArgumentException(""Must add verb first, such as get/post/delete"");"
35304,./TargetProjects/camel/core/camel-core-model/src/main/java/org/apache/camel/model/rest/RestOperationResponseHeaderDefinition.java,57,,"    @Metadata(defaultValue = ""string"")"
35305,./TargetProjects/camel/core/camel-core-processor/src/main/java/org/apache/camel/processor/ClaimCheckAggregationStrategy.java,169,,"            if (pattern.startsWith(""header:"") || pattern.startsWith(""+header:"") || pattern.startsWith(""-header:"")) {"
35306,./TargetProjects/camel/core/camel-core-processor/src/main/java/org/apache/camel/processor/ClaimCheckAggregationStrategy.java,169,,"            if (pattern.startsWith(""header:"") || pattern.startsWith(""+header:"") || pattern.startsWith(""-header:"")) {"
35307,./TargetProjects/camel/core/camel-core-processor/src/main/java/org/apache/camel/processor/ClaimCheckAggregationStrategy.java,169,,"            if (pattern.startsWith(""header:"") || pattern.startsWith(""+header:"") || pattern.startsWith(""-header:"")) {"
35308,./TargetProjects/camel/core/camel-core-processor/src/main/java/org/apache/camel/processor/MulticastProcessor.java,275,,"        LOG.trace(""Loaded {}"", dummy.getClass().getName());"
35309,./TargetProjects/camel/core/camel-core-processor/src/main/java/org/apache/camel/processor/MulticastProcessor.java,566,,"                            msg = ""Multicast processing failed for number "" + index;"
35310,./TargetProjects/camel/core/camel-core-processor/src/main/java/org/apache/camel/processor/RestBindingAdvice.java,56,,"    private static final String STATE_JSON = ""json"";"
35311,./TargetProjects/camel/core/camel-core-processor/src/main/java/org/apache/camel/processor/RestBindingAdvice.java,57,,"    private static final String STATE_XML = ""xml"";"
35312,./TargetProjects/camel/core/camel-core-processor/src/main/java/org/apache/camel/processor/RestBindingAdvice.java,190,,"        isXml &= bindingMode.equals(""auto"") || bindingMode.contains(""xml"");"
35313,./TargetProjects/camel/core/camel-core-processor/src/main/java/org/apache/camel/processor/RestBindingAdvice.java,322,,"        if (""off"".equals(bindingMode) || bindingMode.equals(""auto"")) {"
35314,./TargetProjects/camel/core/camel-core-processor/src/main/java/org/apache/camel/processor/errorhandler/RedeliveryErrorHandler.java,562,,"            String msg = ""Failed delivery for "" + ExchangeHelper.logIds(exchange);"
35315,./TargetProjects/camel/core/camel-core-processor/src/main/java/org/apache/camel/processor/errorhandler/RedeliveryErrorHandler.java,908,,"            msg = msg + "". Exhausted after delivery attempt: "" + redeliveryCounter + "" caught: "" + caught;"
35316,./TargetProjects/camel/core/camel-core-reifier/src/main/java/org/apache/camel/reifier/ProcessorReifier.java,323,,"        ObjectHelper.notNull(manager, ""ExecutorServiceManager"", camelContext);"
35317,./TargetProjects/camel/core/camel-core-xml/src/main/java/org/apache/camel/core/xml/AbstractCamelRedeliveryPolicyFactoryBean.java,42,,"    @Metadata(defaultValue = ""false"","
35318,./TargetProjects/camel/core/camel-core-xml/src/main/java/org/apache/camel/core/xml/AbstractCamelRedeliveryPolicyFactoryBean.java,78,,"    @Metadata(defaultValue = ""true"", description = ""Sets whether to log retry attempts"")"
35319,./TargetProjects/camel/core/camel-core-xml/src/main/java/org/apache/camel/core/xml/CamelJMXAgentDefinition.java,38,,"    @Metadata(defaultValue = ""false"")"
35320,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/CamelExceptionsTest.java,40,,"        Expression exp = ExpressionBuilder.constantExpression(""foo"");"
35321,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/CamelExceptionsTest.java,44,,"                = new ExpressionEvaluationException(exp, exchange, new IllegalArgumentException(""Damn""));"
35322,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/CamelExceptionsTest.java,88,,"        RuntimeTransformException e = new RuntimeTransformException(""Forced"");"
35323,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/PropertyBindingExceptionTest.java,30,,"                new Object(), ""property"", ""value"", ""prefix"", ""property"", new Throwable(""The casue!""));"
35324,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/TestSupport.java,537,,"        assertTrue(Files.exists(file), ""Directory "" + file + "" should exist"");"
35325,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/TestSupport.java,537,,"        assertTrue(Files.exists(file), ""Directory "" + file + "" should exist"");"
35326,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/TestSupport.java,554,,"        assertTrue(Files.exists(file), ""File "" + file + "" should exist"");"
35327,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/BuilderWithScopesTest.java,55,,"            order.add(""INVOKED"");"
35328,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/BuilderWithScopesTest.java,60,,"            order.add(""INVOKED2"");"
35329,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/BuilderWithScopesTest.java,65,,"            order.add(""INVOKED3"");"
35330,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/BuilderWithScopesTest.java,75,,"            order.add(""VALIDATE"");"
35331,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/BuilderWithScopesTest.java,76,,"            Object value = exchange.getIn().getHeader(""foo"");"
35332,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/BuilderWithScopesTest.java,79,,"            } else if (!value.equals(""bar"")) {"
35333,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/BuilderWithScopesTest.java,99,,"        Endpoint endpoint = container.getEndpoint(""direct:a"");"
35334,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/BuilderWithScopesTest.java,120,,"                errorHandler(deadLetterChannel(""mock:error"").redeliveryDelay(0).maximumRedeliveries(3));"
35335,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/BuilderWithScopesTest.java,124,,"        }, expected, ""banana"");"
35336,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/BuilderWithScopesTest.java,146,,"                        .when(header(""foo"").isEqualTo(""cheese"")).process(orderProcessor2).end()"
35337,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/ErrorHandlerTest.java,61,,"                from(""seda:a"").to(""seda:b"");"
35338,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/ErrorHandlerTest.java,61,,"                from(""seda:a"").to(""seda:b"");"
35339,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/ErrorHandlerTest.java,67,,"        assertEquals(1, list.size(), ""Number routes created"" + list);"
35340,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/ErrorHandlerTest.java,70,,"            assertEquals(""seda://a"", key.getEndpointUri(), ""From endpoint"");"
35341,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/ErrorHandlerTest.java,70,,"            assertEquals(""seda://a"", key.getEndpointUri(), ""From endpoint"");"
35342,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/ExceptionBuilderTest.java,56,,"            template.sendBody(""direct:a"", ""Hello NPE"");"
35343,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/ExceptionBuilderWithHandledExceptionTest.java,49,,"        template.sendBody(""direct:a"", ""Hello NPE"");"
35344,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/ExpressionBuilderTest.java,46,,"        Expression expression = regexTokenizeExpression(headerExpression(""location""), "","");"
35345,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/ExpressionBuilderTest.java,47,,"        List<String> expected = new ArrayList<>(Arrays.asList(new String[] { ""Islington"", ""London"", ""UK"" }));"
35346,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/ExpressionBuilderTest.java,63,,"        expression = regexReplaceAll(headerExpression(""location""), ""London"", headerExpression(""name""));"
35347,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/ExpressionBuilderTest.java,95,,"        List<String> expected = new ArrayList<>(Arrays.asList(new String[] { ""Claus"", ""Hadrian"", ""James"", ""Jonathan"" }));"
35348,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/ExpressionFunctionTest.java,41,,"        template.sendBodyAndHeader(""direct:function"", ""Hello World"", ""type"", ""function"");"
35349,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/FluentProducerTemplateTest.java,43,,"            fluent.withBody(""Hello World"").send();"
35350,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/FluentProducerTemplateTest.java,59,,"        MockEndpoint mock = getMockEndpoint(""mock:result"");"
35351,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/FluentProducerTemplateTest.java,60,,"        mock.expectedBodiesReceived(""Bye World"");"
35352,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/FluentProducerTemplateTest.java,63,,"        fluent.setDefaultEndpointUri(""direct:in"");"
35353,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/FluentProducerTemplateTest.java,197,,"        Exchange out = DefaultFluentProducerTemplate.on(context).withBody(""Hello World"").to(""direct:exception"").send();"
35354,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/FluentProducerTemplateTest.java,202,,"        assertEquals(""Forced exception by unit test"", out.getException().getMessage());"
35355,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/FluentProducerTemplateTest.java,313,,"                template.withBody(""Hello"").to(""direct:inout"").request(Integer.class));"
35356,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/FluentProducerTemplateTest.java,313,,"                template.withBody(""Hello"").to(""direct:inout"").request(Integer.class));"
35357,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/FluentProducerTemplateTest.java,315,,"        assertEquals(expectedResult, template.withHeader(""foo"", ""bar"").withBody(""Hello"")"
35358,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/FluentProducerTemplateTest.java,335,,"        mock.expectedHeaderValuesReceivedInAnyOrder(""action"", ""action-1"", ""action-2"");"
35359,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/FluentProducerTemplateTest.java,335,,"        mock.expectedHeaderValuesReceivedInAnyOrder(""action"", ""action-1"", ""action-2"");"
35360,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/FluentProducerTemplateTest.java,335,,"        mock.expectedHeaderValuesReceivedInAnyOrder(""action"", ""action-1"", ""action-2"");"
35361,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/FluentProducerTemplateTest.java,336,,"        mock.expectedBodiesReceivedInAnyOrder(""body-1"", ""body-2"");"
35362,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/FluentProducerTemplateTest.java,336,,"        mock.expectedBodiesReceivedInAnyOrder(""body-1"", ""body-2"");"
35363,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/FluentProducerTemplateTest.java,340,,"                = fluent.to(""direct:async"").withHeader(""action"", ""action-1"").withBody(""body-1"").asyncRequest(String.class);"
35364,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/FluentProducerTemplateTest.java,396,,"        mock.expectedBodiesReceived(""Camel"", ""World"");"
35365,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/FluentProducerTemplateTest.java,401,,"        Object result = fluent.withBody(""Camel"").withHeader(""foo"", ""!"").to(""direct:echo"").request();"
35366,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/NotifyBuilderTest.java,85,,"        NotifyBuilder notify = new NotifyBuilder(context).from(""direct:foo"").whenDone(1).create();"
35367,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/NotifyBuilderTest.java,98,,"        NotifyBuilder notify = new NotifyBuilder(context).from(""direct:beer"").whenDone(1).create();"
35368,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/NotifyBuilderTest.java,111,,"        NotifyBuilder notify = new NotifyBuilder(context).fromRoute(""foo"").whenDone(1).create();"
35369,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/NotifyBuilderTest.java,117,,"        template.sendBody(""direct:bar"", ""A"");"
35370,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/NotifyBuilderTest.java,252,,"        template.sendBody(""direct:cake"", ""F"");"
35371,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/NotifyBuilderTest.java,329,,"            template.sendBody(""direct:fail"", ""E"");"
35372,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/NotifyBuilderTest.java,330,,"            fail(""Should have thrown exception"");"
35373,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/NotifyBuilderTest.java,364,,"        NotifyBuilder notify = new NotifyBuilder(context).filter(body().contains(""World"")).whenDone(3).create();"
35374,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/NotifyBuilderTest.java,370,,"        template.sendBody(""direct:foo"", ""Hello World"");"
35375,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/NotifyBuilderTest.java,371,,"        template.sendBody(""direct:foo"", ""Hi World"");"
35376,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/NotifyBuilderTest.java,381,,"        template.sendBody(""direct:bar"", ""Bye World"");"
35377,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/NotifyBuilderTest.java,560,,"        NotifyBuilder notify = new NotifyBuilder(context).whenAnyReceivedMatches(body().contains(""Camel"")).create();"
35378,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/NotifyBuilderTest.java,570,,"        template.sendBody(""direct:bar"", ""Hello Camel"");"
35379,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/NotifyBuilderTest.java,583,,"        template.sendBody(""direct:foo"", ""Bye Camel"");"
35380,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/NotifyBuilderTest.java,602,,"        template.sendBody(""direct:foo"", ""Damn World"");"
35381,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/NotifyBuilderTest.java,702,,"        MockEndpoint mock = getMockEndpoint(""mock:assert"");"
35382,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/NotifyBuilderTest.java,915,,"        NotifyBuilder notify = new NotifyBuilder(context).wereSentTo(""log:beer"").wereSentTo(""mock:beer"").whenDone(1).create();"
35383,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/PredicateBinaryCoerceRouteTest.java,27,,"        getMockEndpoint(""mock:123"").expectedMessageCount(0);"
35384,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/PredicateBinaryCoerceRouteTest.java,28,,"        getMockEndpoint(""mock:456"").expectedMessageCount(0);"
35385,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/PredicateBinaryCoerceRouteTest.java,29,,"        getMockEndpoint(""mock:other"").expectedMessageCount(1);"
35386,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/PredicateBinaryCoerceRouteTest.java,31,,"        template.sendBody(""direct:start"", ""Hello World"");"
35387,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/PredicateBinaryCoerceRouteTest.java,31,,"        template.sendBody(""direct:start"", ""Hello World"");"
35388,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/PredicateBinaryCoerceRouteTest.java,42,,"        template.sendBodyAndHeader(""direct:start"", ""Hello World"", ""foo"", 123);"
35389,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/PredicateBinaryCoerceRouteTest.java,104,,"        getMockEndpoint(""mock:enum"").expectedMessageCount(1);"
35390,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/PredicateBinaryCoerceRouteTest.java,122,,"        getMockEndpoint(""mock:max"").expectedMessageCount(1);"
35391,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/PredicateBinaryCoerceRouteTest.java,123,,"        getMockEndpoint(""mock:min"").expectedMessageCount(0);"
35392,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/PredicateBinaryCoerceRouteTest.java,125,,"        template.sendBodyAndHeader(""direct:foo"", ""Hello World"", ""foo"", ""250"");"
35393,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/PredicateBinaryCoerceRouteTest.java,146,,"        template.sendBodyAndHeader(""direct:foo"", ""Hello World"", ""enum"", ""Always"");"
35394,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/PredicateBinaryCoerceTypeTest.java,34,,"        Expression a = ExpressionBuilder.constantExpression(""123"");"
35395,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/PredicateBinaryCoerceTypeTest.java,109,,"        Expression a = ExpressionBuilder.constantExpression(""200"");"
35396,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/PredicateBinaryCoerceTypeTest.java,110,,"        Expression b = ExpressionBuilder.constantExpression(Integer.valueOf(""100""));"
35397,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/PredicateBuilderTest.java,41,,"        assertMatches(header(""location"").regex(""[a-zA-Z]+,London,UK""));"
35398,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/PredicateBuilderTest.java,47,,"        assertMatches(header(""name"").isEqualTo(constant(""James"")));"
35399,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/PredicateBuilderTest.java,47,,"        assertMatches(header(""name"").isEqualTo(constant(""James"")));"
35400,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/PredicateBuilderTest.java,48,,"        assertMatches(not(header(""name"").isEqualTo(constant(""Claus""))));"
35401,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/PredicateBuilderTest.java,50,,"        assertMatches(header(""size"").isEqualTo(10));"
35402,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/PredicateBuilderTest.java,56,,"        assertDoesNotMatch(header(""name"").isEqualTo(constant(""Hiram"")));"
35403,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteBuilderTest.java,69,,"                errorHandler(deadLetterChannel(""mock:error""));"
35404,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteBuilderTest.java,71,,"                from(""direct:a"").to(""direct:b"");"
35405,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteBuilderTest.java,71,,"                from(""direct:a"").to(""direct:b"");"
35406,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteBuilderTest.java,82,,"        assertEquals(1, routes.size(), ""Number routes created"");"
35407,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteBuilderTest.java,85,,"            assertEquals(""direct://a"", key.getEndpointUri(), ""From endpoint"");"
35408,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteBuilderTest.java,85,,"            assertEquals(""direct://a"", key.getEndpointUri(), ""From endpoint"");"
35409,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteBuilderTest.java,91,,"            assertEquals(""direct://b"", sendProcessor.getDestination().getEndpointUri(), ""Endpoint URI"");"
35410,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteBuilderTest.java,91,,"            assertEquals(""direct://b"", sendProcessor.getDestination().getEndpointUri(), ""Endpoint URI"");"
35411,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteBuilderTest.java,101,,"                from(""direct:a"").filter(header(""foo"").isEqualTo(""bar"")).to(""direct:b"");"
35412,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteBuilderTest.java,112,,"        log.debug(""Created routes: "" + routes);"
35413,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateAndExistingRouteTest.java,34,,"        RouteTemplateDefinition routeTemplate = context.getRouteTemplateDefinition(""myTemplate"");"
35414,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateAndExistingRouteTest.java,35,,"        assertEquals(""foo"", routeTemplate.getTemplateParameters().get(0).getName());"
35415,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateAndExistingRouteTest.java,36,,"        assertEquals(""greeting"", routeTemplate.getTemplateParameters().get(1).getName());"
35416,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateBeforeContextStartingTest.java,39,,"                routeTemplate(""myTemplate"").templateParameter(""foo"").templateParameter(""bar"")"
35417,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateBeforeContextStartingTest.java,39,,"                routeTemplate(""myTemplate"").templateParameter(""foo"").templateParameter(""bar"")"
35418,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateBeforeContextStartingTest.java,39,,"                routeTemplate(""myTemplate"").templateParameter(""foo"").templateParameter(""bar"")"
35419,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateConverterTest.java,34,,"        context.addRouteTemplateDefinitionConverter(""myTemplate1"", RouteTemplateDefinition.Converter.DEFAULT_CONVERTER);"
35420,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateConverterTest.java,35,,"        context.addRouteFromTemplate(""first"", ""myTemplate1"", mapOf(""foo"", ""one"", ""bar"", ""cheese""));"
35421,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateConverterTest.java,35,,"        context.addRouteFromTemplate(""first"", ""myTemplate1"", mapOf(""foo"", ""one"", ""bar"", ""cheese""));"
35422,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateConverterTest.java,35,,"        context.addRouteFromTemplate(""first"", ""myTemplate1"", mapOf(""foo"", ""one"", ""bar"", ""cheese""));"
35423,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateConverterTest.java,35,,"        context.addRouteFromTemplate(""first"", ""myTemplate1"", mapOf(""foo"", ""one"", ""bar"", ""cheese""));"
35424,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateConverterTest.java,40,,"        assertEquals(""direct:{{foo}}"", context.getRouteDefinition(""first"").getInput().getEndpointUri());"
35425,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateConverterTest.java,50,,"            def.setInput(new FromDefinition(inUri + ""?timeout=60s""));"
35426,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateConverterTest.java,59,,"        assertEquals(""direct:{{foo}}?timeout=60s"", context.getRouteDefinition(""first"").getInput().getEndpointUri());"
35427,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateDefaultValueTest.java,35,,"        RouteTemplateDefinition routeTemplate = context.getRouteTemplateDefinition(""myTemplate"");"
35428,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateDefaultValueTest.java,36,,"        assertEquals(""foo"", routeTemplate.getTemplateParameters().get(0).getName());"
35429,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateDefaultValueTest.java,38,,"        assertEquals(""bar"", routeTemplate.getTemplateParameters().get(1).getName());"
35430,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateErrorHandlerTest.java,33,,"            context.getRegistry().bind(""myErrorHandler"", new NoErrorHandlerBuilder());"
35431,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateLocalBeanTest.java,42,,"        context.getRegistry().bind(""myBar"", (Processor) ex -> ex.getMessage().setBody(""Global "" + ex.getMessage().getBody()));"
35432,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateLocalBeanTest.java,47,,"                routeTemplate(""myTemplate"").templateParameter(""foo"").templateParameter(""bar"")"
35433,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateLocalBeanTest.java,47,,"                routeTemplate(""myTemplate"").templateParameter(""foo"").templateParameter(""bar"")"
35434,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateLocalBeanTest.java,47,,"                routeTemplate(""myTemplate"").templateParameter(""foo"").templateParameter(""bar"")"
35435,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateLocalBeanTest.java,48,,"                        .from(""direct:{{foo}}"")"
35436,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateLocalBeanTest.java,49,,"                        .to(""bean:{{bar}}"");"
35437,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateLocalBeanTest.java,56,,"                .parameter(""foo"", ""one"")"
35438,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateLocalBeanTest.java,58,,"                .routeId(""myRoute"")"
35439,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateLocalBeanTest.java,63,,"        Object out = template.requestBody(""direct:one"", ""World"");"
35440,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateLocalBeanTest.java,63,,"        Object out = template.requestBody(""direct:one"", ""World"");"
35441,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateLocalBeanTest.java,88,,"                .bean(""myBar"", (Processor) ex -> ex.getMessage().setBody(""Builder "" + ex.getMessage().getBody()))"
35442,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateLocalBeanTest.java,95,,"        assertEquals(""Builder World"", out);"
35443,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateLocalBeanTest.java,124,,"                .parameter(""foo"", ""two"")"
35444,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateLocalBeanTest.java,127,,"                .routeId(""myRoute2"")"
35445,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateLocalBeanTest.java,134,,"        Object out2 = template.requestBody(""direct:two"", ""Camel"");"
35446,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateLocalBeanTest.java,134,,"        Object out2 = template.requestBody(""direct:two"", ""Camel"");"
35447,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateLocalBeanTest.java,135,,"        assertEquals(""Builder2 Camel"", out2);"
35448,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateModelLifecycleTest.java,47,,"                routeTemplate(""myTemplate"").templateParameter(""foo"").templateParameter(""bar"")"
35449,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateModelLifecycleTest.java,47,,"                routeTemplate(""myTemplate"").templateParameter(""foo"").templateParameter(""bar"")"
35450,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateModelLifecycleTest.java,47,,"                routeTemplate(""myTemplate"").templateParameter(""foo"").templateParameter(""bar"")"
35451,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateTest.java,35,,"        RouteTemplateDefinition routeTemplate = context.getRouteTemplateDefinition(""myTemplate"");"
35452,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateTest.java,36,,"        assertEquals(""foo"", routeTemplate.getTemplateParameters().get(0).getName());"
35453,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateTest.java,37,,"        assertEquals(""bar"", routeTemplate.getTemplateParameters().get(1).getName());"
35454,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateTest.java,48,,"        getMockEndpoint(""mock:cheese"").expectedBodiesReceived(""Hello Cheese"");"
35455,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateTest.java,48,,"        getMockEndpoint(""mock:cheese"").expectedBodiesReceived(""Hello Cheese"");"
35456,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateTest.java,49,,"        getMockEndpoint(""mock:cake"").expectedBodiesReceived(""Hello Cake"");"
35457,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateTest.java,52,,"        parameters.put(""foo"", ""one"");"
35458,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateTest.java,53,,"        parameters.put(""bar"", ""cheese"");"
35459,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateTest.java,54,,"        context.addRouteFromTemplate(""first"", ""myTemplate"", parameters);"
35460,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateTest.java,58,,"        context.addRouteFromTemplate(""second"", ""myTemplate"", parameters);"
35461,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateTest.java,62,,"        assertEquals(""Started"", context.getRouteController().getRouteStatus(""first"").name());"
35462,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateTest.java,64,,"        assertEquals(""true"", context.getRoute(""first"").getProperties().get(Route.TEMPLATE_PROPERTY));"
35463,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/RouteTemplateTest.java,67,,"        template.sendBody(""direct:one"", ""Hello Cheese"");"
35464,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/SimpleBuilderTest.java,37,,"        exchange.getIn().setBody(""foo"");"
35465,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/SimpleBuilderTest.java,53,,"        exchange.getIn().setHeader(""head"", ""foo"");"
35466,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/SimpleBuilderTest.java,80,,"        assertEquals(true, SimpleBuilder.simple(""${header.cool}"", boolean.class).evaluate(exchange, Object.class));"
35467,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/SimpleBuilderTest.java,97,,"        assertEquals(""http://some/rest/api/12/activate"","
35468,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/ThreadPoolBuilderTest.java,45,,"        ExecutorService executor = builder.build(this, ""myPool"");"
35469,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/ValueBuilderTest.java,37,,"                from(""direct:start"").transform(body().append("" World"")).to(""mock:result"");"
35470,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/ValueBuilderTest.java,37,,"                from(""direct:start"").transform(body().append("" World"")).to(""mock:result"");"
35471,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/DefaultNamespaceContextTest.java,35,,"        XPathBuilder builder = XPathBuilder.xpath(""/foo"");"
35472,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/DefaultNamespaceContextTest.java,40,,"        String uri = context.getNamespaceURI(""foo"");"
35473,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/DefaultNamespaceContextTest.java,52,,"        XPathBuilder builder = XPathBuilder.xpath(""/foo"").namespace(""pre"", ""http://acme/cheese"");"
35474,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/DefaultNamespaceContextTest.java,52,,"        XPathBuilder builder = XPathBuilder.xpath(""/foo"").namespace(""pre"", ""http://acme/cheese"");"
35475,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/DefaultNamespaceContextTest.java,71,,"                = XPathBuilder.xpath(""/foo"").namespace(""pre"", ""http://acme/cheese"").namespace(""bar"", ""http://acme/bar"");"
35476,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/DefaultNamespaceContextTest.java,71,,"                = XPathBuilder.xpath(""/foo"").namespace(""pre"", ""http://acme/cheese"").namespace(""bar"", ""http://acme/bar"");"
35477,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/ExtractXPathWithNamespaceTest.java,34,,"        MockEndpoint mock = getMockEndpoint(""mock:result"");"
35478,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/ExtractXPathWithNamespaceTest.java,36,,"        mock.expectedHeaderReceived(""foo"", 55);"
35479,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/ExtractXPathWithNamespaceTest.java,38,,"        template.sendBody(""direct:in"", ""<number xmlns=\""http://acme.com/cheese\"">55</number>"");"
35480,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/XPathContentBasedRouterTest.java,35,,"        template.sendBody(""direct:a"", ""<hello/>"");"
35481,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/XPathFunctionsONielProblemTest.java,35,,"        template.sendBodyAndHeader(""direct:in"", ""<name>King</name>"", ""type"", ""Camel"");"
35482,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/XPathFunctionsTest.java,35,,"        template.sendBodyAndHeader(""direct:in"", ""<name>King</name>"", ""type"", ""Camel"");"
35483,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/XPathHeaderNameTest.java,31,,"        mock.expectedBodiesReceived(""<response>OK</response>"");"
35484,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/XPathHeaderNameTest.java,32,,"        mock.expectedHeaderReceived(""invoiceDetails"","
35485,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/XPathHeaderNameTest.java,35,,"        template.sendBodyAndHeader(""direct:in"", ""<response>OK</response>"", ""invoiceDetails"","
35486,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/XPathHeaderTest.java,35,,"        template.sendBodyAndHeader(""direct:in"", ""<name>King</name>"", ""type"", ""Camel"");"
35487,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/XPathMockTest.java,31,,"        MockEndpoint mock = getMockEndpoint(""mock:result"");"
35488,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/XPathMockTest.java,32,,"        mock.message(0).body().matches(xpath(""/foo/text() = 'Hello World'"").booleanResult());"
35489,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/XPathMockTest.java,34,,"        template.sendBody(""direct:start"", ""<foo>Hello World</foo>"");"
35490,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/XPathMockTest.java,34,,"        template.sendBody(""direct:start"", ""<foo>Hello World</foo>"");"
35491,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/XPathNamespaceTest.java,35,,"        template.sendBody(""direct:in"", ""<number xmlns=\""http://acme.com/cheese\"">55</number>"");"
35492,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/XPathTest.java,61,,"        assertExpression(""/foo/bar/@xyz"", ""<foo><bar xyz='cheese'/></foo>"", ""cheese"");"
35493,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/XPathTest.java,61,,"        assertExpression(""/foo/bar/@xyz"", ""<foo><bar xyz='cheese'/></foo>"", ""cheese"");"
35494,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/XPathTest.java,61,,"        assertExpression(""/foo/bar/@xyz"", ""<foo><bar xyz='cheese'/></foo>"", ""cheese"");"
35495,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/XPathTest.java,62,,"        assertExpression(""$name"", ""<foo><bar xyz='cheese'/></foo>"", ""James"");"
35496,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/XPathTest.java,63,,"        assertExpression(""foo/bar"", ""<foo><bar>cheese</bar></foo>"", ""cheese"");"
35497,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/XPathTest.java,63,,"        assertExpression(""foo/bar"", ""<foo><bar>cheese</bar></foo>"", ""cheese"");"
35498,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/XPathTest.java,111,,"        Object result = xpath(""/foo"").nodeSetResult().evaluate(createExchange(""<foo>bar</foo>""));"
35499,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/XPathTest.java,111,,"        Object result = xpath(""/foo"").nodeSetResult().evaluate(createExchange(""<foo>bar</foo>""));"
35500,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/XPathTest.java,151,,"                ""<?xml version=\""1.0\"" encoding=\""UTF-8\""?><foo>bar</foo>"");"
35501,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/XPathTest.java,246,,"        XPathBuilder builder = xpath(""/c:person[@name='James']"").namespace(""c"", ""http://acme.com/cheese"").booleanResult();"
35502,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/XPathTest.java,249,,"                = builder.evaluate(createExchange(""<person xmlns=\""http://acme.com/cheese\"" name='James' city='London'/>""));"
35503,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/XsltBuilderTest.java,62,,"        URL styleSheet = getClass().getResource(""example.xsl"");"
35504,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/XsltBuilderTest.java,67,,"        exchange.getIn().setBody(""<hello>world!</hello>"");"
35505,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/XsltBuilderTest.java,71,,"        assertEquals(""<?xml version=\""1.0\"" encoding=\""UTF-8\""?><goodbye>world!</goodbye>"", exchange.getMessage().getBody());"
35506,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/XsltBuilderTest.java,91,,"        File styleSheet = new File(""src/test/resources/org/apache/camel/builder/xml/example.xsl"");"
35507,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/builder/xml/XsltBuilderTest.java,234,,"        exchange.getIn().setHeader(Exchange.XSLT_FILE_NAME, testFile(""xsltout.xml"").toString());"
35508,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/catalog/CustomEndpointUriFactoryTest.java,43,,"        params.put(""name"", ""foo"");"
35509,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/catalog/CustomEndpointUriFactoryTest.java,43,,"        params.put(""name"", ""foo"");"
35510,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/catalog/CustomEndpointUriFactoryTest.java,44,,"        params.put(""amount"", ""123"");"
35511,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/catalog/CustomEndpointUriFactoryTest.java,44,,"        params.put(""amount"", ""123"");"
35512,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/catalog/CustomEndpointUriFactoryTest.java,45,,"        params.put(""port"", 4444);"
35513,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/catalog/CustomEndpointUriFactoryTest.java,46,,"        params.put(""verbose"", true);"
35514,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/catalog/CustomEndpointUriFactoryTest.java,48,,"        String uri = assembler.buildUri(""acme"", params);"
35515,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/catalog/CustomEndpointUriFactoryTest.java,108,,"        params.put(""name"", ""bar"");"
35516,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/catalog/CustomEndpointUriFactoryTest.java,127,,"        String uri = assembler.buildUri(""acme2"", params);"
35517,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/catalog/CustomEndpointUriFactoryTest.java,182,,"        params.put(""destinationName"", ""foo"");"
35518,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/catalog/CustomEndpointUriFactoryTest.java,183,,"        params.put(""destinationType"", ""topic"");"
35519,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/catalog/CustomEndpointUriFactoryTest.java,184,,"        params.put(""deliveryPersistent"", true);"
35520,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/catalog/CustomEndpointUriFactoryTest.java,186,,"        String uri = assembler.buildUri(""jms2"", params);"
35521,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/catalog/CustomEndpointUriFactoryTest.java,225,,"        params.put(""cql"", ""insert into test_data(id, text) values (now(), ?)"");"
35522,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/catalog/RuntimeCamelCatalogTest.java,47,,"        map.put(""noop"", ""true"");"
35523,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/catalog/RuntimeCamelCatalogTest.java,48,,"        map.put(""delay"", ""5000"");"
35524,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/catalog/RuntimeCamelCatalogTest.java,57,,"        map.put(""timerName"", ""foo"");"
35525,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/catalog/RuntimeCamelCatalogTest.java,57,,"        map.put(""timerName"", ""foo"");"
35526,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/catalog/RuntimeCamelCatalogTest.java,58,,"        map.put(""period"", ""5000"");"
35527,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/catalog/RuntimeCamelCatalogTest.java,60,,"        String uri = catalog.asEndpointUri(""timer"", map, true);"
35528,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/cluster/ClusterServiceSelectorTest.java,165,,"            service1.setAttribute(""service.type"", ""zookeeper"");"
35529,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/cluster/ClusterServiceViewTest.java,42,,"        TestClusterView view1 = service.getView(""ns1"").unwrap(TestClusterView.class);"
35530,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/cluster/ClusteredRoutePolicyFactoryTest.java,56,,"        assertEquals(ServiceStatus.Stopped, context.getRouteController().getRouteStatus(""foo""));"
35531,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/cluster/ClusteredRoutePolicyFactoryTest.java,58,,"        MockEndpoint mock = getMockEndpoint(""mock:foo"");"
35532,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/cluster/ClusteredRoutePolicyFactoryTest.java,59,,"        mock.expectedBodiesReceived(""Hello Foo"");"
35533,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/cluster/ClusteredRoutePolicyFactoryTest.java,63,,"        template.sendBody(""seda:foo"", ""Hello Foo"");"
35534,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/cluster/ClusteredRoutePolicyFactoryTest.java,75,,"                from(""seda:bar"").routeId(""bar"")"
35535,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/cluster/ClusteredRoutePolicyFactoryTest.java,75,,"                from(""seda:bar"").routeId(""bar"")"
35536,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/cluster/ClusteredRoutePolicyFactoryTest.java,76,,"                        .to(""mock:bar"");"
35537,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/cluster/ClusteredRoutePolicyFactoryTest.java,85,,"        getMockEndpoint(""mock:bar"").expectedBodiesReceived(""Hello Bar"");"
35538,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/cluster/ClusteredRoutePolicyTest.java,55,,"        assertEquals(ServiceStatus.Stopped, context.getRouteController().getRouteStatus(""foo""));"
35539,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/cluster/ClusteredRoutePolicyTest.java,57,,"        MockEndpoint mock = getMockEndpoint(""mock:foo"");"
35540,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/cluster/ClusteredRoutePolicyTest.java,58,,"        mock.expectedBodiesReceived(""Hello Foo"");"
35541,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/cluster/ClusteredRoutePolicyTest.java,62,,"        template.sendBody(""seda:foo"", ""Hello Foo"");"
35542,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/cluster/ClusteredRoutePolicyTest.java,74,,"                from(""seda:bar"").routeId(""bar"").routePolicy(policy)"
35543,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/cluster/ClusteredRoutePolicyTest.java,74,,"                from(""seda:bar"").routeId(""bar"").routePolicy(policy)"
35544,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/cluster/ClusteredRoutePolicyTest.java,75,,"                        .to(""mock:bar"");"
35545,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/cluster/ClusteredRoutePolicyTest.java,84,,"        getMockEndpoint(""mock:bar"").expectedBodiesReceived(""Hello Bar"");"
35546,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanChoseMethodWithMatchingTypeAndSkipSettersTest.java,46,,"        MockEndpoint mock = getMockEndpoint(""mock:queue:order"");"
35547,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanClassTypeUseBeanFromRegistryTest.java,39,,"                from(""direct:start"").bean(FooService.class).to(""mock:result"");"
35548,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanClassTypeUseBeanFromRegistryTest.java,39,,"                from(""direct:start"").bean(FooService.class).to(""mock:result"");"
35549,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanComponentMissingParenthesisTest.java,47,,"                from(""direct:start"").to(""bean:myBean?method=concat(${body}, ${header.foo})"").to(""mock:result"");"
35550,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanComponentMissingParenthesisTest.java,47,,"                from(""direct:start"").to(""bean:myBean?method=concat(${body}, ${header.foo})"").to(""mock:result"");"
35551,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanCreateBodyExceptionTest.java,33,,"        getMockEndpoint(""mock:dead"").expectedMessageCount(1);"
35552,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanCreateBodyExceptionTest.java,44,,"                        throw new IllegalArgumentException(""Forced internal error"");"
35553,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanEndpointTest.java,37,,"        jndi.bind(""foo"", new FooBean());"
35554,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanEndpointTest.java,45,,"        endpoint.setEndpointUriIfNotSpecified(""bean:foo"");"
35555,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanEndpointTest.java,58,,"                from(""direct:start"").to(endpoint);"
35556,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanEndpointTest.java,63,,"        String out = template.requestBody(""direct:start"", ""World"", String.class);"
35557,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanEndpointTest.java,64,,"        assertEquals(""Hello World"", out);"
35558,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanEndpointTest.java,127,,"        endpoint.setMethod(""hello"");"
35559,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanExplicitMethodAmbiguousTest.java,35,,"        jndi.bind(""dummy"", new MyDummyBean());"
35560,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanExplicitMethodAmbiguousTest.java,42,,"            template.requestBody(""direct:hello"", ""Camel"");"
35561,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanHandlerMethodTest.java,39,,"        assertEquals(""hello"", mi.getMethod().getName());"
35562,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanHandlerMethodTest.java,128,,"            return ""Hello "" + hi;"
35563,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanHandlerMethodTest.java,132,,"            fail(""Should not invoke me"");"
35564,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanInfoSelectMethodTest.java,41,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Order"");"
35565,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanInfoTest.java,56,,"        long size = operations.stream().filter(m -> m.getMethod().getName().equals(""inOnlyMethod"")).count();"
35566,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanInfoTest.java,59,,"        size = operations.stream().filter(m -> m.getMethod().getName().equals(""inOutMethod"")).count();"
35567,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanInvokeAsyncTest.java,48,,"        runTestSendBody(""Hello World"", ""Hello World"", this::doSomething);"
35568,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanInvokeTest.java,30,,"        mock.expectedBodiesReceived(""Hello World"");"
35569,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanInvokeTest.java,31,,"        template.sendBody(""direct:a"", ""Hello World"");"
35570,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanInvokeTest.java,51,,"        template.sendBody(""direct:b"", ""Hello World"");"
35571,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanInvokeTest.java,72,,"        template.sendBody(""direct:c"", ""Hello World"");"
35572,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanInvokeWithNullBodyTest.java,28,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Hello World"");"
35573,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanInvokeWithNullBodyTest.java,30,,"        template.sendBody(""direct:start"", ""Hello World"");"
35574,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanLifecycleTest.java,89,,"                from(""direct:foo"").routeId(""foo"").bean(statefulInstance, ""doSomething"", BeanScope.Prototype)"
35575,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanMethodValueWithCommaTest.java,31,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Camela,b"");"
35576,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanMethodValueWithExchangeTest.java,32,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Hello World"");"
35577,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanMethodWithEmptyParameterAndNoMethodWithNoParameterIssueTest.java,44,,"        getMockEndpoint(""mock:result"").expectedMessageCount(0);"
35578,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanMethodWithStringParameterTest.java,39,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Hello WorldHello World"");"
35579,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanNoCacheTest.java,34,,"        template.sendBody(""direct:start"", ""Hello"");"
35580,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanNoTypeConvertionPossibleTest.java,36,,"        MockEndpoint mock = getMockEndpoint(""mock:result"");"
35581,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanNoTypeConvertionPossibleTest.java,42,,"            template.requestBody(""direct:start"", new Date());"
35582,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanNoTypeConvertionPossibleWhenHeaderTest.java,34,,"        MockEndpoint mock = getMockEndpoint(""mock:result"");"
35583,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanNoTypeConvertionPossibleWhenHeaderTest.java,40,,"            template.requestBodyAndHeader(""direct:start"", ""Hello World"", ""foo"", 555);"
35584,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanNoTypeConvertionPossibleWhenHeaderTest.java,40,,"            template.requestBodyAndHeader(""direct:start"", ""Hello World"", ""foo"", 555);"
35585,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanNoTypeConvertionPossibleWhenHeaderTest.java,40,,"            template.requestBodyAndHeader(""direct:start"", ""Hello World"", ""foo"", 555);"
35586,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanOgnlPerformanceTest.java,60,,"                from(""direct:start"").toF(""bean:foo?cache=%s&method=hello('Camel')"", cache)"
35587,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanOverloadedCovariantMethodTest.java,35,,"                from(""direct:start"").bean(MySuperBean.class, ""hello"").to(""mock:result"");"
35588,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanOverloadedCovariantMethodTest.java,35,,"                from(""direct:start"").bean(MySuperBean.class, ""hello"").to(""mock:result"");"
35589,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanOverloadedMethodFQNTest.java,43,,"                from(""direct:start"").bean(MyBean.class, ""order(MyOrder)"").to(""mock:result"");"
35590,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanOverloadedMethodFQNTest.java,43,,"                from(""direct:start"").bean(MyBean.class, ""order(MyOrder)"").to(""mock:result"");"
35591,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanOverloadedMethodParameterValueTest.java,38,,"                from(""direct:start"").bean(MyBean.class, ""hello(${body})"").to(""mock:result"");"
35592,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanOverloadedMethodParameterValueTest.java,38,,"                from(""direct:start"").bean(MyBean.class, ""hello(${body})"").to(""mock:result"");"
35593,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanOverloadedMethodParameterValueTest.java,46,,"        template.sendBodyAndHeader(""direct:start"", ""Claus"", ""country"", ""Denmark"");"
35594,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanOverloadedMethodParameterValueTest.java,46,,"        template.sendBodyAndHeader(""direct:start"", ""Claus"", ""country"", ""Denmark"");"
35595,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanOverloadedMethodParameterValueTest.java,46,,"        template.sendBodyAndHeader(""direct:start"", ""Claus"", ""country"", ""Denmark"");"
35596,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanOverloadedMethodTest.java,43,,"                from(""direct:start"").bean(MyBean.class, ""hello(String)"").to(""mock:result"");"
35597,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanOverloadedMethodTest.java,43,,"                from(""direct:start"").bean(MyBean.class, ""hello(String)"").to(""mock:result"");"
35598,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanOverloadedMethodTest.java,51,,"        template.sendBodyAndHeader(""direct:start"", ""Claus"", ""country"", ""Denmark"");"
35599,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanOverloadedMethodTest.java,51,,"        template.sendBodyAndHeader(""direct:start"", ""Claus"", ""country"", ""Denmark"");"
35600,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanOverloadedMethodTest.java,51,,"        template.sendBodyAndHeader(""direct:start"", ""Claus"", ""country"", ""Denmark"");"
35601,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanOverloadedMethodTest.java,86,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Hello Claus you are from Denmark"");"
35602,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanOverloadedMethodTest.java,221,,"        template.sendBodyAndHeader(""direct:start"", ""A"", ""times"", ""3"");"
35603,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanParameterInvalidValueTest.java,38,,"        getMockEndpoint(""mock:result"").expectedMessageCount(0);"
35604,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanParameterInvalidValueTest.java,41,,"            template.sendBody(""direct:a"", ""World"");"
35605,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanParameterValueOgnlTest.java,31,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Hello World"");"
35606,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanParameterValueOverloadedTest.java,31,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Hello World"");"
35607,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanParameterValueTest.java,34,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Hello World"");"
35608,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanParameterValueTest.java,34,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Hello World"");"
35609,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanParameterValueTest.java,36,,"        template.sendBody(""direct:start"", ""World"");"
35610,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanPipelineTest.java,42,,"        mock.expectedHeaderReceived(""from"", ""James"");"
35611,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanProxyNoBindingTest.java,35,,"        Endpoint endpoint = context.getEndpoint(""direct:start"");"
35612,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanProxyNoBindingTest.java,38,,"        String reply = service.submitOrderStringReturnString(""<order type=\""book\"">Camel in action</order>"");"
35613,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanProxyNoBindingTest.java,39,,"        assertEquals(""<order id=\""123\"">OK</order>"", reply);"
35614,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanProxyNoBindingTest.java,95,,"            service.submitOrderStringReturnString(""Hello World"");"
35615,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanProxyNoBindingTest.java,127,,"        Endpoint endpoint = context.getEndpoint(""direct:bean"");"
35616,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanProxyNoBindingTest.java,169,,"        getMockEndpoint(""mock:delay"").expectedBodiesReceived(""Hello World"", ""Bye World"");"
35617,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanProxyNoBindingTest.java,169,,"        getMockEndpoint(""mock:delay"").expectedBodiesReceived(""Hello World"", ""Bye World"");"
35618,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanProxyTest.java,35,,"        Endpoint endpoint = context.getEndpoint(""direct:start"");"
35619,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanProxyTest.java,38,,"        String reply = service.submitOrderStringReturnString(""<order type=\""book\"">Camel in action</order>"");"
35620,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanProxyTest.java,39,,"        assertEquals(""<order id=\""123\"">OK</order>"", reply);"
35621,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanProxyTest.java,95,,"            service.submitOrderStringReturnString(""Hello World"");"
35622,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanProxyTest.java,127,,"        Endpoint endpoint = context.getEndpoint(""direct:bean"");"
35623,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanProxyTest.java,169,,"        getMockEndpoint(""mock:delay"").expectedBodiesReceived(""Hello World"", ""Bye World"");"
35624,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanProxyTest.java,169,,"        getMockEndpoint(""mock:delay"").expectedBodiesReceived(""Hello World"", ""Bye World"");"
35625,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanRefNoCacheTest.java,34,,"        template.sendBody(""direct:start"", ""Hello"");"
35626,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanReturnNullTest.java,32,,"        MyBean out = template.requestBody(""direct:start"", ""Camel"", MyBean.class);"
35627,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanSimpleLanguageStaticMethodIssueTest.java,27,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Hello World"");"
35628,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanWithAnnotationInheritedTest.java,37,,"        MockEndpoint mock = getMockEndpoint(""mock:result"");"
35629,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanWithAnnotationInheritedTest.java,39,,"        template.requestBody(""direct:in1"", ""whatever"");"
35630,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanWithAnnotationInheritedTest.java,97,,"                from(""direct:in1"").setHeader(""foo"", constant(""x1"")).setHeader(""bar"", constant(""y1"")).to(""bean:b?method=m1"")"
35631,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanWithAnnotationInheritedTest.java,97,,"                from(""direct:in1"").setHeader(""foo"", constant(""x1"")).setHeader(""bar"", constant(""y1"")).to(""bean:b?method=m1"")"
35632,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanWithExpressionInjectionPredicateTest.java,32,,"        template.sendBody(""direct:in"", ""Hello"");"
35633,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanWithHeadersAndBodyInject2Test.java,50,,"        Exchange out = template.send(""direct:in"", new Processor() {"
35634,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanWithHeadersAndBodyInject2Test.java,56,,"                in.setHeader(""users"", users); // add users hashmap"
35635,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanWithHeadersAndBodyInject2Test.java,57,,"                in.setBody(""TheBody"");"
35636,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanWithHeadersAndBodyInject3Test.java,47,,"        end.expectedBodiesReceived(""Hello!"");"
35637,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanWithInputStreamBodyTest.java,47,,"                from(""direct:start"").bean(MyCoolBean.class).to(""mock:result"");"
35638,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanWithInputStreamBodyTest.java,47,,"                from(""direct:start"").bean(MyCoolBean.class).to(""mock:result"");"
35639,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanWithInputStreamBodyTest.java,52,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""There is 11 bytes"");"
35640,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanWithInputStreamBodyTest.java,54,,"        InputStream bais = new ByteArrayInputStream(""Hello World"".getBytes());"
35641,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanWithMethodHeaderTest.java,36,,"        MockEndpoint mock = getMockEndpoint(""mock:result"");"
35642,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanWithMethodHeaderTest.java,39,,"        template.sendBody(""direct:echo"", ""Hello World"");"
35643,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanWithMethodHeaderTest.java,102,,"                    from(""direct:typo"").bean(""myBean"", ""ups"").to(""mock:result"");"
35644,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/BeanWithMethodHeaderTest.java,102,,"                    from(""direct:typo"").bean(""myBean"", ""ups"").to(""mock:result"");"
35645,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/DefaultParameterMappingStrategyTest.java,37,,"        jndi.bind(""foo"", new MyFooBean());"
35646,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/DefaultParameterMappingStrategyTest.java,43,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Exchange"");"
35647,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/DefaultParameterMappingStrategyTest.java,44,,"        template.sendBody(""direct:a"", ""Hello"");"
35648,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/ExpressionAnnotationToDisambiguateMethodsTest.java,39,,"        template.sendBodyAndHeader(""direct:in"", ""<hello>world!</hello>"", ""foo"", ""bar"");"
35649,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/MethodCallBeanFunctionScopeTest.java,36,,"                        .to(""direct:sub"")"
35650,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/MethodCallBeanTypeFunctionScopeTest.java,36,,"                        .to(""direct:sub"")"
35651,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/MethodCallMissingParenthesisTest.java,39,,"                from(""direct:start"").transform()"
35652,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/MethodCallMissingParenthesisTest.java,41,,"                        .to(""mock:result"");"
35653,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/MyCurrencyBeanTest.java,35,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Currency is $"");"
35654,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/MyServiceProxyTest.java,33,,"        MyService myService = ProxyHelper.createProxy(context.getEndpoint(""direct:start""), MyService.class);"
35655,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/MyServiceProxyTest.java,43,,"            fail(""Should have thrown exception"");"
35656,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/NewInstanceTest.java,46,,"        jndiContext.unbind(""myBean"");"
35657,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/ProxyReturnFutureListTest.java,45,,"        assertEquals(""Claus"", users.get(0));"
35658,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/ProxyReturnFutureListTest.java,46,,"        assertEquals(""Jonathan"", users.get(1));"
35659,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/ProxyReturnFutureTest.java,40,,"        assertEquals(""Four"", reply);"
35660,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/SimpleLanguageBeanFunctionMethodValueWithCommaTest.java,31,,"        getMockEndpoint(""mock:result"").expectedMessageCount(1);"
35661,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/SimpleLanguageBeanFunctionMethodValueWithCommaTest.java,32,,"        getMockEndpoint(""mock:other"").expectedMessageCount(0);"
35662,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/SimpleLanguageBeanFunctionMethodValueWithParenthesisTest.java,31,,"        getMockEndpoint(""mock:result"").expectedMessageCount(1);"
35663,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/SimpleLanguageBeanFunctionMethodValueWithParenthesisTest.java,32,,"        getMockEndpoint(""mock:other"").expectedMessageCount(0);"
35664,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/SimpleLanguageBeanFunctionScopeTest.java,29,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""A"", ""B"");"
35665,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/SimpleLanguageBeanFunctionScopeTest.java,30,,"        getMockEndpoint(""mock:other"").expectedBodiesReceived(""C"");"
35666,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/SimpleLanguageBeanFunctionScopeTest.java,32,,"        template.sendBody(""direct:single"", ""A"");"
35667,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/SimpleLanguageBeanFunctionScopeTest.java,43,,"        template.sendBody(""direct:proto"", ""A"");"
35668,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/SimpleLanguageBeanFunctionScopeTest.java,55,,"        template.sendBody(""direct:request"", ""A"");"
35669,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/SimpleLanguageBeanFunctionScopeTest.java,89,,"                        .to(""direct:sub"")"
35670,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/SimpleLanguageBeanTypeFunctionScopeTest.java,39,,"                        .to(""direct:sub"")"
35671,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/issues/BeanParameterBestTypeMatchIssueTest.java,27,,"        getMockEndpoint(""mock:end"").expectedBodiesReceived(""A"");"
35672,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/issues/BeanParameterBestTypeMatchIssueTest.java,29,,"        template.sendBodyAndHeader(""direct:noParam"", ""body"", ""key"", ""value"");"
35673,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/issues/BeanParameterBestTypeMatchIssueTest.java,29,,"        template.sendBodyAndHeader(""direct:noParam"", ""body"", ""key"", ""value"");"
35674,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/issues/BeanParameterBestTypeMatchIssueTest.java,29,,"        template.sendBodyAndHeader(""direct:noParam"", ""body"", ""key"", ""value"");"
35675,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/issues/BeanParameterBestTypeMatchIssueTest.java,47,,"        template.sendBodyAndHeader(""direct:2Param"", ""body"", ""key"", ""value"");"
35676,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/issues/BeanRouteToDerivedClassTest.java,41,,"                from(""direct:start"").to(""bean:derived?method=process"");"
35677,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/issues/BeanRouteToDerivedClassTest.java,46,,"        template.sendBody(""direct:start"", ""Hello World"");"
35678,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/issues/BeanRouteToDerivedClassTest.java,61,,"                from(""direct:other"").to(""bean:derived"");"
35679,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/issues/BeanRouteToDerivedClassTest.java,71,,"        assertEquals(null, derived.getAndClearBody(), ""Derived class should NOT have been invoked"");"
35680,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/issues/BeanRouteToDerivedClassTest.java,72,,"        assertEquals(""Bye World"", out.toString());"
35681,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/issues/FilterBeanLanguageNonRegistryTest.java,29,,"        template.sendBody(""direct:start"", ""Hello World"");"
35682,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/issues/FilterBeanNonRegistryTest.java,32,,"                from(""direct:start"").filter().method(myBean, ""isGoldCustomer"").to(""mock:result"");"
35683,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/issues/FilterBeanNonRegistryTest.java,32,,"                from(""direct:start"").filter().method(myBean, ""isGoldCustomer"").to(""mock:result"");"
35684,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/issues/FilterBeanNonRegistryTest.java,37,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Camel"");"
35685,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/issues/FilterBeanRegistryTest.java,38,,"                from(""direct:start"").filter().method(""foo"", ""isGoldCustomer"").to(""mock:result"");"
35686,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/issues/FilterBeanRegistryTest.java,38,,"                from(""direct:start"").filter().method(""foo"", ""isGoldCustomer"").to(""mock:result"");"
35687,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/bean/issues/FilterBeanRegistryTest.java,43,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Camel"");"
35688,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/browse/BrowseEndpointTest.java,41,,"                from(""direct:start"").to(be);"
35689,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/controlbus/ControlBusLanguageSimpleStartRouteTest.java,32,,"        assertEquals(""Stopped"", context.getRouteController().getRouteStatus(""foo"").name());"
35690,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/controlbus/ControlBusLanguageSimpleStartRouteTest.java,32,,"        assertEquals(""Stopped"", context.getRouteController().getRouteStatus(""foo"").name());"
35691,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/controlbus/ControlBusLanguageSimpleStartRouteTest.java,39,,"        template.sendBody(""controlbus:language:simple"", ""${camelContext.getRouteController().startRoute('foo')}"");"
35692,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/controlbus/ControlBusStartRouteTest.java,35,,"        assertEquals(""Stopped"", context.getRouteController().getRouteStatus(""foo"").name());"
35693,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/controlbus/ControlBusStartRouteTest.java,35,,"        assertEquals(""Stopped"", context.getRouteController().getRouteStatus(""foo"").name());"
35694,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/controlbus/ControlBusStartRouteTest.java,38,,"        getMockEndpoint(""mock:foo"").expectedBodiesReceived(""Hello World"");"
35695,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/dataset/DataSetEndpointTest.java,38,,"        final DataSetEndpoint endpoint = new DataSetEndpoint(""dataset://foo"", null, new SimpleDataSet(2));"
35696,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/dataset/DataSetEndpointTest.java,49,,"                from(endpoint).to(""direct:foo"");"
35697,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/dataset/DataSetProducerTest.java,179,,"            String expectedErrorString = ""Caught exception on "" + dataSetUriWithDataSetIndexSetToStrict + "" due to:"" + "" No '"""
35698,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/dataset/DataSetProducerTest.java,191,,"        fail(""AssertionError should have been generated"");"
35699,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/dataset/DataSetTestFileSplitTest.java,39,,"                from(""direct:start"").to(""dataset-test:"" + fileUri() + ""?noop=true&split=true&timeout=1000"");"
35700,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/dataset/RoutePerformanceTest.java,45,,"        answer.bind(""foo"", dataSet);"
35701,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/direct/DirectEndpointRouteInlinedTest.java,34,,"                from(""direct:start"").to(""mock:result"");"
35702,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/direct/DirectNoConsumerTest.java,36,,"        context.getComponent(""direct"", DirectComponent.class).setBlock(false);"
35703,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/direct/DirectNoConsumerTest.java,41,,"                from(""direct:start"").to(""direct:foo"");"
35704,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/direct/DirectNoConsumerTest.java,41,,"                from(""direct:start"").to(""direct:foo"");"
35705,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/direct/DirectNoConsumerTest.java,48,,"            template.sendBody(""direct:start"", ""Hello World"");"
35706,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/direct/DirectNoConsumerTest.java,82,,"                from(""direct:start"").to(""direct:foo?failIfNoConsumers=false"");"
35707,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/direct/DirectNoConsumerTest.java,98,,"                from(""direct:start"").wireTap(""direct:foo?failIfNoConsumers=false"").to(""mock:foo"");"
35708,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/direct/DirectNoConsumerTest.java,147,,"                from(""direct:in"").to(""direct:foo"");"
35709,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/direct/TwoCamelContextDirectEndpointTest.java,40,,"                from(""direct:start"").to(""direct:foo"");"
35710,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/direct/TwoCamelContextDirectEndpointTest.java,40,,"                from(""direct:start"").to(""direct:foo"");"
35711,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/directvm/DirectVmHeaderFilterStrategyTest.java,40,,"                return headerName.equals(""Header2"");"
35712,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/directvm/DirectVmHeaderFilterStrategyTest.java,45,,"                return headerName.equals(""Header1"");"
35713,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/directvm/DirectVmNoConsumerTest.java,38,,"        context.getComponent(""direct-vm"", DirectVmComponent.class).setBlock(false);"
35714,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/directvm/DirectVmNoConsumerTest.java,43,,"                from(""direct-vm:start"").to(""direct-vm:foo"");"
35715,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/directvm/DirectVmNoConsumerTest.java,43,,"                from(""direct-vm:start"").to(""direct-vm:foo"");"
35716,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/directvm/DirectVmNoConsumerTest.java,50,,"            template.sendBody(""direct-vm:start"", ""Hello World"");"
35717,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/directvm/DirectVmNoConsumerTest.java,104,,"                from(""direct-vm:foo"").routeId(""stopThisRoute"").to(""mock:foo"");"
35718,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/directvm/DirectVmNoConsumerTest.java,133,,"                from(""direct-vm:in"").to(""direct-vm:foo"");"
35719,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/directvm/DirectVmNoPropertyPropagationTest.java,45,,"                from(""direct-vm:start.noprops"").setProperty(""abc"", constant(""def""))"
35720,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/directvm/DirectVmNoPropertyPropagationTest.java,45,,"                from(""direct-vm:start.noprops"").setProperty(""abc"", constant(""def""))"
35721,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/directvm/DirectVmProducerBlockingTest.java,38,,"        DirectVmEndpoint endpoint = getMandatoryEndpoint(""direct-vm:suspended"", DirectVmEndpoint.class);"
35722,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/directvm/DirectVmProducerBlockingTest.java,43,,"            template.sendBody(""direct-vm:suspended?block=true&timeout=500&failIfNoConsumers=false"", ""hello world"");"
35723,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/directvm/DirectVmTwoCamelContextTest.java,31,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Bye World"");"
35724,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/AntPathMatcherGenericFileFilterTest.java,47,,"        mock.expectedBodiesReceivedInAnyOrder(""Hello World"");"
35725,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/AntPathMatcherGenericFileFilterTest.java,51,,"        template.sendBodyAndHeader(endpointUri, ""Hello World 2"", Exchange.FILE_NAME, ""b.TXT"");"
35726,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/AntPathMatcherGenericFileFilterTest.java,59,,"        mock.expectedBodiesReceivedInAnyOrder(""Hello World 2"", ""Hello World 3"", ""Hello World 4"");"
35727,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/AntPathMatcherGenericFileFilterTest.java,59,,"        mock.expectedBodiesReceivedInAnyOrder(""Hello World 2"", ""Hello World 3"", ""Hello World 4"");"
35728,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/AntPathMatcherGenericFileFilterTest.java,62,,"        template.sendBodyAndHeader(endpointUri, ""Hello World 1"", Exchange.FILE_NAME, ""report.bak"");"
35729,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/AntPathMatcherGenericFileFilterTest.java,78,,"        template.sendBodyAndHeader(endpointUri, ""Hello World 3"", Exchange.FILE_NAME, ""b.txt"");"
35730,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileAbsoluteAndRelativeConsumerTest.java,34,,"        mock.message(0).header(Exchange.FILE_NAME).isEqualTo(""test"" + File.separator + ""hello.txt"");"
35731,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileBrowsableEndpointTest.java,50,,"        template.sendBodyAndHeader(fileUri(), ""A"", Exchange.FILE_NAME, ""a.txt"");"
35732,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileBrowsableEndpointTest.java,74,,"        template.sendBodyAndHeader(fileUri(), ""B"", Exchange.FILE_NAME, ""b.txt"");"
35733,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileConfigureTest.java,68,,"        assertNotNull(endpoint, ""Could not find file endpoint"");"
35734,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileConfigureTest.java,69,,"        assertTrue(endpoint.isStartingDirectoryMustExist(), ""Get a wrong option of StartingDirectoryMustExist"");"
35735,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileConsumeAlterFileNameHeaderIssueTest.java,47,,"                        .removeHeaders(""*"").to(""mock:result"");"
35736,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileConsumeAlterFileNameHeaderIssueTest.java,53,,"        mock.expectedBodiesReceived(""Hello World"");"
35737,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileConsumeAlterFileNameHeaderIssueTest.java,55,,"        template.sendBodyAndHeader(fileUri(), ""Hello World"", Exchange.FILE_NAME, ""hello.txt"");"
35738,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileConsumeAlterFileNameHeaderIssueTest.java,75,,"                        .setHeader(Exchange.FILE_NAME, constant(""bye.txt"")).to(""mock:result"");"
35739,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileConsumeDoneFileIssueTest.java,39,,"        template.sendBodyAndHeader(fileUri() + ""/done"", ""A"", Exchange.FILE_NAME, ""foo-a.txt"");"
35740,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileConsumeDoneFileIssueTest.java,46,,"        assertTrue(Files.exists(testFile(""done/foo.done"")), ""Done file should exists"");"
35741,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileConsumeDoneFileIssueTest.java,48,,"        getMockEndpoint(""mock:result"").expectedBodiesReceivedInAnyOrder(""A"", ""B"", ""C"", ""D"", ""E"");"
35742,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileConsumeDoneFileIssueTest.java,58,,"        assertFalse(Files.exists(testFile(""done/foo.done"")), ""Done file should be deleted"");"
35743,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileConsumeDoneFileIssueTest.java,65,,"        template.sendBodyAndHeader(fileUri() + ""/done2"", ""A"", Exchange.FILE_NAME, ""a.txt"");"
35744,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileConsumerAutoCreateDirectoryTest.java,37,,"        Endpoint endpoint = context.getEndpoint(fileUri(""foo""));"
35745,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileConsumerFileExpressionTest.java,40,,"        template.sendBodyAndHeader(fileUri(""bean""), ""Hello World"", Exchange.FILE_NAME, ""122.txt"");"
35746,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileConsumerFileExpressionTest.java,41,,"        template.sendBodyAndHeader(fileUri(""bean""), ""Goodday World"", Exchange.FILE_NAME, ""123.txt"");"
35747,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileConsumerFileExpressionTest.java,48,,"                             + ""?initialDelay=0&delay=10&fileName=${bean:counter.next}.txt&delete=true"")).to(""mock:result"");"
35748,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileConsumerFileExpressionTest.java,62,,"        template.sendBodyAndHeader(fileUri(""date""), ""Bye World"", Exchange.FILE_NAME,"
35749,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileConsumerMoveExpressionTest.java,54,,"                        .convertBodyTo(String.class).to(""mock:result"");"
35750,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileConsumerMoveFailureOnCompletionTest.java,32,,"        mock.expectedFileExists(testFile(""error/bye-error.txt""), ""Kabom"");"
35751,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileContentBasedRouterTest.java,27,,"        template.sendBodyAndHeader(fileUri(), ""Hello London"", ""CamelFileName"", ""london.txt"");"
35752,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileEagerDeleteTargetFileTest.java,36,,"        template.sendBodyAndHeader(fileUri(), ""Hello World"", Exchange.FILE_NAME, ""world.txt"");"
35753,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileEagerDeleteTargetFileTest.java,43,,"                ""Bye World"","
35754,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileKeepLastModifiedTest.java,36,,"                        .to(fileUri(""out?keepLastModified=true""), ""mock:result"");"
35755,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileLanguageCBRTest.java,28,,"        getMockEndpoint(""mock:txt"").expectedMessageCount(1);"
35756,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileLanguageCBRTest.java,29,,"        getMockEndpoint(""mock:dat"").expectedMessageCount(0);"
35757,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileLanguageCBRTest.java,30,,"        getMockEndpoint(""mock:other"").expectedMessageCount(0);"
35758,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileMarkerFileRecursiveDeleteOldLockFilesTest.java,38,,"        template.sendBodyAndHeader(fileUri(""foo""), ""locked"", Exchange.FILE_NAME,"
35759,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileMarkerFileRecursiveDoNotDeleteOldLockFilesTest.java,35,,"        template.sendBodyAndHeader(fileUri(""foo""), ""locked"", Exchange.FILE_NAME,"
35760,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileMarkerFileRecursiveFilterDeleteOldLockFilesIncludeTest.java,40,,"        template.sendBodyAndHeader(fileUri(""foo""), ""locked"", Exchange.FILE_NAME,"
35761,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileMarkerFileRecursiveFilterDeleteOldLockFilesTest.java,50,,"        template.sendBodyAndHeader(fileUri(""foo""), ""locked"", Exchange.FILE_NAME,"
35762,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileMoveAndMoveFailedIssueTest.java,28,,"        getMockEndpoint(""mock:result"").expectedMessageCount(1);"
35763,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileNoOpLockFileTest.java,39,,"        MockEndpoint mock = getMockEndpoint(""mock:report"");"
35764,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileNoOpLockFileTest.java,42,,"        template.sendBodyAndHeader(fileUri(""locked""), ""Hello Locked"", Exchange.FILE_NAME, ""report.txt"");"
35765,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileProduceAppendCharsTest.java,36,,"        template.sendBody(""direct:start"", ""Hello"");"
35766,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileProduceOverruleExpressionTest.java,37,,"        mock.expectedHeaderReceived(Exchange.FILE_NAME, ""hello.txt"");"
35767,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileProduceOverruleExpressionTest.java,38,,"        mock.expectedFileExists(testFile(""copy-of-hello.txt""), ""Hello World"");"
35768,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileProduceOverruleTest.java,35,,"        MockEndpoint mock = getMockEndpoint(""mock:result"");"
35769,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileProduceOverruleTest.java,37,,"        mock.expectedHeaderReceived(Exchange.FILE_NAME, ""hello.txt"");"
35770,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileProduceOverruleTest.java,38,,"        mock.expectedFileExists(testFile(""hello.txt""), ""Hello World"");"
35771,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileProduceOverruleTest.java,40,,"        template.sendBodyAndHeader(""direct:start"", ""Hello World"", Exchange.FILE_NAME, ""hello.txt"");"
35772,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileProduceTempFileNameTest.java,39,,"        exchange.getIn().setHeader(Exchange.FILE_NAME, ""claus.txt"");"
35773,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileProducerAllowNullBodyFileAlreadyExistsTest.java,33,,"        template.sendBodyAndHeader(fileUri(), ""Hello world"", Exchange.FILE_NAME, ""hello.txt"");"
35774,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileProducerChmodOptionTest.java,44,,"        assumeFalse(isPlatform(""windows""));"
35775,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileProducerExpressionTest.java,46,,"        template.sendBodyAndHeader(fileUri(), ""Hello World"", Exchange.FILE_NAME,"
35776,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileProducerFileExistFailTest.java,36,,"        mock.expectedFileExists(testFile(""hello.txt""), ""Hello World"");"
35777,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileProducerMoveExistingStrategyTest.java,49,,"                ""Hello World"", Exchange.FILE_NAME, ""hello.txt"");"
35778,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileProducerMoveExistingTest.java,43,,"                fileUri(""?fileExist=Move&moveExisting=${file:parent}/renamed-${file:onlyname}""), ""Hello World"","
35779,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileProducerMoveExistingTest.java,44,,"                Exchange.FILE_NAME, ""hello.txt"");"
35780,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileProducerMoveExistingTest.java,47,,"        assertFileNotExists(testFile(""renamed-hello.txt""));"
35781,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileProducerMoveExistingTest.java,56,,"                fileUri(""?fileExist=Move&moveExisting=${file:parent}/renamed-${file:onlyname}""), ""Bye World"","
35782,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileProducerNoForcedWritesTest.java,32,,"        mock.expectedBodiesReceived(""Hello World"");"
35783,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileProducerTempFileExistsIssueTest.java,46,,"        template.sendBodyAndHeader(fileUri(), ""Hello World"", Exchange.FILE_NAME, ""hello.txt"");"
35784,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileProducerTempFileExistsIssueTest.java,46,,"        template.sendBodyAndHeader(fileUri(), ""Hello World"", Exchange.FILE_NAME, ""hello.txt"");"
35785,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileProducerTempFileExistsIssueTest.java,47,,"        template.sendBodyAndHeader(fileUri(""?tempPrefix=foo""), ""Bye World"", Exchange.FILE_NAME, ""hello.txt"");"
35786,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileRecursiveDepthTest.java,29,,"        MockEndpoint mock = getMockEndpoint(""mock:result"");"
35787,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileRecursiveDepthTest.java,32,,"        template.sendBodyAndHeader(fileUri(""depth""), ""a"", Exchange.FILE_NAME, ""a.txt"");"
35788,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileRecursiveDepthTest.java,33,,"        template.sendBodyAndHeader(fileUri(""depth""), ""b"", Exchange.FILE_NAME, ""b.txt"");"
35789,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileRouteOnDosWithNoVolTest.java,51,,"        MockEndpoint mock = getMockEndpoint(""mock:result"");"
35790,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileRouteOnDosWithNoVolTest.java,55,,"        template.sendBodyAndHeader(""file://"" + path + ""/route/poller"", ""Hello World"", Exchange.FILE_NAME, ""hello.txt"");"
35791,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileSortByIgnoreCaseExpressionTest.java,31,,"        template.sendBodyAndHeader(fileUri(folder), ""Hello Paris"", Exchange.FILE_NAME, ""report-3.dat"");"
35792,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileSortByIgnoreCaseExpressionTest.java,33,,"        template.sendBodyAndHeader(fileUri(folder), ""Hello London"", Exchange.FILE_NAME, ""REPORT-2.txt"");"
35793,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileSortByIgnoreCaseExpressionTest.java,35,,"        template.sendBodyAndHeader(fileUri(folder), ""Hello Copenhagen"", Exchange.FILE_NAME,"
35794,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileSplitXPathCharsetTest.java,35,,"        MockEndpoint out = getMockEndpoint(""mock:result"");"
35795,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileToFileWithFlattenTest.java,51,,"                        .to(fileUri(""flatten-out""), ""mock:result"");"
35796,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FileURLDecodingTest.java,47,,"        assertTargetFile(""data .txt"", ""data .txt"");"
35797,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FilerConsumerDoneFileNoopTest.java,31,,"        getMockEndpoint(""mock:result"").expectedMessageCount(0);"
35798,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FilerConsumerDualDoneFileNameTest.java,31,,"        getMockEndpoint(""mock:result"").expectedBodiesReceivedInAnyOrder(""Hello World"", ""Bye World"");"
35799,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FilerProducerDoneFileNameTest.java,55,,"        template.sendBodyAndHeader(fileUri(""?doneFileName=done""), ""Hello World"", Exchange.FILE_NAME, ""hello.txt"");"
35800,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FilerProducerDoneFileNameTest.java,55,,"        template.sendBodyAndHeader(fileUri(""?doneFileName=done""), ""Hello World"", Exchange.FILE_NAME, ""hello.txt"");"
35801,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FromFileMulticastToFilesTest.java,34,,"                        .to(fileUri(""out/?fileName=header.txt"")).to(""mock:header"").end().pipeline()"
35802,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FromFileMulticastToFilesTest.java,36,,"                        .to(fileUri(""out/?fileName=footer.txt"")).to(""mock:footer"").end().end()"
35803,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/FromFileMulticastToFilesTest.java,37,,"                        .to(""mock:end"");"
35804,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/GenericFileConverterTest.java,43,,"                from(fileUri(""?initialDelay=0&delay=10"")).convertBodyTo(File.class).to(""mock:result"");"
35805,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/GenericFileConverterTest.java,43,,"                from(fileUri(""?initialDelay=0&delay=10"")).convertBodyTo(File.class).to(""mock:result"");"
35806,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/GenericFileConverterTest.java,52,,"        template.sendBodyAndHeader(fileUri(), ""Hello World"", Exchange.FILE_NAME, ""hello.txt"");"
35807,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/GenericFileConverterTest.java,52,,"        template.sendBodyAndHeader(fileUri(), ""Hello World"", Exchange.FILE_NAME, ""hello.txt"");"
35808,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/strategy/MarkerFileExclusiveReadLockStrategyTest.java,59,,"            assertEquals(""Line "" + i, lines[i]);"
35809,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/file/stress/FileProducerAppendManyMessagesFastTest.java,72,,"                        exchange.setProperty(""myStream"", fos);"
35810,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/log/DefaultExchangeFormatterTest.java,39,,"        template.sendBody(""log:org.apache.camel.TEST"", ""Hello World"");"
35811,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/log/LogComponentOptionsTest.java,42,,"        LogComponent log = context.getComponent(""log"", LogComponent.class);"
35812,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/log/LogComponentOptionsTest.java,47,,"                .withProperty(""exchangeFormatter"", myFormatter).bind();"
35813,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/log/LogCustomFormatterTest.java,53,,"        String endpointUri = ""log:"" + LogCustomFormatterTest.class.getCanonicalName();"
35814,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/log/LogCustomFormatterTest.java,54,,"        template.requestBody(endpointUri, ""Hello World"");"
35815,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/log/LogCustomLoggerTest.java,52,,"        ConsumingAppender.newAppender(""provided.logger1.name"", ""logger1"", Level.TRACE,"
35816,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/log/LogCustomLoggerTest.java,52,,"        ConsumingAppender.newAppender(""provided.logger1.name"", ""logger1"", Level.TRACE,"
35817,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/log/LogCustomLoggerTest.java,54,,"        ConsumingAppender.newAppender(""provided.logger2.name"", ""logger2"", Level.TRACE,"
35818,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/log/LogCustomLoggerTest.java,65,,"        template.requestBody(endpointUri, ""hello"");"
35819,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/log/LogEndpointTest.java,70,,"        MockEndpoint mock = getMockEndpoint(""mock:result"");"
35820,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/log/LogInputStreamTest.java,32,,"        mock.expectedBodiesReceived(""Hello World"");"
35821,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/log/LogMaskTest.java,45,,"        template.sendBodyAndHeader(""log:mask?showHeaders=true"", ""password=passw0rd@"", ""headerPassword"", ""#header-password$"");"
35822,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/log/ThroughputLoggerTest.java,35,,"                from(""seda:in"").to(""log:hello?groupSize=2"").delay(100).to(""mock:result"");"
35823,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/log/ThroughputLoggerTest.java,35,,"                from(""seda:in"").to(""log:hello?groupSize=2"").delay(100).to(""mock:result"");"
35824,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockAsBeanTest.java,35,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Bye World"");"
35825,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockAsBeanTest.java,46,,"        template.sendBody(""direct:start"", ""World"");"
35826,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockAssertionClauseTest.java,30,,"        template.sendBody(""direct:start"", ""<person name='James' last='Hanson'/>"");"
35827,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockEndpointTest.java,44,,"        MockEndpoint resultEndpoint = getMockEndpoint(""mock:result"");"
35828,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockEndpointTest.java,45,,"        resultEndpoint.expectsAscending(header(""counter"").convertTo(Number.class));"
35829,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockEndpointTest.java,141,,"        resultEndpoint.expectedPropertyValuesReceivedInAnyOrder(""foo"", 123, 456);"
35830,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockEndpointTest.java,143,,"        template.send(""direct:a"", new Processor() {"
35831,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockEndpointTest.java,249,,"        resultEndpoint.expectedHeaderReceived(""header"", ""value"");"
35832,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockEndpointTest.java,249,,"        resultEndpoint.expectedHeaderReceived(""header"", ""value"");"
35833,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockEndpointTest.java,280,,"        resultEndpoint.expectedHeaderReceived(""number"", 123);"
35834,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockEndpointTest.java,370,,"        mock.expectedBodyReceived().constant(""<message>1</message>"");"
35835,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockEndpointTest.java,388,,"        mock.expectedBodyReceived().constant(""<message>2</message>"");"
35836,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockEndpointTest.java,399,,"                exchange.setException(new IllegalArgumentException(""Forced""));"
35837,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockEndpointTest.java,404,,"            template.sendBody(""direct:a"", ""Hello World"");"
35838,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockEndpointTest.java,405,,"            fail(""Should have thrown an exception"");"
35839,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockEndpointTest.java,462,,"            template.sendBody(""direct:a"", ""Bye World"");"
35840,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockEndpointTest.java,569,,"        mock.expectedHeaderReceived(""bar"", ""cheese"");"
35841,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockEndpointTest.java,569,,"        mock.expectedHeaderReceived(""bar"", ""cheese"");"
35842,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockEndpointTest.java,575,,"            fail(""Should have thrown exception"");"
35843,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockEndpointTest.java,604,,"        template.sendBodyAndHeader(""direct:a"", ""Hello World"", ""bar"", ""beer"");"
35844,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockEndpointTest.java,926,,"        map.put(""bar"", ""wine"");"
35845,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockEndpointTest.java,1128,,"        assertEquals(""<message>0</message>"", mock.getReceivedExchanges().get(0).getIn().getBody());"
35846,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockEndpointTest.java,1131,,"        assertEquals(""<message>3</message>"", mock.getReceivedExchanges().get(3).getIn().getBody());"
35847,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockEndpointTest.java,1132,,"        assertEquals(""<message>4</message>"", mock.getReceivedExchanges().get(4).getIn().getBody());"
35848,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockEndpointTest.java,1150,,"        assertEquals(""<message>6</message>"", mock.getReceivedExchanges().get(1).getIn().getBody());"
35849,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockEndpointTest.java,1151,,"        assertEquals(""<message>7</message>"", mock.getReceivedExchanges().get(2).getIn().getBody());"
35850,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockEndpointTimeClauseTest.java,38,,"        MockEndpoint mock = getMockEndpoint(""mock:result"");"
35851,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockEndpointTimeClauseTest.java,43,,"        template.sendBody(""direct:a"", ""A"");"
35852,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockExpectedBodiesAsListTest.java,30,,"        MockEndpoint result = getMockEndpoint(""mock:result"");"
35853,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockExpectedBodiesAsListTest.java,31,,"        result.expectedBodiesReceived(""Hello World"", ""Bye World"");"
35854,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockExpectedBodiesAsListTest.java,31,,"        result.expectedBodiesReceived(""Hello World"", ""Bye World"");"
35855,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockExpectedBodiesAsListTest.java,33,,"        template.sendBody(""direct:start"", ""Hello World"");"
35856,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockLogTest.java,30,,"        template.sendBody(""direct:start"", ""Hello World"");"
35857,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockPredicateTest.java,29,,"        mock.message(0).predicate().header(""foo"");"
35858,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/mock/MockStreamCachingTest.java,29,,"        getMockEndpoint(""mock:result"").expectedMessageCount(1);"
35859,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/OptionalPropertyPlaceholderEipTest.java,38,,"                from(""direct:start"")"
35860,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/OptionalPropertyPlaceholderEipTest.java,40,,"                        .to(""mock:line"");"
35861,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/OptionalPropertyPlaceholderTest.java,40,,"                from(""direct:start"")"
35862,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/OptionalPropertyPlaceholderTest.java,46,,"        getMockEndpoint(""mock:result"").expectedMessageCount(2);"
35863,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/OptionalPropertyPlaceholderTest.java,48,,"        template.sendBody(""direct:start"", ""Hello World"");"
35864,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/OptionalPropertyPlaceholderTest.java,49,,"        template.sendBody(""direct:start"", ""Bye World"");"
35865,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/OptionalPropertyPlaceholderTest.java,71,,"        getMockEndpoint(""mock:result?retainFirst=1"").expectedMessageCount(2);"
35866,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/PropertiesComponentConcatenatePropertiesTest.java,57,,"                from(""direct:start"").setBody(simple(""{{concat.property}}"")).to(""mock:result"");"
35867,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/PropertiesComponentConcatenatePropertiesTest.java,57,,"                from(""direct:start"").setBody(simple(""{{concat.property}}"")).to(""mock:result"");"
35868,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/PropertiesComponentDefaultFunctionsTest.java,46,,"        System.setProperty(""FOO"", ""mock:foo"");"
35869,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/PropertiesComponentDefaultFunctionsTest.java,52,,"                from(""direct:start"").to(""{{sys:FOO}}"").transform().constant(""{{env:"" + env.getKey() + ""}}"").to(""mock:bar"");"
35870,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/PropertiesComponentEIPChoiceSimpleTest.java,31,,"        template.sendBody(""direct:start"", context.resolvePropertyPlaceholders(""Hello {{cool.name}}""));"
35871,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/PropertiesComponentOnlyUseDefaultValuesTest.java,37,,"                from(""direct:start"").to(""{{foo:mock:foo}}"").to(""{{bar:mock:bar}}"");"
35872,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/PropertiesComponentPropertiesSourceTest.java,36,,"        context.getRegistry().bind(""my-ps-1"", new PropertiesPropertiesSource(""ps1"", ""my-key-1"", ""my-val-1""));"
35873,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/PropertiesComponentPropertiesSourceTest.java,36,,"        context.getRegistry().bind(""my-ps-1"", new PropertiesPropertiesSource(""ps1"", ""my-key-1"", ""my-val-1""));"
35874,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/PropertiesComponentPropertiesSourceTest.java,36,,"        context.getRegistry().bind(""my-ps-1"", new PropertiesPropertiesSource(""ps1"", ""my-key-1"", ""my-val-1""));"
35875,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/PropertiesComponentPropertiesSourceTest.java,36,,"        context.getRegistry().bind(""my-ps-1"", new PropertiesPropertiesSource(""ps1"", ""my-key-1"", ""my-val-1""));"
35876,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/PropertiesComponentPropertiesSourceTest.java,37,,"        context.getRegistry().bind(""my-ps-2"", new PropertiesPropertiesSource(""ps2"", ""my-key-2"", ""my-val-2""));"
35877,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/PropertiesComponentPropertiesSourceTest.java,37,,"        context.getRegistry().bind(""my-ps-2"", new PropertiesPropertiesSource(""ps2"", ""my-key-2"", ""my-val-2""));"
35878,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/PropertiesComponentPropertiesSourceTest.java,37,,"        context.getRegistry().bind(""my-ps-2"", new PropertiesPropertiesSource(""ps2"", ""my-key-2"", ""my-val-2""));"
35879,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/PropertiesComponentPropertiesSourceTest.java,37,,"        context.getRegistry().bind(""my-ps-2"", new PropertiesPropertiesSource(""ps2"", ""my-key-2"", ""my-val-2""));"
35880,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/PropertiesComponentPropertiesSourceTest.java,47,,"                new PropertiesPropertiesSource(Ordered.HIGHEST, ""ps1"", ""shared"", ""v1"", ""my-key-1"", ""my-val-1""));"
35881,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/PropertiesComponentPropertiesSourceTest.java,72,,"        initial.put(""initial-2"", ""initial-val-2"");"
35882,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/PropertiesComponentServiceHostPortTest.java,35,,"                from(""direct:start"").to(""mock:foo"").transform().constant(""{{service.host:FOO}}:{{service.port:FOO}}"")"
35883,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/PropertiesComponentServiceHostPortTest.java,35,,"                from(""direct:start"").to(""mock:foo"").transform().constant(""{{service.host:FOO}}:{{service.port:FOO}}"")"
35884,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/PropertiesComponentServiceHostPortTest.java,36,,"                        .to(""mock:bar"");"
35885,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/PropertiesComponentServiceHostPortTest.java,42,,"        getMockEndpoint(""mock:foo"").expectedBodiesReceived(""Hello World"");"
35886,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/PropertiesComponentServiceHostTest.java,35,,"                from(""direct:start"").to(""mock:foo"").transform().constant(""{{service.host:FOO}}:8888"").to(""mock:bar"");"
35887,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/PropertiesComponentServiceHostTest.java,35,,"                from(""direct:start"").to(""mock:foo"").transform().constant(""{{service.host:FOO}}:8888"").to(""mock:bar"");"
35888,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/PropertiesComponentServiceHostTest.java,35,,"                from(""direct:start"").to(""mock:foo"").transform().constant(""{{service.host:FOO}}:8888"").to(""mock:bar"");"
35889,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/PropertiesComponentServiceHostTest.java,41,,"        getMockEndpoint(""mock:foo"").expectedBodiesReceived(""Hello World"");"
35890,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/PropertiesComponentServicePortTest.java,35,,"                from(""direct:start"").to(""mock:foo"").transform().constant(""someserver:{{service.port:FOO}}"").to(""mock:bar"");"
35891,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/PropertiesComponentServicePortTest.java,35,,"                from(""direct:start"").to(""mock:foo"").transform().constant(""someserver:{{service.port:FOO}}"").to(""mock:bar"");"
35892,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/PropertiesComponentServicePortTest.java,35,,"                from(""direct:start"").to(""mock:foo"").transform().constant(""someserver:{{service.port:FOO}}"").to(""mock:bar"");"
35893,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/PropertiesComponentServicePortTest.java,41,,"        getMockEndpoint(""mock:foo"").expectedBodiesReceived(""Hello World"");"
35894,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/PropertiesComponentServiceTest.java,35,,"                from(""direct:start"").to(""mock:foo"").transform().constant(""{{service:FOO}}"").to(""mock:bar"");"
35895,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/PropertiesComponentServiceTest.java,35,,"                from(""direct:start"").to(""mock:foo"").transform().constant(""{{service:FOO}}"").to(""mock:bar"");"
35896,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/PropertiesComponentServiceTest.java,35,,"                from(""direct:start"").to(""mock:foo"").transform().constant(""{{service:FOO}}"").to(""mock:bar"");"
35897,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/PropertiesComponentServiceTest.java,41,,"        getMockEndpoint(""mock:foo"").expectedBodiesReceived(""Hello World"");"
35898,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/properties/PropertiesRouteFromTest.java,38,,"        ProcessorDefinition out = context.getRouteDefinition(""foo"").getOutputs().get(0);"
35899,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/rest/FromRestDefaultValueTest.java,36,,"        getMockEndpoint(""mock:bye"").expectedBodiesReceived(""Hello World"");"
35900,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/rest/FromRestDefaultValueTest.java,36,,"        getMockEndpoint(""mock:bye"").expectedBodiesReceived(""Hello World"");"
35901,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/rest/FromRestDefaultValueTest.java,37,,"        getMockEndpoint(""mock:bye"").expectedHeaderReceived(""kind"", ""customer"");"
35902,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/rest/FromRestDefaultValueTest.java,41,,"        template.sendBody(""seda:get-say-bye"", ""Hello World"");"
35903,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/rest/FromRestDefaultValueTest.java,49,,"        getMockEndpoint(""mock:bye"").expectedHeaderReceived(""indicator"", ""disabled"");"
35904,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/rest/FromRestDefaultValueTest.java,60,,"        getMockEndpoint(""mock:bye"").expectedBodiesReceived(""Bye World"");"
35905,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/rest/FromRestDuplicateTest.java,49,,"                    rest(""/users"").get(""{id}"").to(""log:foo"").post().to(""log:foo"").get("""").to(""log:foo"").get(""{id}"")"
35906,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/rest/FromRestGetPlaceholderParamTest.java,46,,"        assertEquals(""items/"", rest.getPath());"
35907,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/rest/FromRestGetPlaceholderParamTest.java,49,,"        assertEquals(""direct:hello"", to.getUri());"
35908,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/rest/FromRestGetTest.java,71,,"        assertEquals(""integer"", rest.getVerbs().get(0).getParams().get(0).getDataType());"
35909,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/rest/RestComponentTest.java,38,,"        context.getRegistry().bind(""host-ref"", ""http://localhost:8080"");"
35910,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/rest/RestEndpointTest.java,70,,"        restEndpoint.setHost(""http://localhost"");"
35911,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/rest/RestEndpointTest.java,72,,"        restEndpoint.setBindingMode(""json"");"
35912,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/saga/SagaComponentTest.java,35,,"        MockEndpoint completed = getMockEndpoint(""mock:completed"");"
35913,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/saga/SagaComponentTest.java,38,,"        template.sendBody(""direct:manual-workflow"", ""manual-complete"");"
35914,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/saga/SagaComponentTest.java,60,,"        MockEndpoint compensated = getMockEndpoint(""mock:compensated"");"
35915,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SameSedaQueueMultipleConsumersDifferenceTest.java,31,,"        getMockEndpoint(""mock:foo"").expectedBodiesReceived(""Hello World"");"
35916,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SameSedaQueueSizeAndNoSizeTest.java,41,,"            fail(""Should fail"");"
35917,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SedaConcurrentConsumersNPEIssueTest.java,32,,"        MockEndpoint mock = getMockEndpoint(""mock:result"");"
35918,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SedaConcurrentConsumersNPEIssueTest.java,33,,"        mock.expectedBodiesReceived(""Hello World"");"
35919,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SedaConcurrentTest.java,40,,"        MockEndpoint mock = getMockEndpoint(""mock:result"");"
35920,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SedaConcurrentTest.java,47,,"            template.sendBody(""seda:foo"", ""Message "" + i);"
35921,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SedaConsumerSuspendResumeTest.java,40,,"        template.sendBody(""seda:foo"", ""A"");"
35922,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SedaDefaultDiscardWhenFullTest.java,31,,"        template.sendBody(""seda:foo"", ""Hello World"");"
35923,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SedaDefaultUnboundedQueueSizeTest.java,29,,"        SedaEndpoint seda = context.getEndpoint(""seda:foo"", SedaEndpoint.class);"
35924,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SedaDiscardIfNoConsumerTest.java,36,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Hello World"");"
35925,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SedaDiscardWhenFullTest.java,31,,"        template.sendBody(""seda:foo?discardWhenFull=true"", ""Hello World"");"
35926,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SedaEndpointTest.java,39,,"        SedaEndpoint seda = new SedaEndpoint(""seda://foo"", context.getComponent(""seda""), unbounded);"
35927,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SedaEndpointTest.java,39,,"        SedaEndpoint seda = new SedaEndpoint(""seda://foo"", context.getComponent(""seda""), unbounded);"
35928,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SedaMultipleConsumersTest.java,27,,"        getMockEndpoint(""mock:a"").expectedBodiesReceivedInAnyOrder(""Hello World"", ""Bye World"");"
35929,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SedaMultipleConsumersTest.java,27,,"        getMockEndpoint(""mock:a"").expectedBodiesReceivedInAnyOrder(""Hello World"", ""Bye World"");"
35930,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SedaMultipleConsumersTest.java,27,,"        getMockEndpoint(""mock:a"").expectedBodiesReceivedInAnyOrder(""Hello World"", ""Bye World"");"
35931,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SedaMultipleConsumersTest.java,28,,"        getMockEndpoint(""mock:b"").expectedBodiesReceivedInAnyOrder(""Hello World"", ""Bye World"");"
35932,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SedaMultipleConsumersTest.java,30,,"        template.sendBody(""seda:foo"", ""Hello World"");"
35933,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SedaMultipleConsumersTest.java,31,,"        template.sendBody(""seda:bar"", ""Bye World"");"
35934,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SedaMultipleConsumersTest.java,40,,"        getMockEndpoint(""mock:c"").expectedMessageCount(0);"
35935,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SedaMultipleConsumersTest.java,50,,"                from(""seda:foo?multipleConsumers=true"").id(""testRoute"").to(""mock:c"");"
35936,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SedaNoConsumerTest.java,42,,"                from(""direct:start"").to(""seda:foo?timeout=1000"");"
35937,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SedaNoConsumerTest.java,50,,"        template.sendBody(""direct:start"", ""Hello World"");"
35938,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SedaNoConsumerTest.java,78,,"                from(""direct:start"").to(""seda:foo?failIfNoConsumers=true"");"
35939,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SedaNoConsumerTest.java,98,,"                from(""seda:foo?failIfNoConsumers=true&multipleConsumers=true"").to(""mock:foo"");"
35940,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SedaQueueTest.java,33,,"        MockEndpoint mock = getMockEndpoint(""mock:result"");"
35941,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SedaQueueTest.java,34,,"        mock.expectedBodiesReceivedInAnyOrder(""Hello World"", ""Bye World"", ""Goodday World"", ""Bar"");"
35942,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SedaRouteTest.java,62,,"                from(""seda:test.a"").to(""seda:test.b"");"
35943,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SedaRouteTest.java,62,,"                from(""seda:test.a"").to(""seda:test.b"");"
35944,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SedaSimpleSizeTest.java,29,,"        template.sendBody(""direct:start"", """");"
35945,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SedaSimpleSizeTest.java,30,,"        template.sendBody(""seda:foo"", ""A"");"
35946,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SedaWaitForTaskAsPropertyTest.java,33,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Bye World"");"
35947,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SedaWaitForTaskCompleteTest.java,32,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Bye World"");"
35948,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SedaWaitForTaskIfReplyExpectedTest.java,32,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Bye World"");"
35949,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SedaWaitForTaskNewerTest.java,34,,"        String out = template.requestBody(""direct:start"", ""Hello World"", String.class);"
35950,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/seda/SedaWireTapOnCompleteTest.java,27,,"        getMockEndpoint(""mock:done"").expectedHeaderValuesReceivedInAnyOrder(""foo"", ""123"", ""456"");"
35951,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/stub/StubConsumerTest.java,33,,"                from(""direct:InOnly"").setExchangePattern(ExchangePattern.InOnly).to(""stub:foo"").to(""mock:result"");"
35952,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/stub/StubTest.java,33,,"                from(""direct:InOnly"").setExchangePattern(ExchangePattern.InOnly).to(""stub:foo"").to(""mock:result"");"
35953,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/timer/TimerEndpointTest.java,49,,"                from(te).to(""mock:result"");"
35954,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/timer/TimerWithTimeOptionTest.java,47,,"                fromF(""timer://foo?delay=0&period=10&time=%s"", time).to(""mock:result"");"
35955,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/validator/ValidatorIncludeRouteTest.java,41,,"                      + ""  <p:firstName>James</p:firstName>\n"""
35956,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/validator/ValidatorIncludeRouteTest.java,42,,"                      + ""  <p:lastName>Strachan</p:lastName>\n"" + ""  <p:city>London</p:city>\n"" + ""  <h:health>\n"""
35957,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/validator/ValidatorIncludeRouteTest.java,44,,"                      + ""      <h:status>OK</h:status>\n"" + ""  </h:health>\n"" + ""</p:person>"";"
35958,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/validator/ValidatorIncludeRouteTest.java,46,,"        template.sendBody(""direct:start"", body);"
35959,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/validator/ValidatorLazyStartProducerTest.java,31,,"        getMockEndpoint(""mock:result"").expectedMessageCount(0);"
35960,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/validator/ValidatorRouteTest.java,48,,"        template.sendBody(""direct:start"","
35961,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/validator/ValidatorRouteTest.java,49,,"                ""<mail xmlns='http://foo.com/bar'><subject>Hey</subject><body>Hello world!</body></mail>"");"
35962,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/validator/ValidatorRouteTest.java,59,,"        template.sendBodyAndHeader(""direct:startHeaders"", null, ""headerToValidate"","
35963,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/validator/ValidatorRouteTest.java,59,,"        template.sendBodyAndHeader(""direct:startHeaders"", null, ""headerToValidate"","
35964,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/validator/ValidatorRouteTest.java,70,,"        template.sendBody(""direct:start"", ""<mail xmlns='http://foo.com/bar'><body>Hello world!</body></mail>"");"
35965,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/validator/ValidatorRouteTest.java,179,,"        validEndpoint = resolveMandatoryEndpoint(""mock:valid"", MockEndpoint.class);"
35966,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/vm/SameVmQueueSizeAndNoSizeTest.java,44,,"            fail(""Should fail"");"
35967,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/vm/VmMultipleConsumersIssueTest.java,30,,"        getMockEndpoint(""mock:a"").expectedBodiesReceived(""Hello World"");"
35968,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/vm/VmMultipleConsumersMultipleContextTest.java,36,,"                from(""vm:producer?multipleConsumers=true"").routeId(""route1"").to(""mock:route1"");"
35969,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/vm/VmMultipleConsumersMultipleContextTest.java,36,,"                from(""vm:producer?multipleConsumers=true"").routeId(""route1"").to(""mock:route1"");"
35970,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/vm/VmMultipleConsumersMultipleContextTest.java,43,,"                from(""vm:producer?multipleConsumers=true"").routeId(""route2"").to(""mock:route2"");"
35971,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/vm/VmWaitForTaskCompleteTest.java,31,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Bye World"");"
35972,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/vm/VmWaitForTaskIfReplyExpectedTest.java,32,,"        getMockEndpoint(""mock:result"").expectedBodiesReceived(""Bye World"");"
35973,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/component/vm/VmWaitForTaskNewerTest.java,34,,"        String out = template2.requestBody(""direct:start"", ""Hello World"", String.class);"
35974,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/converter/CamelConverterTest.java,37,,"        Expression exp = ExpressionBuilder.headerExpression(""foo"");"
35975,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/converter/CamelConverterTest.java,40,,"        exchange.getIn().setHeader(""foo"", ""bar"");"
35976,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/converter/CollectionConverterTest.java,78,,"        map.put(""foo"", ""bar"");"
35977,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/converter/CollectionConverterTest.java,78,,"        map.put(""foo"", ""bar"");"
35978,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/converter/ConverterTest.java,67,,"        assertEquals(""1000"", text, ""Converted to String"");"
35979,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/converter/ConverterTest.java,72,,"        byte[] array = converter.convertTo(byte[].class, ""foo"");"
35980,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/converter/ConverterTest.java,207,,"        assertEquals(5, bean.getFoo(), ""converted using exchange"");"
35981,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/converter/DurationConverterTest.java,34,,"        Duration duration = Duration.parse(""PT2H6M20.31S"");"
35982,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/converter/FutureConverterTest.java,35,,"        Future<?> future = template.asyncRequestBody(""direct:foo"", ""Hello World"");"
35983,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/converter/FutureConverterTest.java,35,,"        Future<?> future = template.asyncRequestBody(""direct:foo"", ""Hello World"");"
35984,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/converter/FutureConverterTest.java,38,,"        assertEquals(""Bye World"", out);"
35985,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/converter/IOConverterTest.java,64,,"        assertTrue(s.contains(""Hello World""), ""Should contain Hello World!"");"
35986,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/converter/IOConverterTest.java,77,,"        template.sendBodyAndHeader(fileUri(), ""Hello World"", Exchange.FILE_NAME, ""hello.txt"");"
35987,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/converter/JaxpTest.java,64,,"        assertTrue(text.endsWith(""<hello>world!</hello>""), ""Converted to String: "" + text);"
35988,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/converter/NIOConverterTest.java,34,,"        ByteBuffer bb = ByteBuffer.wrap(""Hello"".getBytes());"
35989,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/converter/ObjectConverterTest.java,33,,"        assertEquals(""Claus"", it.next());"
35990,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/converter/ObjectConverterTest.java,34,,"        assertEquals(""Jonathan"", it.next());"
35991,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/converter/ObjectConverterTest.java,139,,"        assertEquals(""ABC"", ObjectConverter.toString(new StringBuffer(""ABC"")));"
35992,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/converter/StringSourceTest.java,62,,"        assertEquals(expected.getPublicId(), actual.getPublicId(), ""source.text"");"
35993,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/converter/jaxp/StreamSourceConverterTest.java,34,,"        StreamSource source = context.getTypeConverter().convertTo(StreamSource.class, ""<foo>bar</foo>"");"
35994,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/converter/jaxp/XmlConverterTest.java,65,,"        BytesSource bs = conv.toBytesSource(""<foo>bar</foo>"".getBytes());"
35995,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/converter/jaxp/XmlConverterTest.java,195,,"        StAXSource source = conv.toStAXSource(""<?xml version=\""1.0\"" encoding=\""UTF-8\""?><foo>bar</foo>"", null);"
35996,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/converter/jaxp/XmlConverterTest.java,245,,"        template.sendBodyAndHeader(fileUri(), ""<foo>bar</foo>"", Exchange.FILE_NAME, ""myxml.xml"");"
35997,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/converter/stream/CachedOutputStreamTest.java,96,,"        assertEquals(1, files.length, ""we should have a temp file"");"
35998,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/converter/stream/CachedOutputStreamTest.java,97,,"        assertTrue(files[0].startsWith(""cos""), ""The file name should start with cos"");"
35999,./TargetProjects/camel/core/camel-core/src/test/java/org/apache/camel/converter/stream/CachedOutputStreamTest.java,97,,"        assertTrue(files[0].startsWith(""cos""), ""The file name should start with cos"");"
