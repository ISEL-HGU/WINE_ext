59000,./TargetProjects/deltaspike/deltaspike/core/impl/src/test/java/org/apache/deltaspike/test/core/api/config/ConfigResolverTest.java,68,,"        Assert.assertEquals(""testvalue"", ConfigResolver.getPropertyValue(""testkey""));"
59001,./TargetProjects/deltaspike/deltaspike/core/impl/src/test/java/org/apache/deltaspike/test/core/api/config/ConfigResolverTest.java,68,,"        Assert.assertEquals(""testvalue"", ConfigResolver.getPropertyValue(""testkey""));"
59002,./TargetProjects/deltaspike/deltaspike/core/impl/src/test/java/org/apache/deltaspike/test/core/api/config/ConfigResolverTest.java,78,,"        Assert.assertEquals(""unittestvalue"", ConfigResolver.getProjectStageAwarePropertyValue(""testkey""));"
59003,./TargetProjects/deltaspike/deltaspike/core/impl/src/test/java/org/apache/deltaspike/test/core/api/config/ConfigResolverTest.java,81,,"        Assert.assertEquals(""testvalue"", ConfigResolver.getPropertyValue(""testkey2""));"
59004,./TargetProjects/deltaspike/deltaspike/core/impl/src/test/java/org/apache/deltaspike/test/core/api/config/ConfigResolverTest.java,85,,"        Assert.assertEquals(""testvalue"", ConfigResolver.getPropertyValue(""testkey3""));"
59005,./TargetProjects/deltaspike/deltaspike/core/impl/src/test/java/org/apache/deltaspike/test/core/api/config/ConfigResolverTest.java,89,,"        Assert.assertEquals(DEFAULT_VALUE, ConfigResolver.getProjectStageAwarePropertyValue(""deltaspike.test.projectstagefallback"", DEFAULT_VALUE));"
59006,./TargetProjects/deltaspike/deltaspike/core/impl/src/test/java/org/apache/deltaspike/test/core/api/config/ConfigResolverTest.java,104,,"        Assert.assertEquals(""unittestvalue"", ConfigResolver.getPropertyAwarePropertyValue(""testkey"", ""dbvendor""));"
59007,./TargetProjects/deltaspike/deltaspike/core/impl/src/test/java/org/apache/deltaspike/test/core/api/config/ConfigResolverTest.java,115,,"        Assert.assertEquals(""TestDataSource"", ConfigResolver.getPropertyAwarePropertyValue(""dataSource"", ""dbvendor""));"
59008,./TargetProjects/deltaspike/deltaspike/core/impl/src/test/java/org/apache/deltaspike/test/core/api/config/ConfigResolverTest.java,130,,"        Assert.assertEquals(""shouldGetDecrypted: value"", configFilter.filterValue(""somekey.encrypted"", ""value""));"
59009,./TargetProjects/deltaspike/deltaspike/core/impl/src/test/java/org/apache/deltaspike/test/core/api/config/ConfigResolverTest.java,135,,"        Assert.assertEquals(""shouldGetDecrypted: value"", ConfigResolver.getPropertyValue(""testkey4.encrypted""));"
59010,./TargetProjects/deltaspike/deltaspike/core/impl/src/test/java/org/apache/deltaspike/test/core/api/config/ConfigResolverTest.java,223,,"        setTestConfigSourceValue(key, ""somevalue"");"
59011,./TargetProjects/deltaspike/deltaspike/core/impl/src/test/java/org/apache/deltaspike/test/core/api/config/ConfigSnapshotTest.java,52,,"            newVals.put(HOST_KEY, ""host1"");"
59012,./TargetProjects/deltaspike/deltaspike/core/impl/src/test/java/org/apache/deltaspike/test/core/api/config/TestConfigSourceProvider.java,51,,"            if (""test"".equals(key))"
59013,./TargetProjects/deltaspike/deltaspike/core/impl/src/test/java/org/apache/deltaspike/test/core/api/config/TypedResolverTest.java,103,,"        Assert.assertEquals(""TestDataSource"","
59014,./TargetProjects/deltaspike/deltaspike/core/impl/src/test/java/org/apache/deltaspike/test/core/api/config/TypedResolverTest.java,104,,"                ConfigResolver.resolve(""dataSource"")"
59015,./TargetProjects/deltaspike/deltaspike/core/impl/src/test/java/org/apache/deltaspike/test/core/api/config/TypedResolverTest.java,106,,"                        .parameterizedBy(""dbvendor"")"
59016,./TargetProjects/deltaspike/deltaspike/core/impl/src/test/java/org/apache/deltaspike/test/core/api/config/TypedResolverTest.java,186,,"                .withDefault(""TESTDEFAULT"");"
59017,./TargetProjects/deltaspike/deltaspike/core/impl/src/test/java/org/apache/deltaspike/test/core/api/config/injectable/ConfigBean.java,31,,"    @ConfigProperty(name = ""configProperty1"")"
59018,./TargetProjects/deltaspike/deltaspike/core/impl/src/test/java/org/apache/deltaspike/test/core/api/config/injectable/SettingsBean.java,37,,"    @ConfigProperty(name = ""configProperty1"")"
59019,./TargetProjects/deltaspike/deltaspike/core/impl/src/test/java/org/apache/deltaspike/test/core/api/message/MessageContextTest.java,105,,"                .message().template(""{hello}"").argument(""hans"").toString();"
59020,./TargetProjects/deltaspike/deltaspike/core/impl/src/test/java/org/apache/deltaspike/test/core/api/message/MessageContextTest.java,105,,"                .message().template(""{hello}"").argument(""hans"").toString();"
59021,./TargetProjects/deltaspike/deltaspike/core/impl/src/test/java/org/apache/deltaspike/test/core/api/message/MessageContextTest.java,132,,"        Assert.assertEquals(""Test Nachricht an hans"", messageText);"
59022,./TargetProjects/deltaspike/deltaspike/core/impl/src/test/java/org/apache/deltaspike/test/core/api/message/MinimalMessagesTest.java,80,,"        Assert.assertEquals(""Hello DeltaSpike"", minimalMessages.sayHello(""DeltaSpike""));"
59023,./TargetProjects/deltaspike/deltaspike/core/impl/src/test/java/org/apache/deltaspike/test/core/api/message/MinimalMessagesTest.java,80,,"        Assert.assertEquals(""Hello DeltaSpike"", minimalMessages.sayHello(""DeltaSpike""));"
59024,./TargetProjects/deltaspike/deltaspike/core/impl/src/test/java/org/apache/deltaspike/test/core/api/message/SimpleMessageTest.java,83,,"        assertEquals(""Welcome to DeltaSpike"", simpleMessage.welcomeToDeltaSpike());"
59025,./TargetProjects/deltaspike/deltaspike/core/impl/src/test/java/org/apache/deltaspike/test/core/api/scope/viewaccess/ViewAccessScopedTest.java,79,,"        contextExtension.getViewAccessScopedContext().onProcessingViewFinished(""viewA"");"
59026,./TargetProjects/deltaspike/deltaspike/core/impl/src/test/java/org/apache/deltaspike/test/core/api/scope/viewaccess/ViewAccessScopedTest.java,111,,"        contextExtension.getViewAccessScopedContext().onProcessingViewFinished(""viewB"");"
59027,./TargetProjects/deltaspike/deltaspike/core/impl/src/test/java/org/apache/deltaspike/test/core/impl/lock/LockedTest.java,75,,"                service.write(""test"", ""value"");"
59028,./TargetProjects/deltaspike/deltaspike/core/impl/src/test/java/org/apache/deltaspike/test/core/impl/lock/LockedTest.java,75,,"                service.write(""test"", ""value"");"
59029,./TargetProjects/deltaspike/deltaspike/core/impl/src/test/java/org/apache/deltaspike/test/core/impl/throttling/ThrottledTest.java,201,,"                service.write(""test"", ""value"");"
59030,./TargetProjects/deltaspike/deltaspike/core/impl/src/test/java/org/apache/deltaspike/test/core/impl/throttling/ThrottledTest.java,201,,"                service.write(""test"", ""value"");"
59031,./TargetProjects/deltaspike/deltaspike/modules/data/impl/src/main/java/org/apache/deltaspike/data/impl/handler/EntityRepositoryHandler.java,162,,"    @SuppressWarnings(""unchecked"")"
59032,./TargetProjects/deltaspike/deltaspike/modules/data/impl/src/test/java/org/apache/deltaspike/data/impl/builder/part/QueryRootTest.java,43,,"                ""select e from Simple e "" +"
59033,./TargetProjects/deltaspike/deltaspike/modules/data/impl/src/test/java/org/apache/deltaspike/data/impl/builder/part/QueryRootTest.java,44,,"                        ""where e.name = ?1"";"
59034,./TargetProjects/deltaspike/deltaspike/modules/data/impl/src/test/java/org/apache/deltaspike/data/impl/handler/EntityRepositoryHandlerTest.java,87,,"        Simple simple = new Simple(""test"");"
59035,./TargetProjects/deltaspike/deltaspike/modules/data/impl/src/test/java/org/apache/deltaspike/data/impl/handler/EntityRepositoryHandlerTest.java,186,,"    @SuppressWarnings(""unchecked"")"
59036,./TargetProjects/deltaspike/deltaspike/modules/data/impl/src/test/java/org/apache/deltaspike/data/impl/handler/EntityRepositoryHandlerTest.java,240,,"        testData.createSimple(""testFindAll1"");"
59037,./TargetProjects/deltaspike/deltaspike/modules/data/impl/src/test/java/org/apache/deltaspike/data/impl/handler/EntityRepositoryHandlerTest.java,241,,"        testData.createSimple(""testFindAll2"");"
59038,./TargetProjects/deltaspike/deltaspike/modules/data/impl/src/test/java/org/apache/deltaspike/data/impl/handler/EntityRepositoryHandlerTest.java,440,,"        Simple simple = testData.createSimple(""should_return_entity_primary_key"");"
59039,./TargetProjects/deltaspike/deltaspike/modules/data/impl/src/test/java/org/apache/deltaspike/data/impl/handler/FullEntityRepositoryTest.java,60,,"        Simple simple = new Simple(""test"");"
59040,./TargetProjects/deltaspike/deltaspike/modules/data/impl/src/test/java/org/apache/deltaspike/data/impl/handler/FullEntityRepositoryTest.java,112,,"        Simple simple = testData.createSimple(""testMerge"");"
59041,./TargetProjects/deltaspike/deltaspike/modules/data/impl/src/test/java/org/apache/deltaspike/data/impl/handler/FullEntityRepositoryTest.java,116,,"        final String newName = ""testMergeUpdated"";"
59042,./TargetProjects/deltaspike/deltaspike/modules/data/impl/src/test/java/org/apache/deltaspike/data/impl/handler/QueryHandlerTest.java,131,,"        final String name = ""testCreateQueryByMethodName"";"
59043,./TargetProjects/deltaspike/deltaspike/modules/data/impl/src/test/java/org/apache/deltaspike/data/impl/handler/QueryHandlerTest.java,347,,"        Simple result2 = repo.findOptionalByName(name + ""_doesnt_exist"");"
59044,./TargetProjects/deltaspike/deltaspike/modules/data/impl/src/test/java/org/apache/deltaspike/data/impl/handler/QueryHandlerTest.java,491,,"        builder.createSimple(""zebra"");"
59045,./TargetProjects/deltaspike/deltaspike/modules/data/impl/src/test/java/org/apache/deltaspike/data/impl/handler/QueryHandlerTest.java,492,,"        builder.createSimple(""willow"");"
59046,./TargetProjects/deltaspike/deltaspike/modules/data/impl/src/test/java/org/apache/deltaspike/data/impl/handler/QueryHandlerTest.java,493,,"        builder.createSimple(""kangaroo"");"
59047,./TargetProjects/deltaspike/deltaspike/modules/data/impl/src/test/java/org/apache/deltaspike/data/impl/handler/QueryHandlerTest.java,494,,"        builder.createSimple(""bologna"");"
59048,./TargetProjects/deltaspike/deltaspike/modules/data/impl/src/test/java/org/apache/deltaspike/data/impl/meta/unit/DescriptorHierarchyBuilderTest.java,42,,"        entities.add(new EntityDescriptor(null, null, ""test"", EntityLevel3.class, null, null, null));"
59049,./TargetProjects/deltaspike/deltaspike/modules/data/impl/src/test/java/org/apache/deltaspike/data/test/java8/test/Java8Test.java,90,,"        Simple s = new Simple(""something"");"
59050,./TargetProjects/deltaspike/deltaspike/modules/data/test-ee7/src/test/java/org/apache/deltaspike/data/test/ee7/graph/HouseRepositoryTest.java,89,,"        House house = repository.findByName(""Bellevue"");"
59051,./TargetProjects/deltaspike/deltaspike/modules/data/test-ee7/src/test/java/org/apache/deltaspike/data/test/ee7/graph/HouseRepositoryTest.java,94,,"        assertTrue(puu.isLoaded(house, ""flats""));"
59052,./TargetProjects/deltaspike/deltaspike/modules/data/test-ee7/src/test/java/org/apache/deltaspike/data/test/ee7/graph/HouseRepositoryTest.java,95,,"        assertFalse(puu.isLoaded(house, ""garages""));"
59053,./TargetProjects/deltaspike/deltaspike/modules/data/test-ee7/src/test/java/org/apache/deltaspike/data/test/ee7/service/HouseRepository.java,37,,"    @Query(""select h from House h where h.name = ?1"")"
59054,./TargetProjects/deltaspike/deltaspike/modules/jpa/api/src/main/java/org/apache/deltaspike/jpa/spi/descriptor/xml/EntityMappingsDescriptorParser.java,165,,"            entityDescriptor.setTableName(extractNodeAttribute((Element) node, ""table"", ""name""));"
59055,./TargetProjects/deltaspike/deltaspike/modules/jpa/impl/src/test/java/org/apache/deltaspike/test/jpa/api/shared/TestEntityManager.java,60,,"        throw new IllegalStateException(""not implemented"");"
59056,./TargetProjects/deltaspike/deltaspike/modules/jsf/api/src/test/java/org/apache/deltaspike/jsf/util/ValueExpressionEvaluationInputStreamTest.java,60,,"        FacesContext.getCurrentInstance().getExternalContext().getRequestMap().put(""test"", ""test-value"");"
59057,./TargetProjects/deltaspike/deltaspike/modules/jsf/api/src/test/java/org/apache/deltaspike/jsf/util/ValueExpressionEvaluationInputStreamTest.java,60,,"        FacesContext.getCurrentInstance().getExternalContext().getRequestMap().put(""test"", ""test-value"");"
59058,./TargetProjects/deltaspike/deltaspike/modules/jsf/impl/src/main/java/org/apache/deltaspike/jsf/impl/config/view/DefaultViewConfigResolver.java,98,,"                        ""That isn't allowed - see: "" + currentConfigDescriptor.getConfigClass().getName() + "" and "" +"
59059,./TargetProjects/deltaspike/deltaspike/modules/jsf/impl/src/test/java/org/apache/deltaspike/test/jsf/impl/config/view/controller/uc005/ViewConfigTest.java,211,,"                        .execute(""param1"", ""param2"");"
59060,./TargetProjects/deltaspike/deltaspike/modules/jsf/impl/src/test/java/org/apache/deltaspike/test/jsf/impl/config/view/controller/uc005/ViewConfigTest.java,211,,"                        .execute(""param1"", ""param2"");"
59061,./TargetProjects/deltaspike/deltaspike/modules/jsf/impl/src/test/java/org/apache/deltaspike/test/jsf/impl/config/view/navigation/destination/uc002/ViewConfigTestDrone.java,76,,"        driver.get(new URL(contextPath, ""origin.xhtml"").toString());"
59062,./TargetProjects/deltaspike/deltaspike/modules/jsf/impl/src/test/java/org/apache/deltaspike/test/jsf/impl/config/view/navigation/destination/uc005/ViewConfigPathTest.java,130,,"        Assert.assertEquals(""/step2.xhtml"", viewConfigDescriptor.getViewId());"
59063,./TargetProjects/deltaspike/deltaspike/modules/jsf/impl/src/test/java/org/apache/deltaspike/test/jsf/impl/config/view/navigation/syntax/uc004/ViewConfigTest.java,155,,"        Assert.assertEquals(""home"", ((View) node.getMetaData().iterator().next()).name());"
59064,./TargetProjects/deltaspike/deltaspike/modules/jsf/impl/src/test/java/org/apache/deltaspike/test/jsf/impl/config/view/navigation/syntax/uc004/ViewConfigTest.java,280,,"        Assert.assertEquals(""xhtml"", configDescriptor.getMetaData(View.class).iterator().next().extension());"
59065,./TargetProjects/deltaspike/deltaspike/modules/jsf/impl/src/test/java/org/apache/deltaspike/test/jsf/impl/config/view/navigation/syntax/uc005/ViewConfigTest.java,288,,"        Assert.assertEquals(""xhtml"", configDescriptor.getMetaData(View.class).iterator().next().extension());"
59066,./TargetProjects/deltaspike/deltaspike/modules/jsf/impl/src/test/java/org/apache/deltaspike/test/jsf/impl/config/view/navigation/syntax/uc006/ViewConfigTest.java,273,,"        Assert.assertEquals(""jsf"", configDescriptor.getMetaData(View.class).iterator().next().extension());"
59067,./TargetProjects/deltaspike/deltaspike/modules/jsf/impl/src/test/java/org/apache/deltaspike/test/jsf/impl/injection/uc001/InjectionDroneTest.java,71,,"        driver.get(new URL(contextPath, ""testValidatorConverter.xhtml"").toString());"
59068,./TargetProjects/deltaspike/deltaspike/modules/jsf/impl/src/test/java/org/apache/deltaspike/test/jsf/impl/injection/uc002/InjectionDroneTest.java,70,,"        driver.get(new URL(contextPath, ""testValidatorConverter.xhtml"").toString());"
59069,./TargetProjects/deltaspike/deltaspike/modules/jsf/impl/src/test/java/org/apache/deltaspike/test/jsf/impl/injection/uc003/InjectionDroneTest.java,72,,"        driver.get(new URL(contextPath, ""testValidatorConverter.xhtml"").toString());"
59070,./TargetProjects/deltaspike/deltaspike/modules/jsf/impl/src/test/java/org/apache/deltaspike/test/jsf/impl/scope/window/WindowMaxCountTest.java,76,,"        WebElement button = driver.findElement(By.id(""form:count""));"
59071,./TargetProjects/deltaspike/deltaspike/modules/jsf/impl/src/test/java/org/apache/deltaspike/test/jsf/impl/scope/window/WindowMaxCountTest.java,78,,"        WebElement value = driver.findElement(By.id(""form:value""));"
59072,./TargetProjects/deltaspike/deltaspike/modules/jsf/impl/src/test/java/org/apache/deltaspike/test/jsf/impl/util/JsfUtilsTest.java,37,,"            JsfUtils.isNewMessage(existingFacesMessage, new FacesMessage(""test"")));"
59073,./TargetProjects/deltaspike/deltaspike/modules/jsf/impl/src/test/java/org/apache/deltaspike/test/jsf/impl/util/JsfUtilsTest.java,84,,"        existingFacesMessage.add(new FacesMessage(""existing"", ""message""));"
59074,./TargetProjects/deltaspike/deltaspike/modules/jsf/impl/src/test/java/org/apache/deltaspike/test/jsf/impl/util/JsfUtilsTest.java,84,,"        existingFacesMessage.add(new FacesMessage(""existing"", ""message""));"
59075,./TargetProjects/deltaspike/deltaspike/modules/security/impl/src/main/java/org/apache/deltaspike/security/impl/extension/Authorizer.java,82,,"            throw new SecurityDefinitionException(""Error reading security binding members"", ex);"
59076,./TargetProjects/deltaspike/deltaspike/modules/security/impl/src/test/java/org/apache/deltaspike/test/security/impl/authorization/secured/SecuredAnnotationTest.java,36,,"        Assert.assertEquals(""result"", testBean.getResult());"
59077,./TargetProjects/deltaspike/deltaspike/modules/security/impl/src/test/java/org/apache/deltaspike/test/security/impl/authorization/securityparameterbinding/SecurityParameterBindingTest.java,69,,"            Assert.fail(""AccessDeniedException expect, but was not thrown"");"
59078,./TargetProjects/deltaspike/deltaspike/modules/servlet/impl/src/test/java/org/apache/deltaspike/test/servlet/impl/event/request/RequestResponseEventsTest.java,80,,"        assertTrue(""Didn't receive expected event"","
59079,./TargetProjects/deltaspike/deltaspike/modules/test-control/impl/src/test/java/org/apache/deltaspike/test/testcontrol/uc005/MockedJsfContainerTest.java,78,,"        Assert.assertNull(FacesContext.getCurrentInstance().getExternalContext().getRequestMap().get(""test""));"
59080,./TargetProjects/deltaspike/deltaspike/modules/test-control/impl/src/test/java/org/apache/deltaspike/test/testcontrol/uc009/JsfContainerTest.java,66,,"        uiViewRoot.setViewId(""/viewId"");"
59081,./TargetProjects/deltaspike/deltaspike/modules/test-control/impl/src/test/java/org/apache/deltaspike/test/testcontrol/uc009/JsfContainerTest.java,83,,"        Assert.assertNull(FacesContext.getCurrentInstance().getExternalContext().getRequestMap().get(""test""));"
59082,./TargetProjects/derby/java/build/org/apache/derbyBuild/MessageBuilder.java,55,,"        ""###################################################\n"" +"
59083,./TargetProjects/derby/java/build/org/apache/derbyBuild/MessageBuilder.java,56,,"        ""#\n"" +"
59084,./TargetProjects/derby/java/build/org/apache/derbyBuild/MessageBuilder.java,536,,"                        ditaWriter.writeTextElement( ""entry"", ""colname=\""col1\"""", ""SQLSTATE"" );"
59085,./TargetProjects/derby/java/build/org/apache/derbyBuild/ODBCMetadataGenerator.java,120,,"		""UNSIGNED_ATTRIBUTE"","
59086,./TargetProjects/derby/java/build/org/apache/derbyBuild/ODBCMetadataGenerator.java,121,,"		""AUTO_UNIQUE_VAL"","
59087,./TargetProjects/derby/java/build/org/apache/derbyBuild/ODBCMetadataGenerator.java,199,,"		changeMap.put(""getProcedureColumns"","
59088,./TargetProjects/derby/java/build/org/apache/derbyBuild/ODBCMetadataGenerator.java,204,,"		changeMap.put(""getColumns"", TYPE_VALUE_CHANGE);"
59089,./TargetProjects/derby/java/build/org/apache/derbyBuild/ODBCMetadataGenerator.java,216,,"		changeMap.put(""getTypeInfo"","
59090,./TargetProjects/derby/java/build/org/apache/derbyBuild/ODBCMetadataGenerator.java,469,,"			renameColForODBC(queryText, ""LENGTH"", ""BUFFER_LENGTH"");"
59091,./TargetProjects/derby/java/build/org/apache/derbyBuild/ODBCMetadataGenerator.java,470,,"			renameColForODBC(queryText, ""SCALE"", ""DECIMAL_DIGITS"");"
59092,./TargetProjects/derby/java/build/org/apache/derbyBuild/ODBCMetadataGenerator.java,471,,"			renameColForODBC(queryText, ""RADIX"", ""NUM_PREC_RADIX"");"
59093,./TargetProjects/derby/java/build/org/apache/derbyBuild/ODBCMetadataGenerator.java,656,,"			changeColValueToODBC(queryName, ""SQL_DATA_TYPE"", newQueryText);"
59094,./TargetProjects/derby/java/build/org/apache/derbyBuild/ODBCMetadataGenerator.java,657,,"			changeColValueToODBC(queryName, ""SQL_DATETIME_SUB"", newQueryText);"
59095,./TargetProjects/derby/java/build/org/apache/derbyBuild/ODBCMetadataGenerator.java,945,,"			if (colName.equals(""DATA_TYPE"") ||"
59096,./TargetProjects/derby/java/build/org/apache/derbyBuild/ODBCMetadataGenerator.java,953,,"				return ""SMALLINT"";"
59097,./TargetProjects/derby/java/build/org/apache/derbyBuild/ReleaseNotesTransformer.java,171,,"        println( ""Reading from "" + inputFileName + ""..."" );"
59098,./TargetProjects/derby/java/build/org/apache/derbyBuild/eclipse/DerbyEclipsePlugin.java,87,,"         			      ""\t\t\t <export name=\""*\""/> \n"" +"
59099,./TargetProjects/derby/java/build/org/apache/derbyBuild/eclipse/DerbyEclipsePlugin.java,88,,"      				      ""\t\t </library> \n"" +"
59100,./TargetProjects/derby/java/build/org/apache/derbyBuild/propertyconfig.java,143,,"						if (s.equalsIgnoreCase(""all"") &&"
59101,./TargetProjects/derby/java/demo/nserverdemo/NsSampleClientThread.java,104,,"			pw.println(""[NsSampleWork] Thread id - ""+thread_id + ""; requests database connection, dbUrl =""+dbUrl);"
59102,./TargetProjects/derby/java/demo/scores/java/client/org/apache/derbyDemo/scores/data/Database.java,204,,"             ""(\n"" +"
59103,./TargetProjects/derby/java/demo/scores/java/client/org/apache/derbyDemo/scores/data/Database.java,208,,"             "")\n"""
59104,./TargetProjects/derby/java/demo/scores/java/client/org/apache/derbyDemo/scores/data/Database.java,241,,"             ""language java\n"" +"
59105,./TargetProjects/derby/java/demo/scores/java/client/org/apache/derbyDemo/scores/data/Database.java,242,,"             ""parameter style java\n"" +"
59106,./TargetProjects/derby/java/demo/scores/java/client/org/apache/derbyDemo/scores/data/Database.java,243,,"             ""no sql\n"" +"
59107,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/BasicClientDataSource.java,1557,,"                dncLogWriter.traceEntry(this, ""getPooledConnection"");"
59108,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientBlob.java,244,,"                    agent_.logWriter_.traceEntry(this, ""getBinaryStream"");"
59109,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientBlob.java,392,,"                    agent_.logWriter_.traceEntry(this, ""setBytes"", (int) pos, bytes);"
59110,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientCallableStatement.java,161,,"                    agent_.logWriter_.traceEntry(this, ""registerOutParameter"", parameterIndex, jdbcType);"
59111,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientCallableStatement.java,424,,"                    agent_.logWriter_.traceDeprecatedEntry(this, ""getBigDecimal"", parameterIndex, scale);"
59112,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientCallableStatement.java,477,,"                            this, ""getDate"", parameterIndex, cal);"
59113,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientCallableStatement.java,513,,"                            this, ""getTime"", parameterIndex, cal);"
59114,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientCallableStatement.java,550,,"                            this, ""getTimestamp"", parameterIndex, cal);"
59115,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientCallableStatement.java,746,,"                    agent_.logWriter_.traceEntry(this, ""getObject"", parameterIndex);"
59116,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientCallableStatement42.java,61,,"                agent_.logWriter_.traceEntry( this, ""registerOutParameter"", parameterIndex, sqlType );"
59117,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientCallableStatement42.java,140,,"                agent_.logWriter_.traceEntry( this, ""setObject"", parameterIndex, x, sqlType );"
59118,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientClob.java,331,,"                    agent_.logWriter_.traceEntry(this, ""getCharacterStream"");"
59119,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientClob.java,570,,"                    agent_.logWriter_.traceEntry(this, ""setString"", (int) pos, str);"
59120,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientConnection.java,410,,"                agent_.logWriter_.traceEntry(this, ""createStatement"");"
59121,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientConnection.java,433,,"                agent_.logWriter_.traceEntry(this, ""prepareStatement"", sql);"
59122,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientConnection.java,480,,"                agent_.logWriter_.traceEntry(this, ""prepareCall"", sql);"
59123,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientPreparedStatement.java,336,,"            agent_.logWriter_.traceEntry(this, ""execute"", sql);"
59124,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientPreparedStatement.java,354,,"            agent_.logWriter_.traceEntry(this, ""executeUpdate"", sql);"
59125,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,581,,"                agent_.logWriter_.traceEntry(this, ""getBoolean"", column);"
59126,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,615,,"                agent_.logWriter_.traceEntry(this, ""getByte"", column);"
59127,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,649,,"                agent_.logWriter_.traceEntry(this, ""getShort"", column);"
59128,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,683,,"                agent_.logWriter_.traceEntry(this, ""getInt"", column);"
59129,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,717,,"                agent_.logWriter_.traceEntry(this, ""getLong"", column);"
59130,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,751,,"                agent_.logWriter_.traceEntry(this, ""getFloat"", column);"
59131,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,785,,"                agent_.logWriter_.traceEntry(this, ""getDouble"", column);"
59132,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,820,,"                agent_.logWriter_.traceDeprecatedEntry(this, ""getBigDecimal"", column, scale);"
59133,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,884,,"                agent_.logWriter_.traceEntry(this, ""getDate"", column);"
59134,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,928,,"                agent_.logWriter_.traceEntry(this, ""getTime"", column, cal);"
59135,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,974,,"                        this, ""getTimestamp"", column, calendar);"
59136,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,1086,,"                agent_.logWriter_.traceEntry(this, ""getString"", column);"
59137,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,1123,,"                agent_.logWriter_.traceEntry(this, ""getBytes"", column);"
59138,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,1160,,"                agent_.logWriter_.traceEntry(this, ""getBinaryStream"", column);"
59139,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,1193,,"                agent_.logWriter_.traceEntry(this, ""getAsciiStream"", column);"
59140,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,1231,,"            agent_.logWriter_.traceDeprecatedEntry(this, ""getUnicodeStream"","
59141,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,1245,,"                agent_.logWriter_.traceEntry(this, ""getCharacterStream"", column);"
59142,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,1279,,"                agent_.logWriter_.traceEntry(this, ""getBlob"", column);"
59143,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,1309,,"                agent_.logWriter_.traceEntry(this, ""getClob"", column);"
59144,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,1339,,"                agent_.logWriter_.traceEntry(this, ""getRef"", column);"
59145,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,1366,,"                agent_.logWriter_.traceEntry(this, ""getArray"", column);"
59146,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,1393,,"                agent_.logWriter_.traceEntry(this, ""getObject"", column);"
59147,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,2853,,"                    agent_.logWriter_.traceEntry(this, ""updateNull"", column);"
59148,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,2875,,"                    agent_.logWriter_.traceEntry(this, ""updateBoolean"", column, x);"
59149,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,2892,,"                    agent_.logWriter_.traceEntry(this, ""updateByte"", column, x);"
59150,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,2909,,"                    agent_.logWriter_.traceEntry(this, ""updateShort"", column, x);"
59151,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,2926,,"                    agent_.logWriter_.traceEntry(this, ""updateInt"", column, x);"
59152,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,2943,,"                    agent_.logWriter_.traceEntry(this, ""updateLong"", column, x);"
59153,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,2960,,"                    agent_.logWriter_.traceEntry(this, ""updateFloat"", column, x);"
59154,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,2977,,"                    agent_.logWriter_.traceEntry(this, ""updateDouble"", column, x);"
59155,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,2994,,"                    agent_.logWriter_.traceEntry(this, ""updateBigDecimal"", column, x);"
59156,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,3011,,"                    agent_.logWriter_.traceEntry(this, ""updateDate"", column, x);"
59157,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,3028,,"                    agent_.logWriter_.traceEntry(this, ""updateTime"", column, x);"
59158,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,3045,,"                    agent_.logWriter_.traceEntry(this, ""updateTimestamp"", column, x);"
59159,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,3062,,"                    agent_.logWriter_.traceEntry(this, ""updateString"", column, x);"
59160,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,3079,,"                    agent_.logWriter_.traceEntry(this, ""updateBytes"", column, x);"
59161,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,3100,,"                checkUpdatePreconditions(column, ""updateBinaryStream"");"
59162,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,3117,,"                    agent_.logWriter_.traceEntry(this, ""updateAsciiStream"", column, x, length);"
59163,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,3137,,"                    agent_.logWriter_.traceEntry(this, ""updateCharacterStream"", column, x, length);"
59164,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,3154,,"                    agent_.logWriter_.traceEntry(this, ""updateObject"", column, x, scale);"
59165,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,3937,,"                agent_.logWriter_.traceEntry(this, ""updateBlob"","
59166,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientResultSet.java,5854,,"                agent_.logWriter_.traceEntry(this, ""updateClob"","
59167,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientStatement.java,529,,"                    agent_.logWriter_.traceEntry(this, ""executeUpdate"", sql);"
59168,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientStatement.java,550,,"                    agent_.logWriter_.traceEntry(this, ""executeLargeUpdate"", sql);"
59169,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientStatement.java,986,,"                    agent_.logWriter_.traceEntry(this, ""execute"", sql);"
59170,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientStatement.java,1034,,"                    agent_.logWriter_.traceEntry(this, ""getUpdateCount"");"
59171,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ClientStatement.java,1081,,"                    agent_.logWriter_.traceEntry(this, ""getMoreResults"");"
59172,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/CrossConverters.java,208,,"                    agent_.logWriter_, ""SMALLINT"");"
59173,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/CrossConverters.java,311,,"                    agent_.logWriter_, ""INTEGER"");"
59174,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/CrossConverters.java,367,,"                    agent_.logWriter_, ""BIGINT"");"
59175,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/CrossConverters.java,401,,"                    agent_.logWriter_, ""DOUBLE"");"
59176,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/CrossConverters.java,1056,,"                agent_.logWriter_, ""TINYINT"");"
59177,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/EncryptionManager.java,403,,"                SecretKeySpec desKey = new SecretKeySpec(secKey_, ""DES"");"
59178,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/ExceptionFormatter.java,88,,"                printWriter.println(header + "" Stack trace follows"");"
59179,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/LogWriter.java,95,,"            printWriter_.println(""[derby]"" + header + "" "" + s);"
59180,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/am/LogWriter.java,443,,"                    printWriter_.print(""sqlPrecision="" + (columnMetaData.sqlPrecision_ == null ? ""<null>"" : """" + columnMetaData.sqlPrecision_[column - 1]) + "", "");"
59181,./TargetProjects/derby/java/org.apache.derby.client/org/apache/derby/client/net/NetResultSet42.java,59,,"        checkClosed( ""updateObject"" );"
59182,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/catalog/SystemProcedures.java,830,,"        query.append(""alter table "");"
59183,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/catalog/types/RoutineAliasInfo.java,194,,"				SanityManager.THROWASSERT(""Invalid parameterNames array "" + parameterNames.length + "" != "" + parameterCount);"
59184,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/iapi/services/io/FormatableBitSet.java,296,,"			SanityManager.ASSERT(invariantHolds(), ""broken invariant"");"
59185,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/iapi/services/io/RegisteredFormatIds.java,68,,"        /* 16 */        ""org.apache.derby.catalog.types.TypesImplInstanceGetter"","
59186,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/iapi/services/io/RegisteredFormatIds.java,83,,"        /* 31 */        ""org.apache.derby.iapi.types.DTSClassInfo"", //InstanceGetter"
59187,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/iapi/services/io/RegisteredFormatIds.java,187,,"        /* 135 */       ""org.apache.derby.impl.sql.catalog.CoreDDFinderClassInfo"",             // InstanceGetter"
59188,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/iapi/services/loader/ClassInspector.java,687,,"		  if (SanityManager.DEBUG_ON(""MethodResolutionInfo""))"
59189,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/iapi/services/locks/ShExLockable.java,55,,"				""instead of a ShExQual."");"
59190,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/iapi/services/monitor/Monitor.java,595,,"			SanityManager.ASSERT(serviceName != null, ""serviceName is null"");"
59191,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/iapi/sql/dictionary/DDUtils.java,199,,"    @SuppressWarnings(""UseOfObsoleteCollectionType"")"
59192,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/iapi/store/access/xa/XAXactId.java,140,,"			SanityManager.ASSERT(end != -1, ""illegal string format"");"
59193,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/iapi/types/JSQLType.java,67,,"		""java.lang.Integer"",	// we can't serialize char, so we convert it to int"
59194,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/iapi/types/SQLBoolean.java,221,,"						""Attempt to set the value of an immutable SQLBoolean"");"
59195,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/iapi/types/SQLDate.java,897,,"                                                          operand.getString(), ""date"");"
59196,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/iapi/types/SQLLongint.java,369,,"			throw StandardException.newException(SQLState.LANG_OUTSIDE_RANGE_FOR_DATATYPE, ""BIGINT"");"
59197,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/iapi/types/SQLSmallint.java,376,,"			throw StandardException.newException(SQLState.LANG_OUTSIDE_RANGE_FOR_DATATYPE, ""SMALLINT"");"
59198,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/iapi/types/SQLTimestamp.java,1175,,"                    throw StandardException.newException(SQLState.LANG_OUTSIDE_RANGE_FOR_DATATYPE, ""INTEGER"");"
59199,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/iapi/types/SQLTinyint.java,369,,"			throw StandardException.newException(SQLState.LANG_OUTSIDE_RANGE_FOR_DATATYPE, ""TINYINT"");"
59200,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/iapi/types/TypeId.java,497,,"                else if (javaTypeName.equals(""byte[]""))"
59201,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/iapi/types/TypeId.java,501,,"                else if (javaTypeName.equals(""java.lang.String""))"
59202,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/iapi/types/TypeId.java,505,,"                else if (javaTypeName.equals(""java.lang.Integer"") ||"
59203,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/jdbc/EmbedConnection.java,1231,,"			SanityManager.ASSERT(!isClosed(), ""connection is closed"");"
59204,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/jdbc/EmbedResultSet.java,1788,,"        checkIfClosed(""getObject"");"
59205,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/jdbc/EmbedResultSet.java,2529,,"        checksBeforeUpdateXXX(""updateAsciiStream"", columnIndex);"
59206,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/jdbc/EmbedResultSet.java,2547,,"        checksBeforeUpdateXXX(""updateBinaryStream"", columnIndex);"
59207,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/jdbc/EmbedResultSet.java,2565,,"        checksBeforeUpdateXXX(""updateCharacterStream"", columnIndex);"
59208,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/jdbc/EmbedResultSet.java,3336,,"		checksBeforeUpdateXXX(""updateObject"", columnIndex);"
59209,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/jdbc/EmbedResultSet.java,4294,,"				throw dataTypeConversion(""java.sql.Blob"", columnIndex);"
59210,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/jdbc/EmbedResultSet.java,4352,,"				throw dataTypeConversion(""java.sql.Clob"", columnIndex);"
59211,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/jdbc/EmbedResultSet.java,4430,,"        checksBeforeUpdateXXX(""updateBlob"", columnIndex);"
59212,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/jdbc/EmbedResultSet.java,4480,,"        checksBeforeUpdateXXX(""updateClob"", columnIndex);"
59213,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/jdbc/EmbedResultSet42.java,50,,"        checkIfClosed(""updateObject"");"
59214,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/jdbc/authentication/LDAPAuthenticationSchemeImpl.java,159,,"					""User DN = [""+ userDN+""]\n"");"
59215,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/services/bytecode/BCClass.java,154,,"		  if (SanityManager.DEBUG_ON(""ByteCodeGenInstr"")) {"
59216,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/services/bytecode/CodeChunk.java,525,,"				SanityManager.THROWASSERT(""Opcode "" + opcode + "" incorrect entry in OPCODE_ACTION -"" +"
59217,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/services/bytecode/CodeChunk.java,525,,"				SanityManager.THROWASSERT(""Opcode "" + opcode + "" incorrect entry in OPCODE_ACTION -"" +"
59218,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/services/jce/JCECipherProvider.java,114,,"					if ((algorithm.indexOf(""/ECB"") > -1))"
59219,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/services/locks/Timeout.java,351,,"                        attributes.put( VirtualLockTable.INDEXNAME, ""NULL"" );"
59220,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/GenericStatement.java,338,,"											  ""), "" +"
59221,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java,232,,"        {""ACOS"", ""DOUBLE"", ""java.lang.StrictMath"", ""acos(double)"", ""true"", ""false"", ""DOUBLE"" },"
59222,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java,232,,"        {""ACOS"", ""DOUBLE"", ""java.lang.StrictMath"", ""acos(double)"", ""true"", ""false"", ""DOUBLE"" },"
59223,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java,232,,"        {""ACOS"", ""DOUBLE"", ""java.lang.StrictMath"", ""acos(double)"", ""true"", ""false"", ""DOUBLE"" },"
59224,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java,232,,"        {""ACOS"", ""DOUBLE"", ""java.lang.StrictMath"", ""acos(double)"", ""true"", ""false"", ""DOUBLE"" },"
59225,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java,239,,"        {""PI"", ""DOUBLE"", ""org.apache.derby.catalog.SystemProcedures"", ""PI()"", ""true"", ""false"" },"
59226,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java,10867,,"            String[] arg_names = {""SCHEMANAME"", ""TABLENAME"", ""SEQUENTIAL""};"
59227,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java,10867,,"            String[] arg_names = {""SCHEMANAME"", ""TABLENAME"", ""SEQUENTIAL""};"
59228,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java,10946,,"            String[] arg_names = {""BACKUPDIR""};"
59229,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java,11244,,"            String[] arg_names = {""schemaName"", ""tableName"" , "
59230,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java,11244,,"            String[] arg_names = {""schemaName"", ""tableName"" , "
59231,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java,11245,,"								  ""fileName"","" columnDelimiter"", "
59232,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java,11245,,"								  ""fileName"","" columnDelimiter"", "
59233,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java,11246,,"								  ""characterDelimiter"", ""codeset""};"
59234,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java,11246,,"								  ""characterDelimiter"", ""codeset""};"
59235,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java,11323,,"								  ""codeset"", ""replace""};"
59236,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java,11550,,"				""CATALOGNAME"","
59237,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java,11553,,"				""OPTIONS""};"
59238,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java,12318,,"                ""org.apache.derby.impl.jdbc.LOBStoredProcedure"");"
59239,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java,12321,,"            String[] arg_names = {""LOCATOR""};"
59240,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java,12341,,"            String[] arg_names = {""LOCATOR"",""SEARCHSTR"",""POS""};"
59241,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java,12415,,"            String[] arg_names = {""LOCATOR"",""POS"",""LEN""};"
59242,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/catalog/TabInfoImpl.java,127,,"				""indexes is expected to be non-null"");"
59243,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/catalog/TabInfoImpl.java,131,,"                    ""indexID ("" + indexID + "") is out of range(0-"" +"
59244,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/catalog/TabInfoImpl.java,282,,"				SanityManager.THROWASSERT(""indexNumber ("" + indexNumber + "") is out of range(0-"" +"
59245,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/compile/ActivationClassBuilder.java,166,,"			""void"", ""reset"");"
59246,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/compile/CoalesceFunctionNode.java,240,,"					MethodBuilder genConstantMethod = acb.newGeneratedFun(""void"", Modifier.PRIVATE);"
59247,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/compile/ColumnDefinitionNode.java,336,,"				""isAutoincrement expected to be true"");"
59248,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/compile/DefaultOptTrace.java,223,,"             "" for table "" + tableNumber"
59249,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/compile/ExtractOperatorNode.java,54,,"                ""EXTRACT "" + fieldName[field],"
59250,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/compile/FromVTI.java,586,,"		    if (!constructor.assignableTo(""java.sql.PreparedStatement""))"
59251,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/compile/InListOperatorNode.java,618,,"					MethodBuilder genConstantMethod = acb.newGeneratedFun(""void"", Modifier.PRIVATE);"
59252,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/compile/InsertNode.java,683,,"		String insertMode = targetProperties.getProperty(""insertMode"");"
59253,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/compile/PredicateList.java,2847,,"            ""setQualifier"", ""void"", 4);"
59254,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/compile/RenameNode.java,142,,"				""Unexpected rename action in RenameNode"");"
59255,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/compile/SelectNode.java,2252,,"			SanityManager.DEBUG(""DumpUpdateCheck"",""cursor select has distinct"");"
59256,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/compile/SpecialFunctionNode.java,154,,"			methodType = ""java.lang.String"";"
59257,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/compile/StaticMethodCallNode.java,913,,"                      ""void"", 3);"
59258,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/compile/TypeCompilerFactoryImpl.java,102,,"                                getAnInstance(PACKAGE_NAME + ""NumericTypeCompiler"","
59259,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/compile/XMLOptTrace.java,162,,"        ""        asList( '"" + STMT_TEXT + ""', '"" + STMT_ID + ""', '"" + QBLOCK_ID + ""' ),\n"" +"
59260,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/conn/GenericLanguageConnectionContext.java,1502,,"                ""), "" +"
59261,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/conn/GenericStatementContext.java,253,,"			if (SanityManager.DEBUG_ON(""traceSavepoints""))"
59262,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/execute/BaseActivation.java,1550,,"    @SuppressWarnings(""UseOfObsoleteCollectionType"")"
59263,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/execute/BasicNoPutResultSetImpl.java,258,,"				this + ""expected to be the top ResultSet"");"
59264,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/execute/DeleteCascadeResultSet.java,106,,"    @SuppressWarnings({""UseOfObsoleteCollectionType"", ""empty-statement""})"
59265,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/execute/GenericScanQualifier.java,68,,"			SanityManager.ASSERT(properInit,	""properInit is expected to be true"");"
59266,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/execute/InsertResultSet.java,1831,,"				properties.put(""nUniqueColumns"", "
59267,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/execute/InternalTriggerExecutionContext.java,95,,"    @SuppressWarnings(""UseOfObsoleteCollectionType"")"
59268,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/execute/RenameConstantAction.java,161,,"					renameString = renameString + "" TABLE "" + fullTableName + "" TO "" + newTableName;"
59269,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/execute/ScrollInsensitiveResultSet.java,306,,"					this + ""expected to be the top ResultSet"");"
59270,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/execute/rts/RealDistinctScanStatistics.java,175,,"					"" = "" + numOpens + ""\n"" +"
59271,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/execute/rts/RealDistinctScanStatistics.java,198,,"			"":\n"" + StringUtil.ensureIndent(startPosition, depth + 2) + ""\n"" +"
59272,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/execute/rts/RealGroupedAggregateStatistics.java,126,,"						"" = "" + numOpens + ""\n"" +"
59273,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/execute/rts/RealHashScanStatistics.java,209,,"						"" = "" + numOpens + ""\n"" +"
59274,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/execute/rts/RealHashScanStatistics.java,230,,"			"":\n"" + StringUtil.ensureIndent(startPosition, depth + 2) + ""\n"" +"
59275,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/execute/rts/RealHashTableStatistics.java,185,,"										"" = "" + numOpens + ""\n"" +"
59276,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/execute/rts/RealMaterializedResultSetStatistics.java,114,,"					"" = "" + numOpens + ""\n"" +"
59277,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/execute/rts/RealNestedLoopJoinStatistics.java,135,,"				"" = "" + numOpens + ""\n"" + "
59278,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/execute/rts/RealNestedLoopLeftOuterJoinStatistics.java,119,,"					"" = "" + numOpens + ""\n"" +"
59279,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/execute/rts/RealProjectRestrictStatistics.java,149,,"				"" = "" + numOpens + ""\n"" +"
59280,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/execute/rts/RealScrollInsensitiveResultSetStatistics.java,109,,"				"" = "" + numOpens + ""\n"" +"
59281,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/execute/rts/RealSetOpResultSetStatistics.java,136,,"                "" = "" + numOpens + ""\n"" +"
59282,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/execute/rts/RealSortStatistics.java,136,,"				"" = "" + numOpens + ""\n"" +"
59283,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/execute/rts/RealTableScanStatistics.java,195,,"						"":\n"" +"
59284,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/execute/rts/RealTableScanStatistics.java,201,,"				"" = "" + numOpens + ""\n"" +"
59285,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/execute/rts/RealUnionResultSetStatistics.java,117,,"				"" = "" + numOpens + ""\n"" +"
59286,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/sql/execute/rts/RunTimeStatisticsImpl.java,364,,"				"" : "" + beginCompilationTimestamp + ""\n"" +"
59287,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/store/access/btree/BTreePostCommit.java,214,,"            if (SanityManager.DEBUG_ON(""verbose_btree_post_commit""))"
59288,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/store/access/btree/BranchControlRow.java,822,,"                if (SanityManager.DEBUG_ON(""enableBtreeConsistencyCheck""))"
59289,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/store/access/btree/D_BTreeController.java,201,,"            ""\tmaximum page number   = "" + li.max_pageno + "".\n""         +"
59290,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/store/access/btree/D_BTreeController.java,350,,"                ""\t# of entries         = "" + li.num_entries    + "".  "" +"
59291,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/store/access/heap/D_HeapController.java,153,,"            ""\tmaximum page number   = "" + stat.max_pageno + "".\n""         +"
59292,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/store/access/heap/HeapPostCommit.java,184,,"                                            ""verbose_heap_post_commit""))"
59293,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/store/access/heap/HeapPostCommit.java,187,,"                                            ""HeapPostCommit"", "
59294,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/store/access/sort/MergeInserter.java,112,,"                    if (SanityManager.DEBUG_ON(""SortTuning""))"
59295,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/store/raw/data/AllocExtent.java,478,,"                            "";extentLength = "" + extentLength +"
59296,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/store/raw/data/AllocPage.java,861,,"			SanityManager.ASSERT(isLatched(), ""page is not latched"");"
59297,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/store/raw/data/AllocationCache.java,463,,"					SanityManager.DEBUG_PRINT(""trace"", ""Allocation cache is "" + "
59298,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/store/raw/data/BaseDataFileFactory.java,2637,,"                if(bfilelist[i].startsWith(""seg""))"
59299,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/store/raw/data/RAFContainer.java,539,,"                                getIdentity().toString() : ""unknown"","
59300,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/store/raw/data/StoredPage.java,1105,,"                    SanityManager.DEBUG_PRINT(""DEBUG_TRACE"","
59301,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/store/raw/data/StoredPage.java,1107,,"                        slot + "") = "" +"
59302,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/store/raw/data/StoredPage.java,1464,,"                        "", current slot = "" + slot + "
59303,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/store/raw/data/StoredPage.java,1465,,"                        "", total slotsInUse = "" + slotsInUse);"
59304,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/store/raw/data/StoredPage.java,1627,,"                        (PageKey)getIdentity() + "" slot "" + slot + "
59305,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/store/raw/data/StoredPage.java,1639,,"                        ""--------------------------------------------------\n"" +"
59306,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/store/raw/data/StoredPage.java,8112,,"            String str = ""---------------------------------------------------\n"";"
59307,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/store/raw/log/FileLogger.java,638,,"                    ""----------------------------------------------------\n"" +"
59308,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/store/raw/log/FileLogger.java,642,,"                    ""\n----------------------------------------------------\n"");"
59309,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/store/raw/log/FileLogger.java,773,,"                                scanLog.getInstant() + "" : "" + lop);"
59310,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/store/raw/log/ReadOnly.java,141,,"			SanityManager.THROWASSERT(""functionality not implemented"");"
59311,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/store/raw/xact/TransactionTable.java,199,,"                if (SanityManager.DEBUG_ON(""TranTrace""))"
59312,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/store/raw/xact/TransactionTableEntry.java,271,,"			SanityManager.ASSERT(!isClone, ""cannot change a clone"");"
59313,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/store/raw/xact/TransactionTableEntry.java,317,,"			SanityManager.ASSERT(!isClone, ""cannot call method with a clone"");"
59314,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/store/raw/xact/TransactionTableEntry.java,442,,"			SanityManager.ASSERT(isClone, ""Should only call method on a clone"");"
59315,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/store/raw/xact/Xact.java,510,,"			if (SanityManager.DEBUG_ON(""XATrace"") && extid != null)"
59316,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/store/raw/xact/Xact.java,1806,,"            if (SanityManager.DEBUG_ON(""TranTrace""))"
59317,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/impl/store/raw/xact/XactFactory.java,286,,"                    rawStoreFactory == rsf, ""raw store factory different"");"
59318,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/vti/UpdatableVTITemplate.java,82,,"        throw new SQLException(""executeUpdate"");"
59319,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/vti/UpdatableVTITemplate.java,242,,"        throw new SQLException(""execute"");"
59320,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/vti/VTITemplate.java,135,,"    public Object getObject(int columnIndex) throws SQLException { throw notImplemented( ""getObject"" ); }"
59321,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/vti/VTITemplate.java,178,,"    public void updateAsciiStream(int columnIndex, InputStream x ) throws SQLException { throw notImplemented( ""updateAsciiStream"" ); }"
59322,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/vti/VTITemplate.java,181,,"	public void updateBinaryStream(int columnIndex, InputStream x)  throws SQLException { throw notImplemented( ""updateBinaryStream"" ); }"
59323,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/vti/VTITemplate.java,184,,"	public void updateCharacterStream(int columnIndex, java.io.Reader x ) throws SQLException { throw notImplemented( ""updateCharacterStream"" ); }"
59324,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/vti/VTITemplate.java,187,,"	public void updateObject(int columnIndex, Object x, int scale) throws SQLException { throw notImplemented( ""updateObject"" ); }"
59325,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/vti/VTITemplate.java,244,,"	public void updateBlob(int columnIndex, Blob x) throws SQLException { throw notImplemented( ""updateBlob"" ); }"
59326,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/vti/VTITemplate.java,250,,"	public void updateClob(int columnIndex, Clob x) throws SQLException { throw notImplemented( ""updateClob"" ); }"
59327,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/vti/VTITemplate.java,268,,"    public  void 	updateNCharacterStream(int columnIndex, Reader x) throws SQLException { throw notImplemented( ""updateNCharacterStream"" ); }"
59328,./TargetProjects/derby/java/org.apache.derby.engine/org/apache/derby/vti/VTITemplate.java,272,,"    public  void 	updateNClob(int columnIndex, NClob nClob) throws SQLException { throw notImplemented( ""updateNClob"" ); }"
59329,./TargetProjects/derby/java/org.apache.derby.optionaltools/org/apache/derby/optional/lucene/LuceneSupport.java,176,,"		listFunction.append(""tablename varchar( 128 ),"");"
59330,./TargetProjects/derby/java/org.apache.derby.optionaltools/org/apache/derby/optional/lucene/LuceneSupport.java,235,,"        executeDDL( conn, ""grant execute on function "" + LIST_INDEXES + "" to public"" );"
59331,./TargetProjects/derby/java/org.apache.derby.server/org/apache/derby/drda/NetServlet.java,268,,"            out.println( ""<h4>""+langUtil.getTextMessage(""SRV_StopButton"")+""</h4>"" );"
59332,./TargetProjects/derby/java/org.apache.derby.server/org/apache/derby/drda/NetServlet.java,268,,"            out.println( ""<h4>""+langUtil.getTextMessage(""SRV_StopButton"")+""</h4>"" );"
59333,./TargetProjects/derby/java/org.apache.derby.server/org/apache/derby/drda/NetServlet.java,269,,"            out.println( ""<INPUT type=submit name=form value='""+ stopMessage + ""'>"" );"
59334,./TargetProjects/derby/java/org.apache.derby.server/org/apache/derby/drda/NetServlet.java,275,,"                out.println( ""<INPUT type=submit name=logform value='""+logOffMessage + ""'>"" );"
59335,./TargetProjects/derby/java/org.apache.derby.server/org/apache/derby/drda/NetServlet.java,284,,"                out.println( ""<INPUT type=submit name=traceform value='""+traceOffMessage+ ""'>"" );"
59336,./TargetProjects/derby/java/org.apache.derby.server/org/apache/derby/drda/NetServlet.java,383,,"            out.println( ""<h4> </h4>"");"
59337,./TargetProjects/derby/java/org.apache.derby.server/org/apache/derby/impl/drda/DRDAConnThread.java,7461,,"                                trace(""====== writing int: ""+ ival + "" is null: "" + valNull);"
59338,./TargetProjects/derby/java/org.apache.derby.server/org/apache/derby/impl/drda/DecryptionManager.java,105,,"      if (java.security.Security.getProvider (""IBMJCE"") == null) // IBMJCE is not installed, install it."
59339,./TargetProjects/derby/java/org.apache.derby.server/org/apache/derby/impl/drda/DecryptionManager.java,119,,"                              "" when initializing EncryptionManager '"" + e.getMessage() + ""'"");"
59340,./TargetProjects/derby/java/org.apache.derby.server/org/apache/derby/impl/drda/DecryptionManager.java,365,,"                  + ""when encrypting data '"" + e.getMessage() + ""'"");"
59341,./TargetProjects/derby/java/org.apache.derby.server/org/apache/derby/impl/drda/NetworkServerControlImpl.java,99,,"     ""logconnections"", ""sysinfo"", ""runtimeinfo"",  ""maxthreads"", ""timeslice"", """"};"
59342,./TargetProjects/derby/java/org.apache.derby.server/org/apache/derby/impl/drda/NetworkServerControlImpl.java,99,,"     ""logconnections"", ""sysinfo"", ""runtimeinfo"",  ""maxthreads"", ""timeslice"", """"};"
59343,./TargetProjects/derby/java/org.apache.derby.server/org/apache/derby/impl/drda/NetworkServerControlImpl.java,949,,"                consolePrintAndIgnore(""DRDA_UnexpectedException.S"", exception, true);"
59344,./TargetProjects/derby/java/org.apache.derby.server/org/apache/derby/impl/drda/NetworkServerControlImpl.java,2440,,"                    consolePropertyMessage(""DRDA_InvalidValue.U"", new String [] "
59345,./TargetProjects/derby/java/org.apache.derby.server/org/apache/derby/impl/drda/NetworkServerControlImpl.java,2585,,"                    consolePropertyMessage(""DRDA_MissingValue.U"", ""DRDA_PortNumber.I"");"
59346,./TargetProjects/derby/java/org.apache.derby.server/org/apache/derby/impl/drda/NetworkServerControlImpl.java,2673,,"        else if (!StringUtil.SQLEqualsIgnoreCase(arg, ""off""))"
59347,./TargetProjects/derby/java/org.apache.derby.server/org/apache/derby/impl/drda/NetworkServerControlImpl.java,3241,,"        if (propval != null && StringUtil.SQLEqualsIgnoreCase(propval,""true""))  "
59348,./TargetProjects/derby/java/org.apache.derby.server/org/apache/derby/impl/drda/Utf8CcsidManager.java,50,,"            return sourceString.getBytes(""UTF-8"");"
59349,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/FileCompare.java,140,,"                    topdir = ""master"";"
59350,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/FileCompare.java,351,,"                    else if ( (str1.startsWith(""-----"")) && (str1.endsWith(""-----"")) )"
59351,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/MultiTest.java,147,,"			String tester = ""Tester"" + (i+1);"
59352,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/MultiTest.java,150,,"				LocalizedOutput out = openFile(outputDir, tester + "".out"");"
59353,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunList.java,87,,"	static String keepfiles = ""false"";"
59354,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunList.java,167,,"        this.topSuiteName = suiteProperties.getProperty(""suitename"");"
59355,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunList.java,317,,"                        if ( (upgradetest.equals(""true"")) && (suiteName.startsWith(""convert"")) )"
59356,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunList.java,692,,"            testEncoding = parentProps.getProperty(""derbyTesting.encoding"");"
59357,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunList.java,693,,"            upgradejarpath = parentProps.getProperty(""derbyTesting.jar.path"");"
59358,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunList.java,694,,"            framework = parentProps.getProperty(""framework"");"
59359,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunList.java,695,,"            serverJvm = parentProps.getProperty(""serverJvm"");"
59360,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunList.java,696,,"            serverJvmName = parentProps.getProperty(""serverJvmName"");"
59361,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunList.java,701,,"            encryption = parentProps.getProperty(""encryption"");"
59362,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunList.java,702,,"            testEncryptionProvider = parentProps.getProperty(""testEncryptionProvider"");"
59363,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunList.java,703,,"            testEncryptionAlgorithm = parentProps.getProperty(""testEncryptionAlgorithm"");"
59364,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunList.java,705,,"            jdk12test = parentProps.getProperty(""jdk12test"");"
59365,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunList.java,706,,"            jdk12exttest = parentProps.getProperty(""jdk12exttest"");"
59366,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunList.java,707,,"	        runwithj9 = parentProps.getProperty(""runwithj9"");"
59367,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunList.java,708,,"            runwithibmjvm = parentProps.getProperty(""runwithibmjvm"");"
59368,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunList.java,711,,"            	testJVM = (jvmName.startsWith(""j9_foundation"") ? ""foundation"" : ""j9"");            "
59369,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunList.java,712,,"            runwithjvm = parentProps.getProperty(""runwith"" + testJVM);"
59370,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunList.java,713,,"            excludeJCC = parentProps.getProperty(""excludeJCC"");"
59371,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunList.java,788,,"		testJavaFlags = suiteProperties.getProperty(""testJavaFlags"");"
59372,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunList.java,824,,"		String usepr = suiteProperties.getProperty(""useprocess"");"
59373,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunList.java,831,,"		reportstderr = suiteProperties.getProperty(""reportstderr"");"
59374,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunList.java,832,,"		timeout = suiteProperties.getProperty(""timeout"");"
59375,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunSuite.java,71,,"	static String systemdiff = ""false"";"
59376,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunSuite.java,96,,"		if ((System.getProperty(""java.vm.name"") != null) && System.getProperty(""java.vm.name"").equals(""J9""))"
59377,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunSuite.java,164,,"		if (genrep!=null) isGenrep = ""true"".equalsIgnoreCase(genrep);"
59378,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunSuite.java,208,,"                if ( (p.getProperty(""suites"") == null) || (subparent.equals(topparent)) )"
59379,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunSuite.java,320,,"            jvmflags = p.getProperty(""jvmflags"");"
59380,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunSuite.java,350,,"            outputdir = p.getProperty(""outputdir"");"
59381,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunTest.java,64,,"    static String[] validFrameworks = {""embedded"","""","
59382,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunTest.java,65,,"				       ""DerbyNet"",""DerbyNetClient"", ""DB2jcc"","
59383,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunTest.java,116,,"	static String runwithjvm=""true"";"
59384,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunTest.java,127,,"        static String defaultPackageName = ""/org/apache/derbyTesting/"";"
59385,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunTest.java,241,,"		    sp.put(""useprocess"", ""false"");"
59386,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunTest.java,246,,"            if ( sp.getProperty(""ij.defaultResourcePackage"") != null )"
59387,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunTest.java,482,,"        if (testType.startsWith(""sql""))"
59388,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunTest.java,488,,"	    	&& (testType.equals(""sql"") || testType.equals(""java"")"
59389,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunTest.java,537,,"            if ( (!testType.equals(""sql"")) && (!testType.equals(""java"")) && (!testType.equals(""junit"")))"
59390,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunTest.java,554,,"            if (testType.equals(""multi""))"
59391,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunTest.java,695,,"                loadTestResource(""tests/"" + testDirName + ""/"" + scriptFileName); "
59392,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunTest.java,706,,"            BufferedReader in = new BufferedReader(new InputStreamReader(is, ""UTF-8""));"
59393,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunTest.java,855,,"		    passFileName = sname+"".pass"";"
59394,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunTest.java,857,,"		    failFileName = sname+"".fail"";"
59395,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunTest.java,943,,"           hostName=""localhost"";"
59396,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunTest.java,1015,,"                            jvmName = ""j9dee15"";"
59397,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunTest.java,1478,,"	    if (useCommonDB) testPropName = ""CDB"" + testBase + ""_app.properties"";"
59398,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/RunTest.java,1570,,"			if (ap.getProperty(""derby.ui.codeset"") != null) {"
59399,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/harness/SysInfoLog.java,69,,"                if (javavm == null) System.out.println(""WHOA, javavm is NULL"");"
59400,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/compatibility/helpers/DummyBlob.java,85,,"        throw new SQLException(""not implemented for this test"");"
59401,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/compatibility/helpers/DummyClob.java,99,,"        throw new SQLException(""not implemented for this test"");"
59402,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/ClientSideSystemPropertiesTest.java,91,,"		    		File dir = new File(getSystemProperty(""derby.client.traceDirectory""));"
59403,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/DerbyNetAutoStartTest.java,90,,"        setSystemProperty(""derby.drda.startNetworkServer"", ""false"");         "
59404,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/DerbyNetAutoStartTest.java,142,,"        setSystemProperty(""derby.drda.portNumber"", ""-1"");"
59405,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/GetCurrentPropertiesTest.java,75,,"        expectedValues.setProperty(""derby.drda.keepAlive"",""true"");"
59406,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/GetCurrentPropertiesTest.java,78,,"        expectedValues.setProperty(""derby.drda.logConnections"",""false"");"
59407,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/LOBLocatorReleaseTest.java,178,,"                ""select dBlob, dClob from LOBLOC_NO_NULLS"");"
59408,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/NSSecurityMechanismTest.java,104,,"        ""USER_ONLY_SECURITY"", ""CLEAR_TEXT_PASSWORD_SECURITY"","
59409,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/NSSecurityMechanismTest.java,104,,"        ""USER_ONLY_SECURITY"", ""CLEAR_TEXT_PASSWORD_SECURITY"","
59410,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/NSSecurityMechanismTest.java,106,,"        ""ENCRYPTED_USER_AND_PASSWORD_SECURITY"","
59411,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/NSSecurityMechanismTest.java,107,,"        ""STRONG_PASSWORD_SUBSTITUTE_SECURITY"","
59412,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/NSSecurityMechanismTest.java,205,,"                ""OK"",""OK"",""08004"",""08004"",""08004"",""OK"",""?"",""OK"",""08004""},"
59413,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/NSSecurityMechanismTest.java,235,,"                ""OK"",""OK"",""08001.C.8"",""08001.C.8"",""08001.C.8"","
59414,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/NSSecurityMechanismTest.java,420,,"            getJDBCUrl(""user=neelima;password=lee;securityMechanism="" +"
59415,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/NSSecurityMechanismTest.java,451,,"            assertSecurityMechanismOK(""sarah"",null, SECMEC_USRIDONL,""SECMEC_USRIDONL:"", expectedValues[1]);"
59416,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/NSSecurityMechanismTest.java,514,,"                if (!(sqle.getSQLState().equals(""XJ112"")))"
59417,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/NSSecurityMechanismTest.java,1044,,"                ""peter"",""neelima"",SECMEC_EUSRIDPWD);"
59418,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/NSSecurityMechanismTest.java,1086,,"            ""neelima"", ""lee"", SECMEC_USRSSBPWD);"
59419,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/NetworkServerControlApiTest.java,73,,"        final String nsc = ""org.apache.derby.drda.NetworkServerControl"";"
59420,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/NetworkServerControlApiTest.java,149,,"        assertEquals(getSystemProperty(""derby.drda.traceAll""),""true"");"
59421,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/NetworkServerControlApiTest.java,149,,"        assertEquals(getSystemProperty(""derby.drda.traceAll""),""true"");"
59422,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/NetworkServerControlApiTest.java,150,,"        assertEquals(getSystemProperty(""derby.drda.traceDirectory""),""/"");"
59423,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/NetworkServerControlApiTest.java,221,,"        assertEquals(""Usage"", response.substring(0,5));"
59424,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/NetworkServerControlApiTest.java,289,,"        byte[] msgBytes = ""CMD:"".getBytes(""UTF8"");"
59425,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/NetworkServerControlApiTest.java,459,,"                ""maxthreads"", ""0"",""-p"", String.valueOf(TestConfiguration.getCurrent().getPort())};"
59426,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/NetworkServerControlApiTest.java,464,,"        assertEquals(""Fail! Max threads value incorrect!"", 0, maxValue);"
59427,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/NetworkServerControlApiTest.java,492,,"                ""Commands:"","
59428,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/NetworkServerControlApiTest.java,493,,"                ""start [-h <host>] [-p <port number>] [-noSecurityManager] [-ssl <ssl mode>]"","
59429,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/NetworkServerControlApiTest.java,494,,"                ""shutdown [-h <host>][-p <port number>] [-ssl <ssl mode>] [-user <username>] [-password <password>]"","
59430,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/NetworkServerControlApiTest.java,495,,"                ""ping [-h <host>][-p <port number>] [-ssl <ssl mode>]"","
59431,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/NetworkServerControlApiTest.java,496,,"                ""sysinfo [-h <host>][-p <port number>] [-ssl <ssl mode>]"","
59432,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/NetworkServerControlApiTest.java,497,,"                ""runtimeinfo [-h <host>][-p <port number>] [-ssl <ssl mode>]"","
59433,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/NetworkServerControlApiTest.java,498,,"                ""logconnections { on|off } [-h <host>][-p <port number>] [-ssl <ssl mode>]"","
59434,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/NetworkServerControlApiTest.java,499,,"                ""maxthreads <max>[-h <host>][-p <port number>] [-ssl <ssl mode>]"","
59435,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/NetworkServerControlApiTest.java,500,,"                ""timeslice <milliseconds>[-h <host>][-p <port number>] [-ssl <ssl mode>]"","
59436,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/NetworkServerControlApiTest.java,501,,"                ""trace { on|off } [-s <session id>][-h <host>][-p <port number>] [-ssl <ssl mode>]"","
59437,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/NetworkServerControlApiTest.java,502,,"                ""tracedirectory <trace directory>[-h <host>][-p <port number>] [-ssl <ssl mode>]"","
59438,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/NetworkServerControlApiTest.java,606,,"                ""timeslice"", ""0"",""-p"", String.valueOf(TestConfiguration.getCurrent().getPort())};"
59439,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/NetworkServerControlClientCommandTest.java,50,,"                ""org.apache.derby.drda.NetworkServerControl"", ""ping"" };"
59440,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/NetworkServerControlClientCommandTest.java,50,,"                ""org.apache.derby.drda.NetworkServerControl"", ""ping"" };"
59441,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/PrepareStatementTest.java,233,,"        byte[] c10ba = ((String )t2_rows[0][9]).getBytes(""UTF-8"");"
59442,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/PrepareStatementTest.java,289,,"            fail(""Exception expected above!"");"
59443,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/PrepareStatementTest.java,352,,"        insertTab(""bigtab"", 50);"
59444,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/PrepareStatementTest.java,1196,,"         ps.setString(3, ""AAAAAAAAAAA"");"
59445,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/PrepareStatementTest.java,1201,,"         ps.setString(8, ""AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"");"
59446,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/ProtocolTest.java,647,,"                "" != 0x"" + Integer.toHexString(svrcod) + "")"", reqVal, svrcod);"
59447,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/RuntimeInfoTest.java,306,,"				""-------------------------------------------------------------\n"" + "
59448,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/SecureServerTest.java,380,,"                new String[] { ""trace"", ""off"" });"
59449,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/ServerPropertiesTest.java,422,,"            ""org.apache.derby.drda.NetworkServerControl"", ""-p"","
59450,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/SqlExceptionTest.java,182,,"                fail(""expected an error"");"
59451,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/Utf8CcsidManagerClientTest.java,67,,"        String ucs2String = new String(new String(""\u4f60\u597d\u4e16\u754c"").getBytes(""UTF-16""),""UTF-16"");"
59452,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/Utf8CcsidManagerClientTest.java,67,,"        String ucs2String = new String(new String(""\u4f60\u597d\u4e16\u754c"").getBytes(""UTF-16""),""UTF-16"");"
59453,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/Utf8CcsidManagerTest.java,47,,"        String ucs2String = new String(new String(""\u4f60\u597d\u4e16\u754c"").getBytes(""UTF-16""),""UTF-16"");"
59454,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/derbynet/Utf8CcsidManagerTest.java,47,,"        String ucs2String = new String(new String(""\u4f60\u597d\u4e16\u754c"").getBytes(""UTF-16""),""UTF-16"");"
59455,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/engine/ErrorStreamTest.java,130,,"        File derbyLog = new File(getSystemProperty(""derby.system.home""),"
59456,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/engine/ErrorStreamTest.java,148,,"        assertTrue(""File "" + derbyLog + "" could not be deleted"", deleted);"
59457,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/engine/ErrorStreamTest.java,148,,"        assertTrue(""File "" + derbyLog + "" could not be deleted"", deleted);"
59458,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/engine/ErrorStreamTest.java,192,,"              ""org.apache.derbyTesting.functionTests.tests.engine.""+"
59459,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/engine/ErrorStreamTest.java,193,,"              ""ErrorStreamTest.getStream"");"
59460,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/engine/ErrorStreamTest.java,231,,"              ""ErrorStreamTest.fieldStream"");"
59461,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/engine/ErrorStreamTest.java,438,,"                ""derby-"" + i + "".log"");"
59462,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/engine/RestrictiveFilePermissionsTest.java,245,,"                        ""    NULL,"" + // column delimiter"
59463,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/engine/RestrictiveFilePermissionsTest.java,346,,"        URL jar = SupportFilesSetup.getReadOnlyURL(""dcl_id.jar"");"
59464,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/i18n/JapanCodeConversionTest.java,47,,"        if (Charset.isSupported(""EUC_JP"") && Charset.isSupported(""SJIS"")) {"
59465,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/i18n/JapanCodeConversionTest.java,60,,"        dropTable(""T1_EUC_JP"");"
59466,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/BlobTest.java,418,,"            ""insert into BLOBCLOB(ID, BLOBDATA) values(?,?)"");"
59467,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/BlobTest.java,710,,"        assertEquals(""Wrong insertion count"","
59468,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/CallableStatementTest.java,130,,"            cStmt.getNClob(""some-parameter-name"");"
59469,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/CallableStatementTest.java,132,,"                 ""should not be implemented"");"
59470,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/CallableStatementTest.java,228,,"        assertFalse(""No resultsets should be returned"", cStmt.execute());"
59471,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/CallableStatementTest.java,229,,"        assertEquals(""Incorrect updatecount"", -1, cStmt.getUpdateCount());"
59472,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/CallableStatementTest.java,513,,"        assertSame(""Unwrap returned wrong object."", cStmt, stmt);"
59473,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/CallableStatementTestSetup.java,158,,"        Assert.assertNotNull(""Connection cannot be null"", con);"
59474,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/ClobTest.java,410,,"            ""insert into BLOBCLOB(ID, CLOBDATA) values(?,?)"");"
59475,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/ClobTest.java,949,,"                (System.currentTimeMillis() - tsStart) + "" ms"");"
59476,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/ConnectionMethodsTest.java,627,,"            fail( ""Should raise an Unimplemented Feature exception."" );"
59477,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/DataSourceTest.java,106,,"            assertSQLState(""XJ128"", e);"
59478,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/DataSourceTest.java,164,,"            assertSQLState(""0A000"", e);"
59479,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/DataSourceTest.java,190,,"                assertSQLState(""08003"", e);"
59480,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/Derby2017LayerBTest.java,89,,"            assertSQLState(""X0Y32"", sqle);"
59481,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/Derby2017LayerBTest.java,201,,"                ""This is row 1"","
59482,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/Derby2017LayerBTest.java,202,,"                ""This is row 2"","
59483,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/Derby2017LayerBTest.java,203,,"                ""This is row 3"","
59484,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/Derby2017LayerBTest.java,204,,"                ""This is row 4, a bit too long"","
59485,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/Derby2017LayerBTest.java,205,,"                ""This is row 5, a bit too short"","
59486,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/Derby2017LayerBTest.java,206,,"                ""This is row 6"","
59487,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/Derby2017LayerBTest.java,207,,"                ""This is row 7"","
59488,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/Derby2017LayerBTest.java,366,,"            fail(""Insert should have failed"");"
59489,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/Derby3650Test.java,374,,"            ""--DERBY-PROPERTIES joinOrder=FIXED \n"" + "
59490,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/LobStreamTest.java,76,,"            assertEquals(""Output does not match input"", i%255, value);"
59491,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/LobStreamTest.java,295,,"            assertTrue(""Expected IndexOutOfBoundException"","
59492,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/PreparedStatementTest.java,214,,"                    stmt.execute(""create table "" + BLOBTBL +"
59493,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/PreparedStatementTest.java,467,,"        String str = ""Test data for the Clob object"";"
59494,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/PreparedStatementTest.java,528,,"        assertTrue(""No results retrieved"", rs.next());"
59495,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/PreparedStatementTest.java,683,,"                ""select * from testispoolablehint"");"
59496,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/PreparedStatementTest.java,974,,"        assertTrue(""Empty resultset"", rs.next());"
59497,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/PreparedStatementTest.java,977,,"        assertFalse(""Resultset should have been exhausted"", rs.next());"
59498,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/PreparedStatementTest.java,1015,,"                assertSQLState(""XSDA4"", sqle);"
59499,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/PreparedStatementTest.java,1017,,"                assertSQLState(""22001"", sqle);"
59500,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/PreparedStatementTest.java,1172,,"                assertInternalDerbyIOExceptionState(""XCL30"", ""22001"", sqle);"
59501,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/PreparedStatementTest42.java,108,,"        new ColumnDesc( JDBCType.BLOB, ""blob"", makeBlob( ""01234"" ), makeBlob( ""56789"" ), null ),"
59502,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/PreparedStatementTest42.java,108,,"        new ColumnDesc( JDBCType.BLOB, ""blob"", makeBlob( ""01234"" ), makeBlob( ""56789"" ), null ),"
59503,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/PreparedStatementTest42.java,219,,"            String  columnName = ""col"" + (i+1);"
59504,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/PreparedStatementTest42.java,392,,"                fail( ""updateObject() should have failed."" );"
59505,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/PreparedStatementTest42.java,552,,"            cs.registerOutParameter( ""param1"", _columnDescs[ 0 ].jdbcType );"
59506,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/PreparedStatementTest42.java,553,,"            fail( ""Expected unimplemented feature."" );"
59507,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/PreparedStatementTest42.java,742,,"            fail(""updateObject should fail when type is null"");"
59508,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/ResultSetTest.java,128,,"                 ""should not be implemented"");"
59509,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/ResultSetTest.java,137,,"            rs.getNCharacterStream(""some-column-name"");"
59510,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/ResultSetTest.java,367,,"        PreparedStatement ps_sb = prep(""dLongBit"");"
59511,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/ResultSetTest.java,460,,"            assertEquals(""Error in updateAsciiStream"",BYTES2[i],bytes_ret[i]);"
59512,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/ResultSetTest.java,484,,"        PreparedStatement ps_sb = prep(""dLongVarchar""); "
59513,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/ResultSetTest.java,625,,"        PreparedStatement ps_sb = prep(""dBlob"");"
59514,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/ResultSetTest.java,960,,"        PreparedStatement ps_sb = prep(""dClob"");"
59515,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/ResultSetTest.java,1480,,"        ResultSet rs = stmt.executeQuery(""values(1)"");"
59516,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/ResultSetTest.java,1559,,"        assertFalse(""rs should be open"", rs.isClosed());"
59517,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/ResultSetTest.java,1563,,"        assertTrue(""rs should be closed"", rs.isClosed());"
59518,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/ResultSetTest.java,2051,,"             ""    1.0,\n"" +"
59519,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/RowIdNotImplementedTest.java,83,,"            cStmt.getRowId(""some-parameter-name"");"
59520,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/SetObjectUnsupportedTest.java,89,,"            fail(""No exception thrown."");"
59521,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/StatementEventsTest.java,236,,"        PreparedStatement ps = prepare(""VALUES (1)"");"
59522,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/StatementEventsTest.java,259,,"            assertSQLState(""08003"", e);"
59523,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/StatementEventsTest.java,387,,"            assertEquals(""unexpected number of close events"", 5, counters[0]);"
59524,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/StatementEventsTest.java,388,,"            assertEquals(""unexpected number of error events"", 0, counters[1]);"
59525,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/StatementEventsTest.java,417,,"            assertEquals(""Incorrect close count"", 2, closedCount);"
59526,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/StatementEventsTest.java,487,,"        assertEquals(""unexpected number of added close listeners triggered"","
59527,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/StatementEventsTest.java,489,,"        assertEquals(""unexpected number of added error listeners triggered"","
59528,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/StatementTest.java,100,,"        ResultSet rs = stmt.executeQuery(""select count(*) from stmtTable"");"
59529,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/StatementTest.java,650,,"                 ""executeLargeUpdate"","
59530,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/StreamTruncationTest.java,283,,"                    expectedState = ""XJ001"";"
59531,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/TestDbMetaData.java,145,,"        { null, ""APP"", ""DUMMY1"", ""java.some.func"", FUNCTION_NO_TABLE_VALUE, GENERIC_NAME },"
59532,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/TestDbMetaData.java,145,,"        { null, ""APP"", ""DUMMY1"", ""java.some.func"", FUNCTION_NO_TABLE_VALUE, GENERIC_NAME },"
59533,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/TestDbMetaData.java,145,,"        { null, ""APP"", ""DUMMY1"", ""java.some.func"", FUNCTION_NO_TABLE_VALUE, GENERIC_NAME },"
59534,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/TestDbMetaData.java,146,,"        { null, ""APP"", ""DUMMY2"", ""java.some.func"", FUNCTION_NO_TABLE_VALUE, GENERIC_NAME },"
59535,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/TestDbMetaData.java,147,,"        { null, ""APP"", ""DUMMY3"", ""java.some.func"", FUNCTION_NO_TABLE_VALUE, GENERIC_NAME },"
59536,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/TestDbMetaData.java,148,,"        { null, ""APP"", ""DUMMY4"", ""java.some.func"", FUNCTION_NO_TABLE_VALUE, GENERIC_NAME },"
59537,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/TestDbMetaData.java,149,,"        { null, ""APP"", ""DUMMY5"", ""java.some.func"", FUNCTION_NO_TABLE_VALUE, GENERIC_NAME },"
59538,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/TestDbMetaData.java,150,,"        { null, ""SYSCS_UTIL"", ""SYSCS_CHECK_TABLE"","
59539,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/TestDbMetaData.java,154,,"          ""org.apache.derby.catalog.SystemProcedures."" +"
59540,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/TestDbMetaData.java,177,,"        { null, ""SYSIBM"", ""BLOBCREATELOCATOR"","
59541,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/TestDbMetaData.java,178,,"          ""org.apache.derby.impl.jdbc.LOBStoredProcedure."" +"
59542,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/TestDbMetaData.java,245,,"            if (schema.startsWith(""SYS""))"
59543,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/TestDbMetaData.java,323,,"              ""SMALLINT"", 5, 2, 0,"
59544,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/TestDbMetaData.java,325,,"              ""YES"", GENERIC_NAME, 1, -1 },"
59545,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/TestDbMetaData.java,331,,"              ""INTEGER"", 10, 4, 0,"
59546,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/TestDbMetaData.java,343,,"              ""VARCHAR"", 16, 32, null, null,"
59547,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/TestJDBC40Exception.java,76,,"            fail(""Statement didn't fail."");"
59548,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/TestJDBC40Exception.java,78,,"            assertTrue(""Unexpected SQL State: "" + e.getSQLState(),"
59549,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/UnsupportedVetter.java,107,,"						new MD( ""setNCharacterStream"", new Class[] { int.class, java.io.Reader.class } ),"
59550,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/UnsupportedVetter.java,109,,"						new MD( ""setNClob"", new Class[] { int.class, NClob.class } ),"
59551,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/UnsupportedVetter.java,139,,"					new MD( ""getArray"", new Class[] { int.class } ),"
59552,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/UnsupportedVetter.java,155,,"					new MD( ""getNCharacterStream"", new Class[] { int.class } ),"
59553,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/UnsupportedVetter.java,157,,"					new MD( ""getNClob"", new Class[] { int.class } ),"
59554,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/UnsupportedVetter.java,159,,"					new MD( ""getNString"", new Class[] { int.class } ),"
59555,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/UnsupportedVetter.java,163,,"					new MD( ""getRef"", new Class[] { int.class } ),"
59556,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/UnsupportedVetter.java,165,,"					new MD( ""getRowId"", new Class[] { int.class } ),"
59557,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/UnsupportedVetter.java,168,,"					new MD( ""getSQLXML"", new Class[] { int.class } ),"
59558,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/UnsupportedVetter.java,175,,"					new MD( ""getURL"", new Class[] { int.class } ),"
59559,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/UnsupportedVetter.java,177,,"                    new MD( ""registerOutParameter"", new Class[] { String.class, int.class } ),"
59560,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/UnsupportedVetter.java,181,,"                    makeMD( ""registerOutParameter"", new String[] { ""java.lang.String"", ""java.sql.SQLType"" }, JDBC.vmSupportsJDBC42() ),"
59561,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/UnsupportedVetter.java,250,,"                                        new FD( ""updateNClob"",new Class[] { int.class,Reader.class,long.class}),"
59562,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/UnsupportedVetter.java,279,,"						new MD( ""updateNCharacterStream"", new Class[] { int.class, java.io.Reader.class } ),"
59563,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/Wrapper41Test.java,165,,"             _rowOfNulls ? null : ""true"","
59564,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/Wrapper41Test.java,213,,"             ""BOOLEANCOL"","
59565,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbc4/Wrapper41Test.java,474,,"             ""TIMESTAMPCOL"","
59566,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,54,,"        {""APP"",""dan"",""kreg"",""jeff"",""ames"",""jerry"",""francois"",""jamie"",""howardR"","
59567,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,54,,"        {""APP"",""dan"",""kreg"",""jeff"",""ames"",""jerry"",""francois"",""jamie"",""howardR"","
59568,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,54,,"        {""APP"",""dan"",""kreg"",""jeff"",""ames"",""jerry"",""francois"",""jamie"",""howardR"","
59569,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,54,,"        {""APP"",""dan"",""kreg"",""jeff"",""ames"",""jerry"",""francois"",""jamie"",""howardR"","
59570,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,54,,"        {""APP"",""dan"",""kreg"",""jeff"",""ames"",""jerry"",""francois"",""jamie"",""howardR"","
59571,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,54,,"        {""APP"",""dan"",""kreg"",""jeff"",""ames"",""jerry"",""francois"",""jamie"",""howardR"","
59572,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,69,,"    private static final String USER_PREFIX = ""derby.user."";"
59573,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,170,,"        props.setProperty(""derby.infolog.append"", ""true"");"
59574,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,178,,"        sysprops.put(""derby.user.system"", ""admin"");"
59575,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,188,,"        setDatabaseProperty(""derby.database.defaultConnectionMode"","
59576,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,190,,"        setDatabaseProperty(""derby.database.readOnlyAccessUsers"","
59577,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,192,,"        setDatabaseProperty(""derby.database.fullAccessUsers"","
59578,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,200,,"        removeSystemProperty(""derby.connection.requireAuthentication"");"
59579,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,307,,"                    ""READONLYACCESS"");"
59580,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,322,,"                    ""FULLACCESS"");"
59581,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,370,,"        JDBCDataSource.setBeanProperty(ds, ""user"", jdbcUserName);"
59582,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,371,,"        JDBCDataSource.setBeanProperty(ds, ""password"", password);"
59583,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,441,,"        assertConnectionOK(dbName, ""system"", (""admin""));"
59584,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,474,,"            ""derby.database.defaultConnectionMode"",""NoAccess"", conn1);"
59585,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,481,,"        assertConnectionFail(""08004"", dbName, ""nomen"", ""nescio"");"
59586,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,518,,"        assertConnectionFail(""08004"", dbName, ""badUser"", ""badPwd"");"
59587,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,518,,"        assertConnectionFail(""08004"", dbName, ""badUser"", ""badPwd"");"
59588,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,552,,"            ""derby.database.defaultConnectionMode"",""fullAccess"", conn1);"
59589,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,554,,"            ""derby.connection.requireAuthentication"",""false"", conn1);"
59590,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,578,,"        assertUpdateCount(stmt, 1, ""insert into APP.t1 values USER"");"
59591,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,587,,"        assertUserValue(new String[] {""DAN"",""JEFF"",""AMES"",""JERRY""},"
59592,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,587,,"        assertUserValue(new String[] {""DAN"",""JEFF"",""AMES"",""JERRY""},"
59593,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,588,,"            ""dan"", ""select * from APP.t1"");"
59594,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,602,,"            new String[] {""FRANCOIS"",""FRANCOIS"",""FRANCOIS"",""FRANCOIS""},"
59595,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,713,,"            fail(""Duplicate allowed on derby.database.fullAccessUsers"");"
59596,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,715,,"            assertSQLState(""4250D"", e);"
59597,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,742,,"            fail(""Duplicate allowed on derby.database.readOnlyAccessUsers"");"
59598,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,790,,"        psGetAccess.setString(1, ""SYSTEM"");"
59599,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,844,,"        csSetAccess.setString(1, ""BOND"");"
59600,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,847,,"        csSetAccess.setString(1, ""JAMES"");"
59601,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,906,,"            ""25502"", stmt, ""delete from APP.t1 where c1 = 'SYSTEM'"");"
59602,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,1406,,"        JDBCDataSource.setBeanProperty(ds, ""shutdownDatabase"", ""shutdown"");"
59603,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,1406,,"        JDBCDataSource.setBeanProperty(ds, ""shutdownDatabase"", ""shutdown"");"
59604,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,1409,,"            fail(""expected shutdown to fail"");"
59605,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java,1412,,"            assertSQLState(""08006"", e);"
59606,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AutoGenJDBC30Test.java,189,,"        assertNull(""Expected NULL ResultSet after s.execute()"", "
59607,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AutoGenJDBC30Test.java,197,,"        assertNull(""Expected NULL ResultSet after ps.execute()"", "
59608,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AutoGenJDBC30Test.java,228,,"        s.execute(""insert into t11_AutoGen(c11) values (99)"", Statement.RETURN_GENERATED_KEYS);"
59609,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AutoGenJDBC30Test.java,231,,"        assertEquals(""Key value after s.execute()"", expected, keyval);"
59610,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AutoGenJDBC30Test.java,284,,"        assertEquals(""Key value after s.executeUpdate()"", expected, keyval);"
59611,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AutoGenJDBC30Test.java,292,,"        assertEquals(""Key value after ps.execute()"", expected, keyval);"
59612,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AutoGenJDBC30Test.java,297,,"        assertEquals(""Key value after ps.executeUpdate()"", expected, keyval);"
59613,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AutoGenJDBC30Test.java,556,,"        s.execute(""insert into t11_AutoGen(c11) values(999)"");"
59614,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AutoGenJDBC30Test.java,600,,"        assertNull(""Expected NULL ResultSet after s.executeUpdate()"", "
59615,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AutoGenJDBC30Test.java,612,,"        assertNull(""Expected NULL ResultSet after ps.executeUpdate()"", "
59616,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AutoGenJDBC30Test.java,768,,"        s.execute(""insert into t31_AutoGen(c31) values (99)"", "
59617,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AutoGenJDBC30Test.java,801,,"        assertNull(""Expected NULL ResultSet after s.executeUpdate"", "
59618,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AutoGenJDBC30Test.java,814,,"        assertNull(""Expected NULL ResultSet after ps.executeUpdate"", "
59619,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AutoGenJDBC30Test.java,1119,,"        String [] colNames = new String [] { ""C12"" };"
59620,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AutoGenJDBC30Test.java,1131,,"        colNames= new String[] {""NOTTHERE""};"
59621,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AutoGenJDBC30Test.java,1136,,"        colNames[0] = ""C11"";"
59622,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AutoloadTest.java,146,,"                suite.addTest(baseAutoLoadSuite(""embedded""));"
59623,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AutoloadTest.java,312,,"            errMsg.append(""]\n"");"
59624,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AutoloadTest.java,658,,"                fail(""expected shutdown to fail"");"
59625,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/AutoloadTest.java,661,,"                assertSQLState(""08006"", e);"
59626,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BLOBTest.java,71,,"            stmt.executeQuery(""SELECT * from "" + "
59627,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BLOBTest.java,73,,"        println(""Last"");"
59628,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BLOBTest.java,80,,"        println(""Verify updated blob using result set"");"
59629,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BLOBTest.java,226,,"            final int val = rs.getInt(""VAL"");"
59630,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BatchUpdateTest.java,319,,"        stmt.addBatch(""insert into t1 values(2)"");"
59631,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BatchUpdateTest.java,401,,"            stmt.addBatch(""insert into t1 values(1)"");"
59632,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BatchUpdateTest.java,575,,"        stmt.addBatch(""SELECT * FROM SYS.SYSCOLUMNS"");"
59633,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BatchUpdateTest.java,579,,"            assertBatchExecuteError(""X0Y79"", stmt, new long[] {});"
59634,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BatchUpdateTest.java,581,,"            assertBatchExecuteError(""XJ208"", stmt, new long[] {-3, 1});"
59635,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BatchUpdateTest.java,587,,"        println(""Negative Statement: "" +"
59636,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BatchUpdateTest.java,638,,"            assertStatementError(""XJ068"",stmt,""insert into t1 values(1)"");"
59637,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BatchUpdateTest.java,697,,"                fail(""Expected executeBatch to fail"");"
59638,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BatchUpdateTest.java,736,,"            assertBatchExecuteError(""22003"", stmt, new long[] {});"
59639,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BatchUpdateTest.java,842,,"        CallableStatement cs = prepareCall(""insert into t1 values(?)"");"
59640,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BatchUpdateTest.java,982,,"        println(""Positive Prepared Stat: "" +"
59641,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BatchUpdateTest.java,1313,,"            prepareStatement(""select * from t1 where c1=?"");"
59642,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BatchUpdateTest.java,1336,,"        println(""Negative Prepared Stat: "" +"
59643,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java,138,,"        JDBC.assertSingleValueResultSet(rs, ""38000"");"
59644,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java,237,,"            assertEquals(""FAIL - wrong clob length"", clobLength, clob.length());"
59645,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java,285,,"                assertEquals(""FAIL - wrong column size"","
59646,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java,347,,"            ""\u0061\u0062\u0063"","
59647,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java,348,,"            ""\u0370\u0371\u0372"","
59648,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java,349,,"            ""\u05d0\u05d1\u05d2""};"
59649,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java,528,,"        ResultSet rs = stmt.executeQuery(""select a, b from testClob"");"
59650,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java,644,,"                    println(""start:"" + start + "" length:"" + length);"
59651,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java,644,,"                    println(""start:"" + start + "" length:"" + length);"
59652,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java,655,,"                    println(""startSearchPos: "" + startSearchPos +"
59653,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java,656,,"                            ""searchString: "" + searchString);"
59654,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java,658,,"                    assertEquals(""FAIL - wrong match found for "" +"
59655,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java,890,,"                    ""caused an exception"");"
59656,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java,931,,"                    ""have caused an exception"");"
59657,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java,1421,,"        assertTrue(""FAIL - row not found"", rs.next());"
59658,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java,1501,,"            fail(""FAIL - should not be able to access large Clob after commit"");"
59659,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java,1531,,"            clob.position(""foo"",2);"
59660,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java,1605,,"            fail(""FAIL - should not be able to access large "" +"
59661,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java,1606,,"                    ""Clob after Connection Close"");"
59662,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java,1698,,"        String clobData = ""initial clob "";"
59663,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java,1710,,"        ResultSet rs = scrollStmt.executeQuery(""SELECT b, a FROM testClob"");"
59664,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java,1745,,"        assertEquals(""FAIL - wrong clob value"", expectedValue, value);"
59665,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java,1881,,"        ResultSet rs = stmt.executeQuery(""select a,b from testBlob"");"
59666,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java,1931,,"        ResultSet rs = stmt.executeQuery(""select a, b from testBlob"");"
59667,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java,1952,,"                    String searchString = new String(searchBytes, ""US-ASCII"");"
59668,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java,2670,,"            fail(""FAIL - should not be able to access large Blob after commit"");"
59669,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java,2740,,"            fail(""FAIL - should not be able to access large lob "" +"
59670,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java,2741,,"                    ""after the connection is closed"");"
59671,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java,2819,,"        String blobData = ""initial blob "";"
59672,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java,2832,,"        ResultSet rs = scrollStmt.executeQuery(""SELECT b, a FROM testBlob"");"
59673,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java,2865,,"        assertTrue(""FAIL - wrong blob value"","
59674,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java,3560,,"            String insert = ""insert into blobCheck (bl"""
59675,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobSetBytesBoundaryTest.java,65,,"                ""select dBlob, length from BlobTable"");"
59676,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobStoredProcedureTest.java,75,,"    	byte [] strBytes = testStr.getBytes(""US-ASCII"");"
59677,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobStoredProcedureTest.java,83,,"            (""? = CALL SYSIBM.BLOBCREATELOCATOR()"");"
59678,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/CacheSessionDataTest.java,206,,"                        ""PARAMETER STYLE JAVA EXTERNAL NAME '"" +"
59679,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/CacheSessionDataTest.java,311,,"        Connection c = DriverManager.getConnection(""jdbc:default:connection"");"
59680,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/CacheSessionDataTest.java,325,,"        s.execute(""SET ISOLATION "" + sqlName);"
59681,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/CacheSessionDataTest.java,725,,"        cursorTest(""ISOLATION_NAMES"", ResultSet.TYPE_FORWARD_ONLY, "
59682,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/CacheSessionDataTest.java,777,,"        cursorTest(""BIG"", ResultSet.TYPE_FORWARD_ONLY, "
59683,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/CallableTest.java,76,,"        ""NO SQL LANGUAGE JAVA PARAMETER STYLE JAVA EXTERNAL NAME '"" +"
59684,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/CallableTest.java,271,,"            (""call TWO_IN_ONE_OUT_PROC (?, ?, ?)"");"
59685,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/CallableTest.java,342,,"            (""call NUMERIC_TYPES_IN_AND_OUT_PROC(?,?,?,?,?,?,?,?,?,?,?,?)"");"
59686,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/CallableTest.java,385,,"            (""call NON_NUMERIC_TYPES_IN_AND_OUT_PROC(?,?,?,?,?,?,?,?)"");"
59687,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/CallableTest.java,388,,"        cs.setTime(2, Time.valueOf(""10:05:02""));"
59688,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/CallableTest.java,389,,"        cs.setTimestamp(3, Timestamp.valueOf(""2002-05-12 10:05:02.000000000""));"
59689,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/CallableTest.java,703,,"                    assertEquals(""Batch updateCount"", 0, updateCount[0]);"
59690,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/CallableTest.java,1161,,"    	    fail(""should have failed"");"
59691,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/CallableTest.java,1163,,"    	    assertSQLState(""0A000"", e);"
59692,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/CallableTest.java,1191,,"    	CallableStatement cs = prepareCall(""call NUMERIC_TYPES_IN_AND_OUT_PROC (?,?,?,?,?,?, ?,?,?,?,?,?)"");"
59693,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/CallableTest.java,1293,,"    	CallableStatement cs = prepareCall(""call NON_NUMERIC_TYPES_IN_AND_OUT_PROC (?,?,?,?,?,?,?,?)"");"
59694,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/CallableTest.java,1328,,"    		String str = ""This is a String"";"
59695,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/CallableTest.java,1610,,"    	CallableStatement cs = prepareCall(""call NON_NUMERIC_TYPES_IN_AND_OUT_PROC(?, ?,?,?,?, ?, ?,?)"");"
59696,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/CharacterStreamsTest.java,129,,"                ""insert into charstream(c, vc, lvc, lob) "" +"
59697,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/CharacterStreamsTest.java,130,,"                ""values(?,?,?,?)"");"
59698,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/CharacterStreamsTest.java,263,,"        asciiBytes = ASCII_VALUE.getBytes(""US-ASCII"");"
59699,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/CharacterStreamsTest.java,279,,"            assertSQLState(""XJ001"", sqle);"
59700,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/CharacterStreamsTest.java,348,,"        assertTrue(""FAIL - row not found"", rs.next());"
59701,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/CharacterStreamsTest.java,350,,"        assertFalse(""FAIL - value should not be null"", rs.wasNull());"
59702,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/CharacterStreamsTest.java,354,,"        assertEquals(""FAIL - wrong value on column "" + col,"
59703,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/CharacterStreamsTest.java,356,,"        assertEquals(""FAIL - wrong length "" + col, LEN_ASCII_VALUE, length);"
59704,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/CharacterStreamsTest.java,361,,"        assertTrue(""FAIL - value should be null"", rs.wasNull());"
59705,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/CharacterStreamsTest.java,368,,"        assertFalse(""FAIL - more rows than expected"", rs.next());"
59706,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/CharacterStreamsTest.java,705,,"        assertEquals(""FAIL - wrong length"", length, count);"
59707,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ClobStoredProcedureTest.java,70,,"            (""? = CALL SYSIBM.CLOBCREATELOCATOR()"");"
59708,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ClobTest.java,223,,"        clob.setString(1, ""TEST"");"
59709,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ClobUpdatableReaderTest.java,133,,"        assertEquals (""update not reflected"", dummy,"
59710,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ConcurrencyTest.java,75,,"        ResultSet rs = s.executeQuery(""select * from t1 for update"");"
59711,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ConcurrencyTest.java,112,,"        ResultSet rs = s.executeQuery(""select * from t1"");"
59712,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ConcurrencyTest.java,250,,"        println(""T1: Read next Tuple:("" + rs.getInt(1) + "","" +"
59713,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ConcurrencyTest.java,273,,"            println(""T2: commit"");"
59714,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ConcurrencyTest.java,275,,"                (""call SYSCS_UTIL.SYSCS_INPLACE_COMPRESS_TABLE(?,?,?,?,?)"");"
59715,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ConcurrencyTest.java,276,,"            ps2.setString(1, ""APP""); // schema"
59716,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ConcurrencyTest.java,281,,"            println(""T3: call SYSCS_UTIL.SYSCS_INPLACE_COMPRESS_TABLE"");"
59717,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ConcurrencyTest.java,295,,"        println(""T1: updateInt(2, 3);"");"
59718,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ConcurrencyTest.java,297,,"        println(""T1: updateRow()"");"
59719,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ConcurrencyTest.java,307,,"        println(""T1: commit"");"
59720,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ConcurrencyTest.java,345,,"                (""delete from t1 where id=?"");"
59721,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ConcurrencyTest.java,357,,"        println(""T1: Read previous Tuple:("" + rs.getInt(1) + "","" +"
59722,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DMDBugsTest.java,52,,"		String[] withInvalidTableTypes = {""SYNONYM"",""TABLE"",""VIEW"","
59723,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DMDBugsTest.java,52,,"		String[] withInvalidTableTypes = {""SYNONYM"",""TABLE"",""VIEW"","
59724,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DMDBugsTest.java,52,,"		String[] withInvalidTableTypes = {""SYNONYM"",""TABLE"",""VIEW"","
59725,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DMDBugsTest.java,57,,"			new String[][] {{"""",""APP"",""TSYN"",""SYNONYM"","""",null,null,null,null,null},"
59726,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DSCreateShutdownDBTest.java,97,,"        assertUpdateCount(createStatement(), 0, ""set schema APP"");"
59727,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DSCreateShutdownDBTest.java,103,,"        assertSetAndGet(dbName, ""shutdownDatabase"", ""shutdown"");"
59728,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DSCreateShutdownDBTest.java,103,,"        assertSetAndGet(dbName, ""shutdownDatabase"", ""shutdown"");"
59729,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DSCreateShutdownDBTest.java,104,,"        assertSetAndGet(dbName, ""createDatabase"", ""create"");"
59730,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DSCreateShutdownDBTest.java,104,,"        assertSetAndGet(dbName, ""createDatabase"", ""create"");"
59731,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DSCreateShutdownDBTest.java,106,,"        assertNotSetAndGet(dbName, ""shutdownDatabase"", ""boo"");"
59732,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DSCreateShutdownDBTest.java,108,,"        assertNotSetAndGet(dbName, ""shutdownDatabase"", ""false"");"
59733,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DSCreateShutdownDBTest.java,256,,"                ds, ""ConnectionAttributes"", ""shutdown=true"");"
59734,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DSCreateShutdownDBTest.java,256,,"                ds, ""ConnectionAttributes"", ""shutdown=true"");"
59735,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DSCreateShutdownDBTest.java,265,,"                ds, ""ConnectionAttributes"", ""create=true"");"
59736,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DSCreateShutdownDBTest.java,306,,"        JDBCDataSource.setBeanProperty(ds, ""CreateDatabase"", ""create"");"
59737,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DataSourcePropertiesTest.java,97,,"        JDBCDataSource.setBeanProperty(ds, ""password"",  ""mypassword"");"
59738,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DataSourcePropertiesTest.java,98,,"        JDBCDataSource.setBeanProperty(ds, ""attributesAsPassword"", Boolean.TRUE);"
59739,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DataSourceReferenceTest.java,249,,"            assertTrue(""Property '"" + properties[i] + ""' not in descriptor '"" +"
59740,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DataSourceTest.java,270,,"            {""08001"",""08001"",""08001"",""08001"","
59741,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DataSourceTest.java,317,,"             ""XJ004"",""XJ004"",""XJ004"",""XJ004"","
59742,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DataSourceTest.java,321,,"        JDBCDataSource.setBeanProperty(ds, ""connectionAttributes"", ""databaseName="" + dbName);"
59743,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DataSourceTest.java,505,,"        JDBCDataSource.setBeanProperty(ds, ""description"", setDescription);"
59744,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DataSourceTest.java,544,,"        dsConnectionRequest(expectedValues[2], ds, ""fred"", null);"
59745,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,116,,"        { ""DAYOFMONTH"", ""{d '1995-12-19'}"" },"
59746,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,145,,"        { ""CHAR"", ""65"" },"
59747,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,953,,"                ""TYPE_CAT"", ""TYPE_SCHEM"", ""TYPE_NAME"", ""CLASS_NAME"","
59748,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,953,,"                ""TYPE_CAT"", ""TYPE_SCHEM"", ""TYPE_NAME"", ""CLASS_NAME"","
59749,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,953,,"                ""TYPE_CAT"", ""TYPE_SCHEM"", ""TYPE_NAME"", ""CLASS_NAME"","
59750,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,954,,"                ""DATA_TYPE"", ""REMARKS"", ""BASE_TYPE""};"
59751,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,954,,"                ""DATA_TYPE"", ""REMARKS"", ""BASE_TYPE""};"
59752,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,1003,,"                ""1"", ""YES"", null, null,"
59753,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,1067,,"                ""ATTR_TYPE_NAME"", ""ATTR_SIZE"", ""DECIMAL_DIGITS"", ""NUM_PREC_RADIX"","
59754,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,1067,,"                ""ATTR_TYPE_NAME"", ""ATTR_SIZE"", ""DECIMAL_DIGITS"", ""NUM_PREC_RADIX"","
59755,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,1068,,"                ""NULLABLE"", ""REMARKS"", ""ATTR_DEF"", ""SQL_DATA_TYPE"", "
59756,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,1068,,"                ""NULLABLE"", ""REMARKS"", ""ATTR_DEF"", ""SQL_DATA_TYPE"", "
59757,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,1069,,"                ""SQL_DATETIME_SUB"", ""CHAR_OCTET_LENGTH"", ""ORDINAL_POSITION"", "
59758,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,1069,,"                ""SQL_DATETIME_SUB"", ""CHAR_OCTET_LENGTH"", ""ORDINAL_POSITION"", "
59759,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,1069,,"                ""SQL_DATETIME_SUB"", ""CHAR_OCTET_LENGTH"", ""ORDINAL_POSITION"", "
59760,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,1070,,"                ""IS_NULLABLE"", ""SCOPE_CATALOG"", ""SCOPE_SCHEMA"", ""SCOPE_TABLE"","
59761,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,1070,,"                ""IS_NULLABLE"", ""SCOPE_CATALOG"", ""SCOPE_SCHEMA"", ""SCOPE_TABLE"","
59762,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,1070,,"                ""IS_NULLABLE"", ""SCOPE_CATALOG"", ""SCOPE_SCHEMA"", ""SCOPE_TABLE"","
59763,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,1070,,"                ""IS_NULLABLE"", ""SCOPE_CATALOG"", ""SCOPE_SCHEMA"", ""SCOPE_TABLE"","
59764,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,1071,,"                ""SOURCE_DATA_TYPE"""
59765,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,1100,,"                ""TABLE_CAT"", ""TABLE_SCHEM"", ""TABLE_NAME"", ""SUPERTABLE_NAME""};"
59766,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,1100,,"                ""TABLE_CAT"", ""TABLE_SCHEM"", ""TABLE_NAME"", ""SUPERTABLE_NAME""};"
59767,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,1100,,"                ""TABLE_CAT"", ""TABLE_SCHEM"", ""TABLE_NAME"", ""SUPERTABLE_NAME""};"
59768,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,1195,,"            ""APP"", ""NULLID"", ""SQLJ"", ""SYS"", ""SYSCAT"", ""SYSCS_DIAG"","
59769,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,1381,,"        String[] userTableOnly = new String[] {""TABLE""};"
59770,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,1462,,"            assertEquals(""TABLE_TYPE"", ""TABLE"", rs.getString(""TABLE_TYPE""));"
59771,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,1610,,"            types.remove(""BOOLEAN"");"
59772,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,1710,,"                    String column = rs[j].getString(""COLUMN_NAME"");"
59773,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,2058,,"                    ""NUMERIC"", rs.getString(""TYPE_NAME""));"
59774,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,2080,,"            assertEquals(""BUFFER_LENGTH"", 0, rs.getInt(""BUFFER_LENGTH""));"
59775,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,2263,,"                ""TYPE_NAME"", ""DATA_TYPE"", ""PRECISION"", ""LITERAL_PREFIX"","
59776,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,2605,,"        ODBC_COLUMN_NAMES[2] = ""COLUMN_SIZE"";"
59777,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,3019,,"        if (""SMALLINT"".equals(type))"
59778,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,3021,,"        if (""INTEGER"".equals(type) || ""INT"".equals(type))"
59779,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,3023,,"        if (""BIGINT"".equals(type))"
59780,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,3031,,"        if (""DOUBLE"".equals(type) || ""DOUBLE PRECISION"".equals(type))"
59781,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,3052,,"           if (type.startsWith(""VARCHAR""))"
59782,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,3181,,"        checkODBCKeys(null, schema, null, null, null, ""FKT1"");"
59783,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,3182,,"        checkODBCKeys(null, schema, ""PKT1"", null, null, null);"
59784,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,3185,,"        checkODBCKeys(null, schema, null, null, null, ""FKT2"");"
59785,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,3186,,"        checkODBCKeys(null, schema, ""PKT2"", null, null, null);"
59786,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,3189,,"        checkODBCKeys(null, schema, null, null, null, ""FKT3"");"
59787,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,3190,,"        checkODBCKeys(null, schema, ""PKT3"", null, null, null);"
59788,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,3319,,"                assertSQLState(usingEmbedded() ? ""XJ103"" : ""XJ110"", se);"
59789,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,3552,,"        rs = getBestRowIdentifier(null,schema,""BRIT16"","
59790,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,3577,,"                {""2"", ""VC10"", ""12"", ""VARCHAR"", ""10"", null, null, ""1""}"
59791,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,3595,,"        rs = getBestRowIdentifier(null,""SYS"",""SYSTABLES"","
59792,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,3933,,"        ResultSet rss[] = getIndexInfo("""",""SYS"",""SYSCOLUMNS"",true,false);"
59793,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,3935,,"            {"""",""SYS"",""SYSCOLUMNS"",""false"","""",""SYSCOLUMNS_INDEX1"",""3"",""1"","
59794,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,3935,,"            {"""",""SYS"",""SYSCOLUMNS"",""false"","""",""SYSCOLUMNS_INDEX1"",""3"",""1"","
59795,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,4207,,"                {"""",schema,""KT1"",""I"",""2"",""PRIMKEY""},"
59796,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,4207,,"                {"""",schema,""KT1"",""I"",""2"",""PRIMKEY""},"
59797,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,4231,,"            fail (""table name may not be null, should've given error"");"
59798,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,4311,,"            {"""",schema,""KT1"",""VC10"","""",schema,""REFTAB"",""VC10"",""1"",""3"",""3"",""FKEY1"",""PRIMKEY"",""7""},"
59799,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,4311,,"            {"""",schema,""KT1"",""VC10"","""",schema,""REFTAB"",""VC10"",""1"",""3"",""3"",""FKEY1"",""PRIMKEY"",""7""},"
59800,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,4313,,"            {"""",schema,""KT1"",""C30"","""",schema,""REFTAB"",""C30"",""1"",""3"",""3"",""FKEY3"",""UNIQUEKEY"",""7""},"
59801,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,4313,,"            {"""",schema,""KT1"",""C30"","""",schema,""REFTAB"",""C30"",""1"",""3"",""3"",""FKEY3"",""UNIQUEKEY"",""7""},"
59802,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,4313,,"            {"""",schema,""KT1"",""C30"","""",schema,""REFTAB"",""C30"",""1"",""3"",""3"",""FKEY3"",""UNIQUEKEY"",""7""},"
59803,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,4314,,"            {"""",schema,""KT1"",""C30"","""",schema,""REFTAB"",""C30"",""1"",""3"",""3"",""FKEY2"",""UNIQUEKEY"",""7""},"
59804,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,4317,,"            {"""",schema,""REFTAB"",""DPRIM"","""",schema,""REFTAB"",""DFOR"",""1"",""3"",""3"",""FKEYSELF"",""PKEY_REFTAB"",""7""}};"
59805,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,4317,,"            {"""",schema,""REFTAB"",""DPRIM"","""",schema,""REFTAB"",""DFOR"",""1"",""3"",""3"",""FKEYSELF"",""PKEY_REFTAB"",""7""}};"
59806,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,4317,,"            {"""",schema,""REFTAB"",""DPRIM"","""",schema,""REFTAB"",""DFOR"",""1"",""3"",""3"",""FKEYSELF"",""PKEY_REFTAB"",""7""}};"
59807,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,4317,,"            {"""",schema,""REFTAB"",""DPRIM"","""",schema,""REFTAB"",""DFOR"",""1"",""3"",""3"",""FKEYSELF"",""PKEY_REFTAB"",""7""}};"
59808,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,4319,,"            {"""",schema,""KT1"",""VC10"","""",schema,""REFTAB2"",""T2_VC10"",""1"",""3"",""3"",""T2_FKEY1"",""PRIMKEY"",""7""},"
59809,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,4319,,"            {"""",schema,""KT1"",""VC10"","""",schema,""REFTAB2"",""T2_VC10"",""1"",""3"",""3"",""T2_FKEY1"",""PRIMKEY"",""7""},"
59810,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,4716,,"        ResultSet rs[] = getCrossReference("""",schema,""REFACTION1"","""",schema,""REFACTNONE"");"
59811,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,4824,,"                ""language java external name "" +"
59812,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,4825,,"                ""'org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.getpc'"" +"
59813,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,4826,,"        "" parameter style java""); "
59814,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,4870,,"                {"""",schema,""GETPCTEST1"",null,null,null,getpc,i(1),genid},"
59815,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,4886,,"                     {"""",schema,""GETPCTEST5"",null,null,null,foo,i(1),genid},"
59816,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,5242,,"            {null,schema,""F_GFC_1"","""",i(4),i(4),""INTEGER"",i(10),i(4),i(0),i(10),i(1),null,null,i(0),""YES"",genid,i(11),i(-1)},"
59817,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java,5337,,"        ResultSet   rs2 = dmd.getColumns( null, schema, ""T_JDBC41"", null );"
59818,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DaylightSavingTest.java,127,,"            assertTrue(""found only "" + i + "" rows"", rs.next());"
59819,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DaylightSavingTest.java,127,,"            assertTrue(""found only "" + i + "" rows"", rs.next());"
59820,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DboPowersTest.java,254,,"                "" user=""+getTestConfiguration().getUserName());"
59821,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DboPowersTest.java,264,,"            ds, ""connectionAttributes"", ""shutdown=true"");"
59822,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DboPowersTest.java,265,,"        JDBCDataSource.setBeanProperty(ds, ""user"", user);"
59823,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DboPowersTest.java,266,,"        JDBCDataSource.setBeanProperty(ds, ""password"", password);"
59824,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DboPowersTest.java,271,,"            if (""08006"".equals(e.getSQLState())) {"
59825,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/Derby2017LayerATest.java,94,,"            assertSQLState(""X0Y32"", sqle);"
59826,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/Derby2017LayerATest.java,255,,"                ""This is row 1"","
59827,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/Derby2017LayerATest.java,256,,"                ""This is row 2"","
59828,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/Derby2017LayerATest.java,257,,"                ""This is row 3"","
59829,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/Derby2017LayerATest.java,258,,"                ""This is row 4, a bit too long"","
59830,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/Derby2017LayerATest.java,259,,"                ""This is row 5, a bit too short"","
59831,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/Derby2017LayerATest.java,260,,"                ""This is row 6"","
59832,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/Derby2017LayerATest.java,261,,"                ""This is row 7"","
59833,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/Derby2017LayerATest.java,425,,"            assertSQLState(usingEmbedded() ? ""XSDA4"" : ""XN015"", sqle);"
59834,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/Derby5165Test.java,63,,"            test = TestConfiguration.singleUseDatabaseDecorator( test, ""d5165db"" );"
59835,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/Derby5165Test.java,64,,"            test = TestConfiguration.singleUseDatabaseDecorator( test, ""d5165db2"");"
59836,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/Derby5165Test.java,65,,"            test = TestConfiguration.singleUseDatabaseDecorator( test, ""d5165db3"" );"
59837,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/Derby5165Test.java,66,,"            test = TestConfiguration.singleUseDatabaseDecorator( test, ""d5165db4"");"
59838,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/Derby5165Test.java,81,,"        J2EEDataSource.setBeanProperty(xads, ""databaseName"", ""d5165db"");"
59839,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/Derby5165Test.java,92,,"                s.executeQuery(""select * from "" + tableName),"
59840,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/Derby5165Test.java,131,,"            fail(""expected a timeout"");"
59841,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/Derby5165Test.java,136,,"            assertSQLState(""40XL1"", sqle);"
59842,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/Derby5165Test.java,224,,"        assertLaunchedJUnitTestMethod(""org.apache.derbyTesting."" +"
59843,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DriverMgrAuthenticationTest.java,106,,"        String url2 = url + "";user="" + user + "";password="" + password;"
59844,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DriverMgrAuthenticationTest.java,106,,"        String url2 = url + "";user="" + user + "";password="" + password;"
59845,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DriverMgrAuthenticationTest.java,145,,"        "";shutdown=true"";"
59846,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DriverTest.java,67,,"        ""testcreatedb1"", "
59847,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DriverTest.java,113,,"        dbprops.setProperty(""derby.infolog.append"", ""true"");"
59848,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DriverTest.java,151,,"        String defaultdburl = url + "";create=true"";"
59849,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DriverTest.java,157,,"        props.put(""password"", ""testpass"");"
59850,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/DriverTest.java,347,,"        shutdownDB(url + "";shutdown=true"", null);"
59851,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/HoldabilityTest.java,267,,"            fail(""ResultSet concurrency downgraded to CONCUR_READ_ONLY"");"
59852,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/InternationalConnectTest.java,150,,"                throw new SQLException(""Failed to load JDBC driver '"" "
59853,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java,331,,"            conn.prepareStatement(""CREATE TABLE TAB1(COL1 INT NOT NULL)"");"
59854,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java,340,,"                assertSQLState(""08003"", e);"
59855,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java,342,,"                assertSQLState(""08006"", e);"
59856,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java,349,,"            fail(""SQLException of 08003 should be thrown!"");"
59857,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java,847,,"    	J2EEDataSource.setBeanProperty(xads,""databaseName"",dbName +"";create=true"");       "
59858,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java,1159,,"        String MapMapValue = ""0A000"";"
59859,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java,1175,,"        assertConnectionOK(expectedValues, ""DataSource"", ds.getConnection());"
59860,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java,1197,,"            expectedValues, ""ConnectionPoolDataSource"", pc.getConnection());"
59861,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java,1244,,"            expectedValues, ""XADataSource"", xac.getConnection());"
59862,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java,1382,,"                assertSQLState(""XCL16"", sqle);"
59863,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java,1796,,"        sru1.setCursorName(""SN1"");"
59864,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java,1810,,"        psParams.setCursorName(""params"");"
59865,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java,1828,,"        sru2.setCursorName(""OAK2"");"
59866,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java,2172,,"            CallableStatement cs = conn.prepareCall(""CALL TESTROUTINE.SLEEP(20000)"");"
59867,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java,2693,,"            assertSQLState(""XJ028"", e);"
59868,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java,2737,,"            {""08001"",""08001"",""08001"",""08001"","
59869,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java,2743,,"        cpds.setConnectionAttributes(""databaseName="" + dbName);"
59870,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java,2782,,"        xads.setConnectionAttributes(""databaseName=wombat"");"
59871,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java,2820,,"        JDBCDataSource.setBeanProperty(ds, ""attributesAsPassword"", Boolean.TRUE);"
59872,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java,2822,,"            ""XJ004"",""XJ004"",""XJ004"",""XJ028"","
59873,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java,2829,,"        JDBCDataSource.setBeanProperty(ds, ""connectionAttributes"", ""databaseName=kangaroo"");"
59874,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java,2838,,"        setDatabaseProperty(""derby.user.fred"", ""wilma"");"
59875,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java,2841,,"        setDatabaseProperty(""derby.connection.requireAuthentication"", ""true"");"
59876,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java,2868,,"        JDBCDataSource.setBeanProperty(ds, ""user"", ""fred"");"
59877,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java,2868,,"        JDBCDataSource.setBeanProperty(ds, ""user"", ""fred"");"
59878,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java,2869,,"        JDBCDataSource.setBeanProperty(ds, ""password"", ""databaseName="" + dbName + "";password=wilma"");"
59879,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java,2938,,"            ""08004"",""08004"",""08004"",""OK"","
59880,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java,3179,,"        JDBCDataSource.setBeanProperty(ds, ""description"", setDescription);"
59881,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java,3260,,"            ""select id from hold_30 for update"", ResultSet.TYPE_FORWARD_ONLY, "
59882,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java,3290,,"            conn.prepareStatement(""select id from hold_30"");"
59883,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java,3848,,"                fail ("" expected connection to fail, but was OK"");"
59884,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/LDAPAuthenticationTest.java,82,,"                ""LDAPAuthenticationTest requires property "" +"
59885,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/LDAPAuthenticationTest.java,149,,"        props.setProperty(""derby.user.Jamie"", ""theHooligan"");"
59886,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/LDAPAuthenticationTest.java,211,,"        assertInvalidLDAPDSConnectionFails(ds, ""Jamie"", ""theHooligan"");"
59887,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/LDAPAuthenticationTest.java,214,,"        assertInvalidLDAPDSConnectionFails(ds, ldapUser, ldapPassword + ""ish"");"
59888,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/LobStreamsTest.java,316,,"            ""SELECT c FROM testBlobX1 WHERE a = 1"");"
59889,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/LobStreamsTest.java,321,,"        assertTrue(""FAIL -- clob is NULL"", clob != null);"
59890,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/LobStreamsTest.java,331,,"            ""UPDATE testBlobX1 SET c = ? WHERE a = 1"");"
59891,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/LobStreamsTest.java,338,,"        assertTrue(""FAIL -- clob not found"", rs3.next());"
59892,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/LobStreamsTest.java,342,,"        assertEquals(""FAIL -- wrong clob length"", streamSize[1], new_length);"
59893,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/NullSQLTextTest.java,111,,"            assertSQLState(""XJ067"", e);"
59894,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/NullSQLTextTest.java,325,,"            fail(""Statement expected to fail"");"
59895,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,78,,"    private static  final   String  WONT_FIT = ""22003"";"
59896,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,98,,"           ""98"",""98"",""98"",""0x4"","
59897,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,99,,"           ""0x4"",""0x4"", ""2004-02-14"","
59898,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,100,,"           ""00:00:00"",""2004-02-14 00:00:00"",""98"",""0x4""};"
59899,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,402,,"            ps.setString(1, ""abc"");"
59900,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,422,,"        ps.setObject(2, ""AAAAA"", Types.VARCHAR);"
59901,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,486,,"        BigDecimal value = new BigDecimal(""123.45"");"
59902,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,507,,"            value = new BigDecimal(""2000"");"
59903,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,563,,"               {{""123.45"",""123.45"",""123.45"",""123""},"
59904,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,565,,"                {""2000.00"",""2000.0"",""2000.0"",""2000""},"
59905,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,567,,"                {""123.00"",""123.0"",""123.0"",""123""},"
59906,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,620,,"            s.execute(""DELETE FROM PM.TYPE_AS"");"
59907,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,709,,"                            boolean expectedConversionError = (""22018"".equals(sqle.getSQLState())|| "
59908,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,710,,"                                                               ""22007"".equals(sqle.getSQLState()) ||"
59909,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,711,,"                                                               ""22005"".equals(sqle.getSQLState()));"
59910,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,750,,"             ""language java\n"" +"
59911,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,751,,"             ""parameter style java\n"" +"
59912,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,752,,"             ""no sql\n"" +"
59913,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,753,,"             ""external name '"" + getClass().getName() + "".clobIn'\n"""
59914,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,765,,"        cs.setClob( 1, new HarmonySerialClob( ""ghi"" ) );"
59915,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,866,,"                    println( ""left[ "" + leftIdx+ "" ] = "" + leftC + "" but right[ "" + rightIdx + "" ] = "" + rightC );"
59916,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,1493,,"                        assertEquals(""0x4,0x3"", showFirstTwo(data));"
59917,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,1593,,"                        assertEquals(""2004-02-14 00:00:00.0"", ts.toString());"
59918,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,1864,,"            fail("" JDBC FAIL "" + SQLTypes[type] + "" "" + sqleResult);"
59919,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,1869,,"            if (""0A000"".equals(sqlState))"
59920,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,2156,,"                getValidValue(psq, jdbcTypes[type], ""setFloat"");"
59921,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,2200,,"                getValidValue(psq, jdbcTypes[type], ""setDouble"");"
59922,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,2245,,"                    getValidValue(psq, jdbcTypes[type], ""setBigDecimal"");"
59923,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,2374,,"                getValidValue(psq, jdbcTypes[type], ""setString"");"
59924,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,2493,,"                getValidValue(psq, jdbcTypes[type], ""setBytes"");"
59925,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,2579,,"                getValidValue(psq, jdbcTypes[type], ""setDate"");"
59926,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,2665,,"                getValidValue(psq, jdbcTypes[type], ""setTime"");"
59927,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,2749,,"                getValidValue(psq, jdbcTypes[type], ""setTimestamp"");"
59928,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,2845,,"                getValidValue(psq, jdbcTypes[type], ""setAsciiStream"");"
59929,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,3032,,"                getValidValue(psq, jdbcTypes[type], ""setCharacterStream"");"
59930,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,3119,,"                getValidValue(psq, jdbcTypes[type], ""setClob"");"
59931,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,3213,,"                getValidValue(psq, jdbcTypes[type], ""setBlob"");"
59932,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,4609,,"        assertGetState(rs, ""F01"", XXX_BYTE, ""22003"");"
59933,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,4610,,"        assertGetState(rs, ""F02"", XXX_BYTE, ""22003"");"
59934,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,4611,,"        assertGetState(rs, ""F03"", XXX_BYTE, ""22003"");"
59935,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,4612,,"        assertGetState(rs, ""F04"", XXX_BYTE, ""22003"");"
59936,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,4613,,"        assertGetState(rs, ""F05"", XXX_BYTE, ""22003"");"
59937,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,4614,,"        assertGetState(rs, ""F06"", XXX_BYTE, ""22003"");"
59938,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,4615,,"        assertGetState(rs, ""F07"", XXX_BYTE, ""22003"");"
59939,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMappingTest.java,5001,,"            ""delete from test6902 "" +"
59940,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMetaDataJdbc30Test.java,120,,"                                  		   ""language java external name "" +"
59941,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMetaDataJdbc30Test.java,121,,"                                  		   ""'org.apache.derbyTesting.functionTests."" +"
59942,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMetaDataJdbc30Test.java,123,,"                                   		   ""parameter style java"");"
59943,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMetaDataJdbc30Test.java,158,,"		assertEquals(""Unexpected parameter count"", 4, paramMetaData.getParameterCount());"
59944,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMetaDataJdbc30Test.java,163,,"		{""PARAMETER_NULLABLE"", ""true"", ""10"", ""0"", ""4"", ""INTEGER"", ""java.lang.Integer"", ""PARAMETER_MODE_IN""},"
59945,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMetaDataJdbc30Test.java,163,,"		{""PARAMETER_NULLABLE"", ""true"", ""10"", ""0"", ""4"", ""INTEGER"", ""java.lang.Integer"", ""PARAMETER_MODE_IN""},"
59946,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMetaDataJdbc30Test.java,163,,"		{""PARAMETER_NULLABLE"", ""true"", ""10"", ""0"", ""4"", ""INTEGER"", ""java.lang.Integer"", ""PARAMETER_MODE_IN""},"
59947,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMetaDataJdbc30Test.java,163,,"		{""PARAMETER_NULLABLE"", ""true"", ""10"", ""0"", ""4"", ""INTEGER"", ""java.lang.Integer"", ""PARAMETER_MODE_IN""},"
59948,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMetaDataJdbc30Test.java,163,,"		{""PARAMETER_NULLABLE"", ""true"", ""10"", ""0"", ""4"", ""INTEGER"", ""java.lang.Integer"", ""PARAMETER_MODE_IN""},"
59949,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMetaDataJdbc30Test.java,165,,"		{""PARAMETER_NULLABLE"", ""true"", ""10"", ""0"", ""4"", ""INTEGER"", ""java.lang.Integer"", ""PARAMETER_MODE_OUT""},"
59950,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMetaDataJdbc30Test.java,166,,"		{""PARAMETER_NULLABLE"", ""true"", ""10"", ""0"", ""4"", ""INTEGER"", ""java.lang.Integer"", ""PARAMETER_MODE_IN_OUT""}};"
59951,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMetaDataJdbc30Test.java,189,,"                {""PARAMETER_NULLABLE"", ""true"", ""31"", ""0"", ""3"", ""DECIMAL"", ""java.math.BigDecimal"", ""PARAMETER_MODE_OUT""},"
59952,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMetaDataJdbc30Test.java,189,,"                {""PARAMETER_NULLABLE"", ""true"", ""31"", ""0"", ""3"", ""DECIMAL"", ""java.math.BigDecimal"", ""PARAMETER_MODE_OUT""},"
59953,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMetaDataJdbc30Test.java,219,,"                {""PARAMETER_NULLABLE"", ""false"", ""5"", ""0"", ""1"", ""CHAR"", ""java.lang.String"", ""PARAMETER_MODE_IN""},"
59954,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMetaDataJdbc30Test.java,219,,"                {""PARAMETER_NULLABLE"", ""false"", ""5"", ""0"", ""1"", ""CHAR"", ""java.lang.String"", ""PARAMETER_MODE_IN""},"
59955,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMetaDataJdbc30Test.java,219,,"                {""PARAMETER_NULLABLE"", ""false"", ""5"", ""0"", ""1"", ""CHAR"", ""java.lang.String"", ""PARAMETER_MODE_IN""},"
59956,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMetaDataJdbc30Test.java,251,,"                {""PARAMETER_NULLABLE"", ""false"", ""128"", ""0"", ""12"", ""VARCHAR"", ""java.lang.String"", ""PARAMETER_MODE_IN""},"
59957,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMetaDataJdbc30Test.java,293,,"                {""PARAMETER_NULLABLE"", ""false"", ""1"", ""0"", ""16"", ""BOOLEAN"", ""java.lang.Boolean"", ""PARAMETER_MODE_IN""},"
59958,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ParameterMetaDataJdbc30Test.java,293,,"                {""PARAMETER_NULLABLE"", ""false"", ""1"", ""0"", ""16"", ""BOOLEAN"", ""java.lang.Boolean"", ""PARAMETER_MODE_IN""},"
59959,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/PoolDSAuthenticationTest.java,96,,"        JDBCDataSource.setBeanProperty(pds, ""databaseName"", dbName);"
59960,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/PoolDSAuthenticationTest.java,106,,"        JDBCDataSource.setBeanProperty(pds, ""user"", user);"
59961,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/PoolDSAuthenticationTest.java,107,,"        JDBCDataSource.setBeanProperty(pds, ""password"", password);"
59962,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/PoolDSAuthenticationTest.java,148,,"        JDBCDataSource.setBeanProperty(pds, ""shutdownDatabase"", ""shutdown"");"
59963,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/PoolDSAuthenticationTest.java,148,,"        JDBCDataSource.setBeanProperty(pds, ""shutdownDatabase"", ""shutdown"");"
59964,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/PoolXADSCreateShutdownDBTest.java,120,,"        assertSetAndGet(ds, dbName, ""shutdownDatabase"", ""shutdown"");"
59965,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/PoolXADSCreateShutdownDBTest.java,120,,"        assertSetAndGet(ds, dbName, ""shutdownDatabase"", ""shutdown"");"
59966,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/PoolXADSCreateShutdownDBTest.java,121,,"        assertSetAndGet(ds, dbName, ""createDatabase"", ""create"");"
59967,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/PoolXADSCreateShutdownDBTest.java,121,,"        assertSetAndGet(ds, dbName, ""createDatabase"", ""create"");"
59968,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/PoolXADSCreateShutdownDBTest.java,123,,"        assertNotSetAndGet(ds, dbName, ""shutdownDatabase"", ""boo"");"
59969,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/PoolXADSCreateShutdownDBTest.java,125,,"        assertNotSetAndGet(ds, dbName, ""shutdownDatabase"", ""false"");"
59970,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/PoolXADSCreateShutdownDBTest.java,270,,"        JDBCDataSource.setBeanProperty(ds, ""databaseName"", dbName);"
59971,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/PoolXADSCreateShutdownDBTest.java,273,,"                ds, ""ConnectionAttributes"", ""shutdown=true"");"
59972,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/PoolXADSCreateShutdownDBTest.java,273,,"                ds, ""ConnectionAttributes"", ""shutdown=true"");"
59973,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/PoolXADSCreateShutdownDBTest.java,281,,"                ds, ""ConnectionAttributes"", ""create=true"");"
59974,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/PoolXADSCreateShutdownDBTest.java,312,,"            fail(""expected an sqlexception "" + expectedSQLState);"
59975,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/PoolXADSCreateShutdownDBTest.java,326,,"        JDBCDataSource.setBeanProperty(ds, ""CreateDatabase"", ""create"");"
59976,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/PrepStmtMetaDataTest.java,116,,"        assertEquals(""C11"", rsmd.getColumnName(1));"
59977,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ProcedureTest.java,74,,"            fail(""executeQuery() didn't fail."");"
59978,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ProcedureTest.java,133,,"            fail(""executeUpdate() didn't fail."");"
59979,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ProcedureTest.java,148,,"            prepareStatement(""CALL RETRIEVE_DYNAMIC_RESULTS(?)"");"
59980,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ProcedureTest.java,337,,"        JDBC.assertEmpty(stmt.executeQuery(""SELECT * FROM SIMPLE_TABLE""));"
59981,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ProcedureTest.java,636,,"        Connection c = DriverManager.getConnection(""jdbc:default:connection"");"
59982,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ProcedureTest.java,1105,,"          ""PARAMETER STYLE JAVA EXTERNAL NAME '"" +"
59983,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ProcedureTest.java,1163,,"            rs1[0] = c.createStatement().executeQuery(""VALUES(1)"");"
59984,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ProcedureTest.java,1298,,"             ""firstt"","
59985,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ProcedureTest.java,1323,,"             ""second"","
59986,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/RelativeTest.java,57,,"		assertEquals(""work1"", rs.getString(""name""));"
59987,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/RelativeTest.java,57,,"		assertEquals(""work1"", rs.getString(""name""));"
59988,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/RelativeTest.java,171,,"				stmt.execute(""insert into testRelative values ("""
59989,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ResultSetJDBC30Test.java,78,,"            fail(""FAIL - Shouldn't reach here. Method not implemented"" +"
59990,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ResultSetJDBC30Test.java,79,,"                    "" yet."");"
59991,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ResultSetJDBC30Test.java,113,,"                fail(""FAIL - Shouldn't reach here. Method is being invoked"" +"
59992,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ResultSetJDBC30Test.java,114,,"                        "" on a read only resultset."");"
59993,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/ResultSetMiscTest.java,81,,"        assertEquals(""APP"", met.getSchemaName(1));"
59994,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/SURBaseTest.java,121,,"            assertEquals(""Record Count"", recordCount, nRecords);"
59995,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/SURBaseTest.java,161,,"        assertNotNull(""rs.getCursorName()"", rs.getCursorName());"
59996,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/SURQueryMixTest.java,155,,"        assertTrue(""Unexpected return from isBeforeFirst()"","
59997,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/SURQueryMixTest.java,177,,"        assertTrue(""Unexpected return from isAfterLast()"", rs.isAfterLast());"
59998,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/SURQueryMixTest.java,380,,"            assertTrue(""Unexpected return from absolute()"", rs.absolute(i));"
59999,./TargetProjects/derby/java/org.apache.derby.tests/org/apache/derbyTesting/functionTests/tests/jdbcapi/SURTest.java,159,,"        ResultSet rs = s.executeQuery(""select * from t1"");"
