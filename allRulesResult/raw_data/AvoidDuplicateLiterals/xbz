51000,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java,1738,,"        assertFiltering(filter, new File(""log.TXT""), false);"
51001,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java,1782,,"        assertFiltering(filter, new File(""Test.JAVA""), false);"
51002,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java,27,,"                ""test "" + testNumber + "" Filter(File) "" + filter.getClass().getName() + "" not "" + expected + "" for "" + file);"
51003,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java,27,,"                ""test "" + testNumber + "" Filter(File) "" + filter.getClass().getName() + "" not "" + expected + "" for "" + file);"
51004,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/filefilter/IOFileFilterAbstractTestCase.java,27,,"                ""test "" + testNumber + "" Filter(File) "" + filter.getClass().getName() + "" not "" + expected + "" for "" + file);"
51005,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java,40,,"                ""Filter(File) "" + filter.getClass().getName() + "" not "" + expected + "" for "" + file);"
51006,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java,40,,"                ""Filter(File) "" + filter.getClass().getName() + "" not "" + expected + "" for "" + file);"
51007,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java,71,,"        assertFiltering(filter, new File(""Test.java""), true);"
51008,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java,81,,"        assertFiltering(filter, new File(""test.java""), true);"
51009,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/filefilter/RegexFileFilterTestCase.java,82,,"        assertFiltering(filter, new File(""tEST.java""), false);"
51010,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/AutoCloseInputStreamTest.java,56,,"        assertTrue(closed, ""closed"");"
51011,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java,245,,"            assertEquals(ByteOrderMark.UTF_8, in.getBOM(), ""getBOM"");"
51012,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java,246,,"            assertTrue(in.hasBOM(), ""hasBOM()"");"
51013,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java,247,,"            assertTrue(in.hasBOM(ByteOrderMark.UTF_8), ""hasBOM(UTF-8)"");"
51014,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java,442,,"        final byte[] data = ""ABC"".getBytes(StandardCharsets.UTF_16BE);"
51015,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java,457,,"                fail(""Expected IllegalArgumentException"");"
51016,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java,490,,"        assumeTrue(Charset.isSupported(""UTF_32BE""));"
51017,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java,521,,"        assumeTrue(Charset.isSupported(""UTF_32LE""));"
51018,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java,107,,"        testBufferedRead(TEST_STRING, ""UTF-8"");"
51019,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java,235,,"        try (InputStream r = new CharSequenceInputStream(""test"", csName)) {"
51020,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java,45,,"        final Reader reader = new CharSequenceReader(""FooBar"");"
51021,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java,46,,"        checkRead(reader, ""Foo"");"
51022,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java,50,,"        final Reader subReader = new CharSequenceReader(""xFooBarx"", 1, 7);"
51023,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java,62,,"        checkRead(reader, ""Bar"");"
51024,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/CharacterFilterReaderIntPredicateTest.java,89,,"        final StringReader input = new StringReader(""ababcabcd"");"
51025,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java,187,,"            assertTrue(Comparable.class.isAssignableFrom(result), ""Assignable"");"
51026,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/QueueInputStreamTest.java,64,,"    @ParameterizedTest(name = ""inputData={0}"")"
51027,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/QueueInputStreamTest.java,65,,"    @MethodSource(""inputData"")"
51028,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java,85,,"        testWithSingleByteRead(TEST_STRING, ""UTF-8"");"
51029,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java,83,,"    @ParameterizedTest(name = ""BlockSize={0}"")"
51030,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java,84,,"    @MethodSource(""blockSizes"")"
51031,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamFile.java,52,,"        final Path sourcePath = TestResources.getPath(""test-file-utf8-win-linebr.bin"");"
51032,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamFile.java,66,,"                Arguments.of(""test-file-utf8-cr-only.bin"", ""UTF-8"", null, false, true),"
51033,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/SequenceReaderTest.java,61,,"            checkRead(reader, ""Foo"");"
51034,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/SequenceReaderTest.java,84,,"        try (final Reader reader = new SequenceReader(new StringReader(""Foo""), new StringReader(""Bar""))) {"
51035,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java,71,,"            fail(""Expected exception not thrown."");"
51036,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/TaggedReaderTest.java,69,,"            fail(""Expected exception not thrown."");"
51037,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java,191,,"        assertEquals(""Line one"", lines.get(0), ""1 line 1"");"
51038,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/TailerTest.java,257,,"        assertEquals(1 , listener.initialized, ""Expected init to be called"");"
51039,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/TeeInputStreamTest.java,50,,"        final InputStream input = new ByteArrayInputStream(""abc"".getBytes(ASCII));"
51040,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/TeeReaderTest.java,50,,"        final Reader input = new CharSequenceReader(""abc"");"
51041,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/UnsynchronizedByteArrayInputStreamTest.java,55,,"    @SuppressWarnings(""resource"") // not necessary to close these resources"
51042,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java,46,,"        assertEquals(""a\r\n\r\n"", roundtrip(""a\r\n\r\n""));"
51043,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java,51,,"        InputStream is = getXmlInputStream(""no-bom"", XML1, encoding, encoding);"
51044,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java,53,,"        assertEquals(xmlReader.getEncoding(), ""UTF-8"");"
51045,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java,109,,"        assertThrows(NullPointerException.class, () -> new XmlStreamReader((URLConnection) null, ""US-ASCII""));"
51046,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java,124,,"        testRawNoBomValid(""UTF-16BE"");"
51047,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java,129,,"        testRawNoBomValid(""UTF-16LE"");"
51048,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java,134,,"        testRawNoBomValid(""UTF-32BE"");"
51049,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java,139,,"        testRawNoBomValid(""UTF-32LE"");"
51050,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java,155,,"        if (!encoding.equals(""UTF-16"") && !encoding.equals(""UTF-32"")) {"
51051,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java,155,,"        if (!encoding.equals(""UTF-16"") && !encoding.equals(""UTF-32"")) {"
51052,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java,183,,"        testRawBomInvalid(""UTF-8-bom"", ""US-ASCII"", ""US-ASCII"");"
51053,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java,188,,"        testRawBomInvalid(""UTF-16BE-bom"", ""UTF-16BE"", ""UTF-16LE"");"
51054,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java,189,,"        testRawBomInvalid(""UTF-16LE-bom"", ""UTF-16LE"", ""UTF-16BE"");"
51055,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java,191,,"        testRawBomInvalid(""UTF-32BE-bom"", ""UTF-32BE"", ""UTF-32LE"");"
51056,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java,192,,"        testRawBomInvalid(""UTF-32LE-bom"", ""UTF-32LE"", ""UTF-32BE"");"
51057,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java,225,,"        testHttpValid(""application/xml"", ""UTF-8-bom"", ""UTF-8"", null);"
51058,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java,231,,"        testHttpValid(""application/xml;charset=UTF-16"", ""UTF-16BE-bom"", ""UTF-16BE"", null);"
51059,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java,249,,"        testHttpValid(""text/xml"", ""no-bom"", ""US-ASCII"", null);"
51060,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java,250,,"        testHttpValid(""text/xml;charset=UTF-8"", ""UTF-8-bom"", ""UTF-8"", ""UTF-8"");"
51061,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java,252,,"        testHttpValid(""text/xml;charset=UTF-16"", ""UTF-16BE-bom"", ""UTF-16BE"", null);"
51062,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java,255,,"        testHttpValid(""text/xml;charset=UTF-32"", ""UTF-32BE-bom"", ""UTF-32BE"", null);"
51063,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java,267,,"        testHttpInvalid(""text/xml;charset=UTF-16BE"", ""UTF-16BE-bom"", ""UTF-16BE"", null);"
51064,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java,273,,"        testHttpInvalid(""text/xml;charset=UTF-32BE"", ""UTF-32BE-bom"", ""UTF-32BE"", null);"
51065,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java,39,,"    private static final String APPXML         = ""application/xml"";"
51066,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java,58,,"        checkContentTypeEncoding(""UTF-16"", ""application/xml;charset=utf-16"");"
51067,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java,62,,"        checkContentTypeEncoding(""UTF-32"", ""application/xml;charset=utf-32"");"
51068,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java,130,,"        checkRawEncoding(""UTF-8"",    null,       null,       null,       null);"
51069,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java,131,,"        checkRawEncoding(""UTF-8"",    null,       ""UTF-16BE"", null,       null); /* why default & not Guess? */"
51070,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java,140,,"        checkRawEncoding(""UTF-16LE"", null,       ""UTF-16LE"", ""UTF-16"",   null);"
51071,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java,154,,"        testCalculateRawEncodingStandard(""UTF-8"",    ""UTF-32BE"", ""UTF-32LE"");"
51072,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java,154,,"        testCalculateRawEncodingStandard(""UTF-8"",    ""UTF-32BE"", ""UTF-32LE"");"
51073,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java,205,,"        builder.append(""RawEncoding: "").append(bomEnc).append(""], "");"
51074,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationMonitorTestCase.java,54,,"        assertEquals(10000, monitor.getInterval(), ""Interval"");"
51075,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java,97,,"        final File testDirA = new File(testDir, ""test-dir-A"");"
51076,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java,103,,"        final File testDirAFile1 = touch(new File(testDirA, ""A-file1.java""));"
51077,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java,105,,"        final File testDirAFile3 = touch(new File(testDirA, ""A-file3.java""));"
51078,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java,106,,"        File testDirAFile4 = touch(new File(testDirA, ""A-file4.java""));"
51079,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java,114,,"        assertTrue(listener.getCreatedFiles().contains(testDirAFile1), ""B testDirAFile1"");"
51080,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java,115,,"        assertFalse(listener.getCreatedFiles().contains(testDirAFile2), ""B testDirAFile2"");"
51081,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java,116,,"        assertTrue(listener.getCreatedFiles().contains(testDirAFile3), ""B testDirAFile3"");"
51082,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java,117,,"        assertTrue(listener.getCreatedFiles().contains(testDirAFile4), ""B testDirAFile4"");"
51083,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java,137,,"        assertTrue(listener.getDeletedFiles().contains(testDirAFile3), ""E testDirAFile3"");"
51084,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java,174,,"        assertFalse(testDirAFile1.exists(), ""B testDirAFile1 exists"");"
51085,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java,175,,"        assertTrue(testDirAFile2.exists(), ""B testDirAFile2 exists"");"
51086,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/monitor/FileAlterationObserverTestCase.java,176,,"        assertFalse(testDirAFile3.exists(), ""B testDirAFile3 exists"");"
51087,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/output/AppendableWriterTest.java,48,,"        final String testData = ""ABCD"";"
51088,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java,105,,"    @ParameterizedTest(name = ""[{index}] {0}"")"
51089,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java,106,,"    @MethodSource(""baosFactories"")"
51090,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java,43,,"            assertEquals(cos.getCount(), 20, ""CountingOutputStream.getCount()"");"
51091,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java,65,,"    @ParameterizedTest(name = ""initialBufferSize = {0}"")"
51092,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java,66,,"    @MethodSource(""data"")"
51093,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java,79,,"            fail(""Unexpected IOException"");"
51094,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/output/ProxyCollectionWriterTest.java,44,,"        @SuppressWarnings(""resource"") // not necessary to close this"
51095,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/output/ProxyCollectionWriterTest.java,49,,"            fail(""Expected "" + IOException.class.getName());"
51096,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java,39,,"            proxy.append(""ABC"");"
51097,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java,137,,"                        throw new UnsupportedEncodingException(""Bah"");"
51098,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/output/ProxyWriterTest.java,155,,"                assertThrows(UnsupportedEncodingException.class, () -> proxy.append(""ABCE""));"
51099,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/output/QueueOutputStreamTest.java,85,,"                    outputStream.write(""ABC"".getBytes(StandardCharsets.UTF_8));"
51100,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java,39,,"            writer.append(""Foo"");"
51101,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java,48,,"            writer.append(""Bar"");"
51102,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java,49,,"            assertEquals(""FooBar"", writer.toString());"
51103,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java,63,,"            fail(""Expected exception not thrown."");"
51104,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/output/TaggedWriterTest.java,63,,"            fail(""Expected exception not thrown."");"
51105,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/output/TeeWriterTest.java,49,,"            fail(""Expected "" + IOException.class.getName());"
51106,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/output/UncheckedFilterWriterTest.java,40,,"    @SuppressWarnings(""resource"")"
51107,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java,70,,"        testWithSingleByteWrite(TEST_STRING, ""UTF-8"");"
51108,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java,135,,"            out.write(""abc"".getBytes(StandardCharsets.US_ASCII));"
51109,./TargetProjects/commons-io/src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java,73,,"            effectiveEncoding = defaultEncoding == null ? ""UTF-8"" : defaultEncoding;"
51110,./TargetProjects/commons-jci/core/src/test/java/org/apache/commons/jci2/CompilingClassLoaderTestCase.java,63,,"                if (""jci2/Simple.java"".equals(resourcePath)) {"
51111,./TargetProjects/commons-jci/core/src/test/java/org/apache/commons/jci2/CompilingClassLoaderTestCase.java,128,,"        writeFile(""jci2/Simple.java"", ""Simple1"");"
51112,./TargetProjects/commons-jci/core/src/test/java/org/apache/commons/jci2/CompilingClassLoaderTestCase.java,141,,"        final Object simple = classloader.loadClass(""jci2.Simple"").newInstance();"
51113,./TargetProjects/commons-jci/core/src/test/java/org/apache/commons/jci2/CompilingClassLoaderTestCase.java,145,,"        final Object extended = classloader.loadClass(""jci2.Extended"").newInstance();"
51114,./TargetProjects/commons-jci/core/src/test/java/org/apache/commons/jci2/CompilingClassLoaderTestCase.java,146,,"        assertEquals(""Extended:Simple1"", extended.toString());"
51115,./TargetProjects/commons-jci/core/src/test/java/org/apache/commons/jci2/ReloadingClassLoaderTestCase.java,46,,"        clazzSimple1 = SimpleDump.dump(""Simple1"");"
51116,./TargetProjects/commons-jci/core/src/test/java/org/apache/commons/jci2/ReloadingClassLoaderTestCase.java,72,,"        writeFile(""jci2/Simple.class"", clazzSimple1);"
51117,./TargetProjects/commons-jci/core/src/test/java/org/apache/commons/jci2/ReloadingClassLoaderTestCase.java,75,,"        final Object simple = classloader.loadClass(""jci2.Simple"").newInstance();"
51118,./TargetProjects/commons-jci/core/src/test/java/org/apache/commons/jci2/classes/ExtendedDump.java,58,,"            mv.visitTypeInsn(NEW, ""java/lang/StringBuffer"");"
51119,./TargetProjects/commons-jci/core/src/test/java/org/apache/commons/jci2/compilers/AbstractCompilerTestCase.java,55,,"                    put(""jci2/Simple.java"", ("
51120,./TargetProjects/commons-jci/core/src/test/java/org/apache/commons/jci2/compilers/AbstractCompilerTestCase.java,56,,"                        ""package jci2;\n"" +"
51121,./TargetProjects/commons-jci/core/src/test/java/org/apache/commons/jci2/compilers/AbstractCompilerTestCase.java,57,,"                        ""public class Simple {\n"" +"
51122,./TargetProjects/commons-jci/core/src/test/java/org/apache/commons/jci2/compilers/AbstractCompilerTestCase.java,58,,"                        ""  public String toString() {\n"" +"
51123,./TargetProjects/commons-jci/core/src/test/java/org/apache/commons/jci2/compilers/AbstractCompilerTestCase.java,59,,"                        ""    return \""Simple\"";\n"" +"
51124,./TargetProjects/commons-jci/core/src/test/java/org/apache/commons/jci2/compilers/AbstractCompilerTestCase.java,60,,"                        ""  }\n"" +"
51125,./TargetProjects/commons-jci/core/src/test/java/org/apache/commons/jci2/compilers/AbstractCompilerTestCase.java,83,,"        final byte[] clazzBytes = store.read(""jci2/Simple.class"");"
51126,./TargetProjects/commons-jci/core/src/test/java/org/apache/commons/jci2/readers/ResourceReaderTestCase.java,29,,"        writeFile(""test"", ""test"");"
51127,./TargetProjects/commons-jci/core/src/test/java/org/apache/commons/jci2/stores/ResourceStoreTestCase.java,50,,"        pStore.write(""key"", data);"
51128,./TargetProjects/commons-jci/fam/src/test/java/org/apache/commons/jci2/monitor/FilesystemAlterationMonitorTestCase.java,170,,"        writeFile(""file"", ""file"");"
51129,./TargetProjects/commons-jci/fam/src/test/java/org/apache/commons/jci2/monitor/FilesystemAlterationMonitorTestCase.java,212,,"        createDirectory(""dir"");"
51130,./TargetProjects/commons-jcs/auxiliary-builds/javagroups/src/test/org/apache/commons/jcs/auxiliary/javagroups/JavaGroupsCacheTest.java,50,,"        CacheAccess one = new CacheAccess( manager1.getCache( ""testCache"" ) );"
51131,./TargetProjects/commons-jcs/auxiliary-builds/javagroups/src/test/org/apache/commons/jcs/auxiliary/javagroups/JavaGroupsCacheWithGetTest.java,44,,"        CacheAccess one = new CacheAccess( manager1.getCache( ""testCache"" ) );"
51132,./TargetProjects/commons-jcs/commons-jcs-core/src/main/java/org/apache/commons/jcs3/auxiliary/remote/http/client/RemoteHttpCacheClient.java,215,,"            final String message = ""The Remote Http Client is not initialized.  Cannot process request."";"
51133,./TargetProjects/commons-jcs/commons-jcs-core/src/main/java/org/apache/commons/jcs3/auxiliary/remote/server/RegistryKeepAliveRunner.java,111,,"                cacheEventLogger.logApplicationEvent( ""RegistryKeepAliveRunner"", ""createRegistry"","
51134,./TargetProjects/commons-jcs/commons-jcs-core/src/main/java/org/apache/commons/jcs3/auxiliary/remote/server/RemoteCacheServer.java,331,,"                cacheEventLogger.logError( ""RemoteCacheServer"", ICacheEventLogger.UPDATE_EVENT, e.getMessage()"
51135,./TargetProjects/commons-jcs/commons-jcs-core/src/main/java/org/apache/commons/jcs3/auxiliary/remote/server/RemoteCacheServerFactory.java,185,,"                cacheEventLogger.logApplicationEvent( ""RegistryKeepAliveRunner"", ""Naming.lookup"", message );"
51136,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/ConcurrentRemovalLoadTest.java,43,,"        suite.addTest( new RemovalTestUtil( ""testRemoveCache1"" )"
51137,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/JCSRemovalSimpleConcurrentTest.java,78,,"            jcs.put( ""key:"" + i + "":anotherpart"", ""data"" + i );"
51138,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/JCSRemovalSimpleConcurrentTest.java,78,,"            jcs.put( ""key:"" + i + "":anotherpart"", ""data"" + i );"
51139,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/JCSRemovalSimpleConcurrentTest.java,108,,"            jcs.put( i + "":key"", ""data"" + i );"
51140,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/JCSThrashTest.java,83,,"        final String key = ""key"";"
51141,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/JCSvsHashtablePerformanceTest.java,107,,"                    cache.put( ""key:"" + i, ""data"" + i );"
51142,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/JCSvsHashtablePerformanceTest.java,113,,"                System.out.println( name + "" put time for "" + tries + "" = "" + time + ""; millis per = "" + tPer );"
51143,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/JCSvsHashtablePerformanceTest.java,113,,"                System.out.println( name + "" put time for "" + tries + "" = "" + time + ""; millis per = "" + tPer );"
51144,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/RemovalTestUtil.java,61,,"            jcs.put( i + "":key"", ""data"" + i );"
51145,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/TestTCPLateralCache.java,119,,"            jcs.put( i + "":key"", region + "" data "" + i );"
51146,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/ZeroSizeCacheUnitTest.java,63,,"            jcs.put( i + "":key"", ""data"" + i );"
51147,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/access/CacheAccessUnitTest.java,52,,"        final CacheAccess<String, String> access = JCS.getInstance( ""test"" );"
51148,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/access/CacheAccessUnitTest.java,53,,"        assertNotNull( ""We should have an access class"", access );"
51149,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/access/CacheAccessUnitTest.java,198,,"        assertNotNull( ""value four"", suppliedValue1);"
51150,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/access/GroupCacheAccessUnitTest.java,44,,"        final GroupCacheAccess<String, String> access = JCS.getGroupCacheInstance( ""test"" );"
51151,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/access/GroupCacheAccessUnitTest.java,45,,"        assertNotNull( ""We should have an access class"", access );"
51152,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/access/GroupCacheAccessUnitTest.java,48,,"        final String group = ""mygroup"";"
51153,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/access/GroupCacheAccessUnitTest.java,49,,"        final String value = ""myvalue"";"
51154,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/access/GroupCacheAccessUnitTest.java,54,,"        assertEquals( ""Wrong value returned."", value, returnedValue1 );"
51155,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/access/SystemPropertyUnitTest.java,51,,"        System.getProperties().setProperty( ""MY_SYSTEM_PROPERTY_DISK_DIR"", ""system_set"" );"
51156,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/access/TestCacheAccess.java,126,,"                    p( ""---got attrNames for "" + groupName + "" in "" + String.valueOf( n_end - n_start ) + "" millis ---"" );"
51157,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/access/TestCacheAccess.java,126,,"                    p( ""---got attrNames for "" + groupName + "" in "" + String.valueOf( n_end - n_start ) + "" millis ---"" );"
51158,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/access/TestCacheAccess.java,196,,"                            cache_control.put( ""key"" + n, ""data"" + n + "" put from ta = junk"", attrp );"
51159,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/access/TestCacheAccess.java,199,,"                        p( ""---put "" + num + "" in "" + String.valueOf( n_end - n_start ) + "" millis ---"" );"
51160,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/access/TestCacheAccess.java,375,,"            p( ""---got "" + key + "" from group "" + group + "" in "" + String.valueOf( n_end - n_start ) + "" millis ---"" );"
51161,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/admin/AdminBeanUnitTest.java,68,,"        final String regionName = ""myRegion"";"
51162,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/admin/AdminBeanUnitTest.java,71,,"        cache.put( ""key"", ""value"" );"
51163,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/admin/CountingStreamUnitTest.java,45,,"        assertEquals( ""Wrong number of bytes written."", 1, out.getCount() );"
51164,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/AbstractDiskCacheUnitTest.java,61,,"        final String key = ""myKey"";"
51165,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/AbstractDiskCacheUnitTest.java,62,,"        final String value = ""myValue"";"
51166,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/block/BlockDiskCacheConcurrentUnitTest.java,156,,"            jcs.put( i + "":key"", region + "" data "" + i );"
51167,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/block/BlockDiskCacheConcurrentUnitTest.java,156,,"            jcs.put( i + "":key"", region + "" data "" + i );"
51168,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/block/BlockDiskCacheSameRegionConcurrentUnitTest.java,79,,"                this.runTestForRegion( ""blockRegion4"", 0, 200 );"
51169,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/block/BlockDiskCacheSameRegionConcurrentUnitTest.java,145,,"            jcs.put( i + "":key"", region + "" data "" + i + ""-"" + region );"
51170,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/block/BlockDiskCacheUnitTestAbstract.java,52,,"        cattr.setDiskPath(""target/test-sandbox/BlockDiskCacheUnitTest"");"
51171,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/block/BlockDiskCacheUnitTestAbstract.java,58,,"            diskCache.update(new CacheElement<>(cacheName, i + "":key"", cacheName + "" data "" + i));"
51172,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/block/BlockDiskCacheUnitTestAbstract.java,148,,"        assertEquals(""wrong string after retrieval"", string, result);"
51173,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/block/BlockDiskCacheUnitTestAbstract.java,201,,"        String string = ""IÒtÎrn‚tiÙn‡lizÊti¯n"";"
51174,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/block/BlockDiskUnitTest.java,94,,"        assertEquals( ""Wrong number of blocks recorded."", 1, disk.getNumberOfBlocks() );"
51175,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/block/BlockDiskUnitTest.java,95,,"        assertEquals( ""Wrong number of blocks returned."", 1, blocks.length );"
51176,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/block/BlockDiskUnitTest.java,96,,"        assertEquals( ""Wrong block returned."", 0, blocks[0] );"
51177,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/block/BlockDiskUnitTest.java,138,,"        assertEquals( ""Wrong item retured."", new byte[bytes].length, result.length );"
51178,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/block/HugeQuantityBlockDiskCacheLoadTest.java,58,,"        System.out.println( ""--------------------------"" );"
51179,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/indexed/IndexDiskCacheCountUnitTest.java,54,,"		            final ICacheElement<String, String> element = new CacheElement<>( ""testRecycleBin"", ""key:"" + test[i], test[i] );"
51180,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/indexed/IndexDiskCacheSizeUnitTest.java,55,,"		            final ICacheElement<String, DiskTestObject> element = new CacheElement<>( ""testRecycleBin"", ""key:"" + test[i], value);"
51181,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/indexed/IndexDiskCacheUnitTestAbstract.java,60,,"        cattr.setDiskPath(""target/test-sandbox/IndexDiskCacheUnitTest"");"
51182,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/indexed/IndexDiskCacheUnitTestAbstract.java,70,,"            final ICacheElement<String, String> element = new CacheElement<>(""testSimplePutAndGet"", ""key:"" + i, ""data:"" + i);"
51183,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/indexed/IndexDiskCacheUnitTestAbstract.java,70,,"            final ICacheElement<String, String> element = new CacheElement<>(""testSimplePutAndGet"", ""key:"" + i, ""data:"" + i);"
51184,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/indexed/IndexDiskCacheUnitTestAbstract.java,148,,"        cattr.setDiskPath(""target/test-sandbox/UnitTest"");"
51185,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/indexed/IndexDiskCacheUnitTestAbstract.java,408,,"            final ICacheElement<String, String> element = new CacheElement<>(""testRemove_PartialKey"", i + "":key"", ""data:"""
51186,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/indexed/IndexDiskCacheUnitTestAbstract.java,515,,"        cattr.setDiskPath(""target/test-sandbox/IndexDiskCacheUnitTestCEL"");"
51187,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/indexed/IndexDiskCacheUnitTestAbstract.java,522,,"        final ICacheElement<String, String> item = new CacheElement<>(""region"", ""key"", ""value"");"
51188,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/indexed/IndexDiskCacheUnitTestAbstract.java,530,,"        assertEquals(""Start should have been called."", 1, cacheEventLogger.startICacheEventCalls);"
51189,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/indexed/IndexDiskCacheUnitTestAbstract.java,531,,"        assertEquals(""End should have been called."", 1, cacheEventLogger.endICacheEventCalls);"
51190,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/indexed/IndexDiskCacheUnitTestAbstract.java,811,,"        final String key = ""myKey"";"
51191,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/indexed/IndexDiskCacheUnitTestAbstract.java,812,,"        final String value = ""myValue"";"
51192,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/indexed/IndexDiskCacheUnitTestAbstract.java,820,,"        assertNotNull(""Should have a result"", result);"
51193,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/indexed/IndexedDiskCacheConcurrentNoDeadLockUnitTest.java,76,,"                this.runTestForRegion( ""indexedRegion4"", 1, 200, 1 );"
51194,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/indexed/IndexedDiskCacheConcurrentUnitTest.java,149,,"            jcs.put( i + "":key"", region + "" data "" + i );"
51195,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/indexed/IndexedDiskCacheConcurrentUnitTest.java,149,,"            jcs.put( i + "":key"", region + "" data "" + i );"
51196,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/indexed/IndexedDiskCacheKeyStoreUnitTest.java,62,,"            final ICacheElement<String, String> element = new CacheElement<>( cattr.getCacheName(), ""key:"" + i, ""data:"" + i );"
51197,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/indexed/IndexedDiskCacheKeyStoreUnitTest.java,62,,"            final ICacheElement<String, String> element = new CacheElement<>( cattr.getCacheName(), ""key:"" + i, ""data:"" + i );"
51198,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/indexed/IndexedDiskCacheNoMemoryUnitTest.java,137,,"            jcs.put( i + "":key"", region + "" data "" + i );"
51199,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/indexed/IndexedDiskCacheSameRegionConcurrentUnitTest.java,77,,"                this.runTestForRegion( ""indexedRegion4"", 0, 200 );"
51200,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/indexed/IndexedDiskCacheSameRegionConcurrentUnitTest.java,172,,"            jcs.put( i + "":key"", region + "" data "" + i );"
51201,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/indexed/LRUMapSizeVsCount.java,128,,"                    cacheCount.put( ""key:"" + i,  new IndexedDiskElementDescriptor(i, i) );"
51202,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/indexed/LRUMapSizeVsCount.java,135,,"                System.out.println( cacheName + "" put time for "" + tries + "" = "" + time + ""; millis per = "" + tPer );"
51203,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/indexed/LRUMapSizeVsCount.java,135,,"                System.out.println( cacheName + "" put time for "" + tries + "" = "" + time + ""; millis per = "" + tPer );"
51204,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/indexed/LRUMapSizeVsCount.java,200,,"        System.out.println( cache2Name.trim() + "" puts took "" + ratioPut + "" times the "" + cacheName.trim() + "", the goal is <"" + targetPut"
51205,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/indexed/LRUMapSizeVsCount.java,200,,"        System.out.println( cache2Name.trim() + "" puts took "" + ratioPut + "" times the "" + cacheName.trim() + "", the goal is <"" + targetPut"
51206,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/jdbc/JDBCDiskCacheSharedPoolUnitTest.java,97,,"            jcs.put( i + "":key"", region + "" data "" + i );"
51207,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/jdbc/JDBCDiskCacheShrinkUnitTest.java,99,,"            jcsExpire.put( i + "":key"", regionExpire + "" data "" + i );"
51208,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/jdbc/JDBCDiskCacheShrinkUnitTest.java,99,,"            jcsExpire.put( i + "":key"", regionExpire + "" data "" + i );"
51209,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/jdbc/JDBCDiskCacheUnitTest.java,100,,"            jcs.put( i + "":key"", region + "" data "" + i );"
51210,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/jdbc/hsql/HSQLDiskCacheConcurrentUnitTest.java,121,,"            jcs.put( i + "":key"", region + "" data "" + i );"
51211,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/jdbc/hsql/HSQLDiskCacheUnitTest.java,66,,"            jcs.put( i + "":key"", region + "" data "" + i );"
51212,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/jdbc/hsql/HSQLDiskCacheUnitTest.java,66,,"            jcs.put( i + "":key"", region + "" data "" + i );"
51213,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/jdbc/mysql/MySQLDiskCacheHsqlBackedUnitTest.java,105,,"            jcs.put( i + "":key"", region + "" data "" + i );"
51214,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/disk/jdbc/mysql/MySQLDiskCacheHsqlBackedUnitTest.java,105,,"            jcs.put( i + "":key"", region + "" data "" + i );"
51215,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/lateral/LateralCacheNoWaitFacadeUnitTest.java,43,,"        cattr.setCacheName( ""testCache1"" );"
51216,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/lateral/LateralCacheNoWaitFacadeUnitTest.java,54,,"        assertTrue( ""Should be in the list."", facade.containsNoWait( noWait ) );"
51217,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/lateral/socket/tcp/TestTCPLateralUnitTest.java,70,,"        JCS.getInstance( ""test"" );"
51218,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/lateral/socket/tcp/TestTCPLateralUnitTest.java,112,,"        lattr.setTransmissionTypeName( ""TCP"" );"
51219,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/lateral/socket/tcp/TestTCPLateralUnitTest.java,130,,"            final ICacheElement<String, String> element = new CacheElement<>( ""test"", ""key"" + i, ""value1"" );"
51220,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/lateral/socket/tcp/TestTCPLateralUnitTest.java,130,,"            final ICacheElement<String, String> element = new CacheElement<>( ""test"", ""key"" + i, ""value1"" );"
51221,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/remote/RemoteCacheNoWaitUnitTest.java,54,,"        final ICacheElement<String, String> element = new CacheElement<>( ""testUpdate"", ""key"", ""value"" );"
51222,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/remote/RemoteCacheNoWaitUnitTest.java,54,,"        final ICacheElement<String, String> element = new CacheElement<>( ""testUpdate"", ""key"", ""value"" );"
51223,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/remote/RemoteCacheNoWaitUnitTest.java,54,,"        final ICacheElement<String, String> element = new CacheElement<>( ""testUpdate"", ""key"", ""value"" );"
51224,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/remote/RemoteCacheUnitTest.java,77,,"        final ICacheElement<String, String> element = new CacheElement<>( cacheName, ""key"", ""value"" );"
51225,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/remote/RemoteCacheUnitTest.java,140,,"        assertEquals( ""Start should have been called."", 1, cacheEventLogger.startICacheEventCalls );"
51226,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/remote/RemoteCacheUnitTest.java,141,,"        assertEquals( ""End should have been called."", 1, cacheEventLogger.endICacheEventCalls );"
51227,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/remote/http/client/RemoteHttpCacheClientUnitTest.java,54,,"        final String cacheName = ""test"";"
51228,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/remote/http/client/RemoteHttpCacheClientUnitTest.java,55,,"        final String key = ""key"";"
51229,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/remote/http/client/RemoteHttpCacheClientUnitTest.java,63,,"        assertNull( ""Wrong result."", result );"
51230,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/remote/http/client/RemoteHttpCacheClientUnitTest.java,64,,"        assertEquals( ""Wrong type."", RemoteRequestType.GET, mockDispatcher.lastRemoteCacheRequest"
51231,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/remote/http/client/RemoteHttpCacheClientUnitTest.java,86,,"        final ICacheElement<String, String> expected = new CacheElement<>( cacheName, key, ""value"" );"
51232,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/remote/http/server/RemoteHttpCacheServiceUnitTest.java,58,,"        assertEquals( ""Start should have been called."", 1, cacheEventLogger.startICacheEventCalls );"
51233,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/remote/http/server/RemoteHttpCacheServiceUnitTest.java,59,,"        assertEquals( ""End should have been called."", 1, cacheEventLogger.endICacheEventCalls );"
51234,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/remote/http/server/RemoteHttpCacheServiceUnitTest.java,79,,"        server.get( ""region"", ""key"" );"
51235,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/remote/http/server/RemoteHttpCacheServletUnitTest.java,74,,"        assertNotNull( ""Should have a result."", result );"
51236,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/remote/http/server/RemoteHttpCacheServletUnitTest.java,82,,"        final String cacheName = ""test"";"
51237,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/remote/server/BasicRemoteCacheClientServerUnitTest.java,81,,"            final InetAddress lh = InetAddress.getByName(""localhost"");"
51238,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/remote/server/BasicRemoteCacheClientServerUnitTest.java,158,,"        final ICacheElement<String, String> element = new CacheElement<>(cache.getCacheName(), ""key"", ""value"");"
51239,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/remote/server/BasicRemoteCacheClientServerUnitTest.java,158,,"        final ICacheElement<String, String> element = new CacheElement<>(cache.getCacheName(), ""key"", ""value"");"
51240,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/remote/server/BasicRemoteCacheClientServerUnitTest.java,165,,"            assertEquals(""Cache is alive"", CacheStatus.ALIVE, cache.getStatus());"
51241,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/remote/server/BasicRemoteCacheClientServerUnitTest.java,166,,"            assertEquals(""Wrong number of puts"", 1, server.getPutCount() - numPutsPrior);"
51242,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/remote/server/RemoteCacheServerUnitTest.java,94,,"        assertEquals( ""Wrong listener id."", 1, mockListener1.getListenerId() );"
51243,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/remote/server/RemoteCacheServerUnitTest.java,96,,"        assertEquals( ""Wrong ip."", expectedIp1, server.getExtraInfoForRequesterId( 1 ) );"
51244,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/remote/server/RemoteCacheServerUnitTest.java,176,,"        assertEquals( ""Wrong number of listeners."", 2, server.getCacheListeners( cacheName ).eventQMap.size() );"
51245,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/remote/server/RemoteCacheServerUnitTest.java,361,,"        final ICacheElement<String, String> item = new CacheElement<>( ""region"", ""key"", ""value"" );"
51246,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/remote/server/RemoteCacheServerUnitTest.java,367,,"        assertEquals( ""Start should have been called."", 1, cacheEventLogger.startICacheEventCalls );"
51247,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/remote/server/RemoteCacheServerUnitTest.java,368,,"        assertEquals( ""End should have been called."", 1, cacheEventLogger.endICacheEventCalls );"
51248,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/remote/util/RemoteCacheRequestFactoryUnitTest.java,40,,"        final String cacheName = ""test"";"
51249,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/remote/util/RemoteCacheRequestFactoryUnitTest.java,49,,"        assertNotNull( ""Should have a result"", result );"
51250,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/remote/util/RemoteCacheRequestFactoryUnitTest.java,50,,"        assertEquals( ""Wrong cacheName"", cacheName, result.getCacheName() );"
51251,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/auxiliary/remote/util/RemoteCacheRequestFactoryUnitTest.java,51,,"        assertEquals( ""Wrong type"", RemoteRequestType.GET, result.getRequestType() );"
51252,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/engine/EventQueueConcurrentLoadTest.java,152,,"        queue = new CacheEventQueue<>( listen, 1L, ""testCache1"", maxFailure, waitBeforeRetry );"
51253,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/engine/control/CacheManagerStatsUnitTest.java,46,,"        cache.get( ""testKey"" );"
51254,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/engine/control/CompositeCacheDiskUsageUnitTest.java,112,,"        final ICacheElement<String, String> inputElement = new CacheElement<>( CACHE_NAME, ""key"", ""value"" );"
51255,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/engine/control/CompositeCacheDiskUsageUnitTest.java,112,,"        final ICacheElement<String, String> inputElement = new CacheElement<>( CACHE_NAME, ""key"", ""value"" );"
51256,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/engine/control/CompositeCacheDiskUsageUnitTest.java,118,,"        assertEquals( ""Wrong number of calls to the disk cache update."", 1, mock.updateCount );"
51257,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/engine/control/CompositeCacheDiskUsageUnitTest.java,119,,"        assertEquals( ""Wrong element updated."", inputElement, mock.lastUpdatedItem );"
51258,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/engine/control/event/SimpleEventHandlingUnitTest.java,70,,"            jcs.put( i + "":key"", ""data"" + i );"
51259,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/engine/control/event/SimpleEventHandlingUnitTest.java,70,,"            jcs.put( i + "":key"", ""data"" + i );"
51260,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/engine/control/event/SimpleEventHandlingUnitTest.java,110,,"            + ""] does not equal the number expected."", meh.getSpoolNoDiskCount() >= items );"
51261,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/engine/memory/fifo/FIFOMemoryCacheUnitTest.java,57,,"            final CacheElement<String, String> element = new CacheElement<>( cacheName, ""key"" + i, ""value"" + i );"
51262,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/engine/memory/lru/LHMLRUMemoryCacheConcurrentUnitTest.java,124,,"            final ICacheElement<String, String> ice = new CacheElement<>( cache.getCacheName(), i + "":key"", region + "" data "" + i );"
51263,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/engine/memory/lru/LHMLRUMemoryCacheUnitTest.java,80,,"            cache.put( i + "":key"", ""myregion"" + "" data "" + i );"
51264,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/engine/memory/lru/LHMLRUMemoryCacheUnitTest.java,80,,"            cache.put( i + "":key"", ""myregion"" + "" data "" + i );"
51265,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/engine/memory/lru/LHMLRUMemoryCacheUnitTest.java,80,,"            cache.put( i + "":key"", ""myregion"" + "" data "" + i );"
51266,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/engine/memory/lru/LHMLRUMemoryCacheUnitTest.java,87,,"            assertNull( ""Should not have value for key ["" + i + "":key"" + ""] in the cache."" + cache.getStats(), value );"
51267,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/engine/memory/lru/LHMLRUMemoryCacheUnitTest.java,87,,"            assertNull( ""Should not have value for key ["" + i + "":key"" + ""] in the cache."" + cache.getStats(), value );"
51268,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/engine/memory/lru/LRUMemoryCacheConcurrentUnitTest.java,123,,"            final ICacheElement<String, String> ice = new CacheElement<>( cache.getCacheName(), i + "":key"", region + "" data "" + i );"
51269,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/engine/memory/mru/LRUvsMRUPerformanceTest.java,111,,"                    cache.put( ""key:"" + i, ""data"" + i );"
51270,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/engine/memory/mru/LRUvsMRUPerformanceTest.java,117,,"                System.out.println( name + "" put time for "" + tries + "" = "" + time + ""; millis per = "" + tPer );"
51271,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/engine/memory/mru/LRUvsMRUPerformanceTest.java,117,,"                System.out.println( name + "" put time for "" + tries + "" = "" + time + ""; millis per = "" + tPer );"
51272,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/engine/memory/mru/MRUMemoryCacheUnitTest.java,73,,"        final CacheAccess<String, String> cache = JCS.getInstance( ""testPutGetThroughHub"" );"
51273,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/engine/memory/mru/MRUMemoryCacheUnitTest.java,80,,"            cache.put( i + "":key"", ""myregion"" + "" data "" + i );"
51274,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/engine/memory/mru/MRUMemoryCacheUnitTest.java,80,,"            cache.put( i + "":key"", ""myregion"" + "" data "" + i );"
51275,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/engine/memory/mru/MRUMemoryCacheUnitTest.java,80,,"            cache.put( i + "":key"", ""myregion"" + "" data "" + i );"
51276,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/engine/memory/mru/MRUMemoryCacheUnitTest.java,87,,"            assertNull( ""Should not have value for key ["" + i + "":key"" + ""] in the cache."" + cache.getStats(), value );"
51277,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/engine/memory/mru/MRUMemoryCacheUnitTest.java,87,,"            assertNull( ""Should not have value for key ["" + i + "":key"" + ""] in the cache."" + cache.getStats(), value );"
51278,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/engine/memory/shrinking/ShrinkerThreadUnitTest.java,50,,"        cacheAttr.setCacheName(""testRegion"");"
51279,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/engine/memory/shrinking/ShrinkerThreadUnitTest.java,56,,"        final String key = ""key"";"
51280,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/engine/memory/shrinking/ShrinkerThreadUnitTest.java,57,,"        final String value = ""value"";"
51281,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/engine/memory/soft/SoftReferenceMemoryCacheUnitTest.java,89,,"            cache.put( i + "":key"", ""myregion"" + "" data "" + i );"
51282,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/engine/memory/soft/SoftReferenceMemoryCacheUnitTest.java,89,,"            cache.put( i + "":key"", ""myregion"" + "" data "" + i );"
51283,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/engine/memory/soft/SoftReferenceMemoryCacheUnitTest.java,89,,"            cache.put( i + "":key"", ""myregion"" + "" data "" + i );"
51284,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/utils/serialization/SerializerUnitTest.java,84,,"            jcs1.put( ""key:"" + i, ""data"" + i );"
51285,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/utils/struct/DoubleLinkedListUnitTest.java,36,,"        final String payload1 = ""payload1"";"
51286,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/utils/struct/DoubleLinkedListUnitTest.java,43,,"        assertEquals( ""Wrong last"", node1, list.getLast() );"
51287,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/utils/struct/DoubleLinkedListUnitTest.java,55,,"        final String payload2 = ""payload2"";"
51288,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/utils/struct/DoubleLinkedListUnitTest.java,85,,"        assertEquals( ""Wrong size"", 2, list.size() );"
51289,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/utils/struct/DoubleLinkedListUnitTest.java,87,,"        assertEquals( ""Wrong first"", node2, list.getFirst() );"
51290,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/utils/struct/JCSvsCommonsLRUMapPerformanceTest.java,100,,"                    cache.put( ""key:"" + i, ""data"" + i );"
51291,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/utils/struct/JCSvsCommonsLRUMapPerformanceTest.java,106,,"                System.out.println( name + "" put time for "" + tries + "" = "" + time + ""; millis per = "" + tPer );"
51292,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/utils/struct/JCSvsCommonsLRUMapPerformanceTest.java,106,,"                System.out.println( name + "" put time for "" + tries + "" = "" + time + ""; millis per = "" + tPer );"
51293,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/utils/struct/LRUMapConcurrentUnitTest.java,148,,"            map.put( i + "":key"", ""data"" + i );"
51294,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/utils/struct/LRUMapConcurrentUnitTest.java,148,,"            map.put( i + "":key"", ""data"" + i );"
51295,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/utils/struct/LRUMapConcurrentUnitTest.java,154,,"            assertNotNull( ""["" + i + "":key] should not be null"", res );"
51296,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/utils/struct/LRUMapPerformanceTest.java,96,,"                    cache.put( ""key:"" + i, ""data"" + i );"
51297,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/utils/struct/LRUMapPerformanceTest.java,102,,"                System.out.println( name + "" put time for "" + tries + "" = "" + time + ""; millis per = "" + tPer );"
51298,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/utils/struct/LRUMapPerformanceTest.java,102,,"                System.out.println( name + "" put time for "" + tries + "" = "" + time + ""; millis per = "" + tPer );"
51299,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/utils/struct/LRUMapUnitTest.java,50,,"            cache.put( ""key:"" + i, ""data:"" + i );"
51300,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/utils/struct/LRUMapUnitTest.java,50,,"            cache.put( ""key:"" + i, ""data:"" + i );"
51301,./TargetProjects/commons-jcs/commons-jcs-core/src/test/java/org/apache/commons/jcs3/utils/struct/LRUMapUnitTest.java,56,,"            assertEquals( ""Data is wrong."", ""data:"" + i, data );"
51302,./TargetProjects/commons-jcs/commons-jcs-jcache-extras/src/main/java/org/apache/commons/jcs3/jcache/extras/web/JCacheFilter.java,93,,"            configuration.setReadThrough(""true"".equals(properties.getProperty(""read-through"", ""false"")));"
51303,./TargetProjects/commons-jcs/commons-jcs-jcache-extras/src/main/java/org/apache/commons/jcs3/jcache/extras/web/JCacheFilter.java,93,,"            configuration.setReadThrough(""true"".equals(properties.getProperty(""read-through"", ""false"")));"
51304,./TargetProjects/commons-jcs/commons-jcs-jcache-extras/src/test/java/org/apache/commons/jcs3/jcache/extras/web/JCacheFilterTest.java,93,,"            Tomcat.addServlet(ctx, ""hello"", Hello.class.getName());"
51305,./TargetProjects/commons-jcs/commons-jcs-jcache-openjpa/src/main/java/org/apache/commons/jcs3/jcache/openjpa/OpenJPAJCacheDataCacheManager.java,87,,"                    .setStoreByValue(""true"".equalsIgnoreCase(properties.getProperty(""jcache.store-by-value"", ""false"")));"
51306,./TargetProjects/commons-jcs/commons-jcs-jcache-openjpa/src/main/java/org/apache/commons/jcs3/jcache/openjpa/OpenJPAJCacheDataCacheManager.java,87,,"                    .setStoreByValue(""true"".equalsIgnoreCase(properties.getProperty(""jcache.store-by-value"", ""false"")));"
51307,./TargetProjects/commons-jcs/commons-jcs-jcache-openjpa/src/test/java/org/apache/commons/jcs3/jcache/openjpa/OpenJPAJCacheDataCacheTest.java,74,,"        assertNotNull(conf.getDataCacheManagerInstance().getDataCache(""default""));"
51308,./TargetProjects/commons-jcs/commons-jcs-jcache/src/main/java/org/apache/commons/jcs3/jcache/JCSCache.java,199,,"        assertNotNull(key, ""key"");"
51309,./TargetProjects/commons-jcs/commons-jcs-jcache/src/main/java/org/apache/commons/jcs3/jcache/JCSCache.java,330,,"        assertNotNull(rawValue, ""value"");"
51310,./TargetProjects/commons-jcs/commons-jcs-jcache/src/main/java/org/apache/commons/jcs3/jcache/JCSCachingManager.java,190,,"        assertNotNull(cacheName, ""cacheName"");"
51311,./TargetProjects/commons-jcs/commons-jcs-jcache/src/test/java/org/apache/commons/jcs3/jcache/CacheTest.java,94,,"        final Cache<String, String> cache = cacheManager.createCache(""default"", new MutableConfiguration<String, String>());"
51312,./TargetProjects/commons-jcs/commons-jcs-jcache/src/test/java/org/apache/commons/jcs3/jcache/CacheTest.java,95,,"        assertFalse(cache.containsKey(""foo""));"
51313,./TargetProjects/commons-jcs/commons-jcs-jcache/src/test/java/org/apache/commons/jcs3/jcache/NotSerializableTest.java,42,,"        assertFalse(cache.containsKey(""foo""));"
51314,./TargetProjects/commons-jcs/commons-jcs-sandbox/filecache/src/test/java/org/apache/commons/jcs/auxiliary/disk/file/FileDiskCacheUnitTest.java,46,,"        cattr.setDiskPath( ""target/test-sandbox/DiskFileCacheUnitTest"" );"
51315,./TargetProjects/commons-jcs/commons-jcs-sandbox/filecache/src/test/java/org/apache/commons/jcs/auxiliary/disk/file/FileDiskCacheUnitTest.java,150,,"        diskCache.update( new CacheElement<String, String>( cacheName, ""key1"", ""Data"" ) );"
51316,./TargetProjects/commons-jcs/commons-jcs-sandbox/filecache/src/test/java/org/apache/commons/jcs/auxiliary/disk/file/FileDiskCacheUnitTest.java,150,,"        diskCache.update( new CacheElement<String, String>( cacheName, ""key1"", ""Data"" ) );"
51317,./TargetProjects/commons-jcs/commons-jcs-sandbox/filecache/src/test/java/org/apache/commons/jcs/auxiliary/disk/file/FileDiskCacheUnitTest.java,203,,"        ICacheElement<String, String> result = diskCache.get( ""key"" );"
51318,./TargetProjects/commons-jcs/commons-jcs-sandbox/filecache/src/test/java/org/apache/commons/jcs/auxiliary/disk/file/FileDiskCacheUnitTest.java,416,,"        String cacheName = ""testFile"";"
51319,./TargetProjects/commons-jcs/commons-jcs-sandbox/filecache/src/test/java/org/apache/commons/jcs/auxiliary/disk/file/FileDiskCacheUnitTest.java,428,,"        assertEquals( ""Wrong string."", key, result.getName() );"
51320,./TargetProjects/commons-jcs/commons-jcs-sandbox/yajcache/src/test/java/org/apache/commons/jcs/yajcache/core/CacheManagerTest.java,40,,"        CacheManager.inst.getCache(""myCache"", String.class);"
51321,./TargetProjects/commons-jcs/commons-jcs-sandbox/yajcache/src/test/java/org/apache/commons/jcs/yajcache/core/CacheManagerTest.java,45,,"        assertTrue(null == c.get(""bla""));"
51322,./TargetProjects/commons-jcs/commons-jcs-sandbox/yajcache/src/test/java/org/apache/commons/jcs/yajcache/core/CacheManagerTest.java,48,,"        c.put(""bla"", ""First Put"");"
51323,./TargetProjects/commons-jcs/commons-jcs-sandbox/yajcache/src/test/java/org/apache/commons/jcs/yajcache/core/CacheManagerTest.java,84,,"                ""race"", Integer.class, CacheType.SOFT_REFERENCE);"
51324,./TargetProjects/commons-jcs/commons-jcs-sandbox/yajcache/src/test/java/org/apache/commons/jcs/yajcache/core/SafeCacheManagerTest.java,42,,"                ""myCache"", String.class, CacheType.SOFT_REFERENCE_SAFE);"
51325,./TargetProjects/commons-jcs/commons-jcs-sandbox/yajcache/src/test/java/org/apache/commons/jcs/yajcache/core/SafeCacheManagerTest.java,43,,"        assertTrue(null == c.get(""bla""));"
51326,./TargetProjects/commons-jcs/commons-jcs-sandbox/yajcache/src/test/java/org/apache/commons/jcs/yajcache/core/SafeCacheManagerTest.java,46,,"        c.put(""bla"", ""First Put"");"
51327,./TargetProjects/commons-jcs/commons-jcs-sandbox/yajcache/src/test/java/org/apache/commons/jcs/yajcache/core/SafeCacheManagerTest.java,82,,"                ""race"", Integer.class, CacheType.SOFT_REFERENCE_SAFE);"
51328,./TargetProjects/commons-jcs/commons-jcs-sandbox/yajcache/src/test/java/org/apache/commons/jcs/yajcache/file/CacheFileDAOTest.java,44,,"                + CacheFileUtils.inst.getCacheDir(""testCache"").getAbsolutePath());"
51329,./TargetProjects/commons-jcs/commons-jcs-sandbox/yajcache/src/test/java/org/apache/commons/jcs/yajcache/file/CacheFileDAOTest.java,71,,"        CacheFileUtils.inst.mkCacheDirs(""testCacheCorrupt"");"
51330,./TargetProjects/commons-jcs/commons-jcs-sandbox/yajcache/src/test/java/org/apache/commons/jcs/yajcache/file/CacheFileDAOTest.java,79,,"        File file = CacheFileUtils.inst.getCacheFile(""testCacheCorrupt"", ""keyy"");"
51331,./TargetProjects/commons-jcs/src/experimental/org/apache/commons/jcs/engine/memory/arc/ARCMemoryCacheUnitTest.java,43,,"        JCS.setConfigFilename( ""/TestARCCache.ccf"" );"
51332,./TargetProjects/commons-jcs/src/experimental/org/apache/commons/jcs/engine/memory/arc/ARCMemoryCacheUnitTest.java,60,,"            cache.put( i + "":key"", ""myregion"" + "" data "" + i );"
51333,./TargetProjects/commons-jcs/src/experimental/org/apache/commons/jcs/engine/memory/arc/ARCMemoryCacheUnitTest.java,60,,"            cache.put( i + "":key"", ""myregion"" + "" data "" + i );"
51334,./TargetProjects/commons-jcs/src/experimental/org/apache/commons/jcs/engine/memory/arc/ARCMemoryCacheUnitTest.java,92,,"        CompositeCache cache = cacheMgr.getCache( ""testGetKeyArray"" );"
51335,./TargetProjects/commons-jcs/src/experimental/org/apache/commons/jcs/engine/memory/arc/ARCMemoryCacheUnitTest.java,111,,"        assertEquals( ""Target t1 should be 1/2 until dupe gets or puts."", max / 2, arc.getTarget_T1() );"
51336,./TargetProjects/commons-jcs/src/experimental/org/apache/commons/jcs/engine/memory/arc/ARCMemoryCacheUnitTest.java,146,,"        assertEquals( ""T2 should have one item."", 1, arc.getListSize( ARCMemoryCache._T2_ ) );"
51337,./TargetProjects/commons-jelly/core/src/main/java/org/apache/commons/jelly/impl/TagScript.java,651,,"            log.trace( ""Caught exception: "" + e, e );"
51338,./TargetProjects/commons-jelly/core/src/main/java/org/apache/commons/jelly/parser/XMLParser.java,1091,,"                        throw createSAXException(""Could not load class: "" + uri + "" so taglib instantiation failed"", e);"
51339,./TargetProjects/commons-jelly/core/src/main/java/org/apache/commons/jelly/util/CommandLineParser.java,90,,"        if (cmdLine.hasOption(""script"")) {"
51340,./TargetProjects/commons-jelly/core/src/test/java/org/apache/commons/jelly/TestCoreTags.java,87,,"        textScript = new TextScript(""foo"");"
51341,./TargetProjects/commons-jelly/core/src/test/java/org/apache/commons/jelly/TestTrim.java,50,,"        assertEquals( ""foo"", script.getText() );"
51342,./TargetProjects/commons-jelly/core/src/test/java/org/apache/commons/jelly/core/TestBreakTag.java,39,,"        setUpScript(""testBreakTag.jelly"");"
51343,./TargetProjects/commons-jelly/core/src/test/java/org/apache/commons/jelly/core/TestForEachTag.java,48,,"              new Object[] {""0"", ""VOID"", ""1"", ""VOID"", ""2"", ""VOID"", "
51344,./TargetProjects/commons-jelly/core/src/test/java/org/apache/commons/jelly/core/TestForEachTag.java,54,,"                (String) getJellyContext().getVariable(""result.ordered"");"
51345,./TargetProjects/commons-jelly/core/src/test/java/org/apache/commons/jelly/core/TestIncludeTag.java,81,,"        assertTrue(""should have set 'c' variable to 'true'"","
51346,./TargetProjects/commons-jelly/core/src/test/java/org/apache/commons/jelly/core/TestIncludeTag.java,82,,"                   context.getVariable(""c"").equals(""true""));"
51347,./TargetProjects/commons-jelly/core/src/test/java/org/apache/commons/jelly/core/TestInvokeStaticTag.java,52,,"        setUpScript( ""testInvokeStaticTag.jelly"" );"
51348,./TargetProjects/commons-jelly/core/src/test/java/org/apache/commons/jelly/core/TestInvokeTag.java,49,,"        setUpScript(""testInvokeTag.jelly"");"
51349,./TargetProjects/commons-jelly/core/src/test/java/org/apache/commons/jelly/core/TestInvokeTag.java,57,,"        assertEquals(""Chicago"",customer.getCity());"
51350,./TargetProjects/commons-jelly/core/src/test/java/org/apache/commons/jelly/core/TestInvokeTag.java,79,,"        assertNotNull(getJellyContext().getVariable(""customer""));"
51351,./TargetProjects/commons-jelly/core/src/test/java/org/apache/commons/jelly/core/TestNewTag.java,42,,"        setUpScript(""testNewTag.jelly"");"
51352,./TargetProjects/commons-jelly/core/src/test/java/org/apache/commons/jelly/core/TestNewTag.java,46,,"        assertNotNull(getJellyContext().getVariable(""foo""));"
51353,./TargetProjects/commons-jelly/core/src/test/java/org/apache/commons/jelly/core/TestNewTag.java,70,,"        assertEquals(""Jane Doe"",customer.getName());"
51354,./TargetProjects/commons-jelly/core/src/test/java/org/apache/commons/jelly/core/TestNewTag.java,84,,"        assertEquals(""Chicago"",customer.getCity());"
51355,./TargetProjects/commons-jelly/core/src/test/java/org/apache/commons/jelly/core/TestSwitchTag.java,49,,"        setUpScript(""testSwitchTag.jelly"");"
51356,./TargetProjects/commons-jelly/core/src/test/java/org/apache/commons/jelly/core/TestSwitchTag.java,51,,"        getJellyContext().setVariable(""switch.on.a"",""two"");"
51357,./TargetProjects/commons-jelly/core/src/test/java/org/apache/commons/jelly/core/TestSwitchTag.java,54,,"                   getJellyContext().getVariable(""a.one""));"
51358,./TargetProjects/commons-jelly/core/src/test/java/org/apache/commons/jelly/core/TestSwitchTag.java,56,,"                   getJellyContext().getVariable(""a.two"").equals(""true""));"
51359,./TargetProjects/commons-jelly/core/src/test/java/org/apache/commons/jelly/core/TestSwitchTag.java,56,,"                   getJellyContext().getVariable(""a.two"").equals(""true""));"
51360,./TargetProjects/commons-jelly/core/src/test/java/org/apache/commons/jelly/core/TestSwitchTag.java,57,,"        assertNull(""should not have 'a.three' variable set"","
51361,./TargetProjects/commons-jelly/core/src/test/java/org/apache/commons/jelly/core/TestSwitchTag.java,58,,"                   getJellyContext().getVariable(""a.three""));"
51362,./TargetProjects/commons-jelly/core/src/test/java/org/apache/commons/jelly/core/TestSwitchTag.java,60,,"                   getJellyContext().getVariable(""a.null""));"
51363,./TargetProjects/commons-jelly/core/src/test/java/org/apache/commons/jelly/core/TestSwitchTag.java,62,,"                   getJellyContext().getVariable(""a.default""));"
51364,./TargetProjects/commons-jelly/core/src/test/java/org/apache/commons/jelly/core/TestSwitchTag.java,134,,"            fail(""Expected JellyException"");"
51365,./TargetProjects/commons-jelly/core/src/test/java/org/apache/commons/jelly/core/TestUseBeanTag.java,42,,"        setUpScript(""testUseBeanTag.jelly"");"
51366,./TargetProjects/commons-jelly/core/src/test/java/org/apache/commons/jelly/core/TestUseBeanTag.java,46,,"        assertNotNull(getJellyContext().getVariable(""foo""));"
51367,./TargetProjects/commons-jelly/core/src/test/java/org/apache/commons/jelly/expression/TestExpressions.java,56,,"        context.setVariable(""topping"", ""cheese"");"
51368,./TargetProjects/commons-jelly/core/src/test/java/org/apache/commons/jelly/expression/TestExpressions.java,114,,"        context.setVariable(""c"", ""true"");"
51369,./TargetProjects/commons-jelly/core/src/test/java/org/apache/commons/jelly/expression/TestExpressions.java,115,,"        context.setVariable(""d"", ""false"");"
51370,./TargetProjects/commons-jelly/core/src/test/java/org/apache/commons/jelly/tags/junit/RunTag.java,149,,"                    output.startElement(""message"");"
51371,./TargetProjects/commons-jelly/core/src/test/java/org/apache/commons/jelly/tags/junit/RunTag.java,153,,"                    output.startElement(""stack"");"
51372,./TargetProjects/commons-jelly/core/src/test/java/org/apache/commons/jelly/test/impl/TestEmbedded.java,65,,"                + ""jelly-test-case"""
51373,./TargetProjects/commons-jelly/jelly-tags/ant/src/main/java/org/apache/commons/jelly/tags/ant/AntTag.java,443,,"                    log.info(""datatype '"" + name"
51374,./TargetProjects/commons-jelly/jelly-tags/betwixt/src/test/java/org/apache/commons/digester/rss/RSSDigester.java,242,,"        addCallMethod(""rss/channel/description"", ""setDescription"", 0);"
51375,./TargetProjects/commons-jelly/jelly-tags/betwixt/src/test/java/org/apache/commons/digester/rss/RSSDigester.java,246,,"        addCallMethod(""rss/channel/link"", ""setLink"", 0);"
51376,./TargetProjects/commons-jelly/jelly-tags/betwixt/src/test/java/org/apache/commons/digester/rss/RSSDigester.java,252,,"        addCallMethod(""rss/channel/title"", ""setTitle"", 0);"
51377,./TargetProjects/commons-jelly/jelly-tags/jaxme/src/test/java/org/apache/ws/jaxme/examples/misc/address/impl/AddressTypeHandler.java,76,,"                  validationEvent(javax.xml.bind.ValidationEvent.WARNING, ""The element "" + pQName + "" was unexpected at this place."", org.apache.ws.jaxme.ValidationEvents.EVENT_UNEXPECTED_CHILD_STATE);"
51378,./TargetProjects/commons-jelly/jelly-tags/jaxme/src/test/java/org/apache/ws/jaxme/examples/misc/address/impl/AddressTypeHandler.java,76,,"                  validationEvent(javax.xml.bind.ValidationEvent.WARNING, ""The element "" + pQName + "" was unexpected at this place."", org.apache.ws.jaxme.ValidationEvents.EVENT_UNEXPECTED_CHILD_STATE);"
51379,./TargetProjects/commons-jelly/jelly-tags/jaxme/src/test/java/org/apache/ws/jaxme/examples/misc/address/impl/AddressTypeSerializer.java,22,,"    final static javax.xml.namespace.QName __ser_First_qname = new javax.xml.namespace.QName(""http://ws.apache.org/jaxme/examples/misc/address"", ""First"");"
51380,./TargetProjects/commons-jelly/jelly-tags/jetty/src/test/java/org/apache/commons/jelly/jetty/TestJettyHttpServerTags.java,59,,"        assertEquals(""Produces the correct output"", ""It works!"", text);"
51381,./TargetProjects/commons-jelly/jelly-tags/jetty/src/test/java/org/apache/commons/jelly/jetty/TestJettyHttpServerTags.java,59,,"        assertEquals(""Produces the correct output"", ""It works!"", text);"
51382,./TargetProjects/commons-jelly/jelly-tags/junit/src/main/java/org/apache/commons/jelly/tags/junit/RunTag.java,149,,"                    output.startElement(""message"");"
51383,./TargetProjects/commons-jelly/jelly-tags/junit/src/main/java/org/apache/commons/jelly/tags/junit/RunTag.java,153,,"                    output.startElement(""stack"");"
51384,./TargetProjects/commons-jelly/jelly-tags/sql/src/main/java/org/apache/commons/jelly/tags/sql/DataSourceWrapper.java,64,,"        throw new SQLException(Resources.getMessage(""NOT_SUPPORTED""));"
51385,./TargetProjects/commons-jelly/jelly-tags/swing/src/main/java/org/apache/commons/jelly/tags/swing/ComponentTag.java,393,,"                if (attributes.containsKey(""debugGraphicsOptions"")) {"
51386,./TargetProjects/commons-jelly/jelly-tags/threads/src/main/java/org/apache/commons/jelly/tags/threads/JellyThread.java,67,,"            log.debug(""Thread \"""" + getName() + ""\"" running"");"
51387,./TargetProjects/commons-jelly/jelly-tags/velocity/src/test/java/org/apache/commons/jelly/tags/velocity/JellyContextAdapterTest.java,82,,"        adapter.put( ""key"", null );"
51388,./TargetProjects/commons-jelly/jelly-tags/velocity/src/test/java/org/apache/commons/jelly/tags/velocity/JellyContextAdapterTest.java,211,,"        adapter.put( ""key1"", value1 );"
51389,./TargetProjects/commons-jelly/jelly-tags/velocity/src/test/java/org/apache/commons/jelly/tags/velocity/JellyContextAdapterTest.java,212,,"        jellyContext.setVariable( ""key2"", value2 );"
51390,./TargetProjects/commons-jelly/jelly-tags/xml/src/test/java/org/apache/commons/jelly/tags/xml/TestXMLTags.java,145,,"            log.debug(""Evaluated script as..."");"
51391,./TargetProjects/commons-jelly/jelly-tags/xml/src/test/java/org/apache/commons/jelly/tags/xml/TestXMLTags.java,148,,"        assertEquals(""Should produce the correct output"", ""It works!"", text);"
51392,./TargetProjects/commons-jelly/jelly-tags/xml/src/test/java/org/apache/commons/jelly/tags/xml/TestXMLTags.java,148,,"        assertEquals(""Should produce the correct output"", ""It works!"", text);"
51393,./TargetProjects/commons-jelly/jelly-tags/xml/src/test/java/org/apache/commons/jelly/tags/xml/TestXMLTags.java,177,,"                ""</test-node>"", text);"
51394,./TargetProjects/commons-jexl/src/main/java/org/apache/commons/jexl3/internal/Interpreter.java,799,,"            throw new JexlException(node.jjtGetChild(0), ""boolean coercion error"", xrt);"
51395,./TargetProjects/commons-jexl/src/main/java/org/apache/commons/jexl3/internal/Operators.java,236,,"                throw new JexlException(node, operator + "" error"", e);"
51396,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/AnnotationTest.java,70,,"            } else if (""synchronized"".equals(name)) {"
51397,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/AnnotationTest.java,274,,"                Assert.assertEquals(1, log.count(""warn""));"
51398,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/AntishCallTest.java,138,,"        lmap.put(""java.math.BigInteger"", new ClassReference(BigInteger.class));"
51399,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ArithmeticOperatorTest.java,108,,"        asserter.setVariable(""x"", ""foobar"");"
51400,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ArithmeticOperatorTest.java,109,,"        asserter.assertExpression(""x =^ 'foo'"", Boolean.TRUE);"
51401,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ArithmeticOperatorTest.java,110,,"        asserter.assertExpression(""x =$ 'foo'"", Boolean.FALSE);"
51402,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ArithmeticOperatorTest.java,111,,"        asserter.setVariable(""x"", ""barfoo"");"
51403,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ArithmeticOperatorTest.java,118,,"        asserter.setVariable(""x.y"", ""foobar"");"
51404,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ArithmeticOperatorTest.java,129,,"        asserter.assertExpression(""x !^ 'foo'"", Boolean.FALSE);"
51405,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ArithmeticOperatorTest.java,130,,"        asserter.assertExpression(""x !$ 'foo'"", Boolean.TRUE);"
51406,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ArithmeticOperatorTest.java,449,,"        final JexlScript expr0 = jexl.createScript(""date * date"", ""date"");"
51407,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ArithmeticTest.java,63,,"        asserter.setVariable(""left"", null);"
51408,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ArithmeticTest.java,64,,"        asserter.setVariable(""right"", Integer.valueOf(8));"
51409,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ArithmeticTest.java,66,,"        asserter.failExpression(""left + right"", "".*null.*"");"
51410,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ArithmeticTest.java,66,,"        asserter.failExpression(""left + right"", "".*null.*"");"
51411,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ArithmeticTest.java,201,,"        asserter.setVariable(""aBigDecimal"", new BigDecimal(""8.8""));"
51412,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ArithmeticTest.java,603,,"        Assert.assertEquals(""1.21.2"", result);"
51413,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ArrayAccessTest.java,86,,"        asserter.setVariable(""array"", args);"
51414,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ArrayAccessTest.java,98,,"        m.put(""foo"", ""bar"");"
51415,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ArrayAccessTest.java,98,,"        m.put(""foo"", ""bar"");"
51416,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ArrayAccessTest.java,121,,"        foo[0][0] = ""one"";"
51417,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ArrayAccessTest.java,122,,"        foo[0][1] = ""two"";"
51418,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ArrayAccessTest.java,124,,"        asserter.assertExpression(""foo[0][1]"", ""two"");"
51419,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ArrayAccessTest.java,125,,"        asserter.assertExpression(""foo[0][1] = 'three'"", ""three"");"
51420,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ArrayAccessTest.java,130,,"        asserter.assertExpression(""foo.0[1]"", ""two"");"
51421,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ArrayAccessTest.java,136,,"        asserter.assertExpression(""foo.0.'1'"", ""two"");"
51422,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ArrayAccessTest.java,142,,"        asserter.assertExpression(""foo.'0'.'1'"", ""two"");"
51423,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ArrayAccessTest.java,149,,"        asserter.assertExpression(""foo.0.1"", ""two"");"
51424,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/AssignTest.java,80,,"        final JexlExpression check = JEXL.createExpression(""froboz.value"");"
51425,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/AssignTest.java,83,,"        Assert.assertEquals(""Result is not 10"", new Integer(10), o);"
51426,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/BlockTest.java,51,,"        Assert.assertEquals(""Block result is wrong"", ""World"", o);"
51427,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/CacheTest.java,98,,"            return getClass().getSimpleName() + ""@i#"" + arg0 + "",i#"" + arg1;"
51428,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/CacheTest.java,181,,"            if (""value"".equals(prop)) {"
51429,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/CacheTest.java,350,,"                vars.put(""cache"", args.ca[mix]);"
51430,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/CacheTest.java,361,,"                    Assert.assertEquals(cacheGetValue.toString(), ""Cached"" + mix + "":na"", result);"
51431,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/CacheTest.java,558,,"                    Assert.fail(""unexpected value type"");"
51432,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ClassCreator.java,153,,"            aWriter.write("" }\n"");"
51433,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ClassCreatorTest.java,123,,"        ctxt.set(""value"", 1000);"
51434,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ClassCreatorTest.java,179,,"        functorTwo(ClassCreator.GEN_CLASS + ""foo2"");"
51435,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ContextNamespaceTest.java,168,,"        run348a(jexl, ctxt, ""ns:"");"
51436,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ContextNamespaceTest.java,201,,"        run348a(jexl, ctxt, ""ns : "");"
51437,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ExceptionTest.java,74,,"            Assert.fail(""Should have thrown JexlException.Property"");"
51438,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ExceptionTest.java,87,,"        final boolean b = (Boolean) jexl.getProperty(npe, ""fail"");"
51439,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ExceptionTest.java,139,,"            Assert.assertTrue(msg.indexOf(""variable 'c.e'"") > 0);"
51440,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ForEachTest.java,43,,"        jc.set(""list"", Collections.emptyList());"
51441,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ForEachTest.java,63,,"        jc.set(""list"", new Object[]{""Hello"", ""World""});"
51442,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ForEachTest.java,65,,"        Assert.assertEquals(""Result is not last evaluated expression"", ""World"", o);"
51443,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/IfTest.java,224,,"            Assert.assertEquals(""Should be quux"", ""quux"", o);"
51444,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/IfTest.java,224,,"            Assert.assertEquals(""Should be quux"", ""quux"", o);"
51445,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/IfTest.java,225,,"            o = jc.get(""x.y.z"");"
51446,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/IfTest.java,229,,"        jc.set(""foo"", null);"
51447,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/IfTest.java,257,,"            Assert.assertEquals(""Should be bar"", ""bar"", o);"
51448,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/IfTest.java,257,,"            Assert.assertEquals(""Should be bar"", ""bar"", o);"
51449,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/IfTest.java,365,,"            Assert.assertEquals(""Should be 0"", 0.d, o);"
51450,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/Issues100Test.java,59,,"        ctxt.set(""foo"", foo);"
51451,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/Issues100Test.java,394,,"        jc.set(""state"", foo);"
51452,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/Issues200Test.java,137,,"        jc.set(""foo"", new int[]{0, 1, 2, 42});"
51453,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/Issues200Test.java,168,,"        map.put(""one"", 1);"
51454,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/Issues200Test.java,218,,"        final List<String> a0 = Arrays.asList(""one"", ""two"");"
51455,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/Issues300Test.java,439,,"            Assert.assertTrue(xvar.toString().contains(""a.n.t""));"
51456,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/Issues300Test.java,451,,"            script = jexl.createScript(""a.n.t[0].variable"");"
51457,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/IssuesTest.java,249,,"        ctxt.set(""dummy"", ""abcd"");"
51458,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/JXLTTest.java,177,,"        context.set(""name"", ""Doe"");"
51459,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/JXLTTest.java,178,,"        Assert.assertTrue(""expression should be immediate"", expr.isImmediate());"
51460,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/JXLTTest.java,201,,"        Assert.assertTrue(""expression should be deferred"", expr.isDeferred());"
51461,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/JXLTTest.java,234,,"        context.set(""greeting.world"", ""Hello World!"");"
51462,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/JXLTTest.java,372,,"            Assert.fail(""should be malformed"");"
51463,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/JXLTTest.java,536,,"        context.set(""l10n"", ""valeur"");"
51464,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/JXLTTest.java,738,,"        context.set(""user"", ""Dimitri"");"
51465,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/JXLTTest.java,866,,"        Assert.assertEquals(""<p>Universe 42</p>\n"", output);"
51466,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/JXLTTest.java,923,,"        Assert.assertEquals(""<p>Universe 42</p>"", output);"
51467,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/JexlTest.java,62,,"        jc.set(""foo"", new Foo());"
51468,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/JexlTest.java,237,,"        map.put(""size"", ""cheese"");"
51469,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/JexlTest.java,359,,"        jc.set(""bar"", ""true"");"
51470,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/JexlTest.java,478,,"        jc.set(""foo_bar"", ""123"");"
51471,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/JexlTest.java,607,,"        jc.set(""first"", Boolean.FALSE);"
51472,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/JexlTest.java,735,,"        @SuppressWarnings(""boxing"")"
51473,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/LambdaTest.java,256,,"        final JexlScript base = jexl.createScript(""(x, y, z)->{ x + y + z }"");"
51474,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/MapLiteralTest.java,41,,"        Assert.assertEquals(Collections.singletonMap(""foo"", ""bar""), o);"
51475,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/MethodTest.java,165,,"        Assert.assertEquals(""jexl:0"", test.callMixed(""jexl""));"
51476,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/MethodTest.java,206,,"                throw new UnsupportedOperationException(""kill "" + f + "" + "" + i);"
51477,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/MethodTest.java,261,,"            result = JEXL.invokeMethod(func, ""over"", ""foo"", 42);"
51478,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/MethodTest.java,261,,"            result = JEXL.invokeMethod(func, ""over"", ""foo"", 42);"
51479,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/MethodTest.java,262,,"            Assert.assertEquals(""foo + 42"", result);"
51480,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/MethodTest.java,290,,"        ctxt.set(""func"", func);"
51481,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/MethodTest.java,331,,"            Assert.fail(""should throw TryFailed"");"
51482,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/MethodTest.java,337,,"        final JexlPropertySet setter = uber.getPropertySet(func, ""under"", ""42"");"
51483,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/MethodTest.java,355,,"        result = setter.tryInvoke(func, ""under"", ""-42"");"
51484,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/MethodTest.java,494,,"        Assert.assertEquals(""Result is not 20"", new Integer(20), o);"
51485,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/MethodTest.java,623,,"                Assert.assertEquals(""exec(Object... args): "" + i, 4, o);"
51486,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/MethodTest.java,710,,"        Assert.assertEquals(""Result is not 42"", new Integer(42), o);"
51487,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ParseFailuresTest.java,49,,"            Assert.fail(""Parsing \"""" + badExpression"
51488,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ParseFailuresTest.java,50,,"                    + ""\"" should result in a JexlException"");"
51489,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/PragmaTest.java,39,,"    @SuppressWarnings(""AssertEqualsBetweenInconvertibleTypes"")"
51490,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/PragmaTest.java,141,,"                + ""sleeper:sleep(100);"""
51491,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/PropertyAccessTest.java,58,,"        asserter.setVariable(""foo"", foo);"
51492,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/PropertyAccessTest.java,172,,"        Assert.assertEquals(""456"", result);"
51493,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/PropertyAccessTest.java,174,,"        setName.execute(null, quux, ""quux"");"
51494,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/PropertyAccessTest.java,176,,"        Assert.assertEquals(""QUUX"", result);"
51495,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/PropertyAccessTest.java,329,,"        Object result = script.execute(ctx, ""querty"");"
51496,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/PropertyAccessTest.java,336,,"        Assert.assertEquals(""oops"", result);"
51497,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/PropertyAccessTest.java,394,,"            Assert.fail(""Should have evaluated to null"");"
51498,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/PropertyAccessTest.java,480,,"        p0.set(""stuff"", 42);"
51499,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/PropertyAccessTest.java,486,,"            result = script.execute(ctxt, ""fail"");"
51500,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/PublicFieldsTest.java,76,,"        ctxt.set(""value"", -42);"
51501,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ScriptCallableTest.java,55,,"            Assert.fail(""should have timed out"");"
51502,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ScriptCallableTest.java,71,,"        ctxt.set(""latch"", latch);"
51503,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ScriptTest.java,84,,"        jc.set(""out"", System.out);"
51504,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ScriptTest.java,86,,"        Assert.assertNotNull(""No result"", result);"
51505,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/ScriptTest.java,87,,"        Assert.assertEquals(""Wrong result"", new Integer(7), result);"
51506,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/SetLiteralTest.java,47,,"        final Set<?> check = createSet(""foo"", ""bar"");"
51507,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/SideEffectTest.java,61,,"        context.put(""foo"", foo);"
51508,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/SideEffectTest.java,100,,"        context.put(""foo.bar.quux"", foo);"
51509,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/StrategyTest.java,69,,"        final JexlPropertyGet fget = rfieldp.getPropertyGet(uberspect, map, ""key"");"
51510,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/VarTest.java,91,,"        Assert.assertEquals(""Result is not 42"", new Integer(42), o);"
51511,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/internal/Util.java,116,,"                return ""size: "" + lhsl.size() + "" != "" + rhsl.size();"
51512,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/internal/introspection/DiscoveryTest.java,53,,"            if (""value"".equals(prop)) {"
51513,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/internal/introspection/DiscoveryTest.java,56,,"            if (""eulav"".equals(prop)) {"
51514,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/internal/introspection/DiscoveryTest.java,113,,"        final JexlPropertySet set = uber.getPropertySet(bean, ""value"", ""foo"");"
51515,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/internal/introspection/DiscoveryTest.java,123,,"        final Object bar = set.invoke(bean, ""bar"");"
51516,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/internal/introspection/DiscoveryTest.java,128,,"        final Object quux = set.tryInvoke(bean, ""value"", ""quux"");"
51517,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/internal/introspection/DiscoveryTest.java,132,,"        Assert.assertEquals(AbstractExecutor.TRY_FAILED, set.tryInvoke(bean, ""eulav"", ""nope""));"
51518,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/internal/introspection/DiscoveryTest.java,268,,"        jmethod = uber.getMethod(bulgroz, ""list"", 0);"
51519,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/internal/introspection/MiscIntrospectionTest.java,161,,"        Method mA = A.class.getMethod(""method"");"
51520,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/introspection/SandboxTest.java,77,,"            throw new RuntimeException(""should not be callable!"");"
51521,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/introspection/SandboxTest.java,156,,"        JexlScript script = JEXL.createScript(expr, ""foo"");"
51522,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/introspection/SandboxTest.java,186,,"        sandbox.block(Foo.class.getName()).read(""alias"");"
51523,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/introspection/SandboxTest.java,510,,"        JexlSandbox.Permissions p = sandbox.permissions(""java.util.Map"", false, true, true);"
51524,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/introspection/SandboxTest.java,511,,"        p.read().add(""quux"");"
51525,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/introspection/SandboxTest.java,514,,"        String q = ""'quux'""; //quotes are important!"
51526,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/introspection/SandboxTest.java,515,,"        JexlExpression expression = jexl.createExpression(""{""+q+"" : 'foo'}[""+q+""]"");"
51527,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/introspection/SandboxTest.java,518,,"            Assert.fail(""should have blocked "" + q);"
51528,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/introspection/SandboxTest.java,520,,"            Assert.assertTrue(xp.getMessage().contains(""undefined""));"
51529,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/jexl342/OptionalTest.java,57,,"        script = jexl.createScript(info.at(53, 1),""thing.name.length()"", ""thing"");"
51530,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/junit/Asserter.java,100,,"            Assert.assertEquals(""expression: "" + expression, 0,"
51531,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/scripting/JexlScriptEngineTest.java,32,,"    private static final List<String> NAMES = Arrays.asList(""JEXL"", ""Jexl"", ""jexl"","
51532,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/scripting/JexlScriptEngineTest.java,34,,"                                                            ""JEXL3"", ""Jexl3"", ""jexl3"");"
51533,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/scripting/JexlScriptEngineTest.java,59,,"        Assert.assertNotNull(""Manager should not be null"", manager);"
51534,./TargetProjects/commons-jexl/src/test/java/org/apache/commons/jexl3/scripting/JexlScriptEngineTest.java,130,,"        manager.put(""both"", 7);"
51535,./TargetProjects/commons-jxpath/src/main/java/org/apache/commons/jxpath/JXPathContext.java,925,,"                ""Namespace registration is not implemented by "" + getClass());"
51536,./TargetProjects/commons-jxpath/src/main/java/org/apache/commons/jxpath/ri/parser/XPathParser.java,149,,"    throw new Error(""Missing return statement in function"");"
51537,./TargetProjects/commons-jxpath/src/main/java/org/apache/commons/jxpath/util/ValueUtils.java,372,,"                ""Cannot access property: """
51538,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/BasicNodeSetTest.java,117,,"        assertElementNames(list(""contact"", ""contact"", ""contact"", ""contact""), nodeSet.getNodes());"
51539,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/JXPathTestCase.java,52,,"        assertEquals(""Evaluating <"" + xpath + "">"", expected, actual);"
51540,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/issues/JXPath172DynamicTest.java,42,,"        final Object bRet = context.selectSingleNode(""value"");"
51541,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/issues/JXPath172DynamicTest.java,67,,"        final Object bRet = context.selectSingleNode(""unexisting"");"
51542,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/issues/JXPath172DynamicTest.java,91,,"        final Object bRet = context.selectSingleNode(""value.unexisting"");"
51543,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/issues/JXPath172Test.java,42,,"        final Object bRet = context.selectSingleNode(""value"");"
51544,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/issues/JXPath172Test.java,67,,"        final Object bRet = context.selectSingleNode(""unexisting"");"
51545,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/issues/JXPath177Test.java,34,,"        x.put(""name"", ""X name"");"
51546,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreterTest.java,70,,"        assertValueAndPointer(""/int"","
51547,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreterTest.java,74,,"                ""BbB"");"
51548,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreterTest.java,92,,"                ""BbBb"","
51549,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreterTest.java,93,,"                ""BbBbB"");"
51550,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreterTest.java,105,,"                ""BbBn"");"
51551,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreterTest.java,110,,"                ""BbDd"");"
51552,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreterTest.java,149,,"                ""BbDdB"");"
51553,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreterTest.java,199,,"                ""/vendor/contact[2]"","
51554,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreterTest.java,200,,"                ""BbMM"");"
51555,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreterTest.java,274,,"                context.getValue(""/vendor""),"
51556,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreterTest.java,330,,"                ""BbDdBb"","
51557,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreterTest.java,331,,"                ""BbDdBbB"");"
51558,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreterTest.java,335,,"                ""String 2"","
51559,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreterTest.java,429,,"        assertValueAndPointer(""/map[@name='Key3'][2]"","
51560,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/compiler/ExtensionFunctionTest.java,58,,"            vars.declareVariable(""test"", new TestFunctions(4, ""test""));"
51561,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/compiler/ExtensionFunctionTest.java,212,,"        list.add(""foo"");"
51562,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/compiler/ExtensionFunctionTest.java,257,,"        assertXPathValue(context, ""test:string(/beans/name)"", ""Name 1"");"
51563,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/compiler/VariableTest.java,103,,"        assertXPathCreatePath(context, ""$string"", null, ""$string"");"
51564,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/compiler/VariableTest.java,120,,"            ""$stringArray[2]"","
51565,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/compiler/VariableTest.java,126,,"            ""Created <"" + ""$stringArray[1]"" + "">"","
51566,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/compiler/VariableTest.java,126,,"            ""Created <"" + ""$stringArray[1]"" + "">"","
51567,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/compiler/VariableTest.java,127,,"            ""Value1"","
51568,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/compiler/VariableTest.java,153,,"        assertXPathCreatePath(context, ""$array[2]"", """", ""$array[2]"");"
51569,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/compiler/VariableTest.java,157,,"            ""Created <"" + ""$array[1]"" + "">"","
51570,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/compiler/VariableTest.java,186,,"            ""$test/boolean"","
51571,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/compiler/VariableTest.java,211,,"            ""$testArray[2]/boolean"","
51572,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/compiler/VariableTest.java,231,,"        context.getVariables().declareVariable(""temp"", ""temp"");"
51573,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/compiler/VariableTest.java,243,,"            new String[] { ""temp1"", ""temp2"" });"
51574,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/compiler/VariableTest.java,244,,"        context.removePath(""$temp[1]"");"
51575,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/BeanModelTestCase.java,101,,"                new NodeNameTest(new QName(null, ""integers"")),"
51576,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/BeanModelTestCase.java,191,,"        Iterator it = context.iteratePointers(""/integers"");"
51577,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/BeanModelTestCase.java,200,,"                ""/integers[2]"","
51578,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/BeanModelTestCase.java,202,,"                ""/integers[4]""),"
51579,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/BeanModelTestCase.java,250,,"        assertXPathValue(context, ""/beans[1]/name"", ""Name 1"");"
51580,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/BeanModelTestCase.java,251,,"        assertXPathValue(context, ""/beans[2]/name"", ""Name 2"");"
51581,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/BeanModelTestCase.java,251,,"        assertXPathValue(context, ""/beans[2]/name"", ""Name 2"");"
51582,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/BeanModelTestCase.java,302,,"        assertXPathValue(context, ""boolean"", Boolean.FALSE);"
51583,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/BeanModelTestCase.java,325,,"        assertXPathValue(context, ""nestedBean/name"", ""Name 0"");"
51584,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/BeanModelTestCase.java,358,,"        assertXPathValue(context, ""integers[2]"", new Integer(2));"
51585,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/BeanModelTestCase.java,374,,"            list(""String 1"", ""String 2"", ""String 3""));"
51586,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/BeanModelTestCase.java,374,,"            list(""String 1"", ""String 2"", ""String 3""));"
51587,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/BeanModelTestCase.java,592,,"            ""/nestedBean/int"");"
51588,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/BeanModelTestCase.java,711,,"        assertDocumentOrder(context, ""boolean"", ""int"", -1);"
51589,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/BeanModelTestCase.java,717,,"        assertDocumentOrder(context, ""nestedBean/int"", ""nestedBean"", 1);"
51590,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/BeanModelTestCase.java,717,,"        assertDocumentOrder(context, ""nestedBean/int"", ""nestedBean"", 1);"
51591,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/BeanModelTestCase.java,825,,"            ""/beans[2]/int"","
51592,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/BeanModelTestCase.java,856,,"            ""/beans[3]/int"","
51593,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/BeanModelTestCase.java,877,,"            ""/nestedBean/strings[2]"","
51594,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/MixedModelTest.java,51,,"        vars.declareVariable(""string"", bean.getString());"
51595,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/MixedModelTest.java,104,,"            ""Fruit Market"","
51596,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/MixedModelTest.java,362,,"        map.put(""foo"", new String[] { ""a"", ""b"", ""c"" });"
51597,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/MixedModelTest.java,423,,"            assertXPathValue(context, ""$e/errorString"", null);"
51598,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/XMLModelTestCase.java,181,,"            ""/vendor[1]/location[4]/@manager"","
51599,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/XMLModelTestCase.java,185,,"         context.registerNamespace(""price"", ""priceNS"");"
51600,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/XMLModelTestCase.java,185,,"         context.registerNamespace(""price"", ""priceNS"");"
51601,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/XMLModelTestCase.java,284,,"            ""Tangerine Drive"","
51602,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/XMLModelTestCase.java,297,,"            ""Orchard Road"");"
51603,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/XMLModelTestCase.java,388,,"        assertXPathValueIterator(context, ""vendor//saleEnds"", list(""never""));"
51604,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/XMLModelTestCase.java,469,,"        assertXPathValue(context, ""vendor/location/@id"", ""100"");"
51605,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/XMLModelTestCase.java,487,,"            ""10%"");"
51606,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/XMLModelTestCase.java,511,,"            ""20%"");"
51607,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/XMLPreserveSpaceTest.java,50,,"        doTest(""unspecified"", DocumentContainer.MODEL_DOM, "" foo "");"
51608,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/XMLPreserveSpaceTest.java,62,,"        doTest(""nested"", DocumentContainer.MODEL_DOM, "" foo ;bar; baz "");"
51609,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/XMLSpaceTest.java,50,,"        doTest(""unspecified"", DocumentContainer.MODEL_DOM, ""foo"");"
51610,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/XMLSpaceTest.java,62,,"        doTest(""nested"", DocumentContainer.MODEL_DOM, ""foo;bar; baz "");"
51611,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/XMLUpperCaseElementsTest.java,48,,"                ""John"");"
51612,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/container/ContainerModelTest.java,39,,"        private String[] array = new String[]{""foo"", ""bar""};"
51613,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/container/ContainerModelTest.java,39,,"        private String[] array = new String[]{""foo"", ""bar""};"
51614,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/container/ContainerModelTest.java,88,,"        assertXPathSetValue(context, ""$list[1]"", ""baz"");"
51615,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/container/ContainerModelTest.java,89,,"        assertEquals(""Checking setValue(index)"", ""baz"", array[0]);"
51616,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/container/ContainerModelTest.java,100,,"        assertXPathValueAndPointer(context, ""/container[1]"","
51617,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/dynamic/DynamicPropertiesModelTest.java,46,,"        assertXPathValue(context, ""map/Key1"", ""Value 1"");"
51618,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/dynamic/DynamicPropertiesModelTest.java,50,,"        assertXPathValue(context, ""map/Key2/name"", ""Name 6"");"
51619,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/dynamic/DynamicPropertiesModelTest.java,52,,"        assertXPathPointer(context, ""map/Key2/name"", ""/map[@name='Key2']/name"");"
51620,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/dynamic/DynamicPropertiesModelTest.java,153,,"            ""/map[@name='TestKey1']"","
51621,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/dynamic/DynamicPropertiesModelTest.java,180,,"            ""/map[@name='TestKey2']/int"","
51622,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/dynamic/DynamicPropertiesModelTest.java,212,,"            ""/map[@name='TestKey3'][3]"","
51623,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/dynamic/DynamicPropertiesModelTest.java,242,,"            ""/map/TestKey4[1]/int"","
51624,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/dynamic/DynamicPropertiesModelTest.java,244,,"            ""/map[@name='TestKey4'][1]/int"");"
51625,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/ri/model/dynamic/DynamicPropertiesModelTest.java,307,,"        m.put(""fruit"", ""apple"");"
51626,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/servlet/JXPathServletContextTest.java,42,,"        context.setAttribute(""app"", ""OK"");"
51627,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/servlet/JXPathServletContextTest.java,59,,"        assertEquals(""Context property"", ""bar"", appContext.getValue(""/foo""));"
51628,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/servlet/JXPathServletContextTest.java,108,,"        reqContext.setValue(""/foo1"", ""bar1"");"
51629,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/servlet/JXPathServletContextTest.java,108,,"        reqContext.setValue(""/foo1"", ""bar1"");"
51630,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/servlet/JXPathServletContextTest.java,111,,"        sessionContext.setValue(""/foo2"", ""bar2"");"
51631,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/servlet/JXPathServletContextTest.java,145,,"        session.setAttribute(""session"", ""session"");"
51632,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/servlet/JXPathServletContextTest.java,148,,"        request.setAttribute(""request"", ""request"");"
51633,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/servlet/JXPathServletContextTest.java,154,,"        pageContext.setAttribute(""page"", ""page"");"
51634,./TargetProjects/commons-jxpath/src/test/java/org/apache/commons/jxpath/util/BasicTypeConverterTest.java,99,,"        assertConversion(Collections.singleton(""Earth""), String.class, ""Earth"");"
51635,./TargetProjects/commons-lang/src/main/java/org/apache/commons/lang3/ArrayUtils.java,630,,"                throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: 0"");"
51636,./TargetProjects/commons-lang/src/main/java/org/apache/commons/lang3/ArrayUtils.java,638,,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);"
51637,./TargetProjects/commons-lang/src/main/java/org/apache/commons/lang3/ArrayUtils.java,807,,"        @SuppressWarnings(""unchecked"") // type must be T"
51638,./TargetProjects/commons-lang/src/main/java/org/apache/commons/lang3/BooleanUtils.java,93,,"        ObjectUtils.requireNonEmpty(array, ""array"");"
51639,./TargetProjects/commons-lang/src/main/java/org/apache/commons/lang3/ClassPathUtils.java,57,,"        Validate.notNull(context, ""context"" );"
51640,./TargetProjects/commons-lang/src/main/java/org/apache/commons/lang3/ClassPathUtils.java,58,,"        Validate.notNull(resourceName, ""resourceName"");"
51641,./TargetProjects/commons-lang/src/main/java/org/apache/commons/lang3/Conversion.java,98,,"            throw new IllegalArgumentException(""Cannot interpret '"" + hexDigit + ""' as a hexadecimal digit"");"
51642,./TargetProjects/commons-lang/src/main/java/org/apache/commons/lang3/Conversion.java,98,,"            throw new IllegalArgumentException(""Cannot interpret '"" + hexDigit + ""' as a hexadecimal digit"");"
51643,./TargetProjects/commons-lang/src/main/java/org/apache/commons/lang3/LocaleUtils.java,268,,"        throw new IllegalArgumentException(""Invalid locale format: "" + str);"
51644,./TargetProjects/commons-lang/src/main/java/org/apache/commons/lang3/ObjectUtils.java,270,,"            @SuppressWarnings(""unchecked"") // OK because input is of type T"
51645,./TargetProjects/commons-lang/src/main/java/org/apache/commons/lang3/ObjectUtils.java,824,,"        Validate.notNull(object, ""object"");"
51646,./TargetProjects/commons-lang/src/main/java/org/apache/commons/lang3/RandomUtils.java,94,,"                ""Start value must be smaller or equal to end value."");"
51647,./TargetProjects/commons-lang/src/main/java/org/apache/commons/lang3/RandomUtils.java,95,,"        Validate.isTrue(startInclusive >= 0, ""Both range values must be non-negative."");"
51648,./TargetProjects/commons-lang/src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,60,,"              {""\"""", ""\\\""""},"
51649,./TargetProjects/commons-lang/src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,61,,"              {""\\"", ""\\\\""},"
51650,./TargetProjects/commons-lang/src/main/java/org/apache/commons/lang3/StringUtils.java,2136,,"            throw new IllegalArgumentException(""Strings must not be null"");"
51651,./TargetProjects/commons-lang/src/main/java/org/apache/commons/lang3/SystemUtils.java,1143,,"    public static final boolean IS_OS_MAC_OSX = getOsMatchesName(""Mac OS X"");"
51652,./TargetProjects/commons-lang/src/main/java/org/apache/commons/lang3/Validate.java,1015,,"    @SuppressWarnings(""boxing"")"
51653,./TargetProjects/commons-lang/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java,2393,,"                        ""Field names are mandatory when using JsonToStringStyle"");"
51654,./TargetProjects/commons-lang/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java,2397,,"                        ""FullDetail must be true when using JsonToStringStyle"");"
51655,./TargetProjects/commons-lang/src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java,40,,"        Validate.notNull(array, ""array"");"
51656,./TargetProjects/commons-lang/src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java,41,,"        Validate.isTrue(array.length != 0, ""Array cannot be empty."");"
51657,./TargetProjects/commons-lang/src/main/java/org/apache/commons/lang3/math/NumberUtils.java,710,,"                    throw new NumberFormatException(str + "" is not a valid number."");"
51658,./TargetProjects/commons-lang/src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java,294,,"        Validate.notNull(field, ""field"");"
51659,./TargetProjects/commons-lang/src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java,381,,"        Validate.notNull(field, ""Cannot locate declared field %s.%s"", cls.getName(), fieldName);"
51660,./TargetProjects/commons-lang/src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java,464,,"        Validate.notNull(target, ""target"");"
51661,./TargetProjects/commons-lang/src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,224,,"            messagePrefix = ""No such accessible method: "";"
51662,./TargetProjects/commons-lang/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java,1010,,"        throw new IllegalStateException(""found an unhandled type: "" + type);"
51663,./TargetProjects/commons-lang/src/main/java/org/apache/commons/lang3/text/StrBuilder.java,602,,"            throw new StringIndexOutOfBoundsException(""startIndex must be valid"");"
51664,./TargetProjects/commons-lang/src/main/java/org/apache/commons/lang3/text/StrBuilder.java,605,,"            throw new StringIndexOutOfBoundsException(""length must be valid"");"
51665,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,527,,"        assertEquals(""Index: -1, Length: 0"", e.getMessage());"
51666,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,535,,"        assertEquals(""Index: 4, Length: 2"", e.getMessage());"
51667,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,537,,"        assertEquals(""Index: -1, Length: 2"", e.getMessage());"
51668,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,77,,"        final String[] array = ArrayUtils.toArray(""foo"", ""bar"");"
51669,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,77,,"        final String[] array = ArrayUtils.toArray(""foo"", ""bar"");"
51670,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,110,,"        final StringBuilder builder = new StringBuilder(""pick"");"
51671,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,111,,"        original1 = new Object[]{builder, ""a"", new String[]{""stick""}};"
51672,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,212,,"        assertFalse(ArrayUtils.contains(array, ""notInArray""));"
51673,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,270,,"    @SuppressWarnings(""cast"")"
51674,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,5043,,"            assertTrue(ArrayUtils.contains(array1, element), ""Element "" + element + "" not found"");"
51675,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,5043,,"            assertTrue(ArrayUtils.contains(array1, element), ""Element "" + element + "" not found"");"
51676,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,5149,,"        assertTrue(ArrayUtils.isEquals(leftSubarray, ArrayUtils.subarray(array, 0, 4)), ""0 start, mid end"");"
51677,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,5150,,"        assertTrue(ArrayUtils.isEquals(array, ArrayUtils.subarray(array, 0, array.length)), ""0 start, length end"");"
51678,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,5151,,"        assertTrue(ArrayUtils.isEquals(midSubarray, ArrayUtils.subarray(array, 1, 5)), ""mid start, mid end"");"
51679,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,5153,,"                ""mid start, length end"");"
51680,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,5155,,"        assertNull(ArrayUtils.subarray(nullArray, 0, 3), ""null input"");"
51681,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,5157,,"                ""empty array"");"
51682,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,5158,,"        assertEquals(ArrayUtils.EMPTY_BOOLEAN_ARRAY, ArrayUtils.subarray(array, 4, 2), ""start > end"");"
51683,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,5159,,"        assertEquals(ArrayUtils.EMPTY_BOOLEAN_ARRAY, ArrayUtils.subarray(array, 3, 3), ""start == end"");"
51684,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,5161,,"                ""start undershoot, normal end"");"
51685,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,5162,,"        assertEquals(ArrayUtils.EMPTY_BOOLEAN_ARRAY, ArrayUtils.subarray(array, 33, 4), ""start overshoot, any end"");"
51686,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,5164,,"                ""normal start, end overshoot"");"
51687,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,5165,,"        assertTrue(ArrayUtils.isEquals(array, ArrayUtils.subarray(array, -2, 12)), ""start undershoot, end overshoot"");"
51688,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,5170,,"                ""empty array, object test"");"
51689,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,5171,,"        assertSame(ArrayUtils.EMPTY_BOOLEAN_ARRAY, ArrayUtils.subarray(array, 4, 1), ""start > end, object test"");"
51690,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,5172,,"        assertSame(ArrayUtils.EMPTY_BOOLEAN_ARRAY, ArrayUtils.subarray(array, 3, 3), ""start == end, object test"");"
51691,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,5174,,"                ""start overshoot, any end, object test"");"
51692,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,6529,,"        assertEquals(""<empty>"", ArrayUtils.toString(null, ""<empty>""));"
51693,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,6542,,"        final Object[] array = {1, 2, 3, ""array"", ""test""};"
51694,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/BooleanUtilsTest.java,138,,"        assertFalse(BooleanUtils.toBoolean(""off""));"
51695,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/BooleanUtilsTest.java,142,,"        assertFalse(BooleanUtils.toBoolean(""false""));"
51696,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/BooleanUtilsTest.java,144,,"        assertTrue(BooleanUtils.toBoolean(""true"")); // interned handled differently"
51697,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/BooleanUtilsTest.java,165,,"        assertTrue(BooleanUtils.toBoolean(""yes""));"
51698,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/BooleanUtilsTest.java,453,,"                ""False result for (true, true)"");"
51699,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/BooleanUtilsTest.java,459,,"                ""True result for (false, false)"");"
51700,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/BooleanUtilsTest.java,510,,"                ""False result for (true, true, true)"");"
51701,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,66,,"        assertEquals(""012"", CharSequenceUtils.subSequence(""012"", 0));"
51702,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,133,,"            new TestData(""a"",   true,      0,     ""abc"", 0,     0,     true),"
51703,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,138,,"            new TestData(""Abc"", true,      0,     ""abc"", 0,     3,     true),"
51704,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,243,,"        testNewLastIndexOfSingle(""apache"", ""a"");"
51705,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/CharSetTest.java,59,,"        assertEquals(""[a-e]"", CharSet.getInstance(new String[] {""a-e""}).toString());"
51706,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/CharSetTest.java,107,,"        set = CharSet.getInstance(""abc"");"
51707,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/CharSetTest.java,343,,"        final CharSet atoc = CharSet.getInstance(""a-c"");"
51708,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/CharSetTest.java,345,,"        final CharSet notatoc = CharSet.getInstance(""^a-c"");"
51709,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/CharSetUtilsTest.java,52,,"        assertEquals("""", CharSetUtils.squeeze("""", ""a-e""));"
51710,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/CharSetUtilsTest.java,54,,"        assertEquals(""hello"", CharSetUtils.squeeze(""hello"", (String) null));"
51711,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/CharSetUtilsTest.java,57,,"        assertEquals(""helo"", CharSetUtils.squeeze(""hello"", ""l-p""));"
51712,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/CharSetUtilsTest.java,120,,"        assertTrue(CharSetUtils.containsAny(""hello"", ""a-z""));"
51713,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ClassPathUtilsTest.java,47,,"                () -> ClassPathUtils.toFullyQualifiedName((Class<?>) null, ""Test.properties""));"
51714,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java,121,,"        assertEquals(""java.lang.String"", result.get(0));"
51715,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java,161,,"        assertEquals(""j.l.String"", ClassUtils.getAbbreviatedName(String.class, 1));"
51716,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java,163,,"        assertEquals(""o.a.c.l.ClassUtils"", ClassUtils.getAbbreviatedName(ClassUtils.class, 18));"
51717,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java,164,,"        assertEquals(""j.lang.String"", ClassUtils.getAbbreviatedName(String.class, 13));"
51718,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java,200,,"        assertEquals(""o.a.c.l.ClassUtils"", ClassUtils.getAbbreviatedName(""org.apache.commons.lang3.ClassUtils"", 18));"
51719,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java,209,,"        assertEquals(""..."", ClassUtils.getAbbreviatedName(""..."", 2));"
51720,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java,252,,"        assertEquals(""boolean"", ClassUtils.getCanonicalName(boolean.class));"
51721,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java,253,,"        assertEquals(""byte"", ClassUtils.getCanonicalName(byte.class));"
51722,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java,254,,"        assertEquals(""char"", ClassUtils.getCanonicalName(char.class));"
51723,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java,255,,"        assertEquals(""short"", ClassUtils.getCanonicalName(short.class));"
51724,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java,256,,"        assertEquals(""int"", ClassUtils.getCanonicalName(int.class));"
51725,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java,257,,"        assertEquals(""long"", ClassUtils.getCanonicalName(long.class));"
51726,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java,258,,"        assertEquals(""float"", ClassUtils.getCanonicalName(float.class));"
51727,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java,259,,"        assertEquals(""double"", ClassUtils.getCanonicalName(double.class));"
51728,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java,262,,"        assertEquals(""boolean[]"", ClassUtils.getCanonicalName(boolean[].class));"
51729,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java,263,,"        assertEquals(""byte[]"", ClassUtils.getCanonicalName(byte[].class));"
51730,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java,264,,"        assertEquals(""char[]"", ClassUtils.getCanonicalName(char[].class));"
51731,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java,265,,"        assertEquals(""short[]"", ClassUtils.getCanonicalName(short[].class));"
51732,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java,266,,"        assertEquals(""int[]"", ClassUtils.getCanonicalName(int[].class));"
51733,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java,267,,"        assertEquals(""long[]"", ClassUtils.getCanonicalName(long[].class));"
51734,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java,268,,"        assertEquals(""float[]"", ClassUtils.getCanonicalName(float[].class));"
51735,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java,269,,"        assertEquals(""double[]"", ClassUtils.getCanonicalName(double[].class));"
51736,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java,374,,"        assertEquals(""org.apache.commons.lang3.ClassUtilsTest$Inner"", ClassUtils.getName(Inner.class));"
51737,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java,379,,"        assertEquals(""org.apache.commons.lang3.ClassUtils"", ClassUtils.getName(new ClassUtils(), ""<null>""));"
51738,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java,381,,"        assertEquals(""java.lang.String"", ClassUtils.getName(""hello"", ""<null>""));"
51739,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java,397,,"        assertEquals(""org.apache.commons.lang3"", ClassUtils.getPackageCanonicalName(ClassUtils.class));"
51740,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java,449,,"        assertEquals("""", ClassUtils.getPackageCanonicalName(""int[][]""));"
51741,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java,459,,"        assertEquals(""java.lang"", ClassUtils.getPackageName(String.class));"
51742,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java,508,,"        assertEquals(""ClassUtils"", ClassUtils.getShortCanonicalName(ClassUtils.class));"
51743,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java,509,,"        assertEquals(""ClassUtils[]"", ClassUtils.getShortCanonicalName(ClassUtils[].class));"
51744,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java,510,,"        assertEquals(""ClassUtils[][]"", ClassUtils.getShortCanonicalName(ClassUtils[][].class));"
51745,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java,524,,"        assertEquals(""ClassUtilsTest.Inner"", ClassUtils.getShortCanonicalName(Inner.class));"
51746,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java,1357,,"        assertArrayEquals(ArrayUtils.EMPTY_CLASS_ARRAY, ClassUtils.primitivesToWrappers(), ""empty -> empty"");"
51747,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ConversionTest.java,592,,"        final String src = ""CDF1F0C10F12345678"";"
51748,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ConversionTest.java,1186,,"            ""ffffffffffffffffffffffff"","
51749,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ConversionTest.java,1351,,"        assertEquals(""00000"", Conversion.byteToHex((byte) 0xEF, 0, ""00000"", 0, 0));"
51750,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,82,,"    @SuppressWarnings(""unchecked"")"
51751,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,85,,"        @SuppressWarnings(""rawtypes"")"
51752,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,256,,"        assertEquals(Traffic.RED, EnumUtils.getEnum(Traffic.class, ""RED""));"
51753,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,257,,"        assertEquals(Traffic.AMBER, EnumUtils.getEnum(Traffic.class, ""AMBER""));"
51754,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,258,,"        assertEquals(Traffic.GREEN, EnumUtils.getEnum(Traffic.class, ""GREEN""));"
51755,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,259,,"        assertNull(EnumUtils.getEnum(Traffic.class, ""PURPLE""));"
51756,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,293,,"        assertNull(EnumUtils.getEnumIgnoreCase(Traffic.class, ""purple""));"
51757,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/FunctionsTest.java,280,,"        final IOException ioe = new IOException(""Unknown I/O error"");"
51758,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/FunctionsTest.java,547,,"        assertEquals(""Odd Invocation: 1"", cause.getMessage());"
51759,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/FunctionsTest.java,804,,"                throw new IOException(""test"");"
51760,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/LocaleUtilsTest.java,181,,"                ""Should fail second part not uppercase"");"
51761,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,122,,"    private static final String FOO = ""foo"";"
51762,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,123,,"    private static final String BAR = ""bar"";"
51763,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,204,,"        final CloneableString string = new CloneableString(""apache"");"
51764,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,250,,"        final NonComparableCharSequence baz = new NonComparableCharSequence(""baz"");"
51765,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,251,,"        final NonComparableCharSequence blah = new NonComparableCharSequence(""blah"");"
51766,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,314,,"        assertEquals(""abc"", ObjectUtils.CONST(""abc""), ""CONST(Object)"");"
51767,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,381,,"        assertSame(o, ObjectUtils.defaultIfNull(o, dflt), ""dflt was returned when o was not null"");"
51768,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,409,,"        final String firstNonNullGenerics = ObjectUtils.firstNonNull(null, null, ""123"", ""456"");"
51769,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,491,,"        final String expected = ""java.lang.Integer@"" + Integer.toHexString(System.identityHashCode(i));"
51770,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,497,,"        assertThrows(NullPointerException.class, () -> ObjectUtils.identityToString((Appendable) null, ""tmp""));"
51771,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/RandomStringUtilsTest.java,60,,"        assertEquals(50, r1.length(), ""random(50) length"");"
51772,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/RandomStringUtilsTest.java,63,,"        assertTrue(!r1.equals(r2), ""!r1.equals(r2)"");"
51773,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/RandomStringUtilsTest.java,287,,"            assertThat(""within range"", s.length(), allOf(greaterThanOrEqualTo(expectedMinLengthInclusive), lessThanOrEqualTo(expectedMaxLengthExclusive - 1)));"
51774,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/RandomStringUtilsTest.java,298,,"        assertThat(""min generated, may fail randomly rarely"", minCreatedLength, is(expectedMinLengthInclusive));"
51775,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/RandomStringUtilsTest.java,299,,"        assertThat(""max generated, may fail randomly rarely"", maxCreatedLength, is(expectedMaxLengthExclusive - 1));"
51776,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/RangeTest.java,68,,"        assertFalse(rb.contains(null), ""should not contain null"");"
51777,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/RangeTest.java,69,,"        assertTrue(rb.contains(10), ""should contain 10"");"
51778,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/RangeTest.java,79,,"        Range<String> rbstr = Range.between(""house"", ""i"");"
51779,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/RegExUtilsTest.java,36,,"        assertEquals(""any"", RegExUtils.removeAll(""any"", (Pattern) null));"
51780,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/RegExUtilsTest.java,43,,"        assertEquals(""A\nB"", RegExUtils.removeAll(""A<__>\n<__>B"", Pattern.compile(""<.*>"")));"
51781,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/RegExUtilsTest.java,43,,"        assertEquals(""A\nB"", RegExUtils.removeAll(""A<__>\n<__>B"", Pattern.compile(""<.*>"")));"
51782,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/RegExUtilsTest.java,44,,"        assertEquals(""AB"", RegExUtils.removeAll(""A<__>\n<__>B"", Pattern.compile(""(?s)<.*>"")));"
51783,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/RegExUtilsTest.java,45,,"        assertEquals(""ABC123"", RegExUtils.removeAll(""ABCabc123abc"", Pattern.compile(""[a-z]"")));"
51784,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/RegExUtilsTest.java,45,,"        assertEquals(""ABC123"", RegExUtils.removeAll(""ABCabc123abc"", Pattern.compile(""[a-z]"")));"
51785,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/RegExUtilsTest.java,45,,"        assertEquals(""ABC123"", RegExUtils.removeAll(""ABCabc123abc"", Pattern.compile(""[a-z]"")));"
51786,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/RegExUtilsTest.java,49,,"        assertEquals("""", RegExUtils.removeAll(""<A>x\\ny</A>"", Pattern.compile(""<A>.*</A>"")));"
51787,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/RegExUtilsTest.java,50,,"        assertEquals("""", RegExUtils.removeAll(""<A>\nxy\n</A>"", Pattern.compile(""<A>.*</A>"", Pattern.DOTALL)));"
51788,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/RegExUtilsTest.java,69,,"                () -> RegExUtils.removeAll(""any"", ""{badRegexSyntax}""),"
51789,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/RegExUtilsTest.java,81,,"        assertEquals(""bc"", RegExUtils.removeFirst(""abc"", Pattern.compile("".?"")));"
51790,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/RegExUtilsTest.java,85,,"        assertEquals(""ABCbc123"", RegExUtils.removeFirst(""ABCabc123"", Pattern.compile(""[a-z]"")));"
51791,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/RegExUtilsTest.java,86,,"        assertEquals(""ABC123abc"", RegExUtils.removeFirst(""ABCabc123abc"", Pattern.compile(""[a-z]+"")));"
51792,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/RegExUtilsTest.java,134,,"        assertEquals(""zzz"", RegExUtils.replaceAll("""", Pattern.compile(""""), ""zzz""));"
51793,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/RegExUtilsTest.java,139,,"        assertEquals(""z\nz"", RegExUtils.replaceAll(""<__>\n<__>"", Pattern.compile(""<.*>""), ""z""));"
51794,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/RegExUtilsTest.java,147,,"        assertEquals(""ABC_123"", RegExUtils.replaceAll(""ABCabc123"", Pattern.compile(""[^A-Z0-9]+""), ""_""));"
51795,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/RegExUtilsTest.java,150,,"                RegExUtils.replaceAll(""Lorem ipsum  dolor   sit"", Pattern.compile(""( +)([a-z]+)""), ""_$2""));"
51796,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/RegExUtilsTest.java,150,,"                RegExUtils.replaceAll(""Lorem ipsum  dolor   sit"", Pattern.compile(""( +)([a-z]+)""), ""_$2""));"
51797,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/RegExUtilsTest.java,150,,"                RegExUtils.replaceAll(""Lorem ipsum  dolor   sit"", Pattern.compile(""( +)([a-z]+)""), ""_$2""));"
51798,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/SerializationUtilsTest.java,61,,"        iMap.put(""FOO"", iString);"
51799,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/SerializationUtilsTest.java,62,,"        iMap.put(""BAR"", iInteger);"
51800,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/SerializationUtilsTest.java,85,,"        serEx = new SerializationException(""Message"");"
51801,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,74,,"                ""He didn't say, \""stop!\"""");"
51802,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,179,,"        {""no escaping"", ""plain text"", ""plain text""},"
51803,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,261,,"        assertEquals(""&lt;abc&gt;"", StringEscapeUtils.escapeXml(""<abc>""));"
51804,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,261,,"        assertEquals(""&lt;abc&gt;"", StringEscapeUtils.escapeXml(""<abc>""));"
51805,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,291,,"        assertEquals(""a\tb\rc\nd"", StringEscapeUtils.escapeXml10(""a\tb\rc\nd""), ""XML 1.0 should not escape \t \n \r"");"
51806,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,396,,"        assertEquals(""foo.bar"",            StringEscapeUtils.escapeCsv(""foo.bar""));"
51807,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,397,,"        assertEquals(""\""foo,bar\"""",        StringEscapeUtils.escapeCsv(""foo,bar""));"
51808,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,397,,"        assertEquals(""\""foo,bar\"""",        StringEscapeUtils.escapeCsv(""foo,bar""));"
51809,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,398,,"        assertEquals(""\""foo\nbar\"""",       StringEscapeUtils.escapeCsv(""foo\nbar""));"
51810,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,398,,"        assertEquals(""\""foo\nbar\"""",       StringEscapeUtils.escapeCsv(""foo\nbar""));"
51811,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,399,,"        assertEquals(""\""foo\rbar\"""",       StringEscapeUtils.escapeCsv(""foo\rbar""));"
51812,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,399,,"        assertEquals(""\""foo\rbar\"""",       StringEscapeUtils.escapeCsv(""foo\rbar""));"
51813,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,400,,"        assertEquals(""\""foo\""\""bar\"""",     StringEscapeUtils.escapeCsv(""foo\""bar""));"
51814,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,400,,"        assertEquals(""\""foo\""\""bar\"""",     StringEscapeUtils.escapeCsv(""foo\""bar""));"
51815,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,401,,"        assertEquals(""foo\uD84C\uDFB4bar"", StringEscapeUtils.escapeCsv(""foo\uD84C\uDFB4bar""));"
51816,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,441,,"        assertEquals(""\""foo.bar\"""",          StringEscapeUtils.unescapeCsv(""\""foo.bar\""""));"
51817,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsContainsTest.java,60,,"        assertTrue(StringUtils.contains(""abc"", 'a'));"
51818,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsContainsTest.java,117,,"        assertFalse(StringUtils.containsAny(""zzabyycdxx"", (char[]) null));"
51819,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsContainsTest.java,182,,"        assertFalse(StringUtils.containsAny(null, new String[] { ""hello"" }));"
51820,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsContainsTest.java,186,,"        assertFalse(StringUtils.containsAny(""hello, goodbye"", (String[]) null));"
51821,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsContainsTest.java,189,,"        assertTrue(StringUtils.containsAny(""hello, goodbye"", new String[]{""hello"", ""Goodbye""}));"
51822,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsContainsTest.java,190,,"        assertFalse(StringUtils.containsAny(""hello, goodbye"", new String[]{""Hello"", ""Goodbye""}));"
51823,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsContainsTest.java,194,,"        assertTrue(StringUtils.containsAny(""abcd"", ""ab"", null));"
51824,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsEmptyBlankTest.java,36,,"        assertFalse(StringUtils.isEmpty(""foo""));"
51825,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsEmptyBlankTest.java,37,,"        assertFalse(StringUtils.isEmpty(""  foo  ""));"
51826,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsEmptyBlankTest.java,54,,"        assertTrue(StringUtils.isAnyEmpty("""", ""bar""));"
51827,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsEmptyBlankTest.java,55,,"        assertTrue(StringUtils.isAnyEmpty(""bob"", """"));"
51828,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsEmptyBlankTest.java,56,,"        assertTrue(StringUtils.isAnyEmpty(""  bob  "", null));"
51829,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsEmptyBlankTest.java,154,,"        assertEquals(""abc"", StringUtils.firstNonBlank(""abc""));"
51830,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsEmptyBlankTest.java,155,,"        assertEquals(""xyz"", StringUtils.firstNonBlank(null, ""xyz""));"
51831,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,171,,"        assertFalse(StringUtils.equalsAny(FOO, new CustomCharSequence(""fOo"")));"
51832,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,206,,"        assertEquals(0, StringUtils.compare(""abc"", ""abc""));"
51833,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,212,,"        assertTrue(StringUtils.compare(""ab"", ""ab "") < 0);"
51834,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,239,,"        assertEquals(0, StringUtils.compareIgnoreCase(""abc"", ""ABC""));"
51835,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,246,,"        assertTrue(StringUtils.compareIgnoreCase(""ab"", ""AB "") < 0);"
51836,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,273,,"        assertEquals(0, StringUtils.indexOf(""aabaabaa"", 'a'));"
51837,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,353,,"        assertEquals(7, StringUtils.indexOf(""12345678"", ""8"", 5));"
51838,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,371,,"        assertEquals(-1, StringUtils.indexOfAny(""zzabyycdxx"", (char[]) null));"
51839,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,449,,"        assertEquals(-1, StringUtils.indexOfAnyBut(""aba"", 'a', 'b'));"
51840,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,513,,"        assertEquals(1, StringUtils.indexOfIgnoreCase(""aab"", ""AB"", 1));"
51841,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,515,,"        assertEquals(-1, StringUtils.indexOfIgnoreCase(""ab"", ""AAB"", 0));"
51842,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,752,,"        assertEquals(-1, StringUtils.ordinalIndexOf(""aaaaaaaaa"", ""a"", 0));"
51843,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,765,,"        assertEquals(0, StringUtils.ordinalIndexOf(""aaaaaa"", ""aa"", 1));"
51844,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,776,,"        assertEquals(0, StringUtils.ordinalIndexOf(""abababab"", ""abab"", 1));"
51845,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,776,,"        assertEquals(0, StringUtils.ordinalIndexOf(""abababab"", ""abab"", 1));"
51846,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsIsTest.java,36,,"        assertTrue(StringUtils.isAlpha(""kgKgKgKgkgkGkjkjlJlOKLgHdGdHgl""));"
51847,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsIsTest.java,37,,"        assertFalse(StringUtils.isAlpha(""ham kso""));"
51848,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsIsTest.java,39,,"        assertFalse(StringUtils.isAlpha(""hkHKHik6iUGHKJgU7tUJgKJGI87GIkug""));"
51849,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsIsTest.java,41,,"        assertFalse(StringUtils.isAlpha(""hkHKHik*khbkuh""));"
51850,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsStartsEndsWithTest.java,88,,"        assertFalse(StringUtils.startsWithAny(null, ""abc""));"
51851,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsStartsEndsWithTest.java,89,,"        assertFalse(StringUtils.startsWithAny(""abcxyz"", (String[]) null));"
51852,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsStartsEndsWithTest.java,92,,"        assertTrue(StringUtils.startsWithAny(""abcxyz"", null, ""xyz"", ""abc""));"
51853,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsStartsEndsWithTest.java,127,,"        assertTrue(StringUtils.endsWith(""\u03B1\u03B2\u03B3\u03B4"", ""\u03B4""),"
51854,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsStartsEndsWithTest.java,158,,"        assertTrue(StringUtils.endsWithIgnoreCase(""abcdef"", ""def""));"
51855,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsStartsEndsWithTest.java,179,,"        assertTrue(StringUtils.endsWithAny(""abcXYZ"", ""def"", ""XYZ""));"
51856,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,29,,"    private static final String FOO = ""foo"";"
51857,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,46,,"        assertEquals(""abc"", StringUtils.substring(""abc"", -4));"
51858,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,131,,"        assertEquals(""foo"", StringUtils.substringBefore(""fooXXbarXXbaz"", 'X'));"
51859,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,140,,"        assertEquals(""f"", StringUtils.substringBefore(""foot"", 'o'));"
51860,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,142,,"        assertEquals(""a"", StringUtils.substringBefore(""abcba"", 'b'));"
51861,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,297,,"        String[] results = StringUtils.substringsBetween(""[one], [two], [three]"", ""["", ""]"");"
51862,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,299,,"        assertEquals(""one"", results[0]);"
51863,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,300,,"        assertEquals(""two"", results[1]);"
51864,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,362,,"             StringUtils.countMatches(""one long someone sentence of one"", ""one""));"
51865,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,369,,"        assertEquals(0, StringUtils.countMatches(""abba"", null));"
51866,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,89,,"    private static final String[] ARRAY_LIST = {""foo"", ""bar"", ""baz""};"
51867,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,89,,"    private static final String[] ARRAY_LIST = {""foo"", ""bar"", ""baz""};"
51868,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,135,,"        final String abcdefghijklmno = ""abcdefghijklmno"";"
51869,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,259,,"        final String raspberry = ""raspberry peach"";"
51870,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,263,,"        assertEquals(""abc..."", StringUtils.abbreviate(""abcdefg"", 6));"
51871,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,271,,"                () -> StringUtils.abbreviate(""abc"", 3),"
51872,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,272,,"                ""StringUtils.abbreviate expecting IllegalArgumentException"");"
51873,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,283,,"                () -> StringUtils.abbreviate(""abcdefghij"", 0, 3),"
51874,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,294,,"        assertAbbreviateWithOffset(""abcdefg..."", -1, 10);"
51875,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,303,,"        assertAbbreviateWithOffset(""...ijklmno"", 8, 10);"
51876,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,319,,"        assertNull(StringUtils.abbreviate(null, ""..."", 10));"
51877,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,369,,"        assertAbbreviateWithAbbrevMarkerAndOffset(""/ghijklmno"", ""/"", 7, 10);"
51878,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,390,,"        assertEquals(""ab.f"", StringUtils.abbreviateMiddle(""abcdef"", ""."", 4));"
51879,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,417,,"        assertEquals(""a.d"", StringUtils.abbreviateMiddle(""abcd"", ""."", 3));"
51880,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,431,,"        assertEquals(""xyz"", StringUtils.appendIfMissing("""", ""xyz""), ""appendIfMissing(\""\"",xyz)"");"
51881,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,432,,"        assertEquals(""abcxyz"", StringUtils.appendIfMissing(""abc"", ""xyz""), ""appendIfMissing(abc,xyz)"");"
51882,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,441,,"        assertEquals(""abcxyz"", StringUtils.appendIfMissing(""abc"", ""xyz"", ""mno""), ""appendIfMissing(abc,xyz,mno)"");"
51883,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,443,,"        assertEquals(""abcmno"", StringUtils.appendIfMissing(""abcmno"", ""xyz"", ""mno""), ""appendIfMissing(abcmno,xyz,mno)"");"
51884,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,444,,"        assertEquals(""abcXYZxyz"", StringUtils.appendIfMissing(""abcXYZ"", ""xyz"", ""mno""), ""appendIfMissing(abcXYZ,xyz,mno)"");"
51885,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,486,,"        assertEquals(""Cat"", StringUtils.capitalize(""cat""));"
51886,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,495,,"        assertEquals(""    "", StringUtils.center("""", 4));"
51887,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,502,,"        assertEquals("" a  "", StringUtils.center(""a"", 4));"
51888,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,545,,"                {FOO_UNCAP + ""\r\n"", FOO_UNCAP},"
51889,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,568,,"        assertEquals(""foo"", StringUtils.chomp(""foobar"", ""bar""), ""chomp(String, String) failed"");"
51890,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,568,,"        assertEquals(""foo"", StringUtils.chomp(""foobar"", ""bar""), ""chomp(String, String) failed"");"
51891,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,627,,"        assertEquals(""NULL"", StringUtils.defaultString(null, ""NULL""));"
51892,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,792,,"        assertEquals(""i am a robot"", StringUtils.difference(null, ""i am a robot""));"
51893,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,793,,"        assertEquals(""i am a machine"", StringUtils.difference(""i am a machine"", null));"
51894,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,813,,"        assertEquals(2, StringUtils.indexOfDifference(""ab"", ""abxyz""));"
51895,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,814,,"        assertEquals(2, StringUtils.indexOfDifference(""abcde"", ""abxyz""));"
51896,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,915,,"        assertEquals(0, StringUtils.getFuzzyDistance(""Workshop"", ""b"", Locale.ENGLISH));"
51897,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,960,,"        assertEquals(0.93d, StringUtils.getJaroWinklerDistance(""frog"", ""fog""));"
51898,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,960,,"        assertEquals(0.93d, StringUtils.getJaroWinklerDistance(""frog"", ""fog""));"
51899,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,961,,"        assertEquals(0.0d, StringUtils.getJaroWinklerDistance(""fly"", ""ant""));"
51900,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,961,,"        assertEquals(0.0d, StringUtils.getJaroWinklerDistance(""fly"", ""ant""));"
51901,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,962,,"        assertEquals(0.44d, StringUtils.getJaroWinklerDistance(""elephant"", ""hippo""));"
51902,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,962,,"        assertEquals(0.44d, StringUtils.getJaroWinklerDistance(""elephant"", ""hippo""));"
51903,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,995,,"        assertEquals(7, StringUtils.getLevenshteinDistance(""aaapppp"", """"));"
51904,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1000,,"        assertEquals(8, StringUtils.getLevenshteinDistance(""hippo"", ""zzzzzzzz""));"
51905,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1002,,"        assertEquals(1, StringUtils.getLevenshteinDistance(""hello"", ""hallo""));"
51906,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1022,,"        assertEquals(-1, StringUtils.getLevenshteinDistance(""aaa"", ""bbb"", 2));"
51907,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1022,,"        assertEquals(-1, StringUtils.getLevenshteinDistance(""aaa"", ""bbb"", 2));"
51908,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1143,,"        assertEquals(""foo/2"", StringUtils.join(MIXED_TYPE_LIST, '/', 0, 2));"
51909,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1151,,"        assertEquals(""1;2"", StringUtils.join(BYTE_PRIM_LIST, SEPARATOR_CHAR));"
51910,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1407,,"        assertEquals(""     "", StringUtils.leftPad("""", 5));"
51911,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1408,,"        assertEquals(""  abc"", StringUtils.leftPad(""abc"", 5));"
51912,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1431,,"        assertEquals(""-+~abc"", StringUtils.leftPad(""abc"", 6, ""-+~""));"
51913,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1444,,"        assertEquals(8, StringUtils.length(CharBuffer.wrap(""ABCDEFGH"")));"
51914,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1479,,"        assertEquals(""foo test thing"", StringUtils.lowerCase(""fOo test THING""), ""lowerCase(String) failed"");"
51915,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1506,,"        assertEquals(""a b c"", StringUtils.normalizeSpace(""  a  b   c  ""));"
51916,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1520,,"        assertEquals(""zzzz"", StringUtils.overlay("""", ""zzzz"", 0, 0));"
51917,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1524,,"        assertEquals(""abef"", StringUtils.overlay(""abcdef"", null, 2, 4));"
51918,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1549,,"        assertEquals(""xyzabc"", StringUtils.prependIfMissing(""abc"", ""xyz""), ""prependIfMissing(abc,xyz)"");"
51919,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1551,,"        assertEquals(""xyzXYZabc"", StringUtils.prependIfMissing(""XYZabc"", ""xyz""), ""prependIfMissing(XYZabc,xyz)"");"
51920,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1560,,"        assertEquals(""mnoabc"", StringUtils.prependIfMissing(""mnoabc"", ""xyz"", ""mno""), ""prependIfMissing(mnoabc,xyz,mno)"");"
51921,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1617,,"        assertEquals(""qeed"", StringUtils.remove(""queued"", 'u'));"
51922,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1655,,"        assertEquals(""any"", StringUtils.removeAll(""any"", null));"
51923,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1662,,"        assertEquals(""A\nB"", StringUtils.removeAll(""A<__>\n<__>B"", ""<.*>""));"
51924,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1662,,"        assertEquals(""A\nB"", StringUtils.removeAll(""A<__>\n<__>B"", ""<.*>""));"
51925,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1663,,"        assertEquals(""AB"", StringUtils.removeAll(""A<__>\n<__>B"", ""(?s)<.*>""));"
51926,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1664,,"        assertEquals(""ABC123"", StringUtils.removeAll(""ABCabc123abc"", ""[a-z]""));"
51927,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1664,,"        assertEquals(""ABC123"", StringUtils.removeAll(""ABCabc123abc"", ""[a-z]""));"
51928,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1664,,"        assertEquals(""ABC123"", StringUtils.removeAll(""ABCabc123abc"", ""[a-z]""));"
51929,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1668,,"                () -> StringUtils.removeAll(""any"", ""{badRegexSyntax}""),"
51930,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1685,,"        assertEquals(StringUtils.removeEnd(""www.domain.com."", "".com""), ""www.domain.com."");"
51931,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1685,,"        assertEquals(StringUtils.removeEnd(""www.domain.com."", "".com""), ""www.domain.com."");"
51932,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1686,,"        assertEquals(StringUtils.removeEnd(""www.domain.com"", "".com""), ""www.domain"");"
51933,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1686,,"        assertEquals(StringUtils.removeEnd(""www.domain.com"", "".com""), ""www.domain"");"
51934,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1688,,"        assertEquals(StringUtils.removeEnd(""domain.com"", """"), ""domain.com"");"
51935,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1728,,"        assertEquals(""ABCbc123"", StringUtils.removeFirst(""ABCabc123"", ""[a-z]""));"
51936,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1809,,"        assertEquals(StringUtils.removeStart(""www.domain.com"", ""www.""), ""domain.com"");"
51937,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1839,,"        assertEquals(""zzz"", StringUtils.repeat('z', 3));"
51938,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1880,,"        assertEquals(StringUtils.replaceEach(""aba"", null, null), ""aba"");"
51939,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1951,,"        assertEquals(""FOO"", StringUtils.replace(""FOO"", """", ""any""));"
51940,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1956,,"        assertEquals("""", StringUtils.replace(""foofoofoo"", ""foo"", """"));"
51941,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1976,,"        assertEquals(""f"", StringUtils.replace(""oofoo"", ""o"", """", -1));"
51942,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,1999,,"        assertEquals(""z\nz"", StringUtils.replaceAll(""<__>\n<__>"", ""<.*>"", ""z""));"
51943,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,2003,,"        assertEquals(""ABC_123"", StringUtils.replaceAll(""ABCabc123"", ""[^A-Z0-9]+"", ""_""));"
51944,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,2018,,"        assertEquals(""azcza"", StringUtils.replaceChars(""abcba"", 'b', 'z'));"
51945,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,2048,,"        assertEquals(""ayzya"", StringUtils.replaceChars(""abcba"", ""bc"", ""yz""));"
51946,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,2243,,"        assertEquals(""abc  "", StringUtils.rightPad(""abc"", 5));"
51947,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,2358,,"        final String[] expectedResults = {""ab"", ""de fg""};"
51948,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,2359,,"        results = StringUtils.split(""ab   de fg"", null, 2);"
51949,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,2365,,"        final String[] expectedResults2 = {""ab"", ""cd:ef""};"
51950,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,2366,,"        results = StringUtils.split(""ab:cd:ef"", "":"", 2);"
51951,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,2444,,"        input = ""1::2:::3::::4"";"
51952,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,3006,,"                IllegalArgumentException.class, () -> StringUtils.truncate(null, -1), ""maxWith cannot be negative"");"
51953,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,3040,,"                IllegalArgumentException.class, () -> StringUtils.truncate(null, -1, 0), ""offset cannot be negative"");"
51954,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,3216,,"        assertEquals(""xabx"", StringUtils.wrap(""ab"", 'x'));"
51955,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,3217,,"        assertEquals(""\""ab\"""", StringUtils.wrap(""ab"", '\""'));"
51956,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,3219,,"        assertEquals(""'ab'"", StringUtils.wrap(""ab"", '\''));"
51957,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,3220,,"        assertEquals(""''abcd''"", StringUtils.wrap(""'abcd'"", '\''));"
51958,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,3221,,"        assertEquals(""'\""abcd\""'"", StringUtils.wrap(""\""abcd\"""", '\''));"
51959,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,3221,,"        assertEquals(""'\""abcd\""'"", StringUtils.wrap(""\""abcd\"""", '\''));"
51960,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,3222,,"        assertEquals(""\""'abcd'\"""", StringUtils.wrap(""'abcd'"", '\""'));"
51961,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,3256,,"        assertEquals(""/x/"", StringUtils.wrapIfMissing(""x"", '/'));"
51962,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,3257,,"        assertEquals(""/x/y/z/"", StringUtils.wrapIfMissing(""x/y/z"", '/'));"
51963,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,3296,,"        assertNotEquals(""title"", ""TITLE"".toLowerCase(TURKISH));"
51964,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,3296,,"        assertNotEquals(""title"", ""TITLE"".toLowerCase(TURKISH));"
51965,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,3351,,"                assertEquals(res1, res2, ""si : "" + si + "" sj : "" + sj);"
51966,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTest.java,3351,,"                assertEquals(res1, res2, ""si : "" + si + "" sj : "" + sj);"
51967,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTrimStripTest.java,74,,"        assertEquals("""", StringUtils.strip(""        ""));"
51968,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTrimStripTest.java,75,,"        assertEquals(""abc"", StringUtils.strip(""  abc  ""));"
51969,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/StringUtilsTrimStripTest.java,75,,"        assertEquals(""abc"", StringUtils.strip(""  abc  ""));"
51970,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/SystemUtilsTest.java,76,,"        } else if (javaVersion.startsWith(""1.8"")) {"
51971,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/SystemUtilsTest.java,224,,"        } else if (osName.startsWith(""Windows"")) {"
51972,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/SystemUtilsTest.java,553,,"        assertFalse(SystemUtils.isJavaVersionMatch(javaVersion, ""1.0""));"
51973,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/SystemUtilsTest.java,554,,"        assertFalse(SystemUtils.isJavaVersionMatch(javaVersion, ""1.1""));"
51974,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/SystemUtilsTest.java,555,,"        assertFalse(SystemUtils.isJavaVersionMatch(javaVersion, ""1.2""));"
51975,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/SystemUtilsTest.java,556,,"        assertFalse(SystemUtils.isJavaVersionMatch(javaVersion, ""1.3""));"
51976,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/SystemUtilsTest.java,557,,"        assertFalse(SystemUtils.isJavaVersionMatch(javaVersion, ""1.4""));"
51977,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/SystemUtilsTest.java,558,,"        assertFalse(SystemUtils.isJavaVersionMatch(javaVersion, ""1.5""));"
51978,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/SystemUtilsTest.java,559,,"        assertFalse(SystemUtils.isJavaVersionMatch(javaVersion, ""1.6""));"
51979,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/SystemUtilsTest.java,560,,"        assertFalse(SystemUtils.isJavaVersionMatch(javaVersion, ""1.7""));"
51980,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/SystemUtilsTest.java,737,,"        assertFalse(SystemUtils.isOSMatch(osName, osVersion, ""Windows 9"", ""4.1""));"
51981,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/SystemUtilsTest.java,737,,"        assertFalse(SystemUtils.isOSMatch(osName, osVersion, ""Windows 9"", ""4.1""));"
51982,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/SystemUtilsTest.java,761,,"        assertFalse(SystemUtils.isOSVersionMatch(osVersion, ""10.1""));"
51983,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/SystemUtilsTest.java,768,,"        assertTrue(SystemUtils.isOSVersionMatch(osVersion, ""10.1.1""));"
51984,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/SystemUtilsTest.java,769,,"        assertTrue(SystemUtils.isOSVersionMatch(osVersion, ""10.10""));"
51985,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/SystemUtilsTest.java,770,,"        assertTrue(SystemUtils.isOSVersionMatch(osVersion, ""10.10.1""));"
51986,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ThreadUtilsTest.java,224,,"        final ThreadGroup threadGroup = new ThreadGroup(""thread_group_DDZZ99__"");"
51987,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ThreadUtilsTest.java,225,,"        final Thread t1 = new TestThread(threadGroup, ""thread1_XXOOPP__"");"
51988,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ThreadUtilsTest.java,226,,"        final Thread t2 = new TestThread(threadGroup, ""thread2_XXOOPP__"");"
51989,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ThreadUtilsTest.java,316,,"        final Thread t1 = new TestThread(""thread1_XXOOLL__"");"
51990,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ValidateTest.java,71,,"                Validate.isTrue(true, ""MSG"");"
51991,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ValidateTest.java,164,,"                assertEquals(""The validated object is null"", ex.getMessage());"
51992,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ValidateTest.java,354,,"                    Validate.notEmpty(Collections.singletonMap(""key"", null));"
51993,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ValidateTest.java,503,,"                Validate.notBlank(""abc"");"
51994,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/ValidateTest.java,530,,"                assertEquals(""The validated character sequence is blank"", ex.getMessage());"
51995,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,301,,"        final String o1 = ""Fred"";"
51996,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/builder/DefaultToStringStyleTest.java,57,,"        assertEquals(baseStr + ""[<null>]"", new ToStringBuilder(base).appendSuper(""Integer@8888[<null>]"").toString());"
51997,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/builder/DiffBuilderTest.java,152,,"            .append(""foo"", new boolean[] {false}, new boolean[] {false})"
51998,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/builder/DiffBuilderTest.java,464,,"        explicitTestAndNotEqual1.append(""letter"", ""X"", ""Y"");"
51999,./TargetProjects/commons-lang/src/test/java/org/apache/commons/lang3/builder/EqualsBuilderTest.java,126,,"        @SuppressWarnings(""unused"")"
