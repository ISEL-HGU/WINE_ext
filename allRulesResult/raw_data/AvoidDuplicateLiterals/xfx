153000,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/WindowedSerdesTest.java,80,,"            equalTo(""Inner serializer is `null`. User code must use constructor "" +"
153001,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImplTest.java,109,,"        assertThrows(NullPointerException.class, () -> cogroupedStream.aggregate(null, Named.as(""name"")));"
153002,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImplTest.java,114,,"        assertThrows(NullPointerException.class, () -> cogroupedStream.aggregate(null, Materialized.as(""store"")));"
153003,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImplTest.java,161,,"        final KStream<String, String> stream1 = builder.stream(""one"", stringConsumed);"
153004,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImplTest.java,162,,"        final KStream<String, String> test2 = builder.stream(""two"", stringConsumed);"
153005,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImplTest.java,178,,"            equalTo(""Topologies:\n"" +"
153006,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImplTest.java,179,,"                ""   Sub-topology: 0\n"" +"
153007,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImplTest.java,180,,"                ""    Source: KSTREAM-SOURCE-0000000000 (topics: [one])\n"" +"
153008,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImplTest.java,182,,"                ""    Source: KSTREAM-SOURCE-0000000001 (topics: [two])\n"" +"
153009,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImplTest.java,185,,"                ""      --> test-cogroup-merge\n"" +"
153010,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImplTest.java,186,,"                ""      <-- KSTREAM-SOURCE-0000000000\n"" +"
153011,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImplTest.java,189,,"                ""      <-- KSTREAM-SOURCE-0000000001\n"" +"
153012,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImplTest.java,224,,"                        ""      --> KSTREAM-MAP-0000000002\n"" +"
153013,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImplTest.java,225,,"                        ""    Processor: KSTREAM-MAP-0000000002 (stores: [])\n"" +"
153014,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImplTest.java,230,,"                        ""      <-- KSTREAM-MAP-0000000002\n"" +"
153015,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImplTest.java,233,,"                        ""  Sub-topology: 1\n"" +"
153016,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImplTest.java,235,,"                        ""      --> COGROUPKSTREAM-AGGREGATE-0000000008\n"" +"
153017,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImplTest.java,238,,"                        ""    Processor: COGROUPKSTREAM-AGGREGATE-0000000007 (stores: [COGROUPKSTREAM-AGGREGATE-STATE-STORE-0000000003])\n"" +"
153018,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImplTest.java,239,,"                        ""      --> COGROUPKSTREAM-MERGE-0000000009\n"" +"
153019,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImplTest.java,241,,"                        ""    Processor: COGROUPKSTREAM-AGGREGATE-0000000008 (stores: [COGROUPKSTREAM-AGGREGATE-STATE-STORE-0000000003])\n"" +"
153020,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImplTest.java,244,,"                        ""    Processor: COGROUPKSTREAM-MERGE-0000000009 (stores: [])\n"" +"
153021,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImplTest.java,246,,"                        ""      <-- COGROUPKSTREAM-AGGREGATE-0000000007, COGROUPKSTREAM-AGGREGATE-0000000008\n"" +"
153022,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImplTest.java,341,,"                        ""    Processor: COGROUPKSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-filter (stores: [])\n"" +"
153023,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImplTest.java,342,,"                        ""      --> COGROUPKSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-sink\n"" +"
153024,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImplTest.java,347,,"                        ""    Sink: COGROUPKSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-sink (topic: COGROUPKSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition)\n"" +"
153025,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImplTest.java,354,,"                        ""    Source: COGROUPKSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-source (topics: [COGROUPKSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition])\n"" +"
153026,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImplTest.java,360,,"                        ""      <-- COGROUPKSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-source\n"" +"
153027,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImplTest.java,365,,"                        ""      --> COGROUPKSTREAM-MERGE-0000000016\n"" +"
153028,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImplTest.java,470,,"        final KStream<String, String> stream3 = builder.stream(""three"", stringConsumed);"
153029,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImplTest.java,497,,"                        ""      <-- KSTREAM-MAP-0000000003\n"" +"
153030,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImplTest.java,511,,"                        ""      --> COGROUPKSTREAM-MERGE-0000000017\n"" +"
153031,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImplTest.java,517,,"                        ""      --> none\n"" +"
153032,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImplTest.java,525,,"                        ""      --> COGROUPKSTREAM-MERGE-0000000010\n"" +"
153033,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImplTest.java,989,,"            assertOutputKeyValueTimestamp(testOutputTopic, ""k2"", ""AAB"", 100);"
153034,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImplTest.java,990,,"            assertOutputKeyValueTimestamp(testOutputTopic, ""k2"", ""AABB"", 200);"
153035,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/FullChangeSerdeTest.java,88,,"        final Change<byte[]> serialized = serde.serializeParts(null, new Change<>(""new"", null));"
153036,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/FullChangeSerdeTest.java,99,,"        final Change<byte[]> serialized = serde.serializeParts(null, new Change<>(null, ""old""));"
153037,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/InternalStreamsBuilderTest.java,91,,"        final String topic1 = ""topic-1"";"
153038,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/InternalStreamsBuilderTest.java,138,,"            new MaterializedInternal<>(Materialized.as(""globalTable""), builder, storePrefix);"
153039,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/InternalStreamsBuilderTest.java,148,,"        builder.globalTable(""table"","
153040,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/InternalStreamsBuilderTest.java,334,,"        builder.stream(Collections.singleton(""topic""), consumed);"
153041,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KGroupedStreamImplTest.java,99,,"                .reduce(null, Materialized.as(""store"")));"
153042,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KGroupedStreamImplTest.java,351,,"                    .<String, Integer, SessionStore<Bytes, byte[]>>as(""session-store"")."
153043,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KGroupedStreamImplTest.java,560,,"        groupedStream.count(Materialized.<String, Long, KeyValueStore<Bytes, byte[]>>as(""count"").withKeySerde(Serdes.String()));"
153044,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KGroupedStreamImplTest.java,603,,"            Materialized.<String, String, KeyValueStore<Bytes, byte[]>>as(""reduce"")"
153045,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KGroupedTableImplTest.java,84,,"            Materialized.as(""store"")));"
153046,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamGlobalKTableJoinTest.java,156,,"        processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0, ""X0,FKey0+Y0"", 0),"
153047,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamGlobalKTableJoinTest.java,157,,"                new KeyValueTimestamp<>(1, ""X1,FKey1+Y1"", 1));"
153048,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamGlobalKTableLeftJoinTest.java,158,,"        processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0, ""X0,FKey0+Y0"", 0),"
153049,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamGlobalKTableLeftJoinTest.java,159,,"                new KeyValueTimestamp<>(1, ""X1,FKey1+Y1"", 1),"
153050,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,104,,"@SuppressWarnings(""deprecation"") // Old PAPI. Needs to be migrated."
153051,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,201,,"        testTable = builder.table(""topic"");"
153052,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,210,,"        assertThat(exception.getMessage(), equalTo(""predicate can't be null""));"
153053,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,226,,"        assertThat(exception.getMessage(), equalTo(""named can't be null""));"
153054,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,258,,"        assertThat(exception.getMessage(), equalTo(""mapper can't be null""));"
153055,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,306,,"        assertThat(exception.getMessage(), equalTo(""valueMapper can't be null""));"
153056,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,440,,"        assertThat(exception.getMessage(), equalTo(""action can't be null""));"
153057,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,484,,"    @SuppressWarnings({""rawtypes"", ""unchecked"", ""deprecation""})"
153058,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,567,,"        assertThat(exception.getMessage(), equalTo(""topic can't be null""));"
153059,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,649,,"        assertThat(exception.getMessage(), equalTo(""keySelector can't be null""));"
153060,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,656,,"            () -> testStream.groupBy(null, Grouped.as(""name"")));"
153061,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,714,,"        assertThat(exception.getMessage(), equalTo(""otherStream can't be null""));"
153062,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,736,,"        assertThat(exception.getMessage(), equalTo(""joiner can't be null""));"
153063,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,779,,"        assertThat(exception.getMessage(), equalTo(""windows can't be null""));"
153064,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,1011,,"        assertThat(exception.getMessage(), equalTo(""table can't be null""));"
153065,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,1123,,"        assertThat(exception.getMessage(), equalTo(""globalTable can't be null""));"
153066,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,1283,,"        final KStream<String, String> source1 = builder.stream(Arrays.asList(""topic-1"", ""topic-2""), stringConsumed);"
153067,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,1283,,"        final KStream<String, String> source1 = builder.stream(Arrays.asList(""topic-1"", ""topic-2""), stringConsumed);"
153068,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,1285,,"        final KStream<String, String> source2 = builder.stream(Arrays.asList(""topic-3"", ""topic-4""), stringConsumed);"
153069,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,1285,,"        final KStream<String, String> source2 = builder.stream(Arrays.asList(""topic-3"", ""topic-4""), stringConsumed);"
153070,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,1313,,"        stream4.to(""topic-5"");"
153071,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,1315,,"        streams2[1].through(""topic-6"").process(new MockProcessorSupplier<>());"
153072,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,1764,,"        assertThat(exception.getMessage(), equalTo(""transformerSupplier can't be null""));"
153073,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,1771,,"            () -> testStream.transform(null, ""storeName""));"
153074,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,1779,,"            () -> testStream.transform(null, Named.as(""transformer"")));"
153075,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,1796,,"        assertThat(exception.getMessage(), equalTo(""stateStoreNames can't be a null array""));"
153076,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,1804,,"        assertThat(exception.getMessage(), equalTo(""stateStoreNames can't contain `null` as store name""));"
153077,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,1846,,"        assertThat(exception.getMessage(), containsString(""#get() must return a new object each time it is called.""));"
153078,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,1864,,"            () -> testStream.flatTransform(() -> transformer, Named.as(""flatTransformer""))"
153079,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,1984,,"        assertThat(exception.getMessage(), equalTo(""valueTransformerSupplier can't be null""));"
153080,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,2041,,"                Named.as(""valueTransformer"")));"
153081,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,2224,,"                ""stateStore""));"
153082,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,2244,,"                Named.as(""flatValueTransformer"")));"
153083,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,2411,,"        assertThat(exception.getMessage(), equalTo(""processorSupplier can't be null""));"
153084,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,2428,,"                                     Named.as(""processor"")));"
153085,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,2496,,"        final String input = ""input"";"
153086,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,2497,,"        final String output = ""output"";"
153087,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,2505,,"            equalTo(""Topologies:\n"" +"
153088,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,2506,,"                ""   Sub-topology: 0\n"" +"
153089,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,2507,,"                ""    Source: KSTREAM-SOURCE-0000000000 (topics: [input])\n"" +"
153090,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,2508,,"                ""      --> KSTREAM-TOTABLE-0000000001\n"" +"
153091,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,2511,,"                ""      <-- KSTREAM-SOURCE-0000000000\n"" +"
153092,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,2514,,"                ""      <-- KSTREAM-TOTABLE-0000000001\n"" +"
153093,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,2736,,"            left.pipeInput(""lhs1"", ""lhsValue1|rhs1"");"
153094,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,2737,,"            left.pipeInput(""lhs2"", ""lhsValue2|rhs2"");"
153095,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,2746,,"            left.pipeInput(""lhs3"", ""lhsValue3|rhs1"");"
153096,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java,2982,,"            inputTopic.pipeInput(""A"", ""green"", 10L);"
153097,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplValueJoinerWithKeyTest.java,95,,"            Collections.singletonList(KeyValue.pair(""A"", ""A:5"")),"
153098,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKStreamJoinTest.java,82,,"        final KStream<String, Integer> left = builder.stream(""left"", Consumed.with(Serdes.String(), Serdes.Integer()));"
153099,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKStreamJoinTest.java,83,,"        final KStream<String, Integer> right = builder.stream(""right"", Consumed.with(Serdes.String(), Serdes.Integer()));"
153100,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKStreamJoinTest.java,207,,"        final WindowBytesStoreSupplier thisStoreSupplier = buildWindowBytesStoreSupplier(""in-memory-join-store"", 500L, 100L, true);"
153101,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKStreamJoinTest.java,208,,"        final WindowBytesStoreSupplier otherStoreSupplier = buildWindowBytesStoreSupplier(""in-memory-join-store-other"", 150L, 100L, true);"
153102,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKStreamJoinTest.java,458,,"                new KeyValueTimestamp<>(0, ""A0+b0"", 0L),"
153103,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKStreamJoinTest.java,492,,"                new KeyValueTimestamp<>(0, ""A0+c0"", 0L),"
153104,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKStreamJoinTest.java,495,,"                new KeyValueTimestamp<>(1, ""A1+c1"", 0L),"
153105,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKStreamLeftJoinTest.java,100,,"                    new KeyValueTimestamp<>(0, ""A0+null"", 0L),"
153106,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKStreamLeftJoinTest.java,113,,"                    new KeyValueTimestamp<>(0, ""A0+a0"", 0L),"
153107,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKStreamLeftJoinTest.java,114,,"                    new KeyValueTimestamp<>(1, ""A1+a1"", 0L)"
153108,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKStreamLeftJoinTest.java,149,,"            inputTopic1.pipeInput(0, ""A0-0"", 0L);"
153109,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKStreamLeftJoinTest.java,154,,"                    new KeyValueTimestamp<>(0, ""A0-0+null"", 0L),"
153110,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKStreamLeftJoinTest.java,192,,"            inputTopic2.pipeInput(2, ""dummy"", 500L);"
153111,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKStreamLeftJoinTest.java,267,,"                new KeyValueTimestamp<>(2, ""dummy+dummy"", windowStart + 401L)"
153112,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKStreamOuterJoinTest.java,88,,"            inputTopic1.pipeInput(0, ""A0-0"", 0L);"
153113,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKStreamOuterJoinTest.java,93,,"                    new KeyValueTimestamp<>(0, ""A0+null"", 0L),"
153114,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKStreamOuterJoinTest.java,94,,"                    new KeyValueTimestamp<>(0, ""A0-0+null"", 0L),"
153115,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKStreamOuterJoinTest.java,135,,"            inputTopic2.pipeInput(3, ""dummy"", 211);"
153116,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKStreamOuterJoinTest.java,206,,"                new KeyValueTimestamp<>(1, ""A1+a1"", windowStart + 3L)"
153117,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKStreamOuterJoinTest.java,219,,"                new KeyValueTimestamp<>(2, ""dummy+dummy"", windowStart + 401L)"
153118,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKTableJoinTest.java,292,,"        + ""      --> none\n"""
153119,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamSessionWindowAggregateProcessorTest.java,156,,"        processor.process(""john"", ""first"");"
153120,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamSessionWindowAggregateProcessorTest.java,158,,"        processor.process(""john"", ""second"");"
153121,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamSessionWindowAggregateProcessorTest.java,169,,"        final String sessionId = ""mel"";"
153122,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamSessionWindowAggregateProcessorTest.java,181,,"        processor.process(sessionId, ""third"");"
153123,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamSessionWindowAggregateProcessorTest.java,387,,"            new ProcessorRecordContext(-1, -2, -3, ""topic"", new RecordHeaders())"
153124,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamSessionWindowAggregateProcessorTest.java,406,,"            getMetricByName(context.metrics().metrics(), ""dropped-records-total"", ""stream-task-metrics"").metricValue()"
153125,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamSessionWindowAggregateProcessorTest.java,424,,"        processor.process(""dummy"", ""dummy"");"
153126,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamSessionWindowAggregateProcessorTest.java,455,,"                mkEntry(""thread-id"", threadId),"
153127,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamSessionWindowAggregateProcessorTest.java,456,,"                mkEntry(""task-id"", ""0_0"")"
153128,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamSessionWindowAggregateProcessorTest.java,456,,"                mkEntry(""task-id"", ""0_0"")"
153129,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamSlidingWindowAggregateTest.java,104,,"    @SuppressWarnings(""unchecked"")"
153130,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamSlidingWindowAggregateTest.java,108,,"        final String topic = ""topic"";"
153131,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamSlidingWindowAggregateTest.java,112,,"                ? new InOrderMemoryWindowStoreSupplier(""InOrder"", 50000L, 10L, false)"
153132,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamSlidingWindowAggregateTest.java,113,,"                : Stores.inMemoryWindowStore(""Reverse"", Duration.ofMillis(50000), Duration.ofMillis(10), false);"
153133,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamSlidingWindowAggregateTest.java,148,,"        expected.put(0L, ValueAndTimestamp.make(""0+1"", 10L));"
153134,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamSlidingWindowAggregateTest.java,149,,"        expected.put(5L, ValueAndTimestamp.make(""0+1+2"", 15L));"
153135,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamSlidingWindowAggregateTest.java,151,,"        expected.put(11L, ValueAndTimestamp.make(""0+2+3"", 20L));"
153136,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamSlidingWindowAggregateTest.java,152,,"        expected.put(12L, ValueAndTimestamp.make(""0+2+3+4"", 22L));"
153137,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamSlidingWindowAggregateTest.java,153,,"        expected.put(16L, ValueAndTimestamp.make(""0+3+4"", 22L));"
153138,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamSlidingWindowAggregateTest.java,156,,"        expected.put(23L, ValueAndTimestamp.make(""0+5"", 30L));"
153139,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamSlidingWindowAggregateTest.java,283,,"                new KeyValueTimestamp<>(new Windowed<>(""A"", new TimeWindow(11, 21)), ""0+2"", 20),"
153140,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamSlidingWindowAggregateTest.java,293,,"                new KeyValueTimestamp<>(new Windowed<>(""A"", new TimeWindow(21, 31)), ""0+3"", 22),"
153141,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamSlidingWindowAggregateTest.java,325,,"                new KeyValueTimestamp<>(new Windowed<>(""B"", new TimeWindow(19, 29)), ""0+4"", 19),"
153142,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamSlidingWindowAggregateTest.java,934,,"                ""stream-task-metrics"","
153143,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamSlidingWindowAggregateTest.java,937,,"                        mkEntry(""thread-id"", threadId),"
153144,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamSlidingWindowAggregateTest.java,938,,"                        mkEntry(""task-id"", ""0_0"")"
153145,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamSlidingWindowAggregateTest.java,938,,"                        mkEntry(""task-id"", ""0_0"")"
153146,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamSlidingWindowAggregateTest.java,987,,"            throw new UnsupportedOperationException(""Backward fetch not supported here"");"
153147,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamWindowAggregateTest.java,113,,"                new KeyValueTimestamp<>(new Windowed<>(""A"", new TimeWindow(0, 10)), ""0+1"", 0),"
153148,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamWindowAggregateTest.java,114,,"                new KeyValueTimestamp<>(new Windowed<>(""B"", new TimeWindow(0, 10)), ""0+2"", 1),"
153149,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamWindowAggregateTest.java,115,,"                new KeyValueTimestamp<>(new Windowed<>(""C"", new TimeWindow(0, 10)), ""0+3"", 2),"
153150,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamWindowAggregateTest.java,116,,"                new KeyValueTimestamp<>(new Windowed<>(""D"", new TimeWindow(0, 10)), ""0+4"", 3),"
153151,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamWindowAggregateTest.java,117,,"                new KeyValueTimestamp<>(new Windowed<>(""A"", new TimeWindow(0, 10)), ""0+1+1"", 4),"
153152,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamWindowAggregateTest.java,120,,"                new KeyValueTimestamp<>(new Windowed<>(""B"", new TimeWindow(0, 10)),  ""0+2+2"",  6),"
153153,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamWindowAggregateTest.java,226,,"                new KeyValueTimestamp<>(new Windowed<>(""A"", new TimeWindow(0, 10)),  ""0+a"",  0),"
153154,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamWindowAggregateTest.java,229,,"                new KeyValueTimestamp<>(new Windowed<>(""D"", new TimeWindow(15, 25)),  ""0+d"",  20),"
153155,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamWindowAggregateTest.java,314,,"               .to(""output"");"
153156,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamWindowAggregateTest.java,419,,"            ""stream-task-metrics"","
153157,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamWindowAggregateTest.java,422,,"                mkEntry(""thread-id"", threadId),"
153158,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamWindowAggregateTest.java,423,,"                mkEntry(""task-id"", ""0_0"")"
153159,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamWindowAggregateTest.java,423,,"                mkEntry(""task-id"", ""0_0"")"
153160,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableAggregateTest.java,179,,"            inputTopic.pipeInput(""A"", ""green"", 10L);"
153161,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableFilterTest.java,108,,"        final String topic1 = ""topic1"";"
153162,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableFilterTest.java,127,,"        final KTable<String, Integer> table2 = table1.filter(predicate, Materialized.as(""store2""));"
153163,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableFilterTest.java,450,,"            stringinputTopic.pipeInput(""A"", ""reject"", 5L);"
153164,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableImplTest.java,91,,"        final String topic1 = ""topic1"";"
153165,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableImplTest.java,92,,"        final String topic2 = ""topic2"";"
153166,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableForeignKeyJoinScenarioTest.java,73,,"            Materialized.as(""asdf"")"
153167,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableForeignKeyJoinScenarioTest.java,81,,"        finalJoinResult.toStream().to(""output"");"
153168,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableInnerJoinTest.java,188,,"            proc.checkAndClearProcessResult(new KeyValueTimestamp<>(0, new Change<>(""X0+Y0"", null), 5),"
153169,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableInnerJoinTest.java,189,,"                new KeyValueTimestamp<>(1, new Change<>(""X1+Y1"", null), 10));"
153170,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableInnerJoinTest.java,196,,"            proc.checkAndClearProcessResult(new KeyValueTimestamp<>(0, new Change<>(""XX0+Y0"", ""X0+Y0""), 7),"
153171,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableInnerJoinTest.java,197,,"                new KeyValueTimestamp<>(1, new Change<>(""XX1+Y1"", ""X1+Y1""), 10));"
153172,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableInnerJoinTest.java,205,,"                new KeyValueTimestamp<>(0, new Change<>(""XX0+YY0"", ""XX0+Y0""), 7),"
153173,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableInnerJoinTest.java,206,,"                new KeyValueTimestamp<>(1, new Change<>(""XX1+YY1"", ""XX1+Y1""), 7),"
153174,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableInnerJoinTest.java,207,,"                new KeyValueTimestamp<>(2, new Change<>(""XX2+YY2"", null), 10),"
153175,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableInnerJoinTest.java,208,,"                new KeyValueTimestamp<>(3, new Change<>(""XX3+YY3"", null), 15));"
153176,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableInnerJoinTest.java,217,,"                new KeyValueTimestamp<>(0, new Change<>(""XXX0+YY0"", ""XX0+YY0""), 6),"
153177,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableInnerJoinTest.java,218,,"                new KeyValueTimestamp<>(1, new Change<>(""XXX1+YY1"", ""XX1+YY1""), 6),"
153178,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableInnerJoinTest.java,219,,"                new KeyValueTimestamp<>(2, new Change<>(""XXX2+YY2"", ""XX2+YY2""), 10),"
153179,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableInnerJoinTest.java,220,,"                new KeyValueTimestamp<>(3, new Change<>(""XXX3+YY3"", ""XX3+YY3""), 15));"
153180,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableInnerJoinTest.java,235,,"            proc.checkAndClearProcessResult(new KeyValueTimestamp<>(2, new Change<>(""XXXX2+YY2"", ""XXX2+YY2""), 13),"
153181,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableInnerJoinTest.java,236,,"                new KeyValueTimestamp<>(3, new Change<>(""XXXX3+YY3"", ""XXX3+YY3""), 15));"
153182,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableLeftJoinTest.java,105,,"            assertOutputKeyValueTimestamp(outputTopic, 0, ""X0+null"", 5L);"
153183,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableLeftJoinTest.java,106,,"            assertOutputKeyValueTimestamp(outputTopic, 1, ""X1+null"", 6L);"
153184,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableLeftJoinTest.java,117,,"            assertOutputKeyValueTimestamp(outputTopic, 0, ""X0+Y0"", 5L);"
153185,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableLeftJoinTest.java,118,,"            assertOutputKeyValueTimestamp(outputTopic, 1, ""X1+Y1"", 10L);"
153186,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableLeftJoinTest.java,127,,"            assertOutputKeyValueTimestamp(outputTopic, 0, ""XX0+Y0"", 7L);"
153187,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableLeftJoinTest.java,128,,"            assertOutputKeyValueTimestamp(outputTopic, 1, ""XX1+Y1"", 10L);"
153188,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableLeftJoinTest.java,129,,"            assertOutputKeyValueTimestamp(outputTopic, 2, ""XX2+null"", 7L);"
153189,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableLeftJoinTest.java,130,,"            assertOutputKeyValueTimestamp(outputTopic, 3, ""XX3+null"", 7L);"
153190,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableLeftJoinTest.java,139,,"            assertOutputKeyValueTimestamp(outputTopic, 0, ""XX0+YY0"", 7L);"
153191,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableLeftJoinTest.java,140,,"            assertOutputKeyValueTimestamp(outputTopic, 1, ""XX1+YY1"", 7L);"
153192,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableLeftJoinTest.java,141,,"            assertOutputKeyValueTimestamp(outputTopic, 2, ""XX2+YY2"", 10L);"
153193,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableLeftJoinTest.java,142,,"            assertOutputKeyValueTimestamp(outputTopic, 3, ""XX3+YY3"", 15L);"
153194,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableLeftJoinTest.java,151,,"            assertOutputKeyValueTimestamp(outputTopic, 0, ""XXX0+YY0"", 6L);"
153195,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableLeftJoinTest.java,152,,"            assertOutputKeyValueTimestamp(outputTopic, 1, ""XXX1+YY1"", 6L);"
153196,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableLeftJoinTest.java,153,,"            assertOutputKeyValueTimestamp(outputTopic, 2, ""XXX2+YY2"", 10L);"
153197,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableLeftJoinTest.java,154,,"            assertOutputKeyValueTimestamp(outputTopic, 3, ""XXX3+YY3"", 15L);"
153198,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableLeftJoinTest.java,162,,"            assertOutputKeyValueTimestamp(outputTopic, 0, ""XXX0+null"", 6L);"
153199,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableLeftJoinTest.java,163,,"            assertOutputKeyValueTimestamp(outputTopic, 1, ""XXX1+null"", 7L);"
153200,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableLeftJoinTest.java,172,,"            assertOutputKeyValueTimestamp(outputTopic, 0, ""XXXX0+null"", 13L);"
153201,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableLeftJoinTest.java,173,,"            assertOutputKeyValueTimestamp(outputTopic, 1, ""XXXX1+null"", 13L);"
153202,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableLeftJoinTest.java,174,,"            assertOutputKeyValueTimestamp(outputTopic, 2, ""XXXX2+YY2"", 13L);"
153203,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableLeftJoinTest.java,175,,"            assertOutputKeyValueTimestamp(outputTopic, 3, ""XXXX3+YY3"", 15L);"
153204,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableOuterJoinTest.java,98,,"            assertOutputKeyValueTimestamp(outputTopic, 0, ""X0+null"", 5L);"
153205,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableOuterJoinTest.java,99,,"            assertOutputKeyValueTimestamp(outputTopic, 1, ""X1+null"", 6L);"
153206,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableOuterJoinTest.java,110,,"            assertOutputKeyValueTimestamp(outputTopic, 0, ""X0+Y0"", 5L);"
153207,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableOuterJoinTest.java,111,,"            assertOutputKeyValueTimestamp(outputTopic, 1, ""X1+Y1"", 10L);"
153208,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableOuterJoinTest.java,120,,"            assertOutputKeyValueTimestamp(outputTopic, 0, ""XX0+Y0"", 7L);"
153209,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableOuterJoinTest.java,121,,"            assertOutputKeyValueTimestamp(outputTopic, 1, ""XX1+Y1"", 10L);"
153210,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableOuterJoinTest.java,122,,"            assertOutputKeyValueTimestamp(outputTopic, 2, ""XX2+null"", 7L);"
153211,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableOuterJoinTest.java,123,,"            assertOutputKeyValueTimestamp(outputTopic, 3, ""XX3+null"", 7L);"
153212,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableOuterJoinTest.java,132,,"            assertOutputKeyValueTimestamp(outputTopic, 0, ""XX0+YY0"", 7L);"
153213,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableOuterJoinTest.java,133,,"            assertOutputKeyValueTimestamp(outputTopic, 1, ""XX1+YY1"", 7L);"
153214,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableOuterJoinTest.java,134,,"            assertOutputKeyValueTimestamp(outputTopic, 2, ""XX2+YY2"", 10L);"
153215,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableOuterJoinTest.java,135,,"            assertOutputKeyValueTimestamp(outputTopic, 3, ""XX3+YY3"", 15L);"
153216,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableOuterJoinTest.java,144,,"            assertOutputKeyValueTimestamp(outputTopic, 0, ""XXX0+YY0"", 6L);"
153217,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableOuterJoinTest.java,145,,"            assertOutputKeyValueTimestamp(outputTopic, 1, ""XXX1+YY1"", 6L);"
153218,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableOuterJoinTest.java,146,,"            assertOutputKeyValueTimestamp(outputTopic, 2, ""XXX2+YY2"", 10L);"
153219,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableOuterJoinTest.java,147,,"            assertOutputKeyValueTimestamp(outputTopic, 3, ""XXX3+YY3"", 15L);"
153220,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableOuterJoinTest.java,155,,"            assertOutputKeyValueTimestamp(outputTopic, 0, ""XXX0+null"", 6L);"
153221,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableOuterJoinTest.java,156,,"            assertOutputKeyValueTimestamp(outputTopic, 1, ""XXX1+null"", 7L);"
153222,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableOuterJoinTest.java,165,,"            assertOutputKeyValueTimestamp(outputTopic, 0, ""XXXX0+null"", 13L);"
153223,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableOuterJoinTest.java,166,,"            assertOutputKeyValueTimestamp(outputTopic, 1, ""XXXX1+null"", 13L);"
153224,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableOuterJoinTest.java,167,,"            assertOutputKeyValueTimestamp(outputTopic, 2, ""XXXX2+YY2"", 13L);"
153225,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableOuterJoinTest.java,168,,"            assertOutputKeyValueTimestamp(outputTopic, 3, ""XXXX3+YY3"", 15L);"
153226,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableMapValuesTest.java,78,,"        final String topic1 = ""topic1"";"
153227,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableSourceTest.java,68,,"        final String topic1 = ""topic1"";"
153228,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableTransformValuesTest.java,163,,"        context.forward(""Key"", new Change<>(""Key->newValue!"", null));"
153229,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableTransformValuesTest.java,371,,"        assertThat(output(), hasItems(new KeyValueTimestamp<>(""A"", ""A->a!"", 5),"
153230,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableTransformValuesTest.java,372,,"                new KeyValueTimestamp<>(""B"", ""B->b!"", 10),"
153231,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SessionTupleForwarderTest.java,65,,"                new Windowed<>(""key"", new SessionWindow(21L, 42L)),"
153232,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SessionTupleForwarderTest.java,66,,"                new Change<>(""value"", ""oldValue""),"
153233,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SessionWindowedCogroupedKStreamImplTest.java,103,,"            null, Materialized.as(""test"")));"
153234,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SessionWindowedCogroupedKStreamImplTest.java,181,,"            assertOutputKeyValueTimestamp(testOutputTopic, ""k1"", ""0+A"", 0);"
153235,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SessionWindowedCogroupedKStreamImplTest.java,183,,"            assertOutputKeyValueTimestamp(testOutputTopic, ""k1"", ""0+B"", 599);"
153236,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SessionWindowedCogroupedKStreamImplTest.java,207,,"            assertOutputKeyValueTimestamp(testOutputTopic, ""k1"", ""0+0+A+A"", 0);"
153237,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SessionWindowedCogroupedKStreamImplTest.java,284,,"            assertOutputKeyValueTimestamp(testOutputTopic, ""k2"", ""0-B"", 444);"
153238,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SessionWindowedKStreamImplTest.java,125,,"            equalTo(ValueAndTimestamp.make(""1+2"", 15L)));"
153239,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SessionWindowedKStreamImplTest.java,153,,"            equalTo(ValueAndTimestamp.make(""0+0+1+2"", 15L)));"
153240,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SessionWindowedKStreamImplTest.java,244,,"            Materialized.as(""store"")));"
153241,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SlidingWindowedCogroupedKStreamImplTest.java,104,,"        assertThrows(NullPointerException.class, () ->  windowedCogroupedStream.aggregate(null, Named.as(""test"")));"
153242,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SlidingWindowedCogroupedKStreamImplTest.java,175,,"            expected.add(new TestRecord<>(new Windowed<>(""k1"", new TimeWindow(0L, 500L)), ""0+A"", null, 500L));"
153243,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SlidingWindowedCogroupedKStreamImplTest.java,185,,"            expected.add(new TestRecord<>(new Windowed<>(""k1"", new TimeWindow(501L, 1001L)), ""0+A+B"", null, 503L));"
153244,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SlidingWindowedCogroupedKStreamImplTest.java,186,,"            expected.add(new TestRecord<>(new Windowed<>(""k1"", new TimeWindow(503L, 1003L)), ""0+B"", null, 503L));"
153245,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SlidingWindowedKStreamImplTest.java,283,,"            Materialized.<String, String, WindowStore<Bytes, byte[]>>as(""aggregated"")"
153246,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SuppressScenarioTest.java,89,,"                ""input"","
153247,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SuppressScenarioTest.java,101,,"            .to(""output-suppressed"", Produced.with(STRING_SERDE, Serdes.Long()));"
153248,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SuppressScenarioTest.java,105,,"            .to(""output-raw"", Produced.with(STRING_SERDE, Serdes.Long()));"
153249,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SuppressScenarioTest.java,205,,"            inputTopic.pipeInput(""tick"", ""tick"", 3L);"
153250,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SuppressScenarioTest.java,367,,"            .count(Materialized.<String, Long, WindowStore<Bytes, byte[]>>as(""counts"").withCachingDisabled());"
153251,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SuppressScenarioTest.java,393,,"                    new KeyValueTimestamp<>(""[k1@0/2]"", 1L, 0L),"
153252,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SuppressScenarioTest.java,395,,"                    new KeyValueTimestamp<>(""[k1@2/4]"", 1L, 2L),"
153253,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SuppressScenarioTest.java,518,,"                    new KeyValueTimestamp<>(""[k1@5/10]"", 1L, 10L),"
153254,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SuppressScenarioTest.java,528,,"                    new KeyValueTimestamp<>(""[k1@6/11]"", 2L, 11L),"
153255,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SuppressScenarioTest.java,595,,"                    new KeyValueTimestamp<>(""[k1@0/5]"", 2L, 5L),"
153256,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SuppressScenarioTest.java,622,,"            .to(""output"", Produced.with(Serdes.String(), Serdes.Long()));"
153257,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SuppressScenarioTest.java,643,,"            .table(""left"", Consumed.with(Serdes.String(), Serdes.String()));"
153258,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SuppressScenarioTest.java,646,,"            .table(""right"", Consumed.with(Serdes.String(), Serdes.String()))"
153259,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SuppressTopologyTest.java,46,,"    private static final String NAMED_FINAL_TOPOLOGY = ""Topologies:\n"" +"
153260,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SuppressTopologyTest.java,47,,"        ""   Sub-topology: 0\n"" +"
153261,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SuppressTopologyTest.java,48,,"        ""    Source: KSTREAM-SOURCE-0000000000 (topics: [input])\n"" +"
153262,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SuppressTopologyTest.java,52,,"        ""      <-- KSTREAM-SOURCE-0000000000\n"" +"
153263,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SuppressTopologyTest.java,61,,"        ""      --> KSTREAM-AGGREGATE-0000000002\n"" +"
153264,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SuppressTopologyTest.java,67,,"        ""      <-- KSTREAM-AGGREGATE-0000000002\n"" +"
153265,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SuppressTopologyTest.java,149,,"            .stream(""input"", Consumed.with(STRING_SERDE, STRING_SERDE))"
153266,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/TimeWindowedCogroupedKStreamImplTest.java,103,,"        assertThrows(NullPointerException.class, () -> windowedCogroupedStream.aggregate(null, Named.as(""test"")));"
153267,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/TimeWindowedCogroupedKStreamImplTest.java,171,,"            assertOutputKeyValueTimestamp(testOutputTopic, ""k1"", ""0+A"", 0);"
153268,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/TimeWindowedCogroupedKStreamImplTest.java,173,,"            assertOutputKeyValueTimestamp(testOutputTopic, ""k2"", ""0+A+A"", 1);"
153269,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/TimeWindowedCogroupedKStreamImplTest.java,211,,"            assertOutputKeyValueTimestamp(testOutputTopic, ""k1"", ""0+A+A-B"", 3);"
153270,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/TimestampedCacheFlushListenerTest.java,40,,"            ""key"","
153271,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/TimestampedCacheFlushListenerTest.java,41,,"            new Change<>(""newValue"", ""oldValue""),"
153272,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/CombinedKeySchemaTest.java,33,,"            () -> ""fkTopic"", Serdes.String(),"
153273,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/CombinedKeySchemaTest.java,34,,"            () -> ""pkTopic"", Serdes.Integer()"
153274,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionResolverJoinProcessorSupplierTest.java,82,,"                () -> ""value-hash-dummy-topic"","
153275,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionResolverJoinProcessorSupplierTest.java,89,,"        context.setRecordMetadata(""topic"", 0, 0, new RecordHeaders(), 0);"
153276,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionResolverJoinProcessorSupplierTest.java,91,,"        valueGetterSupplier.put(""lhs1"", ""lhsValue"");"
153277,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionResolverJoinProcessorSupplierTest.java,91,,"        valueGetterSupplier.put(""lhs1"", ""lhsValue"");"
153278,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionResolverJoinProcessorSupplierTest.java,92,,"        final long[] oldHash = Murmur3.hash128(STRING_SERIALIZER.serialize(""topic-join-resolver"", ""oldLhsValue""));"
153279,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionResponseWrapperSerdeTest.java,75,,"    @SuppressWarnings(""unchecked"")"
153280,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapperSerdeTest.java,34,,"        final String originalKey = ""originalKey"";"
153281,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/graph/GraphGraceSearchUtilTest.java,68,,"        final ProcessorGraphNode<String, Long> node = new ProcessorGraphNode<>(""stateless"", null);"
153282,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/graph/GraphGraceSearchUtilTest.java,83,,"            ""asdf"","
153283,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/graph/StreamsGraphTest.java,310,,"    private final String expectedJoinedTopology = ""Topologies:\n"""
153284,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/graph/StreamsGraphTest.java,311,,"                                            + ""   Sub-topology: 0\n"""
153285,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/graph/StreamsGraphTest.java,318,,"                                            + ""      <-- KSTREAM-SOURCE-0000000000\n"""
153286,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/graph/StreamsGraphTest.java,323,,"                                            + ""      --> KSTREAM-MERGE-0000000006\n"""
153287,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/graph/StreamsGraphTest.java,328,,"                                            + ""    Processor: KSTREAM-MERGE-0000000006 (stores: [])\n"""
153288,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/suppress/KTableSuppressProcessorMetricsTest.java,64,,"            mkEntry(""thread-id"", threadId),"
153289,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/suppress/KTableSuppressProcessorMetricsTest.java,65,,"            mkEntry(""task-id"", TASK_ID.toString()),"
153290,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/suppress/KTableSuppressProcessorMetricsTest.java,83,,"        ""stream-state-metrics"","
153291,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/suppress/KTableSuppressProcessorMetricsTest.java,88,,"            mkEntry(""in-memory-suppression-state-id"", ""test-store"")"
153292,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/suppress/KTableSuppressProcessorMetricsTest.java,88,,"            mkEntry(""in-memory-suppression-state-id"", ""test-store"")"
153293,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/suppress/KTableSuppressProcessorTest.java,106,,"        final String key = ""hey"";"
153294,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/suppress/KTableSuppressProcessorTest.java,141,,"        context.setRecordMetadata(""topic"", 0, 0, new RecordHeaders(), timestamp);"
153295,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/kstream/internals/suppress/KTableSuppressProcessorTest.java,215,,"        harness.processor.process(new Windowed<>(""dummyKey"", new TimeWindow(windowEnd, windowEnd + 100L)), ARBITRARY_CHANGE);"
153296,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ActiveTaskCreatorTest.java,74,,"        mkEntry(StreamsConfig.APPLICATION_ID_CONFIG, ""appId""),"
153297,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ActiveTaskCreatorTest.java,149,,"        mockClientSupplier.producers.get(0).closeException = new RuntimeException(""KABOOM!"");"
153298,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ActiveTaskCreatorTest.java,166,,"    @SuppressWarnings(""deprecation"")"
153299,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ChangelogTopicsTest.java,92,,"                new ChangelogTopics(internalTopicManager, topicGroups, tasksForTopicGroup, ""[test] "");"
153300,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/CopartitionedTopicsEnforcerTest.java,48,,"            new TopicPartition(""first"", 0),"
153301,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/CopartitionedTopicsEnforcerTest.java,54,,"            new TopicPartition(""second"", 0),"
153302,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/CopartitionedTopicsEnforcerTest.java,113,,"        final InternalTopicConfig topic1 = createRepartitionTopicConfigWithEnforcedNumberOfPartitions(""repartitioned-1"", 10);"
153303,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/GlobalProcessorContextImplTest.java,135,,"            fail(""Should have thrown UnsupportedOperationException."");"
153304,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/GlobalStateManagerImplTest.java,131,,"                put(StreamsConfig.APPLICATION_ID_CONFIG, ""appId"");"
153305,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/GlobalStateManagerImplTest.java,132,,"                put(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG, ""dummy:1234"");"
153306,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/GlobalStateManagerImplTest.java,384,,"                throw new RuntimeException(""KABOOM!"");"
153307,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/GlobalStateManagerImplTest.java,572,,"            new LogContext(""mock""),"
153308,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/GlobalStateTaskTest.java,133,,"        globalStateTask.update(record(topic1, 1, 1, ""foo"".getBytes(), ""bar"".getBytes()));"
153309,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/HighAvailabilityStreamsPartitionAssignorTest.java,83,,"        new PartitionInfo(""topic1"", 0, Node.noNode(), new Node[0], new Node[0]),"
153310,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/HighAvailabilityStreamsPartitionAssignorTest.java,89,,"        new PartitionInfo(""topic3"", 0, Node.noNode(), new Node[0], new Node[0]),"
153311,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/HighAvailabilityStreamsPartitionAssignorTest.java,200,,"        builder.addSource(null, ""source1"", null, null, null, ""topic1"");"
153312,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/HighAvailabilityStreamsPartitionAssignorTest.java,201,,"        builder.addProcessor(""processor1"", new MockApiProcessorSupplier<>(), ""source1"");"
153313,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopicConfigTest.java,49,,"        final WindowedChangelogTopicConfig topicConfig = new WindowedChangelogTopicConfig(""name"", Collections.emptyMap());"
153314,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopicConfigTest.java,81,,"        configs.put(""message.timestamp.type"", ""LogAppendTime"");"
153315,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopicConfigTest.java,92,,"        configs.put(""retention.ms"", ""1000"");"
153316,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopicManagerTest.java,168,,"        createTopicFailFuture.completeExceptionally(new TopicExistsException(""exists""));"
153317,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopicManagerTest.java,310,,"        createTopicFailFuture.completeExceptionally(new IllegalStateException(""Nobody expects the Spanish inquisition""));"
153318,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopicManagerTest.java,815,,"        topicDescriptionLeaderNotAvailableFuture.completeExceptionally(new LeaderNotAvailableException(""Leader Not Available!""));"
153319,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopicManagerTest.java,1063,,"            is(""Cleanup policy ("" + TopicConfig.CLEANUP_POLICY_CONFIG + "") of existing internal topic "" + topic1 + "" should not contain \"""""
153320,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopicManagerTest.java,1063,,"            is(""Cleanup policy ("" + TopicConfig.CLEANUP_POLICY_CONFIG + "") of existing internal topic "" + topic1 + "" should not contain \"""""
153321,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopicManagerTest.java,1063,,"            is(""Cleanup policy ("" + TopicConfig.CLEANUP_POLICY_CONFIG + "") of existing internal topic "" + topic1 + "" should not contain \"""""
153322,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopicManagerTest.java,1064,,"                + TopicConfig.CLEANUP_POLICY_DELETE + ""\""."")"
153323,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopicManagerTest.java,1112,,"            is(""Retention time ("" + TopicConfig.RETENTION_MS_CONFIG + "") of existing internal topic "" +"
153324,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopicManagerTest.java,1113,,"                topic2 + "" is "" + shorterRetentionMs + "" but should be "" + retentionMs + "" or larger."")"
153325,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java,79,,"    private final StoreBuilder<?> storeBuilder = new MockKeyValueStoreBuilder(""testStore"", false);"
153326,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java,86,,"        builder.addSource(Topology.AutoOffsetReset.EARLIEST, ""source"", null, null, null, earliestTopic);"
153327,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java,87,,"        builder.addSource(Topology.AutoOffsetReset.LATEST, ""source2"", null, null, null, latestTopic);"
153328,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java,137,,"        builder.addSource(Topology.AutoOffsetReset.EARLIEST, ""source"", null, stringSerde.deserializer(), stringSerde.deserializer(), ""topic-1"");"
153329,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java,139,,"            builder.addSource(Topology.AutoOffsetReset.LATEST, ""source"", null, stringSerde.deserializer(), stringSerde.deserializer(), ""topic-2"");"
153330,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java,157,,"            builder.addSource(null, ""source-2"", null, null, null, ""topic-1"");"
153331,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java,165,,"        builder.addProcessor(""processor"", new MockApiProcessorSupplier<>(), ""source"");"
153332,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java,209,,"                        new MockKeyValueStoreBuilder(""global-store"", false).withLoggingDisabled(),"
153333,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java,210,,"                        ""globalSource"","
153334,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java,214,,"                        ""globalTopic"","
153335,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java,215,,"                        ""global-processor"","
153336,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java,224,,"        builder.addSink(""sink"", ""topic-2"", null, null, null, ""source"");"
153337,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java,226,,"            builder.addSink(""sink"", ""topic-3"", null, null, null, ""source"");"
153338,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java,244,,"        assertThrows(TopologyException.class, () -> builder.addSink(""sink"", ""topic"", null, null, null));"
153339,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java,282,,"        builder.addSource(null, ""source-1"", null, null, null, ""topic-1"");"
153340,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java,284,,"        builder.addSource(null, ""source-3"", null, null, null, ""topic-3"");"
153341,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java,300,,"        builder.addSource(null, ""source-4"", null, null, null, sourcePattern);"
153342,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java,380,,"        builder.addSource(null, ""source-1"", null, null, null, ""foo"");"
153343,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java,449,,"            ""global-topic"","
153344,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java,535,,"        builder.addProcessor(""processor-1"", new MockApiProcessorSupplier<>(), ""source-1"");"
153345,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java,556,,"        builder.addProcessor(""processor-2"", new MockApiProcessorSupplier<>(), ""source-1"");"
153346,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java,565,,"        builder.addInternalTopic(""topic-1x"", InternalTopicProperties.empty());"
153347,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java,569,,"        builder.addSource(null, ""source-4"", null, null, null, ""topic-4"");"
153348,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java,570,,"        builder.addSource(null, ""source-5"", null, null, null, ""topic-5"");"
153349,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java,570,,"        builder.addSource(null, ""source-5"", null, null, null, ""topic-5"");"
153350,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java,577,,"        builder.addProcessor(""processor-3"", new MockApiProcessorSupplier<>(), ""source-3"", ""source-4"");"
153351,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java,609,,"        builder.addStateStore(new MockKeyValueStoreBuilder(""store-2"", false), ""processor-3"", ""processor-4"");"
153352,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java,728,,"        assertThrows(NullPointerException.class, () -> builder.addSink(""name"", (String) null, null, null, null));"
153353,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java,816,,"        builder.setApplicationId(""appId"");"
153354,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java,907,,"        updatedTopics.add(""topic-A"");"
153355,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java,943,,"        builder.addSource(null, ""source1"", null, null, null, ""topic1"");"
153356,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java,944,,"        builder.addSource(null, ""source2"", null, null, null, ""topic2"");"
153357,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/PartitionGroupTest.java,74,,"    private final String[] topics = {""topic""};"
153358,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/PartitionGroupTest.java,571,,"                    Matchers.hasProperty(""level"", equalTo(""TRACE"")),"
153359,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/PartitionGroupTest.java,571,,"                    Matchers.hasProperty(""level"", equalTo(""TRACE"")),"
153360,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/PartitionGroupTest.java,572,,"                    Matchers.hasProperty(""message"", equalTo("
153361,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/PartitionGrouperTest.java,45,,"            new PartitionInfo(""topic1"", 0, Node.noNode(), new Node[0], new Node[0]),"
153362,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/PartitionGrouperTest.java,48,,"            new PartitionInfo(""topic2"", 0, Node.noNode(), new Node[0], new Node[0]),"
153363,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorContextImplTest.java,190,,"            checkThrowsUnsupportedOperation(store::flush, ""flush()"");"
153364,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorContextImplTest.java,191,,"            checkThrowsUnsupportedOperation(() -> store.put(""1"", 1L), ""put()"");"
153365,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorContextImplTest.java,197,,"            assertEquals(rangeIter, store.range(""one"", ""two""));"
153366,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorContextImplTest.java,197,,"            assertEquals(rangeIter, store.range(""one"", ""two""));"
153367,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorContextImplTest.java,529,,"    @SuppressWarnings(""unchecked"")"
153368,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorNodeTest.java,55,,"        final ProcessorNode node = new ProcessorNode(""name"", new ExceptionalProcessor(), Collections.emptySet());"
153369,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorNodeTest.java,156,,"        assertTrue(""Error about class cast with serdes"", msg.contains(""ClassCastException""));"
153370,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorStateManagerTest.java,694,,"        final RuntimeException exception = new RuntimeException(""KABOOM!"");"
153371,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java,93,,"    private static final Header HEADER = new RecordHeader(""key"", ""value"".getBytes());"
153372,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java,123,,"        topology.addSource(""source-1"", ""topic-1"");"
153373,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java,123,,"        topology.addSource(""source-1"", ""topic-1"");"
153374,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java,124,,"        topology.addSource(""source-2"", ""topic-2"", ""topic-3"");"
153375,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java,124,,"        topology.addSource(""source-2"", ""topic-2"", ""topic-3"");"
153376,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java,124,,"        topology.addSource(""source-2"", ""topic-2"", ""topic-3"");"
153377,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java,125,,"        topology.addProcessor(""processor-1"", new MockApiProcessorSupplier<>(), ""source-1"");"
153378,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java,126,,"        topology.addProcessor(""processor-2"", new MockApiProcessorSupplier<>(), ""source-1"", ""source-2"");"
153379,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java,127,,"        topology.addSink(""sink-1"", ""topic-3"", ""processor-1"");"
153380,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java,269,,"        inputTopic.pipeInput(""key1"", ""value1"");"
153381,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java,269,,"        inputTopic.pipeInput(""key1"", ""value1"");"
153382,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java,273,,"        inputTopic.pipeInput(""key2"", ""value2"");"
153383,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java,273,,"        inputTopic.pipeInput(""key2"", ""value2"");"
153384,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java,277,,"        inputTopic.pipeInput(""key3"", ""value3"");"
153385,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java,277,,"        inputTopic.pipeInput(""key3"", ""value3"");"
153386,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java,278,,"        inputTopic.pipeInput(""key4"", ""value4"");"
153387,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java,278,,"        inputTopic.pipeInput(""key4"", ""value4"");"
153388,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java,309,,"        driver = new TopologyTestDriver(createConnectedStateStoreTopology(""connectedStore""), props);"
153389,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java,334,,"            .addSource(""source1"", STRING_DESERIALIZER, STRING_DESERIALIZER, INPUT_TOPIC_1)"
153390,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java,335,,"            .addSource(""source2"", STRING_DESERIALIZER, STRING_DESERIALIZER, INPUT_TOPIC_2)"
153391,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java,336,,"            .addProcessor(""processor1"", defineWithStoresOldAPI(() -> new OldAPIStatefulProcessor(storeName), Collections.singleton(storeBuilder)), ""source1"")"
153392,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java,337,,"            .addProcessor(""processor2"", defineWithStoresOldAPI(() -> new OldAPIStatefulProcessor(storeName), Collections.singleton(storeBuilder)), ""source2"")"
153393,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java,338,,"            .addSink(""counts"", OUTPUT_TOPIC_1, ""processor1"", ""processor2"");"
153394,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java,392,,"        final String storeName = ""prefixScanStore"";"
153395,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java,1389,,"        final String storeName = ""my-store"";"
153396,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java,1403,,"            ""processor"","
153397,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorTopologyTest.java,1480,,"        topology.addSource(""source"", ""topic1"", ""topic2"");"
153398,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/RecordCollectorTest.java,101,,"    private final String topic = ""topic"";"
153399,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/RecordCollectorTest.java,132,,"            processId + ""-StreamThread-1"","
153400,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/RecordCollectorTest.java,154,,"        final Headers headers = new RecordHeaders(new Header[] {new RecordHeader(""key"", ""value"".getBytes())});"
153401,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/RecordCollectorTest.java,154,,"        final Headers headers = new RecordHeaders(new Header[] {new RecordHeader(""key"", ""value"".getBytes())});"
153402,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/RecordCollectorTest.java,156,,"        collector.send(topic, ""999"", ""0"", null, 0, null, stringSerializer, stringSerializer);"
153403,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/RecordCollectorTest.java,343,,"    @SuppressWarnings({""unchecked"", ""rawtypes""})"
153404,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/RecordCollectorTest.java,343,,"    @SuppressWarnings({""unchecked"", ""rawtypes""})"
153405,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/RecordCollectorTest.java,363,,"                ""ClassCastException while producing data to topic topic. "" +"
153406,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/RecordCollectorTest.java,366,,"                    ""Change the default Serdes in StreamConfig or provide correct Serdes via method parameters "" +"
153407,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/RecordCollectorTest.java,367,,"                    ""(for example if using the DSL, `#to(String topic, Produced<K, V> produced)` with `Produced.keySerde(WindowedSerdes.timeWindowedSerdeFrom(String.class))`)."")"
153408,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/RecordCollectorTest.java,460,,"            getExceptionalStreamProducerOnPartitionsFor(new KafkaException(""Kaboom!"")),"
153409,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/RecordCollectorTest.java,506,,"        testThrowTaskMigratedExceptionOnSubsequentSend(new ProducerFencedException(""KABOOM!""));"
153410,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/RecordCollectorTest.java,605,,"            equalTo(""Error encountered sending record to topic topic for task 0_0 due to:"" +"
153411,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/RecordQueueTest.java,73,,"        new TopicPartition(""topic"", 1),"
153412,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/RecordQueueTest.java,266,,"        final byte[] key = Serdes.Long().serializer().serialize(""foo"", 1L);"
153413,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/RepartitionOptimizingTest.java,285,,"                                                                  + ""      <-- source-map\n"""
153414,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/RepartitionOptimizingTest.java,303,,"                                                                  + ""      <-- count-groupByKey-repartition-source\n"""
153415,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/RepartitionOptimizingTest.java,315,,"                                                                  + ""      <-- count-toStream\n"""
153416,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/RepartitionOptimizingTest.java,326,,"                                                                  + ""      --> join-merge\n"""
153417,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/RepartitionTopicsTest.java,122,,"            ""[test] """
153418,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/RepartitionWithMergeOptimizingTest.java,212,,"                                                              + ""      --> mergedStream\n"""
153419,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/SourceNodeTest.java,49,,"        final String deserializeKey = sourceNode.deserializeKey(""topic"", headers, ""data"".getBytes(StandardCharsets.UTF_8));"
153420,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/SourceNodeTest.java,49,,"        final String deserializeKey = sourceNode.deserializeKey(""topic"", headers, ""data"".getBytes(StandardCharsets.UTF_8));"
153421,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StandbyTaskTest.java,251,,"        EasyMock.expectLastCall().andThrow(new ProcessorStateException(""KABOOM!"")).anyTimes();"
153422,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StateConsumerTest.java,42,,"    private final TopicPartition topicOne = new TopicPartition(""topic-one"", 1);"
153423,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StateDirectoryTest.java,287,,"            assertTrue(new File(directory.getOrCreateDirectoryForTask(task0), ""store"").mkdir());"
153424,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StateDirectoryTest.java,358,,"        final File otherDir = TestUtils.tempDirectory(stateDir.toPath(), ""foo"");"
153425,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StateDirectoryTest.java,549,,"        final File testFile = new File(taskDirectory, ""testFile"");"
153426,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StateDirectoryTest.java,644,,"        directory.getOrCreateDirectoryForTask(new TaskId(0, 0, ""topology1""));"
153427,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StateDirectoryTest.java,648,,"        assertThat(new File(appDir, ""__topology1__"").exists(), is(true));"
153428,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StateDirectoryTest.java,650,,"        assertThat(new File(appDir, ""__topology2__"").exists(), is(true));"
153429,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StateDirectoryTest.java,653,,"        assertThat(new File(new File(appDir, ""__topology1__""), ""0_0"").exists(), is(true));"
153430,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StateManagerUtilTest.java,93,,"            ""logPrefix:"", topology, stateManager, stateDirectory, processorContext);"
153431,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StoreChangelogReaderTest.java,127,,"    private final KafkaException kaboom = new KafkaException(""KABOOM!"");"
153432,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StoreChangelogReaderTest.java,334,,"        consumer.addRecord(new ConsumerRecord<>(topicName, 0, 6L, ""key"".getBytes(), ""value"".getBytes()));"
153433,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StoreChangelogReaderTest.java,334,,"        consumer.addRecord(new ConsumerRecord<>(topicName, 0, 6L, ""key"".getBytes(), ""value"".getBytes()));"
153434,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamTaskTest.java,144,,"            throw new RuntimeException(""KABOOM!"");"
153435,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamTaskTest.java,249,,"        stateDirectory = new StateDirectory(createConfig(""100""), new MockTime(), true);"
153436,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamTaskTest.java,648,,"        final Metric sourceAvg = getProcessorMetric(""record-e2e-latency"", ""%s-avg"", task.id().toString(), sourceNodeName, StreamsConfig.METRICS_LATEST);"
153437,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamTaskTest.java,805,,"        assertNull(getMetric(""commit"", ""%s-latency-avg"", ""all""));"
153438,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamTaskTest.java,805,,"        assertNull(getMetric(""commit"", ""%s-latency-avg"", ""all""));"
153439,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamTaskTest.java,813,,"        assertNotNull(getMetric(""punctuate"", ""%s-latency-avg"", task.id().toString()));"
153440,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamTaskTest.java,2151,,"        final StreamsMetricsImpl metrics = new StreamsMetricsImpl(this.metrics, ""test"", StreamsConfig.METRICS_LATEST, time);"
153441,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java,316,,"            ""Thread never started."");"
153442,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java,322,,"            ""Thread never shut down."");"
153443,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java,331,,"        final String defaultGroupName = ""stream-thread-metrics"";"
153444,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java,333,,"            ""thread-id"","
153445,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java,339,,"            ""commit-latency-avg"", defaultGroupName, descriptionIsNotVerified, defaultTags)));"
153446,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java,341,,"            ""commit-latency-max"", defaultGroupName, descriptionIsNotVerified, defaultTags)));"
153447,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java,557,,"        internalTopologyBuilder.addSource(null, ""source1"", null, null, null, topic1);"
153448,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java,559,,"            ""processor1"","
153449,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java,1298,,"        internalTopologyBuilder.addSource(null, ""name"", null, null, null, ""topic"");"
153450,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java,1298,,"        internalTopologyBuilder.addSource(null, ""name"", null, null, null, ""topic"");"
153451,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java,1318,,"        internalTopologyBuilder.addSource(null, ""source"", null, null, null, topic1);"
153452,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java,1707,,"    @SuppressWarnings(""unchecked"")"
153453,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java,2017,,"            ""stream-thread-test-count-changelog"","
153454,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java,2576,,"                threadTaskPrefix + ""Skipping record due to negative extracted timestamp. "" +"
153455,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java,2578,,"                    ""extractor=[org.apache.kafka.streams.processor.LogAndSkipOnInvalidTimestamp]"""
153456,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsMetadataStateTest.java,80,,"        final KStream<Object, Object> one = builder.stream(""topic-one"");"
153457,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsMetadataStateTest.java,81,,"        one.groupByKey().count(Materialized.as(""table-one""));"
153458,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsMetadataStateTest.java,83,,"        final KStream<Object, Object> two = builder.stream(""topic-two"");"
153459,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsMetadataStateTest.java,84,,"        two.groupByKey().count(Materialized.as(""table-two""));"
153460,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsMetadataStateTest.java,86,,"        builder.stream(""topic-three"")"
153461,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsMetadataStateTest.java,88,,"                .count(Materialized.as(""table-three""));"
153462,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsMetadataStateTest.java,90,,"        one.merge(two).groupByKey().count(Materialized.as(""merged-table""));"
153463,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsMetadataStateTest.java,161,,"        assertTrue(""expected "" + actual + "" to contain "" + one, actual.contains(one));"
153464,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsMetadataStateTest.java,161,,"        assertTrue(""expected "" + actual + "" to contain "" + one, actual.contains(one));"
153465,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsMetadataStateTest.java,274,,"                ""key"","
153466,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java,142,,"    private static final String CONSUMER_1 = ""consumer1"";"
153467,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java,143,,"    private static final String CONSUMER_2 = ""consumer2"";"
153468,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java,147,,"    private final Set<String> allTopics = mkSet(""topic1"", ""topic2"");"
153469,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java,147,,"    private final Set<String> allTopics = mkSet(""topic1"", ""topic2"");"
153470,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java,157,,"    private final TopicPartition t3p0 = new TopicPartition(""topic3"", 0);"
153471,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java,178,,"        ""cluster"","
153472,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java,476,,"        builder.addSource(null, ""source1"", null, null, null, ""topic1"");"
153473,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java,477,,"        builder.addSource(null, ""source2"", null, null, null, ""topic2"");"
153474,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java,478,,"        builder.addProcessor(""processor"", new MockApiProcessorSupplier<>(), ""source1"", ""source2"");"
153475,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java,532,,"        builder.addStateStore(new MockKeyValueStoreBuilder(""store"", false), ""processor"");"
153476,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java,545,,"            singletonList(APPLICATION_ID + ""-store-changelog""),"
153477,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java,550,,"        subscriptions.put(""consumer10"","
153478,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java,555,,"        subscriptions.put(""consumer11"","
153479,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java,560,,"        subscriptions.put(""consumer20"","
153480,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java,769,,"        builder.addStateStore(new MockKeyValueStoreBuilder(""store1"", false), ""processor-1"");"
153481,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java,780,,"            asList(APPLICATION_ID + ""-store1-changelog"","
153482,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java,1002,,"            new HostInfo(""localhost"", 9090),"
153483,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java,1037,,"        builder.addInternalTopic(""topicX"", InternalTopicProperties.empty());"
153484,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java,1039,,"        builder.addProcessor(""processor1"", new MockApiProcessorSupplier<>(), ""source1"");"
153485,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java,1112,,"        final String client = ""client1"";"
153486,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java,1132,,"        expectedCreatedInternalTopics.put(APPLICATION_ID + ""-KTABLE-AGGREGATE-STATE-STORE-0000000006-repartition"", 4);"
153487,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java,1135,,"        expectedCreatedInternalTopics.put(APPLICATION_ID + ""-KSTREAM-MAP-0000000001-repartition"", 4);"
153488,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java,1234,,"        builder.addSource(null, ""source"", null, null, null, ""input"");"
153489,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java,1234,,"        builder.addSource(null, ""source"", null, null, null, ""input"");"
153490,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java,1956,,"        subscriptions.put(""consumer"","
153491,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsProducerTest.java,79,,"        mkEntry(StreamsConfig.APPLICATION_ID_CONFIG, ""appId""),"
153492,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsProducerTest.java,105,,"        ""threadId"","
153493,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsProducerTest.java,147,,"                ""threadId-StreamThread-0"","
153494,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsProducerTest.java,387,,"        nonEosMockProducer.sendException  = new KafkaException(""KABOOM!"");"
153495,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsProducerTest.java,827,,"                   "" it means all tasks belonging to this thread should be migrated."")"
153496,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java,124,,"    private final TopicPartition t1p0changelog = new TopicPartition(""changelog"", 0);"
153497,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java,219,,"        taskManager.handleRebalanceStart(singleton(""topic""));"
153498,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java,495,,"                throw new RuntimeException(""KABOOM!"");"
153499,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java,683,,"                throw new RuntimeException(""oops"");"
153500,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java,980,,"        final ConsumerGroupMetadata groupMetadata = new ConsumerGroupMetadata(""appId"");"
153501,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java,1615,,"                throw new TaskMigratedException(""migrated"", new RuntimeException(""cause""));"
153502,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java,1615,,"                throw new TaskMigratedException(""migrated"", new RuntimeException(""cause""));"
153503,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java,1734,,"        expectLastCall().andThrow(new RuntimeException(""whatever""));"
153504,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java,2268,,"                throw new RuntimeException(""opsh."");"
153505,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/ThreadMetadataImplTest.java,111,,"            ""different"","
153506,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/TimestampedKeyValueStoreMaterializerTest.java,58,,"            new MaterializedInternal<>(Materialized.as(""store""), nameProvider, storePrefix);"
153507,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/assignment/AssignmentInfoTest.java,81,,"        mkEntry(new HostInfo(""localhost"", 8088),"
153508,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/assignment/AssignmentTestUtils.java,90,,"    public static final TaskId NAMED_TASK_T0_0_0 = new TaskId(0, 0, ""topology0"");"
153509,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/assignment/SubscriptionInfoTest.java,96,,"            ""localhost:80"","
153510,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/assignment/TaskMovementTest.java,132,,"        assertThat(client1, hasProperty(""activeTasks"", ClientState::activeTasks, mkSet(TASK_0_0)));"
153511,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/assignment/TaskMovementTest.java,137,,"        assertThat(client1, hasProperty(""standbyTasks"", ClientState::standbyTasks, mkSet()));"
153512,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java,130,,"    private final Map<String, String> tags = mkMap(mkEntry(""tag"", ""value""));"
153513,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java,506,,"        final String processorNodeName = ""processorNodeName"";"
153514,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java,699,,"        final String scope = ""scope"";"
153515,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java,700,,"        final String entity = ""entity"";"
153516,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/StateSerdesTest.java,42,,"        assertThrows(NullPointerException.class, () -> StateSerdes.withBuiltinTypes(""anyName"", null, byte[].class));"
153517,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/StoresTest.java,47,,"        assertEquals(""name cannot be null"", e.getMessage());"
153518,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/StoresTest.java,70,,"        final Exception e = assertThrows(IllegalArgumentException.class, () -> Stores.lruMap(""anyName"", -1));"
153519,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/StoresTest.java,153,,"            Stores.persistentKeyValueStore(""store"").get(),"
153520,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/StoresTest.java,186,,"            Stores.persistentKeyValueStore(""name""),"
153521,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractKeyValueStoreTest.java,105,,"        store.put(0, ""zero"");"
153522,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractKeyValueStoreTest.java,106,,"        store.put(1, ""one"");"
153523,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractKeyValueStoreTest.java,107,,"        store.put(2, ""two"");"
153524,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractKeyValueStoreTest.java,151,,"        store.put(4, ""four"");"
153525,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractKeyValueStoreTest.java,152,,"        store.put(5, ""five"");"
153526,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractKeyValueStoreTest.java,282,,"        driver.addEntryToRestoreLog(3, ""three"");"
153527,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractKeyValueStoreTest.java,504,,"                hasItem(""Returning empty iterator for fetch with invalid key range: from > to."" +"
153528,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractKeyValueStoreTest.java,505,,"                    "" This may be due to range arguments set in the wrong order, "" +"
153529,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractKeyValueStoreTest.java,506,,"                    ""or serdes that don't preserve ordering when lexicographically comparing the serialized bytes."" +"
153530,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractKeyValueStoreTest.java,507,,"                    "" Note that the built-in numerical serdes do not follow this for negative numbers"")"
153531,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractRocksDBSegmentedBytesStoreTest.java,414,,"            bytesStore.put(serializeKey(new Windowed<>(""dummy"", nextSegmentWindow)), serializeValue(0));"
153532,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractSessionBytesStoreTest.java,208,,"            KeyValue.pair(new Windowed<>(""aaa"", new SessionWindow(100, 100)), 3L),"
153533,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractWindowBytesStoreTest.java,126,,"        assertEquals(""zero"", windowStore.fetch(0, startTime));"
153534,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractWindowBytesStoreTest.java,127,,"        assertEquals(""one"", windowStore.fetch(1, startTime + 1L));"
153535,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractWindowBytesStoreTest.java,128,,"        assertEquals(""two"", windowStore.fetch(2, startTime + 2L));"
153536,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractWindowBytesStoreTest.java,129,,"        assertEquals(""four"", windowStore.fetch(4, startTime + 4L));"
153537,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractWindowBytesStoreTest.java,130,,"        assertEquals(""five"", windowStore.fetch(5, startTime + 5L));"
153538,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractWindowBytesStoreTest.java,141,,"        assertEquals(""two+1"", windowStore.fetch(2, startTime + 3L));"
153539,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractWindowBytesStoreTest.java,142,,"        assertEquals(""two+2"", windowStore.fetch(2, startTime + 4L));"
153540,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractWindowBytesStoreTest.java,143,,"        assertEquals(""two+3"", windowStore.fetch(2, startTime + 5L));"
153541,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractWindowBytesStoreTest.java,144,,"        assertEquals(""two+4"", windowStore.fetch(2, startTime + 6L));"
153542,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractWindowBytesStoreTest.java,145,,"        assertEquals(""two+5"", windowStore.fetch(2, startTime + 7L));"
153543,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractWindowBytesStoreTest.java,146,,"        assertEquals(""two+6"", windowStore.fetch(2, startTime + 8L));"
153544,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractWindowBytesStoreTest.java,249,,"        assertEquals(Utils.mkSet(""zero@0""), entriesByKey.get(0));"
153545,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractWindowBytesStoreTest.java,286,,"        windowStore.put(3, ""three"", startTime + 3);"
153546,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractWindowBytesStoreTest.java,797,,"        windowStore.put(0, ""zero+"", startTime);"
153547,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/AbstractWindowBytesStoreTest.java,798,,"        windowStore.put(0, ""zero++"", startTime);"
153548,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/BufferValueTest.java,85,,"        final ProcessorRecordContext context = new ProcessorRecordContext(0L, 0L, 0, ""topic"", new RecordHeaders());"
153549,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/CachingInMemoryKeyValueStoreTest.java,140,,"        store.put(bytesKey(""key""), bytesValue(""value""));"
153550,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/CachingPersistentWindowStoreTest.java,147,,"            Stores.persistentWindowStore(""store-name"", ofHours(1L), ofMinutes(1L), false),"
153551,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/CachingPersistentWindowStoreTest.java,638,,"        cachingStore.put(bytesKey(""a""), bytesValue(""0001""), 0);"
153552,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/CachingPersistentWindowStoreTest.java,639,,"        cachingStore.put(bytesKey(""aa""), bytesValue(""0002""), 0);"
153553,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/CachingPersistentWindowStoreTest.java,640,,"        cachingStore.put(bytesKey(""a""), bytesValue(""0003""), 1);"
153554,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/CachingPersistentWindowStoreTest.java,641,,"        cachingStore.put(bytesKey(""aa""), bytesValue(""0004""), 1);"
153555,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/CachingPersistentWindowStoreTest.java,642,,"        cachingStore.put(bytesKey(""a""), bytesValue(""0005""), SEGMENT_INTERVAL);"
153556,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/CompositeReadOnlyKeyValueStoreTest.java,388,,"        assertThrows(InvalidStateStoreException.class, () -> rebalancing().get(""anything""));"
153557,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/CompositeReadOnlyWindowStoreTest.java,54,,"    private final String storeName = ""window-store"";"
153558,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/CompositeReadOnlyWindowStoreTest.java,80,,"        underlyingWindowStore.put(""my-key"", ""my-value"", 0L);"
153559,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/CompositeReadOnlyWindowStoreTest.java,80,,"        underlyingWindowStore.put(""my-key"", ""my-value"", 0L);"
153560,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/CompositeReadOnlyWindowStoreTest.java,81,,"        underlyingWindowStore.put(""my-key"", ""my-later-value"", 10L);"
153561,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/CompositeReadOnlyWindowStoreTest.java,126,,"        underlyingWindowStore.put(""key-one"", ""value-one"", 0L);"
153562,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/CompositeReadOnlyWindowStoreTest.java,126,,"        underlyingWindowStore.put(""key-one"", ""value-one"", 0L);"
153563,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/CompositeReadOnlyWindowStoreTest.java,127,,"        secondUnderlying.put(""key-two"", ""value-two"", 10L);"
153564,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/CompositeReadOnlyWindowStoreTest.java,127,,"        secondUnderlying.put(""key-two"", ""value-two"", 10L);"
153565,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/CompositeReadOnlyWindowStoreTest.java,158,,"        otherUnderlyingStore.put(""some-key"", ""some-value"", 0L);"
153566,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/CompositeReadOnlyWindowStoreTest.java,186,,"            ""foo"""
153567,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/CompositeReadOnlyWindowStoreTest.java,189,,"        assertThrows(InvalidStateStoreException.class, () -> store.fetch(""key"", ofEpochMilli(1), ofEpochMilli(10)));"
153568,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/GlobalStateStoreProviderTest.java,65,,"            ""kv-store"","
153569,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/GlobalStateStoreProviderTest.java,71,,"            ""ts-kv-store"","
153570,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/GlobalStateStoreProviderTest.java,77,,"            ""w-store"","
153571,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/GlobalStateStoreProviderTest.java,129,,"            new GlobalStateStoreProvider(Collections.singletonMap(""global"", new NoOpReadOnlyStore<>()));"
153572,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/InMemoryWindowStoreTest.java,71,,"            .add(new KeyValue<>(toStoreKeyBinary(1, 0L, 0, serdes).get(), serdes.rawValue(""one"")));"
153573,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/InMemoryWindowStoreTest.java,73,,"            serdes.rawValue(""two"")));"
153574,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/InMemoryWindowStoreTest.java,75,,"            serdes.rawValue(""three"")));"
153575,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/InMemoryWindowStoreTest.java,100,,"        windowStore.put(1, ""four"", 2 * RETENTION_PERIOD);"
153576,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/KeyValueIteratorFacadeTest.java,61,,"        expect(mockedKeyValueIterator.peekNextKey()).andReturn(""key"");"
153577,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/KeyValueSegmentTest.java,61,,"        final KeyValueSegment segment = new KeyValueSegment(""segment"", ""window"", 0L, metricsRecorder);"
153578,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/KeyValueSegmentTest.java,61,,"        final KeyValueSegment segment = new KeyValueSegment(""segment"", ""window"", 0L, metricsRecorder);"
153579,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/KeyValueSegmentTest.java,84,,"        final KeyValueSegment segment = new KeyValueSegment(""anyName"", ""anyName"", 0L, metricsRecorder);"
153580,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/KeyValueSegmentTest.java,86,,"            new KeyValueSegment(""someOtherName"", ""someOtherName"", 0L, metricsRecorder);"
153581,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/KeyValueSegmentsTest.java,53,,"    private final String storeName = ""test"";"
153582,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/KeyValueSegmentsTest.java,103,,"        assertTrue(new File(context.stateDir(), ""test/test."" + SEGMENT_INTERVAL).isDirectory());"
153583,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/MergedSortedCacheWrappedWindowStoreIteratorTest.java,69,,"        final KeyValueIterator<Long, byte[]> storeIterator = new DelegatingPeekingKeyValueIterator<>(""store"", new KeyValueIteratorStub<>(windowStoreKvPairs.iterator()));"
153584,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/MeteredSessionStoreTest.java,266,,"        final KafkaMetric metric = metric(""fetch-rate"");"
153585,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/MeteredTimestampedKeyValueStoreTest.java,135,,"    @SuppressWarnings({""unchecked"", ""rawtypes""})"
153586,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/MeteredWindowStoreTest.java,268,,"        final KafkaMetric metric = metric(""fetch-rate"");"
153587,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/ReadOnlyKeyValueStoreFacadeTest.java,53,,"        expect(mockedKeyValueTimestampStore.get(""key""))"
153588,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/ReadOnlyKeyValueStoreFacadeTest.java,67,,"            .andReturn(KeyValue.pair(""key1"", ValueAndTimestamp.make(""value1"", 21L)))"
153589,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/ReadOnlyKeyValueStoreFacadeTest.java,67,,"            .andReturn(KeyValue.pair(""key1"", ValueAndTimestamp.make(""value1"", 21L)))"
153590,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/ReadOnlyKeyValueStoreFacadeTest.java,68,,"            .andReturn(KeyValue.pair(""key2"", ValueAndTimestamp.make(""value2"", 42L)));"
153591,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/ReadOnlyKeyValueStoreFacadeTest.java,68,,"            .andReturn(KeyValue.pair(""key2"", ValueAndTimestamp.make(""value2"", 42L)));"
153592,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/ReadOnlyWindowStoreFacadeTest.java,59,,"        expect(mockedWindowTimestampStore.fetch(""key1"", 21L))"
153593,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/ReadOnlyWindowStoreFacadeTest.java,60,,"            .andReturn(ValueAndTimestamp.make(""value1"", 42L));"
153594,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/ReadOnlyWindowStoreFacadeTest.java,75,,"            .andReturn(KeyValue.pair(42L, ValueAndTimestamp.make(""value2"", 23L)));"
153595,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/ReadOnlyWindowStoreFacadeTest.java,112,,"                new Windowed<>(""key2"", new TimeWindow(42L, 43L)),"
153596,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/ReadOnlyWindowStoreStub.java,67,,"            throw new InvalidStateStoreException(""Store is not open"");"
153597,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/ReadOnlyWindowStoreStub.java,119,,"                throw new UnsupportedOperationException(""peekNextKey() not supported in "" + getClass().getName());"
153598,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBStoreTest.java,874,,"        store.put(2, ""goodbye"");"
153599,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBStoreTest.java,907,,"            fail(""should have thrown InvalidStateStoreException on closed store"");"
153600,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBTimeOrderedWindowStoreTest.java,104,,"        windowStore.put(0, ""zero"", startTime + 0);"
153601,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBTimeOrderedWindowStoreTest.java,105,,"        windowStore.put(1, ""one"", startTime + 1);"
153602,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBTimeOrderedWindowStoreTest.java,106,,"        windowStore.put(2, ""two"", startTime + 2);"
153603,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBTimeOrderedWindowStoreTest.java,145,,"        windowStore.put(4, ""four"", startTime + 4);"
153604,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBTimestampedStoreTest.java,59,,"            assertThat(appender.getMessages(), hasItem(""Opening store "" + DB_NAME + "" in regular mode""));"
153605,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBTimestampedStoreTest.java,146,,"        assertThat(rocksDBStore.get(new Bytes(""key1"".getBytes())).length, is(8 + 1));"
153606,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBTimestampedStoreTest.java,154,,"        rocksDBStore.put(new Bytes(""key2"".getBytes()), ""timestamp+22"".getBytes());"
153607,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBTimestampedStoreTest.java,160,,"        rocksDBStore.put(new Bytes(""key3"".getBytes()), null);"
153608,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBTimestampedStoreTest.java,166,,"        rocksDBStore.put(new Bytes(""key8"".getBytes()), ""timestamp+88888888"".getBytes());"
153609,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBTimestampedStoreTest.java,174,,"        assertThat(rocksDBStore.putIfAbsent(new Bytes(""key4"".getBytes()), ""timestamp+4444"".getBytes()).length, is(8 + 4));"
153610,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBTimestampedStoreTest.java,180,,"        assertThat(rocksDBStore.putIfAbsent(new Bytes(""key11"".getBytes()), ""timestamp+11111111111"".getBytes()), new IsNull<>());"
153611,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBTimestampedStoreTest.java,186,,"        assertThat(rocksDBStore.putIfAbsent(new Bytes(""key5"".getBytes()), null).length, is(8 + 5));"
153612,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBTimestampedStoreTest.java,200,,"        assertThat(rocksDBStore.delete(new Bytes(""key6"".getBytes())).length, is(8 + 6));"
153613,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBTimestampedStoreTest.java,246,,"                assertArrayEquals(""key7"".getBytes(), keyValue.key.get());"
153614,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBWindowStoreTest.java,74,,"        windowStore.put(1, ""one"", currentTime);"
153615,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBWindowStoreTest.java,77,,"        windowStore.put(1, ""two"", currentTime);"
153616,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBWindowStoreTest.java,86,,"        windowStore.put(1, ""four"", currentTime);"
153617,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBWindowStoreTest.java,125,,"        windowStore.put(5, ""five"", startTime + increment * 5);"
153618,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBWindowStoreTest.java,172,,"        windowStore.put(6, ""six"", startTime + increment * 6);"
153619,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBWindowStoreTest.java,225,,"        windowStore.put(7, ""seven"", startTime + increment * 7);"
153620,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBWindowStoreTest.java,284,,"        windowStore.put(8, ""eight"", startTime + increment * 8);"
153621,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/SessionKeySchemaTest.java,192,,"        final byte[] serialized = SessionKeySchema.toBinary(windowedKey, serde.serializer(), ""dummy"");"
153622,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/SessionStoreBuilderTest.java,56,,"        expect(supplier.name()).andReturn(""name"");"
153623,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/StreamThreadStateStoreProviderTest.java,98,,"        topology.addProcessor(""the-processor"", new MockApiProcessorSupplier<>(), ""the-source"");"
153624,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/StreamThreadStateStoreProviderTest.java,101,,"                Stores.inMemoryKeyValueStore(""kv-store""),"
153625,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/StreamThreadStateStoreProviderTest.java,107,,"                Stores.inMemoryKeyValueStore(""timestamped-kv-store""),"
153626,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/StreamThreadStateStoreProviderTest.java,114,,"                    ""window-store"","
153627,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/StreamThreadStateStoreProviderTest.java,124,,"                    ""timestamped-window-store"","
153628,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/StreamThreadStateStoreProviderTest.java,134,,"                    ""session-store"","
153629,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/TimeOrderedKeyValueBufferTest.java,137,,"        putRecord(buffer, context, 0L, 0L, ""asdf"", ""2p93nf"");"
153630,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/TimeOrderedKeyValueBufferTest.java,160,,"        putRecord(buffer, context, 0L, 0L, ""asdf"", ""qwer"");"
153631,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/TimeOrderedKeyValueBufferTest.java,173,,"        putRecord(buffer, context, 1L, 0L, ""zxcv"", ""rtg"");"
153632,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/TimeOrderedKeyValueBufferTest.java,384,,"            new ConsumerRecord<>(""changelog-topic"","
153633,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/TimeOrderedKeyValueBufferTest.java,391,,"                                 ""todelete"".getBytes(UTF_8),"
153634,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/TimeOrderedKeyValueBufferTest.java,454,,"        assertThat(buffer.priorValueForBuffered(""zxcv""), is(Maybe.defined(ValueAndTimestamp.make(""previous"", -1))));"
153635,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/TimeOrderedKeyValueBufferTest.java,472,,"                new Change<>(""next"", ""eo4im""),"
153636,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/TimeOrderedKeyValueBufferTest.java,593,,"                new Change<>(""next"", ""3o4im""),"
153637,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/TimestampedKeyValueStoreBuilderTest.java,55,,"        expect(supplier.name()).andReturn(""name"");"
153638,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/TimestampedSegmentTest.java,61,,"        final TimestampedSegment segment = new TimestampedSegment(""segment"", ""window"", 0L, metricsRecorder);"
153639,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/TimestampedSegmentTest.java,61,,"        final TimestampedSegment segment = new TimestampedSegment(""segment"", ""window"", 0L, metricsRecorder);"
153640,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/TimestampedSegmentTest.java,84,,"        final TimestampedSegment segment = new TimestampedSegment(""anyName"", ""anyName"", 0L, metricsRecorder);"
153641,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/TimestampedSegmentTest.java,86,,"            new TimestampedSegment(""someOtherName"", ""someOtherName"", 0L, metricsRecorder);"
153642,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/TimestampedSegmentsTest.java,53,,"    private final String storeName = ""test"";"
153643,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/TimestampedSegmentsTest.java,104,,"        assertTrue(new File(context.stateDir(), ""test/test."" + SEGMENT_INTERVAL).isDirectory());"
153644,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/TimestampedWindowStoreBuilderTest.java,59,,"        expect(supplier.name()).andReturn(""name"");"
153645,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/WindowKeySchemaTest.java,81,,"            ""shorter key with max timestamp should be in range"","
153646,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/WindowStoreBuilderTest.java,60,,"        expect(supplier.name()).andReturn(""name"");"
153647,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/metrics/RocksDBMetricsRecorderTest.java,163,,"            is(""Value providers for store "" + SEGMENT_STORE_NAME_1 + "" of task "" + TASK_ID1 +"
153648,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/metrics/RocksDBMetricsRecorderTest.java,165,,"                ""Please open a bug report under https://issues.apache.org/jira/projects/KAFKA/issues"")"
153649,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/state/internals/metrics/RocksDBMetricsRecorderTest.java,181,,"                ""This is a bug in Kafka Streams. "" +"
153650,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/tests/EosTestDriver.java,108,,"                    final ProducerRecord<String, Integer> record = new ProducerRecord<>(""data"", key, value);"
153651,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/tests/EosTestDriver.java,201,,"            allInputTopics = new String[] {""data"", ""repartition""};"
153652,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/tests/EosTestDriver.java,202,,"            allOutputTopics = new String[] {""echo"", ""min"", ""sum"", ""repartition"", ""max"", ""cnt""};"
153653,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/tests/EosTestDriver.java,202,,"            allOutputTopics = new String[] {""echo"", ""min"", ""sum"", ""repartition"", ""max"", ""cnt""};"
153654,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/tests/EosTestDriver.java,202,,"            allOutputTopics = new String[] {""echo"", ""min"", ""sum"", ""repartition"", ""max"", ""cnt""};"
153655,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/tests/EosTestDriver.java,202,,"            allOutputTopics = new String[] {""echo"", ""min"", ""sum"", ""repartition"", ""max"", ""cnt""};"
153656,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/tests/EosTestDriver.java,202,,"            allOutputTopics = new String[] {""echo"", ""min"", ""sum"", ""repartition"", ""max"", ""cnt""};"
153657,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/tests/EosTestDriver.java,392,,"                    exception = new RuntimeException(""Result verification failed for "" + receivedRecord + "" since there's no more expected record"");"
153658,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/tests/EosTestDriver.java,403,,"                    exception = new RuntimeException(""Result verification failed for "" + receivedRecord + "" expected <"" + expectedKey + "","" + expectedValue + ""> but was <"" + receivedKey + "","" + receivedValue + "">"");"
153659,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/tests/EosTestDriver.java,403,,"                    exception = new RuntimeException(""Result verification failed for "" + receivedRecord + "" expected <"" + expectedKey + "","" + expectedValue + ""> but was <"" + receivedKey + "","" + receivedValue + "">"");"
153660,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/tests/EosTestDriver.java,425,,"                throw new RuntimeException(""Result verification failed: expected "" + partitionInput.size() + "" records for """
153661,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/tests/EosTestDriver.java,425,,"                throw new RuntimeException(""Result verification failed: expected "" + partitionInput.size() + "" records for """
153662,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/tests/EosTestDriver.java,426,,"                    + partitionRecords.getKey() + "" but received "" + partitionMin.size());"
153663,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/tests/RelationalSmokeTest.java,126,,"                ""key="" + key +"
153664,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/tests/RelationalSmokeTest.java,127,,"                "", timestamp="" + Instant.ofEpochMilli(timestamp) +"
153665,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/tests/RelationalSmokeTest.java,128,,"                "", text='"" + text + '\'' +"
153666,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/tests/SmokeTestClient.java,171,,"        source.filterNot((k, v) -> k.equals(""flush""))"
153667,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,64,,"        ""data"","
153668,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,65,,"        ""echo"","
153669,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,66,,"        ""max"","
153670,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,67,,"        ""min"", ""min-suppressed"", ""min-raw"","
153671,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,67,,"        ""min"", ""min-suppressed"", ""min-raw"","
153672,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,68,,"        ""dif"","
153673,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,71,,"        ""cnt"","
153674,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,73,,"        ""tagg"""
153675,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,491,,"                            indent(""\t\t"", observedInputEvents.get(key)),"
153676,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/test/InternalMockProcessorContext.java,84,,"            new StreamsMetricsImpl(new Metrics(), ""mock"", StreamsConfig.METRICS_LATEST, new MockTime()),"
153677,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/test/ReadOnlySessionStoreStub.java,47,,"        throw new UnsupportedOperationException(""Moved from Session Store. Implement if needed"");"
153678,./TargetProjects/kafka/streams/src/test/java/org/apache/kafka/test/ReadOnlySessionStoreStub.java,73,,"            throw new InvalidStateStoreException(""not open"");"
153679,./TargetProjects/kafka/streams/test-utils/src/main/java/org/apache/kafka/streams/TopologyTestDriver.java,942,,"            throw new IllegalArgumentException(""Store "" + stateStore.name()"
153680,./TargetProjects/kafka/streams/test-utils/src/main/java/org/apache/kafka/streams/TopologyTestDriver.java,984,,"    @SuppressWarnings(""unchecked"")"
153681,./TargetProjects/kafka/streams/test-utils/src/main/java/org/apache/kafka/streams/processor/MockProcessorContext.java,98,,"        @SuppressWarnings({""WeakerAccess"", ""unused""})"
153682,./TargetProjects/kafka/streams/test-utils/src/main/java/org/apache/kafka/streams/processor/MockProcessorContext.java,98,,"        @SuppressWarnings({""WeakerAccess"", ""unused""})"
153683,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/KeyValueStoreFacadeTest.java,77,,"        mockedKeyValueTimestampStore.put(""key"", ValueAndTimestamp.make(""value"", ConsumerRecord.NO_TIMESTAMP));"
153684,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/KeyValueStoreFacadeTest.java,77,,"        mockedKeyValueTimestampStore.put(""key"", ValueAndTimestamp.make(""value"", ConsumerRecord.NO_TIMESTAMP));"
153685,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/KeyValueStoreFacadeTest.java,89,,"            .andReturn(ValueAndTimestamp.make(""oldValue"", 42L));"
153686,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/MockProcessorContextTest.java,59,,"        processor.process(""foo"", 5L);"
153687,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/MockProcessorContextTest.java,60,,"        processor.process(""barbaz"", 50L);"
153688,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/MockProcessorContextTest.java,63,,"        assertEquals(new KeyValue<>(""foo5"", 8L), forwarded.next().keyValue());"
153689,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/MockProcessorContextTest.java,64,,"        assertEquals(new KeyValue<>(""barbaz50"", 56L), forwarded.next().keyValue());"
153690,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/MockProcessorContextTest.java,106,,"                    context().forward(""start"", -1L, To.all()); // broadcast"
153691,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/MockProcessorContextTest.java,198,,"                stateStore.put(""all"", (stateStore.get(""all"") == null ? 0 : stateStore.get(""all"")) + value);"
153692,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/MockProcessorContextTest.java,216,,"        processor.process(""bar"", 50L);"
153693,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/MockProcessorContextTest.java,226,,"        config.put(StreamsConfig.APPLICATION_ID_CONFIG, ""testMetadata"");"
153694,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/MockProcessorContextTest.java,231,,"                context().forward(""appId"", context().applicationId());"
153695,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/MockProcessorContextTest.java,232,,"                context().forward(""taskId"", context().taskId());"
153696,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/MockProcessorContextTest.java,234,,"                context().forward(""topic"", context().topic());"
153697,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/MockProcessorContextTest.java,235,,"                context().forward(""partition"", context().partition());"
153698,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/MockProcessorContextTest.java,236,,"                context().forward(""offset"", context().offset());"
153699,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/MockProcessorContextTest.java,237,,"                context().forward(""timestamp"", context().timestamp());"
153700,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/MockProcessorContextTest.java,239,,"                context().forward(""key"", key);"
153701,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/MockProcessorContextTest.java,240,,"                context().forward(""value"", value);"
153702,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/MockProcessorContextTest.java,351,,"        config.put(StreamsConfig.APPLICATION_ID_CONFIG, ""testFullConstructor"");"
153703,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/TestTopicsTest.java,103,,"        inputTopic.pipeInput(""Hello"");"
153704,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/TestTopicsTest.java,115,,"        final List<String> inputList = Arrays.asList(""This"", ""is"", ""an"", ""example"");"
153705,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/TestTopicsTest.java,115,,"        final List<String> inputList = Arrays.asList(""This"", ""is"", ""an"", ""example"");"
153706,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/TestTopicsTest.java,180,,"        inputTopic.pipeInput(""value"");"
153707,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/TestTopicsTest.java,241,,"        inputTopic.pipeInput(2L, ""Kafka"", ++baseTime);"
153708,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java,302,,"        final String sourceName = ""source"";"
153709,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java,305,,"        topology.addSink(""sink"", SINK_TOPIC_1, sourceName);"
153710,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java,344,,"        topology.addProcessor(""processor"", new MockProcessorSupplier(punctuations), sourceName);"
153711,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java,376,,"                        sourceTopicName + ""-globalStore""),"
153712,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java,870,,"                Stores.inMemoryKeyValueStore(""store""),"
153713,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java,877,,"                Stores.inMemoryKeyValueStore(""globalStore""),"
153714,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java,1019,,"                equalTo(""Store "" + keyValueStoreName"
153715,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java,1212,,"        setup(Stores.inMemoryKeyValueStore(""aggStore""));"
153716,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java,1217,,"        topology.addSource(""sourceProcessor"", ""input-topic"");"
153717,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java,1217,,"        topology.addSource(""sourceProcessor"", ""input-topic"");"
153718,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java,1218,,"        topology.addProcessor(""aggregator"", new CustomMaxAggregatorSupplier(), ""sourceProcessor"");"
153719,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java,1224,,"        topology.addSink(""sinkProcessor"", ""result-topic"", ""aggregator"");"
153720,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java,1370,,"                            this.store = context.getStateStore(""storeProcessorStore"");"
153721,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java,1544,,"        topology.addSource(""source"", new StringDeserializer(), new StringDeserializer(), ""input"");"
153722,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java,1546,,"            ""recursiveProcessor"","
153723,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java,1558,,"                    if (!value.startsWith(""recurse-"")) {"
153724,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java,1559,,"                        context.forward(record.withValue(""recurse-"" + value), ""recursiveSink"");"
153725,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java,1567,,"        topology.addSink(""sink"", ""output"", new StringSerializer(), new StringSerializer(), ""recursiveProcessor"");"
153726,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java,1576,,"            in.pipeInput(""B"", ""beta"");"
153727,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java,1644,,"            in.pipeInput(""A"", ""alpha"");"
153728,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/test/MockProcessorContextAPITest.java,72,,"        processor.process(new Record<>(""foo"", 5L, 0L));"
153729,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/test/MockProcessorContextAPITest.java,97,,"                    context.forward(new Record<>(""start"", -1L, 0L)); // broadcast"
153730,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/test/MockProcessorContextAPITest.java,99,,"                final String toChild = count % 2 == 0 ? ""george"" : ""pete"";"
153731,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/test/MockProcessorContextAPITest.java,99,,"                final String toChild = count % 2 == 0 ? ""george"" : ""pete"";"
153732,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/test/MockProcessorContextAPITest.java,212,,"                stateStore.put(""all"", (stateStore.get(""all"") == null ? 0 : stateStore.get(""all"")) + value);"
153733,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/test/MockProcessorContextAPITest.java,336,,"        config.put(StreamsConfig.APPLICATION_ID_CONFIG, ""testFullConstructor"");"
153734,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/test/TestRecordTest.java,45,,"                new RecordHeader(""foo"", ""value"".getBytes()),"
153735,./TargetProjects/kafka/streams/test-utils/src/test/java/org/apache/kafka/streams/test/wordcount/WindowedWordCountProcessorTest.java,65,,"        processor.process(new Record<>(""key"", ""alpha beta gamma alpha"", 101L));"
153736,./TargetProjects/kafka/streams/upgrade-system-tests-22/src/test/java/org/apache/kafka/streams/tests/SmokeTestClient.java,172,,"        source.filterNot((k, v) -> k.equals(""flush""))"
153737,./TargetProjects/kafka/streams/upgrade-system-tests-22/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,64,,"        ""data"","
153738,./TargetProjects/kafka/streams/upgrade-system-tests-22/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,65,,"        ""echo"","
153739,./TargetProjects/kafka/streams/upgrade-system-tests-22/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,66,,"        ""max"","
153740,./TargetProjects/kafka/streams/upgrade-system-tests-22/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,67,,"        ""min"", ""min-suppressed"", ""min-raw"","
153741,./TargetProjects/kafka/streams/upgrade-system-tests-22/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,67,,"        ""min"", ""min-suppressed"", ""min-raw"","
153742,./TargetProjects/kafka/streams/upgrade-system-tests-22/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,68,,"        ""dif"","
153743,./TargetProjects/kafka/streams/upgrade-system-tests-22/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,71,,"        ""cnt"","
153744,./TargetProjects/kafka/streams/upgrade-system-tests-22/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,73,,"        ""tagg"""
153745,./TargetProjects/kafka/streams/upgrade-system-tests-22/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,501,,"                            indent(""\t\t"", observedInputEvents.get(key)),"
153746,./TargetProjects/kafka/streams/upgrade-system-tests-23/src/test/java/org/apache/kafka/streams/tests/SmokeTestClient.java,172,,"        source.filterNot((k, v) -> k.equals(""flush""))"
153747,./TargetProjects/kafka/streams/upgrade-system-tests-23/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,64,,"        ""data"","
153748,./TargetProjects/kafka/streams/upgrade-system-tests-23/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,65,,"        ""echo"","
153749,./TargetProjects/kafka/streams/upgrade-system-tests-23/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,66,,"        ""max"","
153750,./TargetProjects/kafka/streams/upgrade-system-tests-23/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,67,,"        ""min"", ""min-suppressed"", ""min-raw"","
153751,./TargetProjects/kafka/streams/upgrade-system-tests-23/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,67,,"        ""min"", ""min-suppressed"", ""min-raw"","
153752,./TargetProjects/kafka/streams/upgrade-system-tests-23/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,68,,"        ""dif"","
153753,./TargetProjects/kafka/streams/upgrade-system-tests-23/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,71,,"        ""cnt"","
153754,./TargetProjects/kafka/streams/upgrade-system-tests-23/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,73,,"        ""tagg"""
153755,./TargetProjects/kafka/streams/upgrade-system-tests-23/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,491,,"                            indent(""\t\t"", observedInputEvents.get(key)),"
153756,./TargetProjects/kafka/streams/upgrade-system-tests-24/src/test/java/org/apache/kafka/streams/tests/SmokeTestClient.java,172,,"        source.filterNot((k, v) -> k.equals(""flush""))"
153757,./TargetProjects/kafka/streams/upgrade-system-tests-24/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,64,,"        ""data"","
153758,./TargetProjects/kafka/streams/upgrade-system-tests-24/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,65,,"        ""echo"","
153759,./TargetProjects/kafka/streams/upgrade-system-tests-24/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,66,,"        ""max"","
153760,./TargetProjects/kafka/streams/upgrade-system-tests-24/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,67,,"        ""min"", ""min-suppressed"", ""min-raw"","
153761,./TargetProjects/kafka/streams/upgrade-system-tests-24/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,67,,"        ""min"", ""min-suppressed"", ""min-raw"","
153762,./TargetProjects/kafka/streams/upgrade-system-tests-24/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,68,,"        ""dif"","
153763,./TargetProjects/kafka/streams/upgrade-system-tests-24/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,71,,"        ""cnt"","
153764,./TargetProjects/kafka/streams/upgrade-system-tests-24/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,73,,"        ""tagg"""
153765,./TargetProjects/kafka/streams/upgrade-system-tests-24/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,491,,"                            indent(""\t\t"", observedInputEvents.get(key)),"
153766,./TargetProjects/kafka/streams/upgrade-system-tests-25/src/test/java/org/apache/kafka/streams/tests/SmokeTestClient.java,172,,"        source.filterNot((k, v) -> k.equals(""flush""))"
153767,./TargetProjects/kafka/streams/upgrade-system-tests-25/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,64,,"        ""data"","
153768,./TargetProjects/kafka/streams/upgrade-system-tests-25/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,65,,"        ""echo"","
153769,./TargetProjects/kafka/streams/upgrade-system-tests-25/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,66,,"        ""max"","
153770,./TargetProjects/kafka/streams/upgrade-system-tests-25/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,67,,"        ""min"", ""min-suppressed"", ""min-raw"","
153771,./TargetProjects/kafka/streams/upgrade-system-tests-25/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,67,,"        ""min"", ""min-suppressed"", ""min-raw"","
153772,./TargetProjects/kafka/streams/upgrade-system-tests-25/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,68,,"        ""dif"","
153773,./TargetProjects/kafka/streams/upgrade-system-tests-25/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,71,,"        ""cnt"","
153774,./TargetProjects/kafka/streams/upgrade-system-tests-25/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,73,,"        ""tagg"""
153775,./TargetProjects/kafka/streams/upgrade-system-tests-25/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,491,,"                            indent(""\t\t"", observedInputEvents.get(key)),"
153776,./TargetProjects/kafka/streams/upgrade-system-tests-26/src/test/java/org/apache/kafka/streams/tests/SmokeTestClient.java,172,,"        source.filterNot((k, v) -> k.equals(""flush""))"
153777,./TargetProjects/kafka/streams/upgrade-system-tests-26/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,64,,"        ""data"","
153778,./TargetProjects/kafka/streams/upgrade-system-tests-26/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,65,,"        ""echo"","
153779,./TargetProjects/kafka/streams/upgrade-system-tests-26/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,66,,"        ""max"","
153780,./TargetProjects/kafka/streams/upgrade-system-tests-26/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,67,,"        ""min"", ""min-suppressed"", ""min-raw"","
153781,./TargetProjects/kafka/streams/upgrade-system-tests-26/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,67,,"        ""min"", ""min-suppressed"", ""min-raw"","
153782,./TargetProjects/kafka/streams/upgrade-system-tests-26/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,68,,"        ""dif"","
153783,./TargetProjects/kafka/streams/upgrade-system-tests-26/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,71,,"        ""cnt"","
153784,./TargetProjects/kafka/streams/upgrade-system-tests-26/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,73,,"        ""tagg"""
153785,./TargetProjects/kafka/streams/upgrade-system-tests-26/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,491,,"                            indent(""\t\t"", observedInputEvents.get(key)),"
153786,./TargetProjects/kafka/streams/upgrade-system-tests-27/src/test/java/org/apache/kafka/streams/tests/SmokeTestClient.java,172,,"        source.filterNot((k, v) -> k.equals(""flush""))"
153787,./TargetProjects/kafka/streams/upgrade-system-tests-27/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,64,,"        ""data"","
153788,./TargetProjects/kafka/streams/upgrade-system-tests-27/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,65,,"        ""echo"","
153789,./TargetProjects/kafka/streams/upgrade-system-tests-27/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,66,,"        ""max"","
153790,./TargetProjects/kafka/streams/upgrade-system-tests-27/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,67,,"        ""min"", ""min-suppressed"", ""min-raw"","
153791,./TargetProjects/kafka/streams/upgrade-system-tests-27/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,67,,"        ""min"", ""min-suppressed"", ""min-raw"","
153792,./TargetProjects/kafka/streams/upgrade-system-tests-27/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,68,,"        ""dif"","
153793,./TargetProjects/kafka/streams/upgrade-system-tests-27/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,71,,"        ""cnt"","
153794,./TargetProjects/kafka/streams/upgrade-system-tests-27/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,73,,"        ""tagg"""
153795,./TargetProjects/kafka/streams/upgrade-system-tests-27/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java,491,,"                            indent(""\t\t"", observedInputEvents.get(key)),"
153796,./TargetProjects/kafka/tools/src/main/java/org/apache/kafka/tools/TransactionsCommand.java,256,,"            ""ProducerId"","
153797,./TargetProjects/kafka/tools/src/test/java/org/apache/kafka/tools/ProducerPerformanceTest.java,98,,"            ""--throughput"", ""100"", "
153798,./TargetProjects/kafka/tools/src/test/java/org/apache/kafka/tools/PushHttpMetricsReporterTest.java,214,,"            new MetricName(""name4"", ""group4"", ""desc4"", Collections.singletonMap(""key4"", ""value4"")),"
153799,./TargetProjects/kafka/tools/src/test/java/org/apache/kafka/tools/PushHttpMetricsReporterTest.java,238,,"        metricsList.sort((m1, m2) -> m1.get(""name"").textValue().compareTo(m2.get(""name"").textValue()));"
153800,./TargetProjects/kafka/tools/src/test/java/org/apache/kafka/tools/TransactionsCommandTest.java,100,,"            ""--bootstrap-server"","
153801,./TargetProjects/kafka/tools/src/test/java/org/apache/kafka/tools/TransactionsCommandTest.java,101,,"            ""localhost:9092"","
153802,./TargetProjects/kafka/tools/src/test/java/org/apache/kafka/tools/TransactionsCommandTest.java,102,,"            ""describe-producers"","
153803,./TargetProjects/kafka/tools/src/test/java/org/apache/kafka/tools/TransactionsCommandTest.java,103,,"            ""--partition"","
153804,./TargetProjects/kafka/tools/src/test/java/org/apache/kafka/tools/TransactionsCommandTest.java,114,,"            ""--topic"","
153805,./TargetProjects/kafka/tools/src/test/java/org/apache/kafka/tools/TransactionsCommandTest.java,115,,"            ""foo"""
153806,./TargetProjects/kafka/tools/src/test/java/org/apache/kafka/tools/TransactionsCommandTest.java,148,,"            ""--broker-id"","
153807,./TargetProjects/kafka/tools/src/test/java/org/apache/kafka/tools/TransactionsCommandTest.java,183,,"            asList(""12345"", ""15"", ""20"", ""1300"", ""1599509565"", ""990""),"
153808,./TargetProjects/kafka/tools/src/test/java/org/apache/kafka/tools/TransactionsCommandTest.java,200,,"            new TransactionListing(""bar"", 98765L, TransactionState.PREPARE_ABORT)"
153809,./TargetProjects/kafka/tools/src/test/java/org/apache/kafka/tools/TransactionsCommandTest.java,296,,"            ""abort"","
153810,./TargetProjects/kafka/tools/src/test/java/org/apache/kafka/tools/TransactionsCommandTest.java,452,,"            ""find-hanging"""
153811,./TargetProjects/kafka/tools/src/test/java/org/apache/kafka/tools/TransactionsCommandTest.java,562,,"        Node node0 = new Node(0, ""localhost"", 9092);"
153812,./TargetProjects/kafka/trogdor/src/main/java/org/apache/kafka/trogdor/agent/AgentClient.java,158,,"        uriBuilder.queryParam(""workerId"", request.workerId());"
153813,./TargetProjects/kafka/trogdor/src/main/java/org/apache/kafka/trogdor/coordinator/CoordinatorClient.java,140,,"            JsonRestServer.<CoordinatorStatusResponse>httpRequest(url(""/coordinator/status""), ""GET"","
153814,./TargetProjects/kafka/trogdor/src/main/java/org/apache/kafka/trogdor/coordinator/CoordinatorClient.java,168,,"        uriBuilder.queryParam(""taskId"", request.id());"
153815,./TargetProjects/kafka/trogdor/src/main/java/org/apache/kafka/trogdor/coordinator/CoordinatorClient.java,218,,"            .dest(""json"")"
153816,./TargetProjects/kafka/trogdor/src/main/java/org/apache/kafka/trogdor/coordinator/CoordinatorClient.java,241,,"        showTaskParser.addArgument(""--id"", ""-i"")"
153817,./TargetProjects/kafka/trogdor/src/main/java/org/apache/kafka/trogdor/coordinator/CoordinatorClient.java,246,,"            .metavar(""TASK_ID"")"
153818,./TargetProjects/kafka/trogdor/src/main/java/org/apache/kafka/trogdor/coordinator/CoordinatorClient.java,273,,"            .dest(""taskIdPattern"")"
153819,./TargetProjects/kafka/trogdor/src/test/java/org/apache/kafka/trogdor/agent/AgentTest.java,78,,"        nodes.put(""node01"", new BasicNode(""node01"", ""localhost"","
153820,./TargetProjects/kafka/trogdor/src/test/java/org/apache/kafka/trogdor/agent/AgentTest.java,78,,"        nodes.put(""node01"", new BasicNode(""node01"", ""localhost"","
153821,./TargetProjects/kafka/trogdor/src/test/java/org/apache/kafka/trogdor/agent/AgentTest.java,147,,"        client.createWorker(new CreateWorkerRequest(0, ""foo"", fooSpec));"
153822,./TargetProjects/kafka/trogdor/src/test/java/org/apache/kafka/trogdor/agent/AgentTest.java,189,,"                workerState(new WorkerRunning(""foo"", fooSpec, 0, new TextNode(""active"")))."
153823,./TargetProjects/kafka/trogdor/src/test/java/org/apache/kafka/trogdor/agent/AgentTest.java,194,,"        client.createWorker(new CreateWorkerRequest(1, ""bar"", barSpec));"
153824,./TargetProjects/kafka/trogdor/src/test/java/org/apache/kafka/trogdor/agent/AgentTest.java,214,,"        client.createWorker(new CreateWorkerRequest(2, ""baz"", bazSpec));"
153825,./TargetProjects/kafka/trogdor/src/test/java/org/apache/kafka/trogdor/agent/AgentTest.java,270,,"                workerState(new WorkerDone(""foo"", fooSpec, fooSpecStartTimeMs, fooSpecStartTimeMs + 2, new TextNode(""done""), """"))."
153826,./TargetProjects/kafka/trogdor/src/test/java/org/apache/kafka/trogdor/common/WorkerUtilsTest.java,216,,"        props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, ""localhost:9092"");"
153827,./TargetProjects/kafka/trogdor/src/test/java/org/apache/kafka/trogdor/common/WorkerUtilsTest.java,222,,"        resultProps.put(ProducerConfig.LINGER_MS_CONFIG, ""1000"");"
153828,./TargetProjects/kafka/trogdor/src/test/java/org/apache/kafka/trogdor/coordinator/CoordinatorTest.java,81,,"                addCoordinator(""node01"")."
153829,./TargetProjects/kafka/trogdor/src/test/java/org/apache/kafka/trogdor/coordinator/CoordinatorTest.java,110,,"                addAgent(""node02"")."
153830,./TargetProjects/kafka/trogdor/src/test/java/org/apache/kafka/trogdor/coordinator/CoordinatorTest.java,117,,"                new CreateTaskRequest(""foo"", fooSpec));"
153831,./TargetProjects/kafka/trogdor/src/test/java/org/apache/kafka/trogdor/coordinator/CoordinatorTest.java,137,,"                    taskState(new TaskRunning(fooSpec, 2, new TextNode(""active"")))."
153832,./TargetProjects/kafka/trogdor/src/test/java/org/apache/kafka/trogdor/coordinator/CoordinatorTest.java,146,,"                    taskState(new TaskDone(fooSpec, 2, 5, """", false, new TextNode(""done"")))."
153833,./TargetProjects/kafka/trogdor/src/test/java/org/apache/kafka/trogdor/coordinator/CoordinatorTest.java,296,,"            coordinatorClient.createTask(new CreateTaskRequest(""bar"", barSpec));"
153834,./TargetProjects/kafka/trogdor/src/test/java/org/apache/kafka/trogdor/coordinator/CoordinatorTest.java,386,,"                addAgent(""node03"")."
153835,./TargetProjects/kafka/trogdor/src/test/java/org/apache/kafka/trogdor/coordinator/CoordinatorTest.java,407,,"            addLine(""sudo iptables "" + prefix + "" INPUT -p tcp -s 127.0.0.1 -j DROP "" +"
153836,./TargetProjects/kafka/trogdor/src/test/java/org/apache/kafka/trogdor/coordinator/CoordinatorTest.java,407,,"            addLine(""sudo iptables "" + prefix + "" INPUT -p tcp -s 127.0.0.1 -j DROP "" +"
153837,./TargetProjects/kafka/trogdor/src/test/java/org/apache/kafka/trogdor/coordinator/CoordinatorTest.java,425,,"        assertTrue(req1.matches(""foo1"", -1, -1, TaskStateType.PENDING));"
153838,./TargetProjects/kafka/trogdor/src/test/java/org/apache/kafka/trogdor/coordinator/CoordinatorTest.java,426,,"        assertTrue(req1.matches(""bar1"", 100, 200, TaskStateType.DONE));"
153839,./TargetProjects/kafka/trogdor/src/test/java/org/apache/kafka/trogdor/coordinator/CoordinatorTest.java,427,,"        assertTrue(req1.matches(""baz1"", 100, -1, TaskStateType.RUNNING));"
153840,./TargetProjects/kafka/trogdor/src/test/java/org/apache/kafka/trogdor/coordinator/CoordinatorTest.java,586,,"            coordinatorClient.createTask(new CreateTaskRequest(""fooSpec"", fooSpec));"
153841,./TargetProjects/kafka/trogdor/src/test/java/org/apache/kafka/trogdor/coordinator/CoordinatorTest.java,691,,"            status2.set(""node02"", new TextNode(""halted""));"
153842,./TargetProjects/kafka/trogdor/src/test/java/org/apache/kafka/trogdor/workload/ConsumeBenchSpecTest.java,40,,"        Map<String, List<TopicPartition>> materializedTopics = consumeBenchSpec(Arrays.asList(""topic[1-3]"", ""secondTopic"")).materializeTopics();"
153843,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/ArchiveUpdater.java,75,,"            throw new KalumetException( ""Environment "" + environmentName + "" is not found in the configuration"" );"
153844,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/ArchiveUpdater.java,96,,"                ""Archive "" + archiveName + "" is not found in JEE application "" + applicationName );"
153845,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/ArchiveUpdater.java,104,,"        EventUtils.post( environment, ""UPDATE"", ""Archive "" + archiveName + "" update requested by WS"" );"
153846,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/ArchiveUpdater.java,128,,"                updateLog.setStatus( ""Archive "" + archiveName + "" update failed"" );"
153847,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/ArchiveUpdater.java,139,,"        EventUtils.post( environment, ""UPDATE"", ""Archive "" + archive.getName() + "" updated"" );"
153848,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/ArchiveUpdater.java,151,,"            updateLog.addUpdateMessage( new UpdateMessage( ""info"", ""Archive "" + archive.getName() + "" updated"" ) );"
153849,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/ArchiveUpdater.java,305,,"                    updateLog.addUpdateMessage( new UpdateMessage( ""info"", ""Deploying archive "" + archive.getName() ) );"
153850,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/ConfigurationFileUpdater.java,68,,"            new UpdateMessage( ""info"", ""Updating configuration file "" + configurationFile.getName() ) );"
153851,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/ConfigurationFileUpdater.java,69,,"        EventUtils.post( environment, ""UPDATE"", ""Updating configuration file "" + configurationFile.getName() );"
153852,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/ConfigurationFileUpdater.java,74,,"            updateLog.addUpdateMessage( new UpdateMessage( ""info"", ""Configuration file "" + configurationFile.getName()"
153853,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/ConfigurationFileUpdater.java,98,,"                    ""Agent "" + configurationFile.getAgent() + "" is not found in the configuration"" );"
153854,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/ConfigurationFileUpdater.java,197,,"                    new UpdateMessage( ""info"", ""Configuration file "" + configurationFile.getName() + "" updated"" ) );"
153855,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/ContentManagerUpdater.java,68,,"            new UpdateMessage( ""info"", ""Updating content manager "" + contentManager.getName() ) );"
153856,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/ContentManagerUpdater.java,69,,"        EventUtils.post( environment, ""UPDATE"", ""Updating content manager "" + contentManager.getName() );"
153857,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/ContentManagerUpdater.java,75,,"            updateLog.addUpdateMessage( new UpdateMessage( ""info"", ""Content manager "" + contentManager.getName()"
153858,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/ContentManagerUpdater.java,114,,"                throw new UpdateException( ""Content manager "" + contentManager.getName() + "" update failed"","
153859,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/ContentManagerUpdater.java,143,,"                new UpdateMessage( ""info"", ""Content manager "" + contentManager.getName() + "" updated"" ) );"
153860,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/DatabaseUpdater.java,64,,"        updateLog.addUpdateMessage( new UpdateMessage( ""info"", ""Updating database "" + database.getName() ) );"
153861,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/DatabaseUpdater.java,65,,"        EventUtils.post( environment, ""UPDATE"", ""Updating database "" + database.getName() );"
153862,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/DatabaseUpdater.java,72,,"                new UpdateMessage( ""info"", ""Database "" + database.getName() + "" is inactive, so not updated"" ) );"
153863,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/DatabaseUpdater.java,125,,"                    updateLog.addUpdateMessage( new UpdateMessage( ""error"", ""SQL script "" + sqlScript.getName()"
153864,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/DatabaseUpdater.java,126,,"                        + "" execution failed: "" + updateException.getMessage() ) );"
153865,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/DatabaseUpdater.java,150,,"        updateLog.addUpdateMessage( new UpdateMessage( ""info"", ""Database "" + database.getName() + "" updated"" ) );"
153866,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/EnvironmentUpdater.java,62,,"            throw new KalumetException( ""Environment "" + name + "" is not found in the configuration"" );"
153867,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/EnvironmentUpdater.java,108,,"            EventUtils.post( environment, ""ERROR"", ""Can't load configuration: "" + e.getMessage() );"
153868,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/EnvironmentUpdater.java,158,,"                        LOGGER.error( ""Software {} update failed"", software.getName() );"
153869,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/EnvironmentUpdater.java,160,,"                                         ""Software "" + software.getName() + "" update failed: "" + e.getMessage() );"
153870,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/EnvironmentUpdater.java,160,,"                                         ""Software "" + software.getName() + "" update failed: "" + e.getMessage() );"
153871,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/EnvironmentUpdater.java,161,,"                        updateLog.addUpdateMessage( new UpdateMessage( ""error"", ""Software "" + software.getName()"
153872,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/EnvironmentUpdater.java,163,,"                        updateLog.setStatus( ""Environment "" + environment.getName() + "" update failed"" );"
153873,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/EnvironmentUpdater.java,172,,"                        updateLog.addUpdateMessage( new UpdateMessage( ""info"", ""Software "" + software.getName()"
153874,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/EnvironmentUpdater.java,173,,"                            + "" is not an update blocker, update continues"" ) );"
153875,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/EnvironmentUpdater.java,199,,"                                         ""JEE application server "" + jeeApplicationServer.getName() + "" update failed: """
153876,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JDBCConnectionPoolUpdater.java,60,,"            new UpdateMessage( ""info"", ""Updating JDBC connection pool "" + connectionPool.getName() ) );"
153877,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JDBCConnectionPoolUpdater.java,61,,"        EventUtils.post( environment, ""UPDATE"", ""Updating JDBC connection pool "" + connectionPool.getName() );"
153878,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JDBCConnectionPoolUpdater.java,66,,"            updateLog.addUpdateMessage( new UpdateMessage( ""info"", ""JDBC connection pool "" + connectionPool.getName()"
153879,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JDBCConnectionPoolUpdater.java,98,,"                        new UpdateMessage( ""info"", ""JDBC connection pool "" + connectionPool.getName() + "" updated"" ) );"
153880,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JDBCDataSourceUpdater.java,60,,"        updateLog.addUpdateMessage( new UpdateMessage( ""info"", ""Updating JDBC data source "" + dataSource.getName() ) );"
153881,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JDBCDataSourceUpdater.java,61,,"        EventUtils.post( environment, ""UPDATE"", ""Updating JDBC data source "" + dataSource.getName() );"
153882,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JDBCDataSourceUpdater.java,67,,"            updateLog.addUpdateMessage( new UpdateMessage( ""info"", ""JDBC data source "" + dataSource.getName()"
153883,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JDBCDataSourceUpdater.java,112,,"                        new UpdateMessage( ""info"", ""JDBC data source "" + dataSource.getName() + "" updated"" ) );"
153884,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationServerUpdater.java,79,,"            LOGGER.error( ""Environment {} is not found in the configuration"", environmentName );"
153885,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationServerUpdater.java,80,,"            throw new KalumetException( ""Environment "" + environmentName + "" is not found in the configuration"" );"
153886,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationServerUpdater.java,80,,"            throw new KalumetException( ""Environment "" + environmentName + "" is not found in the configuration"" );"
153887,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationServerUpdater.java,86,,"            LOGGER.error( ""JEE application server {} is not found in environment {}"", serverName, environmentName );"
153888,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationServerUpdater.java,88,,"                ""JEE application server "" + serverName + "" is not found in environment "" + environmentName );"
153889,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationServerUpdater.java,88,,"                ""JEE application server "" + serverName + "" is not found in environment "" + environmentName );"
153890,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationServerUpdater.java,94,,"        EventUtils.post( environment, ""UPDATE"", ""JEE application server "" + serverName + "" update requested by WS"" );"
153891,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationServerUpdater.java,117,,"            EventUtils.post( environment, ""ERROR"","
153892,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationServerUpdater.java,118,,"                             ""JEE application server "" + serverName + "" update failed: "" + e.getMessage() );"
153893,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationServerUpdater.java,122,,"                updateLog.setStatus( ""JEE application server "" + serverName + "" update failed"" );"
153894,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationServerUpdater.java,123,,"                updateLog.addUpdateMessage( new UpdateMessage( ""error"", ""JEE application server "" + serverName"
153895,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationServerUpdater.java,145,,"            updateLog.addUpdateMessage( new UpdateMessage( ""info"", ""Update completed"" ) );"
153896,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationServerUpdater.java,235,,"                                                                   ""JDBC connection pool "" + connectionPool.getName()"
153897,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationServerUpdater.java,248,,"                    updateLog.addUpdateMessage( new UpdateMessage( ""warn"","
153898,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationServerUpdater.java,254,,"                                                                       + "" is not update blocker, update continues"" ) );"
153899,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationServerUpdater.java,255,,"                    EventUtils.post( environment, ""WARN"","
153900,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationServerUpdater.java,280,,"                    updateLog.addUpdateMessage( new UpdateMessage( ""error"", ""JDBC data source "" + dataSource.getName()"
153901,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationServerUpdater.java,323,,"                    updateLog.addUpdateMessage( new UpdateMessage( ""error"", ""JMS connection factory """
153902,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationServerUpdater.java,366,,"                    updateLog.addUpdateMessage( new UpdateMessage( ""error"", ""JMS server "" + jmsServer.getName()"
153903,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationServerUpdater.java,405,,"                    updateLog.addUpdateMessage( new UpdateMessage( ""error"", ""JNDI binding "" + jndiBinding.getName()"
153904,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationServerUpdater.java,445,,"                    updateLog.addUpdateMessage( new UpdateMessage( ""error"", ""Shared library "" + sharedLibrary.getName()"
153905,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationServerUpdater.java,486,,"                    updateLog.addUpdateMessage( new UpdateMessage( ""error"", ""JEE application "" + application.getName()"
153906,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationServerUpdater.java,525,,"                    + "" shutdown failed: "" + updateException.getMessage() ) );"
153907,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationServerUpdater.java,564,,"                    + "" cache directories cleanup failed: "" + updateException.getMessage() ) );"
153908,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationServerUpdater.java,603,,"                    + "" start failed: "" + updateException.getMessage() ) );"
153909,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationServerUpdater.java,664,,"                EventUtils.post( environment, ""UPDATE"", ""JEE server "" + server.getName() + "" shutdown completed"" );"
153910,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationServerUpdater.java,680,,"            LOGGER.error( ""JEE application server "" + server.getName() + "" shutdown failed"", exception );"
153911,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationServerUpdater.java,892,,"        EventUtils.post( environment, ""INFO"", ""JEE application server "" + serverName + "" start requested by WS"" );"
153912,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationServerUpdater.java,918,,"            LOGGER.error( ""Can't load configuration"", e );"
153913,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationUpdater.java,72,,"        updateLog.addUpdateMessage( new UpdateMessage( ""info"", ""Updating JEE application "" + application.getName() ) );"
153914,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationUpdater.java,74,,"            new UpdateMessage( ""summary"", ""JEE application "" + application.getName() + "" located "" + applicationUri ) );"
153915,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationUpdater.java,75,,"        EventUtils.post( environment, ""UPDATE"", ""Updating JEE application "" + application.getName() );"
153916,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationUpdater.java,115,,"                throw new UpdateException( ""JEE application "" + application.getName() + "" update failed"","
153917,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationUpdater.java,151,,"                    updateLog.addUpdateMessage( new UpdateMessage( ""error"","
153918,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationUpdater.java,152,,"                                                                   ""Configuration file "" + configurationFile.getName()"
153919,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationUpdater.java,153,,"                                                                       + "" update failed: """
153920,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationUpdater.java,155,,"                    EventUtils.post( environment, ""ERROR"","
153921,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationUpdater.java,165,,"                    updateLog.addUpdateMessage( new UpdateMessage( ""warn"","
153922,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationUpdater.java,171,,"                                                                       + "" is not update blocker, update continues"" ) );"
153923,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationUpdater.java,172,,"                    EventUtils.post( environment, ""WARN"","
153924,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationUpdater.java,198,,"                                                                   ""Database "" + database.getName() + "" update failed: """
153925,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationUpdater.java,239,,"                                                                   ""Content manager "" + contentManager.getName()"
153926,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationUpdater.java,282,,"                                                                   ""Archive "" + archive.getName() + "" update failed: """
153927,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JEEApplicationUpdater.java,308,,"            new UpdateMessage( ""info"", ""JEE application "" + application.getName() + "" updated"" ) );"
153928,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JMSConnectionFactoryUpdater.java,60,,"            new UpdateMessage( ""info"", ""Updating JMS connection factory "" + jmsConnectionFactory.getName() ) );"
153929,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JMSConnectionFactoryUpdater.java,61,,"        EventUtils.post( environment, ""UPDATE"", ""Updating JMS connection factory "" + jmsConnectionFactory.getName() );"
153930,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JMSConnectionFactoryUpdater.java,67,,"                                                           ""JMS connection factory "" + jmsConnectionFactory.getName()"
153931,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JMSServerUpdater.java,66,,"        updateLog.addUpdateMessage( new UpdateMessage( ""info"", ""Updating JMS server "" + jmsServer.getName() ) );"
153932,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JMSServerUpdater.java,67,,"        EventUtils.post( environment, ""UPDATE"", ""Updating JMS server "" + jmsServer.getName() );"
153933,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JMSServerUpdater.java,73,,"                new UpdateMessage( ""info"", ""JMS server "" + jmsServer.getName() + "" is inactive, so not updated"" ) );"
153934,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JMSServerUpdater.java,117,,"                        new UpdateMessage( ""info"", ""JMS server "" + jmsServer.getName() + "" updated"" ) );"
153935,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JNDIBindingUpdater.java,61,,"        updateLog.addUpdateMessage( new UpdateMessage( ""info"", ""Updating JNDI binding "" + jndiBinding.getName() ) );"
153936,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JNDIBindingUpdater.java,62,,"        EventUtils.post( environment, ""UPDATE"", ""Updating JNDI binding "" + jndiBinding.getName() );"
153937,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JNDIBindingUpdater.java,68,,"                new UpdateMessage( ""info"", ""JNDI binding "" + jndiBinding.getName() + "" is inactive, so not updated"" ) );"
153938,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/JNDIBindingUpdater.java,104,,"                        new UpdateMessage( ""info"", ""JNDI binding "" + jndiBinding.getName() + "" updated"" ) );"
153939,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SharedLibraryUpdater.java,62,,"        updateLog.addUpdateMessage( new UpdateMessage( ""info"", ""Updating shared library "" + sharedLibrary.getName() ) );"
153940,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SharedLibraryUpdater.java,63,,"        EventUtils.post( environment, ""UPDATE"", ""Updating shared library "" + sharedLibrary.getName() );"
153941,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SharedLibraryUpdater.java,68,,"            updateLog.addUpdateMessage( new UpdateMessage( ""info"", ""Shared library "" + sharedLibrary.getName()"
153942,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SharedLibraryUpdater.java,102,,"                        new UpdateMessage( ""info"", ""Shared library "" + sharedLibrary.getName() + "" updated"" ) );"
153943,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,77,,"                new UpdateMessage( ""info"", ""Software "" + software.getName() + "" is inactive, so not updated"" ) );"
153944,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,77,,"                new UpdateMessage( ""info"", ""Software "" + software.getName() + "" is inactive, so not updated"" ) );"
153945,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,77,,"                new UpdateMessage( ""info"", ""Software "" + software.getName() + "" is inactive, so not updated"" ) );"
153946,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,78,,"            EventUtils.post( environment, ""UPDATE"", ""Software "" + software.getName() + "" is inactive, so not updated"" );"
153947,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,87,,"                             ""Delegating software "" + software.getName() + "" update to agent "" + software.getAgent() );"
153948,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,93,,"                LOGGER.error( ""Agent {} is not found in the configuration"", software.getAgent() );"
153949,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,94,,"                throw new UpdateException( ""Agent "" + software.getAgent() + "" is not found in the configuration"" );"
153950,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,94,,"                throw new UpdateException( ""Agent "" + software.getAgent() + "" is not found in the configuration"" );"
153951,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,98,,"                LOGGER.debug( ""Call software WS"" );"
153952,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,105,,"                throw new UpdateException( ""Software "" + software.getName() + "" update failed"", clientException );"
153953,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,132,,"                        LOGGER.error( ""Command {} execution failed"", command.getName(), e );"
153954,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,133,,"                        updateLog.addUpdateMessage( new UpdateMessage( ""error"", ""Command "" + command.getName()"
153955,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,133,,"                        updateLog.addUpdateMessage( new UpdateMessage( ""error"", ""Command "" + command.getName()"
153956,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,134,,"                            + "" execution failed: "" + e.getMessage() ) );"
153957,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,135,,"                        EventUtils.post( environment, ""ERROR"","
153958,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,137,,"                        throw new UpdateException( ""Command "" + command.getName() + "" execution failed"", e );"
153959,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,142,,"                        updateLog.addUpdateMessage( new UpdateMessage( ""warn"", ""Command "" + command.getName()"
153960,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,145,,"                            + "" is not an update blocker, update continues"" ) );"
153961,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,146,,"                        EventUtils.post( environment, ""WARN"","
153962,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,166,,"                        LOGGER.error( ""Location {} update failed"", location.getName(), e );"
153963,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,167,,"                        updateLog.addUpdateMessage( new UpdateMessage( ""error"", ""Location "" + location.getName()"
153964,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,168,,"                            + "" update failed: "" + e.getMessage() ) );"
153965,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,200,,"                        LOGGER.error( ""Configuration file {} update failed"", configurationFile.getName(), e );"
153966,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,201,,"                        updateLog.addUpdateMessage( new UpdateMessage( ""error"", ""Configuration file """
153967,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,237,,"                        LOGGER.error( ""Database {} update failed"", database.getName(), e );"
153968,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,238,,"                        updateLog.addUpdateMessage( new UpdateMessage( ""error"", ""Database "" + database.getName()"
153969,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,279,,"            LOGGER.error( ""Environment {} is not found in the configuration"", environmentName );"
153970,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,280,,"            throw new KalumetException( ""Environment "" + environmentName + "" is not found in the configuration"" );"
153971,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,285,,"            LOGGER.error( ""Software {} is not found in environment {}"", softwareName, environment.getName() );"
153972,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,287,,"                ""Software "" + softwareName + "" is not found in environment "" + environment.getName() );"
153973,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,294,,"        EventUtils.post( environment, ""UPDATE"", ""Software "" + software.getName() + "" update requested by WS"" );"
153974,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,298,,"            LOGGER.info( ""Send a notification and waiting for the count down"" );"
153975,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,326,,"        EventUtils.post( environment, ""UPDATE"", ""Software "" + software.getName() + "" updated"" );"
153976,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,340,,"            LOGGER.info( ""Publishing update report"" );"
153977,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,363,,"            updateLog.addUpdateMessage( new UpdateMessage( ""info"", ""Software "" + software.getName() + "" command """
153978,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,364,,"                + command.getName() + "" is inactive, so not executed"" ) );"
153979,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,417,,"            + command.getName() + "" executed: "" + output ) );"
153980,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,454,,"            throw new KalumetException( ""Command "" + commandName + "" is not found in software "" + softwareName );"
153981,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,551,,"        EventUtils.post( environment, ""UPDATE"", ""Software "" + software.getName() + "" location "" + location.getName()"
153982,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,675,,"            LOGGER.error( ""Can't initialize file manipulator"", fileManipulatorException );"
153983,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,742,,"                         ""Software "" + software.getName() + "" configuration file "" + configurationFile.getName()"
153984,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,877,,"            LOGGER.error( ""Can't initialize software cache directory"", fileManipulatorException );"
153985,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,990,,"        EventUtils.post( environment, ""UPDATE"", ""Software "" + software.getName() + "" database "" + database.getName()"
153986,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,1111,,"                    LOGGER.error( ""SQL script {} execution failed"", updateException );"
153987,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,1112,,"                    throw new UpdateException( ""SQL script "" + sqlScript.getName() + "" execution failed"","
153988,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SoftwareUpdater.java,1314,,"                            new UpdateMessage( ""info"", ""SQL script "" + sqlScript.getName() + "" executed"" ) );"
153989,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SqlScriptUpdater.java,70,,"        updateLog.addUpdateMessage( new UpdateMessage( ""info"", ""Executing SQL script "" + sqlScript.getName() ) );"
153990,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SqlScriptUpdater.java,71,,"        EventUtils.post( environment, ""UPDATE"", ""Executing SQL script "" + sqlScript.getName() );"
153991,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SqlScriptUpdater.java,171,,"                                new UpdateMessage( ""info"", ""SQL script "" + name + "" executed: "" + output ) );"
153992,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SqlScriptUpdater.java,171,,"                                new UpdateMessage( ""info"", ""SQL script "" + name + "" executed: "" + output ) );"
153993,./TargetProjects/kalumet/kalumet-modules/agent/src/main/java/org/apache/kalumet/agent/updater/SqlScriptUpdater.java,220,,"                            new UpdateMessage( ""info"", ""SQL script "" + sqlScript.getName() + "" executed"" ) );"
153994,./TargetProjects/kalumet/kalumet-modules/common/src/main/java/org/apache/kalumet/FileManipulator.java,247,,"                throw new IllegalArgumentException( ""The source URI "" + src + "" is not a file"" );"
153995,./TargetProjects/kalumet/kalumet-modules/common/src/main/java/org/apache/kalumet/model/Kalumet.java,372,,"            digester.addObjectCreate( ""kalumet/properties/property"", ""org.apache.kalumet.model.Property"" );"
153996,./TargetProjects/kalumet/kalumet-modules/common/src/main/java/org/apache/kalumet/model/Kalumet.java,383,,"            digester.addObjectCreate( ""kalumet/security/users/user"", ""org.apache.kalumet.model.User"" );"
153997,./TargetProjects/kalumet/kalumet-modules/common/src/main/java/org/apache/kalumet/model/Kalumet.java,428,,"            digester.addObjectCreate( ""kalumet/environments/environment/freefields/freefield"","
153998,./TargetProjects/kalumet/kalumet-modules/common/src/main/java/org/apache/kalumet/model/Kalumet.java,620,,"                ""org.apache.kalumet.model.ConfigurationFile"" );"
153999,./TargetProjects/kalumet/kalumet-modules/common/src/main/java/org/apache/kalumet/model/Kalumet.java,627,,"                ""org.apache.kalumet.model.Mapping"" );"
