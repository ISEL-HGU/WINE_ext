109000,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/kerberos/KerberosPrincipalTest.java,74,,"        KerberosPrincipal principal = new KerberosPrincipal(""name@apache.org"");"
109001,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/kerberos/KerberosPrincipalTest.java,165,,"            KerberosPrincipal principal = new KerberosPrincipal(""name"");"
109002,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/kerberos/KerberosTicketTest.java,109,,"            fail(""No expected IllegalArgumentException"");"
109003,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/kerberos/KerberosTicketTest.java,405,,"            fail(""No expected IllegalStateException"");"
109004,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/kerberos/KerberosTicketTest.java,464,,"            fail(""No expected RefreshFailedException"");"
109005,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/kerberos/ServicePermissionTest.java,48,,"        ServicePermission sp = new ServicePermission(""krbtgt/AAA.COM@BBB.COM"", ""initiate"");"
109006,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/kerberos/ServicePermissionTest.java,48,,"        ServicePermission sp = new ServicePermission(""krbtgt/AAA.COM@BBB.COM"", ""initiate"");"
109007,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/kerberos/ServicePermissionTest.java,49,,"        ServicePermission sp1 = new ServicePermission(""host/AAA.COM@BBB.COM"", ""accept"");"
109008,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/kerberos/ServicePermissionTest.java,49,,"        ServicePermission sp1 = new ServicePermission(""host/AAA.COM@BBB.COM"", ""accept"");"
109009,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/kerberos/ServicePermissionTest.java,54,,"        ServicePermission sp2 = new ServicePermission(""host/AAA.COM@BBB.COM"", ""accept, initiate"");"
109010,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/kerberos/ServicePermissionTest.java,96,,"        	fail(""Incorrect actions""); "
109011,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/kerberos/ServicePermissionTest.java,178,,"        ServicePermission sp = new ServicePermission(""AAA"", ""accept"");"
109012,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/kerberos/ServicePermissionTest.java,194,,"        pc.add(new ServicePermission(""BBB"", ""accept, initiate""));"
109013,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/login/AppConfigurationEntryTest.java,81,,"            fail(""Expected IllegalArgumentException"");"
109014,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/login/LoginContextTest.java,81,,"        assertTrue(""Requested module"", MyConfig.getLastAppName() == moduleName);"
109015,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/login/LoginContextTest.java,84,,"        assertNull(""Instantiated subject"", context.getSubject());"
109016,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/login/LoginContextTest.java,98,,"            fail(""No expected LoginException"");"
109017,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/login/LoginContextTest.java,119,,"            assertEquals(""Default module"", ""other"", MyConfig.getLastAppName());"
109018,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/login/LoginContextTest.java,119,,"            assertEquals(""Default module"", ""other"", MyConfig.getLastAppName());"
109019,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/login/LoginContextTest.java,135,,"            Security.setProperty(""auth.login.defaultCallbackHandler"","
109020,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/login/LoginContextTest.java,212,,"        MyConfig.addRequired(""MyLoginModule"", options);"
109021,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/login/LoginContextTest.java,222,,"        assertEquals(""Number of modules"", 1, MyLoginModule.list.size());"
109022,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/login/LoginContextTest.java,227,,"        assertNotNull(""Subject"", module.subject);"
109023,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/login/LoginContextTest.java,228,,"        assertTrue(""getSubject"", module.subject == context.getSubject());"
109024,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/login/LoginContextTest.java,234,,"        assertNotNull(""Shared state"", module.sharedState);"
109025,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/login/LoginContextTest.java,237,,"        assertTrue(""Option references"", module.options != options);"
109026,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/auth/login/LoginContextTest.java,238,,"        assertEquals(""Option objects"", module.options, options);"
109027,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/sasl/AuthenticationExceptionTest.java,58,,"        assertNull(""getCause() must return null"", tE.getCause());"
109028,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/sasl/RealmCallbackTest.java,88,,"                assertNull(""Not null text"", rCB.getText());"
109029,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/sasl/RealmChoiceCallbackTest.java,69,,"            new RealmChoiceCallback(""prompt"", null, 0, true);"
109030,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/sasl/RealmChoiceCallbackTest.java,139,,"                assertEquals(""Incorrect index length"", ind.length, 1);"
109031,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/sasl/Sasl2Test.java,92,,"                (new SpiEngUtils()).new MyProvider(""MySaslClientProvider1"","
109032,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/sasl/Sasl2Test.java,93,,"                        ""Testing provider SaslClientFactory - 1"", CLNTSRV"
109033,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/sasl/Sasl2Test.java,108,,"        assertNotNull(""List of SaslClientFactories should not be null"", en);"
109034,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/sasl/Sasl2Test.java,109,,"        assertTrue(""List of SaslClientFactories should have elements"", en"
109035,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/sasl/Sasl2Test.java,118,,"                assertNull(""Incorect SaslClient"", f.createSaslClient(null,"
109036,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/sasl/Sasl2Test.java,121,,"                assertEquals(""Wrong length"", mech00.length, mech01.length);"
109037,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/sasl/Sasl2Test.java,123,,"                    assertEquals(""Wrong mechanism name"", mech00[i], mech01[i]);"
109038,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/sasl/Sasl2Test.java,127,,"        assertEquals(""Incorrect number of enumeration elements"", l,"
109039,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/sasl/Sasl2Test.java,224,,"                    fail(""SaslException should be thrown"");"
109040,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/sasl/Sasl2Test.java,296,,"                (new SpiEngUtils()).new MyProvider(""MySaslServerProvider1"","
109041,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/sasl/Sasl2Test.java,297,,"                        ""Testing provider SaslServerFactory - 1"", SRVSSRV"
109042,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/sasl/Sasl2Test.java,320,,"        assertNotNull(""List of SaslServerFactories should not be null"", en);"
109043,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/sasl/Sasl2Test.java,321,,"        assertTrue(""List of SaslServerFactories should have elements"", en"
109044,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/sasl/Sasl2Test.java,390,,"                assertNull(""Incorect SaslServer"", f.createSaslServer(null,"
109045,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/sasl/Sasl3Test.java,107,,"                (new SpiEngUtils()).new MyProvider(""MySaslClientProvider1"","
109046,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/sasl/Sasl3Test.java,108,,"                        ""Testing provider SaslClientFactory - 1"", CLNTSRV"
109047,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/sasl/Sasl3Test.java,109,,"                                .concat(""NAME-1""), fClientClass),"
109048,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/sasl/Sasl3Test.java,112,,"                                .concat(""NAME-2""), fClientClass) };"
109049,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/sasl/Sasl3Test.java,122,,"            Sasl.createSaslClient(new String[] { ""NAME-2"" }, null, ""protocol"","
109050,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/sasl/Sasl3Test.java,187,,"            fail(""SaslException sould be thrown"");"
109051,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/sasl/Sasl4Test.java,105,,"                (new SpiEngUtils()).new MyProvider(""MySaslServerProvider1"","
109052,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/sasl/Sasl4Test.java,106,,"                        ""Testing provider SaslServerFactory - 1"", SRVSSRV"
109053,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/sasl/Sasl4Test.java,107,,"                                .concat(""MECH-1""), fServerClass),"
109054,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/sasl/Sasl4Test.java,110,,"                                .concat(""MECH-2""), fServerClass) };"
109055,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/sasl/Sasl4Test.java,120,,"            Sasl.createSaslServer(""MECH-2"", ""protocol"", null, null, cbH);"
109056,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/sasl/Sasl4Test.java,184,,"            fail(""SaslException sould be thrown"");"
109057,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/javax/security/sasl/SaslExceptionTest.java,56,,"        assertNull(""getCause() must return null"", tE.getCause());"
109058,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/jgss/kerberos/KerberosNameTest.java,32,,"		KerberosName kerberosName = new KerberosName(""service@localhost"", GSSName.NT_HOSTBASED_SERVICE);"
109059,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/jgss/kerberos/KerberosNameTest.java,44,,"		another = new KerberosName(""service/localhost"", GSSName.NT_HOSTBASED_SERVICE);"
109060,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/login/DefaultConfigParserTest.java,175,,"		InvalidFormatException ife = new InvalidFormatException(""message"");"
109061,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/login/DefaultConfigurationTest.java,84,,"            m.put(""debug1"", ""true"");"
109062,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/module/JndiLoginModuleTest.java,105,,"            fail(""Login shouldn't fail"");"
109063,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/module/JndiLoginModuleTest.java,191,,"        options.put(""debug"", ""true"");"
109064,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/module/JndiLoginModuleTest.java,194,,"        status.put(""javax.security.auth.login.name"", ""leo"");"
109065,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/module/JndiLoginModuleTest.java,194,,"        status.put(""javax.security.auth.login.name"", ""leo"");"
109066,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/module/JndiLoginModuleTest.java,195,,"        status.put(""javax.security.auth.login.password"", ""faultPass"""
109067,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/module/KeyStoreLoginModuleTest.java,63,,"        options.remove(""keyStorePasswordURL"");"
109068,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/apache/harmony/auth/tests/module/LoginModuleUtilsTest.java,33,,"        final String PASSWORD_AS_STRING = ""TESTPASSWORD"";"
109069,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/ietf/jgss/GSSExceptionTest.java,41,,"        GSSException gssException= new GSSException(GSSException.BAD_NAME, GSSException.BAD_NAME, ""Bad day today"");"
109070,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/ietf/jgss/GSSExceptionTest.java,78,,"        gssException.setMinor(GSSException.BAD_NAME, ""Unclear reason"");"
109071,./TargetProjects/harmony-classlib/modules/auth/src/test/java/common/org/ietf/jgss/MessagePropTest.java,90,,"        mp.setSupplementaryStates(true, false, false, false, 1, ""minor string"");"
109072,./TargetProjects/harmony-classlib/modules/awt/src/main/java/common/java/awt/AWTKeyStroke.java,203,,"            throw new IllegalArgumentException(Messages.getString(""awt.66"")); //$NON-NLS-1$"
109073,./TargetProjects/harmony-classlib/modules/awt/src/main/java/common/java/awt/Font.java,409,,"    @SuppressWarnings(""unchecked"")"
109074,./TargetProjects/harmony-classlib/modules/awt/src/main/java/common/java/awt/Font.java,621,,"            throw new NullPointerException(Messages.getString(""awt.00"")); //$NON-NLS-1$"
109075,./TargetProjects/harmony-classlib/modules/awt/src/main/java/common/java/awt/GridBagConstraints.java,113,,"            throw new IllegalArgumentException(Messages.getString(""awt.9C"", ""gridx"")); //$NON-NLS-1$ //$NON-NLS-2$"
109076,./TargetProjects/harmony-classlib/modules/awt/src/main/java/common/java/awt/GridBagLayout.java,748,,"                    throw new RuntimeException(Messages.getString(""awt.8E"")); //$NON-NLS-1$"
109077,./TargetProjects/harmony-classlib/modules/awt/src/main/java/common/java/awt/color/ICC_ProfileStub.java,52,,"        throw new UnsupportedOperationException(""Stub cannot perform this operation""); //$NON-NLS-1$"
109078,./TargetProjects/harmony-classlib/modules/awt/src/main/java/common/java/awt/datatransfer/DataFlavor.java,62,,"            ""application/x-java-serialized-object""; //$NON-NLS-1$"
109079,./TargetProjects/harmony-classlib/modules/awt/src/main/java/common/java/awt/datatransfer/DataFlavor.java,146,,"        mimeInfo.addParameter(""class"", representationClass.getName()); //$NON-NLS-1$"
109080,./TargetProjects/harmony-classlib/modules/awt/src/main/java/common/java/awt/font/TextLayout.java,75,,"            throw new IllegalArgumentException(Messages.getString(""awt.01"", ""string"")); //$NON-NLS-1$ //$NON-NLS-2$"
109081,./TargetProjects/harmony-classlib/modules/awt/src/main/java/common/java/awt/font/TextLayout.java,75,,"            throw new IllegalArgumentException(Messages.getString(""awt.01"", ""string"")); //$NON-NLS-1$ //$NON-NLS-2$"
109082,./TargetProjects/harmony-classlib/modules/awt/src/main/java/common/java/awt/image/BandedSampleModel.java,214,,"            throw new ArrayIndexOutOfBoundsException(Messages.getString(""awt.63"")); //$NON-NLS-1$"
109083,./TargetProjects/harmony-classlib/modules/awt/src/main/java/common/java/awt/image/ColorModel.java,66,,"            throw new NullPointerException(Messages.getString(""awt.26C"")); //$NON-NLS-1$"
109084,./TargetProjects/harmony-classlib/modules/awt/src/main/java/common/java/awt/image/ColorModel.java,143,,"        throw new UnsupportedOperationException(""This method is not "" + //$NON-NLS-1$"
109085,./TargetProjects/harmony-classlib/modules/awt/src/main/java/common/java/awt/image/ColorModel.java,144,,"                ""supported by this ColorModel""); //$NON-NLS-1$"
109086,./TargetProjects/harmony-classlib/modules/awt/src/main/java/common/java/awt/image/ComponentColorModel.java,211,,"            throw new IllegalArgumentException(Messages.getString(""awt.213"")); //$NON-NLS-1$"
109087,./TargetProjects/harmony-classlib/modules/awt/src/main/java/common/java/awt/image/ComponentColorModel.java,1014,,"            throw new IllegalArgumentException(Messages.getString(""awt.212"")); //$NON-NLS-1$"
109088,./TargetProjects/harmony-classlib/modules/awt/src/main/java/common/java/awt/image/ComponentSampleModel.java,110,,"            throw new ArrayIndexOutOfBoundsException(Messages.getString(""awt.63"")); //$NON-NLS-1$"
109089,./TargetProjects/harmony-classlib/modules/awt/src/main/java/common/java/awt/image/DirectColorModel.java,125,,"            throw new UnsupportedOperationException(Messages.getString(""awt.214"")); //$NON-NLS-1$"
109090,./TargetProjects/harmony-classlib/modules/awt/src/main/java/common/java/awt/image/IndexColorModel.java,62,,"            throw new IllegalArgumentException(Messages.getString(""awt.264"")); //$NON-NLS-1$"
109091,./TargetProjects/harmony-classlib/modules/awt/src/main/java/common/java/awt/image/MultiPixelPackedSampleModel.java,84,,"            throw new ArrayIndexOutOfBoundsException(Messages.getString(""awt.63"")); //$NON-NLS-1$"
109092,./TargetProjects/harmony-classlib/modules/awt/src/main/java/common/java/awt/image/Raster.java,59,,"            throw new RasterFormatException(Messages.getString(""awt.22E"")); //$NON-NLS-1$"
109093,./TargetProjects/harmony-classlib/modules/awt/src/main/java/common/java/awt/image/Raster.java,69,,"            throw new RasterFormatException(Messages.getString(""awt.276"")); //$NON-NLS-1$"
109094,./TargetProjects/harmony-classlib/modules/awt/src/main/java/common/java/awt/image/Raster.java,79,,"            throw new NullPointerException(Messages.getString(""awt.278"")); //$NON-NLS-1$"
109095,./TargetProjects/harmony-classlib/modules/awt/src/main/java/common/java/awt/image/Raster.java,88,,"            throw new IllegalArgumentException(Messages.getString(""awt.230"")); //$NON-NLS-1$"
109096,./TargetProjects/harmony-classlib/modules/awt/src/main/java/common/java/awt/image/SampleModel.java,266,,"            throw new ArrayIndexOutOfBoundsException(Messages.getString(""awt.63"")); //$NON-NLS-1$"
109097,./TargetProjects/harmony-classlib/modules/awt/src/main/java/common/java/awt/image/SinglePixelPackedSampleModel.java,101,,"            throw new ArrayIndexOutOfBoundsException(Messages.getString(""awt.63"")); //$NON-NLS-1$"
109098,./TargetProjects/harmony-classlib/modules/awt/src/main/java/common/java/awt/print/Book.java,41,,"                        ""awt.01"", ""painter"")); //$NON-NLS-1$ //$NON-NLS-2$"
109099,./TargetProjects/harmony-classlib/modules/awt/src/main/java/common/org/apache/harmony/awt/datatransfer/DataProxy.java,141,,"            throw new IOException(Messages.getString(""awt.4F"")); //$NON-NLS-1$"
109100,./TargetProjects/harmony-classlib/modules/awt/src/main/java/common/org/apache/harmony/awt/gl/font/CommonGlyphVector.java,319,,"            throw new IndexOutOfBoundsException(Messages.getString(""awt.43"")); //$NON-NLS-1$"
109101,./TargetProjects/harmony-classlib/modules/awt/src/main/java/common/org/apache/harmony/awt/gl/font/CommonGlyphVector.java,605,,"            throw new IndexOutOfBoundsException(Messages.getString(""awt.44"")); //$NON-NLS-1$"
109102,./TargetProjects/harmony-classlib/modules/awt/src/main/java/common/org/apache/harmony/awt/gl/font/CommonGlyphVector.java,610,,"            throw new IllegalArgumentException(Messages.getString(""awt.45"")); //$NON-NLS-1$"
109103,./TargetProjects/harmony-classlib/modules/awt/src/main/java/common/org/apache/harmony/awt/gl/image/PngDecoder.java,148,,"                    throw new IllegalArgumentException(Messages.getString(""awt.3C"")); //$NON-NLS-1$"
109104,./TargetProjects/harmony-classlib/modules/awt/src/main/java/common/org/apache/harmony/awt/nativebridge/Int16Pointer.java,111,,"            throw new UnsupportedOperationException(""not implemented""); //$NON-NLS-1$"
109105,./TargetProjects/harmony-classlib/modules/awt/src/main/java/common/org/apache/harmony/awt/nativebridge/PointerPointer.java,90,,"        throw new UnsupportedOperationException(""Not implemented""); //$NON-NLS-1$"
109106,./TargetProjects/harmony-classlib/modules/awt/src/main/java/unix/org/apache/harmony/awt/gl/font/LinuxFontManager.java,109,,"                    String property = FONT_MAPPING_KEYS[0].replaceAll(""LogicalFontName"", lName).replaceAll(""StyleName"", styleName).replaceAll(""ComponentIndex"", String.valueOf(numComp)); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$"
109107,./TargetProjects/harmony-classlib/modules/awt/src/main/java/unix/org/apache/harmony/awt/gl/font/LinuxFontManager.java,109,,"                    String property = FONT_MAPPING_KEYS[0].replaceAll(""LogicalFontName"", lName).replaceAll(""StyleName"", styleName).replaceAll(""ComponentIndex"", String.valueOf(numComp)); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$"
109108,./TargetProjects/harmony-classlib/modules/awt/src/main/java/windows/org/apache/harmony/awt/gl/font/WinFontManager.java,99,,"                    String property = FONT_MAPPING_KEYS[0].replaceAll(""LogicalFontName"", element).replaceAll(""StyleName"", STYLE_NAMES[j]).replaceAll(""ComponentIndex"", String.valueOf(numComp)); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$"
109109,./TargetProjects/harmony-classlib/modules/awt/src/main/java/windows/org/apache/harmony/awt/gl/font/WinFontManager.java,99,,"                    String property = FONT_MAPPING_KEYS[0].replaceAll(""LogicalFontName"", element).replaceAll(""StyleName"", STYLE_NAMES[j]).replaceAll(""ComponentIndex"", String.valueOf(numComp)); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$"
109110,./TargetProjects/harmony-classlib/modules/awt/src/main/java/windows/org/apache/harmony/awt/gl/windows/GDIPTextRenderer.java,59,,"    @SuppressWarnings(""deprecation"")"
109111,./TargetProjects/harmony-classlib/modules/awt/src/main/java/windows/org/apache/harmony/awt/gl/windows/GDIPTextRenderer.java,156,,"                    System.err.println(Messages.getString(""awt.err.02"", status));  //$NON-NLS-1$"
109112,./TargetProjects/harmony-classlib/modules/awt/src/main/java/windows/org/apache/harmony/awt/gl/windows/GDITextRenderer.java,68,,"    @SuppressWarnings(""deprecation"")"
109113,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/AccessibleAWTListTest.java,49,,"        list.add(""item1"");"
109114,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/AccessibleAWTListTest.java,50,,"        list.add(""item2"");"
109115,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/AccessibleAWTTextComponentTest.java,91,,"        String text = ""text"";"
109116,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/ButtonTest.java,48,,"        button = new TestButton(""Button"");        "
109117,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/CardLayoutRTest.java,45,,"        fail(""Expected IllegalArgumentException"");"
109118,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/ChoiceTest.java,50,,"        choice.add(""item"");"
109119,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/ChoiceTest.java,52,,"        choice.add(""item1"");"
109120,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/ChoiceTest.java,171,,"        choice.add(""item2"");"
109121,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/ComponentTest.java,49,,"    @SuppressWarnings(""deprecation"")"
109122,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/FontTest.java,32,,"    private final Font f = new Font(""dialog"", Font.PLAIN, 12);"
109123,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/FontTest.java,44,,"            fail(""NullPointerException expected but wasn't thrown!"");"
109124,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/FontTest.java,79,,"            fail(""NullPointerException expected!"");"
109125,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/GradientPaintTest.java,36,,"            fail(""expected NPE"");"
109126,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/KeyboardFocusManagerTest.java,185,,"        assertEquals(""focusedWindow"", event.getPropertyName());"
109127,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/ListTest.java,51,,"        list.add(""item"");"
109128,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/ListTest.java,52,,"        list.add(""item1"", 0);"
109129,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/ListTest.java,209,,"        list.add(item = ""item2"", idx = -20);"
109130,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/RectangleTest.java,138,,"    @SuppressWarnings(""deprecation"")"
109131,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/ScrollbarTest.java,214,,"    @SuppressWarnings(""deprecation"")"
109132,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/TextAreaTest.java,68,,"        assertEquals(0, paramStr.indexOf(""text""));"
109133,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/TextAreaTest.java,97,,"    @SuppressWarnings(""deprecation"")"
109134,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/TextFieldTest.java,111,,"    @SuppressWarnings(""deprecation"")"
109135,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/Tools.java,559,,"                    out += ""move("" + coords[0] + "","" + coords[1] + "")\n"";"
109136,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/WindowTest.java,69,,"    @SuppressWarnings(""deprecation"")"
109137,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/datatransfer/DataFlavorTest.java,35,,"        assertEquals(new DataFlavor(""x/y; class=java.util.LinkedList"", """").hashCode(),"
109138,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/datatransfer/DataFlavorTest.java,37,,"        assertTrue(new DataFlavor(""z/y; class=java.util.LinkedList"", """").hashCode() !="
109139,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/datatransfer/DataFlavorTest.java,39,,"        assertTrue(new DataFlavor(""x/z; class=java.util.LinkedList"", """").hashCode() !="
109140,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/datatransfer/DataFlavorTest.java,42,,"                new DataFlavor(""x/y; class=java.util.List"", """").hashCode());"
109141,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/datatransfer/DataFlavorTest.java,43,,"        assertTrue(new DataFlavor(""x/y; class=java.lang.String; charset=c1"", """").hashCode() =="
109142,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/datatransfer/DataFlavorTest.java,44,,"                new DataFlavor(""x/y; class=java.lang.String; charset=c2"", """").hashCode());"
109143,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/datatransfer/DataFlavorTest.java,45,,"        assertTrue(new DataFlavor(""x/y; class=java.util.LinkedList; charset=c1"", """").hashCode() !="
109144,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/datatransfer/DataFlavorTest.java,46,,"                new DataFlavor(""x/y; class=java.util.List; charset=c2"", """").hashCode());"
109145,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/datatransfer/DataFlavorTest.java,134,,"                new DataFlavor(""application/x-java-serialized-object; class=java.lang.String"", ""z""));"
109146,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/datatransfer/DataFlavorTest.java,137,,"                        ""application/x-java-serialized-object""));"
109147,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/datatransfer/DataFlavorTest.java,144,,"        assertEquals(new DataFlavor(""x/y; param=value"", ""z"").getParameter(""param""), ""value"");"
109148,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/datatransfer/DataFlavorTest.java,144,,"        assertEquals(new DataFlavor(""x/y; param=value"", ""z"").getParameter(""param""), ""value"");"
109149,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/datatransfer/DataFlavorTest.java,144,,"        assertEquals(new DataFlavor(""x/y; param=value"", ""z"").getParameter(""param""), ""value"");"
109150,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/datatransfer/DataFlavorTest.java,150,,"        assertEquals(new DataFlavor(""x/y; class=java.lang.String"", ""z"").getRepresentationClass(),"
109151,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/datatransfer/DataFlavorTest.java,376,,"        assertTrue(new DataFlavor(""x/y; class=java.io.Serializable"", ""1"")."
109152,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/datatransfer/SystemFlavorMapTest.java,87,,"        map.addFlavorForUnencodedNative(""1nat1"", new DataFlavor(""1data1/flavor"", ""flav1""));"
109153,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/datatransfer/SystemFlavorMapTest.java,88,,"        map.addFlavorForUnencodedNative(""1nat1"", new DataFlavor(""1data2/flavor"", ""flav2""));"
109154,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/datatransfer/SystemFlavorMapTest.java,89,,"        map.addFlavorForUnencodedNative(""1nat2"", new DataFlavor(""1data3/flavor"", ""flav3""));"
109155,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/datatransfer/SystemFlavorMapTest.java,131,,"        map.addFlavorForUnencodedNative(""3nat1"", new DataFlavor(""3data1/flavor"", ""flav1""));"
109156,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/datatransfer/SystemFlavorMapTest.java,150,,"        map.addUnencodedNativeForFlavor(new DataFlavor(""4data1/flavor"", ""flav1""), ""4nat1"");"
109157,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/datatransfer/SystemFlavorMapTest.java,169,,"        map.addUnencodedNativeForFlavor(new DataFlavor(""5data1/flavor"", ""flav1""), ""5nat1"");"
109158,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/datatransfer/SystemFlavorMapTest.java,183,,"        map.addFlavorForUnencodedNative(""6nat1"", new DataFlavor(""6data1/flavor"", ""flav1""));"
109159,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/dnd/DropTargetContextTest.java,200,,"            fail(""NPE expected"");"
109160,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/dnd/DropTargetContextTest.java,210,,"        String s = ""test"";"
109161,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/dnd/DropTargetTest.java,251,,"            fail(""TooManyListenersException"");"
109162,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/dnd/DropTargetTest.java,290,,"            fail(""NullPointerException expected"");"
109163,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/event/ActionEventTest.java,29,,"        Button button = new Button(""Button"");"
109164,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/event/InputEventTest.java,30,,"        Button button = new Button(""Button""); //$NON-NLS-1$"
109165,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/event/InvocationEventTest.java,32,,"        Button button = new Button(""Button"");"
109166,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/event/KeyEventTest.java,56,,"        Button button = new Button(""Button"");"
109167,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/event/MouseEventTest.java,34,,"        Button button = new Button(""Button"");"
109168,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/geom/Arc2DTest.java,340,,"                    ""Arc2d.setAngles("" + x1 + "","" + y1 + "","" + x2 + "","" + y2 + "") failed. Start angle"","
109169,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/geom/AreaTest.java,40,,"            fail(""Expected NPE"");"
109170,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/geom/GeomTestCase.java,136,,"            fail(concat(msg, ""Wrong array length "" + a1.length + "", needed at least "" + length));"
109171,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/geom/GeomTestCase.java,136,,"            fail(concat(msg, ""Wrong array length "" + a1.length + "", needed at least "" + length));"
109172,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/geom/Line2DTest.java,170,,"                    ""Line2D.relativeCCW("" + x + "","" + y + "") failed"","
109173,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/geom/PathIteratorTestCase.java,57,,"        assertEquals(""Segment type"", PathIterator.SEG_MOVETO, p.currentSegment(dcoords));"
109174,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/geom/PathIteratorTestCase.java,58,,"        assertEquals(""Coordinates"", new double[] {x1, y1}, dcoords, 2, delta);"
109175,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/image/BufferedImageTest.java,72,,"            fail(""Unexpected RasterFormatException: "" + e.getMessage());"
109176,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/image/MultiPixelPackedSampleModelTest.java,585,,"                    throw new IllegalArgumentException(""Wrong TransferType"");"
109177,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/image/MultiPixelPackedSampleModelTest.java,763,,"            throw new IllegalArgumentException(""Wrong Transfer Type"");"
109178,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/java/awt/image/MultiPixelPackedSampleModelTest.java,1542,,"                    throw new IllegalArgumentException(""Wrong Transfer Type: """
109179,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/org/apache/harmony/awt/gl/MultiRectAreaTest.java,237,,"        check(opIntersect, ""star"", ""twist"");"
109180,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/org/apache/harmony/awt/tests/java/awt/font/GlyphJustificationInfoTest.java,66,,"            fail(""IllegalArgumentException expected"");"
109181,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/org/apache/harmony/awt/tests/java/awt/font/ImageGraphicAttributeTest.java,114,,"            fail(""IllegalArgumentException expected"");"
109182,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/org/apache/harmony/awt/tests/java/awt/font/NumericShaperTest.java,210,,"            assertEquals(""shaped char at pos["" + i + ""] not equals to the golden one"", (int)goldenBengaliStringNoContext1.charAt(i), chars[i]);"
109183,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/org/apache/harmony/awt/tests/java/awt/font/NumericShaperTest.java,210,,"            assertEquals(""shaped char at pos["" + i + ""] not equals to the golden one"", (int)goldenBengaliStringNoContext1.charAt(i), chars[i]);"
109184,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/org/apache/harmony/awt/tests/java/awt/font/NumericShaperTest.java,229,,"            fail(""IndexOutOfBoundsException expected but wasn't thrown!"");"
109185,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/boot/org/apache/harmony/awt/tests/java/awt/image/LookupOpTest.java,62,,"            fail(""IllegalArgumentException expected!"");"
109186,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/windows/org/apache/harmony/awt/tests/java/awt/WinFontTest.java,50,,"    final String ARIAL_NAME = ""Arial"";"
109187,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/windows/org/apache/harmony/awt/tests/java/awt/WinFontTest.java,54,,"    final String DIALOG_NAME = ""dialog""; "
109188,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/windows/org/apache/harmony/awt/tests/java/awt/WinFontTest.java,153,,"        CharacterIterator iter = new StringCharacterIterator(""1q\u0434"");"
109189,./TargetProjects/harmony-classlib/modules/awt/src/test/impl/windows/org/apache/harmony/awt/tests/java/awt/WinFontTest.java,432,,"        System.setProperty(""arial.font"", ""Arial-BOLD-18"");"
109190,./TargetProjects/harmony-classlib/modules/beans/src/main/java/java/beans/StandardBeanInfo.java,669,,"    @SuppressWarnings(""unchecked"")"
109191,./TargetProjects/harmony-classlib/modules/beans/src/main/java/java/beans/Statement.java,49,,"    static final String CONSTRUCTOR_NAME = ""new""; //$NON-NLS-1$"
109192,./TargetProjects/harmony-classlib/modules/beans/src/main/java/java/beans/Statement.java,52,,"    static final String ARRAY_GET = ""get""; //$NON-NLS-1$"
109193,./TargetProjects/harmony-classlib/modules/beans/src/main/java/java/beans/Statement.java,55,,"    static final String ARRAY_SET = ""set""; //$NON-NLS-1$"
109194,./TargetProjects/harmony-classlib/modules/beans/src/main/java/java/beans/Statement.java,73,,"        String targetVar = theTarget != null ? convertClassName(theTarget.getClass()) : ""null""; //$NON-NLS-1$"
109195,./TargetProjects/harmony-classlib/modules/beans/src/main/java/java/beans/Statement.java,435,,"            { ""java.lang.Class"", ""new"", ""java.lang.Boolean"", """", """", """" }, //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$"
109196,./TargetProjects/harmony-classlib/modules/beans/src/main/java/java/beans/XMLDecoder.java,78,,"        @SuppressWarnings(""nls"")"
109197,./TargetProjects/harmony-classlib/modules/beans/src/main/java/java/beans/XMLDecoder.java,99,,"                    || ""char"".equals(qName) || ""class"".equals(qName)"
109198,./TargetProjects/harmony-classlib/modules/beans/src/main/java/java/beans/XMLEncoder.java,140,,"	@SuppressWarnings(""nls"")"
109199,./TargetProjects/harmony-classlib/modules/beans/src/main/java/java/beans/XMLEncoder.java,301,,"		String tagName = ""void"";"
109200,./TargetProjects/harmony-classlib/modules/beans/src/main/java/java/beans/XMLEncoder.java,307,,"			out.print("" id=\"""");"
109201,./TargetProjects/harmony-classlib/modules/beans/src/main/java/java/beans/XMLEncoder.java,351,,"		out.print("" class=\"""");"
109202,./TargetProjects/harmony-classlib/modules/beans/src/main/java/java/beans/XMLEncoder.java,377,,"		String tagName = stat instanceof Expression ? ""object"" : ""void"";"
109203,./TargetProjects/harmony-classlib/modules/beans/src/main/java/java/beans/beancontext/BeanContextSupport.java,106,,"    @SuppressWarnings(""unchecked"")"
109204,./TargetProjects/harmony-classlib/modules/beans/src/main/java/java/beans/beancontext/BeanContextSupport.java,282,,"                beanContextChild.removePropertyChangeListener(""beanContext"","
109205,./TargetProjects/harmony-classlib/modules/beans/src/main/java/org/apache/harmony/beans/Command.java,409,,"        return isTag(""object"") && hasAttr(""method"") || isTag(""class""); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$"
109206,./TargetProjects/harmony-classlib/modules/beans/src/main/java/org/apache/harmony/beans/Command.java,409,,"        return isTag(""object"") && hasAttr(""method"") || isTag(""class""); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$"
109207,./TargetProjects/harmony-classlib/modules/beans/src/main/java/org/apache/harmony/beans/Command.java,409,,"        return isTag(""object"") && hasAttr(""method"") || isTag(""class""); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$"
109208,./TargetProjects/harmony-classlib/modules/beans/src/main/java/org/apache/harmony/beans/Command.java,414,,"        return isTag(""void"") && (hasAttr(""method"") || hasAttr(""index"")); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$"
109209,./TargetProjects/harmony-classlib/modules/beans/src/main/java/org/apache/harmony/beans/Command.java,414,,"        return isTag(""void"") && (hasAttr(""method"") || hasAttr(""index"")); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$"
109210,./TargetProjects/harmony-classlib/modules/beans/src/main/java/org/apache/harmony/beans/Command.java,420,,"        return isTag(""void"") && hasAttr(""property""); //$NON-NLS-1$ //$NON-NLS-2$"
109211,./TargetProjects/harmony-classlib/modules/beans/src/main/java/org/apache/harmony/beans/Command.java,425,,"        return isTag(""object"") && hasAttr(""field""); //$NON-NLS-1$ //$NON-NLS-2$"
109212,./TargetProjects/harmony-classlib/modules/beans/src/main/java/org/apache/harmony/beans/Command.java,439,,"        return hasAttr(""idref""); //$NON-NLS-1$"
109213,./TargetProjects/harmony-classlib/modules/beans/src/main/java/org/apache/harmony/beans/Command.java,526,,"                if (isTag(""char"")) { //$NON-NLS-1$"
109214,./TargetProjects/harmony-classlib/modules/beans/src/main/java/org/apache/harmony/beans/Command.java,537,,"                methodValue = ""new""; //$NON-NLS-1$"
109215,./TargetProjects/harmony-classlib/modules/beans/src/test/java-internal/java/beans/beancontext/BeanContextServicesSupportTest.java,226,,"            fail(""NullPointerException expected"");"
109216,./TargetProjects/harmony-classlib/modules/beans/src/test/java-internal/java/beans/beancontext/BeanContextSupportTest.java,476,,"            fail(""NullPointerException expected"");"
109217,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/BeansTest.java,99,,"                ""getPropertyOne"", (Class[]) null).invoke(bean, (Object[]) null));"
109218,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/DefaultPersistenceDelegateTest.java,85,,"        new DefaultPersistenceDelegate(new String[] { ""prop1"", """", null });"
109219,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/DefaultPersistenceDelegateTest.java,109,,"                ""prop1"", ""prop2"" });"
109220,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/DefaultPersistenceDelegateTest.java,112,,"        b.setAll(""bean1"", 2);"
109221,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/DefaultPersistenceDelegateTest.java,116,,"        assertEquals(""new"", e.getMethodName());"
109222,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/DefaultPersistenceDelegateTest.java,130,,"            fail(""Should throw NullPointerException!"");"
109223,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/DefaultPersistenceDelegateTest.java,405,,"        assertTrue(pd.mutatesTo(""test1"", ""test1""));"
109224,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/DefaultPersistenceDelegateTest.java,421,,"                new String[] { ""name"" });"
109225,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/DefaultPersistenceDelegateTest.java,619,,"        oldBean.setName(""myName"");"
109226,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/EventHandlerTest.java,64,,"        EventHandler handler = new EventHandler(invocationObject, ""someText"","
109227,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/EventHandlerTest.java,65,,"                ""source.text"", ""actionPerformed"");"
109228,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/EventHandlerTest.java,65,,"                ""source.text"", ""actionPerformed"");"
109229,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/EventHandlerTest.java,118,,"                ""doSomething"", null, null);"
109230,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/EventHandlerTest.java,287,,"                PropertyChangeListener.class, target, ""setCalled"");"
109231,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/EventHandlerTest.java,301,,"            fail(""Should throw NullPointerException."");"
109232,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/EventHandlerTest.java,347,,"            fail(""Should throw RuntimeException."");"
109233,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/EventHandlerTest.java,377,,"                PropertyChangeListener.class, target, ""text"", ""source.label"");"
109234,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/EventHandlerTest.java,377,,"                PropertyChangeListener.class, target, ""text"", ""source.label"");"
109235,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/EventHandlerTest.java,381,,"        String newLabel = ""New Value: set text."";"
109236,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/EventHandlerTest.java,421,,"            fail(""should throw NPE"");"
109237,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/EventHandlerTest.java,496,,"                ""propertyChange"");"
109238,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/EventHandlerTest.java,815,,"        PropertyChangeEvent event = new PropertyChangeEvent(fish, ""name"", ""1"","
109239,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/EventHandlerTest.java,826,,"                target, ""action4"");"
109240,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/EventSetDescriptorTest.java,67,,"        String eventSetName = ""mockPropertyChange"";"
109241,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/EventSetDescriptorTest.java,108,,"            fail(""Should throw IntrospectionException."");"
109242,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/EventSetDescriptorTest.java,126,,"            fail(""Should throw NullPointerException."");"
109243,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/EventSetDescriptorTest.java,238,,"        String eventSetName = ""MockPropertyChange"";"
109244,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/EventSetDescriptorTest.java,308,,"                ""mockPropertyChange2"", };"
109245,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/EventSetDescriptorTest.java,309,,"        String addMethod = ""addMockPropertyChangeListener"";"
109246,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/EventSetDescriptorTest.java,310,,"        String removeMethod = ""removeMockPropertyChangeListener"";"
109247,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/EventSetDescriptorTest.java,554,,"        String addMethod = ""addMockPropertyChangeListener_Invalid"";"
109248,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/ExpressionTest.java,38,,"        Expression expr = new Expression(SampleBean.class, ""new"","
109249,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/ExpressionTest.java,39,,"                new Object[] { ""hello"" });"
109250,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/ExpressionTest.java,89,,"        Expression expr = new Expression(a, ""get"","
109251,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/ExpressionTest.java,110,,"        Expression t = new Expression(target, ""method"", oa);"
109252,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/ExpressionTest.java,465,,"        assertEquals(""method1"", t.getValue());"
109253,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/ExpressionTest.java,531,,"            fail(""Should throw NullPointerException!"");"
109254,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/ExpressionTest.java,548,,"            fail(""Should throw NoSuchMethodException!"");"
109255,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/ExpressionTest.java,609,,"        arguments = new Object[] { ""test"" };"
109256,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/ExpressionTest.java,692,,"        Expression t = new Expression(MockObject.class, ""staticMethod"","
109257,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/ExpressionTest.java,718,,"        Expression t = new Expression(MockObject.class, ""forName"", arguments);"
109258,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/IndexedPropertyDescriptorTest.java,36,,"        String propertyName = ""PropertyFour"";"
109259,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/IndexedPropertyDescriptorTest.java,39,,"        Method readMethod = beanClass.getMethod(""get"" + propertyName,"
109260,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/IndexedPropertyDescriptorTest.java,41,,"        Method writeMethod = beanClass.getMethod(""set"" + propertyName,"
109261,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/IndexedPropertyDescriptorTest.java,356,,"            fail(""Should throw IntrospectionException"");"
109262,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/IndexedPropertyDescriptorTest.java,487,,"            fail(""Shoule throw exception"");"
109263,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/IndexedPropertyDescriptorTest.java,540,,"            fail(""Should throw IntrospectionException."");"
109264,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/IndexedPropertyDescriptorTest.java,726,,"        String anotherProp = ""PropertyFive"";"
109265,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/IndexedPropertyDescriptorTest.java,1410,,"        ipd = new IndexedPropertyDescriptor(""data"", NormalBean.class);"
109266,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/IndexedPropertyDescriptorTest.java,1413,,"            ipd.setIndexedWriteMethod(NormalBean.class.getMethod(""setData"", Integer.TYPE, Integer.TYPE));"
109267,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/IntrospectorTest.java,213,,"        assertEquals(""class"", descriptors[0].getName());"
109268,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/IntrospectorTest.java,278,,"        assertEquals(""text"", pds[1].getName());"
109269,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/IntrospectorTest.java,349,,"            fail(""Should throw NullPointerException."");"
109270,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/IntrospectorTest.java,432,,"        assertTrue(contains(""name"", String.class, pds));"
109271,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/IntrospectorTest.java,443,,"        assertTrue(contains(""getName"", mds));"
109272,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/IntrospectorTest.java,1736,,"        assertEquals(""prop1"", propertyDescriptors[1].getName());"
109273,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/IntrospectorTest.java,2614,,"                    assertNotNull(""invalid get method"", desc.getReadMethod());"
109274,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/IntrospectorTest.java,2615,,"                    assertEquals(""get method has invalid return type"","
109275,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/IntrospectorTest.java,2617,,"                    assertNotNull(""invalid set method"", desc.getWriteMethod());"
109276,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/IntrospectorTest.java,2619,,"                            ""setProp1"", desc.getWriteMethod().getName());"
109277,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/IntrospectorTest.java,2620,,"                    assertNotNull(""set method don't have any parameters"","
109278,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/IntrospectorTest.java,2622,,"                    assertEquals(""set method has invalid parameters"","
109279,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/IntrospectorTest.java,2865,,"        Method getter = MixedSimpleClass1.class.getDeclaredMethod(""isList"");"
109280,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/IntrospectorTest.java,2890,,"        Method getter = MixedSimpleClass2.class.getDeclaredMethod(""getList"");"
109281,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/IntrospectorTest.java,2978,,"        Method setter = MixedSimpleClass5.class.getDeclaredMethod(""setList"","
109282,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/PersistenceDelegateTest.java,62,,"        assertEquals(""initialize"", pd.popMethod());"
109283,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/PersistenceDelegateTest.java,63,,"        assertEquals(""mutatesTo"", pd.popMethod());"
109284,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/PersistenceDelegateTest.java,91,,"            fail(""Should throw NullPointerException!"");"
109285,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/PersistenceDelegateTest.java,211,,"        assertFalse(pd.mutatesTo(""test"", null));"
109286,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/PersistenceDelegateTest.java,706,,"        container.setComponentZOrder(new Label(""label""), 0);"
109287,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/PropertyChangeEventTest.java,40,,"        PropertyChangeEvent event = new PropertyChangeEvent(src, ""myPropName"","
109288,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/PropertyChangeSupportTest.java,76,,"        PropertyChangeListener l3 = new PropertyChangeListenerProxy(""myProp"","
109289,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/PropertyChangeSupportTest.java,151,,"        sup.addPropertyChangeListener(""myProp2"", l1);"
109290,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/PropertyChangeSupportTest.java,159,,"        sup.addPropertyChangeListener(""myProp3"", l3);"
109291,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/PropertyDescriptorTest.java,39,,"        String propertyName = ""PropertyOne"";"
109292,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/PropertyDescriptorTest.java,43,,"        Method readMethod = beanClass.getMethod(""get"" + propertyName,"
109293,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/PropertyDescriptorTest.java,45,,"        Method writeMethod = beanClass.getMethod(""set"" + propertyName,"
109294,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/PropertyDescriptorTest.java,79,,"        String propertyName2 = ""PropertyThree"";"
109295,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/PropertyDescriptorTest.java,213,,"        String propertyName = ""propertyOne"";"
109296,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/PropertyDescriptorTest.java,240,,"            fail(""Should throw IntrospectionException"");"
109297,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/PropertyDescriptorTest.java,319,,"            fail(""Should throw IntrospectionException."");"
109298,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/PropertyDescriptorTest.java,369,,"        String propertyName = ""PropertyTwo"";"
109299,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/PropertyDescriptorTest.java,666,,"                ""prop1"", SubMockJavaBean.class, null, ""setPropertyOne""); //$NON-NLS-1$ //$NON-NLS-2$"
109300,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/PropertyDescriptorTest.java,671,,"                ""prop1"", SubMockJavaBean.class, ""getPropertyOne"", ""setPropertyOne""); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$"
109301,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/PropertyDescriptorTest.java,1121,,"                    + ""throw IntrospectionException"");"
109302,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/PropertyDescriptorTest.java,1130,,"            assertEquals(""bad property name"", e.getMessage());"
109303,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/PropertyEditorManagerTest.java,190,,"        editor.setAsText(""false"");"
109304,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/PropertyEditorManagerTest.java,193,,"        assertEquals(""True"", editor.getTags()[0]);"
109305,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/PropertyEditorManagerTest.java,194,,"        assertEquals(""False"", editor.getTags()[1]);"
109306,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/PropertyEditorManagerTest.java,198,,"        assertEquals(""true"", editor.getAsText().toLowerCase());"
109307,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/PropertyEditorManagerTest.java,272,,"            fail(""Should throw a NumberFormatException"");"
109308,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/PropertyEditorManagerTest.java,280,,"            editor.setAsText(""invalid"");"
109309,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/PropertyEditorManagerTest.java,454,,"        editor.setAsText(""null"");"
109310,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/PropertyEditorSupportTest.java,42,,"        assertEquals(""???"", support.getJavaInitializationString());"
109311,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/PropertyEditorSupportTest.java,101,,"                PropertyChangeListener.class, target, ""eventSource"", ""source""));"
109312,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/PropertyEditorSupportTest.java,101,,"                PropertyChangeListener.class, target, ""eventSource"", ""source""));"
109313,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/PropertyVetoExceptionTest.java,52,,"        String message = ""testPropertyVetoException"";"
109314,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/StatementTest.java,58,,"        Statement s = new Statement(bean, ""setText"", new Object[] { ""hello"" });"
109315,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/StatementTest.java,79,,"        Statement s = new Statement(a, ""set"", new Object[] { new Integer(1),"
109316,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/StatementTest.java,239,,"        Statement t = new Statement(arg1, ""method"", oa);"
109317,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/StatementTest.java,295,,"        Statement t = new Statement(target, ""new"", oa);"
109318,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/StatementTest.java,421,,"            fail(""Should throw NullPointerException!"");"
109319,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/StatementTest.java,438,,"            fail(""Should throw NoSuchMethodException!"");"
109320,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/StatementTest.java,501,,"        arguments = new Object[] { ""test"" };"
109321,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/StatementTest.java,603,,"        Statement t = new Statement(MockObject.class, ""staticMethod"", arguments);"
109322,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/StatementTest.java,627,,"        Statement t = new Statement(MockObject.class, ""forName"", arguments);"
109323,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/StatementTest.java,676,,"                new Integer(0), ""test2"" });"
109324,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/StatementTest.java,926,,"        String methodName = ""visit"";"
109325,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/VetoableChangeSupportTest.java,70,,"                VetoableChangeListener.class, source, ""setText"");"
109326,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/VetoableChangeSupportTest.java,71,,"        String propertyName = ""label"";"
109327,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/VetoableChangeSupportTest.java,75,,"        assertFalse(support.hasListeners(""text""));"
109328,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/VetoableChangeSupportTest.java,194,,"        String propertyName = ""label_invalid"";"
109329,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/VetoableChangeSupportTest.java,339,,"                VetoableChangeListener.class, source, ""getText"");"
109330,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/VetoableChangeSupportTest.java,430,,"                ""Label: old"", ""Label: new"");"
109331,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/VetoableChangeSupportTest.java,430,,"                ""Label: old"", ""Label: new"");"
109332,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/VetoableChangeSupportTest.java,433,,"        assertEquals(""called"", source.getText());"
109333,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/VetoableChangeSupportTest.java,565,,"        assertEquals(""text.default"", source.getText());"
109334,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/VetoableChangeSupportTest.java,714,,"                VetoableChangeListener.class, source, ""label"", ""source.text"");"
109335,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/VetoableChangeSupportTest.java,732,,"        assertEquals(""label.default"", source.getLabel());"
109336,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/VetoableChangeSupportTest.java,1837,,"        new VetoableChangeSupport(""bean1"")"
109337,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/VetoableChangeSupportTest.java,1885,,"        vcs.addVetoableChangeListener(""property1"", vcl);"
109338,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/XMLEncoderTest.java,476,,"                fail(""Exception "" + e.getClass() + "" is thrown: """
109339,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/XMLEncoderTest.java,476,,"                fail(""Exception "" + e.getClass() + "" is thrown: """
109340,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/beancontext/BeanContextChildSupportTest.java,138,,"        support.addPropertyChangeListener(""property name"", null);"
109341,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/beancontext/BeanContextChildSupportTest.java,182,,"        support.firePropertyChange(""xxx"", oldValue, newValue);"
109342,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/beancontext/BeanContextChildSupportTest.java,637,,"        support.addPropertyChangeListener(""beanContext"", l1);"
109343,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/beancontext/BeanContextChildSupportTest.java,764,,"                ""id of pcl2"");"
109344,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/beancontext/BeanContextChildSupportTest.java,767,,"                ""id of vcl2"");"
109345,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/beancontext/BeanContextServicesSupportTest.java,119,,"            records.add(""initialize"", null);"
109346,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/beancontext/BeanContextServicesSupportTest.java,143,,"            records.add(""childJustRemovedHook"", child, bcsc, null);"
109347,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/beancontext/BeanContextServicesSupportTest.java,157,,"            records.add(""createBCSSServiceProvider"", sc, bcsp, result);"
109348,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/beancontext/BeanContextServicesSupportTest.java,510,,"        provider.records.assertRecord(""releaseService"", support, child,"
109349,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/beancontext/BeanContextServicesSupportTest.java,727,,"        Object requestor = ""a requestor"";"
109350,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/beancontext/BeanContextServicesSupportTest.java,728,,"        Object selector = ""a selector"";"
109351,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/beancontext/BeanContextServicesSupportTest.java,755,,"        provider.records.assertRecord(""getService"", support, requestor,"
109352,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/beancontext/BeanContextSupportTest.java,223,,"            records.add(""bcsPreSerializationHook"", oos, null);"
109353,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/beancontext/BeanContextSupportTest.java,235,,"            records.add(""childDeserializedHook"", child, bcsc, null);"
109354,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/beancontext/BeanContextSupportTest.java,255,,"            records.add(""childJustAddedHook"", child, bcsc, null);"
109355,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/beancontext/BeanContextSupportTest.java,275,,"            records.add(""childJustRemovedHook"", child, bcsc, null);"
109356,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/beancontext/BeanContextSupportTest.java,287,,"            records.add(""createBCSChild"", targetChild, peer, result);"
109357,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/beancontext/BeanContextSupportTest.java,302,,"            records.add(""initialize"", null);"
109358,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/beancontext/BeanContextSupportTest.java,325,,"            records.add(""validatePendingAdd"", targetChild, Boolean"
109359,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/beancontext/BeanContextSupportTest.java,339,,"            records.add(""validatePendingRemove"", targetChild, Boolean"
109360,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/beancontext/BeanContextSupportTest.java,422,,"        support.addPropertyChangeListener(""children"", l2);"
109361,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/beancontext/BeanContextSupportTest.java,657,,"        support.add(""string value"");"
109362,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/beancontext/BeanContextSupportTest.java,857,,"        assertFalse(support.children().containsKey(""xxx""));"
109363,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/beancontext/BeanContextSupportTest.java,1136,,"            fail(""NPE expected"");"
109364,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/beancontext/BeanContextSupportTest.java,1277,,"        support.add(""a child"");"
109365,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/beancontext/BeanContextSupportTest.java,1374,,"        support.addPropertyChangeListener(""locale"", l1);"
109366,./TargetProjects/harmony-classlib/modules/beans/src/test/java/org/apache/harmony/beans/tests/java/beans/beancontext/BeanContextSupportTest.java,1805,,"        support.addPropertyChangeListener(""designTime"", l1);"
109367,./TargetProjects/harmony-classlib/modules/beans/src/test/support/java/org/apache/harmony/beans/tests/support/TInspectorCluster.java,110,,"            calledMethodName = ""visit"";"
109368,./TargetProjects/harmony-classlib/modules/concurrent/src/main/java/java/util/concurrent/CopyOnWriteArrayList.java,711,,"            throw new IndexOutOfBoundsException(""Index is "" + index + "", size is "" + size);"
109369,./TargetProjects/harmony-classlib/modules/concurrent/src/main/java/java/util/concurrent/locks/ReentrantReadWriteLock.java,373,,"                    throw new Error(""Maximum lock count exceeded"");"
109370,./TargetProjects/harmony-classlib/modules/concurrent/src/test/java/ConcurrentHashMapTest.java,427,,"            c.put(null, ""whatever"");"
109371,./TargetProjects/harmony-classlib/modules/concurrent/src/test/java/ConcurrentHashMapTest.java,528,,"            c.put(""sadsdf"", ""asdads"");"
109372,./TargetProjects/harmony-classlib/modules/concurrent/src/test/java/CopyOnWriteArrayListTest.java,434,,"            c.add(""asdasd"");"
109373,./TargetProjects/harmony-classlib/modules/concurrent/src/test/java/CopyOnWriteArrayListTest.java,447,,"            c.set(-1,""qwerty"");"
109374,./TargetProjects/harmony-classlib/modules/concurrent/src/test/java/CyclicBarrierTest.java,429,,"                                threadFail(""start barrier""); "
109375,./TargetProjects/harmony-classlib/modules/concurrent/src/test/java/ExecutorsTest.java,381,,"            policy.addPermission(new RuntimePermission(""getContextClassLoader""));"
109376,./TargetProjects/harmony-classlib/modules/crypto/src/main/java/javax/crypto/Cipher.java,261,,"            throw new NoSuchAlgorithmException(Messages.getString(""crypto.17"", //$NON-NLS-1$"
109377,./TargetProjects/harmony-classlib/modules/crypto/src/main/java/javax/crypto/Cipher.java,518,,"            throw new InvalidParameterException(Messages.getString(""crypto.19"")); //$NON-NLS-1$"
109378,./TargetProjects/harmony-classlib/modules/crypto/src/main/java/javax/crypto/Cipher.java,853,,"                    Messages.getString(""crypto.1C"")); //$NON-NLS-1$"
109379,./TargetProjects/harmony-classlib/modules/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java,261,,"                        Messages.getString(""crypto.29"")); //$NON-NLS-1$"
109380,./TargetProjects/harmony-classlib/modules/crypto/src/main/java/javax/crypto/Mac.java,249,,"            throw new IllegalStateException(Messages.getString(""crypto.01""));"
109381,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java.injected/javax/crypto/CipherInputStreamTest.java,149,,"                assertEquals(""read(byte[] b, int off, int len) """
109382,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java.injected/javax/crypto/CipherSpiTest.java,138,,"            fail(""NullPointerException must be thrown"");"
109383,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java.injected/javax/crypto/SealedObjectTest.java,51,,"        String secret = ""secret string"";"
109384,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java.injected/javax/crypto/SealedObjectTest.java,115,,"        String algorithm = ""DES"";"
109385,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/CipherTest.java,81,,"            Cipher cipher = Cipher.getInstance(""DES"", providers[i].getName());"
109386,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/CipherTest.java,262,,"            byte[] keyMaterial = loadBytes(""hyts_"" + ""des-ede3-cbc.test"""
109387,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/CipherTest.java,262,,"            byte[] keyMaterial = loadBytes(""hyts_"" + ""des-ede3-cbc.test"""
109388,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/CipherTest.java,412,,"            fail(""No expected NoSuchAlgorithmException"");"
109389,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/EncryptedPrivateKeyInfoTest.java,152,,"            { ""DSA"", null }, // 1.2.840.10040.4.1"
109390,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/EncryptedPrivateKeyInfoTest.java,219,,"            fail(getName() + "": NullPointerException has not been thrown"");"
109391,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/EncryptedPrivateKeyInfoTest.java,385,,"        assertTrue(""Test not performed"", performed);"
109392,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/EncryptedPrivateKeyInfoTest.java,1042,,"                    fail(getName() + ""NullPointerException has not been thrown"");"
109393,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/EncryptedPrivateKeyInfoTest.java,1082,,"                        fail(algName[i][0] + "" != "" + algName[i][1]);"
109394,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/KeyAgreementTest.java,351,,"                fail(""InvalidKeyException must be throw"");"
109395,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/KeyAgreementTest.java,482,,"            assertEquals(""Incorrect byte array length"", bbRes1.length,"
109396,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/KeyAgreementTest.java,485,,"                assertEquals(""Incorrect byte (index: "".concat("
109397,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/KeyGeneratorTest.java,115,,"        assertEquals(""Incorrect algorithm"", keyG.getAlgorithm(),"
109398,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/MacTest.java,140,,"            assertEquals(""Incorrect algorithm"", mac.getAlgorithm(), validValues[i]);"
109399,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/MacTest.java,297,,"        assertNotNull(""Mac objects were not created"", macs);"
109400,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/MacTest.java,303,,"                fail(""IllegalStateException must be thrown"");"
109401,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/MacTest.java,355,,"        SecretKeySpec sks = new SecretKeySpec(b, ""SHA1"");"
109402,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/MacTest.java,360,,"                fail(""ShortBufferException must be thrown"");"
109403,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/MacTest.java,434,,"            assertEquals(""Results are not the same"", res1.length, res2.length);"
109404,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/MacTest.java,468,,"                fail(""IllegalArgumentException must be thrown"");"
109405,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/MacTest.java,627,,"                assertEquals(""Incorrect doFinal result"", bb1[t], bb2[t]);"
109406,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/NullCipherTest.java,101,,"        assertEquals(""different length"", b.length, r.length);"
109407,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/NullCipherTest.java,102,,"        assertTrue(""different content"", Arrays.equals(b, r));"
109408,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/SecretKeyFactoryTest.java,127,,"        assertEquals(""Incorrect algorithm"", secKF.getAlgorithm(),"
109409,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/spec/DESKeySpecTest.java,109,,"            fail(""Should raise an NullPointerException """
109410,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/spec/DESKeySpecTest.java,110,,"                    + ""in case of null byte array."");"
109411,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/spec/DESKeySpecTest.java,120,,"            fail(""Unexpected NullPointerException was thrown."");"
109412,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/spec/DESKeySpecTest.java,128,,"            fail(""Unexpected InvalidKeyException was thrown."");"
109413,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/spec/DESKeySpecTest.java,202,,"            fail(""Should raise an InvalidKeyException """
109414,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/spec/DESedeKeySpecTest.java,46,,"            fail(""Should raise an NullPointerException """
109415,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/spec/DESedeKeySpecTest.java,47,,"                    + ""in case of null byte array."");"
109416,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/spec/DESedeKeySpecTest.java,57,,"            fail(""Unexpected NullPointerException was thrown."");"
109417,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/spec/DESedeKeySpecTest.java,67,,"            fail(""Unexpected InvalidKeyException was thrown."");"
109418,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/spec/DHParameterSpecTest.java,52,,"                        + ""equal to the value specified in the constructor"","
109419,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/spec/OAEPParameterSpecTest.java,47,,"        String mdName = ""SHA-1"";"
109420,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/spec/OAEPParameterSpecTest.java,48,,"        String mgfName = ""MGF1"";"
109421,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/spec/OAEPParameterSpecTest.java,104,,"        assertTrue(""The returned value does not equal to the """
109422,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/spec/OAEPParameterSpecTest.java,105,,"                + ""value specified in the constructor."","
109423,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/spec/PBEKeySpecTest.java,55,,"                    + ""should not cause the change of internal array."","
109424,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/spec/PBEKeySpecTest.java,77,,"            fail(""Unexpected IllegalArgumentException was thrown."");"
109425,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/spec/PBEKeySpecTest.java,93,,"            fail(""An IllegalArgumentException should be thrown """
109426,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/spec/PBEKeySpecTest.java,228,,"                    + ""in the constructor."");"
109427,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/spec/RC2ParameterSpecTest.java,50,,"            fail(""An IllegalArgumentException should be thrown """
109428,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/spec/RC5ParameterSpecTest.java,51,,"            fail(""An IllegalArgumentException should be thrown """
109429,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/spec/RC5ParameterSpecTest.java,59,,"                    + ""in the case of short iv."");"
109430,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/spec/RC5ParameterSpecTest.java,247,,"        assertFalse(""Objects should not be equal."", ps1.equals(ps2));"
109431,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/spec/SecretKeySpecTest.java,45,,"        String algorithm = ""Algorithm"";"
109432,./TargetProjects/harmony-classlib/modules/crypto/src/test/api/java/org/apache/harmony/crypto/tests/javax/crypto/spec/SecretKeySpecTest.java,49,,"            fail(""An IllegalArgumentException should be thrown """
109433,./TargetProjects/harmony-classlib/modules/crypto/src/test/impl/java.injected/org/apache/harmony/crypto/internal/NullCipherSpiTest.java,117,,"			fail(""No expected NullPointerException"");"
109434,./TargetProjects/harmony-classlib/modules/crypto/src/test/impl/java/org/apache/harmony/crypto/tests/javax/crypto/Cipher_ImplTest.java,84,,"		Security.removeProvider(""MyProvider2"");"
109435,./TargetProjects/harmony-classlib/modules/crypto/src/test/impl/java/org/apache/harmony/crypto/tests/javax/crypto/Cipher_ImplTest.java,93,,"		Cipher c = Cipher.getInstance(""DES"");"
109436,./TargetProjects/harmony-classlib/modules/crypto/src/test/impl/java/org/apache/harmony/crypto/tests/javax/crypto/Cipher_ImplTest.java,103,,"		Cipher c = Cipher.getInstance(""DES/CBC/PKCS5Padding"");"
109437,./TargetProjects/harmony-classlib/modules/crypto/src/test/impl/java/org/apache/harmony/crypto/tests/javax/crypto/ExemptionMechanism_ImplTest.java,94,,"            fail(""IllegalStateException must be thrown"");"
109438,./TargetProjects/harmony-classlib/modules/crypto/src/test/support/common/java/org/apache/harmony/crypto/tests/support/EncryptedPrivateKeyInfoData.java,1142,,"        validEPKIEncodings.put(""DIFFIE-HELLMAN"", dhEncryptedPrivateKeyInfo);"
109439,./TargetProjects/harmony-classlib/modules/crypto/src/test/support/common/java/org/apache/harmony/crypto/tests/support/EncryptedPrivateKeyInfoData.java,1148,,"        validEPKIEncodings.put(""DSA"", dsaEncryptedPrivateKeyInfo);"
109440,./TargetProjects/harmony-classlib/modules/imageio/src/main/java/javax/imageio/ImageIO.java,127,,"            throw new NullPointerException(""format name cannot be NULL"");"
109441,./TargetProjects/harmony-classlib/modules/imageio/src/main/java/javax/imageio/metadata/IIOMetadataFormatImpl.java,84,,"            throw new IllegalArgumentException(""attrName == null!"");"
109442,./TargetProjects/harmony-classlib/modules/imageio/src/main/java/javax/imageio/metadata/IIOMetadataFormatImpl.java,87,,"            throw new IllegalArgumentException(""Invalid value for dataType!"");"
109443,./TargetProjects/harmony-classlib/modules/imageio/src/main/java/javax/imageio/metadata/IIOMetadataNode.java,201,,"        throw new DOMException(DOMException.NOT_SUPPORTED_ERR, ""Method not supported"");"
109444,./TargetProjects/harmony-classlib/modules/imageio/src/main/java/javax/imageio/metadata/IIOMetadataNode.java,578,,"            throw new DOMException(DOMException.NO_MODIFICATION_ALLOWED_ERR, ""This NamedNodeMap is read-only!"");"
109445,./TargetProjects/harmony-classlib/modules/imageio/src/main/java/javax/imageio/metadata/IIOStandardMetadataFormat.java,37,,"        addElement(""Chroma"", standardMetadataFormatName, CHILD_POLICY_SOME);"
109446,./TargetProjects/harmony-classlib/modules/imageio/src/main/java/javax/imageio/metadata/IIOStandardMetadataFormat.java,72,,"        addAttribute(""NumChannels"", ""value"", DATATYPE_INTEGER, true, 0, Integer.MAX_VALUE); // list - why?"
109447,./TargetProjects/harmony-classlib/modules/imageio/src/main/java/javax/imageio/metadata/IIOStandardMetadataFormat.java,81,,"        addElement(""PaletteEntry"", ""Palette"", CHILD_POLICY_EMPTY);"
109448,./TargetProjects/harmony-classlib/modules/imageio/src/main/java/javax/imageio/metadata/IIOStandardMetadataFormat.java,91,,"        addElement(""BackgroundColor"", ""Chroma"", CHILD_POLICY_EMPTY);"
109449,./TargetProjects/harmony-classlib/modules/imageio/src/main/java/javax/imageio/metadata/IIOStandardMetadataFormat.java,97,,"        addElement(""Compression"", standardMetadataFormatName, CHILD_POLICY_SOME);"
109450,./TargetProjects/harmony-classlib/modules/imageio/src/main/java/javax/imageio/metadata/IIOStandardMetadataFormat.java,112,,"        addElement(""Data"", standardMetadataFormatName, CHILD_POLICY_SOME);"
109451,./TargetProjects/harmony-classlib/modules/imageio/src/main/java/javax/imageio/metadata/IIOStandardMetadataFormat.java,143,,"        addElement(""Dimension"", standardMetadataFormatName, CHILD_POLICY_SOME);"
109452,./TargetProjects/harmony-classlib/modules/imageio/src/main/java/javax/imageio/metadata/IIOStandardMetadataFormat.java,191,,"        addElement(""Document"", standardMetadataFormatName, CHILD_POLICY_SOME);"
109453,./TargetProjects/harmony-classlib/modules/imageio/src/main/java/javax/imageio/metadata/IIOStandardMetadataFormat.java,214,,"        addElement(""ImageCreationTime"", ""Document"", CHILD_POLICY_EMPTY);"
109454,./TargetProjects/harmony-classlib/modules/imageio/src/main/java/javax/imageio/metadata/IIOStandardMetadataFormat.java,237,,"        addElement(""ImageModificationTime"", ""Document"", CHILD_POLICY_EMPTY);"
109455,./TargetProjects/harmony-classlib/modules/imageio/src/main/java/javax/imageio/metadata/IIOStandardMetadataFormat.java,263,,"        addElement(""TextEntry"", ""Text"", CHILD_POLICY_EMPTY);"
109456,./TargetProjects/harmony-classlib/modules/imageio/src/main/java/javax/imageio/metadata/IIOStandardMetadataFormat.java,269,,"        values.add(""none"");"
109457,./TargetProjects/harmony-classlib/modules/imageio/src/main/java/javax/imageio/metadata/IIOStandardMetadataFormat.java,277,,"        addElement(""Transparency"", standardMetadataFormatName, CHILD_POLICY_SOME);"
109458,./TargetProjects/harmony-classlib/modules/imageio/src/main/java/org/apache/harmony/x/imageio/plugins/ImageType.java,20,,"        @SuppressWarnings(""nls"")"
109459,./TargetProjects/harmony-classlib/modules/imageio/src/main/java/org/apache/harmony/x/imageio/plugins/png/PNGImageWriter.java,144,,"                throw new IllegalArgumentException(Messages.getString(""imageio.1""));//$NON-NLS-1$"
109460,./TargetProjects/harmony-classlib/modules/imageio/src/test/java/javax/imageio/stream/ImageOutputStreamImplTest.java,81,,"		out.writeChars(""test"");"
109461,./TargetProjects/harmony-classlib/modules/instrument/src/test/java/org/apache/harmony/tests/java/lang/instrument/InstrumentTest.java,32,,"        arg[1] = ""org/apache/harmony/tests/java/lang/instrument/TestMain"";"
109462,./TargetProjects/harmony-classlib/modules/instrument/src/test/java/org/apache/harmony/tests/java/lang/instrument/InstrumentTest.java,76,,"            fail(""Should fail here!"");"
109463,./TargetProjects/harmony-classlib/modules/jndi/src/main/java/javax/naming/ldap/LdapName.java,48,,"                    + Messages.getString(""ldap.00""));"
109464,./TargetProjects/harmony-classlib/modules/jndi/src/main/java/javax/naming/ldap/Rdn.java,51,,"                    + Messages.getString(""ldap.00""));"
109465,./TargetProjects/harmony-classlib/modules/jndi/src/main/java/org/apache/harmony/jndi/provider/GenericURLContext.java,87,,"            throw new InvalidNameException(Messages.getString(""jndi.26"", name)); //$NON-NLS-1$"
109466,./TargetProjects/harmony-classlib/modules/jndi/src/main/java/org/apache/harmony/jndi/provider/dns/DNSContext.java,374,,"            throw new NotContextException(Messages.getString(""jndi.4A"")); //$NON-NLS-1$"
109467,./TargetProjects/harmony-classlib/modules/jndi/src/main/java/org/apache/harmony/jndi/provider/dns/DNSContext.java,708,,"            throw new NullPointerException(Messages.getString(""jndi.2E"")); //$NON-NLS-1$"
109468,./TargetProjects/harmony-classlib/modules/jndi/src/main/java/org/apache/harmony/jndi/provider/dns/DNSContext.java,735,,"            throw new InvalidNameException(Messages.getString(""jndi.4B"")); //$NON-NLS-1$"
109469,./TargetProjects/harmony-classlib/modules/jndi/src/main/java/org/apache/harmony/jndi/provider/dns/DNSContext.java,1052,,"            throw new NotContextException(Messages.getString(""jndi.4E"")); //$NON-NLS-1$"
109470,./TargetProjects/harmony-classlib/modules/jndi/src/main/java/org/apache/harmony/jndi/provider/dns/TransportMgr.java,100,,"            throw new DomainProtocolException(Messages.getString(""jndi.41""), e); //$NON-NLS-1$"
109471,./TargetProjects/harmony-classlib/modules/jndi/src/main/java/org/apache/harmony/jndi/provider/ldap/LdapContextImpl.java,234,,"                || env.get(Context.REFERRAL).equals(""ignore"")) { //$NON-NLS-1$"
109472,./TargetProjects/harmony-classlib/modules/jndi/src/main/java/org/apache/harmony/jndi/provider/ldap/LdapContextImpl.java,427,,"                if (element.getID().equalsIgnoreCase(""objectClass"")) {"
109473,./TargetProjects/harmony-classlib/modules/jndi/src/main/java/org/apache/harmony/jndi/provider/ldap/LdapContextImpl.java,432,,"                        if (!oc.contains(""javaContainer"") && oc.size() > 0) {"
109474,./TargetProjects/harmony-classlib/modules/jndi/src/main/java/org/apache/harmony/jndi/provider/ldap/LdapContextImpl.java,1443,,"            throw new NamingException(Messages.getString(""ldap.26"")); //$NON-NLS-1$"
109475,./TargetProjects/harmony-classlib/modules/jndi/src/main/java/org/apache/harmony/jndi/provider/ldap/ldapURLContext.java,100,,"            throw new InvalidNameException(Messages.getString(""jndi.26"", name)); //$NON-NLS-1$"
109476,./TargetProjects/harmony-classlib/modules/jndi/src/main/java/org/apache/harmony/jndi/provider/ldap/parser/FilterParser.java,189,,"    throw new Error(""Missing return statement in function"");"
109477,./TargetProjects/harmony-classlib/modules/jndi/src/main/java/org/apache/harmony/jndi/provider/ldap/parser/LdapUrlParser.java,238,,"    throw new Error(""Missing return statement in function"");"
109478,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/dazzle/jndi/testing/spi/DazzleContext.java,121,,"			throw new InvalidNameException(""Name cannot be empty!"");"
109479,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/dns/DNSNameParserTest.java,52,,"        String nameStr6 = ""aaaaaaaaaa.aaaaaaaaaaaaaa.aaaaaaaaaaaaaaaaaa."" +"
109480,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/dns/DNSNameParserTest.java,70,,"        assertEquals(""Wrong label"", ""com"", name.get(0));"
109481,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapAttributeTest.java,34,,"        String id = ""test"";"
109482,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapContextImplTest.java,63,,"            fail(""Should throw NullPointerException"");"
109483,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapContextImplTest.java,146,,"        assertEquals(""objectClass"", (String) filter.getValue());"
109484,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapContextImplTest.java,160,,"                ""cn=test"");"
109485,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapContextImplTest.java,180,,"        assertTrue(attr.get(0).equals(""top"")"
109486,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapContextImplTest.java,193,,"        assertEquals(""hello"", attr.get(0));"
109487,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapContextImplTest.java,204,,"        attr.add(""harmony"");"
109488,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapContextImplTest.java,205,,"        attr.add(""apache"");"
109489,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapContextImplTest.java,246,,"        Attributes attrs = context.getAttributes(""o=apache"");"
109490,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapContextImplTest.java,324,,"            context.rename(null, ""cn=hello"");"
109491,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapContextImplTest.java,377,,"        env.put(Context.REFERRAL, ""ignore"");"
109492,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapContextImplTest.java,505,,"        context.search(""test=search"", ""(objectClass=*)"", controls);"
109493,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapContextImplTest.java,647,,"        assertTrue(map.containsKey(""javaClassNames""));"
109494,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapContextImplTest.java,662,,"        assertTrue(map.containsKey(""javaClassName""));"
109495,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapContextImplTest.java,667,,"        assertTrue(map.containsKey(""javaSerializedData""));"
109496,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapContextServerMockedTest.java,98,,"        assertEquals(""2.16.840.1.113730.3.4.2"", reqCtls[0].getID());"
109497,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapContextServerMockedTest.java,278,,"                new String[] { ""ldap://localhost"" });"
109498,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapContextServerMockedTest.java,283,,"            context.getAttributes(""cn=test"");"
109499,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapContextServerMockedTest.java,458,,"                ""java.naming.ldap.attributes.binary"", ""cn"");"
109500,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapContextServerMockedTest.java,778,,"                values[4] = Utils.getBytes(""exception"");"
109501,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapNamingEnumerationTest.java,51,,"            fail(""Should throws NoSuchElementException"");"
109502,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,68,,"                        ""extensibleobject"","
109503,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,115,,"            fail(""Should throw NullPointerException."");"
109504,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,133,,"        verifyList.add(""classdefinition"");"
109505,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,134,,"        verifyList.add(""attributedefinition"");"
109506,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,135,,"        verifyList.add(""matchingrule"");"
109507,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,136,,"        verifyList.add(""syntaxdefinition"");"
109508,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,180,,"        namingEnum = schema.list(""classdefinition/javaClass"");"
109509,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,187,,"            namingEnum = schema.list(""invalid"");"
109510,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,188,,"            fail(""Should throw NameNotFoundException."");"
109511,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,194,,"            namingEnum = schema.list(""invalid/invalid/invalid"");"
109512,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,201,,"            namingEnum = schema.list(""invalid/invalid"");"
109513,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,208,,"            namingEnum = schema.list(""classdefinition/invalid"");"
109514,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,215,,"            namingEnum = schema.list(""classdefinition/javaClass/name"");"
109515,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,222,,"            namingEnum = schema.list(""classdefinition/javaClass/invalid"");"
109516,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,257,,"            fail(""Should throw OperationNotSupportedException."");"
109517,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,732,,"            assertEquals(""objectclass"", attr.getID());"
109518,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,747,,"        attrs.put(""NUMERICOID"", ""1.3.6.1.4.1.42.2.27.4.2.3.1.88.11"");"
109519,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,747,,"        attrs.put(""NUMERICOID"", ""1.3.6.1.4.1.42.2.27.4.2.3.1.88.11"");"
109520,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,748,,"        attrs.put(""NAME"", ""MMObjectClass"");"
109521,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,748,,"        attrs.put(""NAME"", ""MMObjectClass"");"
109522,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,749,,"        attrs.put(""DESC"", ""for test"");"
109523,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,749,,"        attrs.put(""DESC"", ""for test"");"
109524,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,750,,"        attrs.put(""SUP"", ""top"");"
109525,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,750,,"        attrs.put(""SUP"", ""top"");"
109526,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,751,,"        attrs.put(""STRUCTURAL"", ""true"");"
109527,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,751,,"        attrs.put(""STRUCTURAL"", ""true"");"
109528,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,752,,"        Attribute must = new BasicAttribute(""MUST"", ""cn"");"
109529,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,757,,"                ""ClassDefinition/MMObjectClass""), attrs);"
109530,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,860,,"        newAttributes.put(""NUMERICOID"", ""test"");"
109531,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,1111,,"        attrs.put(""NAME"", ""ListObjectClass"");"
109532,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,1113,,"        attrs.put(""NUMERICOID"", ""1.3.6.1.4.1.42.2.27.4.2.3.1.88.77"");"
109533,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,1115,,"        attrs.put(""STRUCTURAL"", ""fds"");"
109534,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,1122,,"                ""ClassDefinition/ListObjectClass""), attrs);"
109535,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,1193,,"            fail(""Should throw SchemaViolationException"");"
109536,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,1280,,"            fail(""Should throw SchemaViolationException."");"
109537,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,1385,,"            fail(""Should throw NPE"");"
109538,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,1474,,"        verifyList.add(""ClassDefinition"");"
109539,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,1476,,"        verifyList.add(""MatchingRule"");"
109540,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,1477,,"        verifyList.add(""SyntaxDefinition"");"
109541,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,2014,,"        Object[] filterArgs = new Object[] { ""ClassDeFInition"" };"
109542,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,2136,,"            fail(""Should throw InvalidNameException"");"
109543,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSchemaContextTest.java,2220,,"            fail(""Should throw NullPointerException"");"
109544,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSearchResultTest.java,74,,"        entries.put(""ou=harmony,o=apache,cn=test"", new BasicAttributes(""ou"","
109545,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSearchResultTest.java,75,,"                ""harmony"", true));"
109546,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSearchResultTest.java,77,,"                ""javaClassName"", String.class.getName()));"
109547,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSearchResultTest.java,94,,"        assertTrue(values.containsKey(""ou=harmony,o=apache""));"
109548,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSearchResultTest.java,100,,"        assertTrue(values.containsKey(""module=jndi""));"
109549,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapSearchResultTest.java,111,,"        entries.put(""module=jndi,o=apache,cn=test"", new BasicAttributes("
109550,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapUtilsTest.java,98,,"        LdapName dn = new LdapName(""cn=test,o=harmony"");"
109551,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapUtilsTest.java,103,,"        base = new LdapName(""o=harmony"");"
109552,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapUtilsTest.java,110,,"        assertEquals(new LdapName(""cn=test,o=apache""), relative);"
109553,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapUtilsTest.java,146,,"            fail(""Should throw NamingException"");"
109554,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapUtilsTest.java,227,,"        env.put(Context.SECURITY_PROTOCOL, ""ssl"");"
109555,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapUtilsTest.java,244,,"        env.put(""java.naming.ldap.factory.socket"", painSocketFactoryName);"
109556,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/LdapUtilsTest.java,247,,"            fail(""Should throw IllegalAccessException"");"
109557,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/ReferralExceptionTest.java,47,,"		env.put(Context.REFERRAL, ""throw"");"
109558,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/ReferralExceptionTest.java,50,,"		ReferralExceptionImpl ex = new ReferralExceptionImpl(""cn=dn"","
109559,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/ReferralExceptionTest.java,73,,"		env.put(""test.getReferralContext"", ""GetReferralContext"");"
109560,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/ext/StartTlsResponseImplTest.java,110,,"            throw new Error(""should not be here"");"
109561,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/ldapURLContextTest.java,61,,"        initialEnv.put(""test.getRootURLContext"", ""test"");"
109562,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/parser/LdapUrlParserTest.java,50,,"        assertEquals(""192.168.1.3"", parser.getHost());"
109563,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/provider/ldap/parser/LdapUrlParserTest.java,55,,"        assertEquals(""o=University,c=US"", parser.getBaseObject());"
109564,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/BinaryRefAddrTest.java,39,,"		BinaryRefAddr addr = new BinaryRefAddr(""binary"", ab);"
109565,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/BinaryRefAddrTest.java,189,,"		String type = ""Binary Address"";"
109566,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/BindingTest.java,56,,"		p = new Binding(""name1"", new Integer(1));"
109567,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/BindingTest.java,95,,"		p = new Binding(""name"", null);"
109568,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/CompositeNameTest.java,161,,"        assertEquals(""O=/s"", name.get(0));"
109569,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/CompositeNameTest.java,172,,"        assertEquals(""O=\\s"", name.toString());"
109570,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/CompositeNameTest.java,585,,"		Name name1 = new CompositeName(""a/b/c/d"");"
109571,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/CompoundNameTest.java,48,,"		props.put(""jndi.syntax.direction"", ""left_to_right"");"
109572,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/CompoundNameTest.java,48,,"		props.put(""jndi.syntax.direction"", ""left_to_right"");"
109573,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/CompoundNameTest.java,49,,"		props.put(""jndi.syntax.separator"", ""/"");"
109574,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/CompoundNameTest.java,50,,"		props.put(""jndi.syntax.escape"", ""\\"");"
109575,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/CompoundNameTest.java,51,,"		props.put(""jndi.syntax.beginquote"", ""<"");"
109576,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/CompoundNameTest.java,52,,"		props.put(""jndi.syntax.endquote"", "">"");"
109577,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/CompoundNameTest.java,53,,"		props.put(""jndi.syntax.beginquote2"", ""'"");"
109578,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/CompoundNameTest.java,54,,"		props.put(""jndi.syntax.endquote2"", ""'"");"
109579,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/CompoundNameTest.java,55,,"		props.put(""jndi.syntax.ignorecase"", ""false"");"
109580,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/CompoundNameTest.java,55,,"		props.put(""jndi.syntax.ignorecase"", ""false"");"
109581,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/CompoundNameTest.java,56,,"		props.put(""jndi.syntax.trimblanks"", ""false"");"
109582,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/CompoundNameTest.java,57,,"		props.put(""jndi.syntax.separator.ava"", "","");"
109583,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/CompoundNameTest.java,58,,"		props.put(""jndi.syntax.separator.typeval"", ""="");"
109584,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/CompoundNameTest.java,76,,"		name = new CompoundName(""a/b"", props);"
109585,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/CompoundNameTest.java,97,,"			new CompoundName(""abc"", null);"
109586,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/CompoundNameTest.java,108,,"		name = new CompoundName(""a/b/c"", props);"
109587,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/CompoundNameTest.java,151,,"		name = new CompoundName(""<a/a>/b/c"", props);"
109588,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/CompoundNameTest.java,166,,"			fail(""IllegalArgumentException expected"");"
109589,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/CompoundNameTest.java,180,,"		assertEquals(""a/b/c/d"", name.toString());"
109590,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/CompoundNameTest.java,206,,"		assertNameEquals(name, ""a/a"", ""b"", ""c"");"
109591,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/CompoundNameTest.java,228,,"		assertNameEquals(name, ""a'a"", ""a'a"", ""b"", ""c"");"
109592,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/CompoundNameTest.java,251,,"		assertNameEquals(name, ""a<a"", ""a>a"", ""b"", ""c"");"
109593,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/CompoundNameTest.java,270,,"		name = new CompoundName(""<a\\/a>"", props);"
109594,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/CompoundNameTest.java,516,,"		name2 = new CompoundName(""a=b,c=d/a=b,c=d"", props);"
109595,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/CompoundNameTest.java,518,,"		props.put(""jndi.syntax.trimblanks"", ""true"");"
109596,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/CompoundNameTest.java,689,,"		assertNameEquals(new CompoundName(""a/\\/b/c"", props), ""a"", ""/b"", ""c"");"
109597,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/CompoundNameTest.java,693,,"		assertNameEquals(new CompoundName(""a/<b/>/c"", props), ""a"", ""b/"", ""c"");"
109598,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/CompoundNameTest.java,1117,,"			fail(""InvalidNameException expected"");"
109599,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/CompoundNameTest.java,1462,,"		name = new CompoundName(""c/b/a"", props);"
109600,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/CompoundNameTest.java,1607,,"		testToString(""a/b\\"", ""fail"");"
109601,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/InitialContextEnvTest.java,49,,"		env.put(""java.naming.factory.control"","
109602,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/InitialContextEnvTest.java,53,,"		env.put(""java.naming.factory.url.pkgs"","
109603,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/InitialContextEnvTest.java,56,,"		env.put(""java.naming.provider.url"", ""java.naming.provider.url.env"");"
109604,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/InitialContextEnvTest.java,57,,"		env.put(""java.naming.authoritative"", ""java.naming.authoritative.env"");"
109605,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/InitialContextEnvTest.java,58,,"		env.put(""java.naming.batchsize"", ""java.naming.batchsize.app1"");"
109606,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/InitialContextEnvTest.java,58,,"		env.put(""java.naming.batchsize"", ""java.naming.batchsize.app1"");"
109607,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/InitialContextEnvTest.java,59,,"		env.put(""java.naming.dns.url"", ""java.naming.dns.url.env"");"
109608,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/InitialContextEnvTest.java,60,,"		env.put(""java.naming.language"", ""java.naming.language.env"");"
109609,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/InitialContextEnvTest.java,61,,"		env.put(""java.naming.referral"", ""java.naming.referral.env"");"
109610,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/InitialContextEnvTest.java,62,,"		env.put(""java.naming.security.authentication"","
109611,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/InitialContextEnvTest.java,64,,"		env.put(""java.naming.security.credentials"","
109612,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/InitialContextEnvTest.java,66,,"		env.put(""java.naming.security.principal"","
109613,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/InitialContextEnvTest.java,68,,"		env.put(""java.naming.security.protocol"","
109614,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/InitialContextMockTest.java,51,,"                ""org.apache.harmony.jndi.tests.javax.naming.spi.mock.MockContextFactory"");"
109615,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/InitialContextMockTest.java,107,,"        Name name = new CompositeName(""'http://www.apache.org/foundation'"");"
109616,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/InitialContextMockTest.java,151,,"            fail(""Should throw NullPointerException."");"
109617,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/InitialContextMockTest.java,160,,"        Name name = new CompositeName(""hmy"");"
109618,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/InitialContextMockTest.java,206,,"            initialContext.composeName(null, new CompositeName(""prefix"")); //$NON-NLS-1$"
109619,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/InitialContextMockTest.java,213,,"                new CompositeName(""a/b/c""), (CompositeName) null); //$NON-NLS-1$"
109620,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/InitialContextMockTest.java,225,,"                new CompositeName(""testString""), new CompositeName(""a/b/c/d"")); //$NON-NLS-1$//$NON-NLS-2$"
109621,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/InitialContextMockTest.java,620,,"        String name1 = ""sub1"";"
109622,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/LinkExceptionTest.java,59,,"		LinkException ex = new LinkException(""msg"");"
109623,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/LinkExceptionTest.java,64,,"		ex.setLinkResolvedObj(""resolved obj sample"");"
109624,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/LinkExceptionTest.java,76,,"		ex.setLinkRemainingName(new CompositeName(""a/b/c""));"
109625,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/LinkExceptionTest.java,96,,"		LinkException ex = new LinkException(""Test"");"
109626,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/LinkLoopExceptionTest.java,32,,"		LinkLoopException ex = new LinkLoopException(""Test"");"
109627,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/LinkRefTest.java,37,,"		Name name = new CompositeName(""www.apache.org/index.html"");"
109628,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/MalformedLinkExceptionTest.java,31,,"		MalformedLinkException ex = new MalformedLinkException(""Test"");"
109629,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/NameClassPairTest.java,53,,"		p = new NameClassPair(""name1"", ""class1"");"
109630,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/NamingExceptionTest.java,73,,"		ex.setRemainingName(new CompositeName(""harmony/apache/org""));"
109631,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/NamingExceptionTest.java,81,,"		Name name = new CompositeName(""element/parent"");"
109632,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ReferenceTest.java,49,,"		String className = ""java.util.Hashtable"";"
109633,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ReferenceTest.java,75,,"		String type = ""Binary"";"
109634,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ReferenceTest.java,202,,"			fail(""This should throw a ArrayIndexOutOfBoundsException"");"
109635,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ReferenceTest.java,330,,"		String className = ""java.lang.String"";"
109636,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ReferenceTest.java,331,,"		String classFactory = ""class factory"";"
109637,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ReferenceTest.java,332,,"		String location = ""/home/neuser"";"
109638,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ReferenceTest.java,346,,"		StringRefAddr addr = new StringRefAddr(""String address"","
109639,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ReferenceTest.java,347,,"				""this is a string"");"
109640,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/StringRefAddrTest.java,47,,"		StringRefAddr addr = new StringRefAddr(""type"", ""content"");"
109641,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/StringRefAddrTest.java,47,,"		StringRefAddr addr = new StringRefAddr(""type"", ""content"");"
109642,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/StringRefAddrTest.java,73,,"		String type = ""String address"";"
109643,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/StringRefAddrTest.java,74,,"		String address = ""this is a simple object"";"
109644,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/StringRefAddrTest.java,90,,"		String type = ""null"";"
109645,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/directory/AttributeModificationExceptionTest.java,58,,"				""sample message"");"
109646,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/directory/AttributeModificationExceptionTest.java,60,,"				DirContext.ADD_ATTRIBUTE, new BasicAttribute(""sample id"","
109647,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/directory/AttributeModificationExceptionTest.java,61,,"						""sample value"")), };"
109648,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/directory/BasicAttributeTest.java,153,,"		String[] team = { ""Blue"", ""Yellow"", ""Red"", };"
109649,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/directory/BasicAttributeTest.java,153,,"		String[] team = { ""Blue"", ""Yellow"", ""Red"", };"
109650,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/directory/BasicAttributeTest.java,153,,"		String[] team = { ""Blue"", ""Yellow"", ""Red"", };"
109651,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/directory/BasicAttributeTest.java,686,,"			fail(""Should throw IndexOutOfBoundsException."");"
109652,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/directory/BasicAttributesTest.java,65,,"		String id = ""Attribute one"";"
109653,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/directory/BasicAttributesTest.java,80,,"			fail(""Should throw NullPointerException."");"
109654,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/directory/BasicAttributesTest.java,487,,"			ignoreCaseAttributes.put(""ID:"" + i, ""Value: "" + i);"
109655,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/directory/BasicAttributesTest.java,487,,"			ignoreCaseAttributes.put(""ID:"" + i, ""Value: "" + i);"
109656,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/directory/InitialDirContextTest.java,117,,"		testIsUrlStringName(""http://www.apache.org/foundation"", ""http"");"
109657,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/directory/InitialDirContextTest.java,122,,"		testIsUrlStringName(""https://www.apache.org/foundation"", ""https"");"
109658,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/directory/InitialDirContextTest.java,127,,"		testIsUrlStringName(""abc://www.apache.org/foundation"", ""abc"");"
109659,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/directory/InitialDirContextTest.java,146,,"		testIsUrlStringName(""HTTP2://www.apache.org/foundation"", ""HTTP2"");"
109660,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/directory/InitialDirContextTest.java,155,,"		testIsUrlStringName(""a_b_c://www.apache.org/foundation"", ""a_b_c"");"
109661,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/directory/InitialDirContextTest.java,175,,"		assertTrue(InvokeRecord.equals(null, ""bind"", n, o, a));"
109662,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/directory/InitialDirContextTest.java,197,,"		assertTrue(InvokeRecord.equals(null, ""createSubcontext"", n, a));"
109663,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/directory/InitialDirContextTest.java,220,,"			assertTrue(InvokeRecord.equals(null, ""getAttributes"", n));"
109664,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/directory/InitialDirContextTest.java,280,,"		assertTrue(InvokeRecord.equals(null, ""getSchema"", n));"
109665,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/directory/InitialDirContextTest.java,302,,"		assertTrue(InvokeRecord.equals(null, ""getSchemaClassDefinition"", n));"
109666,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/directory/InitialDirContextTest.java,326,,"		assertTrue(InvokeRecord.equals(null, ""modifyAttributes"", n, i, a));"
109667,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/directory/InitialDirContextTest.java,375,,"		assertTrue(InvokeRecord.equals(null, ""rebind"", n, o, a));"
109668,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/directory/InitialDirContextTest.java,397,,"		assertTrue(InvokeRecord.equals(null, ""search"", n, a));"
109669,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/directory/SearchControlsTest.java,54,,"				new String[] { ""id1"", ""id2"" }, true, true);"
109670,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/directory/SearchControlsTest.java,54,,"				new String[] { ""id1"", ""id2"" }, true, true);"
109671,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/directory/SearchResultTest.java,39,,"		r = new SearchResult(""name"", ""obj"", attrs);"
109672,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/directory/SearchResultTest.java,39,,"		r = new SearchResult(""name"", ""obj"", attrs);"
109673,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/directory/SearchResultTest.java,41,,"		assertEquals(""java.lang.String"", r.getClassName());"
109674,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/directory/SearchResultTest.java,83,,"		r = new SearchResult(""name"", ""classname"", ""obj"", attrs);"
109675,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/directory/SearchResultTest.java,153,,"			fail(""no illegal argument exception"");"
109676,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/event/NamingEventTest.java,54,,"                ""anything"");"
109677,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/event/NamingEventTest.java,180,,"            fail(""should throw ClassCastException"");"
109678,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/event/NamingEventTest.java,275,,"            throw new UnsupportedOperationException(""in EventContextMockUp"");"
109679,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/event/NamingExceptionEventTest.java,101,,"			throw new UnsupportedOperationException(""in EventContextMockUp"");"
109680,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/LdapNameTest.java,293,,"        ln.add(""t=test"");"
109681,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/LdapNameTest.java,392,,"            new LdapName(""test"");"
109682,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/LdapNameTest.java,393,,"            fail(""InvalidNameException expected"");"
109683,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/LdapNameTest.java,403,,"            new LdapName("",t=test"");"
109684,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/LdapNameTest.java,698,,"            fail(""Should throw InvalidNameException"");"
109685,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/LdapNameTest.java,915,,"            fail(""NPE expected"");"
109686,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/LdapNameTest.java,1531,,"            fail(""IndexOutOfBoundsException expected"");"
109687,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/LdapNameTest.java,1593,,"        test.add(1, new Rdn(""t1=test""));"
109688,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/LdapNameTest.java,1750,,"        assertEquals(""uid=userid"", ln.getRdn(0).toString());"
109689,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/LdapNameTest.java,2042,,"        String test = ""t=test,cn=test"";"
109690,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/LdapNameTest.java,2564,,"        ln.addAll(new LdapName(""cn=common,uid=userid""));"
109691,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/LdapNameTest.java,2854,,"            test.add(new Rdn(""cn=common""));"
109692,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/LdapNameTest.java,2997,,"        assertEquals(""cn=common,t=test"", ln.toString());"
109693,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/LdapNameTest.java,3445,,"        assertEquals(""t=test,cn=common"", ln.toString());"
109694,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/RdnTest.java,350,,"            fail(""InvalidNameException expected"");"
109695,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/RdnTest.java,450,,"                ""asd=asd=asd=asd=asd=asd=asd=Asd<asd<asd>asd>asd>asd+"""
109696,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/RdnTest.java,454,,"                        + ""a=<z>=at+a=<z>=at+a=<z>=at+a=<z>=at+a=>z<=at+a=>z<=at+a=>z<=at"""
109697,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/RdnTest.java,455,,"                        + ""+v================================+a=+a=+a=+a=+a=+a=+a=+a=+a=+a=+a=+a=+a="""
109698,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/RdnTest.java,535,,"            Rdn rdn1 = new Rdn(""t"", ""test"");"
109699,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/RdnTest.java,576,,"        x = new Rdn(""t=test"");"
109700,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/RdnTest.java,767,,"        assertTrue(new Rdn(""t=test+t=asd+t=that"").equals(new Rdn("
109701,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/RdnTest.java,800,,"            fail(""Should throw an exception."");"
109702,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/SortControlTest.java,81,,"        SortKey[] sk = { new SortKey(""pepe"", false, ""leo"") };"
109703,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/SortControlTest.java,89,,"        String[] sk = {""pepe"", null, """", ""haha"" };"
109704,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/SortKeyTest.java,29,,"        SortKey sk = new SortKey(""attributeId"");"
109705,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/TestInitialLdapContext.java,57,,"        System.setProperty(Context.INITIAL_CONTEXT_FACTORY, ""org.apache.harmony.jndi.tests.javax.naming.spi.mock.ldap.MockContextFactory"");"
109706,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/TestPagedResultsControls.java,80,,"			fail(""Failed with:""+e);"
109707,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/TestPagedResultsResponseControl.java,193,,"			fail(""The arguments are ok."");"
109708,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/TestPagedResultsResponseControl.java,265,,"			fail(""Failed with:""+e);"
109709,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/TestSortResponseControl.java,115,,"			fail(""Failed with:""+e);"
109710,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/TestSortResponseControl.java,189,,"			fail(""The bytes are not in the ASN.1 BER."");"
109711,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/TestSortResponseControl.java,209,,"			fail(""The bytes are in the ASN.1 BER."");"
109712,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/TestSortResponseControl.java,368,,"		String Id=""test"";"
109713,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/TestSortResponseControl.java,561,,"			fail(""The exception must be like NamingException"");"
109714,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/extras/TestRdnParser.java,193,,"				""\\3c"",""\\3d"",""\\3e"",""\\3b"",""\\5c""};"
109715,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/extras/TestRdnParser.java,308,,"			fail(""Failed with:""+e);"
109716,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/extras/TestRdnParser.java,439,,"				fail(""This is wrong.""+i);"
109717,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/extras/TestSerialization.java,84,,"			fail(""Failed with:""+e);"
109718,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/integration/TestLdapNameIntegration.java,66,,"		aux=new Rdn(""t=test"");"
109719,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/integration/TestLdapNameIntegration.java,94,,"			temp.add(0,""f=flag"");"
109720,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/integration/TestLdapNameIntegration.java,104,,"			fail(""Failed with:""+e);"
109721,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/integration/TestLdapNameIntegration.java,139,,"			if(!temp.clone().getClass().equals(temp.getClass()))fail(""Fail."");"
109722,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/integration/TestRdnIntegration.java,77,,"			Rdn x1=new Rdn(""t=test"");"
109723,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/integration/TestRdnIntegration.java,83,,"			assertNotNull(""Should be not null."",x1);"
109724,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/whitebox/TestLdapNameWhiteBoxDevelopment.java,68,,"			LdapName x=new LdapName(""t=test"");"
109725,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/whitebox/TestLdapNameWhiteBoxDevelopment.java,72,,"			fail(""Failed with:""+e);"
109726,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/DirectoryManagerBuilderTest.java,93,,"				""org.apache.harmony.jndi.tests.javax.naming.spi.mock.MockDirObjectFactoryNoException"","
109727,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/DirectoryManagerBuilderTest.java,110,,"				""dazzle.jndi.testing.spi.DazzleContextFactory"");"
109728,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/DirectoryManagerTest.java,56,,"                ""org.apache.harmony.jndi.tests.javax.naming.spi.mock.MockDirStateFactory"");"
109729,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/DirectoryManagerTest.java,95,,"                ""dazzle.jndi.testing.spi.DazzleContextFactory"");"
109730,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/DirectoryManagerTest.java,97,,"                ""org.apache.harmony.jndi.tests.javax.naming.spi.mock.MockDirObjectFactory"", null);"
109731,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/DirectoryManagerTest.java,181,,"            fail(""Should throw NullPointerException."");"
109732,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/DirectoryManagerTest.java,192,,"            fail(""Should throw NamingException."");"
109733,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/DirectoryManagerTest.java,235,,"        env.put(Context.URL_PKG_PREFIXES, ""org.apache.harmony.jndi.tests.javax.naming.spi.mock"");"
109734,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/DirectoryManagerTest.java,237,,"        MockRefAddr mockAddr = new MockRefAddr(""URL"", ""dire://www.apache.org/"");"
109735,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/DirectoryManagerTest.java,237,,"        MockRefAddr mockAddr = new MockRefAddr(""URL"", ""dire://www.apache.org/"");"
109736,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/DirectoryManagerTest.java,244,,"                ""compositename""), new MockContext(new Hashtable<String, String>()), env, a);"
109737,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/DirectoryManagerTest.java,310,,"        StringRefAddr notUrlTypeAddr = new StringRefAddr(""uurl"","
109738,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/DirectoryManagerTest.java,314,,"        StringRefAddr noSchemeAddr = new StringRefAddr(""URL"", ""www.apache.org"");"
109739,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/DirectoryManagerTest.java,318,,"                ""httpss://www.apache.org/"");"
109740,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/DirectoryManagerTest.java,323,,"                ""news://www.apache.org/"");"
109741,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/DirectoryManagerTest.java,366,,"        myTestGetObjectInstance_NoBuilder_ReferenceValidURL(""url"");"
109742,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/DirectoryManagerTest.java,470,,"                    ""org.apache.harmony.jndi.tests.javax.naming.spi.dummy"", new Hashtable<Object, Object>());"
109743,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/DirectoryManagerTest.java,985,,"            fail(""NamingException occured"");"
109744,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/DirectoryManagerTest.java,1070,,"        Object o = ""object"";"
109745,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/DirectoryManagerTest.java,1169,,"            assertTrue(e.getMessage().indexOf(""Simulated"") >= 0);"
109746,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/NamingManagerBuilderTest.java,93,,"				""dazzle.jndi.testing.spi.DazzleContextFactory"");"
109747,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/NamingManagerBuilderTest.java,112,,"			fail(""Should throw NullPointerException."");"
109748,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/NamingManagerBuilderTest.java,131,,"			fail(""Should throw NamingException."");"
109749,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/NamingManagerBuilderTest.java,302,,"				""org.apache.harmony.jndi.tests.javax.naming.spi.NamingManagerTest$MockObjectFactoryNoException"","
109750,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/NamingManagerExploreTest.java,59,,"		Context urlContext = NamingManager.getURLContext(""http"", env);"
109751,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/NamingManagerTest.java,97,,"				""dazzle.jndi.testing.spi.DazzleContextFactory"");"
109752,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/NamingManagerTest.java,105,,"						""org.apache.harmony.jndi.tests.javax.naming.spi.NamingManagerTest$MagicMockStateFactory"");"
109753,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/NamingManagerTest.java,117,,"	@SuppressWarnings(""unchecked"")"
109754,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/NamingManagerTest.java,284,,"				""org.apache.harmony.jndi.tests.javax.naming.spi.NamingManagerTest$MockObjectFactory"","
109755,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/NamingManagerTest.java,344,,"			fail(""Should throw NullPointerException."");"
109756,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/NamingManagerTest.java,354,,"			fail(""Should throw NamingException."");"
109757,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/NamingManagerTest.java,400,,"		env.put(Context.URL_PKG_PREFIXES, ""org.apache.harmony.jndi.tests.javax.naming.spi.mock"");"
109758,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/NamingManagerTest.java,402,,"		MockRefAddr mockAddr = new MockRefAddr(""URL"", ""ftp://www.apache.org/"");"
109759,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/NamingManagerTest.java,402,,"		MockRefAddr mockAddr = new MockRefAddr(""URL"", ""ftp://www.apache.org/"");"
109760,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/NamingManagerTest.java,408,,"				""compositename""), new MockContext(new Hashtable<String, Object>()), env);"
109761,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/NamingManagerTest.java,472,,"		StringRefAddr notUrlTypeAddr = new StringRefAddr(""uurl"","
109762,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/NamingManagerTest.java,475,,"		StringRefAddr noSchemeAddr = new StringRefAddr(""URL"", ""www.apache.org"");"
109763,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/NamingManagerTest.java,478,,"				""httpss://www.apache.org/"");"
109764,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/NamingManagerTest.java,481,,"				""news://www.apache.org/"");"
109765,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/NamingManagerTest.java,520,,"		myTestGetObjectInstance_NoBuilder_ReferenceValidURL(""url"");"
109766,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/NamingManagerTest.java,621,,"			writeProviderResource(""org.apache.harmony.jndi.tests.javax.naming.spi.dummy"","
109767,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/NamingManagerTest.java,1158,,"		Object o = ""object"";"
109768,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/NamingManagerTest.java,1273,,"			assertTrue(e.getMessage().indexOf(""Simulated"") >= 0);"
109769,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/NamingManagerTest.java,1483,,"		String schema = ""http"";"
109770,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/NamingManagerTest.java,1558,,"			fail(""NamingException expected"");"
109771,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/NamingManagerTest.java,1713,,"		cpe.setResolvedObj(""resolved object"");"
109772,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/NamingManagerTest.java,1714,,"		cpe.setAltName(new CompositeName(""abc/abc""));"
109773,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/NamingManagerTest.java,1719,,"						""org.apache.harmony.jndi.tests.javax.naming.spi.NamingManagerTest$MockContextObjectFactory"");"
109774,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/ResolveResultTest.java,109,,"		props.put(""jndi.syntax.separator"", ""/"");"
109775,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/ResolveResultTest.java,110,,"		props.put(""jndi.syntax.direction"", ""left_to_right"");"
109776,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/ResolveResultTest.java,110,,"		props.put(""jndi.syntax.direction"", ""left_to_right"");"
109777,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/ResolveResultTest.java,111,,"		props.put(""jndi.syntax.escape"", ""\\"");"
109778,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/ResolveResultTest.java,112,,"		props.put(""jndi.syntax.beginquote"", ""<"");"
109779,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/ResolveResultTest.java,113,,"		props.put(""jndi.syntax.endquote"", "">"");"
109780,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/ResolveResultTest.java,114,,"		props.put(""jndi.syntax.beginquote2"", ""'"");"
109781,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/ResolveResultTest.java,115,,"		props.put(""jndi.syntax.endquote2"", ""'"");"
109782,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/ResolveResultTest.java,116,,"		props.put(""jndi.syntax.ignorecase"", ""false"");"
109783,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/ResolveResultTest.java,116,,"		props.put(""jndi.syntax.ignorecase"", ""false"");"
109784,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/ResolveResultTest.java,117,,"		props.put(""jndi.syntax.trimblanks"", ""false"");"
109785,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/mock/MockContext.java,89,,"		InvokeRecord.set((String) this.props.get(""url.schema""), n, o);"
109786,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/mock/MockDirContext.java,44,,"		InvokeRecord.set((String) getEnvironment().get(""url.schema""), ""bind"","
109787,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/mock/MockDirContext.java,93,,"				""getAttributes"", name);"
109788,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/mock/MockDirContext.java,188,,"				""modifyAttributes"", name, new Integer(i), attributes);"
109789,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/mock/MockDirContext.java,262,,"		InvokeRecord.set((String) getEnvironment().get(""url.schema""), ""search"","
109790,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/mock/MockDirContext2.java,44,,"		InvokeRecord.set((String) getEnvironment().get(""url.schema""), ""bind"","
109791,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/mock/MockDirContext2.java,93,,"				""getAttributes"", name);"
109792,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/mock/MockDirContext2.java,188,,"				""modifyAttributes"", name, new Integer(i), attributes);"
109793,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/mock/MockDirContext2.java,262,,"		InvokeRecord.set((String) getEnvironment().get(""url.schema""), ""search"","
109794,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/mock/MockLdapContext.java,43,,"		InvokeRecord.set((String) this.props.get(""url.schema""), e);"
109795,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/spi/mock/ldap/MockStartTlsResponse.java,45,,"        throw new Error(""should not be here"");"
109796,./TargetProjects/harmony-classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/util/Util.java,105,,"			return ""NULL"";"
109797,./TargetProjects/harmony-classlib/modules/lang-management/src/main/java/java/lang/management/ThreadInfo.java,90,,"            String[] attributeTypes = { ""java.lang.Long"", ""java.lang.String"","
109798,./TargetProjects/harmony-classlib/modules/lang-management/src/main/java/java/lang/management/ThreadInfo.java,90,,"            String[] attributeTypes = { ""java.lang.Long"", ""java.lang.String"","
109799,./TargetProjects/harmony-classlib/modules/lang-management/src/main/java/org/apache/harmony/lang/management/ManagementUtils.java,221,,"            operations[2] = new MBeanOperationInfo(""getThreadInfo"","
109800,./TargetProjects/harmony-classlib/modules/lang-management/src/main/java/org/apache/harmony/lang/management/ManagementUtils.java,228,,"            params[0] = new MBeanParameterInfo(""ids"", ""[J"", ""ids"");"
109801,./TargetProjects/harmony-classlib/modules/lang-management/src/main/java/org/apache/harmony/lang/management/ManagementUtils.java,238,,"            params[1] = new MBeanParameterInfo(""maxDepth"", Integer.TYPE"
109802,./TargetProjects/harmony-classlib/modules/lang-management/src/main/java/org/apache/harmony/lang/management/ManagementUtils.java,293,,"                ""[Ljava.lang.String;"", ""InputArguments"", true, false, false);"
109803,./TargetProjects/harmony-classlib/modules/lang-management/src/main/java/org/apache/harmony/lang/management/ManagementUtils.java,299,,"        attributes[5] = new MBeanAttributeInfo(""Name"", String.class.getName(),"
109804,./TargetProjects/harmony-classlib/modules/lang-management/src/main/java/org/apache/harmony/lang/management/ManagementUtils.java,418,,"        attributes[14] = new MBeanAttributeInfo(""Valid"","
109805,./TargetProjects/harmony-classlib/modules/lang-management/src/main/java/org/apache/harmony/lang/management/ManagementUtils.java,458,,"        attributes[3] = new MBeanAttributeInfo(""Verbose"", Boolean.TYPE"
109806,./TargetProjects/harmony-classlib/modules/lang-management/src/main/java/org/apache/harmony/lang/management/ManagementUtils.java,498,,"        attributes[0] = new MBeanAttributeInfo(""MemoryPoolNames"","
109807,./TargetProjects/harmony-classlib/modules/lang-management/src/main/java/org/apache/harmony/lang/management/ManagementUtils.java,534,,"            params[0] = new MBeanParameterInfo(""loggerName"", String.class"
109808,./TargetProjects/harmony-classlib/modules/lang-management/src/main/java/org/apache/harmony/lang/management/ManagementUtils.java,1121,,"    @SuppressWarnings(""unchecked"")"
109809,./TargetProjects/harmony-classlib/modules/lang-management/src/main/java/org/apache/harmony/lang/management/MemoryPoolMXBeanImpl.java,109,,"                    ""VM does not support collection usage threshold."");"
109810,./TargetProjects/harmony-classlib/modules/lang-management/src/main/java/org/apache/harmony/lang/management/MemoryPoolMXBeanImpl.java,228,,"                    ""VM does not support usage threshold."");"
109811,./TargetProjects/harmony-classlib/modules/lang-management/src/main/java/org/apache/harmony/lang/management/OpenTypeMappingIHandler.java,560,,"        if (methodName.startsWith(""get"")) {"
109812,./TargetProjects/harmony-classlib/modules/lang-management/src/main/java/org/apache/harmony/lang/management/OpenTypeMappingIHandler.java,587,,"            if (methodName.startsWith(""set"")) {"
109813,./TargetProjects/harmony-classlib/modules/lang-management/src/main/java/org/apache/harmony/lang/management/ThreadMXBeanImpl.java,69,,"            security.checkPermission(new ManagementPermission(""monitor""));"
109814,./TargetProjects/harmony-classlib/modules/lang-management/src/main/java/org/apache/harmony/lang/management/ThreadMXBeanImpl.java,181,,"                    ""Thread id must be greater than 0."");"
109815,./TargetProjects/harmony-classlib/modules/lang-management/src/test/api/java/org/apache/harmony/lang/management/tests/java/lang/management/ManagementFactoryTest.java,211,,"            fail(""should have thrown IllegalArgumentException"");"
109816,./TargetProjects/harmony-classlib/modules/lang-management/src/test/api/java/org/apache/harmony/lang/management/tests/java/lang/management/ManagementPermissionTest.java,27,,"        ManagementPermission control = new ManagementPermission(""control"");"
109817,./TargetProjects/harmony-classlib/modules/lang-management/src/test/api/java/org/apache/harmony/lang/management/tests/java/lang/management/ManagementPermissionTest.java,30,,"        ManagementPermission monitor = new ManagementPermission(""monitor"");"
109818,./TargetProjects/harmony-classlib/modules/lang-management/src/test/api/java/org/apache/harmony/lang/management/tests/java/lang/management/MemoryNotificationInfoTest.java,55,,"            new MemoryNotificationInfo(""poolName"", (MemoryUsage) null,"
109819,./TargetProjects/harmony-classlib/modules/lang-management/src/test/api/java/org/apache/harmony/lang/management/tests/java/lang/management/MemoryNotificationInfoTest.java,69,,"        final MemoryNotificationInfo memoryNotifyInfo = new MemoryNotificationInfo(""Lloyd"", memoryUsage, 42);"
109820,./TargetProjects/harmony-classlib/modules/lang-management/src/test/api/java/org/apache/harmony/lang/management/tests/java/lang/management/MemoryNotificationInfoTest.java,104,,"        String[] names = { ""poolName"", ""usage"", ""count"" };"
109821,./TargetProjects/harmony-classlib/modules/lang-management/src/test/api/java/org/apache/harmony/lang/management/tests/java/lang/management/MemoryNotificationInfoTest.java,104,,"        String[] names = { ""poolName"", ""usage"", ""count"" };"
109822,./TargetProjects/harmony-classlib/modules/lang-management/src/test/api/java/org/apache/harmony/lang/management/tests/java/lang/management/MemoryNotificationInfoTest.java,113,,"            fail(""should throw IllegalArgumentException"");"
109823,./TargetProjects/harmony-classlib/modules/lang-management/src/test/api/java/org/apache/harmony/lang/management/tests/java/lang/management/MemoryNotificationInfoTest.java,121,,"        Object[] values = { ""TestPoolName"", null, new Long(-42) };"
109824,./TargetProjects/harmony-classlib/modules/lang-management/src/test/api/java/org/apache/harmony/lang/management/tests/java/lang/management/MemoryPoolMXBeanTest.java,74,,"                    fail(""Should have thrown UnsupportedOperationException"");"
109825,./TargetProjects/harmony-classlib/modules/lang-management/src/test/api/java/org/apache/harmony/lang/management/tests/java/lang/management/MemoryUsage2Test.java,70,,"            fail(""should have thrown IllegalArgumentException"");"
109826,./TargetProjects/harmony-classlib/modules/lang-management/src/test/api/java/org/apache/harmony/lang/management/tests/java/lang/management/MemoryUsageTest.java,37,,"        String[] itemNames = { ""init"", ""used"", ""committed"", ""max"" };"
109827,./TargetProjects/harmony-classlib/modules/lang-management/src/test/api/java/org/apache/harmony/lang/management/tests/java/lang/management/MemoryUsageTest.java,37,,"        String[] itemNames = { ""init"", ""used"", ""committed"", ""max"" };"
109828,./TargetProjects/harmony-classlib/modules/lang-management/src/test/api/java/org/apache/harmony/lang/management/tests/java/lang/management/MemoryUsageTest.java,37,,"        String[] itemNames = { ""init"", ""used"", ""committed"", ""max"" };"
109829,./TargetProjects/harmony-classlib/modules/lang-management/src/test/api/java/org/apache/harmony/lang/management/tests/java/lang/management/MemoryUsageTest.java,37,,"        String[] itemNames = { ""init"", ""used"", ""committed"", ""max"" };"
109830,./TargetProjects/harmony-classlib/modules/lang-management/src/test/api/java/org/apache/harmony/lang/management/tests/java/lang/management/MemoryUsageTest.java,141,,"            fail(""should throw NullPointerException"");"
109831,./TargetProjects/harmony-classlib/modules/lang-management/src/test/api/java/org/apache/harmony/lang/management/tests/java/lang/management/ThreadMXBeanTest.java,81,,"                fail(""Should have thrown an UnsupportedOperationException!"");"
109832,./TargetProjects/harmony-classlib/modules/lang-management/src/test/api/java/org/apache/harmony/lang/management/tests/java/lang/management/ThreadMXBeanTest.java,171,,"            fail(""Should have thrown an IllegalArgumentException"");"
109833,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ClassLoadingMXBeanImplTest.java,58,,"        assertTrue(((Integer) (mb.getAttribute(""LoadedClassCount""))) > -1);"
109834,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ClassLoadingMXBeanImplTest.java,59,,"        assertTrue(((Long) (mb.getAttribute(""TotalLoadedClassCount""))) > -1);"
109835,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ClassLoadingMXBeanImplTest.java,60,,"        assertTrue(((Long) (mb.getAttribute(""UnloadedClassCount""))) > -1);"
109836,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ClassLoadingMXBeanImplTest.java,64,,"        boolean verboseVal = ((Boolean) (mb.getAttribute(""Verbose"")));"
109837,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ClassLoadingMXBeanImplTest.java,69,,"            fail(""Should have thrown an AttributeNotFoundException."");"
109838,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/CompilationMXBeanImplTest.java,57,,"        assertTrue(mb.getAttribute(""Name"").getClass().equals(String.class));"
109839,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/CompilationMXBeanImplTest.java,60,,"            assertTrue(((Long) mb.getAttribute(""TotalCompilationTime"")) > -1);"
109840,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/CompilationMXBeanImplTest.java,72,,"                .getAttribute(""CompilationTimeMonitoringSupported"")));"
109841,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/CompilationMXBeanImplTest.java,77,,"            fail(""Should have thrown an AttributeNotFoundException."");"
109842,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/GarbageCollectorMXBeanImplTest.java,78,,"                if (name.equals(""Valid"")) {"
109843,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/GarbageCollectorMXBeanImplTest.java,82,,"                } else if (name.equals(""Name"")) {"
109844,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/GarbageCollectorMXBeanImplTest.java,86,,"                } else if (name.equals(""MemoryPoolNames"")) {"
109845,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/GarbageCollectorMXBeanImplTest.java,95,,"                } else if (name.equals(""CollectionCount"")) {"
109846,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/GarbageCollectorMXBeanImplTest.java,101,,"                } else if (name.equals(""CollectionTime"")) {"
109847,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/GarbageCollectorMXBeanImplTest.java,196,,"                fail(""Should have thrown an AttributeNotFoundException."");"
109848,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/LoggingMXBeanImplTest.java,70,,"        assertNotNull(mb.getAttribute(""LoggerNames""));"
109849,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/MemoryMXBeanImplTest.java,69,,"        assertNotNull(mb.getAttribute(""HeapMemoryUsage""));"
109850,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/MemoryMXBeanImplTest.java,74,,"        assertNotNull(mb.getAttribute(""NonHeapMemoryUsage""));"
109851,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/MemoryMXBeanImplTest.java,79,,"        assertNotNull(mb.getAttribute(""ObjectPendingFinalizationCount""));"
109852,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/MemoryMXBeanImplTest.java,82,,"        assertNotNull(mb.getAttribute(""Verbose""));"
109853,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/MemoryMXBeanImplTest.java,88,,"            fail(""Should have thrown an AttributeNotFoundException."");"
109854,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/MemoryManagerImplTest.java,77,,"                if (name.equals(""Valid"")) {"
109855,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/MemoryManagerImplTest.java,81,,"                } else if (name.equals(""Name"")) {"
109856,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/MemoryManagerImplTest.java,85,,"                } else if (name.equals(""MemoryPoolNames"")) {"
109857,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/MemoryManagerImplTest.java,204,,"                fail(""Should have thrown an AttributeNotFoundException."");"
109858,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/MemoryPoolMXBeanImplTest.java,91,,"                } else if (name.equals(""CollectionUsageThreshold"")) {"
109859,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/MemoryPoolMXBeanImplTest.java,94,,"                } else if (name.equals(""CollectionUsageThresholdCount"")) {"
109860,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/MemoryPoolMXBeanImplTest.java,106,,"                } else if (name.equals(""Name"")) {"
109861,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/MemoryPoolMXBeanImplTest.java,110,,"                } else if (name.equals(""PeakUsage"")) {"
109862,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/MemoryPoolMXBeanImplTest.java,120,,"                } else if (name.equals(""Usage"")) {"
109863,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/MemoryPoolMXBeanImplTest.java,126,,"                } else if (name.equals(""UsageThreshold"")) {"
109864,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/MemoryPoolMXBeanImplTest.java,129,,"                } else if (name.equals(""UsageThresholdCount"")) {"
109865,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/MemoryPoolMXBeanImplTest.java,132,,"                } else if (name.equals(""CollectionUsageThresholdExceeded"")) {"
109866,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/MemoryPoolMXBeanImplTest.java,134,,"                } else if (name.equals(""CollectionUsageThresholdSupported"")) {"
109867,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/MemoryPoolMXBeanImplTest.java,136,,"                } else if (name.equals(""UsageThresholdExceeded"")) {"
109868,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/MemoryPoolMXBeanImplTest.java,138,,"                } else if (name.equals(""UsageThresholdSupported"")) {"
109869,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/MemoryPoolMXBeanImplTest.java,297,,"                        fail(""Should have thrown UnsupportedOperationException"");"
109870,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/OperatingSystemMXBeanImplTest.java,62,,"        assertTrue(mb.getAttribute(""Arch"") != null);"
109871,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/OperatingSystemMXBeanImplTest.java,64,,"        assertTrue(((Integer) (mb.getAttribute(""AvailableProcessors""))) > -1);"
109872,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/OperatingSystemMXBeanImplTest.java,65,,"        assertTrue(mb.getAttribute(""Name"") != null);"
109873,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/OperatingSystemMXBeanImplTest.java,67,,"        assertTrue(mb.getAttribute(""Version"") != null);"
109874,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/OperatingSystemMXBeanImplTest.java,73,,"            fail(""Should have thrown an AttributeNotFoundException."");"
109875,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/RuntimeMXBeanImplTest.java,63,,"            assertNotNull(mb.getAttribute(""BootClassPath""));"
109876,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/RuntimeMXBeanImplTest.java,76,,"        assertNotNull(mb.getAttribute(""InputArguments""));"
109877,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/RuntimeMXBeanImplTest.java,79,,"        assertNotNull(mb.getAttribute(""LibraryPath""));"
109878,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/RuntimeMXBeanImplTest.java,82,,"        assertNotNull(mb.getAttribute(""ManagementSpecVersion""));"
109879,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/RuntimeMXBeanImplTest.java,85,,"        assertNotNull(mb.getAttribute(""Name""));"
109880,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/RuntimeMXBeanImplTest.java,88,,"        assertNotNull(mb.getAttribute(""SpecName""));"
109881,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/RuntimeMXBeanImplTest.java,91,,"        assertNotNull(mb.getAttribute(""SpecVendor""));"
109882,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/RuntimeMXBeanImplTest.java,94,,"        assertNotNull(mb.getAttribute(""SpecVersion""));"
109883,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/RuntimeMXBeanImplTest.java,97,,"        assertTrue(mb.getAttribute(""StartTime"") instanceof Long);"
109884,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/RuntimeMXBeanImplTest.java,100,,"        assertNotNull(mb.getAttribute(""SystemProperties""));"
109885,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/RuntimeMXBeanImplTest.java,108,,"        assertNotNull(mb.getAttribute(""Uptime""));"
109886,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/RuntimeMXBeanImplTest.java,112,,"        assertNotNull(mb.getAttribute(""VmName""));"
109887,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/RuntimeMXBeanImplTest.java,115,,"        assertNotNull(mb.getAttribute(""VmVendor""));"
109888,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/RuntimeMXBeanImplTest.java,118,,"        assertNotNull(mb.getAttribute(""VmVersion""));"
109889,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/RuntimeMXBeanImplTest.java,131,,"            fail(""Should have thrown an AttributeNotFoundException"");"
109890,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ThreadInfoTest.java,104,,"        String[] names = { ""threadId"", ""threadName"", ""threadState"","
109891,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ThreadInfoTest.java,104,,"        String[] names = { ""threadId"", ""threadName"", ""threadState"","
109892,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ThreadInfoTest.java,104,,"        String[] names = { ""threadId"", ""threadName"", ""threadState"","
109893,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ThreadInfoTest.java,105,,"                ""suspended"", ""inNative"", ""blockedCount"", ""blockedTime"","
109894,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ThreadInfoTest.java,105,,"                ""suspended"", ""inNative"", ""blockedCount"", ""blockedTime"","
109895,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ThreadInfoTest.java,105,,"                ""suspended"", ""inNative"", ""blockedCount"", ""blockedTime"","
109896,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ThreadInfoTest.java,105,,"                ""suspended"", ""inNative"", ""blockedCount"", ""blockedTime"","
109897,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ThreadInfoTest.java,106,,"                ""waitedCount"", ""waitedTime"", ""lockName"", ""lockOwnerId"","
109898,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ThreadInfoTest.java,106,,"                ""waitedCount"", ""waitedTime"", ""lockName"", ""lockOwnerId"","
109899,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ThreadInfoTest.java,106,,"                ""waitedCount"", ""waitedTime"", ""lockName"", ""lockOwnerId"","
109900,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ThreadInfoTest.java,106,,"                ""waitedCount"", ""waitedTime"", ""lockName"", ""lockOwnerId"","
109901,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ThreadInfoTest.java,107,,"                ""lockOwnerName"", ""stackTrace"" };"
109902,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ThreadInfoTest.java,107,,"                ""lockOwnerName"", ""stackTrace"" };"
109903,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ThreadMXBeanImplTest.java,60,,"        assertNotNull(mb.getAttribute(""AllThreadIds""));"
109904,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ThreadMXBeanImplTest.java,63,,"        assertNotNull(mb.getAttribute(""DaemonThreadCount""));"
109905,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ThreadMXBeanImplTest.java,66,,"        assertNotNull(mb.getAttribute(""PeakThreadCount""));"
109906,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ThreadMXBeanImplTest.java,69,,"        assertNotNull(mb.getAttribute(""ThreadCount""));"
109907,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ThreadMXBeanImplTest.java,72,,"        assertNotNull(mb.getAttribute(""TotalStartedThreadCount""));"
109908,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ThreadMXBeanImplTest.java,75,,"        assertNotNull(mb.getAttribute(""CurrentThreadCpuTimeSupported""));"
109909,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ThreadMXBeanImplTest.java,79,,"            assertNotNull(mb.getAttribute(""CurrentThreadCpuTime""));"
109910,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ThreadMXBeanImplTest.java,82,,"            assertNotNull(mb.getAttribute(""CurrentThreadUserTime""));"
109911,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ThreadMXBeanImplTest.java,87,,"                fail(""Should have thrown MBeanException"");"
109912,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ThreadMXBeanImplTest.java,98,,"        assertNotNull(mb.getAttribute(""ThreadContentionMonitoringSupported""));"
109913,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ThreadMXBeanImplTest.java,102,,"            assertNotNull(mb.getAttribute(""ThreadContentionMonitoringEnabled""));"
109914,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ThreadMXBeanImplTest.java,114,,"        assertNotNull(mb.getAttribute(""ThreadCpuTimeSupported""));"
109915,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ThreadMXBeanImplTest.java,118,,"            assertNotNull(mb.getAttribute(""ThreadCpuTimeEnabled""));"
109916,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ThreadMXBeanImplTest.java,132,,"            fail(""Should have thrown an AttributeNotFoundException."");"
109917,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ThreadMXBeanImplTest.java,375,,"            fail(""Should have thrown an IllegalArgumentException!"");"
109918,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ThreadMXBeanImplTest.java,380,,"        retVal = mb.invoke(""getThreadInfo"", new Object[] { new Long(Thread"
109919,./TargetProjects/harmony-classlib/modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management/ThreadMXBeanImplTest.java,386,,"        assertTrue(cd.containsKey(""threadId""));"
109920,./TargetProjects/harmony-classlib/modules/logging/src/main/java/java/util/logging/FileHandler.java,233,,"            throw new NullPointerException(Messages.getString(""logging.19""));"
109921,./TargetProjects/harmony-classlib/modules/logging/src/main/java/java/util/logging/Logger.java,634,,"        LogRecord record = new LogRecord(Level.FINER, ""ENTRY""); //$NON-NLS-1$"
109922,./TargetProjects/harmony-classlib/modules/logging/src/main/java/java/util/logging/XMLFormatter.java,54,,"    @SuppressWarnings(""nls"")"
109923,./TargetProjects/harmony-classlib/modules/logging/src/main/java/java/util/logging/XMLFormatter.java,118,,"                sb.append(indent).append((""<message>"")).append(message).append("
109924,./TargetProjects/harmony-classlib/modules/logging/src/main/java/java/util/logging/XMLFormatter.java,119,,"                        (""</message>"")).append(lineSeperator);"
109925,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/ConsoleHandlerTest.java,80,,"				""java.util.logging.ConsoleHandler.level""));"
109926,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/ConsoleHandlerTest.java,82,,"				""java.util.logging.ConsoleHandler.filter""));"
109927,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/ConsoleHandlerTest.java,84,,"				""java.util.logging.ConsoleHandler.formatter""));"
109928,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/ConsoleHandlerTest.java,86,,"				""java.util.logging.ConsoleHandler.encoding""));"
109929,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/ConsoleHandlerTest.java,127,,"		p.put(""java.util.logging.ConsoleHandler.level"", ""FINE"");"
109930,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/ConsoleHandlerTest.java,131,,"				+ ""$MockFormatter"");"
109931,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/ConsoleHandlerTest.java,260,,"		LogRecord r = new LogRecord(Level.INFO, ""testPublish_NoFilter"");"
109932,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/ConsoleHandlerTest.java,264,,"		assertEquals(""MockFormatter_Head"" + ""testPublish_NoFilter"","
109933,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/FileHandlerTest.java,84,,"        File file = new File(TEMPPATH + SEP + ""log"");"
109934,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/FileHandlerTest.java,89,,"        r = new LogRecord(Level.CONFIG, ""msg"");"
109935,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/FileHandlerTest.java,135,,"                .getFormatter(), ""UTF-8"");"
109936,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/FileHandlerTest.java,291,,"        handler = new FileHandler(""%t/testLimitCount%u"", 60, 3, false);"
109937,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/FileHandlerTest.java,361,,"                fail(""should throw security exception"");"
109938,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/FileHandlerTest.java,581,,"        FileHandler h = new FileHandler(""%t/log/string"");"
109939,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/FormatterTest.java,90,,"		r.setMessage(""msg"");"
109940,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/HandlerTest.java,175,,"			fail(""Should throw SecurityException!"");"
109941,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/HandlerTest.java,212,,"			fail(""Should throw NullPointerException!"");"
109942,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LevelTest.java,42,,"		MockLevel l = new MockLevel(""level1"", 1);"
109943,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LevelTest.java,114,,"		assertSame(Level.INFO, Level.parse(""INFO""));"
109944,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LevelTest.java,116,,"		assertSame(Level.FINE, Level.parse(""FINE""));"
109945,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LevelTest.java,118,,"		assertSame(Level.FINEST, Level.parse(""FINEST""));"
109946,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LevelTest.java,120,,"		assertSame(Level.ALL, Level.parse(""ALL""));"
109947,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LogManagerTest.java,87,,"		props.put(""handlers"", className + ""$MockHandler "" + className"
109948,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LogManagerTest.java,94,,"		props.put("".level"", ""FINE"");"
109949,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LogManagerTest.java,95,,"		props.put(""java.util.logging.ConsoleHandler.level"", ""OFF"");"
109950,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LogManagerTest.java,98,,"		props.put(""LogManagerTestFoo.handlers"", ""java.util.logging.ConsoleHandler"");"
109951,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LogManagerTest.java,371,,"			fail(""should throw SecurityException"");"
109952,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LogManagerTest.java,736,,"            props.setProperty(""config"", className + ""$MockValidConfig"");"
109953,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LogManagerTest.java,736,,"            props.setProperty(""config"", className + ""$MockValidConfig"");"
109954,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LogManagerTest.java,742,,"            props.setProperty(""config"", className + ""$MockValidConfig """
109955,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LogRecordTest.java,78,,"		lr.setResourceBundleName(""bundles/java/util/logging/res"");"
109956,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LogRecordTest.java,119,,"		lr.setSourceClassName(""bad class name"");"
109957,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LoggerTest.java,151,,"		MockLogger mlog = new MockLogger(""...#$%%^&&()-_+=!@~./,[]{};:'\\\""?|"","
109958,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LoggerTest.java,170,,"			fail(""Should throw MissingResourceException!"");"
109959,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LoggerTest.java,269,,"				""testGetLogger_Normal_ANewLogger""));"
109960,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LoggerTest.java,302,,"				""testGetLogger_InvalidLevel_ANewLogger""));"
109961,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LoggerTest.java,320,,"			fail(""Should throw NullPointerException!"");"
109962,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LoggerTest.java,407,,"				""testGetLoggerWithRes_Normal_ANewLogger""));"
109963,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LoggerTest.java,505,,"                ""testGetLoggerWithRes_ExistingLoggerWithDiffRes_ANewLogger""));"
109964,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LoggerTest.java,639,,"			fail(""Should throw SecurityException!"");"
109965,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LoggerTest.java,1229,,"		Logger log = Logger.getLogger(""testGetName_Normal"");"
109966,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LoggerTest.java,1343,,"		this.sharedLogger.throwing(""sourceClass"", ""sourceMethod"", t);"
109967,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LoggerTest.java,1343,,"		this.sharedLogger.throwing(""sourceClass"", ""sourceMethod"", t);"
109968,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LoggerTest.java,1366,,"		Logger child = new MockLogger(""childLogger"", null);"
109969,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LoggerTest.java,1367,,"		Logger parent = new MockLogger(""parentLogger"", VALID_RESOURCE_BUNDLE2);"
109970,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LoggerTest.java,1395,,"		assertEquals(r.getMessage(), ""ENTRY"");"
109971,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LoggerTest.java,2039,,"		this.sharedLogger.log(Level.INFO, ""log(Level, String) msg"");"
109972,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LoggerTest.java,2102,,"		this.sharedLogger.log(Level.INFO, ""log(Level, String, Object) msg"","
109973,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LoggerTest.java,2173,,"		this.sharedLogger.log(Level.INFO, ""log(Level, String, Object[]) msg"","
109974,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LoggerTest.java,2242,,"		this.sharedLogger.log(Level.INFO, ""log(Level, String, Throwable) msg"","
109975,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LoggerTest.java,2309,,"				""logp(Level, String, String, String) msg"");"
109976,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LoggerTest.java,2376,,"				""logp(Level, String, String, String, Object) msg"", param);"
109977,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LoggerTest.java,2450,,"				""logp(Level, String, String, String, Object[]) msg"", params);"
109978,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LoggerTest.java,2522,,"				""logp(Level, String, String, String, Throwable) msg"", t);"
109979,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LoggerTest.java,2592,,"				""logrb(Level, String, String, String, String) msg"");"
109980,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LoggerTest.java,2681,,"				""logrb(Level, String, String, String, String, Object) msg"","
109981,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LoggerTest.java,2798,,"				""logrb(Level, String, String, String, String, Object[]) msg"","
109982,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LoggerTest.java,2904,,"				""logrb(Level, String, String, String, String, Throwable) msg"","
109983,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LoggingPermissionTest.java,32,,"        SerializationTest.verifySelf(new LoggingPermission(""control"", """"));"
109984,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/LoggingPermissionTest.java,47,,"			fail(""should throw IllegalArgumentException"");"
109985,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/MemoryHandlerTest.java,87,,"		props.put(""java.util.logging.MemoryHandler.target"", baseClassName"
109986,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/MemoryHandlerTest.java,161,,"			fail(""should throw NullPointerException"");"
109987,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/MemoryHandlerTest.java,174,,"		record = new LogRecord(Level.CONFIG, ""false"");"
109988,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/MemoryHandlerTest.java,207,,"			props.put(""java.util.logging.MemoryHandler.target"", ""badname"");"
109989,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/SimpleFormatterTest.java,62,,"		lr.setMessage(""msg"");"
109990,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/SocketHandlerTest.java,101,,"        props.put("".level"", ""FINE"");"
109991,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/SocketHandlerTest.java,115,,"				""java.util.logging.SocketHandler.level""));"
109992,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/SocketHandlerTest.java,117,,"				""java.util.logging.SocketHandler.filter""));"
109993,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/SocketHandlerTest.java,119,,"				""java.util.logging.SocketHandler.formatter""));"
109994,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/SocketHandlerTest.java,121,,"				""java.util.logging.SocketHandler.encoding""));"
109995,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/SocketHandlerTest.java,123,,"				""java.util.logging.SocketHandler.host""));"
109996,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/SocketHandlerTest.java,125,,"				""java.util.logging.SocketHandler.port""));"
109997,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/SocketHandlerTest.java,129,,"			fail(""Should throw IllegalArgumentException!"");"
109998,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/SocketHandlerTest.java,146,,"			h = new SocketHandler(""127.0.0.1"", -1);"
109999,./TargetProjects/harmony-classlib/modules/logging/src/test/java/org/apache/harmony/logging/tests/java/util/logging/SocketHandlerTest.java,199,,"		p.put(""java.util.logging.SocketHandler.port"", ""6666"");"
