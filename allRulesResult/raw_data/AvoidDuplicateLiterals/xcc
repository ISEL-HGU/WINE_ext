54000,./TargetProjects/ctakes/ctakes-utils/src/main/java/org/apache/ctakes/utils/xcas_comparison/XcasDiff.java,149,,"			bw.write(""<tr>""); bw.newLine();"
54001,./TargetProjects/ctakes/ctakes-utils/src/main/java/org/apache/ctakes/utils/xcas_comparison/XcasDiff.java,160,,"				bw.write(""<td>""+a.shortType()+""</td>""); bw.newLine();"
54002,./TargetProjects/ctakes/ctakes-utils/src/main/java/org/apache/ctakes/utils/xcas_comparison/XcasDiff.java,160,,"				bw.write(""<td>""+a.shortType()+""</td>""); bw.newLine();"
54003,./TargetProjects/ctakes/ctakes-utils/src/main/java/org/apache/ctakes/utils/xcas_comparison/XcasFile.java,176,,"				int oBegin = o.attributes.containsKey(""begin"") ? Integer.parseInt(o.getAttribute(""begin"")) : -1;"
54004,./TargetProjects/ctakes/ctakes-utils/src/main/java/org/apache/ctakes/utils/xcas_comparison/XcasFile.java,177,,"				int oEnd = o.attributes.containsKey(""end"") ? Integer.parseInt(o.getAttribute(""end"")) : -1;"
54005,./TargetProjects/ctakes/ctakes-utils/src/main/java/org/apache/ctakes/utils/xcas_comparison/XcasFile.java,181,,"				else if (o.attributes.containsKey(""key"") && a.attributes.containsKey(""key"") && o.getAttribute(""key"").equals(a.getAttribute(""key"")))"
54006,./TargetProjects/ctakes/ctakes-ytex-uima/src/main/java/org/apache/ctakes/ytex/tools/SetupAuiFirstWord.java,205,,"							LOGGER.error(""Error tokenizing aui="" + aui + "", str="""
54007,./TargetProjects/ctakes/ctakes-ytex-uima/src/main/java/org/apache/ctakes/ytex/uima/annotators/NegexAnnotator.java,517,,"		NegexToken t = this.findTokenByTag(""[PREN]"", new String[] { ""[CONJ]"","
54008,./TargetProjects/ctakes/ctakes-ytex-uima/src/main/java/org/apache/ctakes/ytex/uima/annotators/NegexAnnotator.java,517,,"		NegexToken t = this.findTokenByTag(""[PREN]"", new String[] { ""[CONJ]"","
54009,./TargetProjects/ctakes/ctakes-ytex-uima/src/main/java/org/apache/ctakes/ytex/uima/annotators/NegexAnnotator.java,518,,"				""[PSEU]"", ""[POST]"", ""[PREP]"", ""[POSP]"" }, true, neRelStart,"
54010,./TargetProjects/ctakes/ctakes-ytex-uima/src/main/java/org/apache/ctakes/ytex/uima/annotators/NegexAnnotator.java,518,,"				""[PSEU]"", ""[POST]"", ""[PREP]"", ""[POSP]"" }, true, neRelStart,"
54011,./TargetProjects/ctakes/ctakes-ytex-uima/src/main/java/org/apache/ctakes/ytex/uima/annotators/NegexAnnotator.java,518,,"				""[PSEU]"", ""[POST]"", ""[PREP]"", ""[POSP]"" }, true, neRelStart,"
54012,./TargetProjects/ctakes/ctakes-ytex-uima/src/main/java/org/apache/ctakes/ytex/uima/annotators/NegexAnnotator.java,518,,"				""[PSEU]"", ""[POST]"", ""[PREP]"", ""[POSP]"" }, true, neRelStart,"
54013,./TargetProjects/ctakes/ctakes-ytex-uima/src/main/java/org/apache/ctakes/ytex/uima/annotators/NegexAnnotator.java,598,,"					+ mph.group().trim().replaceAll("" "", filler) + ""[PHRASE]"");"
54014,./TargetProjects/ctakes/ctakes-ytex-uima/src/main/java/org/apache/ctakes/ytex/uima/annotators/NegexAnnotator.java,620,,"		Pattern pSpace = Pattern.compile(""[\\s+]"");"
54015,./TargetProjects/ctakes/ctakes-ytex-uima/src/main/java/org/apache/ctakes/ytex/uima/annotators/NegexAnnotator.java,640,,"								.replaceAll(""\\[PHRASE\\]"", ""[NEGATED]"");"
54016,./TargetProjects/ctakes/ctakes-ytex/src/main/java/org/apache/ctakes/ytex/kernel/CytoscapeHelperImpl.java,61,,"				.withArgName(""network"")"
54017,./TargetProjects/ctakes/ctakes-ytex/src/main/java/org/apache/ctakes/ytex/kernel/dao/ClassifierEvaluationDaoImpl.java,58,,"	@SuppressWarnings(""unchecked"")"
54018,./TargetProjects/ctakes/ctakes-ytex/src/main/java/org/apache/ctakes/ytex/kernel/dao/ClassifierEvaluationDaoImpl.java,64,,"		q.setString(""corpusName"", corpusName);"
54019,./TargetProjects/ctakes/ctakes-ytex/src/main/java/org/apache/ctakes/ytex/kernel/dao/ConceptDaoImpl.java,486,,"					.getResourceAsStream(CONCEPT_GRAPH_PATH + name + "".gz"");"
54020,./TargetProjects/ctakes/ctakes-ytex/src/main/java/org/apache/ctakes/ytex/weka/ImportWekaResults.java,69,,"		og.addOption(OptionBuilder.withArgName(""cvDir"").hasArg()"
54021,./TargetProjects/ctakes/ctakes-ytex/src/main/java/org/apache/ctakes/ytex/weka/ImportWekaResults.java,80,,"		options.addOption(OptionBuilder.withArgName(""name"").hasArg()"
54022,./TargetProjects/ctakes/ctakes-ytex/src/main/java/org/apache/ctakes/ytex/weka/ImportWekaResults.java,82,,"		options.addOption(OptionBuilder.withArgName(""experiment"").hasArg()"
54023,./TargetProjects/ctakes/ctakes-ytex/src/main/java/org/apache/ctakes/ytex/weka/ImportWekaResults.java,84,,"		options.addOption(OptionBuilder.withArgName(""label"").hasArg()"
54024,./TargetProjects/ctakes/ctakes-ytex/src/test/java/org/apache/ctakes/jdl/AppMainTest.java,68,,"		args = new String[] { C, ""conn.xml"", D, ""data.xml"", L, ""load.csv"" };"
54025,./TargetProjects/ctakes/ctakes-ytex/src/test/java/org/apache/ctakes/jdl/AppMainTest.java,68,,"		args = new String[] { C, ""conn.xml"", D, ""data.xml"", L, ""load.csv"" };"
54026,./TargetProjects/curator/curator-client/src/test/java/org/apache/curator/BasicTests.java,119,,"            client.getZooKeeper().create(""/test"", writtenData, ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);"
54027,./TargetProjects/curator/curator-client/src/test/java/org/apache/curator/TestSessionFailRetryLoop.java,62,,"                                    assertNull(client.getZooKeeper().exists(""/foo/bar"", false));"
54028,./TargetProjects/curator/curator-client/src/test/java/org/apache/curator/utils/TestZKPaths.java,43,,"        assertEquals(ZKPaths.makePath(""foo"", """"), ""/foo"");"
54029,./TargetProjects/curator/curator-client/src/test/java/org/apache/curator/utils/TestZKPaths.java,43,,"        assertEquals(ZKPaths.makePath(""foo"", """"), ""/foo"");"
54030,./TargetProjects/curator/curator-client/src/test/java/org/apache/curator/utils/TestZKPaths.java,53,,"        assertEquals(ZKPaths.makePath("""", ""bar""), ""/bar"");"
54031,./TargetProjects/curator/curator-client/src/test/java/org/apache/curator/utils/TestZKPaths.java,53,,"        assertEquals(ZKPaths.makePath("""", ""bar""), ""/bar"");"
54032,./TargetProjects/curator/curator-client/src/test/java/org/apache/curator/utils/TestZKPaths.java,63,,"        assertEquals(ZKPaths.makePath(""foo"", ""bar""), ""/foo/bar"");"
54033,./TargetProjects/curator/curator-framework/src/main/java/org/apache/curator/framework/imps/CuratorTransactionImpl.java,59,,"        Preconditions.checkState(!isCommitted, ""transaction already committed"");"
54034,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestCompression.java,77,,"            client.create().compressed().creatingParentsIfNeeded().forPath(""/a/b/c"", data);"
54035,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestCompressionInTransactionNew.java,38,,"        final byte[]            data = ""here's a string"".getBytes();"
54036,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestCompressionInTransactionOld.java,39,,"        final byte[]            data = ""here's a string"".getBytes();"
54037,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestCreate.java,69,,"            case ""/bar"":"
54038,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestCreate.java,71,,"            case ""/bar/foo"":"
54039,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestCreate.java,156,,"            assertTrue(latch.await(2000, TimeUnit.MILLISECONDS), ""Callback not invoked"");"
54040,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestCreate.java,420,,"            checkBackground(client, clBefore(client.create().idempotent()), path1+""back"", data, true);"
54041,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestCreateReturningStat.java,97,,"            String path = ""/bla"";"
54042,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestDelete.java,366,,"                                assertEquals(event.getPath(), ""/head"");"
54043,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestDelete.java,403,,"                                assertEquals(event.getPath(), ""/one/two"");"
54044,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestDelete.java,451,,"            client.delete().deletingChildrenIfNeeded().forPath(""/one/two/three/four/five"");"
54045,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestEnsureContainers.java,42,,"            EnsureContainers ensureContainers = new EnsureContainers(client, ""/one/two/three"");"
54046,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestFailedDeleteManager.java,57,,"            client.create().forPath(""/test-me"");"
54047,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestFramework.java,220,,"            String name = client.create().forPath(""/hey"", ""there"".getBytes());"
54048,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestFramework.java,226,,"            name = client.create().orSetData().creatingParentsIfNeeded().forPath(""/a/b/c"", ""there"".getBytes());"
54049,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestFramework.java,284,,"            client.create().forPath(""/base"");"
54050,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestFramework.java,351,,"            .authorization(""digest"", ""me1:pass1"".getBytes())"
54051,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestFramework.java,351,,"            .authorization(""digest"", ""me1:pass1"".getBytes())"
54052,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestFramework.java,359,,"            client.create().withACL(aclList).forPath(""/test"", ""test"".getBytes());"
54053,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestFramework.java,359,,"            client.create().withACL(aclList).forPath(""/test"", ""test"".getBytes());"
54054,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestFramework.java,375,,"                fail(""Auth failed"");"
54055,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestFramework.java,564,,"            client.create().creatingParentsIfNeeded().forPath(""/one/two/three"", ""foo"".getBytes());"
54056,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestFramework.java,564,,"            client.create().creatingParentsIfNeeded().forPath(""/one/two/three"", ""foo"".getBytes());"
54057,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestFramework.java,601,,"            assertNotNull(client.checkExists().forPath(""/one/two""));"
54058,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestFramework.java,603,,"            assertNotNull(client.checkExists().forPath(""/one""));"
54059,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestFramework.java,841,,"                        if ( event.getPath().equals(""/head"") )"
54060,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestFrameworkEdges.java,313,,"                localClient.create().forPath(""/parent"");"
54061,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestFrameworkEdges.java,615,,"            client.checkExists().inBackground(latch).forPath(""/hey"");"
54062,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestMultiClient.java,64,,"                                if ( event.getPath().equals(""/test"") )"
54063,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestNamespaceFacade.java,46,,"            CuratorFrameworkFactory.builder().namespace(""/snafu"").retryPolicy(new RetryOneTime(1)).connectString(""foo"").build();"
54064,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestNamespaceFacade.java,65,,"            CuratorFramework barClient = client.usingNamespace(""bar"");"
54065,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestNamespaceFacade.java,90,,"            fooClient.create().forPath(""/one"");"
54066,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestTransactionsNew.java,95,,"            client.create().forPath(""/foo"");"
54067,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestTransactionsNew.java,125,,"            CuratorOp createOp1 = client.transactionOp().create().forPath(""/foo"", ""one"".getBytes());"
54068,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestTransactionsNew.java,126,,"            CuratorOp createOp2 = client.transactionOp().create().withMode(CreateMode.PERSISTENT_SEQUENTIAL).forPath(""/test-"", ""one"".getBytes());"
54069,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestTransactionsNew.java,127,,"            CuratorOp setDataOp = client.transactionOp().setData().forPath(""/foo"", ""two"".getBytes());"
54070,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestTransactionsNew.java,128,,"            CuratorOp createOp3 = client.transactionOp().create().forPath(""/foo/bar"");"
54071,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestTransactionsNew.java,157,,"            CuratorOp createOp2 = client.transactionOp().create().forPath(""/foo/bar"", ""snafu"".getBytes());"
54072,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestTransactionsOld.java,55,,"            client.create().forPath(""/foo"");"
54073,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestTransactionsOld.java,63,,"                    .create().forPath(""/bar"")"
54074,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestTransactionsOld.java,93,,"                    .create().withMode(CreateMode.PERSISTENT_SEQUENTIAL).forPath(""/test-"", ""one"".getBytes())"
54075,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestTransactionsOld.java,95,,"                    .setData().forPath(""/foo"", ""two"".getBytes())"
54076,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestTransactionsOld.java,97,,"                    .create().forPath(""/foo/bar"")"
54077,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestTransactionsOld.java,134,,"                        .create().compressed().withMode(CreateMode.PERSISTENT).withACL(ZooDefs.Ids.READ_ACL_UNSAFE).forPath(""/baz"", ""four"".getBytes())"
54078,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestTtlNodes.java,69,,"            client.create().withTtl(10).creatingParentsIfNeeded().withMode(CreateMode.PERSISTENT_WITH_TTL).forPath(""/a/b/c"");"
54079,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestWatcherIdentity.java,73,,"            client.create().forPath(""/test"");"
54080,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestWatcherRemovalManager.java,62,,"            removerClient.checkExists().usingWatcher(watcher).forPath(""/a/b/c"");"
54081,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestWatcherRemovalManager.java,187,,"                removerClient.checkExists().usingWatcher(w).forPath(""/one/two/three"");"
54082,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestWatcherRemovalManager.java,433,,"            removerClient.checkExists().usingWatcher(watcher).forPath(""/yo"");"
54083,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestWatchesBuilder.java,136,,"            assertTrue(timing.awaitLatch(removedLatch), ""Timed out waiting for watch removal"");"
54084,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestWatchesBuilder.java,632,,"            client.watchers().add().withMode(AddWatchMode.PERSISTENT).usingWatcher(watcher).forPath(""/test/foo"");"
54085,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/imps/TestWatchesBuilder.java,677,,"            client.watchers().add().withMode(AddWatchMode.PERSISTENT_RECURSIVE).usingWatcher(watcher).forPath(""/test"");"
54086,./TargetProjects/curator/curator-framework/src/test/java/org/apache/curator/framework/schema/TestSchema.java,67,,"                fail(""Should've violated schema"");"
54087,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/atomic/TestDistributedAtomicLong.java,58,,"            client.create().forPath(""/counter"", ""foo"".getBytes());"
54088,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/barriers/TestDistributedBarrier.java,51,,"            final DistributedBarrier      barrier = new DistributedBarrier(client, ""/barrier"");"
54089,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestCuratorCache.java,50,,"            client.create().creatingParentsIfNeeded().forPath(""/test"");"
54090,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestCuratorCacheEdges.java,51,,"            client.create().forPath(""/root"", first);"
54091,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestCuratorCacheWrappers.java,58,,"            client.create().forPath(""/test"");"
54092,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestCuratorCacheWrappers.java,66,,"                    if ( event.getData().getPath().equals(""/test/one"") )"
54093,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestCuratorCacheWrappers.java,77,,"                client.setData().forPath(""/test/one"", ""sup!"".getBytes());"
54094,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestCuratorCacheWrappers.java,153,,"            try (CuratorCache cache = CuratorCache.build(client, ""/test/node"", SINGLE_NODE_CACHE))"
54095,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestNodeCache.java,62,,"            client.create().creatingParentsIfNeeded().forPath(""/test/foo"", ""one"".getBytes());"
54096,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestNodeCache.java,190,,"            client.create().creatingParentsIfNeeded().forPath(""/test/node"", ""start"".getBytes());"
54097,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestPathChildrenCache.java,89,,"            client.create().forPath(""/a/b/test/one"");"
54098,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestPathChildrenCache.java,199,,"                         event.getData().getPath().equals(""/baz""))"
54099,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestPathChildrenCache.java,252,,"            cache = new PathChildrenCache(client, ""/test"", true);"
54100,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestPathChildrenCache.java,288,,"            client.create().forPath(""/test/one"", ""hey there"".getBytes());"
54101,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestPathChildrenCache.java,288,,"            client.create().forPath(""/test/one"", ""hey there"".getBytes());"
54102,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestPathChildrenCache.java,456,,"            client.create().forPath(""/test/foo"", ""first"".getBytes());"
54103,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestPathChildrenCache.java,587,,"            client.create().forPath(""/test/snafu"", ""original"".getBytes());"
54104,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestPathChildrenCache.java,680,,"            client.create().forPath(""/base"");"
54105,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestPathChildrenCache.java,681,,"            client.create().forPath(""/base/a"");"
54106,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestPathChildrenCache.java,986,,"                client.setData().forPath(""/test/one"", ""sup!"".getBytes());"
54107,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCache.java,85,,"        client.create().forPath(""/test"");"
54108,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCache.java,86,,"        client.create().forPath(""/test/1"", ""one"".getBytes());"
54109,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCache.java,86,,"        client.create().forPath(""/test/1"", ""one"".getBytes());"
54110,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCache.java,87,,"        client.create().forPath(""/test/2"", ""two"".getBytes());"
54111,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCache.java,87,,"        client.create().forPath(""/test/2"", ""two"".getBytes());"
54112,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCache.java,88,,"        client.create().forPath(""/test/3"", ""three"".getBytes());"
54113,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCache.java,88,,"        client.create().forPath(""/test/3"", ""three"".getBytes());"
54114,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCache.java,89,,"        client.create().forPath(""/test/2/sub"", ""two-sub"".getBytes());"
54115,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCache.java,89,,"        client.create().forPath(""/test/2/sub"", ""two-sub"".getBytes());"
54116,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCache.java,110,,"        cache = newTreeCacheWithListeners(client, ""/one/two/three"");"
54117,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCache.java,140,,"        cache = newTreeCacheWithListeners(client, ""/test/foo/bar"");"
54118,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCache.java,144,,"        client.create().creatingParentsIfNeeded().forPath(""/test/foo"");"
54119,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCache.java,223,,"        client.create().forPath(""/test/one"", ""hey there"".getBytes());"
54120,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCache.java,223,,"        client.create().forPath(""/test/one"", ""hey there"".getBytes());"
54121,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCache.java,461,,"        client.setData().forPath(""/test/one"", ""sup!"".getBytes());"
54122,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestTreeCacheIteratorAndSize.java,45,,"            ""/base/test"","
54123,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestWrappedNodeCache.java,54,,"            client.create().creatingParentsIfNeeded().forPath(""/test/foo"", ""one"".getBytes());"
54124,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/TestWrappedNodeCache.java,93,,"            client.create().creatingParentsIfNeeded().forPath(""/test/node"", ""start"".getBytes());"
54125,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/leader/TestLeaderLatch.java,257,,"                        states.add(""true"");"
54126,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/leader/TestLeaderLatch.java,263,,"                        states.add(""false"");"
54127,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/leader/TestLeaderSelector.java,143,,"                        changes.add(""release"");"
54128,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/leader/TestLeaderSelector.java,241,,"            selector = new LeaderSelector(client, ""/leader"", listener);"
54129,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/leader/TestLeaderSelectorCluster.java,64,,"                    List<String>        names = client.getChildren().forPath(""/leader"");"
54130,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/locks/TestInterProcessMultiMutex.java,73,,"                    throw new Exception(""foo"");"
54131,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/locks/TestInterProcessReadWriteLock.java,62,,"            final InterProcessReadWriteLock lock = new InterProcessReadWriteLock(client, ""/lock"");"
54132,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/locks/TestInterProcessSemaphore.java,67,,"        final String SEMAPHORE_PATH = ""/test"";"
54133,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/locks/TestInterProcessSemaphore.java,682,,"            final List<String> childNodes = client.getChildren().forPath(""/test/leases"");"
54134,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/locks/TestLockACLs.java,43,,"    private static final List<ACL> ACLS1 = Collections.singletonList(new ACL(ZooDefs.Perms.ALL, new Id(""ip"", ""127.0.0.1"")));"
54135,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/locks/TestLockACLs.java,65,,"            client.create().forPath(""/foo"");"
54136,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/locks/TestLockACLs.java,71,,"            InterProcessReadWriteLock lock = new InterProcessReadWriteLock(client, ""/bar"");"
54137,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/nodes/TestPersistentEphemeralNode.java,535,,"        byte[] data = ""Hello World"".getBytes();"
54138,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/nodes/TestPersistentNode.java,113,,"            pen = new PersistentNode(client, CreateMode.PERSISTENT, false, ""/test/one/two"", new byte[0], false);"
54139,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/nodes/TestPersistentNode.java,134,,"            client.create().creatingParentsIfNeeded().forPath(""/test/one"");"
54140,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/nodes/TestPersistentTtlNode.java,78,,"            try (PersistentTtlNode node = new PersistentTtlNode(client, ""/test"", ttlMs, new byte[0]))"
54141,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/queue/TestDistributedPriorityQueue.java,57,,"            queue = QueueBuilder.builder(client, consumer, new IntSerializer(), ""/test"").buildPriorityQueue(minItemsBeforeRefresh);"
54142,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/queue/TestDistributedQueue.java,405,,"                    lockPath(""/a/locks"")."
54143,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/queue/TestQueueSharder.java,71,,"            sharder = new QueueSharder<String, DistributedQueue<String>>(client, distributedQueueAllocator, ""/queues"", ""/leader"", policies);"
54144,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/queue/TestQueueSharder.java,71,,"            sharder = new QueueSharder<String, DistributedQueue<String>>(client, distributedQueueAllocator, ""/queues"", ""/leader"", policies);"
54145,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/queue/TestSimpleDistributedQueue.java,158,,"            String testString = ""Hello World"";"
54146,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/shared/TestSharedCount.java,85,,"                                SharedCount count = new SharedCount(client, ""/count"", 10);"
54147,./TargetProjects/curator/curator-recipes/src/test/java/org/apache/curator/framework/recipes/watch/TestPersistentWatcher.java,72,,"            try ( PersistentWatcher persistentWatcher = new PersistentWatcher(client, ""/top/main"", recursive) )"
54148,./TargetProjects/curator/curator-test/src/test/java/org/apache/curator/test/TestQuorumConfigBuilder.java,37,,"        customProperties.put(""kerberos.removeHostFromPrincipal"", ""true"");"
54149,./TargetProjects/curator/curator-x-async/src/main/java/org/apache/curator/x/async/details/AsyncCreateBuilderImpl.java,65,,"        this.createMode = Objects.requireNonNull(createMode, ""createMode cannot be null"");"
54150,./TargetProjects/curator/curator-x-async/src/main/java/org/apache/curator/x/async/details/AsyncCreateBuilderImpl.java,93,,"        this.options = Objects.requireNonNull(options, ""options cannot be null"");"
54151,./TargetProjects/curator/curator-x-async/src/main/java/org/apache/curator/x/async/details/AsyncRemoveWatchesBuilderImpl.java,54,,"        this.watcher = Objects.requireNonNull(watcher, ""watcher cannot be null"");"
54152,./TargetProjects/curator/curator-x-async/src/main/java/org/apache/curator/x/async/details/AsyncRemoveWatchesBuilderImpl.java,79,,"        this.options = Objects.requireNonNull(options, ""options cannot be null"");"
54153,./TargetProjects/curator/curator-x-async/src/main/java/org/apache/curator/x/async/details/AsyncRemoveWatchesBuilderImpl.java,107,,"        this.watcherType = Objects.requireNonNull(watcherType, ""watcherType cannot be null"");"
54154,./TargetProjects/curator/curator-x-async/src/test/java/org/apache/curator/framework/imps/TestAddWatch.java,49,,"            async.addWatch().withMode(AddWatchMode.PERSISTENT_RECURSIVE).usingWatcher(watcher).forPath(""/test"").toCompletableFuture().get();"
54155,./TargetProjects/curator/curator-x-async/src/test/java/org/apache/curator/framework/imps/TestFramework.java,158,,"            .authorization(""digest"", ""me1:pass1"".getBytes())"
54156,./TargetProjects/curator/curator-x-async/src/test/java/org/apache/curator/framework/imps/TestFramework.java,158,,"            .authorization(""digest"", ""me1:pass1"".getBytes())"
54157,./TargetProjects/curator/curator-x-async/src/test/java/org/apache/curator/framework/imps/TestFramework.java,166,,"            client.create().withACL(aclList).forPath(""/test"", ""test"".getBytes());"
54158,./TargetProjects/curator/curator-x-async/src/test/java/org/apache/curator/framework/imps/TestFramework.java,166,,"            client.create().withACL(aclList).forPath(""/test"", ""test"".getBytes());"
54159,./TargetProjects/curator/curator-x-async/src/test/java/org/apache/curator/framework/imps/TestFramework.java,183,,"                fail(""Auth failed"");"
54160,./TargetProjects/curator/curator-x-async/src/test/java/org/apache/curator/framework/imps/TestFramework.java,361,,"            async.create().withOptions(EnumSet.of(CreateOption.createParentsIfNeeded)).forPath(""/one/two/three"", ""foo"".getBytes()).toCompletableFuture().get();"
54161,./TargetProjects/curator/curator-x-async/src/test/java/org/apache/curator/framework/imps/TestFramework.java,361,,"            async.create().withOptions(EnumSet.of(CreateOption.createParentsIfNeeded)).forPath(""/one/two/three"", ""foo"".getBytes()).toCompletableFuture().get();"
54162,./TargetProjects/curator/curator-x-async/src/test/java/org/apache/curator/framework/imps/TestFramework.java,396,,"            assertNull(async.checkExists().forPath(""/one/two"").toCompletableFuture().get());"
54163,./TargetProjects/curator/curator-x-async/src/test/java/org/apache/curator/framework/imps/TestFramework.java,491,,"            client.create().forPath(""/head"");"
54164,./TargetProjects/curator/curator-x-async/src/test/java/org/apache/curator/x/async/TestBasicOperations.java,76,,"        complete(AsyncWrappers.asyncEnsureContainers(client, ""/test""));"
54165,./TargetProjects/curator/curator-x-async/src/test/java/org/apache/curator/x/async/migrations/TestMigrationManager.java,198,,"        CuratorOp op5 = client.transactionOp().create().forPath(""/main"", ""hey"".getBytes());"
54166,./TargetProjects/curator/curator-x-async/src/test/java/org/apache/curator/x/async/migrations/TestMigrationManager.java,220,,"        CuratorOp op1 = client.transactionOp().create().forPath(""/test"");"
54167,./TargetProjects/curator/curator-x-async/src/test/java/org/apache/curator/x/async/migrations/TestMigrationManager.java,221,,"        CuratorOp op2 = client.transactionOp().create().forPath(""/test/bar"", ""first"".getBytes());"
54168,./TargetProjects/curator/curator-x-async/src/test/java/org/apache/curator/x/async/migrations/TestMigrationManager.java,221,,"        CuratorOp op2 = client.transactionOp().create().forPath(""/test/bar"", ""first"".getBytes());"
54169,./TargetProjects/curator/curator-x-async/src/test/java/org/apache/curator/x/async/migrations/TestMigrationManager.java,232,,"            fail(""Should throw"");"
54170,./TargetProjects/curator/curator-x-async/src/test/java/org/apache/curator/x/async/modeled/TestModeledFramework.java,60,,"        TestModel rawModel = new TestModel(""John"", ""Galt"", ""1 Galt's Gulch"", 42, BigInteger.valueOf(1));"
54171,./TargetProjects/curator/curator-x-async/src/test/java/org/apache/curator/x/async/modeled/TestModeledFramework.java,60,,"        TestModel rawModel = new TestModel(""John"", ""Galt"", ""1 Galt's Gulch"", 42, BigInteger.valueOf(1));"
54172,./TargetProjects/curator/curator-x-async/src/test/java/org/apache/curator/x/async/modeled/TestModeledFramework.java,146,,"        TestModel model = new TestModel(""John"", ""Galt"", ""Galt's Gulch"", 21, BigInteger.valueOf(1010101));"
54173,./TargetProjects/curator/curator-x-async/src/test/java/org/apache/curator/x/async/modeled/TestZPath.java,46,,"        ZPath path = ZPath.root.child(""one"").child(""two"");"
54174,./TargetProjects/curator/curator-x-async/src/test/java/org/apache/curator/x/async/modeled/TestZPath.java,46,,"        ZPath path = ZPath.root.child(""one"").child(""two"");"
54175,./TargetProjects/curator/curator-x-async/src/test/java/org/apache/curator/x/async/modeled/TestZPath.java,71,,"        assertEquals(ZPath.parse(""/one/two/three""), ZPath.root.child(""one"").child(""two"").child(""three""));"
54176,./TargetProjects/curator/curator-x-discovery-server/src/main/java/org/apache/curator/x/discovery/server/rest/DiscoveryResource.java,85,,"    public Response     putService(ServiceInstance<T> instance, @PathParam(""name"") String name, @PathParam(""id"") String id)"
54177,./TargetProjects/curator/curator-x-discovery-server/src/test/java/org/apache/curator/x/discovery/server/jetty_resteasy/TestStringsWithRestEasy.java,96,,"        getJson(""http://"" + HOST + "":"" + port + ""/v1/service/test/"" + service.getId(), new String(out.toByteArray()));"
54178,./TargetProjects/curator/curator-x-discovery/src/test/java/org/apache/curator/x/discovery/TestJsonInstanceSerializer.java,37,,"        ServiceInstance<String>         instance = new ServiceInstance<String>(""name"", ""id"", ""address"", 10, 20, ""payload"", 0, ServiceType.DYNAMIC, new UriSpec(""{a}/b/{c}""), true);"
54179,./TargetProjects/curator/curator-x-discovery/src/test/java/org/apache/curator/x/discovery/TestJsonInstanceSerializer.java,37,,"        ServiceInstance<String>         instance = new ServiceInstance<String>(""name"", ""id"", ""address"", 10, 20, ""payload"", 0, ServiceType.DYNAMIC, new UriSpec(""{a}/b/{c}""), true);"
54180,./TargetProjects/curator/curator-x-discovery/src/test/java/org/apache/curator/x/discovery/TestJsonInstanceSerializer.java,37,,"        ServiceInstance<String>         instance = new ServiceInstance<String>(""name"", ""id"", ""address"", 10, 20, ""payload"", 0, ServiceType.DYNAMIC, new UriSpec(""{a}/b/{c}""), true);"
54181,./TargetProjects/curator/curator-x-discovery/src/test/java/org/apache/curator/x/discovery/TestServiceCache.java,62,,"            ServiceDiscovery<String> discovery = ServiceDiscoveryBuilder.builder(String.class).basePath(""/discovery"").client(client).build();"
54182,./TargetProjects/curator/curator-x-discovery/src/test/java/org/apache/curator/x/discovery/TestServiceCache.java,66,,"            ServiceCache<String> cache = discovery.serviceCacheBuilder().name(""test"").build();"
54183,./TargetProjects/curator/curator-x-discovery/src/test/java/org/apache/curator/x/discovery/TestServiceCache.java,131,,"            ServiceInstance<String> instance = ServiceInstance.<String>builder().payload(""thing"").name(""test"").port(10064).build();"
54184,./TargetProjects/curator/curator-x-discovery/src/test/java/org/apache/curator/x/discovery/details/TestDownInstanceManager.java,36,,"        ServiceInstance<Void> instance1 = ServiceInstance.<Void>builder().name(""hey"").id(""1"").build();"
54185,./TargetProjects/curator/curator-x-discovery/src/test/java/org/apache/curator/x/discovery/details/TestJsonInstanceSerializerCompatibility.java,41,,"        ServiceInstance<TestJsonInstanceSerializer.Payload> instance = new ServiceInstance<TestJsonInstanceSerializer.Payload>(""name"", ""id"", ""address"", 10, 20, new TestJsonInstanceSerializer.Payload(""test""), 0, ServiceType.DYNAMIC, new UriSpec(""{a}/b/{c}""), true);"
54186,./TargetProjects/curator/curator-x-discovery/src/test/java/org/apache/curator/x/discovery/details/TestJsonInstanceSerializerCompatibility.java,41,,"        ServiceInstance<TestJsonInstanceSerializer.Payload> instance = new ServiceInstance<TestJsonInstanceSerializer.Payload>(""name"", ""id"", ""address"", 10, 20, new TestJsonInstanceSerializer.Payload(""test""), 0, ServiceType.DYNAMIC, new UriSpec(""{a}/b/{c}""), true);"
54187,./TargetProjects/curator/curator-x-discovery/src/test/java/org/apache/curator/x/discovery/details/TestJsonInstanceSerializerCompatibility.java,41,,"        ServiceInstance<TestJsonInstanceSerializer.Payload> instance = new ServiceInstance<TestJsonInstanceSerializer.Payload>(""name"", ""id"", ""address"", 10, 20, new TestJsonInstanceSerializer.Payload(""test""), 0, ServiceType.DYNAMIC, new UriSpec(""{a}/b/{c}""), true);"
54188,./TargetProjects/curator/curator-x-discovery/src/test/java/org/apache/curator/x/discovery/details/TestJsonInstanceSerializerCompatibility.java,41,,"        ServiceInstance<TestJsonInstanceSerializer.Payload> instance = new ServiceInstance<TestJsonInstanceSerializer.Payload>(""name"", ""id"", ""address"", 10, 20, new TestJsonInstanceSerializer.Payload(""test""), 0, ServiceType.DYNAMIC, new UriSpec(""{a}/b/{c}""), true);"
54189,./TargetProjects/curator/curator-x-discovery/src/test/java/org/apache/curator/x/discovery/details/TestServiceCacheRace.java,67,,"            final ServiceCache<String> cache = discovery.serviceCacheBuilder().name(""test"").build();"
54190,./TargetProjects/curator/curator-x-discovery/src/test/java/org/apache/curator/x/discovery/details/TestServiceDiscovery.java,70,,"            ServiceInstance<String> instance1 = ServiceInstance.<String>builder().payload(""thing"").name(""test"").port(10064).build();"
54191,./TargetProjects/curator/curator-x-discovery/src/test/java/org/apache/curator/x/discovery/details/TestServiceDiscovery.java,70,,"            ServiceInstance<String> instance1 = ServiceInstance.<String>builder().payload(""thing"").name(""test"").port(10064).build();"
54192,./TargetProjects/curator/curator-x-discovery/src/test/java/org/apache/curator/x/discovery/details/TestServiceDiscovery.java,72,,"            discovery = new ServiceDiscoveryImpl<String>(client, ""/test"", new JsonInstanceSerializer<String>(String.class), instance1, false)"
54193,./TargetProjects/curator/curator-x-discovery/src/test/java/org/apache/curator/x/discovery/details/TestServiceProvider.java,55,,"            ServiceInstance<String> instance = ServiceInstance.<String>builder().payload(""thing"").name(""test"").port(10064).build();"
54194,./TargetProjects/curator/curator-x-discovery/src/test/java/org/apache/curator/x/discovery/details/TestWatchedInstances.java,53,,"            ServiceInstance<String> instance = ServiceInstance.<String>builder().payload(""thing"").name(""test"").port(10064).build();"
54195,./TargetProjects/cxf/benchmark/benchmark1/src/org/apache/cxf/performance/client/BenchClient.java,292,,"                    throw new RuntimeException(""unrecongized direction "" + direction);"
54196,./TargetProjects/cxf/benchmark/benchmark1/src/org/apache/cxf/performance/client/BenchClient.java,314,,"                                + "" (expected "" + ba.length + "")"");"
54197,./TargetProjects/cxf/bin/DoMerges.java,133,,"            Process p = Runtime.getRuntime().exec(new String[] {""git"", ""reset"", ""--hard""});"
54198,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/attachment/AttachmentSerializer.java,160,,"        writer.write(""\r\n"");"
54199,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/bus/extension/Extension.java,246,,"            LOG.log(Level.FINE, ""Could not load optional extension "" + getName(), ex);"
54200,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/bus/managers/WorkQueueImplMBeanWrapper.java,35,,"                 currencyTimeLimit = 15, persistPolicy = ""OnUpdate"", persistPeriod = 200)"
54201,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/bus/spring/BusDefinitionParser.java,57,,"        String bus = element.getAttribute(""bus"");"
54202,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/common/injection/ResourceInjector.java,180,,"                LOG.log(Level.INFO, ""RESOURCE_RESOLVE_FAILED"");"
54203,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/common/jaxb/JAXBContextCache.java,197,,"            map.put(""com.sun.xml.bind.defaultNamespaceRemap"", defaultNs);"
54204,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/common/jaxb/JAXBUtils.java,132,,"        BUILTIN_DATATYPES_MAP.put(""long"", ""long"");"
54205,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/common/jaxb/JAXBUtils.java,133,,"        BUILTIN_DATATYPES_MAP.put(""short"", ""short"");"
54206,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/common/jaxb/JAXBUtils.java,138,,"        BUILTIN_DATATYPES_MAP.put(""byte"", ""byte"");"
54207,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/common/jaxb/JAXBUtils.java,140,,"        BUILTIN_DATATYPES_MAP.put(""dateTime"", ""javax.xml.datatype.XMLGregorianCalendar"");"
54208,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/common/jaxb/SchemaCollectionContextProxy.java,135,,"        String name = xre == null ? ""##default"" : xre.name();"
54209,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/common/spi/NamespaceClassGenerator.java,144,,"        fv = cw.visitField(Opcodes.ACC_PRIVATE, ""nsctxt"", ""[Ljava/lang/String;"", null, null);"
54210,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/common/spi/NamespaceClassGenerator.java,144,,"        fv = cw.visitField(Opcodes.ACC_PRIVATE, ""nsctxt"", ""[Ljava/lang/String;"", null, null);"
54211,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/common/spi/NamespaceClassGenerator.java,148,,"        mv = cw.visitMethod(Opcodes.ACC_PUBLIC, ""<init>"", ""(Ljava/util/Map;)V"","
54212,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/common/spi/NamespaceClassGenerator.java,181,,"        mv.visitLocalVariable(""this"", ""L"" + slashedName + "";"", null, l0, l2, 0);"
54213,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/common/spi/NamespaceClassGenerator.java,186,,"        mv = cw.visitMethod(Opcodes.ACC_PUBLIC, ""getContextualNamespaceDecls"", ""()[Ljava/lang/String;"", null, null);"
54214,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/common/spi/NamespaceClassGenerator.java,248,,"        mv.visitFrame(Opcodes.F_APPEND, 2, new Object[] {""java/util/List"", Opcodes.INTEGER}, 0, null);"
54215,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/common/spi/NamespaceClassGenerator.java,275,,"        mv.visitTypeInsn(Opcodes.ANEWARRAY, ""java/lang/String"");"
54216,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/common/spi/NamespaceClassGenerator.java,316,,"                ""nspref"", ""Ljava/util/Map;"","
54217,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/common/spi/NamespaceClassGenerator.java,316,,"                ""nspref"", ""Ljava/util/Map;"","
54218,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/common/util/ASMHelper.java,74,,"        void visitLabel(@UnwrapParam(typeMethodName = ""realType"") Label l1);"
54219,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/common/util/ASMHelperImpl.java,56,,"        NONPRIMITIVE_MAP.put(Byte.TYPE, Byte.class.getName().replaceAll(""\\."", ""/""));"
54220,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/common/util/Base64Utility.java,206,,"                throw new Base64Exception(new Message(""BASE64_RUNTIME_EXCEPTION"", LOG));"
54221,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/common/util/Compiler.java,181,,"        if (new File(SystemPropertyAction.getProperty(""java.home"") + fsep + platformjavacname).exists()) {"
54222,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/common/util/Compiler.java,184,,"        } else if (new File(SystemPropertyAction.getProperty(""java.home"") + fsep + "".."" + fsep + ""bin"" + fsep"
54223,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/configuration/blueprint/AbstractBPBeanDefinitionParser.java,211,,"        return !""xmlns"".equals(name) && (pre == null || !""xmlns"".equals(pre))"
54224,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/configuration/spring/AbstractBeanDefinitionParser.java,143,,"        return ""xmlns"".equals(prefix) || prefix == null && ""xmlns"".equals(name);"
54225,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/databinding/AbstractDataBinding.java,123,,"        String ns = d.getDocumentElement().getAttribute(""targetNamespace"");"
54226,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/databinding/AbstractDataBinding.java,157,,"                if (""import"".equals(e.getLocalName())) {"
54227,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/endpoint/ClientImpl.java,325,,"                new org.apache.cxf.common.i18n.Message(""NO_OPERATION"", LOG, operationName));"
54228,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/helpers/IOUtils.java,223,,"                throw new IOException(""0 bytes read in violation of InputStream.read(byte[])"");"
54229,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/io/CachedOutputStream.java,270,,"                    throw new IOException(""Unknown format of currentStream"");"
54230,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/io/CachedWriter.java,294,,"                    throw new IOException(""Unknown format of currentStream"");"
54231,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/resource/URIResolver.java,80,,"        if (uriStr.startsWith(""classpath:"")) {"
54232,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/resource/URIResolver.java,83,,"            && (baseUriStr.startsWith(""jar:"")"
54233,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/resource/URIResolver.java,84,,"                || baseUriStr.startsWith(""zip:"")"
54234,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/resource/URIResolver.java,85,,"                || baseUriStr.startsWith(""wsjar:""))"
54235,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/resource/URIResolver.java,137,,"        String fileStr = uriStr.replace(""%20"", "" "");"
54236,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/resource/URIResolver.java,188,,"                if (!baseFile.exists() && baseUriStr.startsWith(""file:"")) {"
54237,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/staxutils/OverlayW3CDOMStreamWriter.java,69,,"                getCurrentNode().setUserData(""new"", ""new"", null);"
54238,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/staxutils/StaxUtils.java,445,,"            throw new RuntimeException(""Couldn't parse stream."", e);"
54239,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/staxutils/StaxUtils.java,731,,"                        throw new DepthExceededStaxException(""reach the innerElementLevelThreshold:"""
54240,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/staxutils/StaxUtils.java,735,,"                        throw new DepthExceededStaxException(""reach the innerElementCountThreshold:"""
54241,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/staxutils/StaxUtils.java,982,,"            if (""xmlns"".equals(attrPrefix)) {"
54242,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/transport/common/gzip/GZIPOutInterceptor.java,188,,"            message.put(GZIP_ENCODING_KEY, ""gzip"");"
54243,./TargetProjects/cxf/core/src/main/java/org/apache/cxf/transport/common/gzip/GZIPOutInterceptor.java,242,,"                    boolean xGzipEnabled = nonZeros.contains(""x-gzip"")"
54244,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/attachment/AttachmentDeserializerTest.java,72,,"        String message = ""SomeHeader: foo\n"""
54245,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/attachment/AttachmentDeserializerTest.java,73,,"            + ""------=_Part_34950_1098328613.1263781527359\n"""
54246,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/attachment/AttachmentDeserializerTest.java,74,,"            + ""Content-Type: text/xml; charset=UTF-8\n"""
54247,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/attachment/AttachmentDeserializerTest.java,75,,"            + ""Content-Transfer-Encoding: binary\n"""
54248,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/attachment/AttachmentDeserializerTest.java,76,,"            + ""Content-Id: <318731183421.1263781527359.IBM.WEBSERVICES@auhpap02>\n"""
54249,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/attachment/AttachmentDeserializerTest.java,78,,"            + ""<envelope/>\n"""
54250,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/attachment/AttachmentDeserializerTest.java,80,,"            + ""Content-Type: text/xml\n"""
54251,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/attachment/AttachmentDeserializerTest.java,82,,"            + ""Content-Id: <b86a5f2d-e7af-4e5e-b71a-9f6f2307cab0>\n"""
54252,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/attachment/AttachmentDeserializerTest.java,84,,"            + ""<message>\n"""
54253,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/attachment/AttachmentDeserializerTest.java,94,,"        msg.put(Message.CONTENT_TYPE, ""multipart/related"");"
54254,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/attachment/AttachmentDeserializerTest.java,103,,"        String ct = ""multipart/related; type=\""application/xop+xml\""; """
54255,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/attachment/AttachmentDeserializerTest.java,104,,"                    + ""start=\""<soap.xml@xfire.codehaus.org>\""; """
54256,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/attachment/AttachmentDeserializerTest.java,105,,"                    + ""start-info=\""text/xml; charset=utf-8\""; """
54257,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/attachment/AttachmentDeserializerTest.java,368,,"        MimeBodyPartInputStream m = new MimeBodyPartInputStream(pushbackStream, ""------=_Part_1"".getBytes(),"
54258,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/attachment/AttachmentDeserializerTest.java,419,,"                .getProperty(""java.io.tmpdir""));"
54259,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/attachment/AttachmentSerializerTest.java,76,,"        ByteArrayDataSource ds = new ByteArrayDataSource(is, ""application/octet-stream"");"
54260,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/attachment/AttachmentSerializerTest.java,128,,"        out.write(""<soap:Body/>"".getBytes());"
54261,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/attachment/AttachmentSerializerTest.java,152,,"                part.getHeader(""Content-Type"")[0]);"
54262,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/attachment/AttachmentSerializerTest.java,158,,"        assertEquals(""binary"", part.getHeader(""Content-Transfer-Encoding"")[0]);"
54263,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/attachment/AttachmentSerializerTest.java,158,,"        assertEquals(""binary"", part.getHeader(""Content-Transfer-Encoding"")[0]);"
54264,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/attachment/AttachmentSerializerTest.java,159,,"        assertEquals(""<root.message@cxf.apache.org>"", part.getHeader(""Content-ID"")[0]);"
54265,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/attachment/AttachmentUtilTest.java,41,,"        assertEquals(""a.txt"","
54266,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/attachment/AttachmentUtilTest.java,89,,"        assertEquals(""a b.txt"","
54267,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/bus/extension/ExtensionTest.java,61,,"            fail(""Failure expected"");"
54268,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/bus/managers/EndpointResolverRegistryImplTest.java,73,,"        assertEquals(""unexpected resolver count"","
54269,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/bus/managers/EndpointResolverRegistryImplTest.java,82,,"        assertTrue(""expected resolver to be registered"","
54270,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/bus/managers/EndpointResolverRegistryImplTest.java,126,,"        assertSame(""unexpected physical EPR"", physical, resolved);"
54271,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/bus/managers/EndpointResolverRegistryImplTest.java,202,,"        assertSame(""unexpected minted EPR"", logical, minted);"
54272,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/bus/managers/ServiceContractResolverRegistryImplTest.java,71,,"        assertEquals(""unexpected resolver count"","
54273,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/bus/managers/ServiceContractResolverRegistryImplTest.java,80,,"        assertTrue(""expected resolver to be registered"","
54274,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/bus/managers/ServiceContractResolverRegistryImplTest.java,124,,"        assertSame(""unexpected physical EPR"", uri1, resolved);"
54275,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/bus/spring/SpringBusFactoryTest.java,90,,"        assertEquals(""Unexpected interceptors"", 0, bus.getInInterceptors().size());"
54276,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/bus/spring/SpringBusFactoryTest.java,131,,"        assertEquals(""Unexpected number of interceptors"", 2, interceptors.size());"
54277,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/bus/spring/SpringBusFactoryTest.java,132,,"        assertEquals(""Unexpected interceptor"", ""in-a"", interceptors.get(0).toString());"
54278,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/common/annotation/AnnotatedGreeterImpl.java,70,,"    @WebResult(name = ""responseType2"", targetNamespace = ""http://apache.org/hello_world_soap_http/types"")"
54279,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/common/injection/ResourceInjectorTest.java,64,,"        resMgr.resolveResource(""resource2"", String.class, resolvers);"
54280,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/common/injection/ResourceInjectorTest.java,66,,"        resMgr.resolveResource(""resource3"", CharSequence.class, resolvers);"
54281,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/common/security/SimpleGroupTest.java,34,,"        assertEquals(""group"", new SimpleGroup(""group"", ""friend"").getName());"
54282,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/common/security/SimpleGroupTest.java,34,,"        assertEquals(""group"", new SimpleGroup(""group"", ""friend"").getName());"
54283,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/common/util/PackageUtilsTest.java,59,,"        assertEquals(""java.lang"", packageName);"
54284,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/common/util/PropertyUtilsTest.java,38,,"        props.put(TEST_KEY, ""false"");"
54285,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/common/util/PropertyUtilsTest.java,44,,"        props.put(TEST_KEY, ""true"");"
54286,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/common/util/UrlUtilsTest.java,55,,"            assertTrue(e.getMessage().startsWith(""Invalid URL encoding""));"
54287,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/configuration/foo/ObjectFactory.java,45,,"    private static final QName POINT_QNAME = new QName(""http://cxf.apache.org/configuration/foo"","
54288,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/configuration/jsse/SSLUtilsTest.java,61,,"        filtersType.getExclude().add("".*_SHA256"");"
54289,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/configuration/spring/ConfigurerImplTest.java,70,,"            new BusApplicationContext(""/org/apache/cxf/configuration/spring/test-beans.xml"","
54290,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/configuration/spring/ConfigurerImplTest.java,75,,"        assertEquals(""Unexpected value for attribute stringAttr"","
54291,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/configuration/spring/ConfigurerImplTest.java,77,,"        assertTrue(""Unexpected value for attribute booleanAttr"","
54292,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/configuration/spring/ConfigurerImplTest.java,79,,"        assertEquals(""Unexpected value for attribute integerAttr"","
54293,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/feature/transform/XSLTInterceptorsTest.java,83,,"        Assert.assertTrue(""Message was not transformed"", checkTransformedXML(doc));"
54294,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/helpers/IOUtilsTest.java,42,,"        InputStream is = new ByteArrayInputStream(""Hello"".getBytes());"
54295,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/interceptor/LoggingOutInterceptorTest.java,74,,"        String s = ""<today><is><the><twenty> <second> <of> <january> <two> <thousand> <and> <nine></nine> """
54296,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/interceptor/LoggingOutInterceptorTest.java,75,,"            + ""</and></thousand></two></january></of></second></twenty></the></is></today>"";"
54297,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/interceptor/LoggingOutInterceptorTest.java,79,,"        message.put(Message.CONTENT_TYPE, ""application/xml"");"
54298,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/interceptor/security/DefaultSecurityContextTest.java,44,,"        Principal p = new SimplePrincipal(""Barry"");"
54299,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/interceptor/security/DefaultSecurityContextTest.java,46,,"        assertFalse(new DefaultSecurityContext(p, s).isUserInRole(""friend""));"
54300,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/interceptor/security/NamePasswordCallbackHandlerTest.java,38,,"        NamePasswordCallbackHandler handler = new NamePasswordCallbackHandler(""Barry"", ""dog"");"
54301,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/interceptor/security/NamePasswordCallbackHandlerTest.java,38,,"        NamePasswordCallbackHandler handler = new NamePasswordCallbackHandler(""Barry"", ""dog"");"
54302,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/interceptor/security/NamePasswordCallbackHandlerTest.java,40,,"            new Callback[]{new NameCallback(""name""), new PasswordCallback(""password"", false)};"
54303,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/interceptor/security/RolePrefixSecurityContextImplTest.java,42,,"        Principal p = new SimplePrincipal(""Barry"");"
54304,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/interceptor/security/RolePrefixSecurityContextImplTest.java,52,,"        s.getPrincipals().add(new SimplePrincipal(""role_friend""));"
54305,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/interceptor/security/SimpleAuthorizingInterceptorTest.java,47,,"        method = TestService.class.getMethod(""echo"", new Class[]{});"
54306,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/interceptor/security/SimpleAuthorizingInterceptorTest.java,127,,"        in.setMethodRolesMap(Collections.singletonMap(""echo"", ""role1 role2""));"
54307,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/io/CachedStreamTestBase.java,121,,"        assertTrue(""file is deleted"", tmpfile.exists());"
54308,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/io/CachedStreamTestBase.java,124,,"        assertEquals(""text is not decoded correctly"", text, dectext);"
54309,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/io/CachedStreamTestBase.java,203,,"            File tmpfile = getTmpFile(""Hello World!"", cache);"
54310,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/io/CachedStreamTestBase.java,204,,"            assertNull(""expects no tmp file"", tmpfile);"
54311,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/io/CachedStreamTestBase.java,211,,"            assertNotNull(""expects a tmp file"", tmpfile);"
54312,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/phase/PhaseInterceptorChainTest.java,63,,"        Phase phase1 = new Phase(""phase1"", 1);"
54313,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/phase/PhaseInterceptorChainTest.java,64,,"        Phase phase2 = new Phase(""phase2"", 2);"
54314,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/phase/PhaseInterceptorChainTest.java,65,,"        Phase phase3 = new Phase(""phase3"", 3);"
54315,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/phase/PhaseInterceptorChainTest.java,182,,"        assertSame(""Unexpected interceptor at this position."", p1, it.next());"
54316,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/resource/URIResolverTest.java,47,,"        String uriStr = ""jar:"" + resourceURL.toString() + ""!/wsdl/hello_world.wsdl"";"
54317,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/resource/URIResolverTest.java,136,,"        xsdResolver.resolve(baseUri + ""#type2"", schemaLocation, this.getClass());"
54318,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/service/model/BindingOperationInfoTest.java,40,,"            ""http://apache.org/hello_world_soap_http"", ""testInputMessage""),"
54319,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/service/model/FaultInfoTest.java,35,,"        faultInfo = new FaultInfo(new QName(""urn:test:ns"", ""fault""), new QName("
54320,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/service/model/FaultInfoTest.java,35,,"        faultInfo = new FaultInfo(new QName(""urn:test:ns"", ""fault""), new QName("
54321,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/service/model/MessageInfoTest.java,36,,"                                      new QName(""http://apache.org/hello_world_soap_http"", ""testMessage""));"
54322,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/service/model/MessagePartInfoTest.java,43,,"                                          new QName(""http://apache.org/hello_world_soap_http/types"","
54323,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/service/model/OperationInfoTest.java,61,,"            ""http://apache.org/hello_world_soap_http"", ""testInputMessage""),"
54324,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/staxutils/DepthRestrictingStreamReaderTest.java,35,,"            StaxUtils.createXMLStreamReader(getClass().getResourceAsStream(""./resources/amazon.xml""));"
54325,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/staxutils/StaxUtilsTest.java,80,,"        Element root = document.createElementNS(""urn:test"", ""root"");"
54326,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/staxutils/StaxUtilsTest.java,144,,"        doc.appendChild(doc.createElementNS(""http://blah.org/"", ""blah""));"
54327,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/staxutils/StaxUtilsTest.java,145,,"        Element foo = doc.createElementNS(""http://blah.org/"", ""foo"");"
54328,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/staxutils/StaxUtilsTest.java,515,,"            fail(""Failure expected on exceeding the limit"");"
54329,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/staxutils/StaxUtilsTest.java,564,,"            Element childElement = doc.createElementNS(""null"", ""root"" + i);"
54330,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/staxutils/transform/DelegatingNamespaceContextTest.java,43,,"        dnc.addPrefix(""p1"", ""urn:foo1"");"
54331,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/staxutils/transform/DelegatingNamespaceContextTest.java,44,,"        dnc.addPrefix(""p2"", ""urn:foo2"");"
54332,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/staxutils/transform/DelegatingNamespaceContextTest.java,45,,"        assertEquals(""urn:foo0"", dnc.getNamespaceURI(""p0""));"
54333,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/staxutils/transform/DelegatingNamespaceContextTest.java,55,,"        dnc.addPrefix(""p11"", ""urn:foo1"");"
54334,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/staxutils/transform/DelegatingNamespaceContextTest.java,56,,"        dnc.addPrefix(""p2"", ""urn:foo22"");"
54335,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/staxutils/transform/DelegatingNamespaceContextTest.java,57,,"        dnc.addPrefix(""p3"", ""urn:foo3"");"
54336,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/staxutils/transform/DelegatingNamespaceContextTest.java,105,,"        dnc.addPrefix(""p00"", ""urn:foo0"");"
54337,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/staxutils/transform/InTransformReaderTest.java,114,,"        inMap.put(""{http://cxf.apache.org/transform/header/element}*"","
54338,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/staxutils/transform/InTransformReaderTest.java,135,,"                ""{http://cxf.apache.org/transform/header/otherelement}*"");"
54339,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/staxutils/transform/InTransformReaderTest.java,136,,"        inMap.put(""{http://cxf.apache.org/transform/test}*"","
54340,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/staxutils/transform/InTransformReaderTest.java,137,,"                ""{http://cxf.apache.org/transform/othertest}*"");"
54341,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/staxutils/transform/InTransformReaderTest.java,252,,"        transformElements.put(""requestValue"","
54342,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/staxutils/transform/InTransformReaderTest.java,260,,"                                                     ""../resources/greetMeReq.xml"","
54343,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/staxutils/transform/InTransformReaderTest.java,317,,"                                                     ""../resources/amazon.xml"","
54344,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/staxutils/transform/InTransformReaderTest.java,339,,"        appendElements.put(""{http://apache.org/cxf/calculator/types}add"","
54345,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/staxutils/transform/OutTransformWriterTest.java,67,,"                                                                    ""http://testbeans.com/v2"");"
54346,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/staxutils/transform/OutTransformWriterTest.java,130,,"    @XmlRootElement(name = ""testBean"", namespace = ""http://testbeans.com"")"
54347,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/staxutils/transform/OutTransformWriterTest.java,172,,"        inMap.put(""{http://cxf.apache.org/transform/header/element}*"","
54348,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/staxutils/transform/OutTransformWriterTest.java,238,,"                InTransformReader.class.getResourceAsStream(""../resources/doubleBean.xml""));"
54349,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/staxutils/transform/OutTransformWriterTest.java,323,,"        transformElements.put(""requestValue"","
54350,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/staxutils/transform/OutTransformWriterTest.java,330,,"                                                     ""../resources/greetMeReq.xml"","
54351,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/staxutils/transform/OutTransformWriterTest.java,387,,"                                                     ""../resources/amazon.xml"","
54352,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/staxutils/transform/OutTransformWriterTest.java,409,,"        appendElements.put(""{http://apache.org/cxf/calculator/types}add"","
54353,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/staxutils/transform/TransformTestUtils.java,139,,"            LOG.fine(""Event: "" + tevent + "" ? "" + revent);"
54354,./TargetProjects/cxf/core/src/test/java/org/apache/cxf/transport/common/gzip/GZIPAcceptEncodingTest.java,85,,"        singleTest(""gzip"", YES, ""gzip"");"
54355,./TargetProjects/cxf/distribution/src/main/release/samples/corba/bank_ws_addressing/src/main/java/corba/server/BankImpl.java,73,,"        System.out.println(""[Bank] Called create_epr_account( "" + accountName + "")..."");"
54356,./TargetProjects/cxf/distribution/src/main/release/samples/corba/bank_ws_addressing/src/main/java/cxf/server/BankImpl.java,45,,"        System.out.println(""[Bank] Called createAccount( "" + accountName + "" )..."");"
54357,./TargetProjects/cxf/distribution/src/main/release/samples/jax_rs/description_swagger2/src/main/java/demo/jaxrs/swagger/server/Sample.java,99,,"        @ApiParam(value = ""name"", required = true) @PathParam(""name"") String name) {"
54358,./TargetProjects/cxf/distribution/src/main/release/samples/jax_rs/description_swagger2_osgi/src/main/java/demo/jaxrs/swagger/server/Sample.java,85,,"        @ApiParam(value = ""name"", required = true) @PathParam(""name"") String name) {"
54359,./TargetProjects/cxf/distribution/src/main/release/samples/jax_rs/description_swagger2_spring/src/main/java/demo/jaxrs/swagger/server/Sample.java,85,,"        @ApiParam(value = ""name"", required = true) @PathParam(""name"") String name) {"
54360,./TargetProjects/cxf/distribution/src/main/release/samples/jax_rs/description_swagger2_web/src/main/java/demo/jaxrs/swagger/server/Sample.java,85,,"        @ApiParam(value = ""name"", required = true) @PathParam(""name"") String name) {"
54361,./TargetProjects/cxf/distribution/src/main/release/samples/jax_rs/description_swagger2_web/src/main/java/demo/jaxrs/swagger/server/Sample2.java,85,,"        @ApiParam(value = ""name"", required = true) @PathParam(""name"") String name) {"
54362,./TargetProjects/cxf/distribution/src/main/release/samples/jax_rs/spark/src/main/java/demo/jaxrs/server/simple/StreamingService.java,80,,"    @Produces(""text/plain"")"
54363,./TargetProjects/cxf/distribution/src/main/release/samples/jax_rs/spark/src/main/java/demo/jaxrs/server/socket/StreamingService.java,73,,"    @Produces(""text/plain"")"
54364,./TargetProjects/cxf/distribution/src/main/release/samples/jax_rs/spring_security/src/main/java/demo/jaxrs/client/Client.java,49,,"        c.getCustomerInfo(""fred"", ""fred"", 123);"
54365,./TargetProjects/cxf/distribution/src/main/release/samples/jax_rs/spring_security/src/main/java/demo/jaxrs/client/Client.java,50,,"        c.getCustomerInfo(""fred"", ""fredspassword"", 123);"
54366,./TargetProjects/cxf/distribution/src/main/release/samples/jax_rs/spring_security/src/main/java/demo/jaxrs/client/Client.java,51,,"        c.getCustomerInfo(""bob"", ""bobspassword"", 123);"
54367,./TargetProjects/cxf/distribution/src/main/release/samples/jax_rs/spring_security/src/main/java/demo/jaxrs/client/Client.java,51,,"        c.getCustomerInfo(""bob"", ""bobspassword"", 123);"
54368,./TargetProjects/cxf/distribution/src/main/release/samples/jax_rs/spring_security/src/main/java/demo/jaxrs/client/Client.java,74,,"            + name + "", password : "" + password);"
54369,./TargetProjects/cxf/distribution/src/main/release/samples/jax_rs/spring_security/src/main/java/demo/jaxrs/service/CustomerServiceSecured.java,27,,"    @Secured({""ROLE_CUSTOMER"", ""ROLE_ADMIN"" })"
54370,./TargetProjects/cxf/distribution/src/main/release/samples/jax_rs/sse_client/src/main/java/demo/jaxrs/sse/StatsRestServiceImpl.java,52,,"                    sink.send(createStatsEvent(builder.name(""stats""), 1));"
54371,./TargetProjects/cxf/distribution/src/main/release/samples/jax_rs/sse_tomcat/src/main/java/demo/jaxrs/sse/StatsRestServiceImpl.java,53,,"                    sink.send(createStatsEvent(builder.name(""stats""), 1));"
54372,./TargetProjects/cxf/distribution/src/main/release/samples/jax_rs/websocket/src/main/java/demo/jaxrs/client/Client.java,42,,"            client.sendTextMessage(""GET "" + Server.CONTEXT_PATH + ""/customerservice/customers/123"");"
54373,./TargetProjects/cxf/distribution/src/main/release/samples/jax_rs/websocket/src/main/java/demo/jaxrs/server/CustomerService.java,132,,"    @Produces(""text/*"")"
54374,./TargetProjects/cxf/distribution/src/main/release/samples/jax_rs/websocket_osgi/src/main/java/demo/jaxrs/server/CustomerService.java,132,,"    @Produces(""text/*"")"
54375,./TargetProjects/cxf/distribution/src/main/release/samples/jax_rs/websocket_web/src/main/java/demo/jaxrs/server/CustomerService.java,132,,"    @Produces(""text/*"")"
54376,./TargetProjects/cxf/distribution/src/main/release/samples/jaxws_dispatch_provider/src/main/java/demo/hwDispatch/client/Client.java,63,,"        QName serviceName1 = new QName(""http://apache.org/hello_world_soap_http"", ""SOAPService1"");"
54377,./TargetProjects/cxf/distribution/src/main/release/samples/jaxws_graalvm_dynamic/client/src/main/java/org/apache/handlers/AddNumbers.java,33,,"    @RequestWrapper(localName = ""addNumbers"", targetNamespace = ""http://apache.org/handlers/types"", className = ""org.apache.handlers.types.AddNumbers"")"
54378,./TargetProjects/cxf/distribution/src/main/release/samples/ws_addressing/src/main/java/demo/ws_addressing/client/Client.java,105,,"        System.out.println(""Server responded with: "" + resp + ""\n"");"
54379,./TargetProjects/cxf/integration/jca/src/main/java/org/apache/cxf/jca/cxf/CXFWorkAdapter.java,39,,"        LOG.fine(""workAccepted: ["" + e.getWork() + ""], source is ["" + e.getSource() + ""]"");"
54380,./TargetProjects/cxf/integration/jca/src/test/java/org/apache/cxf/jca/core/classloader/FireWallClassLoaderTest.java,44,,"        Class<?> c1 = c.loadClass(""java.lang.String"");"
54381,./TargetProjects/cxf/integration/jca/src/test/java/org/apache/cxf/jca/core/classloader/PlugInClassLoaderTest.java,62,,"                ""org.apache.cxf.jca.dummy.Dummy"");"
54382,./TargetProjects/cxf/integration/jca/src/test/java/org/apache/cxf/jca/core/logging/LoggerHelperTest.java,73,,"        LoggerHelper.setLogLevel(""INFO"");"
54383,./TargetProjects/cxf/integration/jca/src/test/java/org/apache/cxf/jca/core/resourceadapter/ResourceAdapterInternalExceptionTest.java,57,,"        assertTrue(e.toString().indexOf(""reason"") == -1);"
54384,./TargetProjects/cxf/integration/jca/src/test/java/org/apache/cxf/jca/core/resourceadapter/ResourceAdapterInternalExceptionTest.java,75,,"        final String msg = ""msg"";"
54385,./TargetProjects/cxf/integration/jca/src/test/java/org/apache/cxf/jca/core/resourceadapter/ResourceAdapterInternalExceptionTest.java,76,,"        final String causeMsg = ""cause"";"
54386,./TargetProjects/cxf/integration/jca/src/test/java/org/apache/cxf/jca/cxf/CXFConnectionRequestInfoTest.java,38,,"                                                                          new URL(""file:/tmp/foo""),"
54387,./TargetProjects/cxf/integration/jca/src/test/java/org/apache/cxf/jca/cxf/CXFConnectionRequestInfoTest.java,39,,"                                                                          new QName(""service""),"
54388,./TargetProjects/cxf/integration/jca/src/test/java/org/apache/cxf/jca/cxf/CXFConnectionRequestInfoTest.java,40,,"                                                                          new QName(""fooPort""));"
54389,./TargetProjects/cxf/integration/jca/src/test/java/org/apache/cxf/jca/cxf/CXFConnectionRequestInfoTest.java,70,,"        assertNotEquals(""Checking that objects are not equal "", cr1, cr2);"
54390,./TargetProjects/cxf/integration/jca/src/test/java/org/apache/cxf/jca/cxf/ConnectionFactoryImplTest.java,81,,"                                            new URL(""file:/tmp/foo""),"
54391,./TargetProjects/cxf/integration/jca/src/test/java/org/apache/cxf/jca/cxf/ConnectionFactoryImplTest.java,94,,"        assertNull(""Got the result (the passed in ConnectionRequestInfo) from out mock manager"","
54392,./TargetProjects/cxf/integration/jca/src/test/java/org/apache/cxf/jca/cxf/ManagedConnectionImplTest.java,97,,"        assertTrue(""Returned connection does not implement Connection interface"", o instanceof Connection);"
54393,./TargetProjects/cxf/integration/jca/src/test/java/org/apache/cxf/jca/cxf/ManagedConnectionImplTest.java,182,,"        assertTrue(""Asserting associated ManagedConnection."", mci == assocMci);"
54394,./TargetProjects/cxf/integration/jca/src/test/java/org/apache/cxf/jca/cxf/ManagedConnectionTestBase.java,64,,"        QName serviceName = new QName(""http://apache.org/hello_world_soap_http"", ""SOAPService"");"
54395,./TargetProjects/cxf/integration/jca/src/test/java/org/apache/cxf/jca/cxf/ResourceAdapterImplTest.java,57,,"        assertTrue(""constructed without props"", rai instanceof ResourceAdapterImpl);"
54396,./TargetProjects/cxf/integration/jca/src/test/java/org/apache/cxf/jca/cxf/ResourceAdapterImplTest.java,67,,"        assertTrue(""constructed with props"", rai instanceof ResourceAdapterImpl);"
54397,./TargetProjects/cxf/integration/spring-boot/autoconfigure/src/test/java/org/apache/cxf/spring/boot/autoconfigure/micrometer/provider/SpringBasedTimedAnnotationProviderTest.java,70,,"            @Timed(value = ""timed1"")"
54398,./TargetProjects/cxf/integration/spring-boot/autoconfigure/src/test/java/org/apache/cxf/spring/boot/autoconfigure/micrometer/provider/SpringBasedTimedAnnotationProviderTest.java,71,,"            @Timed(value = ""timed2"")"
54399,./TargetProjects/cxf/integration/tracing/tracing-brave/src/main/java/org/apache/cxf/tracing/brave/internal/HttpClientAdapterFactory.java,65,,"                throw new UnsupportedOperationException(""The operation is not supported for response adapter"");"
54400,./TargetProjects/cxf/integration/tracing/tracing-brave/src/main/java/org/apache/cxf/tracing/brave/internal/HttpServerAdapterFactory.java,65,,"                throw new UnsupportedOperationException(""The operation is not supported for response adapter"");"
54401,./TargetProjects/cxf/maven-plugins/codegen-plugin/src/main/java/org/apache/cxf/maven_plugin/AbstractCodegenMojo.java,108,,"    @Parameter(property = ""cxf.disableDependencyScan"", defaultValue = ""false"")"
54402,./TargetProjects/cxf/maven-plugins/wadl2java-plugin/src/main/java/org/apache/cxf/maven_plugin/wadlto/AbstractCodeGeneratorMojo.java,101,,"    @Parameter(property = ""cxf.useCompileClasspath"", defaultValue = ""false"")"
54403,./TargetProjects/cxf/osgi/itests-felix/src/test/java/org/apache/cxf/osgi/itests/NoAriesBlueprintTest.java,78,,"            mavenBundle(""org.apache.cxf"", ""cxf-core"").versionAsInProject(),"
54404,./TargetProjects/cxf/osgi/itests/src/test/java/org/apache/cxf/osgi/itests/CXFOSGiTestSupport.java,105,,"                new VMOption(""--add-opens""),"
54405,./TargetProjects/cxf/osgi/itests/src/test/java/org/apache/cxf/osgi/itests/jaxrs/JaxRsServiceTest.java,62,,"        Book book = wt.path(""/books/123"").request(""application/xml"").get(Book.class);"
54406,./TargetProjects/cxf/rt/bindings/coloc/src/test/java/org/apache/cxf/binding/coloc/ColocOutInterceptorTest.java,100,,"            fail(""Should have thrown a fault"");"
54407,./TargetProjects/cxf/rt/bindings/coloc/src/test/java/org/apache/cxf/binding/coloc/ColocOutInterceptorTest.java,283,,"        assertEquals(""Is not a colocated call"","
54408,./TargetProjects/cxf/rt/bindings/coloc/src/test/java/org/apache/cxf/binding/coloc/ColocOutInterceptorTest.java,428,,"        QName outmi = new QName(""M"", ""out"");"
54409,./TargetProjects/cxf/rt/bindings/coloc/src/test/java/org/apache/cxf/binding/coloc/ColocOutInterceptorTest.java,497,,"        MessagePartInfo mpi = mii.addMessagePart(""parameters"");"
54410,./TargetProjects/cxf/rt/bindings/coloc/src/test/java/org/apache/cxf/binding/coloc/ColocUtilTest.java,181,,"        assertFalse(""Should not find a match"", match);"
54411,./TargetProjects/cxf/rt/bindings/corba/src/main/java/org/apache/cxf/binding/corba/types/CorbaPrimitiveHandler.java,158,,"                data = ""-INF"";"
54412,./TargetProjects/cxf/rt/bindings/corba/src/main/java/org/apache/cxf/binding/corba/types/CorbaPrimitiveHandler.java,160,,"                data = ""INF"";"
54413,./TargetProjects/cxf/rt/bindings/corba/src/main/java/org/apache/cxf/binding/corba/utils/CorbaFixedAnyImplGenerator.java,39,,"                ""org/apache/cxf/binding/corba/utils/FixedAnyImpl"","
54414,./TargetProjects/cxf/rt/bindings/corba/src/main/java/org/apache/cxf/binding/corba/utils/CorbaFixedAnyImplGenerator.java,40,,"                null, ""com/sun/corba/se/impl/corba/AnyImpl"", null);"
54415,./TargetProjects/cxf/rt/bindings/corba/src/main/java/org/apache/cxf/binding/corba/utils/CorbaFixedAnyImplGenerator.java,44,,"        fv = cw.visitField(0, ""obj"", ""Lorg/omg/CORBA/portable/Streamable;"", null, null);"
54416,./TargetProjects/cxf/rt/bindings/corba/src/main/java/org/apache/cxf/binding/corba/utils/CorbaFixedAnyImplGenerator.java,44,,"        fv = cw.visitField(0, ""obj"", ""Lorg/omg/CORBA/portable/Streamable;"", null, null);"
54417,./TargetProjects/cxf/rt/bindings/corba/src/main/java/org/apache/cxf/binding/corba/utils/CorbaFixedAnyImplGenerator.java,98,,"        mv.visitLocalVariable(""this"", ""Lorg/apache/cxf/binding/corba/utils/FixedAnyImpl;"","
54418,./TargetProjects/cxf/rt/bindings/corba/src/main/java/org/apache/cxf/binding/corba/utils/CorbaFixedAnyImplGenerator.java,98,,"        mv.visitLocalVariable(""this"", ""Lorg/apache/cxf/binding/corba/utils/FixedAnyImpl;"","
54419,./TargetProjects/cxf/rt/bindings/corba/src/main/java/org/apache/cxf/binding/corba/utils/CorbaFixedAnyImplGenerator.java,222,,"        ASMHelper.MethodVisitor mv = cw.visitMethod(opCodes.ACC_PUBLIC, ""<init>"", ""(Lorg/omg/CORBA/ORB;)V"", null, null);"
54420,./TargetProjects/cxf/rt/bindings/corba/src/test/java/org/apache/cxf/binding/corba/CorbaConduitTest.java,343,,"        assertEquals(""ID should be equal"", exList.item(0).id(), ""IDL:BadRecord:1.0"");"
54421,./TargetProjects/cxf/rt/bindings/corba/src/test/java/org/apache/cxf/binding/corba/CorbaTypeMapTest.java,43,,"        corbaTypeImpl.setName(""Test.MultiPart.Colour"");"
54422,./TargetProjects/cxf/rt/bindings/corba/src/test/java/org/apache/cxf/binding/corba/runtime/CorbaStreamReaderTest.java,44,,"        EasyMock.expect(mock.getName()).andReturn(new QName(""http://foo.org"", ""test""));"
54423,./TargetProjects/cxf/rt/bindings/corba/src/test/java/org/apache/cxf/binding/corba/runtime/CorbaStreamReaderTest.java,44,,"        EasyMock.expect(mock.getName()).andReturn(new QName(""http://foo.org"", ""test""));"
54424,./TargetProjects/cxf/rt/bindings/corba/src/test/java/org/apache/cxf/binding/corba/runtime/CorbaStreamReaderTest.java,65,,"        EasyMock.expect(mock.getText()).andReturn(""abcdef"");"
54425,./TargetProjects/cxf/rt/bindings/corba/src/test/java/org/apache/cxf/binding/corba/runtime/CorbaStreamableTest.java,67,,"        QName objName = new QName(""object"");"
54426,./TargetProjects/cxf/rt/bindings/corba/src/test/java/org/apache/cxf/binding/corba/types/CorbaHandlerUtilsTest.java,105,,"        QName objName = new QName(""object"");"
54427,./TargetProjects/cxf/rt/bindings/corba/src/test/java/org/apache/cxf/binding/corba/utils/CorbaUtilsTest.java,65,,"        QName type = new QName(CorbaConstants.NU_WSDL_CORBA, ""boolean"", ""corba"");"
54428,./TargetProjects/cxf/rt/bindings/soap/src/main/java/org/apache/cxf/binding/soap/SoapBindingFactory.java,231,,"                soapFault.setUse(""literal"");"
54429,./TargetProjects/cxf/rt/bindings/soap/src/main/java/org/apache/cxf/binding/soap/SoapTransportFactory.java,78,,"            ""soap.udp"""
54430,./TargetProjects/cxf/rt/bindings/soap/src/main/java/org/apache/cxf/binding/soap/interceptor/MustUnderstandInterceptor.java,90,,"                throw new SoapFault(new Message(""MUST_UNDERSTAND"", BUNDLE, notUnderstandHeaders),"
54431,./TargetProjects/cxf/rt/bindings/soap/src/main/java/org/apache/cxf/binding/soap/interceptor/SoapOutInterceptor.java,194,,"                new org.apache.cxf.common.i18n.Message(""XML_WRITE_EXC"", BUNDLE), e, soapVersion.getSender());"
54432,./TargetProjects/cxf/rt/bindings/soap/src/main/java/org/apache/cxf/binding/soap/interceptor/SoapPreProtocolOutInterceptor.java,127,,"        } else if (message.getVersion() instanceof Soap12 && !""\""\"""".equals(action)) {"
54433,./TargetProjects/cxf/rt/bindings/soap/src/test/java/org/apache/cxf/binding/soap/MustUnderstandInterceptorTest.java,90,,"        assertTrue(""DummaySoapInterceptor getRoles has been called!"", dsi.isCalledGetRoles());"
54434,./TargetProjects/cxf/rt/bindings/soap/src/test/java/org/apache/cxf/binding/soap/MustUnderstandInterceptorTest.java,91,,"        assertTrue(""DummaySoapInterceptor getUnderstood has been called!"", dsi.isCalledGetUnderstood());"
54435,./TargetProjects/cxf/rt/bindings/soap/src/test/java/org/apache/cxf/binding/soap/MustUnderstandInterceptorTest.java,121,,"        BindingInfo binding = serviceInfo.getBinding(new QName(""http://org.apache.cxf/headers"","
54436,./TargetProjects/cxf/rt/bindings/soap/src/test/java/org/apache/cxf/binding/soap/RPCOutInterceptorTest.java,88,,"        mcs.setElem1(""elem1"");"
54437,./TargetProjects/cxf/rt/bindings/soap/src/test/java/org/apache/cxf/binding/soap/SoapBindingFactoryTest.java,106,,"        assertEquals(""document"", sbi.getStyle());"
54438,./TargetProjects/cxf/rt/bindings/soap/src/test/java/org/apache/cxf/binding/soap/SoapBindingFactoryTest.java,192,,"            .buildServices(d, new QName(""http://apache.org/hello_world_soap12_http"", ""SOAPService""))"
54439,./TargetProjects/cxf/rt/bindings/soap/src/test/java/org/apache/cxf/binding/soap/interceptor/SoapActionInInterceptorTest.java,55,,"        SoapMessage message = setUpMessage(""text/xml"", Soap11.getInstance(), ""urn:cxf"");"
54440,./TargetProjects/cxf/rt/databinding/aegis/src/main/java/org/apache/cxf/aegis/databinding/AegisDatabinding.java,343,,"            if (part.getProperty(""nillable"") == null) {"
54441,./TargetProjects/cxf/rt/databinding/aegis/src/main/java/org/apache/cxf/aegis/type/encoded/ArrayTypeInfo.java,112,,"            throw new DatabindingException(""Invalid ArrayType value "" + arrayTypeValue);"
54442,./TargetProjects/cxf/rt/databinding/aegis/src/main/java/org/apache/cxf/aegis/type/encoded/SoapArrayType.java,80,,"                throw new DatabindingException(""The array offset "" + arrayTypeInfo.getOffset() + "" in """
54443,./TargetProjects/cxf/rt/databinding/aegis/src/main/java/org/apache/cxf/aegis/type/java5/AnnotationReader.java,80,,"        Class<?> value = (Class<?>) getAnnotationValue(""type"","
54444,./TargetProjects/cxf/rt/databinding/aegis/src/main/java/org/apache/cxf/aegis/type/java5/AnnotationReader.java,112,,"        String name = (String) getAnnotationValue(""name"","
54445,./TargetProjects/cxf/rt/databinding/aegis/src/main/java/org/apache/cxf/aegis/type/java5/AnnotationReader.java,152,,"        String namespace = (String) getAnnotationValue(""namespace"","
54446,./TargetProjects/cxf/rt/databinding/aegis/src/main/java/org/apache/cxf/aegis/xml/stax/ElementWriter.java,67,,"            throw new DatabindingException(""Error writing document."", e);"
54447,./TargetProjects/cxf/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/custom/service/ServiceImpl.java,35,,"        map.put(""1"", new NoDefaultConstructorBeanImpl(""1"", ""name""));"
54448,./TargetProjects/cxf/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/inheritance/InheritancePOJOTest.java,45,,"                                                    null, ""InheritanceService"","
54449,./TargetProjects/cxf/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/integration/ParameterMappingTest.java,46,,"        createService(ArrayService.class, ""ArrayService"", null);"
54450,./TargetProjects/cxf/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/integration/ParameterMappingTest.java,55,,"        assertValid(""/wsdl:definitions/wsdl:types/"""
54451,./TargetProjects/cxf/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/integration/ParameterMappingTest.java,58,,"                    + ""/xsd:sequence"""
54452,./TargetProjects/cxf/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/integration/WrappedTest.java,46,,"        createService(ArrayService.class, arrayService, ""Array"", new QName(""urn:Array"", ""Array""));"
54453,./TargetProjects/cxf/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/integration/WrappedTest.java,72,,"                    ""/wsdl:definitions/wsdl:types"""
54454,./TargetProjects/cxf/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/integration/WrappedTest.java,105,,"                    + ""/xsd:schema[@targetNamespace='urn:beanz']"""
54455,./TargetProjects/cxf/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/standalone/StandaloneWriteTest.java,66,,"        testUtilities.addNamespace(""feline"", ""urn:meow"");"
54456,./TargetProjects/cxf/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/standalone/StandaloneWriteTest.java,76,,"                                                             ""string""));"
54457,./TargetProjects/cxf/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/type/array/FlatArrayTest.java,56,,"        sf.setAddress(""local://FlatArray"");"
54458,./TargetProjects/cxf/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/type/basic/BeanTest.java,71,,"        addNamespace(""b"", ""urn:Bean"");"
54459,./TargetProjects/cxf/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/type/basic/BeanTest.java,90,,"        type.setSchemaType(new QName(""urn:Bean"", ""bean""));"
54460,./TargetProjects/cxf/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/type/basic/BeanTest.java,96,,"        assertEquals(""bleh"", bean.getBleh());"
54461,./TargetProjects/cxf/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/type/basic/BeanTest.java,97,,"        assertEquals(""howdy"", bean.getHowdy());"
54462,./TargetProjects/cxf/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/type/basic/BeanTest.java,600,,"        type.setSchemaType(new QName(""urn:foo"", ""BadBean""));"
54463,./TargetProjects/cxf/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/type/basic/DateTimezoneTest.java,56,,"        BeanTypeInfo info = new BeanTypeInfo(CalendarBean.class, ""urn:Bean"");"
54464,./TargetProjects/cxf/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/type/basic/DynamicProxyTest.java,55,,"        type.setSchemaType(new QName(""urn:MyInterface"", ""data""));"
54465,./TargetProjects/cxf/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/type/basic/DynamicProxyTest.java,55,,"        type.setSchemaType(new QName(""urn:MyInterface"", ""data""));"
54466,./TargetProjects/cxf/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/type/basic/DynamicProxyTest.java,57,,"        ElementReader reader = new ElementReader(getResourceAsStream(""MyInterface.xml""));"
54467,./TargetProjects/cxf/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/type/basic/DynamicProxyTest.java,90,,"            fail(IllegalAccessError.class + "" should be thrown."");"
54468,./TargetProjects/cxf/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/type/basic/QualificationTest.java,44,,"        addNamespace(""b"", ""urn:Bean"");"
54469,./TargetProjects/cxf/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/type/basic/QualificationTest.java,57,,"        type.setSchemaType(new QName(""urn:Bean"", ""bean""));"
54470,./TargetProjects/cxf/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/type/encoded/ArrayTypeInfoTest.java,48,,"        addNamespace(""b"", ""urn:Bean"");"
54471,./TargetProjects/cxf/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/type/encoded/ArrayTypeInfoTest.java,62,,"        addressType.setSchemaType(new QName(""urn:Bean"", ""addr""));"
54472,./TargetProjects/cxf/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/type/encoded/SoapArrayTypeTest.java,57,,"        BeanTypeInfo addressInfo = new BeanTypeInfo(Address.class, ""urn:Bean"");"
54473,./TargetProjects/cxf/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/type/encoded/SoapArrayTypeTest.java,126,,"        assertArrayEquals(new Object[]{42, (float)42.42, ""Forty Two""}, objects);"
54474,./TargetProjects/cxf/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/type/encoded/SoapArrayTypeTest.java,133,,"                          new Object[]{42, new BigDecimal(""42.42""), ""Forty Two""},"
54475,./TargetProjects/cxf/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/type/encoded/StructTypeTest.java,58,,"        BeanTypeInfo addressInfo = new BeanTypeInfo(Address.class, ""urn:Bean"");"
54476,./TargetProjects/cxf/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/type/java5/ConfigurationTest.java,70,,"        assertTrue(info.isNillable(new QName(info.getDefaultNamespace(), ""bogusProperty"")));"
54477,./TargetProjects/cxf/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/type/java5/EnumTypeTest.java,72,,"        type.setSchemaType(new QName(""urn:test"", ""test""));"
54478,./TargetProjects/cxf/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/type/java5/XFireXmlParamTypeTest.java,60,,"        assertEquals(new QName(""urn:xfire:foo"", ""custom""), type.getSchemaType());"
54479,./TargetProjects/cxf/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/type/java5/XFireXmlParamTypeTest.java,60,,"        assertEquals(new QName(""urn:xfire:foo"", ""custom""), type.getSchemaType());"
54480,./TargetProjects/cxf/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/type/java5/map/StudentTest.java,86,,"        sf.setAddress(""local://StudentServiceDocLiteral"");"
54481,./TargetProjects/cxf/rt/databinding/jaxb/src/main/java/org/apache/cxf/jaxb/JAXBEncoderDecoder.java,120,,"                return ""type"";"
54482,./TargetProjects/cxf/rt/databinding/jaxb/src/main/java/org/apache/cxf/jaxb/JAXBEncoderDecoder.java,265,,"            Message faultMessage = new Message(""MARSHAL_ERROR"", LOG, ex.getLinkedException()"
54483,./TargetProjects/cxf/rt/databinding/jaxb/src/main/java/org/apache/cxf/jaxb/JAXBEncoderDecoder.java,305,,"                throw new Fault(new Message(""UNKNOWN_SOURCE"", LOG, source.getClass().getName()));"
54484,./TargetProjects/cxf/rt/databinding/jaxb/src/main/java/org/apache/cxf/jaxb/JAXBEncoderDecoder.java,398,,"                    int idx = m.getName().startsWith(""get"") ? 3 : 2;"
54485,./TargetProjects/cxf/rt/databinding/jaxb/src/main/java/org/apache/cxf/jaxb/JAXBEncoderDecoder.java,759,,"        Type genericType = (Type)part.getProperty(""generic.type"");"
54486,./TargetProjects/cxf/rt/databinding/jaxb/src/main/java/org/apache/cxf/jaxb/JAXBEncoderDecoder.java,930,,"                    throw new Fault(new Message(""UNMARSHAL_ERROR"", LOG,"
54487,./TargetProjects/cxf/rt/databinding/jaxb/src/main/java/org/apache/cxf/jaxb/JAXBSchemaInitializer.java,441,,"                if (m.getName().startsWith(""get"")"
54488,./TargetProjects/cxf/rt/databinding/jaxb/src/main/java/org/apache/cxf/jaxb/Utils.java,229,,"    @SuppressWarnings({ ""rawtypes"", ""unchecked"" })"
54489,./TargetProjects/cxf/rt/databinding/jaxb/src/main/java/org/apache/cxf/jaxb/Utils.java,229,,"    @SuppressWarnings({ ""rawtypes"", ""unchecked"" })"
54490,./TargetProjects/cxf/rt/databinding/jaxb/src/main/java/org/apache/cxf/jaxb/WrapperHelperClassGenerator.java,149,,"        ASMHelper.MethodVisitor mv = cw.visitMethod(opCodes.ACC_PUBLIC, ""<init>"", ""()V"", null, null);"
54491,./TargetProjects/cxf/rt/databinding/jaxb/src/main/java/org/apache/cxf/jaxb/WrapperHelperClassGenerator.java,149,,"        ASMHelper.MethodVisitor mv = cw.visitMethod(opCodes.ACC_PUBLIC, ""<init>"", ""()V"", null, null);"
54492,./TargetProjects/cxf/rt/databinding/jaxb/src/main/java/org/apache/cxf/jaxb/WrapperHelperClassGenerator.java,229,,"                mv.visitMethodInsn(opCodes.INVOKEINTERFACE, ""java/util/List"", ""get"", ""(I)Ljava/lang/Object;"", true);"
54493,./TargetProjects/cxf/rt/databinding/jaxb/src/main/java/org/apache/cxf/jaxb/io/DataReaderImpl.java,136,,"            throw new Fault(new Message(""UNMARSHAL_ERROR"", LOG, ex.getLinkedException()"
54494,./TargetProjects/cxf/rt/databinding/jaxb/src/main/java/org/apache/cxf/jaxb/io/DataWriterImpl.java,186,,"            Message faultMessage = new Message(""MARSHAL_ERROR"", LOG, ex.getLinkedException()"
54495,./TargetProjects/cxf/rt/databinding/jaxb/src/test/java/org/apache/cxf/jaxb/BareOutInterceptorTest.java,95,,"        assertEquals(new QName(""http://apache.org/hello_world_soap_http/types"", ""greetMeResponse""),"
54496,./TargetProjects/cxf/rt/databinding/jaxb/src/test/java/org/apache/cxf/jaxb/JAXBDataBindingTest.java,198,,"        nsMap.put(""uri:ultima:thule"", """");"
54497,./TargetProjects/cxf/rt/databinding/jaxb/src/test/java/org/apache/cxf/jaxb/JAXBEncoderDecoderTest.java,158,,"        String str = new String(""Hello"");"
54498,./TargetProjects/cxf/rt/databinding/jaxb/src/test/java/org/apache/cxf/jaxb/JAXBEncoderDecoderTest.java,433,,"        rtEl.appendChild(doc.createTextNode(""Hello Test""));"
54499,./TargetProjects/cxf/rt/databinding/jaxb/src/test/java/org/apache/cxf/jaxb/JAXBEncoderDecoderTest.java,621,,"        targetNamespace = ""http://apache.org/type_test/doc"","
54500,./TargetProjects/cxf/rt/databinding/jaxb/src/test/java/org/apache/cxf/jaxb/JAXBUtilsTest.java,54,,"        assertEquals(""org.apache.cxf.configuration.types"","
54501,./TargetProjects/cxf/rt/databinding/jaxb/src/test/java/org/apache/cxf/jaxb/JAXBUtilsTest.java,112,,"        assertEquals(""arg0"","
54502,./TargetProjects/cxf/rt/databinding/jaxb/src/test/java/org/apache/cxf/jaxb/JAXBUtilsTest.java,119,,"        assertEquals(""mixedCaseName"","
54503,./TargetProjects/cxf/rt/databinding/jaxb/src/test/java/org/apache/cxf/jaxb/JAXBUtilsTest.java,129,,"                     JAXBUtils.nameToIdentifier(""Answer42"", JAXBUtils.IdentifierType.VARIABLE));"
54504,./TargetProjects/cxf/rt/databinding/jaxb/src/test/java/org/apache/cxf/jaxb/JAXBUtilsTest.java,138,,"                     JAXBUtils.nameToIdentifier(""name-with-dashes"", JAXBUtils.IdentifierType.VARIABLE));"
54505,./TargetProjects/cxf/rt/databinding/jaxb/src/test/java/org/apache/cxf/jaxb/JAXBUtilsTest.java,147,,"                     JAXBUtils.nameToIdentifier(""other_punct-chars"", JAXBUtils.IdentifierType.VARIABLE));"
54506,./TargetProjects/cxf/rt/databinding/jaxb/src/test/java/org/apache/cxf/jaxb/io/XMLStreamDataWriterTest.java,83,,"        val.setTickerSymbol(""This is a symbol"");"
54507,./TargetProjects/cxf/rt/databinding/jaxb/src/test/java/org/apache/cxf/jaxb/io/XMLStreamDataWriterTest.java,86,,"        QName elName = new QName(""http://apache.org/hello_world_doc_lit_bare/types"", ""inout"");"
54508,./TargetProjects/cxf/rt/databinding/jaxb/src/test/java/org/apache/cxf/jaxb/io/XMLStreamDataWriterTest.java,86,,"        QName elName = new QName(""http://apache.org/hello_world_doc_lit_bare/types"", ""inout"");"
54509,./TargetProjects/cxf/rt/databinding/jaxb/src/test/java/org/apache/cxf/jaxb/io/XMLStreamDataWriterTest.java,149,,"        String val = new String(""TESTOUTPUTMESSAGE"");"
54510,./TargetProjects/cxf/rt/databinding/jaxb/src/test/java/org/apache/cxf/jaxb/io/XMLStreamDataWriterTest.java,150,,"        QName elName = new QName(""http://apache.org/hello_world_rpclit/types"","
54511,./TargetProjects/cxf/rt/databinding/jaxb/src/test/java/org/apache/cxf/jaxb/io/XMLStreamDataWriterTest.java,251,,"        val.setRequestType(""Hello"");"
54512,./TargetProjects/cxf/rt/databinding/jaxb/src/test/java/org/apache/cxf/jaxb/io/XMLStreamDataWriterTest.java,260,,"        assertEquals(new QName(""http://apache.org/hello_world_soap_http/types"", ""greetMe""),"
54513,./TargetProjects/cxf/rt/features/logging/src/test/java/org/apache/cxf/ext/logging/TruncatedTest.java,62,,"        byte[] payload = ""TestMessage"".getBytes(StandardCharsets.UTF_8);"
54514,./TargetProjects/cxf/rt/features/metrics/src/main/java/org/apache/cxf/metrics/micrometer/provider/StandardTags.java,38,,"    private static final Tag URI_UNKNOWN = Tag.of(""uri"", UNKNOWN);"
54515,./TargetProjects/cxf/rt/features/metrics/src/test/java/org/apache/cxf/metrics/micrometer/MicrometerMetricsProviderTest.java,83,,"        MetricsContext actual = underTest.createEndpointContext(endpoint, true, ""clientId"");"
54516,./TargetProjects/cxf/rt/features/metrics/src/test/java/org/apache/cxf/metrics/micrometer/MicrometerMetricsProviderTest.java,96,,"        assertThat(getFieldValue(actual, ""registry""), is(registry));"
54517,./TargetProjects/cxf/rt/features/metrics/src/test/java/org/apache/cxf/metrics/micrometer/MicrometerMetricsProviderTest.java,97,,"        assertThat(getFieldValue(actual, ""tagsProvider""), is(tagsProvider));"
54518,./TargetProjects/cxf/rt/features/metrics/src/test/java/org/apache/cxf/metrics/micrometer/MicrometerMetricsProviderTest.java,98,,"        assertThat(getFieldValue(actual, ""timedAnnotationProvider""), is(timedAnnotationProvider));"
54519,./TargetProjects/cxf/rt/features/metrics/src/test/java/org/apache/cxf/metrics/micrometer/MicrometerMetricsProviderTest.java,99,,"        assertThat(getFieldValue(actual, ""metricName""), is(""http.server.requests""));"
54520,./TargetProjects/cxf/rt/features/metrics/src/test/java/org/apache/cxf/metrics/micrometer/MicrometerMetricsProviderTest.java,100,,"        assertThat(getFieldValue(actual, ""autoTimeRequests""), is(true));"
54521,./TargetProjects/cxf/rt/features/metrics/src/test/java/org/apache/cxf/metrics/micrometer/MicrometerMetricsProviderTest.java,101,,"        assertThat(getFieldValue(actual, ""tagsCustomizers""), is(Collections.singletonList(tagsCustomizer)));"
54522,./TargetProjects/cxf/rt/features/metrics/src/test/java/org/apache/cxf/metrics/micrometer/provider/DefaultTimedAnnotationProviderTest.java,77,,"            @Timed(value = ""timed1"")"
54523,./TargetProjects/cxf/rt/features/metrics/src/test/java/org/apache/cxf/metrics/micrometer/provider/DefaultTimedAnnotationProviderTest.java,78,,"            @Timed(value = ""timed2"")"
54524,./TargetProjects/cxf/rt/features/metrics/src/test/java/org/apache/cxf/metrics/micrometer/provider/StandardTagsTest.java,145,,"        assertThat(actual, is(Tag.of(METHOD_METRIC_NAME, ""UNKNOWN"")));"
54525,./TargetProjects/cxf/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/ext/multipart/Attachment.java,63,,"            if (""Content-ID"".equalsIgnoreCase(name)) {"
54526,./TargetProjects/cxf/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/ext/multipart/Attachment.java,89,,"             new DataHandler(new InputStreamDataSource(is, headers.getFirst(""Content-Type""))),"
54527,./TargetProjects/cxf/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/LinkBuilderImpl.java,226,,"                sb.append(';').append(Link.REL).append(""=\"""").append(rel).append('""');"
54528,./TargetProjects/cxf/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/UriBuilderImpl.java,197,,"            if (thePath.contains(""%2F"")) {"
54529,./TargetProjects/cxf/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/tl/ThreadLocalServletContext.java,113,,"    @SuppressWarnings(""deprecation"")"
54530,./TargetProjects/cxf/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/interceptor/JAXRSDefaultFaultOutInterceptor.java,84,,"            nsStack.add(""http://cxf.apache.org/bindings/xformat"");"
54531,./TargetProjects/cxf/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/lifecycle/PerRequestResourceProvider.java,57,,"            throw new RuntimeException(""Resource class "" + clazz"
54532,./TargetProjects/cxf/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/provider/AbstractJAXBProvider.java,303,,"    @SuppressWarnings({ ""unchecked"", ""rawtypes"" })"
54533,./TargetProjects/cxf/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/provider/JAXRSDataBinding.java,59,,"    @SuppressWarnings(""unchecked"")"
54534,./TargetProjects/cxf/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/provider/ProviderFactory.java,268,,"    @SuppressWarnings(""unchecked"")"
54535,./TargetProjects/cxf/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/utils/InjectionUtils.java,418,,"    @SuppressWarnings(""unchecked"")"
54536,./TargetProjects/cxf/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/utils/InjectionUtils.java,702,,"                    } else if (m.getName().equalsIgnoreCase(""get"" + memberKey)"
54537,./TargetProjects/cxf/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/utils/JAXRSUtils.java,297,,"    @SuppressWarnings(""unchecked"")"
54538,./TargetProjects/cxf/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/utils/JAXRSUtils.java,559,,"        if (!""OPTIONS"".equalsIgnoreCase(httpMethod)) {"
54539,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/Customer.java,369,,"    @Produces(""text/xml"")"
54540,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/Customer.java,386,,"    public void testQuery(@QueryParam(""query"") String queryString,"
54541,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/Customer.java,389,,"                          @QueryParam(""query3"") String query3) {"
54542,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/JAXRSServiceFactoryBeanTest.java,68,,"        assertTrue(""No operation found"", verifyOp(ops, ""getBook"", ""GET"", false));"
54543,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/JAXRSServiceFactoryBeanTest.java,68,,"        assertTrue(""No operation found"", verifyOp(ops, ""getBook"", ""GET"", false));"
54544,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/SelectMethodCandidatesTest.java,74,,"        doTestGenericSuperType(BookEntity.class, ""POST"");"
54545,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/SelectMethodCandidatesTest.java,106,,"        String contentTypes = ""text/xml"";"
54546,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/SelectMethodCandidatesTest.java,124,,"        assertEquals(""resourceMethod needs to be selected"", ""postEntity"","
54547,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/SelectMethodCandidatesTest.java,136,,"        assertEquals(""The Book"", book.getName());"
54548,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/SelectMethodCandidatesTest.java,152,,"                                                            sortMediaTypes(""*/*""));"
54549,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/SelectMethodCandidatesTest.java,208,,"        m.put(Message.CONTENT_TYPE, ""application/json"");"
54550,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/SelectMethodCandidatesTest.java,213,,"                                                            ""GET"","
54551,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/SelectMethodCandidatesTest.java,341,,"        String contentType = ct == null ? ""application/xml"" : ct;"
54552,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/SelectMethodCandidatesTest.java,366,,"        doTestProducesResource(ResponseMediaTypeResource.class, ""/m1"","
54553,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/SelectMethodCandidatesTest.java,414,,"                               ""application/*"", ""application/xml"", ""m4"");"
54554,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/SelectMethodCandidatesTest.java,520,,"        doTestRootResourcesWithSameName(""/a/books"", ""put"", RootResource.class);"
54555,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/SelectMethodCandidatesTest.java,767,,"                                      ""/1/2/3/d/custom"","
54556,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/SelectMethodCandidatesTest.java,911,,"        @Consumes({""application/xml"", ""text/*"" })"
54557,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/ext/multipart/ContentDispositionTest.java,32,,"        assertEquals(""attachment"", cd.getType());"
54558,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/ext/xml/XMLSourceTest.java,68,,"        assertEquals(""baz"", xp.getValue(""/foo/bar/@attr""));"
54559,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/ext/xml/XMLSourceTest.java,86,,"        assertEquals(""barValue"", xp.getValue(""/foo/bar""));"
54560,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/ext/xml/XMLSourceTest.java,126,,"        InputStream is = new ByteArrayInputStream(""<foo><bar/></foo>"".getBytes());"
54561,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/ext/xml/XMLSourceTest.java,176,,"        map.put(""x"", ""http://baz"");"
54562,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/ext/xml/XMLSourceTest.java,177,,"        Bar2 bar = xp.getNode(""/x:foo/x:bar"", map, Bar2.class);"
54563,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/CookieHeaderProviderTest.java,35,,"        assertTrue(""bar"".equals(c.getValue())"
54564,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/CookieHeaderProviderTest.java,36,,"                   && ""foo"".equals(c.getName())"
54565,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/HttpHeadersImplTest.java,54,,"        Message m = createMessage(createHeader(""COMPLEX_HEADER"",  ""b=c; param=c, a=b;param=b""));"
54566,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/HttpHeadersImplTest.java,65,,"        m.put(HttpHeadersImpl.HEADER_SPLIT_PROPERTY, ""true"");"
54567,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/HttpHeadersImplTest.java,143,,"        List<String> acceptValues = hs.get(""Accept"");"
54568,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/HttpHeadersImplTest.java,145,,"        assertEquals(""text/bar;q=0.6"", acceptValues.get(0));"
54569,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/HttpHeadersImplTest.java,148,,"        assertEquals(hs.getFirst(""Content-Type""), ""*/*"");"
54570,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/HttpHeadersImplTest.java,148,,"        assertEquals(hs.getFirst(""Content-Type""), ""*/*"");"
54571,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/HttpHeadersImplTest.java,208,,"        List<String> dateValues = h.getRequestHeader(""Date"");"
54572,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/HttpHeadersImplTest.java,210,,"        assertEquals(""Tue, 21 Oct 2008 17:00:00 GMT"", dateValues.get(0));"
54573,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/LinkBuilderImplTest.java,45,,"        Link prevLink = linkBuilder.uri(""http://example.com/page1"").rel(""previous"").build();"
54574,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/MediaTypeHeaderProviderTest.java,77,,"        assertEquals(""Media type was not parsed correctly"","
54575,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/MediaTypeHeaderProviderTest.java,78,,"                     m, new MediaType(""text"", ""html""));"
54576,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/MediaTypeHeaderProviderTest.java,136,,"            fail(""Parse exception expected"");"
54577,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/MetadataMapTest.java,48,,"        value1.add(""bar"");"
54578,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/MetadataMapTest.java,49,,"        value1.add(""foo"");"
54579,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/MetadataMapTest.java,50,,"        m.put(""baz"", value1);"
54580,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/MetadataMapTest.java,52,,"        m.putSingle(""baz"", ""clazz"");"
54581,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/MetadataMapTest.java,54,,"        assertEquals(""Only a single value should be in the list"", 1, value2.size());"
54582,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/MetadataMapTest.java,55,,"        assertEquals(""Value is wrong"", ""clazz"", value2.get(0));"
54583,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/MetadataMapTest.java,63,,"        m.putSingle(null, ""null2"");"
54584,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/MetadataMapTest.java,82,,"        map.putSingle(""key"", obj1);"
54585,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/MetadataMapTest.java,132,,"        m.addAll(""baz"", Collections.<Object>singletonList(""foo2""));"
54586,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/MetadataMapTest.java,154,,"        m.putSingle(""Baz"", ""clazz2"");"
54587,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/MetadataMapTest.java,212,,"        value2.add(""bar2"");"
54588,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/MetadataMapTest.java,351,,"        m.add(""baz"", ""bar1"");"
54589,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/NewCookieHeaderProviderTest.java,44,,"        assertTrue(""bar"".equals(c.getValue())"
54590,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/NewCookieHeaderProviderTest.java,45,,"                   && ""foo"".equals(c.getName()));"
54591,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/NewCookieHeaderProviderTest.java,69,,"                   && ""path"".equals(c.getPath())"
54592,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/NewCookieHeaderProviderTest.java,70,,"                   && ""domain"".equals(c.getDomain())"
54593,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/NewCookieHeaderProviderTest.java,71,,"                   && ""comment"".equals(c.getComment())"
54594,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/RequestImplTest.java,70,,"        metadata.putSingle(HttpHeaders.CONTENT_TYPE, ""application/xml"");"
54595,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/RequestImplTest.java,72,,"        metadata.putSingle(HttpHeaders.CONTENT_ENCODING, ""utf-8"");"
54596,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/RequestImplTest.java,122,,"        metadata.putSingle(HttpHeaders.ACCEPT_ENCODING, ""gzip"");"
54597,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/RequestImplTest.java,189,,"        metadata.putSingle(""If-Match"", new EntityTag(""123"", true).toString());"
54598,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/RequestImplTest.java,189,,"        metadata.putSingle(""If-Match"", new EntityTag(""123"", true).toString());"
54599,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/RequestImplTest.java,197,,"                     ""\""123\"""", r.getMetadata().getFirst(""ETag"").toString());"
54600,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/RequestImplTest.java,243,,"        assertEquals(""Precondition must not be met"","
54601,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/RequestImplTest.java,279,,"        metadata.putSingle(""If-Modified-Since"", ""Tue, 21 Oct 2008 14:00:00 GMT"");"
54602,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/RequestImplTest.java,279,,"        metadata.putSingle(""If-Modified-Since"", ""Tue, 21 Oct 2008 14:00:00 GMT"");"
54603,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/RequestImplTest.java,280,,"        Date serverDate = new SimpleDateFormat(""EEE, dd MMM yyyy HH:mm:ss zzz"", Locale.ENGLISH)"
54604,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/RequestPreprocessorTest.java,58,,"        Message m = mockMessage(""http://localhost:8080"", ""/bar"", ""_method=GET"", ""POST"");"
54605,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/ResponseBuilderImplTest.java,74,,"        m.add(""Allow"", ""HEAD"");"
54606,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/ResponseBuilderImplTest.java,74,,"        m.add(""Allow"", ""HEAD"");"
54607,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/ResponseBuilderImplTest.java,75,,"        m.add(""Allow"", ""GET"");"
54608,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/ResponseBuilderImplTest.java,82,,"        m.add(""Content-Encoding"", ""gzip"");"
54609,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/ResponseBuilderImplTest.java,82,,"        m.add(""Content-Encoding"", ""gzip"");"
54610,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/ResponseBuilderImplTest.java,117,,"        m.add(""Content-Type"", ""text/plain"");"
54611,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/ResponseBuilderImplTest.java,176,,"        m.putSingle(""Content-Language"", ""de"");"
54612,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/ResponseBuilderImplTest.java,191,,"        m.putSingle(""Link"", Link.valueOf(""<http://example.com/page3>;rel=\""next\""""));"
54613,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/ResponseBuilderImplTest.java,191,,"        m.putSingle(""Link"", Link.valueOf(""<http://example.com/page3>;rel=\""next\""""));"
54614,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/ResponseBuilderImplTest.java,192,,"        checkBuild(Response.ok().link(""http://example.com/page3"", ""next"").build(), 200, null, m);"
54615,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/ResponseBuilderImplTest.java,192,,"        checkBuild(Response.ok().link(""http://example.com/page3"", ""next"").build(), 200, null, m);"
54616,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/ResponseBuilderImplTest.java,198,,"        m.add(""Link"", Link.valueOf(""<http://example.com/page1>;rel=\""previous\""""));"
54617,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/ResponseBuilderImplTest.java,200,,"        checkBuild(Response.ok().link(""http://example.com/page1"", ""previous"")"
54618,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/ResponseBuilderImplTest.java,200,,"        checkBuild(Response.ok().link(""http://example.com/page1"", ""previous"")"
54619,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/ResponseBuilderImplTest.java,303,,"        String eTag = r.getMetadata().getFirst(""ETag"").toString();"
54620,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/ResponseBuilderImplTest.java,304,,"        assertEquals(""\""foo\"""", eTag);"
54621,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/ResponseBuilderImplTest.java,416,,"        m.add(""Vary"", ""Accept"");"
54622,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/ResponseImplTest.java,331,,"        meta.add(""Set-Cookie"", NewCookie.valueOf(""a=b""));"
54623,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/ResponseImplTest.java,454,,"        assertFalse(ri.hasLink(""next""));"
54624,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/ResponseImplTest.java,456,,"        assertFalse(ri.hasLink(""prev""));"
54625,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/ResponseImplTest.java,499,,"            assertTrue(links.contains(Link.fromUri(""http://next"").build()));"
54626,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,76,,"        uri = UriBuilder.fromPath(""/{a}"").build(""{}"");"
54627,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,90,,"        URI uri = ub.path(""{a}"").buildFromEncoded(""%"");"
54628,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,91,,"        assertEquals(""/%25"", uri.toString());"
54629,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,92,,"        uri = ub.path(""{token}"").buildFromEncoded(""%"", ""{}"");"
54630,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,93,,"        assertEquals(""/%25/%7B%7D"", uri.toString());"
54631,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,153,,"        uri = UriBuilder.fromPath(""/{a}/{b}"").resolveTemplate(""a"", ""1"").build(""2"");"
54632,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,198,,"        map.put(""w"", new StringBuilder(""x%yz""));"
54633,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,204,,"        map.put(""y"", ""fred@example.com"");"
54634,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,232,,"        map.put(""w"", ""path-rootless/test2"");"
54635,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,233,,"        UriBuilder builder = UriBuilder.fromPath("""").path(""{w}/{x}/{y}/{z}/{x}"");"
54636,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,260,,"            ""path-rootless/test2/x%25yz//path-absolute/test1/fred@example.com/x%25yz"";"
54637,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,263,,"        map.put(""y"", new StringBuffer(""/path-absolute/test1""));"
54638,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,278,,"        uri = UriBuilder.fromPath(""/index.jsp"").queryParam(""a"", ""{a}"").queryParam(""b"", ""{b}"")"
54639,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,278,,"        uri = UriBuilder.fromPath(""/index.jsp"").queryParam(""a"", ""{a}"").queryParam(""b"", ""{b}"")"
54640,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,279,,"            .build(""valueA"", ""valueB"");"
54641,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,279,,"            .build(""valueA"", ""valueB"");"
54642,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,285,,"        String uri = UriBuilder.fromPath(""my/path"").queryParam(""qp"","
54643,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,364,,"        assertEquals(""URI is not built correctly"", uri, newUri);"
54644,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,369,,"        URI uri = new URI(""http://bar/"");"
54645,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,376,,"        URI uri = new URI(""http://bar"");"
54646,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,416,,"        URI uri = new URI(""/bar/foo"");"
54647,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,458,,"        URI uri = new URI(""http://bar/foo/"");"
54648,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,518,,"        String name = ""name"";"
54649,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,522,,"            .replaceMatrixParam(name, ""x"", ""y"", ""y x"", ""x%y"", ""%20"")"
54650,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,542,,"        URI uri = UriBuilder.fromPath(""http://localhost:8080"").matrixParam(name, ""x"", ""y"")"
54651,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,598,,"        URI uri = new URI(""http://zzz"");"
54652,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,599,,"        URI newUri = new UriBuilderImpl(uri).path(""/{b}/{a}/{b}"").build(""foo"", ""bar"", ""baz"");"
54653,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,599,,"        URI newUri = new UriBuilderImpl(uri).path(""/{b}/{a}/{b}"").build(""foo"", ""bar"", ""baz"");"
54654,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,599,,"        URI newUri = new UriBuilderImpl(uri).path(""/{b}/{a}/{b}"").build(""foo"", ""bar"", ""baz"");"
54655,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,599,,"        URI newUri = new UriBuilderImpl(uri).path(""/{b}/{a}/{b}"").build(""foo"", ""bar"", ""baz"");"
54656,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,713,,"        maps.put(""u"", ""extra"");"
54657,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,777,,"        URI uri = new URI(""http://foo/bar"");"
54658,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,786,,"        URI uri = new URI(""http://foo/"");"
54659,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,876,,"        URI newUri = new UriBuilderImpl().scheme(""http"").host(""foo"").port(1234).path(""bar"").queryParam(""n1"","
54660,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,884,,"        URI uri = new URI(""http://foo/bar?p1=v1&p2=v2"");"
54661,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,894,,"            .queryParam(""name"", ""x="", ""y?"", ""x y"", ""&"").replaceQuery(null).build();"
54662,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,907,,"        URI uri = new URI(""http://foo/bar?p1=v1"");"
54663,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,908,,"        URI newUri = new UriBuilderImpl(uri).replaceQuery(""p1=nv1"").build();"
54664,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,950,,"            fail(""Should be IllegalArgumentException"");"
54665,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,1006,,"        URI newUri = new UriBuilderImpl(uri).replaceQueryParam(""p1"", ""nv1"").build();"
54666,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,1019,,"        URI uri = new URI(""http://foo/bar;p1=v1;p2=v2"");"
54667,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,1057,,"        URI uri = new URI(""http://foo/bar;p1=v1"");"
54668,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,1148,,"                         ""mailto:java-net@java.sun.com"","
54669,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,1149,,"                         ""news:comp.lang.java"","
54670,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,1151,,"                         ""ldap://[2001:db8::7]/c=GB?objectClass?one"","
54671,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,1153,,"                         ""tel:+1-816-555-1212"","
54672,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,1207,,"        URI uri = UriBuilder.fromPath(path).fragment(""abc"").build();"
54673,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,1224,,"        String[] path2 = {""a1"", ""x/y"", ""3b ""};"
54674,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,1224,,"        String[] path2 = {""a1"", ""x/y"", ""3b ""};"
54675,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,1244,,"        String[] path2 = {""a1"", ""{xy}"", ""3b ""};"
54676,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,1451,,"            ""urn:isbn:096139210x"","
54677,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,1452,,"            ""http://www.ietf.org/rfc/rfc2396.txt"","
54678,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,1809,,"    @SuppressWarnings({""checkstyle:linelength""})"
54679,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,1815,,"            .queryParam(URLEncoder.encode(""/?abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-._~%1A!$'()*+,;:@""), ""apiKeyQueryParam1Value"")"
54680,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriBuilderImplTest.java,1815,,"            .queryParam(URLEncoder.encode(""/?abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-._~%1A!$'()*+,;:@""), ""apiKeyQueryParam1Value"")"
54681,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriInfoImplTest.java,67,,"        UriInfoImpl u = new UriInfoImpl(mockMessage(""http://localhost:8080/baz/"", null), null);"
54682,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriInfoImplTest.java,68,,"        assertEquals(""Wrong base path"", ""http://localhost:8080/baz/"","
54683,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriInfoImplTest.java,76,,"        UriInfoImpl u = new UriInfoImpl(mockMessage(""http://localhost:8080/baz"", null), null);"
54684,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriInfoImplTest.java,137,,"        Message mockMessage = mockMessage(""http://example.com/app/root/"","
54685,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriInfoImplTest.java,138,,"            ""/a/b/c/"");"
54686,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriInfoImplTest.java,140,,"        assertEquals(""http://example.com/app/root/a/b/c/"", u.getRequestUri()"
54687,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriInfoImplTest.java,226,,"        UriInfoImpl u = new UriInfoImpl(mockMessage(""http://localhost:8080/baz"", ""/bar""),"
54688,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriInfoImplTest.java,228,,"        assertEquals(""Wrong absolute path"", ""http://localhost:8080/baz/bar"","
54689,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriInfoImplTest.java,228,,"        assertEquals(""Wrong absolute path"", ""http://localhost:8080/baz/bar"","
54690,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriInfoImplTest.java,236,,"        u = new UriInfoImpl(mockMessage(""http://localhost:8080/baz"", ""bar""),"
54691,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriInfoImplTest.java,250,,"        assertEquals(""foo"", segments.get(1).toString());"
54692,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriInfoImplTest.java,291,,"        assertEquals(""Wrong query value"", qps.getFirst(""n""), ""1%202"");"
54693,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriInfoImplTest.java,300,,"        assertEquals(""Wrong query value"", qps.get(""n"").get(0), ""1 2"");"
54694,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriInfoImplTest.java,415,,"        assertEquals(""Wrong path"", ""baz"", u.getPath());"
54695,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/UriInfoImplTest.java,492,,"        Message m = mockMessage(""http://localhost:8080/app"", ""/foo"");"
54696,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/VariantListBuilderImplTest.java,39,,"        MediaType mt2 = new MediaType(""text"", ""xml"");"
54697,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/VariantListBuilderImplTest.java,39,,"        MediaType mt2 = new MediaType(""text"", ""xml"");"
54698,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/VariantListBuilderImplTest.java,41,,"            .languages(new Locale(""en""), new Locale(""fr"")).encodings(""zip"", ""identity"").add().build();"
54699,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/impl/VariantListBuilderImplTest.java,41,,"            .languages(new Locale(""en""), new Locale(""fr"")).encodings(""zip"", ""identity"").add().build();"
54700,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/model/ClassResourceInfoTest.java,61,,"    @Path(""/bar"")"
54701,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/model/ClassResourceInfoTest.java,62,,"    @Produces(""test/bar"")"
54702,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/model/ClassResourceInfoTest.java,63,,"    @Consumes(""test/foo"")"
54703,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/model/OperationResourceInfoTest.java,59,,"                                 TestClass.class.getMethod(""doIt"", new Class[]{}),"
54704,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/model/OperationResourceInfoTest.java,63,,"        assertEquals(""Single media type expected"", 1, ctypes.size());"
54705,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/model/OperationResourceInfoTest.java,68,,"                                 TestClass.class.getMethod(""doThat"", new Class[]{}),"
54706,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/model/URITemplateTest.java,63,,"        assertEquals(template.getFirst(""uniqueid""), ""123e-12345"");"
54707,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/model/URITemplateTest.java,64,,"        assertEquals(""test.jpg"", template.getFirst(""file""));"
54708,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/model/URITemplateTest.java,64,,"        assertEquals(""test.jpg"", template.getFirst(""file""));"
54709,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/model/URITemplateTest.java,102,,"        assertEquals(""123"", value);"
54710,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/model/URITemplateTest.java,195,,"        URITemplate uriTemplate = new URITemplate(""/customers"");"
54711,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/model/URITemplateTest.java,270,,"        boolean match = uriTemplate.match(""/books/123/chapter/1"", values);"
54712,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/model/URITemplateTest.java,273,,"        assertEquals(""/chapter/1"", subResourcePath);"
54713,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/model/URITemplateTest.java,308,,"        assertEquals(""123"", values.getFirst(""bookId""));"
54714,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/model/URITemplateTest.java,355,,"        assertFalse(uriTemplate.match(""/books/a"", values));"
54715,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/model/URITemplateTest.java,361,,"        URITemplate uriTemplate = new URITemplate(""/books/ab+"");"
54716,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/model/URITemplateTest.java,426,,"        assertEquals(""script.js"", values.getFirst(""resource""));"
54717,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/model/URITemplateTest.java,426,,"        assertEquals(""script.js"", values.getFirst(""resource""));"
54718,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/model/URITemplateTest.java,446,,"        assertEquals(""1"", values.getFirst(""bar""));"
54719,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/model/URITemplateTest.java,610,,"        List<String> list = Arrays.asList(""foo"", ""99"", ""baz"");"
54720,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/model/URITemplateTest.java,610,,"        List<String> list = Arrays.asList(""foo"", ""99"", ""baz"");"
54721,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/model/URITemplateTest.java,611,,"        assertEquals(""Wrong substitution"", ""/foo/foo/99/baz"", ut.substitute(list));"
54722,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/model/URITemplateTest.java,624,,"        List<String> list = Arrays.asList(""bar"", ""baz"", ""blah"");"
54723,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/model/doc/JavaDocProviderTest.java,83,,"        assertEquals(""status"", p.getMethodResponseDoc(ori));"
54724,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/DataSourceProviderTest.java,44,,"                   MediaType.valueOf(""image/png""), new MetadataMap<String, String>(),"
54725,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/DataSourceProviderTest.java,45,,"                   new ByteArrayInputStream(""image"".getBytes()));"
54726,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/FormEncodingProviderTest.java,50,,"        @SuppressWarnings(""rawtypes"")"
54727,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/FormEncodingProviderTest.java,54,,"        @SuppressWarnings(""unchecked"")"
54728,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/FormEncodingProviderTest.java,58,,"        assertEquals(""Wrong entry for foo"", ""bar"", mvMap.getFirst(""foo""));"
54729,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/FormEncodingProviderTest.java,58,,"        assertEquals(""Wrong entry for foo"", ""bar"", mvMap.getFirst(""foo""));"
54730,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/FormEncodingProviderTest.java,58,,"        assertEquals(""Wrong entry for foo"", ""bar"", mvMap.getFirst(""foo""));"
54731,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/FormEncodingProviderTest.java,59,,"        assertEquals(""Wrong entry for boo"", ""far"", mvMap.getFirst(""boo""));"
54732,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/FormEncodingProviderTest.java,59,,"        assertEquals(""Wrong entry for boo"", ""far"", mvMap.getFirst(""boo""));"
54733,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/FormEncodingProviderTest.java,120,,"        assertEquals(1,  mvMap.get(""baz"").size());"
54734,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/FormEncodingProviderTest.java,159,,"        assertEquals(""Wrong value"", ""a=a1&a=a2"", result);"
54735,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/JAXBElementProviderTest.java,182,,"        bookContext.createMarshaller().marshal(new SuperBook(""name"", 1L, 2L), os);"
54736,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/JAXBElementProviderTest.java,229,,"            o.setName(""name #"" + i);"
54737,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/JAXBElementProviderTest.java,239,,"        @SuppressWarnings(""unchecked"")"
54738,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/JAXBElementProviderTest.java,321,,"        doWriteUnqualifiedCollection(true, ""getBooks"", ""setBooks"", List.class);"
54739,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/JAXBElementProviderTest.java,347,,"        books.add(new Book(""CXF in Action"", 123L));"
54740,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/JAXBElementProviderTest.java,398,,"            Collections.singletonMap(""http://tags"", ""prefix""));"
54741,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/JAXBElementProviderTest.java,423,,"        doTestWriteWithoutXmlRootElement(""SuperBook"", false, false);"
54742,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/JAXBElementProviderTest.java,471,,"        prefixes.put(""http://superbooks"", ""ns1"");"
54743,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/JAXBElementProviderTest.java,472,,"        prefixes.put(""http://books"", ""ns2"");"
54744,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/JAXBElementProviderTest.java,705,,"    @SuppressWarnings({""rawtypes"", ""unchecked"" })"
54745,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/JAXBElementProviderTest.java,747,,"        String data = ""<?xml version='1.0' encoding='UTF-8'?>"""
54746,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/JAXBElementProviderTest.java,749,,"        readTagVO2AfterTransform(data, ""thetag"");"
54747,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/JAXBElementProviderTest.java,820,,"        map.put(keyValue, ""{http://tags}thetag"");"
54748,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/JAXBElementProviderTest.java,854,,"        map.put(""group"", ""group"");"
54749,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/JAXBElementProviderTest.java,856,,"        map.put(""*"", ""{http://tags}*"");"
54750,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/JAXBElementProviderTest.java,890,,"        map.put(keyValue, ""tagVO"");"
54751,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/PrimitiveTextProviderTest.java,53,,"        assertFalse(p.isWriteable(Byte.class, null, null, MediaType.valueOf(""text/custom"")));"
54752,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/PrimitiveTextProviderTest.java,124,,"    @SuppressWarnings(""unchecked"")"
54753,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/PrimitiveTextProviderTest.java,129,,"        @SuppressWarnings(""rawtypes"")"
54754,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/ProviderFactoryTest.java,454,,"              MediaType.valueOf(""image/png""), new MessageImpl());"
54755,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/ProviderFactoryTest.java,743,,"        verifyProvider(byte[].class, BinaryDataProvider.class, ""*/*"");"
54756,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/ProviderFactoryTest.java,890,,"            headers.put(""Content-Type"", Collections.singletonList(contentType));"
54757,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/ProviderFactoryTest.java,1251,,"    @Produces(""application/xml"")"
54758,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/RequestDispatcherProviderTest.java,36,,"            Collections.singletonMap(TestEnum.class.getName() + ""."" + TestEnum.ONE, ""/test.jsp""));"
54759,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/SourceProviderTest.java,116,,"        Document doc = StaxUtils.read(new StringReader(""<test/>""));"
54760,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/XSLTJaxbProviderTest.java,106,,"        b.setName(""TheBook"");"
54761,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/XSLTJaxbProviderTest.java,112,,"        b.setName(""TheBook2"");"
54762,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/XSLTJaxbProviderTest.java,113,,"        assertEquals(""Transformation is bad"", b, b2);"
54763,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/resources/BookStoreNoSubResource.java,46,,"    @Produces(""application/xml"")"
54764,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/resources/TestResource.java,40,,"    @Produces(""application/json"")"
54765,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/resources/TestResource.java,75,,"        return ""This is a list method"";"
54766,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/spring/JAXRSServerFactoryBeanTest.java,62,,"        assertEquals(""Get a wrong resource class"", BookStore.class, sfb.getResourceClasses().get(0));"
54767,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/springmvc/SpringViewResolverProviderTest.java,118,,"        String viewName = ""/test"";"
54768,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/springmvc/SpringViewResolverProviderTest.java,137,,"    @SuppressWarnings(""unchecked"")"
54769,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/utils/HttpUtilsTest.java,93,,"                     HttpUtils.getEncoding(MediaType.valueOf(""application/json;charset=UTF-8""), ""UTF-16""));"
54770,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/utils/HttpUtilsTest.java,160,,"        assertEquals(""/"", HttpUtils.getPathToMatch(""/"", ""/bar"", true));"
54771,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/utils/HttpUtilsTest.java,237,,"        assertEquals(""http://localhost:8080/bar/foo"", u.toString());"
54772,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/utils/JAXRSUtilsTest.java,134,,"        JAXRSUtils.intersectMimeTypes(""application/json"", ""application/json+v2"");"
54773,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/utils/JAXRSUtilsTest.java,149,,"        messageImpl.put(Message.REQUEST_URI, ""/foo"");"
54774,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/utils/JAXRSUtilsTest.java,155,,"        headers.putSingle(""Content-Type"", ct);"
54775,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/utils/JAXRSUtilsTest.java,227,,"        @SuppressWarnings(""unchecked"")"
54776,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/utils/JAXRSUtilsTest.java,316,,"        String contentTypes = ""*/*"";"
54777,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/utils/JAXRSUtilsTest.java,321,,"             ""/bookstore/1/books/123/"", ""GET"", new MetadataMap<String, String>(), contentTypes,"
54778,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/utils/JAXRSUtilsTest.java,334,,"              ""GET"", new MetadataMap<String, String>(), contentTypes, getTypes(""application/xml""));"
54779,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/utils/JAXRSUtilsTest.java,370,,"        List<MediaType> types = JAXRSUtils.getMediaTypes(new String[]{""text/xml""});"
54780,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/utils/JAXRSUtilsTest.java,376,,"        List<MediaType> types = JAXRSUtils.getMediaTypes(new String[]{""text/xml"", ""text/plain""});"
54781,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/utils/JAXRSUtilsTest.java,421,,"        assertEquals(""Only the first {id} should've been picked up"", ""2"", values.getFirst(""id""));"
54782,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/utils/JAXRSUtilsTest.java,477,,"            JAXRSUtils.intersectMimeTypes(""application/bar+xml"", ""application/*+xml"");"
54783,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/utils/JAXRSUtilsTest.java,590,,"        MediaType acceptContentType = MediaType.valueOf(""text/*"");"
54784,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/utils/JAXRSUtilsTest.java,663,,"        assertTrue(types.size() == 1 && types.get(0).equals(new MediaType(""text"", ""*"")));"
54785,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/utils/JAXRSUtilsTest.java,1186,,"        assertEquals(""aValue"", bean.getA());"
54786,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/utils/JAXRSUtilsTest.java,1258,,"        complexPathTemplates.add(""e.c"", ""41"");"
54787,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/utils/JAXRSUtilsTest.java,1276,,"        complexPathTemplates.add(""d.e.c"", ""71"");"
54788,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/utils/JAXRSUtilsTest.java,1315,,"        messageImpl.put(Message.REQUEST_URI, ""/bar"");"
54789,./TargetProjects/cxf/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/utils/JAXRSUtilsTest.java,1326,,"        assertEquals(""Bean should be created"", 1, params.size());"
54790,./TargetProjects/cxf/rt/frontend/jaxws/src/main/java/org/apache/cxf/jaxws/JaxWsClientProxy.java,99,,"            throw new IllegalStateException(""The client has been closed."");"
54791,./TargetProjects/cxf/rt/frontend/jaxws/src/main/java/org/apache/cxf/jaxws/JaxWsProxyFactoryBean.java,63,,"    @SuppressWarnings(""rawtypes"")"
54792,./TargetProjects/cxf/rt/frontend/jaxws/src/main/java/org/apache/cxf/jaxws/JaxWsServerFactoryBean.java,66,,"    @SuppressWarnings(""rawtypes"")"
54793,./TargetProjects/cxf/rt/frontend/jaxws/src/main/java/org/apache/cxf/jaxws/WrapperClassGenerator.java,205,,"        av0.visit(""name"", wrapperElement.getLocalPart());"
54794,./TargetProjects/cxf/rt/frontend/jaxws/src/main/java/org/apache/cxf/jaxws/WrapperClassGenerator.java,206,,"        av0.visit(""namespace"", wrapperElement.getNamespaceURI());"
54795,./TargetProjects/cxf/rt/frontend/jaxws/src/main/java/org/apache/cxf/jaxws/WrapperClassGenerator.java,210,,"        av0.visitEnum(""value"", ""Ljavax/xml/bind/annotation/XmlAccessType;"", ""FIELD"");"
54796,./TargetProjects/cxf/rt/frontend/jaxws/src/main/java/org/apache/cxf/jaxws/interceptors/MessageModeInInterceptor.java,180,,"                    writer.append(""--"").append(boundary).append(""\r\n"");"
54797,./TargetProjects/cxf/rt/frontend/jaxws/src/main/java/org/apache/cxf/jaxws/support/JaxWsEndpointImpl.java,357,,"                writer.writeStartElement(""wsp"", ""PolicyReference"", URI_POLICY_NS);"
54798,./TargetProjects/cxf/rt/frontend/jaxws/src/main/java/org/apache/cxf/jaxws/support/JaxWsServiceConfiguration.java,335,,"                    local += ""Response"";"
54799,./TargetProjects/cxf/rt/frontend/jaxws/src/main/java/org/apache/cxf/jaxws/support/JaxWsServiceConfiguration.java,451,,"            return getParameterName(op, method, paramNumber, op.getOutput().size(), ""return"", false);"
54800,./TargetProjects/cxf/rt/frontend/jaxws/src/main/java/org/apache/cxf/jaxws/support/JaxWsServiceFactoryBean.java,355,,"                                                              o.getName().getLocalPart() + ""Response""));"
54801,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/CodeFirstTest.java,92,,"        addNamespace(""svc"", ""http://service.jaxws.cxf.apache.org/"");"
54802,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/CodeFirstTest.java,181,,"            ep.publish(""local://localhost:9090/hello"");"
54803,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/CodeFirstTest.java,214,,"            service.addPort(portName, ""http://schemas.xmlsoap.org/soap/"", ""local://localhost:9090/hello"");"
54804,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/CodeFirstTest.java,225,,"            assertEquals(""Get the wrong result"", ""hello"", proxy.sayHi(""hello""));"
54805,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/CodeFirstTest.java,365,,"        sf.setAddress(""local://localhost/test"");"
54806,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/CodeFirstTest.java,556,,"        QName serviceName = new QName(""http://cxf.apache.org/service.wsdl"", ""BareService"");"
54807,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/CodeFirstTest.java,569,,"                   targetNamespace = ""http://cxf.apache.org/service.wsdl/types"","
54808,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/CodeFirstWSDLTest.java,92,,"        QName serviceName = new QName(""http://service.jaxws.cxf.apache.org/"", ""Hello2Service"");"
54809,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/CodeFirstWSDLTest.java,161,,"        assertXPathEquals(""//wsdl:definitions/wsdl:documentation"", ""My top level documentation"","
54810,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/CodeFirstWSDLTest.java,161,,"        assertXPathEquals(""//wsdl:definitions/wsdl:documentation"", ""My top level documentation"","
54811,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/CodeFirstWSDLTest.java,165,,"        assertXPathEquals(""//wsdl:definitions/wsdl:binding/wsdl:documentation"", ""My binding doc"","
54812,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/CodeFirstWSDLTest.java,165,,"        assertXPathEquals(""//wsdl:definitions/wsdl:binding/wsdl:documentation"", ""My binding doc"","
54813,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/CodeFirstWSDLTest.java,185,,"    @WebService(targetNamespace = ""http://www.example.org/contract/DoubleIt"")"
54814,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/ConfiguredEndpointTest.java,100,,"        assertEquals(""Unexpected bean name"", PORT_NAME.toString() + "".endpoint"", endpoint.getBeanName());"
54815,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/ConfiguredEndpointTest.java,107,,"        assertNull(""Unexpected test interceptor"", findTestInterceptor(interceptors));"
54816,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/ConfiguredEndpointTest.java,157,,"        assertEquals(""Unexpected number of interceptors: "" + interceptors, 1, interceptors.size());"
54817,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/ConfiguredEndpointTest.java,158,,"        assertEquals(""Unexpected interceptor id."", ""service-in"","
54818,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/ConfiguredEndpointTest.java,263,,"        assertEquals(""Unexpected number of interceptors."", 5, interceptors.size());"
54819,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/EndpointImplTest.java,66,,"        String address = ""http://localhost:8080/test"";"
54820,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/EndpointImplTest.java,77,,"                assertEquals(""BINDING_INCOMPATIBLE_ADDRESS_EXC"", ((BusException)ex.getCause()).getCode());"
54821,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/EndpointReferenceTest.java,55,,"    private final QName serviceName = new QName(""http://apache.org/hello_world_soap_http"", ""SOAPService"");"
54822,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/EndpointReferenceTest.java,129,,"            endpoint.publish(""http://localhost:8080/test"");"
54823,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/EndpointReferenceTest.java,134,,"            InputStream is = getClass().getResourceAsStream(""resources/hello_world_soap_http_infoset.xml"");"
54824,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/EndpointReferenceTest.java,179,,"                                                                      ""wsa:ReferenceParameters"","
54825,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/JAXWSMethodInvokerTest.java,92,,"        Method serviceMethod = ContinuationService.class.getMethod(""invoke"", new Class[]{});"
54826,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/JaxWsClientTest.java,79,,"    private static final QName SERVICE_NAME = new QName(""http://apache.org/hello_world_soap_http"","
54827,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/JaxWsClientTest.java,82,,"                    ""SoapPort"");"
54828,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/JaxWsClientTest.java,115,,"        URL url = getClass().getResource(""/wsdl/hello_world.wsdl"");"
54829,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/JaxWsClientTest.java,333,,"        ((BindingProvider)greeter).getRequestContext().put(""test"", ""manny"");"
54830,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/JaxWsClientTest.java,369,,"                    headers.put(""My-Custom-Header"", Collections.singletonList(""value""));"
54831,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/JaxWsServerFactoryBeanTest.java,105,,"        String address = ""http://localhost:9001/jaxwstest"";"
54832,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/ServiceImplTest.java,66,,"        new QName(""http://apache.org/cxf/calculator"", ""CalculatorService"");"
54833,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/ServiceImplTest.java,128,,"        URL wsdl1 = getClass().getResource(""/wsdl/calculator.wsdl"");"
54834,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/context/WrappedAttachmentsTest.java,47,,"        content.put(""att-1"", new DataHandler(new ByteArrayDataSource(""Hello world!"".getBytes(), ""text/plain"")));"
54835,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/context/WrappedAttachmentsTest.java,48,,"        content.put(""att-2"", new DataHandler(new ByteArrayDataSource(""Hola mundo!"".getBytes(), ""text/plain"")));"
54836,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/dispatch/DispatchTest.java,85,,"        d.setMessageObserver(new MessageReplayObserver(""/org/apache/cxf/jaxws/sayHiResponse.xml""));"
54837,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/dispatch/DispatchTest.java,87,,"        URL wsdl = getClass().getResource(""/wsdl/hello_world.wsdl"");"
54838,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/handler/HandlerChainInvokerTest.java,268,,"        ProtocolException pe = new ProtocolException(""banzai"");"
54839,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/handler/HandlerChainInvokerTest.java,291,,"            fail(""did not get expected exception"");"
54840,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/handler/HandlerChainInvokerTest.java,983,,"        assertTrue(""handler not invoked"", logicalHandlers[0].isHandleMessageInvoked());"
54841,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/handler/JakartaAnnotationHandlerChainBuilderTest.java,49,,"        @SuppressWarnings(""rawtypes"")"
54842,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/handler/JakartaAnnotationHandlerChainBuilderTest.java,72,,"        QName portQName = new QName(""namespacedoesntsupportyet"", ""SoapPort1"");"
54843,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/handler/JavaxAnnotationHandlerChainBuilderTest.java,49,,"        @SuppressWarnings(""rawtypes"")"
54844,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/handler/JavaxAnnotationHandlerChainBuilderTest.java,72,,"        QName portQName = new QName(""namespacedoesntsupportyet"", ""SoapPort1"");"
54845,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/handler/soap/SOAPHandlerInterceptorTest.java,101,,"        @SuppressWarnings(""rawtypes"")"
54846,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/handler/soap/SOAPHandlerInterceptorTest.java,151,,"                    writer.setPrefix(""soap"", soapVersion.getNamespace());"
54847,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/handler/soap/SOAPHandlerInterceptorTest.java,184,,"            .getChildElements(new QName(""http://apache.org/hello_world_rpclit/types"", ""out""));"
54848,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/handler/soap/SOAPHandlerInterceptorTest.java,212,,"                        attr.setValue(""false"");"
54849,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/header/HeaderClientServerTest.java,98,,"        URL wsdl = getClass().getResource(""/wsdl/soapheader.wsdl"");"
54850,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/interceptors/WebFaultOutInterceptorTestCase.java,71,,"        SoapFault soapFault = new SoapFault(""message"", soapFaultException, CODE);"
54851,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/logging/SOAPLoggingTest.java,114,,"        Assert.assertEquals(""text/xml"", requestOut.getContentType());"
54852,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/logging/SOAPLoggingTest.java,121,,"        Assert.assertEquals(""TestService"", requestOut.getPortTypeName().getLocalPart());"
54853,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/provider/ProviderServiceFactoryTest.java,117,,"        addNamespace(""j"", ""http://service.jaxws.cxf.apache.org/"");"
54854,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/provider/ProviderServiceFactoryTest.java,156,,"        Node res = invoke(address, LocalTransportFactory.TRANSPORT_ID, ""/org/apache/cxf/jaxws/sayHi.xml"");"
54855,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/provider/ProviderServiceFactoryTest.java,159,,"        assertValid(""/s:Envelope/s:Body/j:sayHi"", res);"
54856,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/service/AnnotationInterceptorTest.java,253,,"            strings[0] = ""Hello"" + strs[0];"
54857,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/service/AnnotationInterceptorTest.java,254,,"            strings[1] = ""Bonjour"" + strs[1];"
54858,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/spi/ProviderImplTest.java,44,,"        QName serviceName = new QName(""http://cxf.apache.org"", ""ServiceName"");"
54859,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/spi/ProviderImplTest.java,44,,"        QName serviceName = new QName(""http://cxf.apache.org"", ""ServiceName"");"
54860,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/spi/ProviderImplTest.java,47,,"        W3CEndpointReference w3Epr = impl.createW3CEndpointReference(""http://myaddress"", serviceName,"
54861,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/spi/ProviderImplTest.java,69,,"        assertTrue(""Address is expected"", sw.toString().contains(""Address""));"
54862,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/spi/ProviderImplTest.java,69,,"        assertTrue(""Address is expected"", sw.toString().contains(""Address""));"
54863,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/spi/ProviderImplTest.java,70,,"        assertFalse(""empty Metadata element should be dropped"", sw.toString().contains(""Metadata""));"
54864,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/spring/SpringBeansTest.java,138,,"        assertEquals(""bar"", ep.getProperties().get(""foo""));"
54865,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/support/JaxWsServiceConfigurationTest.java,63,,"        QName opName = new QName(""http://cxf.com/"", ""sayHello"");"
54866,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/support/JaxWsServiceConfigurationTest.java,63,,"        QName opName = new QName(""http://cxf.com/"", ""sayHello"");"
54867,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/support/JaxWsServiceConfigurationTest.java,74,,"        op.setOutput(""output"", new MessageInfo(op, MessageInfo.Type.OUTPUT,"
54868,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/support/JaxWsServiceConfigurationTest.java,133,,"        QName opName = new QName(""http://cxf.com/"", ""sayHi"");"
54869,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/support/JaxWsServiceFactoryBeanTest.java,199,,"        assertEquals(""http://apache.org/hello_world_doc_lit"", ns);"
54870,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/ws/PolicyAnnotationTest.java,70,,"            ""http://schemas.xmlsoap.org/soap/http"","
54871,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/ws/PolicyAnnotationTest.java,71,,"            ""http://schemas.xmlsoap.org/wsdl/http/"","
54872,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/ws/PolicyAnnotationTest.java,72,,"            ""http://schemas.xmlsoap.org/wsdl/soap/http"","
54873,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/ws/PolicyAnnotationTest.java,73,,"            ""http://www.w3.org/2003/05/soap/bindings/HTTP/"","
54874,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/ws/PolicyAnnotationTest.java,74,,"            ""http://cxf.apache.org/transports/http/configuration"","
54875,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/ws/PolicyAnnotationTest.java,75,,"            ""http://cxf.apache.org/bindings/xformat"");"
54876,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/ws/PolicyAnnotationTest.java,78,,"        f.getUriPrefixes().add(""http"");"
54877,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/ws/PolicyAnnotationTest.java,94,,"            ns.put(""wsdl"", WSDLConstants.NS_WSDL11);"
54878,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/ws/PolicyAnnotationTest.java,95,,"            ns.put(""wsu"","
54879,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/ws/PolicyAnnotationTest.java,96,,"                   ""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"");"
54880,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/ws/PolicyAnnotationTest.java,97,,"            ns.put(""wsp"", Constants.URI_POLICY_13_NS);"
54881,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/ws/PolicyAnnotationTest.java,107,,"            check(xpu, wsdl, ""/wsdl:definitions/wsdl:binding/"", ""TestImplServiceSoapBindingBindingPolicy"");"
54882,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/ws/PolicyAnnotationTest.java,108,,"            check(xpu, wsdl, ""/wsdl:definitions/wsdl:binding/wsdl:operation/"", ""echoIntBindingOpPolicy"");"
54883,./TargetProjects/cxf/rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/ws/PolicyAnnotationTest.java,296,,"        @Policy(uri = ""annotationpolicies/TestImplPolicy.xml"","
54884,./TargetProjects/cxf/rt/frontend/js/src/test/java/org/apache/cxf/js/rhino/AbstractDOMProviderTest.java,47,,"        EasyMock.expect(scriptMock.get(""wsdlLocation"", scriptMock))"
54885,./TargetProjects/cxf/rt/frontend/js/src/test/java/org/apache/cxf/js/rhino/AbstractDOMProviderTest.java,54,,"            fail(""expected exception did not occur"");"
54886,./TargetProjects/cxf/rt/frontend/js/src/test/java/org/apache/cxf/js/rhino/AbstractDOMProviderTest.java,56,,"            assertEquals(""wrong exception message"","
54887,./TargetProjects/cxf/rt/frontend/js/src/test/java/org/apache/cxf/js/rhino/AbstractDOMProviderTest.java,65,,"            .andReturn(""found"");"
54888,./TargetProjects/cxf/rt/frontend/js/src/test/java/org/apache/cxf/js/rhino/AbstractDOMProviderTest.java,66,,"        EasyMock.expect(scriptMock.get(""serviceName"", scriptMock))"
54889,./TargetProjects/cxf/rt/frontend/js/src/test/java/org/apache/cxf/js/rhino/AbstractDOMProviderTest.java,87,,"        EasyMock.expect(scriptMock.get(""portName"", scriptMock))"
54890,./TargetProjects/cxf/rt/frontend/js/src/test/java/org/apache/cxf/js/rhino/AbstractDOMProviderTest.java,110,,"        EasyMock.expect(scriptMock.get(""targetNamespace"", scriptMock))"
54891,./TargetProjects/cxf/rt/frontend/js/src/test/java/org/apache/cxf/js/rhino/ProviderFactoryTest.java,79,,"            fail(""expected exception did not occur"");"
54892,./TargetProjects/cxf/rt/frontend/js/src/test/java/org/apache/cxf/js/rhino/ProviderFactoryTest.java,96,,"            assertEquals(""wrong exception message"","
54893,./TargetProjects/cxf/rt/frontend/js/src/test/java/org/apache/cxf/js/rhino/ServerAppTest.java,64,,"            fail(""expected exception did not occur"");"
54894,./TargetProjects/cxf/rt/frontend/js/src/test/java/org/apache/cxf/js/rhino/ServerAppTest.java,66,,"            assertEquals(""wrong exception message"", ServerApp.NO_FILES_ERR, ex.getMessage());"
54895,./TargetProjects/cxf/rt/frontend/simple/src/main/java/org/apache/cxf/endpoint/dynamic/DynamicClientFactory.java,903,,"                String s = atts.getValue(""schemaLocation"");"
54896,./TargetProjects/cxf/rt/frontend/simple/src/main/java/org/apache/cxf/endpoint/dynamic/DynamicClientFactory.java,940,,"                                                                        ""http://www.w3.org/2001/XMLSchema"","
54897,./TargetProjects/cxf/rt/frontend/simple/src/main/java/org/apache/cxf/frontend/ClientProxy.java,60,,"            throw new IllegalStateException(""The client has been closed."");"
54898,./TargetProjects/cxf/rt/frontend/simple/src/main/java/org/apache/cxf/frontend/WSDLGetUtils.java,101,,"        params.put(""wsdl"", """");"
54899,./TargetProjects/cxf/rt/frontend/simple/src/main/java/org/apache/cxf/frontend/WSDLGetUtils.java,150,,"                String wsdl = URLDecoder.decode(params.get(""wsdl""), ""utf-8"");"
54900,./TargetProjects/cxf/rt/frontend/simple/src/main/java/org/apache/cxf/frontend/WSDLGetUtils.java,161,,"            throw new WSDLQueryException(new org.apache.cxf.common.i18n.Message(""COULD_NOT_PROVIDE_WSDL"","
54901,./TargetProjects/cxf/rt/frontend/simple/src/main/java/org/apache/cxf/frontend/WSDLGetUtils.java,251,,"                String sl = el.getAttribute(""schemaLocation"");"
54902,./TargetProjects/cxf/rt/frontend/simple/src/main/java/org/apache/cxf/frontend/WSDLGetUtils.java,279,,"                                                              ""http://schemas.xmlsoap.org/wsdl/"","
54903,./TargetProjects/cxf/rt/frontend/simple/src/main/java/org/apache/cxf/frontend/WSDLGetUtils.java,282,,"                String sl = el.getAttribute(""location"");"
54904,./TargetProjects/cxf/rt/frontend/simple/src/test/java/org/apache/cxf/frontend/soap/SoapBindingSelectionTest.java,54,,"        svrBean1.setAddress(""http://localhost/Hello"");"
54905,./TargetProjects/cxf/rt/frontend/simple/src/test/java/org/apache/cxf/service/factory/ReflectionServiceFactoryTest.java,68,,"        OperationInfo sayHelloOp = intf.getOperation(new QName(ns, ""sayHello""));"
54906,./TargetProjects/cxf/rt/frontend/simple/src/test/java/org/apache/cxf/service/factory/ReflectionServiceFactoryTest.java,138,,"        props.put(""test"", ""test"");"
54907,./TargetProjects/cxf/rt/javascript/javascript-rt/src/main/java/org/apache/cxf/javascript/JavascriptUtils.java,168,,"        code.append(""if ("").append(test).append("") {"").append(NL);"
54908,./TargetProjects/cxf/rt/javascript/javascript-rt/src/main/java/org/apache/cxf/javascript/service/ServiceJavascriptBuilder.java,154,,"        code.append(""function "").append(currentInterfaceClassName).append("" () {\n"");"
54909,./TargetProjects/cxf/rt/javascript/javascript-rt/src/main/java/org/apache/cxf/javascript/service/ServiceJavascriptBuilder.java,166,,"        code.append(""}\n\n"");"
54910,./TargetProjects/cxf/rt/javascript/javascript-rt/src/main/java/org/apache/cxf/javascript/service/ServiceJavascriptBuilder.java,187,,"                utils.appendLine(""this.globalElementSerializers['"" + name + ""'] = """
54911,./TargetProjects/cxf/rt/javascript/javascript-rt/src/main/java/org/apache/cxf/javascript/service/ServiceJavascriptBuilder.java,294,,"        code.append(""//\n"");"
54912,./TargetProjects/cxf/rt/javascript/javascript-rt/src/main/java/org/apache/cxf/javascript/service/ServiceJavascriptBuilder.java,399,,"        code.append(currentInterfaceClassName).append("".prototype."""
54913,./TargetProjects/cxf/rt/javascript/javascript-rt/src/main/java/org/apache/cxf/javascript/service/ServiceJavascriptBuilder.java,401,,"                    ).append("" = """
54914,./TargetProjects/cxf/rt/javascript/javascript-rt/src/main/java/org/apache/cxf/javascript/service/ServiceJavascriptBuilder.java,403,,"                    ).append("";\n\n"");"
54915,./TargetProjects/cxf/rt/javascript/javascript-rt/src/main/java/org/apache/cxf/javascript/types/SchemaJavascriptBuilder.java,93,,"        code.append(""//\n"");"
54916,./TargetProjects/cxf/rt/javascript/javascript-rt/src/main/java/org/apache/cxf/javascript/types/SchemaJavascriptBuilder.java,181,,"        final String elementPrefix = ""this._"";"
54917,./TargetProjects/cxf/rt/javascript/javascript-rt/src/main/java/org/apache/cxf/javascript/types/SchemaJavascriptBuilder.java,187,,"        code.append(""function "").append(typeObjectName).append("" () {\n"");"
54918,./TargetProjects/cxf/rt/javascript/javascript-rt/src/main/java/org/apache/cxf/javascript/types/SchemaJavascriptBuilder.java,259,,"        accessors.append(getFunctionProperty).append("" = "").append(accessorName).append("";\n\n"");"
54919,./TargetProjects/cxf/rt/javascript/javascript-tests/src/test/java/org/apache/cxf/javascript/DocLitBareClientTest.java,108,,"        Integer errorStatus = testUtilities.rhinoEvaluateConvert(""globalErrorStatus"", Integer.class);"
54920,./TargetProjects/cxf/rt/javascript/javascript-tests/src/test/java/org/apache/cxf/javascript/DocLitBareClientTest.java,110,,"        String errorText = testUtilities.rhinoEvaluateConvert(""globalErrorStatusText"", String.class);"
54921,./TargetProjects/cxf/rt/javascript/javascript-tests/src/test/java/org/apache/cxf/javascript/DocLitBareClientTest.java,114,,"        Scriptable responseObject = (Scriptable)testUtilities.rhinoEvaluate(""globalResponseObject"");"
54922,./TargetProjects/cxf/rt/javascript/javascript-tests/src/test/java/org/apache/cxf/javascript/DocLitWrappedClientTest.java,113,,"        Integer errorStatus = testUtilities.rhinoEvaluateConvert(""globalErrorStatus"", Integer.class);"
54923,./TargetProjects/cxf/rt/javascript/javascript-tests/src/test/java/org/apache/cxf/javascript/DocLitWrappedClientTest.java,115,,"        String errorText = testUtilities.rhinoEvaluateConvert(""globalErrorStatusText"", String.class);"
54924,./TargetProjects/cxf/rt/javascript/javascript-tests/src/test/java/org/apache/cxf/javascript/DocLitWrappedClientTest.java,120,,"        Object responseObject = testUtilities.rhinoEvaluate(""globalResponseObject"");"
54925,./TargetProjects/cxf/rt/javascript/javascript-tests/src/test/java/org/apache/cxf/javascript/DocLitWrappedClientTest.java,174,,"                                                                             ""getReturn"");"
54926,./TargetProjects/cxf/rt/javascript/javascript-tests/src/test/java/org/apache/cxf/javascript/JsXMLHttpRequest.java,152,,"            throwError(""SYNTAX_ERR"");"
54927,./TargetProjects/cxf/rt/javascript/javascript-tests/src/test/java/org/apache/cxf/javascript/JsXMLHttpRequest.java,219,,"            throwError(""INVALID_STATE_ERR"");"
54928,./TargetProjects/cxf/rt/javascript/javascript-tests/src/test/java/org/apache/cxf/javascript/JsXMLHttpRequest.java,503,,"            LOG.severe(""invalid state"");"
54929,./TargetProjects/cxf/rt/javascript/javascript-tests/src/test/java/org/apache/cxf/javascript/fortest/TestBean1.java,133,,"        builder.append(stringItem == null ? ""Null"" : stringItem);"
54930,./TargetProjects/cxf/rt/javascript/javascript-tests/src/test/java/org/apache/cxf/javascript/fortest/TestBean3.java,127,,"        builder.append(stringItem == null ? ""Null"" : stringItem);"
54931,./TargetProjects/cxf/rt/management/src/main/java/org/apache/cxf/management/interceptor/AbstractMessageResponseTimeInterceptor.java,126,,"            serviceCounterName = (ObjectName)endpoint.get(""javax.management.ObjectName"");"
54932,./TargetProjects/cxf/rt/management/src/main/java/org/apache/cxf/management/jmx/export/runtime/ModelMBeanAssembler.java,65,,"        if (methodName.indexOf(""get"") == 0) {"
54933,./TargetProjects/cxf/rt/management/src/main/java/org/apache/cxf/management/jmx/export/runtime/ModelMBeanInfoSupporter.java,152,,"        desc.setField(""name"", attributeName);"
54934,./TargetProjects/cxf/rt/management/src/main/java/org/apache/cxf/management/jmx/export/runtime/ModelMBeanInfoSupporter.java,154,,"        desc.setField(""descriptorType"", ""attribute"");"
54935,./TargetProjects/cxf/rt/management/src/test/java/org/apache/cxf/management/counters/CounterRepositoryTest.java,85,,"        assertEquals(""The operation counter isn't increased"", opCounter.getNumInvocations(), 1);"
54936,./TargetProjects/cxf/rt/management/src/test/java/org/apache/cxf/management/counters/CounterRepositoryTest.java,86,,"        assertEquals(""The Service counter isn't increased"", sCounter.getNumInvocations(), 1);"
54937,./TargetProjects/cxf/rt/management/src/test/java/org/apache/cxf/management/interceptor/AbstractMessageResponseTestBase.java,119,,"        EasyMock.expect(endpoint.get(""javax.management.ObjectName"")).andReturn(null).anyTimes();"
54938,./TargetProjects/cxf/rt/management/src/test/java/org/apache/cxf/management/interceptor/ResponseTimeMessageInInterceptorTest.java,47,,"        EasyMock.expect(exchange.get(""org.apache.cxf.management.counter.enabled"")).andReturn(null);"
54939,./TargetProjects/cxf/rt/management/src/test/java/org/apache/cxf/management/interceptor/ResponseTimeMessageOutInterceptorTest.java,43,,"        EasyMock.expect(exchange.get(""org.apache.cxf.management.counter.enabled"")).andReturn(null);"
54940,./TargetProjects/cxf/rt/management/src/test/java/org/apache/cxf/management/jmx/JMXManagedComponentManagerTest.java,64,,"        assertEquals(""Incorrect result"", ""John Smith"", val);"
54941,./TargetProjects/cxf/rt/management/src/test/java/org/apache/cxf/management/jmx/JMXManagedComponentManagerTest.java,104,,"            (String)manager.getMBeanServer().invoke(name, ""sayHi"", new Object[0], new String[0]);"
54942,./TargetProjects/cxf/rt/rs/client/src/main/java/org/apache/cxf/jaxrs/client/AbstractClient.java,498,,"        @SuppressWarnings(""unchecked"")"
54943,./TargetProjects/cxf/rt/rs/client/src/main/java/org/apache/cxf/jaxrs/client/cache/CacheControlFeature.java,92,,"                .setReadThrough(""true"".equalsIgnoreCase(props.getProperty(prefix + ""readThrough"", ""false"")))"
54944,./TargetProjects/cxf/rt/rs/client/src/main/java/org/apache/cxf/jaxrs/client/cache/CacheControlFeature.java,92,,"                .setReadThrough(""true"".equalsIgnoreCase(props.getProperty(prefix + ""readThrough"", ""false"")))"
54945,./TargetProjects/cxf/rt/rs/client/src/main/java/org/apache/cxf/jaxrs/client/cache/CacheControlFeature.java,102,,"                @SuppressWarnings(""unchecked"")"
54946,./TargetProjects/cxf/rt/rs/client/src/test/java/org/apache/cxf/jaxrs/client/JAXRSClientFactoryBeanTest.java,65,,"        bean.setAddress(""http://bar"");"
54947,./TargetProjects/cxf/rt/rs/client/src/test/java/org/apache/cxf/jaxrs/client/JaxrsClientCallbackTest.java,88,,"        Object[] result = new String[] {""results""};"
54948,./TargetProjects/cxf/rt/rs/client/src/test/java/org/apache/cxf/jaxrs/client/WebClientTest.java,46,,"        WebClient wc = WebClient.create(""http://foo"").header(""a"", ""b"");"
54949,./TargetProjects/cxf/rt/rs/client/src/test/java/org/apache/cxf/jaxrs/client/WebClientTest.java,111,,"        wc.to(""http://bar"", false);"
54950,./TargetProjects/cxf/rt/rs/client/src/test/java/org/apache/cxf/jaxrs/client/WebClientTest.java,118,,"        WebClient wc = WebClient.create(""ws://foo"");"
54951,./TargetProjects/cxf/rt/rs/client/src/test/java/org/apache/cxf/jaxrs/client/WebClientTest.java,153,,"        wc.to(""http://foo/bar"", true);"
54952,./TargetProjects/cxf/rt/rs/client/src/test/java/org/apache/cxf/jaxrs/client/WebClientTest.java,176,,"        wc.path(""bar"").path(""baz"").matrix(""m1"", ""m1value"").query(""q1"", ""q1value"");"
54953,./TargetProjects/cxf/rt/rs/client/src/test/java/org/apache/cxf/jaxrs/client/WebClientTest.java,176,,"        wc.path(""bar"").path(""baz"").matrix(""m1"", ""m1value"").query(""q1"", ""q1value"");"
54954,./TargetProjects/cxf/rt/rs/client/src/test/java/org/apache/cxf/jaxrs/client/WebClientTest.java,235,,"        wc.path(""bar"").path(""baz"").query(""foo"", ""bar"");"
54955,./TargetProjects/cxf/rt/rs/client/src/test/java/org/apache/cxf/jaxrs/client/cache/ClientCacheTest.java,76,,"            final Invocation.Builder cached = base.request(""text/plain"").header(HttpHeaders.CACHE_CONTROL, ""public"");"
54956,./TargetProjects/cxf/rt/rs/client/src/test/java/org/apache/cxf/jaxrs/client/cache/ClientCacheTest.java,76,,"            final Invocation.Builder cached = base.request(""text/plain"").header(HttpHeaders.CACHE_CONTROL, ""public"");"
54957,./TargetProjects/cxf/rt/rs/client/src/test/java/org/apache/cxf/jaxrs/client/logging/RESTLoggingTest.java,57,,"        Assert.assertEquals(""test1"", result);"
54958,./TargetProjects/cxf/rt/rs/client/src/test/java/org/apache/cxf/jaxrs/client/logging/RESTLoggingTest.java,160,,"        Assert.assertEquals(SERVICE_URI + ""/test1"", requestOut.getAddress());"
54959,./TargetProjects/cxf/rt/rs/client/src/test/java/org/apache/cxf/jaxrs/client/spec/ClientResponseFilterTest.java,79,,"            responseContext.getHeaders().add(""X-Done"", ""true"");"
54960,./TargetProjects/cxf/rt/rs/client/src/test/java/org/apache/cxf/jaxrs/client/spec/ClientResponseFilterTest.java,79,,"            responseContext.getHeaders().add(""X-Done"", ""true"");"
54961,./TargetProjects/cxf/rt/rs/client/src/test/java/org/apache/cxf/jaxrs/client/spec/ClientResponseFilterTest.java,126,,"            fail(""Should not be invoked"");"
54962,./TargetProjects/cxf/rt/rs/client/src/test/java/org/apache/cxf/jaxrs/client/spec/ClientResponseFilterTest.java,169,,"            fail(""Should be handled by ResponseProcessingException block"");"
54963,./TargetProjects/cxf/rt/rs/client/src/test/java/org/apache/cxf/jaxrs/client/spec/InvocationBuilderImplTest.java,61,,"        builder.header(""Header1"", ""a"");"
54964,./TargetProjects/cxf/rt/rs/client/src/test/java/org/apache/cxf/jaxrs/client/spring/JAXRSClientFactoryBeanTest.java,88,,"            assertThat(bean.query(""list"", ""1"").query(""list"", ""2"").getCurrentURI().toString(),"
54965,./TargetProjects/cxf/rt/rs/description-openapi-v3/src/main/java/org/apache/cxf/jaxrs/openapi/OpenApiDefaultConfigurationScanner.java,43,,"            new ImmutablePair<>(""classpath"", ""openapi-configuration.yaml""),"
54966,./TargetProjects/cxf/rt/rs/description-openapi-v3/src/main/java/org/apache/cxf/jaxrs/openapi/OpenApiDefaultConfigurationScanner.java,47,,"            new ImmutablePair<>(""file"", ""openapi-configuration.yaml""),"
54967,./TargetProjects/cxf/rt/rs/description-swagger/src/main/java/org/apache/cxf/jaxrs/swagger/openapi/SwaggerToOpenApiConversionUtils.java,49,,"        Arrays.asList(""format"", ""minimum"", ""maximum"", ""default""); "
54968,./TargetProjects/cxf/rt/rs/description-swagger/src/main/java/org/apache/cxf/jaxrs/swagger/openapi/SwaggerToOpenApiConversionUtils.java,152,,"                if (""basic"".equals(securityScheme.getStringProperty(""type""))) {"
54969,./TargetProjects/cxf/rt/rs/description-swagger/src/main/java/org/apache/cxf/jaxrs/swagger/openapi/SwaggerToOpenApiConversionUtils.java,192,,"                String description = okResp.getStringProperty(""description"");"
54970,./TargetProjects/cxf/rt/rs/description-swagger/src/main/java/org/apache/cxf/jaxrs/swagger/openapi/SwaggerToOpenApiConversionUtils.java,196,,"                JsonMapObject schema = okResp.getJsonMapProperty(""schema"");"
54971,./TargetProjects/cxf/rt/rs/description-swagger/src/main/java/org/apache/cxf/jaxrs/swagger/openapi/SwaggerToOpenApiConversionUtils.java,200,,"                        newOkResp.setProperty(""content"", content);"
54972,./TargetProjects/cxf/rt/rs/description-swagger/src/main/java/org/apache/cxf/jaxrs/swagger/openapi/SwaggerToOpenApiConversionUtils.java,262,,"                    JsonMapObject items = sw2PathVerbParamMap.getJsonMapProperty(""items"");"
54973,./TargetProjects/cxf/rt/rs/description-swagger/src/main/java/org/apache/cxf/jaxrs/swagger/openapi/SwaggerToOpenApiConversionUtils.java,314,,"                                                     Collections.singletonMap(""$ref"", ref));"
54974,./TargetProjects/cxf/rt/rs/description-swagger/src/test/java/org/apache/cxf/jaxrs/swagger/Swagger2FeatureTest.java,36,,"        assertEquals(""/foo"", f.getBasePath());"
54975,./TargetProjects/cxf/rt/rs/description-swagger/src/test/java/org/apache/cxf/jaxrs/swagger/openapi/SwaggerToOpenApiConversionUtilsTest.java,204,,"        JsonMapObject userPost = user.getJsonMapProperty(""get"");"
54976,./TargetProjects/cxf/rt/rs/description-swagger/src/test/java/org/apache/cxf/jaxrs/swagger/openapi/SwaggerToOpenApiConversionUtilsTest.java,207,,"        assertNull(userPost.getProperty(""requestBody""));"
54977,./TargetProjects/cxf/rt/rs/description-swagger/src/test/java/org/apache/cxf/jaxrs/swagger/openapi/SwaggerToOpenApiConversionUtilsTest.java,208,,"        List<Map<String, Object>> parameters = userPost.getListMapProperty(""parameters"");"
54978,./TargetProjects/cxf/rt/rs/description-swagger/src/test/java/org/apache/cxf/jaxrs/swagger/openapi/SwaggerToOpenApiConversionUtilsTest.java,210,,"        verifyUserNameParameter(new JsonMapObject(parameters.get(0)), ""username"", ""query"");"
54979,./TargetProjects/cxf/rt/rs/description-swagger/src/test/java/org/apache/cxf/jaxrs/swagger/openapi/SwaggerToOpenApiConversionUtilsTest.java,211,,"        verifyPasswordParameter(new JsonMapObject(parameters.get(1)), ""password"");"
54980,./TargetProjects/cxf/rt/rs/description-swagger/src/test/java/org/apache/cxf/jaxrs/swagger/openapi/SwaggerToOpenApiConversionUtilsTest.java,212,,"        JsonMapObject responses = userPost.getJsonMapProperty(""responses"");"
54981,./TargetProjects/cxf/rt/rs/description-swagger/src/test/java/org/apache/cxf/jaxrs/swagger/openapi/SwaggerToOpenApiConversionUtilsTest.java,214,,"        assertNotNull(responses.getJsonMapProperty(""400""));"
54982,./TargetProjects/cxf/rt/rs/description-swagger/src/test/java/org/apache/cxf/jaxrs/swagger/openapi/SwaggerToOpenApiConversionUtilsTest.java,215,,"        JsonMapObject okResp = responses.getJsonMapProperty(""200"");"
54983,./TargetProjects/cxf/rt/rs/description-swagger/src/test/java/org/apache/cxf/jaxrs/swagger/openapi/SwaggerToOpenApiConversionUtilsTest.java,217,,"        assertNotNull(okResp.getProperty(""description""));"
54984,./TargetProjects/cxf/rt/rs/description-swagger/src/test/java/org/apache/cxf/jaxrs/swagger/openapi/SwaggerToOpenApiConversionUtilsTest.java,219,,"        JsonMapObject content = okResp.getJsonMapProperty(""content"");"
54985,./TargetProjects/cxf/rt/rs/description-swagger/src/test/java/org/apache/cxf/jaxrs/swagger/openapi/SwaggerToOpenApiConversionUtilsTest.java,221,,"        verifySimpleStringContent(content, ""application/json"");"
54986,./TargetProjects/cxf/rt/rs/description-swagger/src/test/java/org/apache/cxf/jaxrs/swagger/openapi/SwaggerToOpenApiConversionUtilsTest.java,222,,"        verifySimpleStringContent(content, ""application/xml"");"
54987,./TargetProjects/cxf/rt/rs/description-swagger/src/test/java/org/apache/cxf/jaxrs/swagger/openapi/SwaggerToOpenApiConversionUtilsTest.java,243,,"        verifyUserNameParameter(userParam, ""username"", ""path"");"
54988,./TargetProjects/cxf/rt/rs/description-swagger/src/test/java/org/apache/cxf/jaxrs/swagger/openapi/SwaggerToOpenApiConversionUtilsTest.java,248,,"        assertNotNull(responses.getProperty(""404""));"
54989,./TargetProjects/cxf/rt/rs/description-swagger/src/test/java/org/apache/cxf/jaxrs/swagger/openapi/SwaggerToOpenApiConversionUtilsTest.java,254,,"        verifySimpleContent(content, ""application/json"", ""User"");"
54990,./TargetProjects/cxf/rt/rs/description-swagger/src/test/java/org/apache/cxf/jaxrs/swagger/openapi/SwaggerToOpenApiConversionUtilsTest.java,272,,"            assertTrue(requestBody.getBooleanProperty(""required""));"
54991,./TargetProjects/cxf/rt/rs/description-swagger/src/test/java/org/apache/cxf/jaxrs/swagger/openapi/SwaggerToOpenApiConversionUtilsTest.java,319,,"        verifySimpleContent(content, ""application/json"", ""Order"");"
54992,./TargetProjects/cxf/rt/rs/description-swagger/src/test/java/org/apache/cxf/jaxrs/swagger/openapi/SwaggerToOpenApiConversionUtilsTest.java,339,,"        JsonMapObject storePost = store.getJsonMapProperty(""post"");"
54993,./TargetProjects/cxf/rt/rs/description-swagger/src/test/java/org/apache/cxf/jaxrs/swagger/openapi/SwaggerToOpenApiConversionUtilsTest.java,435,,"        assertEquals(findByStatus ? ""status"" : ""tags"", param.getProperty(""name""));"
54994,./TargetProjects/cxf/rt/rs/description-swagger/src/test/java/org/apache/cxf/jaxrs/swagger/openapi/SwaggerToOpenApiConversionUtilsTest.java,437,,"        assertNull(param.getProperty(""type""));"
54995,./TargetProjects/cxf/rt/rs/description-swagger/src/test/java/org/apache/cxf/jaxrs/swagger/openapi/SwaggerToOpenApiConversionUtilsTest.java,442,,"        JsonMapObject schema = param.getJsonMapProperty(""schema"");"
54996,./TargetProjects/cxf/rt/rs/description-swagger/src/test/java/org/apache/cxf/jaxrs/swagger/openapi/SwaggerToOpenApiConversionUtilsTest.java,455,,"        verifyArrayContent(content, ""application/json"", ""Pet"");"
54997,./TargetProjects/cxf/rt/rs/description-swagger/src/test/java/org/apache/cxf/jaxrs/swagger/openapi/SwaggerToOpenApiConversionUtilsTest.java,533,,"        assertNull(apiKeyParam.getProperty(""format""));"
54998,./TargetProjects/cxf/rt/rs/description-swagger/src/test/java/org/apache/cxf/jaxrs/swagger/openapi/SwaggerToOpenApiConversionUtilsTest.java,537,,"        assertEquals(""string"", schema.getProperty(""type""));"
54999,./TargetProjects/cxf/rt/rs/description-swagger/src/test/java/org/apache/cxf/jaxrs/swagger/parse/SwaggerParseUtilsTest.java,65,,"        assertEquals(""POST"", addPet.getVerb());"
