156000,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayLdapGroupFuncTest.java,69,,"    String serviceUrl = driver.getClusterUrl() + ""/test-service-path/test-service-resource"";"
156001,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayLdapGroupFuncTest.java,92,,"        .addTag( ""role"" ).addText( ""authentication"" )"
156002,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayLdapGroupFuncTest.java,93,,"        .addTag( ""name"" ).addText( ""ShiroProvider"" )"
156003,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayLdapGroupFuncTest.java,94,,"        .addTag( ""enabled"" ).addText( ""true"" )"
156004,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayLdapGroupFuncTest.java,95,,"        .addTag( ""param"" )"
156005,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayLdapGroupFuncTest.java,97,,"        .addTag( ""value"" ).addText( ""org.apache.knox.gateway.shirorealm.KnoxLdapRealm"" )"
156006,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayLdapPosixGroupFuncTest.java,73,,"    String serviceUrl = driver.getClusterUrl() + ""/test-service-path/test-service-resource"";"
156007,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayLdapPosixGroupFuncTest.java,97,,"        .addTag( ""role"" ).addText( ""authentication"" )"
156008,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayLdapPosixGroupFuncTest.java,98,,"        .addTag( ""name"" ).addText( ""ShiroProvider"" )"
156009,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayLdapPosixGroupFuncTest.java,99,,"        .addTag( ""enabled"" ).addText( ""true"" )"
156010,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayLdapPosixGroupFuncTest.java,100,,"        .addTag( ""param"" )"
156011,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayLdapPosixGroupFuncTest.java,102,,"        .addTag( ""value"" ).addText( ""org.apache.knox.gateway.shirorealm.KnoxLdapRealm"" )"
156012,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayLocalServiceFuncTest.java,131,,"        .addTag( ""name"" ).addText( ""ShiroProvider"" )"
156013,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayLocalServiceFuncTest.java,133,,"        .addTag( ""param"" )"
156014,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayLocalServiceFuncTest.java,135,,"        .addTag( ""value"" ).addText( ""org.apache.knox.gateway.shirorealm.KnoxLdapRealm"" ).gotoParent()"
156015,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayMultiFuncTest.java,154,,"    params.put( ""LDAP_URL"", driver.getLdapUrl() );"
156016,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayMultiFuncTest.java,232,,"        .header( ""Location"", gatewayUrl + ""/knox681/repeat"" );"
156017,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayMultiFuncTest.java,232,,"        .header( ""Location"", gatewayUrl + ""/knox681/repeat"" );"
156018,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayMultiFuncTest.java,254,,"    request.addHeader( ""Content-Type"", ""application/json"" );"
156019,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayMultiFuncTest.java,321,,"        .contentType( ""text/plain"" )"
156020,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayMultiFuncTest.java,322,,"        .body( is( ""test-service-response"" ) )"
156021,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewaySampleFuncTest.java,123,,"        .addTag( ""name"" ).addText( ""ShiroProvider"" )"
156022,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewaySampleFuncTest.java,125,,"        .addTag( ""param"" )"
156023,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewaySampleFuncTest.java,127,,"        .addTag( ""value"" ).addText( ""org.apache.knox.gateway.shirorealm.KnoxLdapRealm"" ).gotoParent()"
156024,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayShiroAuthTest.java,143,,"                    .addTag(""provider"")"
156025,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayShiroAuthTest.java,144,,"                    .addTag(""role"").addText(""authentication"")"
156026,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayShiroAuthTest.java,145,,"                    .addTag(""name"").addText(""ShiroProvider"")"
156027,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayShiroAuthTest.java,146,,"                    .addTag(""enabled"").addText(""true"")"
156028,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayShiroAuthTest.java,146,,"                    .addTag(""enabled"").addText(""true"")"
156029,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayShiroAuthTest.java,147,,"                    .addTag(""param"")"
156030,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayShiroAuthTest.java,149,,"                    .addTag(""value"").addText(""org.apache.knox.gateway.shirorealm.KnoxLdapRealm"").gotoParent()"
156031,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayUIFuncTest.java,71,,"    driver.setupService( ""OOZIEUI"", ""http://"" + TEST_HOST + "":11000/oozie"", ""/cluster/oozie"", USE_MOCK_SERVICES );"
156032,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayUIFuncTest.java,100,,"              .addTag( ""role"" ).addText( ""webappsec"" )"
156033,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayUIFuncTest.java,101,,"              .addTag(""name"").addText(""WebAppSec"")"
156034,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayUIFuncTest.java,102,,"              .addTag(""enabled"").addText(""true"")"
156035,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayUIFuncTest.java,103,,"              .addTag( ""param"" )"
156036,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayUIFuncTest.java,105,,"                .addTag(""value"").addText(""true"").gotoParent().gotoParent()"
156037,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayUIFuncTest.java,144,,"        .expect().method(""GET"")"
156038,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayUIFuncTest.java,146,,"        .queryParam( ""user.name"", username )"
156039,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayUIFuncTest.java,149,,"        .contentType(""application/json"")"
156040,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayUIFuncTest.java,153,,"        .header( ""X-XSRF-Header"", ""test-xsrf-header-value"" )"
156041,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayUIFuncTest.java,153,,"        .header( ""X-XSRF-Header"", ""test-xsrf-header-value"" )"
156042,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/GatewayUIFuncTest.java,156,,"        .when().get( driver.getUrl( ""OOZIEUI"" ) + path + ( driver.isUseGateway() ? """" : ""?user.name="" + username ) ).asString();"
156043,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/Knox242FuncTest.java,78,,"    String serviceUrl = driver.getClusterUrl() + ""/test-service-path/test-service-resource"";"
156044,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/Knox242FuncTest.java,101,,"        .addTag( ""role"" ).addText( ""authentication"" )"
156045,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/Knox242FuncTest.java,102,,"        .addTag( ""name"" ).addText( ""ShiroProvider"" )"
156046,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/Knox242FuncTest.java,103,,"        .addTag( ""enabled"" ).addText( ""true"" )"
156047,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/Knox242FuncTest.java,104,,"        .addTag( ""param"" )"
156048,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/Knox242FuncTest.java,106,,"        .addTag( ""value"" ).addText( ""org.apache.knox.gateway.shirorealm.KnoxLdapRealm"" )"
156049,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/KnoxCliLdapFuncTestNegative.java,127,,"        .addTag( ""provider"" )"
156050,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/KnoxCliLdapFuncTestNegative.java,128,,"        .addTag(""role"").addText(""authentication"")"
156051,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/KnoxCliLdapFuncTestNegative.java,129,,"        .addTag( ""name"" ).addText( ""ShiroProvider"" )"
156052,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/KnoxCliLdapFuncTestNegative.java,130,,"        .addTag( ""enabled"" ).addText( ""true"" )"
156053,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/KnoxCliLdapFuncTestNegative.java,130,,"        .addTag( ""enabled"" ).addText( ""true"" )"
156054,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/KnoxCliLdapFuncTestNegative.java,131,,"        .addTag(""param"")"
156055,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/KnoxCliLdapFuncTestNegative.java,133,,"        .addTag(""value"").addText(""org.apache.knox.gateway.shirorealm.KnoxLdapRealm"").gotoParent()"
156056,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/KnoxCliLdapFuncTestPositive.java,127,,"        .addTag(""provider"")"
156057,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/KnoxCliLdapFuncTestPositive.java,128,,"        .addTag(""role"").addText(""authentication"")"
156058,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/KnoxCliLdapFuncTestPositive.java,129,,"        .addTag(""name"").addText(""ShiroProvider"")"
156059,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/KnoxCliLdapFuncTestPositive.java,130,,"        .addTag(""enabled"").addText(""true"")"
156060,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/KnoxCliLdapFuncTestPositive.java,130,,"        .addTag(""enabled"").addText(""true"")"
156061,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/KnoxCliLdapFuncTestPositive.java,131,,"        .addTag( ""param"" )"
156062,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/KnoxCliLdapFuncTestPositive.java,133,,"        .addTag(""value"").addText(""org.apache.knox.gateway.shirorealm.KnoxLdapRealm"").gotoParent()"
156063,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/KnoxCliLdapFuncTestPositive.java,193,,"        .addTag( ""value"" ).addText(""guest-password"").gotoParent()"
156064,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/KnoxCliLdapFuncTestPositive.java,224,,"    String[] args = {""user-auth-test"", ""--master"", ""knox"", ""--cluster"", ""test-cluster"", ""--u"", username, ""--p"", password,"
156065,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/KnoxCliLdapFuncTestPositive.java,224,,"    String[] args = {""user-auth-test"", ""--master"", ""knox"", ""--cluster"", ""test-cluster"", ""--u"", username, ""--p"", password,"
156066,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/KnoxCliLdapFuncTestPositive.java,224,,"    String[] args = {""user-auth-test"", ""--master"", ""knox"", ""--cluster"", ""test-cluster"", ""--u"", username, ""--p"", password,"
156067,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/KnoxCliLdapFuncTestPositive.java,224,,"    String[] args = {""user-auth-test"", ""--master"", ""knox"", ""--cluster"", ""test-cluster"", ""--u"", username, ""--p"", password,"
156068,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/KnoxCliLdapFuncTestPositive.java,224,,"    String[] args = {""user-auth-test"", ""--master"", ""knox"", ""--cluster"", ""test-cluster"", ""--u"", username, ""--p"", password,"
156069,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/KnoxCliLdapFuncTestPositive.java,224,,"    String[] args = {""user-auth-test"", ""--master"", ""knox"", ""--cluster"", ""test-cluster"", ""--u"", username, ""--p"", password,"
156070,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/KnoxCliLdapFuncTestPositive.java,224,,"    String[] args = {""user-auth-test"", ""--master"", ""knox"", ""--cluster"", ""test-cluster"", ""--u"", username, ""--p"", password,"
156071,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/KnoxCliSysBindTest.java,129,,"        .addTag(""provider"")"
156072,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/KnoxCliSysBindTest.java,130,,"        .addTag(""role"").addText(""authentication"")"
156073,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/KnoxCliSysBindTest.java,131,,"        .addTag(""name"").addText(""ShiroProvider"")"
156074,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/KnoxCliSysBindTest.java,132,,"        .addTag(""enabled"").addText(""true"")"
156075,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/KnoxCliSysBindTest.java,132,,"        .addTag(""enabled"").addText(""true"")"
156076,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/KnoxCliSysBindTest.java,133,,"        .addTag( ""param"" )"
156077,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/KnoxCliSysBindTest.java,135,,"        .addTag(""value"").addText(""org.apache.knox.gateway.shirorealm.KnoxLdapRealm"").gotoParent()"
156078,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/KnoxCliSysBindTest.java,224,,"    String[] args = { ""system-user-auth-test"", ""--master"", ""knox"", ""--cluster"", ""test-cluster-1"", ""--d"" };"
156079,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/KnoxCliSysBindTest.java,224,,"    String[] args = { ""system-user-auth-test"", ""--master"", ""knox"", ""--cluster"", ""test-cluster-1"", ""--d"" };"
156080,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/KnoxCliSysBindTest.java,224,,"    String[] args = { ""system-user-auth-test"", ""--master"", ""knox"", ""--cluster"", ""test-cluster-1"", ""--d"" };"
156081,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/KnoxCliSysBindTest.java,224,,"    String[] args = { ""system-user-auth-test"", ""--master"", ""knox"", ""--cluster"", ""test-cluster-1"", ""--d"" };"
156082,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/OozieServiceDefinitionTest.java,62,,"    EasyMock.expect( registry.lookupServiceURL( ""test-cluster"", ""NAMENODE"" ) ).andReturn( ""test-scheme://test-host:42"" ).anyTimes();"
156083,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/PortMappingHelper.java,122,,"        .addTag(""provider"").addTag(""role"").addText(""webappsec"").addTag(""name"")"
156084,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/PortMappingHelper.java,122,,"        .addTag(""provider"").addTag(""role"").addText(""webappsec"").addTag(""name"")"
156085,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/PortMappingHelper.java,122,,"        .addTag(""provider"").addTag(""role"").addText(""webappsec"").addTag(""name"")"
156086,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/PortMappingHelper.java,123,,"        .addText(""WebAppSec"").addTag(""enabled"").addText(""true"").addTag(""param"")"
156087,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/PortMappingHelper.java,123,,"        .addText(""WebAppSec"").addTag(""enabled"").addText(""true"").addTag(""param"")"
156088,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/PortMappingHelper.java,123,,"        .addText(""WebAppSec"").addTag(""enabled"").addText(""true"").addTag(""param"")"
156089,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/PortMappingHelper.java,124,,"        .addTag(""name"").addText(""csrf.enabled"").addTag(""value"").addText(""true"")"
156090,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/SimpleDescriptorHandlerFuncTest.java,63,,"          ""            <param>\n"" +"
156091,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/SimpleDescriptorHandlerFuncTest.java,66,,"          ""            </param>\n"" +"
156092,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/WebHdfsHaFuncTest.java,77,,"      driver.setupService(""WEBHDFS"", ""http://vm.local:50070/webhdfs"", ""/cluster/webhdfs"", USE_MOCK_SERVICES);"
156093,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/WebHdfsHaFuncTest.java,102,,"            .addTag(""provider"")"
156094,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/WebHdfsHaFuncTest.java,103,,"            .addTag(""role"").addText(""webappsec"")"
156095,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/WebHdfsHaFuncTest.java,104,,"            .addTag(""name"").addText(""WebAppSec"")"
156096,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/WebHdfsHaFuncTest.java,105,,"            .addTag(""enabled"").addText(""true"")"
156097,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/WebHdfsHaFuncTest.java,105,,"            .addTag(""enabled"").addText(""true"")"
156098,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/WebHdfsHaFuncTest.java,106,,"            .addTag(""param"")"
156099,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/WebHdfsHaFuncTest.java,108,,"            .addTag(""value"").addText(""true"").gotoParent().gotoParent()"
156100,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/WebHdfsHaFuncTest.java,157,,"      String username = ""hdfs"";"
156101,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/WebHdfsHaFuncTest.java,158,,"      String password = ""hdfs-password"";"
156102,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/WebHdfsHaFuncTest.java,160,,"            .method(""GET"")"
156103,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/WebHdfsHaFuncTest.java,161,,"            .pathInfo(""/webhdfs/v1/"")"
156104,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/WebHdfsHaFuncTest.java,162,,"            .queryParam(""op"", ""LISTSTATUS"")"
156105,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/WebHdfsHaFuncTest.java,163,,"            .queryParam(""user.name"", username)"
156106,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/WebHdfsHaFuncTest.java,167,,"            .contentType(""application/json"");"
156107,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/WebHdfsHaFuncTest.java,170,,"            .header(""X-XSRF-Header"", ""jksdhfkhdsf"")"
156108,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/WebHdfsHaFuncTest.java,170,,"            .header(""X-XSRF-Header"", ""jksdhfkhdsf"")"
156109,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/WebHdfsHaFuncTest.java,176,,"            .when().get(driver.getUrl(""WEBHDFS"") + ""/v1/"");"
156110,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/WebHdfsHaFuncTest.java,248,,"            .content(driver.getResourceBytes(""webhdfs-liststatus-standby.json""))"
156111,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/WebHdfsHaFuncTest.java,336,,"            .method(""POST"")"
156112,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/WebHdfsHaFuncTest.java,377,,"            .queryParam(""op"", ""MKDIRS"")"
156113,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/deploy/DeploymentFactoryFuncTest.java,77,,"    File targetDir = new File( System.getProperty( ""user.dir"" ), ""target"" );"
156114,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/deploy/DeploymentFactoryFuncTest.java,77,,"    File targetDir = new File( System.getProperty( ""user.dir"" ), ""target"" );"
156115,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/deploy/DeploymentFactoryFuncTest.java,78,,"    File gatewayDir = new File( targetDir, ""gateway-home-"" + UUID.randomUUID() );"
156116,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/deploy/DeploymentFactoryFuncTest.java,90,,"    options.put(""persist-master"", ""false"");"
156117,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/deploy/DeploymentFactoryFuncTest.java,90,,"    options.put(""persist-master"", ""false"");"
156118,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/deploy/DeploymentFactoryFuncTest.java,91,,"    options.put(""master"", ""password"");"
156119,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/deploy/DeploymentFactoryFuncTest.java,91,,"    options.put(""master"", ""password"");"
156120,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/deploy/DeploymentFactoryFuncTest.java,100,,"    topology.setName( ""test-cluster"" );"
156121,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/deploy/DeploymentFactoryFuncTest.java,102,,"    service.setRole( ""WEBHDFS"" );"
156122,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/deploy/DeploymentFactoryFuncTest.java,122,,"    Document gateway = XmlUtils.readXml( war.get( ""%2F/WEB-INF/gateway.xml"" ).getAsset().openStream() );"
156123,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/deploy/DeploymentFactoryFuncTest.java,125,,"    assertThat( gateway, hasXPath( ""/gateway/resource[1]/filter[1]/role"", equalTo( ""xforwardedheaders"" ) ) );"
156124,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/deploy/DeploymentFactoryFuncTest.java,127,,"    assertThat( gateway, hasXPath( ""/gateway/resource[1]/filter[1]/class"", equalTo( ""org.apache.knox.gateway.filter.XForwardedHeaderFilter"" ) ) );"
156125,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/deploy/DeploymentFactoryFuncTest.java,129,,"    assertThat( gateway, hasXPath( ""/gateway/resource[1]/filter[2]/role"", equalTo( ""federation"" ) ) );"
156126,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/deploy/DeploymentFactoryFuncTest.java,131,,"    assertThat( gateway, hasXPath( ""/gateway/resource[1]/filter[2]/class"", equalTo( ""org.apache.knox.gateway.preauth.filter.HeaderPreAuthFederationFilter"" ) ) );"
156127,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/deploy/DeploymentFactoryFuncTest.java,138,,"    assertThat( gateway, hasXPath( ""/gateway/resource[1]/filter[4]/role"", equalTo( ""identity-assertion"" ) ) );"
156128,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/deploy/DeploymentFactoryFuncTest.java,138,,"    assertThat( gateway, hasXPath( ""/gateway/resource[1]/filter[4]/role"", equalTo( ""identity-assertion"" ) ) );"
156129,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/deploy/DeploymentFactoryFuncTest.java,139,,"    assertThat( gateway, hasXPath( ""/gateway/resource[1]/filter[4]/name"", equalTo( ""Default"" ) ) );"
156130,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/deploy/DeploymentFactoryFuncTest.java,174,,"    provider.setRole( ""authentication"" );"
156131,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/deploy/DeploymentFactoryFuncTest.java,244,,"    authorizer.setRole( ""authorization"" );"
156132,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/deploy/DeploymentFactoryFuncTest.java,245,,"    authorizer.setName(""AclsAuthz"");"
156133,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/deploy/DeploymentFactoryFuncTest.java,253,,"    Document web = XmlUtils.readXml( war.get( ""%2F/WEB-INF/web.xml"" ).getAsset().openStream() );"
156134,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/deploy/DeploymentFactoryFuncTest.java,260,,"    assertThat( web, hasXPath( ""/web-app/servlet/init-param/param-value"", equalTo( ""/WEB-INF/gateway.xml"" ) ) );"
156135,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/deploy/DeploymentFactoryFuncTest.java,278,,"    assertThat( gateway, hasXPath( ""/gateway/resource[1]/filter[4]/role"", equalTo( ""rewrite"" ) ) );"
156136,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/deploy/DeploymentFactoryFuncTest.java,279,,"    assertThat( gateway, hasXPath( ""/gateway/resource[1]/filter[4]/class"", equalTo( ""org.apache.knox.gateway.filter.rewrite.api.UrlRewriteServletFilter"" ) ) );"
156137,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/deploy/DeploymentFactoryFuncTest.java,286,,"    assertThat( gateway, hasXPath( ""/gateway/resource[1]/filter[6]/class"", equalTo( ""org.apache.knox.gateway.filter.AclsAuthorizationFilter"" ) ) );"
156138,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/deploy/DeploymentFactoryFuncTest.java,288,,"    assertThat( gateway, hasXPath( ""/gateway/resource[1]/filter[7]/role"", equalTo( ""dispatch"" ) ) );"
156139,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/deploy/DeploymentFactoryFuncTest.java,290,,"    assertThat( gateway, hasXPath( ""/gateway/resource[1]/filter[7]/class"", equalTo( ""org.apache.knox.gateway.dispatch.GatewayDispatchFilter"" ) ) );"
156140,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/topology/monitor/RemoteConfigurationMonitorTest.java,219,,"        final String configMonitorName = ""zkConfigClient"";"
156141,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/topology/monitor/RemoteConfigurationMonitorTest.java,220,,"        final String alias = ""zkPass"";"
156142,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/topology/monitor/RemoteConfigurationMonitorTest.java,233,,"                GatewayConfig.REMOTE_CONFIG_REGISTRY_AUTH_TYPE + ""=Digest;"" +"
156143,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/topology/monitor/RemoteConfigurationMonitorTest.java,254,,"        assertNotNull(""Failed to load RemoteConfigurationMonitor"", cm);"
156144,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/topology/monitor/RemoteConfigurationMonitorTest.java,422,,"            clientService.get(configMonitorName).createEntry(""/auth_test/child_node/test1"");"
156145,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/topology/monitor/RemoteConfigurationMonitorTest.java,423,,"            assertNull(""Creation should have been prevented since write access is not granted to the test client."","
156146,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/topology/monitor/RemoteConfigurationMonitorTest.java,606,,"                    ""        <param>\n"" +"
156147,./TargetProjects/knox/gateway-test/src/test/java/org/apache/knox/gateway/topology/monitor/RemoteConfigurationMonitorTest.java,609,,"                    ""        </param>\n"" +"
156148,./TargetProjects/knox/gateway-topology-hadoop-xml/src/test/java/org/apache/knox/gateway/topology/hadoop/xml/HadoopXmlResourceParserTest.java,71,,"    final String testConfigPath = this.getClass().getClassLoader().getResource(""testDescriptor.xml"").getPath();"
156149,./TargetProjects/knox/gateway-topology-hadoop-xml/src/test/java/org/apache/knox/gateway/topology/hadoop/xml/HadoopXmlResourceParserTest.java,84,,"    final Set<SimpleDescriptor> descriptors = hadoopXmlResourceParser.parse(testConfigPath, ""topology2"").getDescriptors();"
156150,./TargetProjects/knox/gateway-topology-hadoop-xml/src/test/java/org/apache/knox/gateway/topology/hadoop/xml/HadoopXmlResourceParserTest.java,110,,"    advancedConfigurationTopology1.put(buildEnabledParameter(""topology1"", ""HIVE""), ""false"");"
156151,./TargetProjects/knox/gateway-topology-simple/src/main/java/org/apache/knox/gateway/topology/simple/SimpleDescriptorHandler.java,460,,"                sw.write(""            <name>"" + provider.getName() + ""</name>\n"");"
156152,./TargetProjects/knox/gateway-util-common/src/main/java/org/apache/knox/gateway/util/X509CertificateUtil.java,272,,"    return System.getProperty(""java.vendor"").contains(""IBM"") ? ""com.ibm.security.x509.X509CertInfo"""
156153,./TargetProjects/knox/gateway-util-common/src/main/java/org/apache/knox/gateway/util/X509CertificateUtil.java,272,,"    return System.getProperty(""java.vendor"").contains(""IBM"") ? ""com.ibm.security.x509.X509CertInfo"""
156154,./TargetProjects/knox/gateway-util-common/src/test/java/org/apache/knox/gateway/audit/AuditLayoutTest.java,49,,"  private static Auditor auditor = auditService.getAuditor( ""audit.forward"", AuditConstants.KNOX_COMPONENT_NAME, AuditConstants.KNOX_SERVICE_NAME );"
156155,./TargetProjects/knox/gateway-util-common/src/test/java/org/apache/knox/gateway/audit/AuditServiceTest.java,96,,"      auditor.audit( ""action"" + i, ""resource"" + i, ""resource type"" + i, ""outcome"" + i, ""message"" + i );"
156156,./TargetProjects/knox/gateway-util-common/src/test/java/org/apache/knox/gateway/audit/AuditServiceTest.java,96,,"      auditor.audit( ""action"" + i, ""resource"" + i, ""resource type"" + i, ""outcome"" + i, ""message"" + i );"
156157,./TargetProjects/knox/gateway-util-common/src/test/java/org/apache/knox/gateway/audit/AuditServiceTest.java,96,,"      auditor.audit( ""action"" + i, ""resource"" + i, ""resource type"" + i, ""outcome"" + i, ""message"" + i );"
156158,./TargetProjects/knox/gateway-util-common/src/test/java/org/apache/knox/gateway/audit/AuditServiceTest.java,96,,"      auditor.audit( ""action"" + i, ""resource"" + i, ""resource type"" + i, ""outcome"" + i, ""message"" + i );"
156159,./TargetProjects/knox/gateway-util-common/src/test/java/org/apache/knox/gateway/audit/AuditServiceTest.java,96,,"      auditor.audit( ""action"" + i, ""resource"" + i, ""resource type"" + i, ""outcome"" + i, ""message"" + i );"
156160,./TargetProjects/knox/gateway-util-common/src/test/java/org/apache/knox/gateway/util/CookieUtilsTest.java,41,,"        new Cookie(""one"", ""1""),"
156161,./TargetProjects/knox/gateway-util-common/src/test/java/org/apache/knox/gateway/util/HttpUtilsTest.java,48,,"    assertThat( map.containsKey( ""test-name"" ), is( true ) );"
156162,./TargetProjects/knox/gateway-util-common/src/test/java/org/apache/knox/gateway/util/HttpUtilsTest.java,55,,"    assertThat( map.containsKey( ""test-name-one"" ), is( true ) );"
156163,./TargetProjects/knox/gateway-util-common/src/test/java/org/apache/knox/gateway/util/HttpUtilsTest.java,56,,"    assertThat( map.keySet(), is(new LinkedHashSet<>(Arrays.asList(""test-name-one"", ""test-name-two""))));"
156164,./TargetProjects/knox/gateway-util-common/src/test/java/org/apache/knox/gateway/util/HttpUtilsTest.java,132,,"    map = HttpUtils.splitQuery( ""=test-value"" );"
156165,./TargetProjects/knox/gateway-util-common/src/test/java/org/apache/knox/gateway/util/JsonPathTest.java,122,,"    assertThat( segments[1].getField(), is( ""one"" ) );"
156166,./TargetProjects/knox/gateway-util-common/src/test/java/org/apache/knox/gateway/util/JsonPathTest.java,206,,"    assertThat( segments[2].getField(), is( ""field"" ) );"
156167,./TargetProjects/knox/gateway-util-common/src/test/java/org/apache/knox/gateway/util/JsonPathTest.java,428,,"    assertThat( node.asText(), is( ""value"" ) );"
156168,./TargetProjects/knox/gateway-util-common/src/test/java/org/apache/knox/gateway/util/MimeTypeMapTest.java,34,,"    map.put( new MimeType( ""text/xml"" ), ""text/xml"" );"
156169,./TargetProjects/knox/gateway-util-common/src/test/java/org/apache/knox/gateway/util/UrlsTest.java,37,,"    assertEquals("".local.com"", Urls.getDomainName(""http://www.local.com"", null));"
156170,./TargetProjects/knox/gateway-util-common/src/test/java/org/apache/knox/gateway/util/UrlsTest.java,72,,"    assertEquals( ""x/x"", Urls.trimLeadingAndTrailingSlash( ""x/x"" ) );"
156171,./TargetProjects/knox/gateway-util-configinjector/src/test/java/org/apache/knox/gateway/config/FuncTest.java,37,,"    String stringMember = ""stringDefault"";"
156172,./TargetProjects/knox/gateway-util-configinjector/src/test/java/org/apache/knox/gateway/config/FuncTest.java,52,,"    @Alias(""altStringProp"")"
156173,./TargetProjects/knox/gateway-util-configinjector/src/test/java/org/apache/knox/gateway/config/FuncTest.java,59,,"    public void setNamedArgMethod( @Configure @Alias(""altArgStringProp"") String s ) {"
156174,./TargetProjects/knox/gateway-util-configinjector/src/test/java/org/apache/knox/gateway/config/FuncTest.java,66,,"        @Configure @Alias(""multiArg1"") String s,"
156175,./TargetProjects/knox/gateway-util-configinjector/src/test/java/org/apache/knox/gateway/config/FuncTest.java,67,,"        @Configure @Alias(""multiArg2"") Integer i,"
156176,./TargetProjects/knox/gateway-util-configinjector/src/test/java/org/apache/knox/gateway/config/FuncTest.java,68,,"        @Configure @Alias(""multiArg3"") int n ) {"
156177,./TargetProjects/knox/gateway-util-configinjector/src/test/java/org/apache/knox/gateway/config/FuncTest.java,73,,"    String multiArgStringField = ""default"";"
156178,./TargetProjects/knox/gateway-util-configinjector/src/test/java/org/apache/knox/gateway/config/FuncTest.java,83,,"    testConfig.put( ""stringMember"", ""stringValue"" );"
156179,./TargetProjects/knox/gateway-util-configinjector/src/test/java/org/apache/knox/gateway/config/FuncTest.java,83,,"    testConfig.put( ""stringMember"", ""stringValue"" );"
156180,./TargetProjects/knox/gateway-util-configinjector/src/test/java/org/apache/knox/gateway/config/FuncTest.java,84,,"    testConfig.put( ""intMember"", ""2"" );"
156181,./TargetProjects/knox/gateway-util-configinjector/src/test/java/org/apache/knox/gateway/config/FuncTest.java,85,,"    testConfig.put( ""integerMember"", ""2"" );"
156182,./TargetProjects/knox/gateway-util-configinjector/src/test/java/org/apache/knox/gateway/config/FuncTest.java,86,,"    testConfig.put( ""stringProp"", ""stringValue"" );"
156183,./TargetProjects/knox/gateway-util-configinjector/src/test/java/org/apache/knox/gateway/config/FuncTest.java,211,,"    @Configure @Alias(""user.name"")"
156184,./TargetProjects/knox/gateway-util-launcher/src/test/java/org/apache/knox/gateway/launcher/ConfigTest.java,49,,"    assertThat( c.get( null, ""name"" ), is( ""value"" ) );"
156185,./TargetProjects/knox/gateway-util-launcher/src/test/java/org/apache/knox/gateway/launcher/ConfigTest.java,49,,"    assertThat( c.get( null, ""name"" ), is( ""value"" ) );"
156186,./TargetProjects/knox/gateway-util-launcher/src/test/java/org/apache/knox/gateway/launcher/ConfigTest.java,55,,"    assertThat( c.get( """", ""name1"" ), is( ""value1"" ) );"
156187,./TargetProjects/knox/gateway-util-launcher/src/test/java/org/apache/knox/gateway/launcher/ConfigTest.java,55,,"    assertThat( c.get( """", ""name1"" ), is( ""value1"" ) );"
156188,./TargetProjects/knox/gateway-util-launcher/src/test/java/org/apache/knox/gateway/launcher/ConfigTest.java,57,,"    assertThat( c.get( ""section1"", ""name1"" ), is( ""value2"" ) );"
156189,./TargetProjects/knox/gateway-util-launcher/src/test/java/org/apache/knox/gateway/launcher/ConfigTest.java,57,,"    assertThat( c.get( ""section1"", ""name1"" ), is( ""value2"" ) );"
156190,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/ExpanderTest.java,47,,"    params.addValue( ""host"", ""test-host"" );"
156191,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/ExpanderTest.java,48,,"    params.addValue( ""port"", ""777"" );"
156192,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/ExpanderTest.java,69,,"    params.addValue( ""scheme"", ""http"" );"
156193,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/ExpanderTest.java,69,,"    params.addValue( ""scheme"", ""http"" );"
156194,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/ExpanderTest.java,72,,"    params.addValue( ""host"", ""hortonworks.com"" );"
156195,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/ExpanderTest.java,73,,"    params.addValue( ""port"", ""8888"" );"
156196,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/ExpanderTest.java,74,,"    params.addValue( ""path"", ""top"" );"
156197,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/ExpanderTest.java,74,,"    params.addValue( ""path"", ""top"" );"
156198,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/ExpanderTest.java,75,,"    params.addValue( ""path"", ""mid"" );"
156199,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/ExpanderTest.java,76,,"    params.addValue( ""path"", ""bot"" );"
156200,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/ExpanderTest.java,77,,"    params.addValue( ""path"", ""file"" );"
156201,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/ExpanderTest.java,78,,"    params.addValue( ""queryParam"", ""new-value"" );"
156202,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/ExpanderTest.java,102,,"    params.addValue( ""path-name"", ""path-value"" );"
156203,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/ExpanderTest.java,102,,"    params.addValue( ""path-name"", ""path-value"" );"
156204,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/ExpanderTest.java,126,,"    params.addValue( ""path-name"", ""other-path-value"" );"
156205,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/ExpanderTest.java,233,,"    params.addValue( ""middle"", ""A"" );"
156206,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/ExpanderTest.java,487,,"    rewrite = Parser.parseTemplate( ""{root}/{path}"" );"
156207,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/FunctionTest.java,52,,"    function = new Function( ""variable"" );"
156208,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/MatcherTest.java,65,,"    matcher.add( patternTemplate, ""webhdfs"" );"
156209,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/MatcherTest.java,70,,"    assertThat( match.getParams().resolve( ""pathB"" ), hasItems( ""b1"", ""b2"" ) );"
156210,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/MatcherTest.java,124,,"    patternTemplate = Parser.parseTemplate( ""*://*:*/**/webhdfs/{version}/{path=**}?{**}"" );"
156211,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/MatcherTest.java,145,,"    assertThat( match.getParams().resolve( ""pathA"" ), hasItems( ""a"" ) );"
156212,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/MatcherTest.java,219,,"    matcher.add( patternTemplate, ""test-match"" );"
156213,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/MatcherTest.java,221,,"    inputTemplate = Parser.parseLiteral( ""test-scheme://test-host:42"" );"
156214,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/MatcherTest.java,224,,"    inputTemplate = Parser.parseLiteral( ""test-scheme://test-host:42/"" );"
156215,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/MatcherTest.java,227,,"    inputTemplate = Parser.parseLiteral( ""test-scheme://test-host:42/test-path"" );"
156216,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/MatcherTest.java,366,,"    patternTemplate = Parser.parseTemplate( ""/path?{query}"" );"
156217,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/MatcherTest.java,367,,"    inputTemplate = Parser.parseLiteral( ""/path"" );"
156218,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/MatcherTest.java,382,,"    inputTemplate = Parser.parseLiteral( ""/path?query=value"" );"
156219,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/MatcherTest.java,386,,"    assertThat( ""Should match because input does contain the required query."", match, notNullValue() );"
156220,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/MatcherTest.java,387,,"    assertThat( match.getParams().resolve( ""query"" ), hasItem( ""value"" ) );"
156221,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/MatcherTest.java,387,,"    assertThat( match.getParams().resolve( ""query"" ), hasItem( ""value"" ) );"
156222,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/MatcherTest.java,533,,"    pattern = ""path"";"
156223,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/MatcherTest.java,620,,"    matcher.add( Parser.parseTemplate( ""/webhdfs"" ), ""/webhdfs"" );"
156224,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/MatcherTest.java,621,,"    matcher.add( Parser.parseTemplate( ""/webhdfs/dfshealth.jsp"" ), ""/webhdfs/dfshealth.jsp"" );"
156225,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/MatcherTest.java,623,,"    matcher.add( Parser.parseTemplate( ""/webhdfs/other.jsp"" ), ""/webhdfs/other.jsp"" );"
156226,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/MatcherTest.java,624,,"    matcher.add( Parser.parseTemplate( ""/webhdfs/*"" ), ""/webhdfs/*"" );"
156227,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/MatcherTest.java,625,,"    matcher.add( Parser.parseTemplate( ""/webhdfs/**"" ), ""/webhdfs/**"" );"
156228,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/MatcherTest.java,626,,"    matcher.add( Parser.parseTemplate( ""/webhdfs/v1/**"" ), ""/webhdfs/v1/**"" );"
156229,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/MatcherTest.java,646,,"    assertValidMatch( matcher, ""/webhdfs/file"", ""/webhdfs/*"" );"
156230,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/MatcherTest.java,648,,"    assertValidMatch( matcher, ""/webhdfs/path/file"", null );"
156231,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/MatcherTest.java,705,,"    matcher.add( Parser.parseTemplate( ""/path/{file}"" ), ""default"" );"
156232,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/MatcherTest.java,717,,"    matcher.add( Parser.parseTemplate( ""/path/{regex=prefix*suffix}"" ), ""regex"" );"
156233,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/MatcherTest.java,844,,"    input = Parser.parseLiteral( ""path-value"" );"
156234,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/MatcherTest.java,850,,"    assertThat( params.getNames(), hasItem( ""path-queryParam"" ) );"
156235,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/MatcherTest.java,895,,"    assertThat( params.getNames(), hasItem( ""mid"" ) );"
156236,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/MatcherTest.java,943,,"    assertThat( params.getNames(), hasItem( ""queryParam-name"" ) );"
156237,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/ParserTest.java,134,,"    assertPath( template, 0, ""path"", ""**"" );"
156238,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/ParserTest.java,140,,"    assertPath( template, 0, ""pathA"", ""**"" );"
156239,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/ParserTest.java,141,,"    assertPath( template, 1, ""pathB"", ""**"" );"
156240,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/ParserTest.java,147,,"    assertQuery( template, ""paramA"", ""valueA"", ""**"" );"
156241,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/ParserTest.java,147,,"    assertQuery( template, ""paramA"", ""valueA"", ""**"" );"
156242,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/ParserTest.java,312,,"    assertQuery( template, ""name"", """", ""value"" );"
156243,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/ParserTest.java,318,,"    assertQuery( template, ""name1"", """", ""value1"" );"
156244,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/ParserTest.java,319,,"    assertQuery( template, ""name2"", """", ""value2"" );"
156245,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/ParserTest.java,404,,"    assertQuery( template, ""query"", ""queryParam"", ""**"", Segment.GLOB, 1, 1 );"
156246,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/ParserTest.java,404,,"    assertQuery( template, ""query"", ""queryParam"", ""**"", Segment.GLOB, 1, 1 );"
156247,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/ParserTest.java,553,,"    assertThat( template.getHost().getFirstValue().getOriginalPattern(), is( ""host"" ) );"
156248,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/ParserTest.java,769,,"    assertThat( template.getScheme().getFirstValue().getOriginalPattern(), is( ""http"" ) );"
156249,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/ParserTest.java,1132,,"    assertThat( template.getScheme().getFirstValue().getOriginalPattern(), is( ""test-scheme"" ) );"
156250,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/ParserTest.java,1136,,"    assertThat( template.getPath().get( 0 ).getFirstValue().getOriginalPattern(), is( ""test-path"" ) );"
156251,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/RewriterTest.java,153,,"    inputUri = new URI( ""path?query=value"" );"
156252,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/RewriterTest.java,181,,"    actualInput = new URI( ""http://some-host:0/some-path"" );"
156253,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/RewriterTest.java,183,,"    sourcePattern = Parser.parseTemplate( ""*://*:*/**"" );"
156254,./TargetProjects/knox/gateway-util-urltemplate/src/test/java/org/apache/knox/gateway/util/urltemplate/TemplateTest.java,158,,"    Template t1 = Parser.parseTemplate( ""scheme://username:password@host:port/top/mid/bot/file?query=value#fragment1"" );"
156255,./TargetProjects/kylin/core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java,63,,"    private static final String FALSE = ""false"";"
156256,./TargetProjects/kylin/core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java,64,,"    private static final String TRUE = ""true"";"
156257,./TargetProjects/kylin/core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java,505,,"        return getOptional(""kylin.metadata.hbase-client-scanner-timeout-period"", ""10000"");"
156258,./TargetProjects/kylin/core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java,509,,"        return getOptional(""kylin.metadata.hbase-rpc-timeout"", ""5000"");"
156259,./TargetProjects/kylin/core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java,533,,"        return Integer.parseInt(getOptional(""kylin.dictionary.forest-trie-max-mb"", ""500""));"
156260,./TargetProjects/kylin/core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java,573,,"        return Integer.parseInt(getOptional(""kylin.snapshot.max-mb"", ""300""));"
156261,./TargetProjects/kylin/core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java,585,,"        return Double.parseDouble(getOptional(""kylin.snapshot.ext.local.cache.max-size-gb"", ""200""));"
156262,./TargetProjects/kylin/core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java,925,,"        int percent = Integer.parseInt(this.getOptional(""kylin.job.sampling-percentage"", ""100""));"
156263,./TargetProjects/kylin/core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java,2072,,"            return getOptional(""kylin.query.pushdown."" + id + "".jdbc.url"", """");"
156264,./TargetProjects/kylin/core-common/src/main/java/org/apache/kylin/common/livy/LivyRestBuilder.java,77,,"                    logger.error(""livy builder failed."", e);"
156265,./TargetProjects/kylin/core-common/src/main/java/org/apache/kylin/common/livy/LivyRestExecutor.java,50,,"            String state = jsonObject.getString(""state"");"
156266,./TargetProjects/kylin/core-common/src/main/java/org/apache/kylin/common/livy/LivyRestExecutor.java,84,,"            logger.error(""livy execute failed."", e);"
156267,./TargetProjects/kylin/core-common/src/main/java/org/apache/kylin/common/metrics/metrics2/CodahaleMetrics.java,276,,"            throw new IllegalStateException(""Error retrieving meter "" + name + "" from the metric registry "", e);"
156268,./TargetProjects/kylin/core-common/src/main/java/org/apache/kylin/common/metrics/metrics2/HadoopMetrics2Reporter.java,71,,"    @SuppressWarnings(""rawtypes"")"
156269,./TargetProjects/kylin/core-common/src/main/java/org/apache/kylin/common/persistence/JDBCConnectionManager.java,86,,"        if (""true"".equals(ret.get(""passwordEncrypted""))) {"
156270,./TargetProjects/kylin/core-common/src/main/java/org/apache/kylin/common/threadlocal/InternalThreadLocal.java,51,,"    @SuppressWarnings(""unchecked"")"
156271,./TargetProjects/kylin/core-common/src/main/java/org/apache/kylin/common/util/Bytes.java,471,,"                    ""Not enough room to put a long at"" + "" offset "" + offset + "" in a "" + bytes.length + "" byte array"");"
156272,./TargetProjects/kylin/core-common/src/main/java/org/apache/kylin/common/util/Bytes.java,471,,"                    ""Not enough room to put a long at"" + "" offset "" + offset + "" in a "" + bytes.length + "" byte array"");"
156273,./TargetProjects/kylin/core-common/src/main/java/org/apache/kylin/common/util/Bytes.java,471,,"                    ""Not enough room to put a long at"" + "" offset "" + offset + "" in a "" + bytes.length + "" byte array"");"
156274,./TargetProjects/kylin/core-common/src/main/java/org/apache/kylin/common/util/HadoopUtil.java,207,,"    @SuppressWarnings(""deprecation"")"
156275,./TargetProjects/kylin/core-common/src/test/java/org/apache/kylin/common/KylinConfigTest.java,44,,"        assertEquals(""test2"", override.get(""test2""));"
156276,./TargetProjects/kylin/core-common/src/test/java/org/apache/kylin/common/KylinConfigTest.java,73,,"        config.setProperty(""1234"", ""1234"");"
156277,./TargetProjects/kylin/core-common/src/test/java/org/apache/kylin/common/StorageURLTest.java,31,,"            StorageURL id = new StorageURL(""hello@hbase"");"
156278,./TargetProjects/kylin/core-common/src/test/java/org/apache/kylin/common/StorageURLTest.java,32,,"            assertEquals(""hello"", id.getIdentifier());"
156279,./TargetProjects/kylin/core-common/src/test/java/org/apache/kylin/common/StorageURLTest.java,33,,"            assertEquals(""hbase"", id.getScheme());"
156280,./TargetProjects/kylin/core-common/src/test/java/org/apache/kylin/common/StorageURLTest.java,48,,"            StorageURL o2 = new StorageURL(""hello@hbase,a=b"");"
156281,./TargetProjects/kylin/core-common/src/test/java/org/apache/kylin/common/metrics/metrics2/HadoopMetrics2ReporterTest.java,93,,"        @SuppressWarnings(""rawtypes"")"
156282,./TargetProjects/kylin/core-common/src/test/java/org/apache/kylin/common/metrics/metrics2/HadoopMetrics2ReporterTest.java,122,,"        assertTrue(""Should not be the same map instance after collection"","
156283,./TargetProjects/kylin/core-common/src/test/java/org/apache/kylin/common/persistence/LocalFileResourceStoreTest.java,59,,"            store.putResource(""/res1"", new StringEntity(""data1""), 1000, StringEntity.serializer);"
156284,./TargetProjects/kylin/core-common/src/test/java/org/apache/kylin/common/util/HiveCmdBuilderTest.java,63,,"        hiveCmdBuilder.addStatement(""USE default;"");"
156285,./TargetProjects/kylin/core-common/src/test/java/org/apache/kylin/common/util/HiveCmdBuilderTest.java,64,,"        hiveCmdBuilder.addStatement(""DROP TABLE `test`;"");"
156286,./TargetProjects/kylin/core-common/src/test/java/org/apache/kylin/common/util/HiveCmdBuilderTest.java,89,,"        String createFileCmd = cmd.substring(0, cmd.indexOf(""EOL\n"", cmd.indexOf(""EOL\n"") + 1) + 3);"
156287,./TargetProjects/kylin/core-common/src/test/java/org/apache/kylin/common/util/TimeUtilTest.java,61,,"        long t2 = dateFormat.parse(""2012/12/31 11:02:01"").getTime();"
156288,./TargetProjects/kylin/core-common/src/test/java/org/apache/kylin/common/util/TimeUtilTest.java,69,,"        Assert.assertEquals(dateFormat.parse(""2012/10/1 00:00:00"").getTime(), TimeUtil.getQuarterStart(t3));"
156289,./TargetProjects/kylin/core-common/src/test/java/org/apache/kylin/common/util/TimeUtilTest.java,70,,"        Assert.assertEquals(dateFormat.parse(""2012/1/1 00:00:00"").getTime(), TimeUtil.getYearStart(t3));"
156290,./TargetProjects/kylin/core-common/src/test/java/org/apache/kylin/common/util/TimeUtilTest.java,72,,"        Assert.assertEquals(dateFormat.parse(""2013/1/1 00:00:00"").getTime(), TimeUtil.getMonthEnd(t3));"
156291,./TargetProjects/kylin/core-common/src/test/java/org/apache/kylin/common/util/TimeUtilTest.java,102,,"        Assert.assertEquals(dateFormat.parse(""2015/1/1 00:00:00"").getTime(), TimeUtil.getMonthStart(t6));"
156292,./TargetProjects/kylin/core-cube/src/main/java/org/apache/kylin/cube/CubeCapabilityChecker.java,113,,"            logger.info(""Exclude cube "" + cube.getName() + "" because unmatched dimensions: "" + unmatchedDimensions);"
156293,./TargetProjects/kylin/core-cube/src/main/java/org/apache/kylin/cube/model/CubeDesc.java,807,,"                    String msg = ""Aggregation group "" + index + "" of Cube Desc "" + this.name"
156294,./TargetProjects/kylin/core-cube/src/main/java/org/apache/kylin/cube/model/validation/rule/FunctionRule.java,75,,"                context.addResult(ResultLevel.ERROR, ""Must define parameter for function "" + func.getExpression() + "" in "" + measure.getName());"
156295,./TargetProjects/kylin/core-cube/src/main/java/org/apache/kylin/cube/upgrade/common/CubeMetadataUpgrade.java,70,,"        logger.info(""================================================================="");"
156296,./TargetProjects/kylin/core-cube/src/main/java/org/apache/kylin/gridtable/UnitTestSupport.java,51,,"                DataType.getType(""varchar(10)""), //"
156297,./TargetProjects/kylin/core-cube/src/main/java/org/apache/kylin/gridtable/UnitTestSupport.java,86,,"            result.add(newRec(info, d_01_14, ""Yang"", ""Food"", new Long(10), new BigDecimal(""10.5"")));"
156298,./TargetProjects/kylin/core-cube/src/main/java/org/apache/kylin/gridtable/UnitTestSupport.java,86,,"            result.add(newRec(info, d_01_14, ""Yang"", ""Food"", new Long(10), new BigDecimal(""10.5"")));"
156299,./TargetProjects/kylin/core-cube/src/test/java/org/apache/kylin/cube/CubeDescManagerTest.java,36,,"        } else if (encoding.startsWith(""dict"")) {"
156300,./TargetProjects/kylin/core-cube/src/test/java/org/apache/kylin/cube/CubeDescTest.java,337,,"        Assert.assertEquals(measureForTransCnt.getName(), ""TRANS_CNT"");"
156301,./TargetProjects/kylin/core-cube/src/test/java/org/apache/kylin/cube/CubeManagerTest.java,85,,"        CubeInstance createdCube = cubeMgr.createCube(""a_whole_new_cube"", ProjectInstance.DEFAULT_PROJECT_NAME, desc,"
156302,./TargetProjects/kylin/core-cube/src/test/java/org/apache/kylin/cube/CubeManagerTest.java,102,,"        CubeInstance cube = mgr.getCube(""test_kylin_cube_with_slr_empty"").latestCopyForWrite();"
156303,./TargetProjects/kylin/core-cube/src/test/java/org/apache/kylin/cube/CubeManagerTest.java,158,,"        seg4.setLastBuildJobID(""test"");"
156304,./TargetProjects/kylin/core-cube/src/test/java/org/apache/kylin/cube/CubeSpecificConfigTest.java,34,,"        CubeDesc cubeDesc = CubeDescManager.getInstance(baseConfig).getCubeDesc(""ssb"");"
156305,./TargetProjects/kylin/core-cube/src/test/java/org/apache/kylin/cube/DimensionRangeInfoTest.java,55,,"            m2.put(colId, new DimensionRangeInfo(""2012-06-01"", ""2013-06-30""));"
156306,./TargetProjects/kylin/core-cube/src/test/java/org/apache/kylin/cube/common/SegmentPrunerTest.java,243,,"        String start = DateFormat.formatToTimeStr(tsRange.start.v, ""yyyy-MM-dd"");"
156307,./TargetProjects/kylin/core-cube/src/test/java/org/apache/kylin/cube/cuboid/CuboidTest.java,78,,"        assertEquals(true, cuboidScheduler.isValid(toLong(""111111111"")));"
156308,./TargetProjects/kylin/core-cube/src/test/java/org/apache/kylin/cube/cuboid/CuboidTest.java,117,,"        assertEquals(toLong(""11111111""), cuboid.getId());"
156309,./TargetProjects/kylin/core-cube/src/test/java/org/apache/kylin/cube/model/validation/rule/DictionaryRuleTest.java,83,,"        testDictionaryDesc(ERROR_REUSE_BUILDER_BOTH_SET, DictionaryDesc.create(""lstg_site_id"", ""SITE_NAME"", ""FakeBuilderClass""));"
156310,./TargetProjects/kylin/core-cube/src/test/java/org/apache/kylin/cube/project/ProjectManagerTest.java,74,,"        int originalCubeCountInDefault = prjMgr.listAllRealizations(""default"").size();"
156311,./TargetProjects/kylin/core-cube/src/test/java/org/apache/kylin/cube/project/ProjectManagerTest.java,81,,"        CubeInstance createdCube = cubeMgr.createCube(""cube_in_alien_project"", ""alien"", desc, null);"
156312,./TargetProjects/kylin/core-cube/src/test/java/org/apache/kylin/cube/project/ProjectManagerTest.java,81,,"        CubeInstance createdCube = cubeMgr.createCube(""cube_in_alien_project"", ""alien"", desc, null);"
156313,./TargetProjects/kylin/core-cube/src/test/java/org/apache/kylin/cube/project/ProjectManagerTest.java,128,,"        CubeInstance createdCube = cubeMgr.createCube(""new_cube_in_default"", ProjectInstance.DEFAULT_PROJECT_NAME, desc, null);"
156314,./TargetProjects/kylin/core-cube/src/test/java/org/apache/kylin/cube/project/ProjectManagerTest.java,150,,"        assertTrue(prjMgr.getRealizationsByTable(""default"", ""default.test_kylin_fact"").contains(cube));"
156315,./TargetProjects/kylin/core-cube/src/test/java/org/apache/kylin/gridtable/AggregationCacheSpillTest.java,80,,"        GTScanRequest scanRequest = new GTScanRequestBuilder().setInfo(INFO).setRanges(null).setDimensions(new ImmutableBitSet(0, 3)).setAggrGroupBy(new ImmutableBitSet(0, 3)).setAggrMetrics(new ImmutableBitSet(3, 6)).setAggrMetricsFuncs(new String[] { ""SUM"", ""SUM"", ""COUNT_DISTINCT"" }).setFilterPushDown(null).setAggCacheMemThreshold(0.5).createGTScanRequest();"
156316,./TargetProjects/kylin/core-cube/src/test/java/org/apache/kylin/gridtable/SimpleGridTableTest.java,140,,"        System.out.println(""Written Row Count: "" + builder.getWrittenRowCount());"
156317,./TargetProjects/kylin/core-dictionary/src/main/java/org/apache/kylin/dict/TrieDictionaryBuilder.java,225,,"            out.println(""OBPN node size:  "" + (obpn_sizeValue + obpn_sizeNoValuesBeneath + obpn_sizeChildCount + obpn_sizeChildOffset) + "" = "" + obpn_sizeValue + "" + "" + obpn_sizeNoValuesBeneath + "" + "" + obpn_sizeChildCount + "" + "" + obpn_sizeChildOffset);"
156318,./TargetProjects/kylin/core-dictionary/src/test/java/org/apache/kylin/dict/AppendTrieDictionaryTest.java,74,,"        KylinConfig.getInstanceFromEnv().setProperty(""kylin.dictionary.append-entry-size"", ""50000"");"
156319,./TargetProjects/kylin/core-dictionary/src/test/java/org/apache/kylin/dict/AppendTrieDictionaryTest.java,100,,"                    + ""dddddddddddddddddddddddddddddddddddddddddddddddddkfjadslkfjdsakljflksadjklfjklsjfkljwelkrjewkljrklewjklrjelkwjrklewjrlkjwkljerklkljlkjrlkwejrk"""
156320,./TargetProjects/kylin/core-dictionary/src/test/java/org/apache/kylin/dict/AppendTrieDictionaryTest.java,213,,"            assertNotEquals(String.format(Locale.ROOT, ""Value %s not exist"", str), -1, id);"
156321,./TargetProjects/kylin/core-dictionary/src/test/java/org/apache/kylin/dict/AppendTrieDictionaryTest.java,237,,"                assertEquals(""Except id "" + id + "" for "" + str + "" but "" + checkMap.get(id), str, checkMap.get(id));"
156322,./TargetProjects/kylin/core-dictionary/src/test/java/org/apache/kylin/dict/AppendTrieDictionaryTest.java,237,,"                assertEquals(""Except id "" + id + "" for "" + str + "" but "" + checkMap.get(id), str, checkMap.get(id));"
156323,./TargetProjects/kylin/core-dictionary/src/test/java/org/apache/kylin/dict/AppendTrieDictionaryTest.java,237,,"                assertEquals(""Except id "" + id + "" for "" + str + "" but "" + checkMap.get(id), str, checkMap.get(id));"
156324,./TargetProjects/kylin/core-dictionary/src/test/java/org/apache/kylin/dict/DateStrDictionaryTest.java,147,,"            fail(""IllegalArgumentException expected"");"
156325,./TargetProjects/kylin/core-dictionary/src/test/java/org/apache/kylin/dict/DictionaryManagerTest.java,58,,"        DictionaryInfo nullInfo = dictMgr.buildDictionary(col, MockupReadableTable.newNonExistTable(""/a/path""));"
156326,./TargetProjects/kylin/core-dictionary/src/test/java/org/apache/kylin/dict/MultipleDictionaryValueEnumeratorTest.java,90,,"        String[] values2 = enumerateDictInfoList(dictionaryInfoList, ""integer"");"
156327,./TargetProjects/kylin/core-dictionary/src/test/java/org/apache/kylin/dict/TrieDictionaryForestTest.java,80,,"        strs.add(""part"");"
156328,./TargetProjects/kylin/core-dictionary/src/test/java/org/apache/kylin/dict/TrieDictionaryForestTest.java,81,,"        strs.add(""par"");"
156329,./TargetProjects/kylin/core-dictionary/src/test/java/org/apache/kylin/dict/TrieDictionaryForestTest.java,82,,"        strs.add(""partition"");"
156330,./TargetProjects/kylin/core-dictionary/src/test/java/org/apache/kylin/dict/TrieDictionaryForestTest.java,83,,"        strs.add(""party"");"
156331,./TargetProjects/kylin/core-dictionary/src/test/java/org/apache/kylin/dict/TrieDictionaryForestTest.java,84,,"        strs.add(""parties"");"
156332,./TargetProjects/kylin/core-dictionary/src/test/java/org/apache/kylin/dict/TrieDictionaryForestTest.java,85,,"        strs.add(""paint"");"
156333,./TargetProjects/kylin/core-dictionary/src/test/java/org/apache/kylin/dict/TrieDictionaryForestTest.java,205,,"                + ""dddddddddddddddddddddddddddddddddddddddddddddddddkfjadslkfjdsakljflksadjklfjklsjfkljwelkrjewkljrklewjklrjelkwjrklewjrlkjwkljerklkljlkjrlkwejrk"""
156334,./TargetProjects/kylin/core-dictionary/src/test/java/org/apache/kylin/dict/TrieDictionaryForestTest.java,350,,"            fail(""should throw IllegalArgumentException,but id is:"" + id);"
156335,./TargetProjects/kylin/core-dictionary/src/test/java/org/apache/kylin/dict/TrieDictionaryTest.java,130,,"        str.add(""part"");"
156336,./TargetProjects/kylin/core-dictionary/src/test/java/org/apache/kylin/dict/TrieDictionaryTest.java,131,,"        str.add(""par"");"
156337,./TargetProjects/kylin/core-dictionary/src/test/java/org/apache/kylin/dict/TrieDictionaryTest.java,132,,"        str.add(""partition"");"
156338,./TargetProjects/kylin/core-dictionary/src/test/java/org/apache/kylin/dict/TrieDictionaryTest.java,133,,"        str.add(""party"");"
156339,./TargetProjects/kylin/core-dictionary/src/test/java/org/apache/kylin/dict/TrieDictionaryTest.java,134,,"        str.add(""parties"");"
156340,./TargetProjects/kylin/core-dictionary/src/test/java/org/apache/kylin/dict/TrieDictionaryTest.java,135,,"        str.add(""paint"");"
156341,./TargetProjects/kylin/core-dictionary/src/test/java/org/apache/kylin/dict/TrieDictionaryTest.java,136,,"        String longStr = ""paintjkjdfklajkdljfkdsajklfjklsadjkjekjrklewjrklewjklrjklewjkljkljkljkljweklrjewkljrklewjrlkjewkljrkljkljkjlkjjkljkljkljkljlkjlkjlkjljdfadfads"" + ""dddddddddddddddddddddddddddddddddddddddddddddddddkfjadslkfjdsakljflksadjklfjklsjfkljwelkrjewkljrklewjklrjelkwjrklewjrlkjwkljerklkljlkjrlkwejrk"" + ""dddddddddddddddddddddddddddddddddddddddddddddddddkfjadslkfjdsakljflksadjklfjklsjfkljwelkrjewkljrklewjklrjelkwjrklewjrlkjwkljerklkljlkjrlkwejrk"" + ""dddddddddddddddddddddddddddddddddddddddddddddddddkfjadslkfjdsakljflksadjklfjklsjfkljwelkrjewkljrklewjklrjelkwjrklewjrlkjwkljerklkljlkjrlkwejrk"" + ""dddddddddddddddddddddddddddddddddddddddddddddddddkfjadslkfjdsakljflksadjklfjklsjfkljwelkrjewkljrklewjklrjelkwjrklewjrlkjwkljerklkljlkjrlkwejrk"" + ""dddddddddddddddddddddddddddddddddddddddddddddddddkfjadslkfjdsakljflksadjklfjklsjfkljwelkrjewkljrklewjklrjelkwjrklewjrlkjwkljerklkljlkjrlkwejrk"""
156342,./TargetProjects/kylin/core-dictionary/src/test/java/org/apache/kylin/dict/TrieDictionaryTest.java,534,,"        Assert.assertEquals(0, getField(dict, ""cacheHitCount""));"
156343,./TargetProjects/kylin/core-dictionary/src/test/java/org/apache/kylin/dict/lookup/LookupTableTest.java,65,,"        List<String> results = lookupTable.scan(""CAL_DT"", values, ""YEAR_BEG_DT"");"
156344,./TargetProjects/kylin/core-dictionary/src/test/java/org/apache/kylin/dict/lookup/SnapshotManagerTest.java,103,,"        SnapshotTable origin = snapshotManager.buildSnapshot(genTable(""./origin"", expect), genTableDesc(""TEST_TABLE""),"
156345,./TargetProjects/kylin/core-job/src/main/java/org/apache/kylin/job/dao/ExecutableDao.java,260,,"            logger.error(""error get all Jobs:"", e);"
156346,./TargetProjects/kylin/core-job/src/main/java/org/apache/kylin/job/engine/JobEngineConfig.java,57,,"            hadoopJobConfFile = (HADOOP_JOB_CONF_FILENAME + ""_"" + suffix.toLowerCase(Locale.ROOT) + "".xml"");"
156347,./TargetProjects/kylin/core-job/src/main/java/org/apache/kylin/job/execution/ExecutableManager.java,132,,"            jobId = jobId.replaceAll(""[./]"", """");"
156348,./TargetProjects/kylin/core-job/src/main/java/org/apache/kylin/job/execution/ExecutableManager.java,181,,"            Preconditions.checkArgument(jobOutput != null, ""there is no related output for job id:"" + uuid);"
156349,./TargetProjects/kylin/core-job/src/main/java/org/apache/kylin/job/execution/ExecutableManager.java,500,,"                    result.append(""\""jobId\"":\"""" + job.getId() + ""\"","");"
156350,./TargetProjects/kylin/core-job/src/test/java/org/apache/kylin/job/lock/zookeeper/ZookeeperDistributedLockTest.java,124,,"        String path = ZK_PFX + ""/test_interrupt_lock"";"
156351,./TargetProjects/kylin/core-job/src/test/java/org/apache/kylin/job/lock/zookeeper/ZookeeperDistributedLockTest.java,128,,"        Mockito.doThrow(new ZkPeekLockInterruptException(""mock interrupt"")).doCallRealMethod().when(spy)"
156352,./TargetProjects/kylin/core-job/src/test/java/org/apache/kylin/job/lock/zookeeper/ZookeeperDistributedLockTest.java,132,,"            fail(""should throw exception"");"
156353,./TargetProjects/kylin/core-job/src/test/java/org/apache/kylin/job/util/FlatTableSqlQuoteUtilsTest.java,39,,"        List<String> tablePatterns = FlatTableSqlQuoteUtils.getTableNameOrAliasPatterns(""KYLIN_SALES"");"
156354,./TargetProjects/kylin/core-job/src/test/java/org/apache/kylin/job/util/FlatTableSqlQuoteUtilsTest.java,40,,"        String expr = ""KYLIN_SALES.PRICE * KYLIN_SALES.COUNT"";"
156355,./TargetProjects/kylin/core-job/src/test/java/org/apache/kylin/job/util/FlatTableSqlQuoteUtilsTest.java,50,,"        expr = ""KYLIN_SALES.PRICE AS KYLIN_SALES_PRICE * KYLIN_SALES.COUNT AS KYLIN_SALES_COUNT"";"
156356,./TargetProjects/kylin/core-job/src/test/java/org/apache/kylin/job/util/FlatTableSqlQuoteUtilsTest.java,63,,"        List<String> tablePatterns = FlatTableSqlQuoteUtils.getTableNameOrAliasPatterns(""KYLIN_SALES_ALIAS"");"
156357,./TargetProjects/kylin/core-job/src/test/java/org/apache/kylin/job/util/FlatTableSqlQuoteUtilsTest.java,87,,"        List<String> columnPatterns = FlatTableSqlQuoteUtils.getColumnNameOrAliasPatterns(""PRICE"");"
156358,./TargetProjects/kylin/core-job/src/test/java/org/apache/kylin/job/util/FlatTableSqlQuoteUtilsTest.java,116,,"        List<String> tablePatterns = FlatTableSqlQuoteUtils.getTableNameOrAliasPatterns(""kylin_sales"");"
156359,./TargetProjects/kylin/core-job/src/test/java/org/apache/kylin/job/util/FlatTableSqlQuoteUtilsTest.java,144,,"        Assert.assertEquals(""`abc`"", FlatTableSqlQuoteUtils.quoteIdentifier(""abc"", null));"
156360,./TargetProjects/kylin/core-job/src/test/java/org/apache/kylin/job/util/FlatTableSqlQuoteUtilsTest.java,144,,"        Assert.assertEquals(""`abc`"", FlatTableSqlQuoteUtils.quoteIdentifier(""abc"", null));"
156361,./TargetProjects/kylin/core-job/src/test/java/org/apache/kylin/job/util/MailNotificationUtilTest.java,50,,"                        .startsWith(""Cannot find email template for""));"
156362,./TargetProjects/kylin/core-metadata/src/main/java/org/apache/kylin/metadata/datatype/DataType.java,76,,"        register(""any"", ""char"", ""varchar"", ""string"", //"
156363,./TargetProjects/kylin/core-metadata/src/main/java/org/apache/kylin/metadata/datatype/DataType.java,78,,"                ""int"", ""short"", ""long"", ""integer"", ""tinyint"", ""smallint"", ""bigint"", //"
156364,./TargetProjects/kylin/core-metadata/src/main/java/org/apache/kylin/metadata/datatype/DataType.java,78,,"                ""int"", ""short"", ""long"", ""integer"", ""tinyint"", ""smallint"", ""bigint"", //"
156365,./TargetProjects/kylin/core-metadata/src/main/java/org/apache/kylin/metadata/datatype/DataType.java,78,,"                ""int"", ""short"", ""long"", ""integer"", ""tinyint"", ""smallint"", ""bigint"", //"
156366,./TargetProjects/kylin/core-metadata/src/main/java/org/apache/kylin/metadata/datatype/DataType.java,78,,"                ""int"", ""short"", ""long"", ""integer"", ""tinyint"", ""smallint"", ""bigint"", //"
156367,./TargetProjects/kylin/core-metadata/src/main/java/org/apache/kylin/metadata/datatype/DataType.java,80,,"                ""float"", ""real"", ""double"", ""decimal"", ""numeric"", //"
156368,./TargetProjects/kylin/core-metadata/src/main/java/org/apache/kylin/metadata/model/PartitionDesc.java,316,,"            builder.append("" AND "");"
156369,./TargetProjects/kylin/core-metadata/src/main/java/org/apache/kylin/metadata/model/PartitionDesc.java,349,,"            builder.append(partitionColumnName + "" >= '"" + startInc + ""'"");"
156370,./TargetProjects/kylin/core-metadata/src/main/java/org/apache/kylin/metadata/model/PartitionDesc.java,351,,"            builder.append(partitionColumnName + "" < '"" + endInc + ""'"");"
156371,./TargetProjects/kylin/core-metadata/src/main/java/org/apache/kylin/metadata/model/Segments.java,433,,"                    throw new IllegalStateException(""Segments overlap: "" + pre + "" and "" + seg);"
156372,./TargetProjects/kylin/core-metadata/src/main/java/org/apache/kylin/metadata/project/ProjectL2Cache.java,232,,"                logger.warn(""Realization '"" + entry + ""' defined under project '"" + project + ""' is not found"");"
156373,./TargetProjects/kylin/core-metadata/src/main/java/org/apache/kylin/metadata/project/ProjectManager.java,329,,"                    throw new IllegalStateException(""Cannot find table '"" + tableId + ""' in metadata manager"");"
156374,./TargetProjects/kylin/core-metadata/src/main/java/org/apache/kylin/source/datagen/ColumnGenConfig.java,66,,"        Map<String, String> config = Util.parseEqualCommaPairs(col.getDataGen(), ""values"");"
156375,./TargetProjects/kylin/core-metadata/src/main/java/org/apache/kylin/source/datagen/ModelDataGenerator.java,175,,"            out.print(""CREATE DATABASE IF NOT EXISTS "" + normHiveIdentifier(db) + "";\n"");"
156376,./TargetProjects/kylin/core-metadata/src/test/java/org/apache/kylin/dimension/TimeDerivedColumnTypeTest.java,32,,"        String segmentStartStr = ""2017-11-01 08:00:00"";"
156377,./TargetProjects/kylin/core-metadata/src/test/java/org/apache/kylin/dimension/TimeDerivedColumnTypeTest.java,33,,"        String segmentEndStr = ""2017-11-01 09:00:00"";"
156378,./TargetProjects/kylin/core-metadata/src/test/java/org/apache/kylin/measure/extendedcolumn/ExtendedColumnSerializerTest.java,43,,"        measureType = (MeasureType<ByteArray>) MeasureTypeFactory.create(""EXTENDED_COLUMN"", ""extendedcolumn(20)"");"
156379,./TargetProjects/kylin/core-metadata/src/test/java/org/apache/kylin/measure/hllc/NewHyperLogLogBenchmarkTest.java,73,,"            System.out.println(""----------------------------"");"
156380,./TargetProjects/kylin/core-metadata/src/test/java/org/apache/kylin/measure/hllc/NewHyperLogLogBenchmarkTest.java,74,,"            System.out.println(""cardinality : "" + cardinality);"
156381,./TargetProjects/kylin/core-metadata/src/test/java/org/apache/kylin/measure/topn/TopNCounterBasicTest.java,139,,"        List<Counter> counters = Lists.newArrayList(new Counter<>(""item"", 0d), new Counter<>(""item"", 0d),"
156382,./TargetProjects/kylin/core-metadata/src/test/java/org/apache/kylin/metadata/TableMetadataManagerTest.java,64,,"        TableDesc table = getInstance(getTestConfig()).getTableDesc(""EDW.TEST_CAL_DT"", ""default"");"
156383,./TargetProjects/kylin/core-metadata/src/test/java/org/apache/kylin/metadata/TableMetadataManagerTest.java,78,,"        TableExtDesc tableExtDesc = getInstance(getTestConfig()).getTableExt(""DEFAULT.WIDE_TABLE"", ""default"");"
156384,./TargetProjects/kylin/core-metadata/src/test/java/org/apache/kylin/metadata/acl/TableACLTest.java,107,,"            empty.delete(""a"", ""DB.TABLE1"", MetadataConstants.TYPE_USER);"
156385,./TargetProjects/kylin/core-metadata/src/test/java/org/apache/kylin/metadata/acl/TableACLTest.java,116,,"        tableACL.add(""user1"", ""DB.TABLE1"", MetadataConstants.TYPE_USER);"
156386,./TargetProjects/kylin/core-metadata/src/test/java/org/apache/kylin/metadata/acl/TableACLTest.java,134,,"        tableACL.add(""user2"", ""DB.TABLE1"", MetadataConstants.TYPE_USER);"
156387,./TargetProjects/kylin/core-metadata/src/test/java/org/apache/kylin/metadata/badquery/BadQueryHistoryManagerTest.java,49,,"                .getBadQueriesForProject(""default"");"
156388,./TargetProjects/kylin/core-metadata/src/test/java/org/apache/kylin/metadata/badquery/BadQueryHistoryManagerTest.java,69,,"        BadQueryEntry entry = new BadQueryEntry(""sql"", ""adj"", 1459362239992L, 100, ""server"", ""t-0"", ""user"","
156389,./TargetProjects/kylin/core-metadata/src/test/java/org/apache/kylin/metadata/badquery/BadQueryHistoryManagerTest.java,69,,"        BadQueryEntry entry = new BadQueryEntry(""sql"", ""adj"", 1459362239992L, 100, ""server"", ""t-0"", ""user"","
156390,./TargetProjects/kylin/core-metadata/src/test/java/org/apache/kylin/metadata/badquery/BadQueryHistoryManagerTest.java,69,,"        BadQueryEntry entry = new BadQueryEntry(""sql"", ""adj"", 1459362239992L, 100, ""server"", ""t-0"", ""user"","
156391,./TargetProjects/kylin/core-metadata/src/test/java/org/apache/kylin/metadata/badquery/BadQueryHistoryManagerTest.java,69,,"        BadQueryEntry entry = new BadQueryEntry(""sql"", ""adj"", 1459362239992L, 100, ""server"", ""t-0"", ""user"","
156392,./TargetProjects/kylin/core-metadata/src/test/java/org/apache/kylin/metadata/badquery/BadQueryHistoryManagerTest.java,69,,"        BadQueryEntry entry = new BadQueryEntry(""sql"", ""adj"", 1459362239992L, 100, ""server"", ""t-0"", ""user"","
156393,./TargetProjects/kylin/core-metadata/src/test/java/org/apache/kylin/metadata/badquery/BadQueryHistoryManagerTest.java,70,,"                RandomUtil.randomUUID().toString(), ""cube"");"
156394,./TargetProjects/kylin/core-metadata/src/test/java/org/apache/kylin/metadata/cachesync/BroadcasterTest.java,58,,"        }, ""test"");"
156395,./TargetProjects/kylin/core-metadata/src/test/java/org/apache/kylin/metadata/expression/TupleExpressionTest.java,47,,"        assertEquals(TupleExpression.referDataType(null, DataType.getType(""int"")), DataType.getType(""bigint""));"
156396,./TargetProjects/kylin/core-metadata/src/test/java/org/apache/kylin/metadata/expression/TupleExpressionTest.java,47,,"        assertEquals(TupleExpression.referDataType(null, DataType.getType(""int"")), DataType.getType(""bigint""));"
156397,./TargetProjects/kylin/core-metadata/src/test/java/org/apache/kylin/metadata/expression/TupleExpressionTest.java,53,,"        assertEquals(TupleExpression.referDataType(DataType.getType(""decimal""), DataType.getType(""bigint"")),"
156398,./TargetProjects/kylin/core-metadata/src/test/java/org/apache/kylin/metadata/filter/TupleFilterTest.java,87,,"            TupleFilter f = compare(colA, FilterOperatorEnum.EQ, ""1234"");"
156399,./TargetProjects/kylin/core-metadata/src/test/java/org/apache/kylin/metadata/model/DefaultPartitionConditionBuilderTest.java,51,,"        TblColRef col = TblColRef.mockup(TableDesc.mockup(""DEFAULT.TABLE_NAME""), 1, ""DATE_COLUMN"", ""string"");"
156400,./TargetProjects/kylin/core-metadata/src/test/java/org/apache/kylin/metadata/model/DefaultPartitionConditionBuilderTest.java,51,,"        TblColRef col = TblColRef.mockup(TableDesc.mockup(""DEFAULT.TABLE_NAME""), 1, ""DATE_COLUMN"", ""string"");"
156401,./TargetProjects/kylin/core-metadata/src/test/java/org/apache/kylin/metadata/model/FunctionDescTest.java,38,,"        TblColRef mockColOfDoubleType = TblColRef.mockup(TableDesc.mockup(""mock_table""), 0, ""price"", ""double"", """");"
156402,./TargetProjects/kylin/core-metadata/src/test/java/org/apache/kylin/metadata/model/FunctionDescTest.java,42,,"        FunctionDesc function = FunctionDesc.newInstance(""SUM"", ParameterDesc.newInstance(""1""), ""bigint"");"
156403,./TargetProjects/kylin/core-metrics/src/test/java/org/apache/kylin/metrics/property/MetricsPropertyEnumTest.java,34,,"        assertEquals(JobPropertyEnum.PROJECT, JobPropertyEnum.getByName(""PROJECT""));"
156404,./TargetProjects/kylin/core-storage/src/test/java/org/apache/kylin/storage/cache/EhcacheTest.java,39,,"        System.out.println(""runtime used memory: "" + (Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory()) / 1024 / 1024 + ""M"");"
156405,./TargetProjects/kylin/core-storage/src/test/java/org/apache/kylin/storage/gtrecord/DictGridTableTest.java,102,,"        timeComp0 = compare(info.colRef(0), FilterOperatorEnum.LT, enc(info, 0, ""2015-01-14""));"
156406,./TargetProjects/kylin/core-storage/src/test/java/org/apache/kylin/storage/gtrecord/DictGridTableTest.java,105,,"        timeComp3 = compare(info.colRef(0), FilterOperatorEnum.LT, enc(info, 0, ""2015-01-15""));"
156407,./TargetProjects/kylin/core-storage/src/test/java/org/apache/kylin/storage/gtrecord/DictGridTableTest.java,382,,"        TableDesc extTable = TableDesc.mockup(""ext"");"
156408,./TargetProjects/kylin/core-storage/src/test/java/org/apache/kylin/storage/gtrecord/DictGridTableTest.java,383,,"        TblColRef extColA = TblColRef.mockup(extTable, 1, ""A"", ""timestamp"");"
156409,./TargetProjects/kylin/core-storage/src/test/java/org/apache/kylin/storage/gtrecord/DictGridTableTest.java,384,,"        TblColRef extColB = TblColRef.mockup(extTable, 2, ""B"", ""integer"");"
156410,./TargetProjects/kylin/core-storage/src/test/java/org/apache/kylin/storage/gtrecord/DictGridTableTest.java,618,,"        builder.write(r.setValues(""2015-01-14"", ""30"", ""Yang"", new Long(10), new BigDecimal(""10.5"")));"
156411,./TargetProjects/kylin/core-storage/src/test/java/org/apache/kylin/storage/gtrecord/DictGridTableTest.java,623,,"        builder.write(r.setValues(""2015-01-16"", ""20"", ""Mahone"", new Long(10), new BigDecimal(""10.5"")));"
156412,./TargetProjects/kylin/cube-migration/src/main/java/org/apache/kylin/rest/service/MigrationService.java,72,,"        root.put(""projectname"", ctx.getTgtProjectName());"
156413,./TargetProjects/kylin/cube-migration/src/main/java/org/apache/kylin/rest/service/MigrationService.java,73,,"        root.put(""cubename"", ctx.getCubeInstance().getName());"
156414,./TargetProjects/kylin/cube-migration/src/main/java/org/apache/kylin/rest/service/MigrationService.java,74,,"        root.put(""status"", ""NEED APPROVE"");"
156415,./TargetProjects/kylin/cube-migration/src/main/java/org/apache/kylin/rest/service/MigrationService.java,75,,"        root.put(""envname"", envName);"
156416,./TargetProjects/kylin/datasource-sdk/src/main/java/org/apache/kylin/sdk/datasource/adaptor/PrestoAdaptor.java,71,,"            result = ""varchar"";"
156417,./TargetProjects/kylin/datasource-sdk/src/main/java/org/apache/kylin/sdk/datasource/framework/conv/DefaultConfigurer.java,62,,"        return !""true"".equalsIgnoreCase(dsDef.getPropertyValue(""sql.default-converted-enabled"", ""true""));"
156418,./TargetProjects/kylin/datasource-sdk/src/test/java/org/apache/kylin/sdk/datasource/framework/conv/PostgresqlSqlConverterTest.java,49,,"                ""FROM \""TEST_SUITE\"""");"
156419,./TargetProjects/kylin/datasource-sdk/src/test/java/org/apache/kylin/sdk/datasource/framework/conv/PostgresqlSqlConverterTest.java,68,,"                ""FROM \""default\"".\""FACT\"""");"
156420,./TargetProjects/kylin/datasource-sdk/src/test/java/org/apache/kylin/sdk/datasource/framework/conv/PrestoSqlConverterTest.java,33,,"        String targetSQL = sqlConverter.convertSql(originSQL, ""default"", ""presto"");"
156421,./TargetProjects/kylin/datasource-sdk/src/test/java/org/apache/kylin/sdk/datasource/framework/conv/PrestoSqlConverterTest.java,33,,"        String targetSQL = sqlConverter.convertSql(originSQL, ""default"", ""presto"");"
156422,./TargetProjects/kylin/datasource-sdk/src/test/java/org/apache/kylin/sdk/datasource/framework/conv/PrestoSqlConverterTest.java,36,,"                        + ""FROM \""TEST_SUITE\"""");"
156423,./TargetProjects/kylin/datasource-sdk/src/test/java/org/apache/kylin/sdk/datasource/framework/conv/PrestoSqlConverterTest.java,58,,"        typeTestSqls.add(""SELECT CAST(\""PRICE\"" AS DOUBLE)\n"" + ""FROM \""DEFAULT\"".\""FACT\"""");"
156424,./TargetProjects/kylin/datasource-sdk/src/test/java/org/apache/kylin/sdk/datasource/framework/conv/SqlConverterTest.java,92,,"                return ""AUTO"";"
156425,./TargetProjects/kylin/datasource-sdk/src/test/java/org/apache/kylin/sdk/datasource/framework/conv/SqlConverterTest.java,122,,"        Assert.assertEquals(""SELECT *\nFROM \""DEFAULT\"".\""FACT\"""","
156426,./TargetProjects/kylin/engine-flink/src/main/java/org/apache/kylin/engine/flink/FlinkExecutable.java,322,,"                if (status.equals(""FAILED"") || status.equals(""KILLED"")) {"
156427,./TargetProjects/kylin/engine-mr/src/main/java/org/apache/kylin/engine/mr/JobBuilderSupport.java,102,,"        appendExecCmdParameters(cmd, BatchConstants.ARG_JOB_NAME, ""Kylin_Fact_Distinct_Columns_"" + seg.getRealization().getName() + ""_Step"");"
156428,./TargetProjects/kylin/engine-mr/src/main/java/org/apache/kylin/engine/mr/common/AbstractHadoopJob.java,659,,"            throw new JobException(""Job is null"");"
156429,./TargetProjects/kylin/engine-mr/src/test/java/org/apache/kylin/engine/mr/steps/CubeReducerTest.java,78,,"        reduceDriver.getConfiguration().set(BatchConstants.CFG_CUBE_NAME, ""test_kylin_cube_with_slr_ready"");"
156430,./TargetProjects/kylin/engine-mr/src/test/java/org/apache/kylin/engine/mr/steps/CubeReducerTest.java,83,,"        Text key1 = new Text(""72010ustech"");"
156431,./TargetProjects/kylin/engine-mr/src/test/java/org/apache/kylin/engine/mr/steps/CubeReducerTest.java,85,,"        values1.add(newValueText(codec, ""15.09"", ""15.09"", ""15.09"", 1, 100));"
156432,./TargetProjects/kylin/engine-mr/src/test/java/org/apache/kylin/engine/mr/steps/CubeReducerTest.java,86,,"        values1.add(newValueText(codec, ""20.34"", ""20.34"", ""20.34"", 1, 200));"
156433,./TargetProjects/kylin/engine-mr/src/test/java/org/apache/kylin/engine/mr/steps/CubeReducerTest.java,89,,"        Text key2 = new Text(""1tech"");"
156434,./TargetProjects/kylin/engine-mr/src/test/java/org/apache/kylin/engine/mr/steps/CubeReducerTest.java,96,,"        values3.add(newValueText(codec, ""146.52"", ""146.52"", ""146.52"", 0, 0));"
156435,./TargetProjects/kylin/engine-mr/src/test/java/org/apache/kylin/engine/mr/steps/DictColDeduperTest.java,41,,"        Assert.assertTrue(dd.add(0, ""abc""));"
156436,./TargetProjects/kylin/engine-mr/src/test/java/org/apache/kylin/engine/mr/steps/SelfDefineSortableKeyTest.java,163,,"        System.out.println(""sort time : "" + (System.currentTimeMillis() - start));"
156437,./TargetProjects/kylin/engine-spark/src/main/java/org/apache/kylin/engine/spark/SparkExecutable.java,152,,"                if (status == null || status.equals(""FAILED"") || status.equals(""KILLED"")) {"
156438,./TargetProjects/kylin/jdbc/src/main/java/org/apache/kylin/jdbc/KylinMeta.java,191,,"    @SuppressWarnings({""rawtypes"", ""unchecked""})"
156439,./TargetProjects/kylin/jdbc/src/test/java/org/apache/kylin/jdbc/DriverTest.java,53,,"        Connection conn = driver.connect(""jdbc:kylin://test_url/test_db"", null);"
156440,./TargetProjects/kylin/jdbc/src/test/java/org/apache/kylin/jdbc/DriverTest.java,70,,"        assertEquals(""varchar"", metadata.getColumnTypeName(1));"
156441,./TargetProjects/kylin/jdbc/src/test/java/org/apache/kylin/jdbc/DriverTest.java,74,,"            assertEquals(""foo"", resultSet.getString(1));"
156442,./TargetProjects/kylin/jdbc/src/test/java/org/apache/kylin/jdbc/DriverTest.java,75,,"            assertEquals(""bar"", resultSet.getString(2));"
156443,./TargetProjects/kylin/jdbc/src/test/java/org/apache/kylin/jdbc/DriverTest.java,76,,"            assertEquals(""tool"", resultSet.getString(3));"
156444,./TargetProjects/kylin/jdbc/src/test/java/org/apache/kylin/jdbc/DummyClient.java,55,,"        KMetaTable table = new KMetaTable(""dummy"", ""dummy"", ""dummy"", ""dummy"", columns);"
156445,./TargetProjects/kylin/jdbc/src/test/java/org/apache/kylin/jdbc/KylinConnectionTest.java,88,,"                assertEquals(""VAL"", metaData.getColumnName(1));"
156446,./TargetProjects/kylin/kylin-it/src/test/java/org/apache/kylin/cube/inmemcubing/ITDoggedCubeBuilderTest.java,147,,"        BufferedReader r1 = new BufferedReader(new InputStreamReader(new FileInputStream(file), ""UTF-8""));"
156447,./TargetProjects/kylin/kylin-it/src/test/java/org/apache/kylin/provision/BuildCubeWithEngine.java,307,,"    @SuppressWarnings(""unused"")"
156448,./TargetProjects/kylin/kylin-it/src/test/java/org/apache/kylin/provision/BuildCubeWithEngine.java,410,,"            DefaultChainedExecutable optimizeJob = EngineFactory.createBatchOptimizeJob(optimizeSegment, ""TEST"");"
156449,./TargetProjects/kylin/kylin-it/src/test/java/org/apache/kylin/query/ITFailfastQueryTest.java,78,,"            String queryFileName = getQueryFolderPrefix() + ""src/test/resources/query/sql/query01.sql"";"
156450,./TargetProjects/kylin/kylin-it/src/test/java/org/apache/kylin/query/ITKylinQueryTest.java,69,,"        joinType = ""left"";"
156451,./TargetProjects/kylin/kylin-it/src/test/java/org/apache/kylin/query/ITKylinQueryTest.java,208,,"            toggles.put(BackdoorToggles.DEBUG_TOGGLE_PREPARE_ONLY, ""true"");"
156452,./TargetProjects/kylin/kylin-it/src/test/java/org/apache/kylin/query/ITKylinQueryTest.java,447,,"            config.setProperty(""kylin.query.enable-dynamic-column"", ""false"");"
156453,./TargetProjects/kylin/kylin-it/src/test/java/org/apache/kylin/query/KylinTestBase.java,195,,"        int prefixIndex = sqlFileName.lastIndexOf("".sql"");"
156454,./TargetProjects/kylin/kylin-it/src/test/java/org/apache/kylin/query/KylinTestBase.java,378,,"            logger.info(""Query Result from H2 - "" + queryName);"
156455,./TargetProjects/kylin/kylin-it/src/test/java/org/apache/kylin/query/KylinTestBase.java,397,,"            logger.info(""Query Result from Kylin - "" + queryName + ""  ("" + queryFolder + "")"");"
156456,./TargetProjects/kylin/kylin-it/src/test/java/org/apache/kylin/query/KylinTestBase.java,397,,"            logger.info(""Query Result from Kylin - "" + queryName + ""  ("" + queryFolder + "")"");"
156457,./TargetProjects/kylin/kylin-it/src/test/java/org/apache/kylin/query/KylinTestBase.java,452,,"        logger.info(""---------- test folder: "" + queryFolder);"
156458,./TargetProjects/kylin/kylin-it/src/test/java/org/apache/kylin/storage/hbase/ITAclTableMigrationToolTest.java,95,,"        String oldUrl = ResourceStoreTest.replaceMetadataUrl(kylinConfig, STORE_WITHOUT_OLD_TABLE + ""@hbase"");"
156459,./TargetProjects/kylin/query/src/main/java/org/apache/kylin/query/util/DefaultQueryTransformer.java,34,,"            + ""COUNT"" + S0 + ""[(]"" + S0 + ""1"" + S0 + ""[)]"" + S0 + "">"" + S0 + ""0"" + S0 + ""[)]?"","
156460,./TargetProjects/kylin/query/src/main/java/org/apache/kylin/query/util/DefaultQueryTransformer.java,34,,"            + ""COUNT"" + S0 + ""[(]"" + S0 + ""1"" + S0 + ""[)]"" + S0 + "">"" + S0 + ""0"" + S0 + ""[)]?"","
156461,./TargetProjects/kylin/query/src/main/java/org/apache/kylin/query/util/DefaultQueryTransformer.java,48,,"    private static final Pattern PIN_SUM_OF_CAST = Pattern.compile(S0 + ""SUM"" + S0 + ""\\("" + S0 + ""CAST"" + S0 + ""\\("""
156462,./TargetProjects/kylin/query/src/main/java/org/apache/kylin/query/util/DefaultQueryTransformer.java,49,,"            + S0 + ""([^\\s,]+)"" + S0 + ""AS"" + SM + ""DOUBLE"" + S0 + ""\\)"" + S0 + ""\\)"", Pattern.CASE_INSENSITIVE);"
156463,./TargetProjects/kylin/query/src/test/java/org/apache/kylin/query/util/DefaultQueryTransformerTest.java,39,,"        assertTrue(""select sum(\""LSTG_SITE_ID\"") from KYLIN_SALES group by LSTG_SITE_ID"".equalsIgnoreCase(correctSql));"
156464,./TargetProjects/kylin/query/src/test/java/org/apache/kylin/query/util/DefaultQueryTransformerTest.java,75,,"        assertTrue(""select sum(LSTG_SITE_ID) from KYLIN_SALES group by LSTG_SITE_ID"".equalsIgnoreCase(correctSql));"
156465,./TargetProjects/kylin/query/src/test/java/org/apache/kylin/query/util/KeywordDefaultDirtyHackTest.java,46,,"            String s = kwDefaultHack.transform(sql, null, ""DEFAULT"");"
156466,./TargetProjects/kylin/query/src/test/java/org/apache/kylin/query/util/KeywordDefaultDirtyHackTest.java,47,,"            Assert.assertEquals(""select count(*) from \""DEFAULT\"".test_kylin_fact"", s);"
156467,./TargetProjects/kylin/query/src/test/java/org/apache/kylin/query/util/PushDownUtilTest.java,34,,"        String sql3 = ""SELECT t1.week_beg_dt, t1.sum_price, t2.cnt\n"" + ""FROM (\n"""
156468,./TargetProjects/kylin/query/src/test/java/org/apache/kylin/query/util/PushDownUtilTest.java,36,,"                + ""  inner JOIN test_cal_dt as test_cal_dt\n"" + ""  ON test_kylin_fact.cal_dt = test_cal_dt.cal_dt\n"""
156469,./TargetProjects/kylin/query/src/test/java/org/apache/kylin/query/util/PushDownUtilTest.java,38,,"                + ""  ON test_kylin_fact.leaf_categ_id = test_category_groupings.leaf_categ_id AND test_kylin_fact.lstg_site_id = test_category_groupings.site_id\n"""
156470,./TargetProjects/kylin/query/src/test/java/org/apache/kylin/query/util/PushDownUtilTest.java,39,,"                + ""  inner JOIN test_sites as test_sites\n"" + ""  ON test_kylin_fact.lstg_site_id = test_sites.site_id\n"""
156471,./TargetProjects/kylin/query/src/test/java/org/apache/kylin/query/util/PushDownUtilTest.java,40,,"                + ""  where price > 100\n"" + ""  group by test_cal_dt.week_beg_dt\n"" + ""  having sum(price) > 1000\n"""
156472,./TargetProjects/kylin/query/src/test/java/org/apache/kylin/query/util/PushDownUtilTest.java,72,,"        Assert.assertEquals(exceptSQL1, PushDownUtil.schemaCompletion(sql1, ""EDW""));"
156473,./TargetProjects/kylin/query/src/test/java/org/apache/kylin/query/util/QueryUtilTest.java,45,,"            String sql = ""select ( date '2001-09-28' + interval floor(1.2) day) from test_kylin_fact"";"
156474,./TargetProjects/kylin/query/src/test/java/org/apache/kylin/query/util/QueryUtilTest.java,81,,"            String s = QueryUtil.massageSql(sql, ""default"", 0, 0, ""DEFAULT"");"
156475,./TargetProjects/kylin/query/src/test/java/org/apache/kylin/query/util/QueryUtilTest.java,81,,"            String s = QueryUtil.massageSql(sql, ""default"", 0, 0, ""DEFAULT"");"
156476,./TargetProjects/kylin/query/src/test/java/org/apache/kylin/query/util/QueryUtilTest.java,207,,"            String sqlWithComment = ""-- comment \n"" + originSql;"
156477,./TargetProjects/kylin/query/src/test/java/org/apache/kylin/query/util/QueryUtilTest.java,218,,"            String sqlWithComment = ""-- \n -- comment \n"" + originSql;"
156478,./TargetProjects/kylin/query/src/test/java/org/apache/kylin/query/util/QueryUtilTest.java,358,,"            Assert.assertEquals(""select ' \t\n,\r/-'"", QueryUtil.removeCommentInSql(""select ' \t\n,\r/-'""));"
156479,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/controller/AccessController.java,95,,"    @RequestMapping(value = ""/user/permission/{project}"", method = {RequestMethod.GET}, produces = {""application/json""})"
156480,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/controller/AccessController.java,108,,"    @RequestMapping(value = ""/{type}/{uuid}"", method = { RequestMethod.GET }, produces = { ""application/json"" })"
156481,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/controller/AdminController.java,66,,"    @RequestMapping(value = ""/env"", method = { RequestMethod.GET }, produces = { ""application/json"" })"
156482,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/controller/AdminController.java,101,,"        configRes.put(""config"", config);"
156483,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/controller/CacheController.java,57,,"    @RequestMapping(value = ""/announce/{entity}/{cacheKey}/{event}"", method = { RequestMethod.PUT }, produces = { ""application/json"" })"
156484,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/controller/CubeController.java,141,,"    @RequestMapping(value = ""{cubeName}/validate"", method = RequestMethod.GET, produces = { ""application/json"" })"
156485,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/controller/CubeController.java,305,,"            throw new InternalErrorException(message + "" Caused by: "" + e.getMessage(), e);"
156486,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/controller/DashboardController.java,58,,"    public MetricsResponse getCubeMetrics(@RequestParam(value = ""projectName"", required = false) String projectName,"
156487,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/controller/DashboardController.java,59,,"            @RequestParam(value = ""cubeName"", required = false) String cubeName) {"
156488,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/controller/ExternalFilterController.java,60,,"    @RequestMapping(value = ""/saveExtFilter"", method = { RequestMethod.POST }, produces = { ""application/json"" })"
156489,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/controller/HybridController.java,46,,"    @RequestMapping(value = """", method = RequestMethod.POST, produces = { ""application/json"" })"
156490,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/controller/JobController.java,60,,"    @RequestMapping(value = """", method = { RequestMethod.GET }, produces = { ""application/json"" })"
156491,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/controller/JobController.java,189,,"                throw new BadRequestException(""Cannot find job: "" + jobId);"
156492,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/controller/KylinUserGroupController.java,57,,"    @RequestMapping(value = ""/groups"", method = { RequestMethod.GET }, produces = { ""application/json"" })"
156493,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/controller/ModelController.java,83,,"    @RequestMapping(value = ""/validate/{modelName}"", method = RequestMethod.GET, produces = { ""application/json"" })"
156494,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/controller/ModelController.java,98,,"            logger.error(""Failed to deal with the request:"" + e.getLocalizedMessage(), e);"
156495,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/controller/ProjectController.java,89,,"    @RequestMapping(value = """", method = { RequestMethod.GET }, produces = { ""application/json"" })"
156496,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/controller/QueryController.java,90,,"    @RequestMapping(value = ""/query"", method = RequestMethod.POST, produces = { ""application/json"" })"
156497,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/controller/StreamingController.java,78,,"    @RequestMapping(value = ""/getConfig"", method = { RequestMethod.GET }, produces = { ""application/json"" })"
156498,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/controller/StreamingController.java,88,,"            logger.error(""Failed to deal with the request:"" + e.getLocalizedMessage(), e);"
156499,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/controller/StreamingController.java,89,,"            throw new InternalErrorException(""Failed to deal with the request: "" + e.getLocalizedMessage(), e);"
156500,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/controller/StreamingCoordinatorController.java,108,,"            ""application/json"" })"
156501,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/controller/StreamingV2Controller.java,124,,"            logger.error(""Failed to deal with the request:"" + e.getLocalizedMessage(), e);"
156502,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/controller/TableACLController.java,55,,"    @RequestMapping(value = ""/table/{project}/{type}/{table:.+}"", method = {RequestMethod.GET}, produces = {""application/json""})"
156503,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/controller/TableController.java,79,,"    @RequestMapping(value = """", method = { RequestMethod.GET }, produces = { ""application/json"" })"
156504,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/controller/UserController.java,101,,"    @RequestMapping(value = ""/authentication"", method = RequestMethod.POST, produces = { ""application/json"" })"
156505,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/controller/UserController.java,142,,"    @RequestMapping(value = ""/{userName:.+}"", method = { RequestMethod.POST }, produces = { ""application/json"" })"
156506,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/controller/UserController.java,146,,"    public ManagedUser create(@PathVariable(""userName"") String userName, @RequestBody ManagedUser user) {"
156507,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/metrics/QueryMetrics.java,72,,"            queryLatencyTimeMillisQuantiles[i] = registry.newQuantiles(""QueryLatency"" + interval + ""s"", ""Query queue time in milli second"", ""ops"", """", interval);"
156508,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/security/MockHTable.java,131,,"        throw new RuntimeException(this.getClass() + "" does NOT implement this method."");"
156509,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/service/AccessService.java,102,,"    @PreAuthorize(Constant.ACCESS_HAS_ROLE_ADMIN + "" or hasPermission(#ae, 'ADMINISTRATION')"")"
156510,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/service/AclService.java,197,,"                throw new AlreadyExistsException(""ACL of "" + objectIdentity + "" exists!"");"
156511,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/service/CubeService.java,217,,"            + "" or hasPermission(#project, 'ADMINISTRATION') or hasPermission(#project, 'MANAGEMENT')"")"
156512,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/service/CubeService.java,525,,"        metrics.increase(""totalCubes"", (float) 0);"
156513,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/service/DashboardService.java,209,,"            filterMap.put(project + "" = ?"", projectName.toUpperCase(Locale.ROOT));"
156514,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/service/HybridService.java,50,,"        args.add(""-name"");"
156515,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/service/HybridService.java,58,,"        args.add(""-action"");"
156516,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/service/QueryService.java,791,,"                if (!""metadata"".equalsIgnoreCase(tblMeta.getTABLE_SCHEM())) {"
156517,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/service/StreamingV2Service.java,196,,"            + "" or hasPermission(#cube, 'ADMINISTRATION') or hasPermission(#cube, 'MANAGEMENT')"")"
156518,./TargetProjects/kylin/server-base/src/main/java/org/apache/kylin/rest/util/AclUtil.java,38,,"            "" or hasPermission(#project, 'ADMINISTRATION')"" +"
156519,./TargetProjects/kylin/server/src/test/java/org/apache/kylin/rest/controller/AccessControllerTest.java,64,,"    private String ADMIN = ""ADMIN"";"
156520,./TargetProjects/kylin/server/src/test/java/org/apache/kylin/rest/controller/AccessControllerTest.java,105,,"        ManagedUser user = new ManagedUser(""u"", ""kylin"", false, ""all_users"", ""g1"", ""g2"", ""g3"", ""g4"");"
156521,./TargetProjects/kylin/server/src/test/java/org/apache/kylin/rest/controller/AccessControllerTest.java,105,,"        ManagedUser user = new ManagedUser(""u"", ""kylin"", false, ""all_users"", ""g1"", ""g2"", ""g3"", ""g4"");"
156522,./TargetProjects/kylin/server/src/test/java/org/apache/kylin/rest/controller/AccessControllerTest.java,127,,"                ""a24ca905-1fc6-4f67-985c-38fa5aeafd92"");"
156523,./TargetProjects/kylin/server/src/test/java/org/apache/kylin/rest/controller/AccessControllerTest.java,275,,"        user = new ManagedUser(""user_1"", ""kylin"", false, ""all_users"");"
156524,./TargetProjects/kylin/server/src/test/java/org/apache/kylin/rest/controller/CubeControllerTest.java,90,,"        CubeDesc[] cubes = cubeDescController.getCube(""test_kylin_cube_with_slr_ready"");"
156525,./TargetProjects/kylin/server/src/test/java/org/apache/kylin/rest/controller/CubeControllerTest.java,151,,"        String cubeName = ""test_kylin_cube_with_slr_ready_3_segments"";"
156526,./TargetProjects/kylin/server/src/test/java/org/apache/kylin/rest/controller/ProjectControllerTest.java,68,,"            projectController.deleteProject(""new_project"");"
156527,./TargetProjects/kylin/server/src/test/java/org/apache/kylin/rest/controller/ProjectControllerTest.java,78,,"            projectController.deleteProject(""new_project_3"");"
156528,./TargetProjects/kylin/server/src/test/java/org/apache/kylin/rest/metrics/QueryMetricsTest.java,61,,"        sqlResponse.setCube(""test_cube"");"
156529,./TargetProjects/kylin/server/src/test/java/org/apache/kylin/rest/metrics/QueryMetricsTest.java,65,,"        list1.add(""111"");"
156530,./TargetProjects/kylin/server/src/test/java/org/apache/kylin/rest/metrics/QueryMetricsTest.java,66,,"        list1.add(""112"");"
156531,./TargetProjects/kylin/server/src/test/java/org/apache/kylin/rest/service/AccessServiceTest.java,71,,"        PrincipalSid sid = new PrincipalSid(""ANALYST"");"
156532,./TargetProjects/kylin/server/src/test/java/org/apache/kylin/rest/service/AclServiceTest.java,66,,"            Assert.assertEquals(new PrincipalSid(""ADMIN""), rec.getOwner());"
156533,./TargetProjects/kylin/server/src/test/java/org/apache/kylin/rest/service/CacheServiceTest.java,313,,"        assertTrue(tableMgr.getTableDesc(tableDesc.getIdentity(), ""default"") == null);"
156534,./TargetProjects/kylin/server/src/test/java/org/apache/kylin/rest/service/ModelServiceTest.java,54,,"        List<DataModelDesc> dataModelDescs = modelService.listAllModels(""ci_inner_join_model"", ""default"", true);"
156535,./TargetProjects/kylin/server/src/test/java/org/apache/kylin/rest/service/ModelServiceTest.java,92,,"        List<DataModelDesc> dataModelDescs = modelService.listAllModels(""ci_left_join_model"", ""default"", true);"
156536,./TargetProjects/kylin/server/src/test/java/org/apache/kylin/rest/service/ServiceTestBase.java,69,,"        Authentication authentication = new TestingAuthenticationToken(""ADMIN"", ""ADMIN"", Constant.ROLE_ADMIN);"
156537,./TargetProjects/kylin/server/src/test/java/org/apache/kylin/rest/service/TableACLServiceTest.java,41,,"        tableACLService.addToTableACL(PROJECT, ""ADMIN"", ""DB.TABLE"", MetadataConstants.TYPE_USER);"
156538,./TargetProjects/kylin/server/src/test/java/org/apache/kylin/rest/service/TableACLServiceTest.java,41,,"        tableACLService.addToTableACL(PROJECT, ""ADMIN"", ""DB.TABLE"", MetadataConstants.TYPE_USER);"
156539,./TargetProjects/kylin/server/src/test/java/org/apache/kylin/rest/service/TableACLServiceTest.java,49,,"        tableACLService.addToTableACL(PROJECT, ""ADMIN"", ""DB.TABLE1"", MetadataConstants.TYPE_USER);"
156540,./TargetProjects/kylin/server/src/test/java/org/apache/kylin/rest/service/TableACLServiceTest.java,51,,"        tableACLService.addToTableACL(PROJECT, ""MODELER"", ""DB.TABLE4"", MetadataConstants.TYPE_USER);"
156541,./TargetProjects/kylin/server/src/test/java/org/apache/kylin/rest/service/TableACLServiceTest.java,54,,"        tableACLService.addToTableACL(PROJECT, ""ANALYST"", ""DB.TABLE"", MetadataConstants.TYPE_USER);"
156542,./TargetProjects/kylin/server/src/test/java/org/apache/kylin/rest/service/TableACLServiceTest.java,69,,"        allUsers.add(""user7"");"
156543,./TargetProjects/kylin/server/src/test/java/org/apache/kylin/rest/service/TableACLServiceTest.java,81,,"        tableACLService.addToTableACL(PROJECT, ""user7"", ""DB.T7"", MetadataConstants.TYPE_USER);"
156544,./TargetProjects/kylin/server/src/test/java/org/apache/kylin/rest/service/UserServiceTest.java,44,,"        userService.deleteUser(""MODELER"");"
156545,./TargetProjects/kylin/server/src/test/java/org/apache/kylin/rest/util/AclUtilTest.java,50,,"            Assert.fail(""expecting some AlreadyExistsException here"");"
156546,./TargetProjects/kylin/server/src/test/java/org/apache/kylin/rest/util/AclUtilTest.java,52,,"            Assert.assertEquals(""Access is denied"", e.getMessage());"
156547,./TargetProjects/kylin/server/src/test/java/org/apache/kylin/rest/util/AclUtilTest.java,68,,"        accessController.grant(""ProjectInstance"", projectInstance.getUuid(), getAccessRequest(ANALYST, READ));"
156548,./TargetProjects/kylin/source-hive/src/main/java/org/apache/kylin/source/hive/HiveInputBase.java,224,,"                            .append("" \n"");"
156549,./TargetProjects/kylin/source-hive/src/main/java/org/apache/kylin/source/hive/HiveInputBase.java,228,,"                            + ""SELECT dict_key, dict_val FROM """
156550,./TargetProjects/kylin/source-hive/src/main/java/org/apache/kylin/source/hive/MRHiveDictUtil.java,112,,"        ddl.append(""DROP TABLE IF EXISTS "" + tableName + "";"").append("" \n"");"
156551,./TargetProjects/kylin/source-jdbc/src/main/java/org/apache/kylin/source/jdbc/JdbcHiveInputBase.java,445,,"        String[] res = value.split(""\\."");"
156552,./TargetProjects/kylin/source-jdbc/src/test/java/org/apache/kylin/source/jdbc/SqlUtilTest.java,34,,"        assertEquals(""varchar"", SqlUtil.jdbcTypeToKylinDataType(Types.NVARCHAR));"
156553,./TargetProjects/kylin/source-jdbc/src/test/java/org/apache/kylin/source/jdbc/extensible/JdbcExplorerTest.java,51,,"        Assert.assertTrue(dbList.contains(""DEFAULT""));"
156554,./TargetProjects/kylin/source-kafka/src/test/java/org/apache/kylin/source/kafka/config/KafkaConsumerPropertiesTest.java,54,,"        assertTrue(kafkaConsumerProperties.extractKafkaConfigToProperties().containsKey(""session.timeout.ms""));"
156555,./TargetProjects/kylin/storage-hbase/src/main/java/org/apache/kylin/storage/hbase/HBaseConnection.java,316,,"                logger.debug(""HTable '"" + table + ""' already exists"");"
156556,./TargetProjects/kylin/storage-hbase/src/main/java/org/apache/kylin/storage/hbase/cube/v2/coprocessor/endpoint/generated/CubeVisitProtos.java,5479,,"              throw new java.lang.AssertionError(""Can't get here."");"
156557,./TargetProjects/kylin/storage-hbase/src/main/java/org/apache/kylin/storage/hbase/cube/v2/coprocessor/endpoint/generated/CubeVisitProtos.java,5489,,"              ""descriptor for wrong service type."");"
156558,./TargetProjects/kylin/storage-hbase/src/main/java/org/apache/kylin/storage/hbase/steps/CubeHTableUtil.java,106,,"                    throw new RuntimeException(""HBase table "" + tableName.toString() + "" exists!"");"
156559,./TargetProjects/kylin/storage-hbase/src/main/java/org/apache/kylin/storage/hbase/steps/HDFSPathGarbageCollectionStep.java,87,,"                    logger.debug(""HDFS path "" + oldPath + "" is dropped."");"
156560,./TargetProjects/kylin/storage-hbase/src/main/java/org/apache/kylin/storage/hbase/steps/HFileOutputFormat3.java,387,,"            tmpFiles = fixWindowsPath(""file://"" + tempFile.getAbsolutePath());"
156561,./TargetProjects/kylin/storage-hbase/src/main/java/org/apache/kylin/storage/hbase/steps/HFileOutputFormat3.java,632,,"                confValMap.put(URLDecoder.decode(familySplit[0], ""UTF-8"").getBytes(StandardCharsets.UTF_8),"
156562,./TargetProjects/kylin/storage-hbase/src/main/java/org/apache/kylin/storage/hbase/util/CubeMigrationCLI.java,354,,"            logger.info(""Item "" + item + "" is copied"");"
156563,./TargetProjects/kylin/storage-hbase/src/main/java/org/apache/kylin/storage/hbase/util/DeployCoprocessorCLI.java,426,,"            if (fileStatus.getPath().toString().endsWith("".jar"")) {"
156564,./TargetProjects/kylin/storage-hbase/src/test/java/org/apache/kylin/storage/hbase/cube/v2/coprocessor/endpoint/CubeVisitServiceTest.java,118,,"    private static final List<String> userList = Lists.newArrayList(""Ken"", ""Lisa"", ""Gang"", ""Kalin"", ""Julian"", ""John"");"
156565,./TargetProjects/kylin/storage-hbase/src/test/java/org/apache/kylin/storage/hbase/cube/v2/coprocessor/endpoint/CubeVisitServiceTest.java,193,,"        PowerMockito.when(env, ""getRegion"").thenReturn(region);"
156566,./TargetProjects/kylin/storage-hbase/src/test/java/org/apache/kylin/storage/hbase/cube/v2/coprocessor/endpoint/CubeVisitServiceTest.java,220,,"                    Assert.fail(""Fail due to "" + e);"
156567,./TargetProjects/kylin/storage-hbase/src/test/java/org/apache/kylin/storage/hbase/cube/v2/coprocessor/endpoint/CubeVisitServiceTest.java,231,,"                DataType.getType(""date""), //"
156568,./TargetProjects/kylin/storage-hbase/src/test/java/org/apache/kylin/storage/hbase/cube/v2/coprocessor/endpoint/CubeVisitServiceTest.java,232,,"                DataType.getType(""string""), //"
156569,./TargetProjects/kylin/storage-hbase/src/test/java/org/apache/kylin/storage/hbase/cube/v2/coprocessor/endpoint/CubeVisitServiceTest.java,233,,"                DataType.getType(""hllc(10)""), //"
156570,./TargetProjects/kylin/storage-hbase/src/test/java/org/apache/kylin/storage/hbase/cube/v2/coprocessor/endpoint/CubeVisitServiceTest.java,291,,"                DataType.getType(""decimal""), //"
156571,./TargetProjects/kylin/storage-hbase/src/test/java/org/apache/kylin/storage/hbase/lookup/HBaseLookupRowEncoderTest.java,55,,"        String[] row = new String[] { ""AD"", ""42.546245"", ""1.601554"", ""Andorra"" };"
156572,./TargetProjects/kylin/storage-hbase/src/test/java/org/apache/kylin/storage/hbase/lookup/HBaseLookupRowEncoderTest.java,55,,"        String[] row = new String[] { ""AD"", ""42.546245"", ""1.601554"", ""Andorra"" };"
156573,./TargetProjects/kylin/storage-stream/src/main/java/org/apache/kylin/storage/stream/rpc/HttpStreamDataSearchClient.java,268,,"                logger.error(""interrupted"", e);"
156574,./TargetProjects/kylin/stream-coordinator/src/test/java/org/apache/kylin/stream/coordinator/assign/CubePartitionRoundRobinAssignerTest.java,72,,"        createCubeInfoFromMeta(""cube1"", 3, cubeInfos);"
156575,./TargetProjects/kylin/stream-coordinator/src/test/java/org/apache/kylin/stream/coordinator/assign/CubePartitionRoundRobinAssignerTest.java,73,,"        createCubeInfoFromMeta(""cube2"", 4, cubeInfos);"
156576,./TargetProjects/kylin/stream-coordinator/src/test/java/org/apache/kylin/stream/coordinator/assign/CubePartitionRoundRobinAssignerTest.java,74,,"        createCubeInfoFromMeta(""cube3"", 2, cubeInfos);"
156577,./TargetProjects/kylin/stream-coordinator/src/test/java/org/apache/kylin/stream/coordinator/assign/CubePartitionRoundRobinAssignerTest.java,76,,"        createCubeInfoFromMeta(""cube5"", 7, cubeInfos);"
156578,./TargetProjects/kylin/stream-coordinator/src/test/java/org/apache/kylin/stream/coordinator/assign/DefaultAssignerTest.java,80,,"        CubeAssignment assignment5 = new CubeAssignment(""cube5"", cube5Assignment);"
156579,./TargetProjects/kylin/stream-core/src/main/java/org/apache/kylin/stream/core/client/HttpReceiverAdminClient.java,61,,"        final String url = ""http://"" + receiver.getHost() + "":"" + receiver.getPort() + ""/kylin/api/admin/assign"";"
156580,./TargetProjects/kylin/stream-core/src/main/java/org/apache/kylin/stream/core/model/stats/ClusterState.java,41,,"    @SuppressWarnings(""unused"")"
156581,./TargetProjects/kylin/stream-core/src/test/java/org/apache/kylin/stream/core/storage/StreamingSegmentManagerTest.java,97,,"        Set<TblColRef> dimensions = testHelper.simulateDimensions(""STREAMING_V2_TABLE.SITE"");"
156582,./TargetProjects/kylin/stream-core/src/test/java/org/apache/kylin/stream/core/storage/StreamingSegmentManagerTest.java,122,,"        dimensions = testHelper.simulateDimensions(""STREAMING_V2_TABLE.MINUTE_START"", ""STREAMING_V2_TABLE.SITE"");"
156583,./TargetProjects/kylin/stream-core/src/test/java/org/apache/kylin/stream/core/storage/StreamingSegmentManagerTest.java,125,,"                FilterOperatorEnum.GTE, ""2018-07-30 20:00:00"");"
156584,./TargetProjects/kylin/stream-core/src/test/java/org/apache/kylin/stream/core/storage/StreamingSegmentManagerTest.java,127,,"                FilterOperatorEnum.LT, ""2018-07-30 20:04:00"");"
156585,./TargetProjects/kylin/stream-core/src/test/java/org/apache/kylin/stream/core/storage/columnar/FragmentFileSearcherTest.java,90,,"        Set<TblColRef> dimensions = testHelper.simulateDimensions(""STREAMING_V2_TABLE.MINUTE_START"", ""STREAMING_V2_TABLE.SITE"");"
156586,./TargetProjects/kylin/stream-core/src/test/java/org/apache/kylin/stream/core/storage/columnar/FragmentFileSearcherTest.java,90,,"        Set<TblColRef> dimensions = testHelper.simulateDimensions(""STREAMING_V2_TABLE.MINUTE_START"", ""STREAMING_V2_TABLE.SITE"");"
156587,./TargetProjects/kylin/stream-core/src/test/java/org/apache/kylin/stream/core/storage/columnar/FragmentFileSearcherTest.java,104,,"        dimensions = testHelper.simulateDimensions(""STREAMING_V2_TABLE.SITE"", ""STREAMING_V2_TABLE.ITM"","
156588,./TargetProjects/kylin/stream-core/src/test/java/org/apache/kylin/stream/core/storage/columnar/FragmentFilesMergerTest.java,117,,"        dims = testHelper.simulateDimensions(""STREAMING_V2_TABLE.SITE"", ""STREAMING_V2_TABLE.MINUTE_START"");"
156589,./TargetProjects/kylin/stream-core/src/test/java/org/apache/kylin/stream/core/storage/columnar/SegmentMemoryStoreTest.java,113,,"        Set<TblColRef> dimensions = testHelper.simulateDimensions(""DAY_START"", ""SITE"");"
156590,./TargetProjects/kylin/stream-core/src/test/java/org/apache/kylin/stream/core/storage/columnar/SegmentMemoryStoreTest.java,113,,"        Set<TblColRef> dimensions = testHelper.simulateDimensions(""DAY_START"", ""SITE"");"
156591,./TargetProjects/kylin/stream-core/src/test/java/org/apache/kylin/stream/core/storage/columnar/SegmentMemoryStoreTest.java,154,,"        dimensions = testHelper.simulateDimensions(""DAY_START"", ""SITE"", ""ITM"");"
156592,./TargetProjects/kylin/stream-core/src/test/java/org/apache/kylin/stream/core/storage/columnar/performance/StreamingCubeDataSearcherPerfTest.java,102,,"        Set<TblColRef> dimensions = testHelper.simulateDimensions(""STREAMING_V2_TABLE.MINUTE_START"");"
156593,./TargetProjects/kylin/stream-receiver/src/main/java/org/apache/kylin/stream/server/rest/controller/AdminController.java,55,,"    @RequestMapping(value = ""/assign"", method = RequestMethod.POST, produces = { ""application/json"" })"
156594,./TargetProjects/kylin/stream-receiver/src/main/java/org/apache/kylin/stream/server/rest/controller/AdminController.java,106,,"    public void segmentBuildComplete(@PathVariable(value = ""cubeName"") String cubeName,"
156595,./TargetProjects/kylin/stream-receiver/src/main/java/org/apache/kylin/stream/server/rest/controller/AdminController.java,107,,"            @PathVariable(value = ""segmentName"") String segmentName) {"
156596,./TargetProjects/kylin/stream-source-kafka/src/test/java/org/apache/kylin/stream/source/kafka/TimedJsonStreamParserTest.java,78,,"        assertEquals(""false"", values.get(2));"
156597,./TargetProjects/kylin/tool/src/main/java/org/apache/kylin/tool/CubeMetaIngester.java,67,,"    @SuppressWarnings(""static-access"")"
156598,./TargetProjects/kylin/tool/src/main/java/org/apache/kylin/tool/CubeMigrationCLI.java,489,,"                    logger.info(""Item "" + item + "" is copied"");"
156599,./TargetProjects/kylin/tool/src/main/java/org/apache/kylin/tool/CubeMigrationCLI.java,489,,"                    logger.info(""Item "" + item + "" is copied"");"
156600,./TargetProjects/kylin/tool/src/main/java/org/apache/kylin/tool/DiagnosisInfoCLI.java,58,,"    @SuppressWarnings(""static-access"")"
156601,./TargetProjects/kylin/tool/src/main/java/org/apache/kylin/tool/DiagnosisInfoCLI.java,59,,"    private static final Option OPTION_PROJECT = OptionBuilder.withArgName(""project"").hasArg().isRequired(false)"
156602,./TargetProjects/kylin/tool/src/main/java/org/apache/kylin/tool/DiagnosisInfoCLI.java,161,,"                    String[] cubeMetaArgs = {""-packagetype"", ""cubemeta"", ""-destDir"","
156603,./TargetProjects/kylin/tool/src/main/java/org/apache/kylin/tool/DiagnosisInfoCLI.java,162,,"                            new File(exportDir, ""metadata"").getAbsolutePath(), ""-project"", projectNames, ""-compress"","
156604,./TargetProjects/kylin/tool/src/main/java/org/apache/kylin/tool/DiagnosisInfoCLI.java,163,,"                            ""false"", ""-includeJobs"", ""false"", ""-submodule"", ""true""};"
156605,./TargetProjects/kylin/tool/src/main/java/org/apache/kylin/tool/DiagnosisInfoCLI.java,163,,"                            ""false"", ""-includeJobs"", ""false"", ""-submodule"", ""true""};"
156606,./TargetProjects/kylin/tool/src/main/java/org/apache/kylin/tool/DiagnosisInfoCLI.java,163,,"                            ""false"", ""-includeJobs"", ""false"", ""-submodule"", ""true""};"
156607,./TargetProjects/kylin/tool/src/main/java/org/apache/kylin/tool/JobDiagnosisInfoCLI.java,52,,"    @SuppressWarnings(""static-access"")"
156608,./TargetProjects/kylin/tool/src/main/java/org/apache/kylin/tool/JobDiagnosisInfoCLI.java,135,,"                String[] cubeMetaArgs = {""-packagetype"", ""cubemeta"", ""-cube"", cubeName, ""-destDir"","
156609,./TargetProjects/kylin/tool/src/main/java/org/apache/kylin/tool/JobDiagnosisInfoCLI.java,136,,"                        new File(metaDir, cubeName).getAbsolutePath(), ""-includeJobs"", ""false"", ""-compress"", ""false"","
156610,./TargetProjects/kylin/tool/src/main/java/org/apache/kylin/tool/JobDiagnosisInfoCLI.java,136,,"                        new File(metaDir, cubeName).getAbsolutePath(), ""-includeJobs"", ""false"", ""-compress"", ""false"","
156611,./TargetProjects/kylin/tool/src/main/java/org/apache/kylin/tool/JobDiagnosisInfoCLI.java,137,,"                        ""-submodule"", ""true""};"
156612,./TargetProjects/kylin/tool/src/main/java/org/apache/kylin/tool/JobDiagnosisInfoCLI.java,137,,"                        ""-submodule"", ""true""};"
156613,./TargetProjects/kylin/tool/src/main/java/org/apache/kylin/tool/extractor/AbstractInfoExtractor.java,47,,"    @SuppressWarnings(""static-access"")"
156614,./TargetProjects/kylin/tool/src/main/java/org/apache/kylin/tool/extractor/ClientEnvExtractor.java,68,,"        addLocalFile(""/proc/cpuinfo"", ""linux"");"
156615,./TargetProjects/kylin/tool/src/main/java/org/apache/kylin/tool/extractor/CubeMetaExtractor.java,83,,"    @SuppressWarnings(""static-access"")"
156616,./TargetProjects/kylin/tool/src/main/java/org/apache/kylin/tool/extractor/MrJobInfoExtractor.java,239,,"                    if (node.get(""elapsedTime"").longValue() >= maxMapElapsedTime) {"
156617,./TargetProjects/kylin/tool/src/main/java/org/apache/kylin/tool/extractor/MrJobInfoExtractor.java,249,,"                    if (node.get(""startTime"").longValue() <= firstStartMapTime) {"
156618,./TargetProjects/kylin/tool/src/main/java/org/apache/kylin/tool/extractor/MrJobInfoExtractor.java,259,,"                    if (node.get(""finishTime"").longValue() <= firstEndMapTime) {"
156619,./TargetProjects/kylin/tool/src/main/java/org/apache/kylin/tool/extractor/YarnLogExtractor.java,85,,"                        jobId = applicationId.replace(""application"", ""job"");"
156620,./TargetProjects/kylin/tool/src/main/java/org/apache/kylin/tool/metrics/systemcube/SCCreator.java,245,,"        saveSystemCubeMetadataToFile(output + D_TABLE + kylinTable.getIdentity() + "".json"", kylinTable,"
156621,./TargetProjects/kylin/tool/src/main/java/org/apache/kylin/tool/migration/CubeMigrationCrossClusterCLI.java,92,,"    @SuppressWarnings(""static-access"")"
156622,./TargetProjects/kylin/tool/src/test/java/org/apache/kylin/tool/CubeMetaIngesterTest.java,60,,"        CubeMetaIngester.main(new String[] { ""-project"", ""default"", ""-srcPath"", srcPath });"
156623,./TargetProjects/kylin/tool/src/test/java/org/apache/kylin/tool/CubeMetaIngesterTest.java,60,,"        CubeMetaIngester.main(new String[] { ""-project"", ""default"", ""-srcPath"", srcPath });"
156624,./TargetProjects/kylin/tool/src/test/java/org/apache/kylin/tool/CubeMetaIngesterTest.java,60,,"        CubeMetaIngester.main(new String[] { ""-project"", ""default"", ""-srcPath"", srcPath });"
156625,./TargetProjects/kylin/tool/src/test/java/org/apache/kylin/tool/HybridCubeCLITest.java,60,,"        Assert.assertNull(hybridManager.getHybridInstance(""ssb_hybrid""));"
156626,./TargetProjects/kylin/tool/src/test/java/org/apache/kylin/tool/HybridCubeCLITest.java,61,,"        HybridCubeCLI.main(new String[] { ""-name"", ""ssb_hybrid"", ""-project"", ""default"", ""-model"", ""ssb"", ""-cubes"", ""ssb_cube1,ssb_cube2"", ""-action"", ""create"" });"
156627,./TargetProjects/kylin/tool/src/test/java/org/apache/kylin/tool/HybridCubeCLITest.java,61,,"        HybridCubeCLI.main(new String[] { ""-name"", ""ssb_hybrid"", ""-project"", ""default"", ""-model"", ""ssb"", ""-cubes"", ""ssb_cube1,ssb_cube2"", ""-action"", ""create"" });"
156628,./TargetProjects/kylin/tool/src/test/java/org/apache/kylin/tool/HybridCubeCLITest.java,61,,"        HybridCubeCLI.main(new String[] { ""-name"", ""ssb_hybrid"", ""-project"", ""default"", ""-model"", ""ssb"", ""-cubes"", ""ssb_cube1,ssb_cube2"", ""-action"", ""create"" });"
156629,./TargetProjects/kylin/tool/src/test/java/org/apache/kylin/tool/HybridCubeCLITest.java,61,,"        HybridCubeCLI.main(new String[] { ""-name"", ""ssb_hybrid"", ""-project"", ""default"", ""-model"", ""ssb"", ""-cubes"", ""ssb_cube1,ssb_cube2"", ""-action"", ""create"" });"
156630,./TargetProjects/kylin/tool/src/test/java/org/apache/kylin/tool/HybridCubeCLITest.java,61,,"        HybridCubeCLI.main(new String[] { ""-name"", ""ssb_hybrid"", ""-project"", ""default"", ""-model"", ""ssb"", ""-cubes"", ""ssb_cube1,ssb_cube2"", ""-action"", ""create"" });"
156631,./TargetProjects/kylin/tool/src/test/java/org/apache/kylin/tool/HybridCubeCLITest.java,61,,"        HybridCubeCLI.main(new String[] { ""-name"", ""ssb_hybrid"", ""-project"", ""default"", ""-model"", ""ssb"", ""-cubes"", ""ssb_cube1,ssb_cube2"", ""-action"", ""create"" });"
156632,./TargetProjects/kylin/tool/src/test/java/org/apache/kylin/tool/HybridCubeCLITest.java,61,,"        HybridCubeCLI.main(new String[] { ""-name"", ""ssb_hybrid"", ""-project"", ""default"", ""-model"", ""ssb"", ""-cubes"", ""ssb_cube1,ssb_cube2"", ""-action"", ""create"" });"
156633,./TargetProjects/kylin/tool/src/test/java/org/apache/kylin/tool/HybridCubeCLITest.java,61,,"        HybridCubeCLI.main(new String[] { ""-name"", ""ssb_hybrid"", ""-project"", ""default"", ""-model"", ""ssb"", ""-cubes"", ""ssb_cube1,ssb_cube2"", ""-action"", ""create"" });"
156634,./TargetProjects/kylin/tool/src/test/java/org/apache/kylin/tool/HybridCubeCLITest.java,61,,"        HybridCubeCLI.main(new String[] { ""-name"", ""ssb_hybrid"", ""-project"", ""default"", ""-model"", ""ssb"", ""-cubes"", ""ssb_cube1,ssb_cube2"", ""-action"", ""create"" });"
156635,./TargetProjects/lens/lens-api/src/main/java/org/apache/lens/api/scheduler/SchedulerJobInstanceState.java,48,,"            ""SchedulerJobInstanceEvent: "" + event.name() + "" is not a valid event for state: "" + this.name());"
156636,./TargetProjects/lens/lens-api/src/main/java/org/apache/lens/api/scheduler/SchedulerJobInstanceState.java,48,,"            ""SchedulerJobInstanceEvent: "" + event.name() + "" is not a valid event for state: "" + this.name());"
156637,./TargetProjects/lens/lens-api/src/main/java/org/apache/lens/api/scheduler/SchedulerJobState.java,42,,"            ""SchedulerJobEvent: "" + event.name() + "" is not a valid event for state: "" + this.name());"
156638,./TargetProjects/lens/lens-api/src/main/java/org/apache/lens/api/scheduler/SchedulerJobState.java,42,,"            ""SchedulerJobEvent: "" + event.name() + "" is not a valid event for state: "" + this.name());"
156639,./TargetProjects/lens/lens-cli/src/main/java/org/apache/lens/cli/commands/LensConnectionCommands.java,116,,"    @CliOption(key = {"""", ""path""}, mandatory = true, help = ""<path-to-jar-on-server-side>"") @NonNull String path) {"
156640,./TargetProjects/lens/lens-cli/src/main/java/org/apache/lens/cli/commands/LensCubeCommands.java,72,,"  public String describeCube(@CliOption(key = {"""", ""name""}, mandatory = true, help = ""<cube_name>"") String name) {"
156641,./TargetProjects/lens/lens-cli/src/main/java/org/apache/lens/cli/commands/LensCubeCommands.java,72,,"  public String describeCube(@CliOption(key = {"""", ""name""}, mandatory = true, help = ""<cube_name>"") String name) {"
156642,./TargetProjects/lens/lens-cli/src/main/java/org/apache/lens/cli/commands/LensDimensionCommands.java,74,,"    @CliOption(key = {"""", ""name""}, mandatory = true, help = ""<dimension_name>"") String name) {"
156643,./TargetProjects/lens/lens-cli/src/main/java/org/apache/lens/cli/commands/LensDimensionCommands.java,74,,"    @CliOption(key = {"""", ""name""}, mandatory = true, help = ""<dimension_name>"") String name) {"
156644,./TargetProjects/lens/lens-cli/src/main/java/org/apache/lens/cli/commands/LensDimensionTableCommands.java,68,,"    @CliOption(key = {"""", ""path""}, mandatory = true, help = ""<path-to-dimtable-spec-file>"") @NonNull final File path) {"
156645,./TargetProjects/lens/lens-cli/src/main/java/org/apache/lens/cli/commands/LensDimensionTableCommands.java,80,,"    @CliOption(key = {"""", ""dimtable_name""}, mandatory = true, help = ""<dimtable_name>"") String name) {"
156646,./TargetProjects/lens/lens-cli/src/main/java/org/apache/lens/cli/commands/LensDimensionTableCommands.java,80,,"    @CliOption(key = {"""", ""dimtable_name""}, mandatory = true, help = ""<dimtable_name>"") String name) {"
156647,./TargetProjects/lens/lens-cli/src/main/java/org/apache/lens/cli/commands/LensDimensionTableCommands.java,155,,"    @CliOption(key = {"""", ""storage_name""}, mandatory = true, help = ""<storage_name>"") String storage) {"
156648,./TargetProjects/lens/lens-cli/src/main/java/org/apache/lens/cli/commands/LensDimensionTableCommands.java,155,,"    @CliOption(key = {"""", ""storage_name""}, mandatory = true, help = ""<storage_name>"") String storage) {"
156649,./TargetProjects/lens/lens-cli/src/main/java/org/apache/lens/cli/commands/LensFactCommands.java,65,,"    @CliOption(key = {"""", ""path""}, mandatory = true, help = ""<path-to-fact-spec-file>"") @NonNull final File path) {"
156650,./TargetProjects/lens/lens-cli/src/main/java/org/apache/lens/cli/commands/LensFactCommands.java,77,,"    @CliOption(key = {"""", ""fact_name""}, mandatory = true, help = ""<fact_name>"") String name) {"
156651,./TargetProjects/lens/lens-cli/src/main/java/org/apache/lens/cli/commands/LensFactCommands.java,77,,"    @CliOption(key = {"""", ""fact_name""}, mandatory = true, help = ""<fact_name>"") String name) {"
156652,./TargetProjects/lens/lens-cli/src/main/java/org/apache/lens/cli/commands/LensFactCommands.java,151,,"    @CliOption(key = {"""", ""storage_name""}, mandatory = true, help = ""<path-to-storage-spec>"") String storage) {"
156653,./TargetProjects/lens/lens-cli/src/main/java/org/apache/lens/cli/commands/LensFactCommands.java,165,,"    @CliOption(key = {"""", ""storage_name""}, mandatory = true, help = ""<storage_name>"") String storageName) {"
156654,./TargetProjects/lens/lens-cli/src/main/java/org/apache/lens/cli/commands/LensQueryCommands.java,78,,"    @CliOption(key = {""async""}, mandatory = false, unspecifiedDefaultValue = ""false"","
156655,./TargetProjects/lens/lens-cli/src/main/java/org/apache/lens/cli/commands/LensQueryCommands.java,78,,"    @CliOption(key = {""async""}, mandatory = false, unspecifiedDefaultValue = ""false"","
156656,./TargetProjects/lens/lens-cli/src/main/java/org/apache/lens/cli/commands/LensQueryCommands.java,79,,"      specifiedDefaultValue = ""true"", help = ""<async>"") boolean async,"
156657,./TargetProjects/lens/lens-cli/src/main/java/org/apache/lens/cli/commands/LensQueryCommands.java,79,,"      specifiedDefaultValue = ""true"", help = ""<async>"") boolean async,"
156658,./TargetProjects/lens/lens-cli/src/main/java/org/apache/lens/cli/commands/LensQueryCommands.java,80,,"    @CliOption(key = {""name""}, mandatory = false, help = ""<query-name>"") String queryName) {"
156659,./TargetProjects/lens/lens-cli/src/main/java/org/apache/lens/cli/commands/LensQueryCommands.java,80,,"    @CliOption(key = {""name""}, mandatory = false, help = ""<query-name>"") String queryName) {"
156660,./TargetProjects/lens/lens-cli/src/main/java/org/apache/lens/cli/commands/LensQueryCommands.java,105,,"    @CliOption(key = {"""", ""query""}, mandatory = true, help = ""<query-string>"") String sql,"
156661,./TargetProjects/lens/lens-cli/src/main/java/org/apache/lens/cli/commands/LensQueryCommands.java,105,,"    @CliOption(key = {"""", ""query""}, mandatory = true, help = ""<query-string>"") String sql,"
156662,./TargetProjects/lens/lens-cli/src/main/java/org/apache/lens/cli/commands/LensQueryCommands.java,189,,"    @CliOption(key = {"""", ""query_handle""}, mandatory = false, help = ""<query_handle>"") String qh) {"
156663,./TargetProjects/lens/lens-cli/src/main/java/org/apache/lens/cli/commands/LensQueryCommands.java,189,,"    @CliOption(key = {"""", ""query_handle""}, mandatory = false, help = ""<query_handle>"") String qh) {"
156664,./TargetProjects/lens/lens-cli/src/main/java/org/apache/lens/cli/commands/LensSchemaCommands.java,50,,"    + ""|\n"""
156665,./TargetProjects/lens/lens-cli/src/test/java/org/apache/lens/cli/TestLensConnectionCliCommands.java,139,,"      LOG.debug(""Testing set/remove file operations"");"
156666,./TargetProjects/lens/lens-cli/src/test/java/org/apache/lens/cli/TestLensConnectionCliCommands.java,147,,"        Assert.assertEquals(""Add resource succeeded"", result);"
156667,./TargetProjects/lens/lens-cli/src/test/java/org/apache/lens/cli/TestLensConnectionCliCommands.java,150,,"        Assert.assertEquals(""Delete resource succeeded"", result);"
156668,./TargetProjects/lens/lens-cli/src/test/java/org/apache/lens/cli/TestLensConnectionCliCommands.java,152,,"        LOG.debug(""Testing set/remove file operation done"");"
156669,./TargetProjects/lens/lens-cli/src/test/java/org/apache/lens/cli/TestLensCubeCommands.java,66,,"      assertFalse(cubeList.contains(""sample_cube""));"
156670,./TargetProjects/lens/lens-cli/src/test/java/org/apache/lens/cli/TestLensDatabaseCommands.java,64,,"    assertFalse(cubeCommand.showCubes().contains(""sample_cube""));"
156671,./TargetProjects/lens/lens-cli/src/test/java/org/apache/lens/cli/TestLensDimensionCommands.java,92,,"    Assert.assertFalse(dimensionList.contains(""test_dim""));"
156672,./TargetProjects/lens/lens-cli/src/test/java/org/apache/lens/cli/TestLensDimensionCommands.java,96,,"    Assert.assertTrue(dimensionList.contains(""test_detail""));"
156673,./TargetProjects/lens/lens-cli/src/test/java/org/apache/lens/cli/TestLensDimensionTableCommands.java,88,,"    addDim1Table(""dim_table2"", ""schema/dimtables/dim_table2.xml"", DIM_LOCAL);"
156674,./TargetProjects/lens/lens-cli/src/test/java/org/apache/lens/cli/TestLensDimensionTableCommands.java,260,,"      fail(""Should fail"");"
156675,./TargetProjects/lens/lens-cli/src/test/java/org/apache/lens/cli/TestLensFactCommands.java,83,,"    assertFalse(cubeList.contains(""sample_cube""), cubeList);"
156676,./TargetProjects/lens/lens-cli/src/test/java/org/apache/lens/cli/TestLensFactCommands.java,92,,"    assertFalse(cubeList.contains(""virtualcube""), cubeList);"
156677,./TargetProjects/lens/lens-cli/src/test/java/org/apache/lens/cli/TestLensFactCommands.java,163,,"      assertEquals(command.showFacts(""fact1""), factList);"
156678,./TargetProjects/lens/lens-cli/src/test/java/org/apache/lens/cli/TestLensFactCommands.java,197,,"      assertEquals(command.showFacts(""virtualfact""), factList);"
156679,./TargetProjects/lens/lens-cli/src/test/java/org/apache/lens/cli/TestLensFactCommands.java,245,,"      assertTrue(desc.contains(propString), ""The sample property value is not set"");"
156680,./TargetProjects/lens/lens-cli/src/test/java/org/apache/lens/cli/TestLensFactCommands.java,371,,"      fail(""Should fail"");"
156681,./TargetProjects/lens/lens-cli/src/test/java/org/apache/lens/cli/TestLensNativeTableCommands.java,57,,"      Assert.assertFalse(tblList.contains(""test_native_table_command""));"
156682,./TargetProjects/lens/lens-cli/src/test/java/org/apache/lens/cli/TestLensQueryCommands.java,72,,"  @DataProvider(name = ""queryCommands"")"
156683,./TargetProjects/lens/lens-cli/src/test/java/org/apache/lens/cli/TestLensQueryCommands.java,85,,"    client.setConnectionParam(""lens.query.enable.persistent.resultset.indriver"", ""false"");"
156684,./TargetProjects/lens/lens-cli/src/test/java/org/apache/lens/cli/TestLensQueryCommands.java,85,,"    client.setConnectionParam(""lens.query.enable.persistent.resultset.indriver"", ""false"");"
156685,./TargetProjects/lens/lens-cli/src/test/java/org/apache/lens/cli/TestLensQueryCommands.java,87,,"      client.setConnectionParam(""lens.query.enable.metrics.per.query"", ""true"");"
156686,./TargetProjects/lens/lens-cli/src/test/java/org/apache/lens/cli/TestLensQueryCommands.java,100,,"    client1.setConnectionParam(""lens.query.enable.persistent.resultset"", ""false"");"
156687,./TargetProjects/lens/lens-cli/src/test/java/org/apache/lens/cli/TestLensQueryCommands.java,129,,"      { qCom1, ""cube select id,name from test_dim"", true, false },"
156688,./TargetProjects/lens/lens-cli/src/test/java/org/apache/lens/cli/TestLensQueryCommands.java,145,,"    assertEquals(qCom.getAllPreparedQueries(""all"", """", null, null), ""No prepared queries"");"
156689,./TargetProjects/lens/lens-cli/src/test/java/org/apache/lens/cli/TestLensQueryCommands.java,145,,"    assertEquals(qCom.getAllPreparedQueries(""all"", """", null, null), ""No prepared queries"");"
156690,./TargetProjects/lens/lens-cli/src/test/java/org/apache/lens/cli/TestLensQueryCommands.java,146,,"    String successfulQueries = qCom.getAllQueries(""SUCCESSFUL"", null, ""all"", null, null, null);"
156691,./TargetProjects/lens/lens-cli/src/test/java/org/apache/lens/cli/TestLensQueryCommands.java,156,,"        assertTrue(result.contains(""1\tfirst""), result);"
156692,./TargetProjects/lens/lens-cli/src/test/java/org/apache/lens/cli/TestLensQueryCommands.java,199,,"    String result = qCom.getAllPreparedQueries(""testPreparedName"", ""all"", String.valueOf(submitTime), null);"
156693,./TargetProjects/lens/lens-cli/src/test/java/org/apache/lens/cli/TestLensQueryCommands.java,203,,"    result = qCom.getAllPreparedQueries(""testPreparedName"", ""all"", String.valueOf(submitTime), ""now"");"
156694,./TargetProjects/lens/lens-cli/src/test/java/org/apache/lens/cli/TestLensQueryCommands.java,422,,"    TestLensDimensionTableCommands.addDim1Table(""dim_table"", ""schema/dimtables/dim_table.xml"", ""local"");"
156695,./TargetProjects/lens/lens-cli/src/test/java/org/apache/lens/cli/TestLensSegmentationCommands.java,46,,"    assertFalse(cubeList.contains(""sample_cube""), cubeList);"
156696,./TargetProjects/lens/lens-cli/src/test/java/org/apache/lens/cli/TestLensSegmentationCommands.java,112,,"      String desc = command.describeSegmentation(""seg1"");"
156697,./TargetProjects/lens/lens-client/src/main/java/org/apache/lens/client/LensConnection.java,240,,"    return target.path(""databases"").path(""current"").queryParam(""sessionid"", this.sessionHandle)"
156698,./TargetProjects/lens/lens-client/src/main/java/org/apache/lens/client/LensMetadataClient.java,79,,"    StringList databases = target.path(""databases"")"
156699,./TargetProjects/lens/lens-client/src/main/java/org/apache/lens/client/LensMetadataClient.java,80,,"      .queryParam(""sessionid"", connection.getSessionHandle())"
156700,./TargetProjects/lens/lens-client/src/main/java/org/apache/lens/client/LensMetadataClient.java,118,,"      .queryParam(""cascade"", cascade)"
156701,./TargetProjects/lens/lens-client/src/main/java/org/apache/lens/client/LensMetadataClient.java,145,,"    StringList cubes = target.path(""cubes"")"
156702,./TargetProjects/lens/lens-client/src/main/java/org/apache/lens/client/LensMetadataClient.java,231,,"    StringList dimensions = target.path(""dimensions"")"
156703,./TargetProjects/lens/lens-client/src/main/java/org/apache/lens/client/LensMetadataClient.java,294,,"    StringList storages = target.path(""storages"")"
156704,./TargetProjects/lens/lens-client/src/main/java/org/apache/lens/client/LensMetadataClient.java,365,,"    factTables = target.path(""cubes"").path(cubeName).path(""facts"")"
156705,./TargetProjects/lens/lens-client/src/main/java/org/apache/lens/client/LensMetadataClient.java,378,,"    segmentations = target.path(""cubes"").path(cubeName).path(""segmentations"")"
156706,./TargetProjects/lens/lens-client/src/main/java/org/apache/lens/client/LensMetadataClient.java,591,,"      .path(""storages"").path(storage).path(""partitions"")"
156707,./TargetProjects/lens/lens-client/src/main/java/org/apache/lens/client/LensMetadataClient.java,593,,"      .queryParam(""filter"", filter)"
156708,./TargetProjects/lens/lens-client/src/main/java/org/apache/lens/client/LensMetadataClient.java,643,,"    dimtables = target.path(""dimensions"").path(dimensionName).path(""dimtables"")"
156709,./TargetProjects/lens/lens-client/src/main/java/org/apache/lens/client/LensMetadataClient.java,823,,"      .path(""storages"").path(storage).path(""partition"")"
156710,./TargetProjects/lens/lens-client/src/main/java/org/apache/lens/client/LensStatement.java,191,,"      throw new IllegalStateException(""Lens Connection has to be established before querying"");"
156711,./TargetProjects/lens/lens-client/src/main/java/org/apache/lens/client/LensStatement.java,196,,"    mp.bodyPart(new FormDataBodyPart(FormDataContentDisposition.name(""sessionid"").build(), connection"
156712,./TargetProjects/lens/lens-client/src/main/java/org/apache/lens/client/LensStatement.java,198,,"    mp.bodyPart(new FormDataBodyPart(FormDataContentDisposition.name(""query"").build(), sql));"
156713,./TargetProjects/lens/lens-client/src/main/java/org/apache/lens/client/LensStatement.java,199,,"    mp.bodyPart(new FormDataBodyPart(FormDataContentDisposition.name(""operation"").build(), ""EXECUTE_WITH_TIMEOUT""));"
156714,./TargetProjects/lens/lens-client/src/main/java/org/apache/lens/client/LensStatement.java,201,,"    mp.bodyPart(new FormDataBodyPart(FormDataContentDisposition.name(""queryName"").build(), queryName == null ? """""
156715,./TargetProjects/lens/lens-client/src/main/java/org/apache/lens/client/LensStatement.java,203,,"    mp.bodyPart(new FormDataBodyPart(FormDataContentDisposition.name(""conf"").fileName(""conf"").build(), conf,"
156716,./TargetProjects/lens/lens-client/src/main/java/org/apache/lens/client/SpnegoClientFilter.java,100,,"    if (""true"".equals(request.getProperty(REQUEST_PROPERTY_FILTER_REUSED))) {"
156717,./TargetProjects/lens/lens-client/src/main/java/org/apache/lens/client/jdbc/JDBCUtils.java,325,,"      throw new SQLException(""Invalid column type: "" + columnType);"
156718,./TargetProjects/lens/lens-client/src/main/java/org/apache/lens/client/jdbc/LensJdbcConnection.java,94,,"    throw new SQLException(""Operation not supported!!!"");"
156719,./TargetProjects/lens/lens-client/src/main/java/org/apache/lens/client/jdbc/LensJdbcConnection.java,167,,"    throw new SQLException(""Operation not supported!!!!"");"
156720,./TargetProjects/lens/lens-client/src/main/java/org/apache/lens/client/jdbc/LensJdbcResultSet.java,163,,"    throw new SQLException(""Cannot convert column "" + i + ""to boolean"");"
156721,./TargetProjects/lens/lens-client/src/main/java/org/apache/lens/client/jdbc/LensJdbcResultSet.java,218,,"      throw new Exception(""Illegal Conversion"");"
156722,./TargetProjects/lens/lens-client/src/main/java/org/apache/lens/client/jdbc/LensJdbcResultSet.java,220,,"      throw new SQLException(""Cannot convert column "" + i + ""to short:"" + e.toString(), e);"
156723,./TargetProjects/lens/lens-client/src/main/java/org/apache/lens/client/jdbc/LensJdbcResultSet.java,575,,"    throw new SQLException(""Operation not supported!!!"");"
156724,./TargetProjects/lens/lens-client/src/main/java/org/apache/lens/client/jdbc/LensJdbcResultSet.java,715,,"    throw new SQLException(""Operation not supported"");"
156725,./TargetProjects/lens/lens-client/src/main/java/org/apache/lens/client/jdbc/LensJdbcStatement.java,202,,"    throw new SQLException(""Operation not supported!!!!"");"
156726,./TargetProjects/lens/lens-client/src/main/java/org/apache/lens/client/jdbc/LensJdbcStatement.java,240,,"    throw new SQLException(""Operation not supported"");"
156727,./TargetProjects/lens/lens-client/src/main/java/org/apache/lens/client/jdbc/LensJdbcStatement.java,250,,"    throw new SQLException(""Operation not supported!!!"");"
156728,./TargetProjects/lens/lens-client/src/test/java/org/apache/lens/client/TestLensClient.java,144,,"      client.createDatabase(""testclientdb"", true);"
156729,./TargetProjects/lens/lens-client/src/test/java/org/apache/lens/client/TestLensClient.java,157,,"    String query = ""cube select id,name from test_dim"";"
156730,./TargetProjects/lens/lens-cube/src/main/java/org/apache/lens/cube/metadata/HierarchicalDimAttribute.java,82,,"        throw new IllegalArgumentException(""Invalid Dimension"", e);"
156731,./TargetProjects/lens/lens-cube/src/main/java/org/apache/lens/cube/parse/UnionQueryWriter.java,244,,"    return new ASTNode(new CommonToken(HiveParser.TOK_SELEXPR, ""TOK_SELEXPR""));"
156732,./TargetProjects/lens/lens-cube/src/main/java/org/apache/lens/cube/parse/join/BridgeTableJoinContext.java,89,,"        bridgeFilterClause.append("" and "");"
156733,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/DateFactory.java,119,,"    return getTimeRangeString(""d_time"", startDate, endDate);"
156734,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,183,,"      new FieldSchema(""msr1"", ""int"", ""first measure""), null, null, null, null, null, null, null, 0.0, 9999.0));"
156735,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,183,,"      new FieldSchema(""msr1"", ""int"", ""first measure""), null, null, null, null, null, null, null, 0.0, 9999.0));"
156736,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,185,,"      new FieldSchema(""msr2"", ""float"", ""second measure""), ""Measure2"", null, ""SUM"", ""RS""));"
156737,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,185,,"      new FieldSchema(""msr2"", ""float"", ""second measure""), ""Measure2"", null, ""SUM"", ""RS""));"
156738,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,187,,"      new FieldSchema(""msr3"", ""double"", ""third measure""), ""Measure3"", null, ""MAX"", null));"
156739,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,187,,"      new FieldSchema(""msr3"", ""double"", ""third measure""), ""Measure3"", null, ""MAX"", null));"
156740,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,187,,"      new FieldSchema(""msr3"", ""double"", ""third measure""), ""Measure3"", null, ""MAX"", null));"
156741,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,189,,"      new FieldSchema(""msr4"", ""bigint"", ""fourth measure""), ""Measure4"", null, ""COUNT"", null));"
156742,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,189,,"      new FieldSchema(""msr4"", ""bigint"", ""fourth measure""), ""Measure4"", null, ""COUNT"", null));"
156743,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,209,,"    locationHierarchy.add(new BaseDimAttribute(new FieldSchema(""zipcode"", ""int"", ""zip"")));"
156744,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,209,,"    locationHierarchy.add(new BaseDimAttribute(new FieldSchema(""zipcode"", ""int"", ""zip"")));"
156745,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,210,,"    locationHierarchy.add(new BaseDimAttribute(new FieldSchema(""cityid"", ""int"", ""city"")));"
156746,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,210,,"    locationHierarchy.add(new BaseDimAttribute(new FieldSchema(""cityid"", ""int"", ""city"")));"
156747,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,211,,"    locationHierarchy.add(new BaseDimAttribute(new FieldSchema(""stateid"", ""int"", ""state"")));"
156748,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,212,,"    locationHierarchy.add(new BaseDimAttribute(new FieldSchema(""countryid"", ""int"", ""country"")));"
156749,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,213,,"    List<String> regions = Arrays.asList(""APAC"", ""EMEA"", ""USA"");"
156750,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,214,,"    locationHierarchy.add(new BaseDimAttribute(new FieldSchema(""regionname"", ""string"", ""region""), ""regionname"", null,"
156751,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,214,,"    locationHierarchy.add(new BaseDimAttribute(new FieldSchema(""regionname"", ""string"", ""region""), ""regionname"", null,"
156752,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,216,,"    cubeDimensions.add(new HierarchicalDimAttribute(""location"", ""location hierarchy"", locationHierarchy));"
156753,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,217,,"    cubeDimensions.add(new BaseDimAttribute(new FieldSchema(""dim1"", ""string"", ""basedim"")));"
156754,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,218,,"    cubeDimensions.add(new BaseDimAttribute(new FieldSchema(""dim2"", ""id"", ""ref dim""), ""Dim2 refer"", null, null, null));"
156755,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,218,,"    cubeDimensions.add(new BaseDimAttribute(new FieldSchema(""dim2"", ""id"", ""ref dim""), ""Dim2 refer"", null, null, null));"
156756,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,228,,"    cubeExpressions.add(new ExprColumn(new FieldSchema(""msr5"", ""double"", ""fifth measure""), ""Avg msr5"","
156757,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,235,,"    cubeExpressions.add(new ExprColumn(new FieldSchema(""booleancut"", ""boolean"", ""a boolean expression""), ""Boolean Cut"","
156758,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,255,,"      .add(new HierarchicalDimAttribute(""location2"", ""localtion hierarchy2"", locationHierarchyWithStartTime));"
156759,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,261,,"    cubeDimensions.add(new BaseDimAttribute(new FieldSchema(""dim3"", ""string"", ""multi ref dim"")));"
156760,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,267,,"    JoinChain zipCity = new JoinChain(""cityFromZip"", ""Zip City"", ""zip city desc"");"
156761,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,270,,"    chain.add(new TableReference(""zipdim"", ""zipcode""));"
156762,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,272,,"    chain.add(new TableReference(""citydim"", ""id""));"
156763,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,287,,"    joinChains.add(new JoinChain(""cubeState"", ""cube-state"", ""state thru cube"") {"
156764,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,292,,"            add(new TableReference(""statedim"", ""id""));"
156765,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,308,,"            add(new TableReference(""countrydim"", ""id""));"
156766,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,362,,"      ""Zip city name"", ""cityFromZip"", ""name"", null, null, null));"
156767,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,391,,"    zipAttrs.add(new BaseDimAttribute(new FieldSchema(""zipcode"", ""int"", ""code"")));"
156768,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,392,,"    zipAttrs.add(new BaseDimAttribute(new FieldSchema(""f1"", ""string"", ""field1"")));"
156769,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,394,,"    zipAttrs.add(new BaseDimAttribute(new FieldSchema(""stateid"", ""int"", ""state id""), ""State refer"", null, null, null));"
156770,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,396,,"    zipAttrs.add(new BaseDimAttribute(new FieldSchema(""countryid"", ""int"", ""country id""), ""Country refer"", null, null,"
156771,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,398,,"    zipAttrs.add(new ReferencedDimAttribute(new FieldSchema(""statename"", ""name"", ""state name""), ""State Name"","
156772,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,442,,"    dimExpressions.add(new ExprColumn(new FieldSchema(""stateAndCountry"", ""String"", ""state and country together""),"
156773,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,479,,"    stateAttrs.add(new BaseDimAttribute(new FieldSchema(""capital"", ""string"", ""state capital"")));"
156774,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,659,,"    assertEquals(zipchain.getPaths().get(0).getReferences().get(1).toString(), ""citydim.id"");"
156775,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,871,,"    tag2.put(""is_ui_visible"", ""true"");"
156776,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,888,,"    cubeExpressions.add(new ExprColumn(new FieldSchema(""expr_measure"", ""double"", ""expression measure""),"
156777,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,930,,"    toAlter.alterMeasure(new ColumnMeasure(new FieldSchema(""testAddMsr1"", ""int"", ""testAddMeasure"")));"
156778,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,934,,"    toAlter.alterDimension(new BaseDimAttribute(new FieldSchema(""testAddDim1"", ""string"", ""dim to add"")));"
156779,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,1001,,"    FieldSchema itPart = new FieldSchema(""it"", ""string"", ""date part"");"
156780,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,1128,,"    toAlter.addDimension(""dim1StartTime"");"
156781,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,1219,,"    List<Partition> parts = client.getPartitionsByFilter(storageTableName, ""dt='latest'"");"
156782,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,1270,,"    Map<String, String> sourceFactPropertiesMap = getHashMap(""name1"", ""value1"", ""name2"", ""value2"");"
156783,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,1384,,"      {""now - 15 days"", ""now - 11 days"", false},"
156784,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,1386,,"      {""now - 15 days"", ""now - 1 hour"", true},"
156785,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,1387,,"      {""now - 9 days"", ""now - 1 hour"", true},"
156786,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,2084,,"    List<FieldSchema> factPartColumns = Lists.newArrayList(new FieldSchema(""region"", ""string"", ""region part""));"
156787,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,2415,,"    dimColumns.add(new FieldSchema(""capital"", ""string"", ""field2""));"
156788,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,2641,,"    nonTimeParts.put(""region"", ""asia"");"
156789,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,2648,,"    nonTimeParts.put(""region"", ""africa"");"
156790,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,3014,,"    defineCube(""testcache1"", ""testcache2"", ""derived1"", ""derived2"");"
156791,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestCubeMetastoreClient.java,3033,,"    defineCube(""testcache3"", ""testcache4"", ""dervied3"", ""derived4"");"
156792,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestExprColumn.java,62,,"    FieldSchema colSchema = new FieldSchema(""someExprCol"", ""double"", ""some exprcol"");"
156793,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestExprColumn.java,64,,"    ExprColumn col1 = new ExprColumn(colSchema, ""someExprDisplayString"", ""AVG(msr1) + AVG(msr2)"");"
156794,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestExprColumn.java,65,,"    ExprColumn col2 = new ExprColumn(colSchema, ""someExprDisplayString"", ""avg(MSR1) + avg(MSR2)"");"
156795,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestExprColumn.java,89,,"    FieldSchema colSchema = new FieldSchema(""multiExprCol"", ""double"", ""multi exprcol"");"
156796,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestExprColumn.java,91,,"    ExprColumn col1 = new ExprColumn(colSchema, ""multiExprColDisplayString"", new ExprSpec(""avg(MSR1) + avg(MSR2)"","
156797,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestExprColumn.java,153,,"      fail(col1 + "" should not be created"");"
156798,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestExprColumn.java,176,,"      ExprColumn col1 = new ExprColumn(colSchema, ""NoExprInExprSpec"", new ExprSpec(""a + b"", null, null),"
156799,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/metadata/TestMetastoreUtil.java,45,,"    MetastoreUtil.addNameStrings(props, ""test.key"", attrs);"
156800,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/CubeTestSetup.java,188,,"      expected.append(selExpr).append(storageTable).append("" "").append(cubeName).append("" WHERE "").append(""("");"
156801,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/CubeTestSetup.java,191,,"          expected.append(cond).append("" AND "");"
156802,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/CubeTestSetup.java,584,,"    assertEquals(table.getParameters().get(MetastoreUtil.getPartitionTimelineCachePresenceKey()), ""true"");"
156803,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/CubeTestSetup.java,594,,"      for (String partCol : Lists.newArrayList(""ttd"", ""ttd2"")) {"
156804,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/CubeTestSetup.java,594,,"      for (String partCol : Lists.newArrayList(""ttd"", ""ttd2"")) {"
156805,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/FieldsCannotBeQueriedTogetherTest.java,62,,"        Arrays.asList(""dim2"", ""d_time"", ""msr1""));"
156806,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/FieldsCannotBeQueriedTogetherTest.java,62,,"        Arrays.asList(""dim2"", ""d_time"", ""msr1""));"
156807,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/FieldsCannotBeQueriedTogetherTest.java,62,,"        Arrays.asList(""dim2"", ""d_time"", ""msr1""));"
156808,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/FieldsCannotBeQueriedTogetherTest.java,117,,"        Arrays.asList(""citystate.name"", ""d_time"", ""msr1""));"
156809,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestAggregateResolver.java,101,,"        ""group by testcube.cityid"", getWhereForDailyAndHourly2days(cubeName, ""C2_testfact""));"
156810,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestAggregateResolver.java,101,,"        ""group by testcube.cityid"", getWhereForDailyAndHourly2days(cubeName, ""C2_testfact""));"
156811,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestAggregateResolver.java,107,,"      getExpectedQuery(cubeName, ""SELECT testcube.cityid as `cityid`, sum(testCube.msr2) as `sum(testCube.msr2)` """
156812,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestAggregateResolver.java,108,,"          + ""from "", null, ""group by testcube.cityid"","
156813,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestAggregateResolver.java,112,,"          + ""from "", null, ""group by testcube.cityid having"" + "" sum(testCube.msr2) > 100"","
156814,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestAggregateResolver.java,171,,"          + ""testcube.stateid as `stateid`"" + "" from "", null,"
156815,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestAggregateResolver.java,226,,"    Assert.assertEquals(""c1_testFact2_raw"".toLowerCase(),"
156816,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestAggregateResolver.java,230,,"        getWhereForHourly2days(""c1_testfact2_raw""));"
156817,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestAggregateResolver.java,256,,"    query = ""SELECT cityid, sum(testCube.msr2) FROM testCube WHERE "" + TWO_DAYS_RANGE;"
156818,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBaseCubeQueries.java,73,,"        + "" where "" + LAST_YEAR_RANGE, getConf());"
156819,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBaseCubeQueries.java,100,,"          null, "" group by basecube.dim1"","
156820,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBaseCubeQueries.java,101,,"        getWhereForHourly2days(cubeName, ""C1_testfact1_raw_base""));"
156821,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBaseCubeQueries.java,115,,"          getWhereForDailyAndHourly2days(cubeName, ""C1_testFact1_BASE""));"
156822,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBaseCubeQueries.java,131,,"          "" group by basecube.dim1"", getWhereForDailyAndHourly2days(cubeName, ""C1_testFact2_BASE""));"
156823,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBaseCubeQueries.java,143,,"    Assert.assertTrue(storageCandidates.contains(""c1_testfact1_base""));"
156824,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBaseCubeQueries.java,144,,"    Assert.assertTrue(storageCandidates.contains(""c1_testfact2_base""));"
156825,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBaseCubeQueries.java,157,,"    assertFalse(lower.contains(""UNION ALL""), hqlQuery);"
156826,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBaseCubeQueries.java,175,,"        + ""sum((basecube.msr12)) as `alias2` FROM "", null, null,"
156827,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBaseCubeQueries.java,178,,"        + ""0 as `alias2` FROM "", null,"
156828,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBaseCubeQueries.java,208,,"    assertTrue(hqlQuery.contains(""UNION ALL"") && hqlQuery.endsWith(""GROUP BY (basecube.alias0)""),"
156829,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBaseCubeQueries.java,221,,"        + ""as `alias1`, 0 as `alias2` FROM "", null, "" group by basecube.dim1"","
156830,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBaseCubeQueries.java,258,,"      getExpectedQuery(cubeName, ""SELECT (basecube.dim1) as `alias0`, sum((basecube.msr12)) as `alias1`, """
156831,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBaseCubeQueries.java,269,,"          + ""round((sum((basecube.alias2)) / 1000)) as `roundedmsr2` from""), hqlQuery);"
156832,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBaseCubeQueries.java,308,,"    String hqlQuery = rewrite(""select dim1, dim11, msr12, roundedmsr2 from basecube where "" + TWO_DAYS_RANGE, conf);"
156833,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBaseCubeQueries.java,331,,"          + ""0 as `alias2` FROM "", null, null, getWhereForHourly2days(cubeName, ""C1_testfact2_raw_base""));"
156834,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBaseCubeQueries.java,334,,"            + ""as `alias2` FROM "", null, null,"
156835,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBaseCubeQueries.java,355,,"      getExpectedQuery(cubeName, ""SELECT (basecube.dim1) as `alias0`, 0 as `alias1`, sum((basecube.msr2)) """
156836,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBaseCubeQueries.java,507,,"        "" JOIN "" + getDbName()"
156837,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBaseCubeQueries.java,509,,"            + "" dim2chain.id and (dim2chain.dt = 'latest') "", null,"
156838,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBaseCubeQueries.java,532,,"        + ""c1_testdim2tbl dim2chain ON basecube.dim12 = """
156839,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBaseCubeQueries.java,667,,"        getWhereForHourly2days(cubeName, ""c1_testfact1_raw_base""));"
156840,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBaseCubeQueries.java,772,,"    hql = rewrite(""select msr12 from basecube where "" + TWO_DAYS_RANGE, conf);"
156841,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBaseCubeQueries.java,783,,"    assertEquals(pruneCause.getDetails().get(""c4_testfact2_base"").iterator().next().getCause(), MISSING_PARTITIONS);"
156842,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBaseCubeQueries.java,879,,"          + ""as `alias2`, 0 as `alias3` FROM "", null, "" group by basecube.dim1, basecube.dim11"","
156843,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBaseCubeQueries.java,882,,"      ""SELECT (basecube.dim1) as `alias0`, (basecube.dim11) as `alias1`, 0 as `alias2`, """
156844,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBaseCubeQueries.java,883,,"          + ""sum((basecube.msr2)) as `alias3` FROM "", null, "" group by basecube.dim1, basecube.dim11"","
156845,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBaseCubeQueries.java,889,,"    assertTrue(hqlQuery.toLowerCase().startsWith(""select (basecube.alias0) as `dim1`, (basecube.alias1) as `dim11`, """
156846,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBaseCubeQueries.java,897,,"      ""SELECT (basecube.dim1) as `alias0`, (basecube.dim11) as `alias1`, sum((basecube.msr12)) as `alias2`, """
156847,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBaseCubeQueries.java,898,,"          + ""0 as `alias3` FROM "", null, "" group by basecube.dim1, basecube.dim11"","
156848,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBaseCubeQueries.java,998,,"    hqlQuery = rewrite(""select dim1, dim11 from basecube where "" + TWO_DAYS_RANGE"
156849,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBetweenTimeRangeWriter.java,85,,"        getBetweenClause(""test"", ""dt"", TWODAYS_BACK, NOW, DAILY.format());"
156850,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,49,,"    String query = ""select usersports.name, sum(msr2) from basecube where "" + TWO_DAYS_RANGE;"
156851,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,51,,"    String expected = getExpectedQuery(""basecube"", ""SELECT (usersports.balias0) as `name`, sum((basecube.msr2)) """
156852,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,51,,"    String expected = getExpectedQuery(""basecube"", ""SELECT (usersports.balias0) as `name`, sum((basecube.msr2)) """
156853,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,52,,"        + ""as `sum(msr2)` FROM "","
156854,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,53,,"      "" join "" + getDbName() + ""c1_usertable userdim ON basecube.userid = userdim.id """
156855,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,53,,"      "" join "" + getDbName() + ""c1_usertable userdim ON basecube.userid = userdim.id """
156856,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,54,,"        + "" join (select user_interests.user_id as user_id,collect_set(usersports.name) as balias0"""
156857,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,55,,"        + "" from "" + getDbName() + ""c1_user_interests_tbl user_interests"""
156858,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,55,,"        + "" from "" + getDbName() + ""c1_user_interests_tbl user_interests"""
156859,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,56,,"        + "" join "" + getDbName() + ""c1_sports_tbl usersports on user_interests.sport_id = usersports.id"""
156860,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,57,,"        + "" group by user_interests.user_id) usersports"""
156861,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,58,,"        + "" on userdim.id = usersports.user_id "","
156862,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,59,,"      null, ""group by usersports.balias0"", null,"
156863,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,60,,"      getWhereForDailyAndHourly2days(""basecube"", ""c1_testfact1_base""));"
156864,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,63,,"    query = ""select sports, sum(msr2) from basecube where "" + TWO_DAYS_RANGE;"
156865,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,64,,"    expected = getExpectedQuery(""basecube"", ""SELECT (usersports.balias0) as `sports`, sum((basecube.msr2)) """
156866,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,226,,"      getWhereForDailyAndHourly2days(""basecube"", ""c1_testfact2_base""));"
156867,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,232,,"          + ""sum((basecube.alias2)) as `msr12` from""), hqlQuery);"
156868,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,234,,"    assertTrue(hqlQuery.contains(""UNION ALL"") && hqlQuery.endsWith(""GROUP BY (basecube.alias0)""),"
156869,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,234,,"    assertTrue(hqlQuery.contains(""UNION ALL"") && hqlQuery.endsWith(""GROUP BY (basecube.alias0)""),"
156870,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,249,,"      ""SELECT (usersports.balias0) as `alias0`, 0 as `alias1`, sum((basecube.msr12)) """
156871,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,250,,"          + ""as `alias2` FROM "", "" join "" + getDbName()"
156872,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,276,,"      "" join "" + getDbName() + ""c1_usertable userdim_1 on basecube.userid = userdim_1.id """
156873,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,278,,"      + getDbName() + ""c1_user_interests_tbl user_interests_1 join "" + getDbName() + ""c1_sports_tbl usersports on """
156874,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,278,,"      + getDbName() + ""c1_user_interests_tbl user_interests_1 join "" + getDbName() + ""c1_sports_tbl usersports on """
156875,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,279,,"      + ""user_interests_1.sport_id = usersports.id group by user_interests_1.user_id) """
156876,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,280,,"      + ""usersports on userdim_1.id = usersports.user_id"""
156877,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,281,,"      + "" join "" + getDbName() + ""c1_usertable userdim_0 on basecube.yuserid = userdim_0.id """
156878,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,283,,"      + getDbName() + ""c1_user_interests_tbl user_interests_0 join "" + getDbName() + ""c1_sports_tbl yusersports on """
156879,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,285,,"      + "" yusersports.user_id join "" + getDbName() + ""c1_usertable userdim on basecube.xuserid = userdim.id"""
156880,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,287,,"      + getDbName() + ""c1_user_interests_tbl user_interests join "" + getDbName() + ""c1_sports_tbl xusersports"""
156881,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,289,,"      + "" xusersports.user_id"", null, ""group by usersports.balias0, xusersports.balias0, yusersports.balias0"", null,"
156882,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,328,,"      "" left outer join "" + getDbName() + ""c1_usertable userdim_1 on basecube.userid = userdim_1.id """
156883,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,474,,"        + "" join "" + getDbName() + ""c1_sports_tbl usersports on user_interests.sport_id = usersports.id """
156884,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,593,,"      + "" and usersports.name = 'CRICKET,FOOTBALL'"";"
156885,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,598,,"        + "" join (select user_interests.user_id as user_id,collect_set(usersports.name) as name"""
156886,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,603,,"      "" and usersports.name = 'CRICKET,FOOTBALL' group by usersports.name"", null,"
156887,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,607,,"    query = ""select sports, sum(msr2) from basecube where "" + TWO_DAYS_RANGE + "" and sports = 'CRICKET,FOOTBALL'"";"
156888,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,628,,"      ""SELECT (usersports.balias0) as `alias0`, sum((basecube.msr2)) as `alias1`, 0 """
156889,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,644,,"        + "" group by user_interests.user_id) usersports on userdim.id = usersports.user_id "", null,"
156890,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,803,,"      "" and usersports.name = 'CRICKET,FOOTBALL' group by substr(usersports.name, 3)"", null,"
156891,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,885,,"        + "" collect_set(usersports.name) as balias1 from"""
156892,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,889,,"      "" and ( array_contains(usersports.balias1,'CRICKET') OR array_contains(usersports.balias1,'FOOTBALL')"""
156893,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestBridgeTableQueries.java,890,,"        + "" group by usersports.balias0"", null,"
156894,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,83,,"        ""select SUM(msr2) from testCube where "" + getTimeRangeString(""NOW - 2DAYS"", ""NOW""), getConf());"
156895,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,126,,"      ""select dim12, SUM(msr2) from testCube"" + "" where "" + TWO_DAYS_RANGE, getConf());"
156896,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,140,,"      getExpectedQuery(TEST_CUBE_NAME, ""select sum(testcube.msr2) as `sum(msr2)` FROM "", null, null,"
156897,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,141,,"        getWhereForDailyAndHourly2days(TEST_CUBE_NAME, ""C2_testfact""));"
156898,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,174,,"    hqlQuery = rewrite(""select SUM(msr2) from testCube"" + "" where "" + TWO_DAYS_RANGE, conf);"
156899,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,177,,"        getWhereForHourly2days(""c1_testfact2""));"
156900,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,190,,"    assertEquals(pruneCauses.getDetails().get(""c1_testfact"").size(), 1);"
156901,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,362,,"    conf.set(getValidStorageTablesKey(""testfact""), ""C1_testFact"");"
156902,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,374,,"      ""select sum(testcube.msr2)  as `sum(msr2)` FROM "", null, null, getWhereForHourly2days(""c2_testfact""));"
156903,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,395,,"      ""select cubecountry.name, msr2 from"" + "" testCube"" + "" where cubecountry.region = 'asia' and """
156904,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,395,,"      ""select cubecountry.name, msr2 from"" + "" testCube"" + "" where cubecountry.region = 'asia' and """
156905,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,399,,"          + "" FROM "", "" JOIN "" + getDbName()"
156906,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,428,,"      getExpectedQuery(TEST_CUBE_NAME, ""SELECT sum((testcube.msr2)) as `sum(msr2)` FROM "", "" INNER JOIN "" + getDbName()"
156907,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,457,,"        getWhereForHourly2days(TEST_CUBE_NAME, ""C1_testfact2""));"
156908,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,482,,"          "" LEFT OUTER JOIN """
156909,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,524,,"    String filterSubquery = ""testcube.countryid in ( select id from TestQueryRewrite.c3_countrytable_partitioned """
156910,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,655,,"    hqlQuery = rewrite(""select round(cityid), sum(msr2) from"" + "" testCube where "" + TWO_DAYS_RANGE, conf);"
156911,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,743,,"        + "" cubezip.code!=1  AND "" + "" ((cubezip.f1==\""xyz\""  AND  (cubezip.f2 >= \""3\""  AND """
156912,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,744,,"        + ""  cubezip.f2 !=\""NULL\""  AND  cubezip.f2 != \""uk\"")) """
156913,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,918,,"      getExpectedQuery(""mycube"", ""select sum(mycube.msr2) as `sum(msr2)` FROM "", null, null,"
156914,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,962,,"    String expected = getExpectedQuery(""basecube"", ""select sum(basecube.msr1)  as `sum(msr1)` FROM "", null, null,"
156915,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,1102,,"    pr1.addPruningMsg(new CubeDimensionTable(new Table(""test"", ""citydim"")),"
156916,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,1119,,"      getExpectedQuery(""citydim"", ""select citydim.name,"" + "" citydim.stateid from "", null, ""c1_citytable"", true);"
156917,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,1119,,"      getExpectedQuery(""citydim"", ""select citydim.name,"" + "" citydim.stateid from "", null, ""c1_citytable"", true);"
156918,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,1119,,"      getExpectedQuery(""citydim"", ""select citydim.name,"" + "" citydim.stateid from "", null, ""c1_citytable"", true);"
156919,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,1127,,"      getExpectedQuery(""citydim"", ""select citydim.name,"" + "" citydim.stateid from "", null, ""c2_citytable"", false);"
156920,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,1174,,"    hqlQuery = rewrite(""select name, c.stateid from citydim"" + "" c"", conf);"
156921,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,1175,,"    expected = getExpectedQuery(""c"", ""select c.name, c.stateid from "", null, ""c1_citytable"", true);"
156922,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,1181,,"      getExpectedQuery(""c"", ""select c.name, c.stateid from "", null, "" c.name != 'xyz' "", null, ""c1_citytable"", true);"
156923,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,1206,,"    hqlQuery = rewrite(""select name, stateid from citydim"", conf);"
156924,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,1251,,"      getExpectedQuery(""citydim"", ""select citydim.name,"" + "" citydim.stateid from "", "" limit 100"", ""c1_citytable"","
156925,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,1314,,"    String hqlQuery = rewrite(""select dim1, max(msr3),"" + "" msr2 from testCube"" + "" where "" + TWO_DAYS_RANGE,"
156926,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,1314,,"    String hqlQuery = rewrite(""select dim1, max(msr3),"" + "" msr2 from testCube"" + "" where "" + TWO_DAYS_RANGE,"
156927,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,1319,,"        "" group by testcube.dim1"", getWhereForDailyAndHourly2days(TEST_CUBE_NAME, ""C1_summary1""));"
156928,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,1322,,"      rewrite(""select dim1, dim2, COUNT(msr4),"" + "" SUM(msr2), msr3 from testCube"" + "" where "" + TWO_DAYS_RANGE,"
156929,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,1325,,"      getExpectedQuery(TEST_CUBE_NAME, ""select testcube.dim1 as `dim1`, testcube,dim2 as `dim2`, """
156930,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,1390,,"    hqlQuery = rewrite(""select SUM(msr2) from testCube"" + "" where "" + TWO_DAYS_RANGE + "" OR ("""
156931,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,1531,,"      rewrite(""select SUM(msr2) from testCube"" + "" where "" + TWO_DAYS_RANGE + "" OR """
156932,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeRewriter.java,1679,,"    assertTrue(hql.contains(""ttd"") && hql.contains(""full_hour""));"
156933,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeSegmentationRewriter.java,105,,"    String query1 = getExpectedQuery(""testcube"","
156934,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeSegmentationRewriter.java,107,,"      ""group by testcube.cityid"","
156935,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeSegmentationRewriter.java,108,,"      getWhereForDailyAndHourly2days(""testcube"", ""c1_b1fact1""));"
156936,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeSegmentationRewriter.java,112,,"      getWhereForDailyAndHourly2days(""testcube"", ""c0_b2fact1""));"
156937,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeSegmentationRewriter.java,129,,"    query1 = getExpectedQuery(""testcube"", ""select testcube.cityid as alias0, sum(testcube.segmsr1) as alias1 from "","
156938,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeSegmentationRewriter.java,160,,"      ""select testcube.cityid as alias0, 0 as alias1, sum(testcube.segmsr1) as alias2 FROM "", null,"
156939,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestCubeSegmentationRewriter.java,170,,"      getWhereForHourly2days(""testcube"", ""c1_testfact2""));"
156940,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestDenormalizationResolver.java,63,,"    String hqlQuery = rewrite(""select dim2big1, max(msr3),"" + "" msr2 from testCube"" + "" where "" + TWO_DAYS_RANGE_IT,"
156941,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestDenormalizationResolver.java,63,,"    String hqlQuery = rewrite(""select dim2big1, max(msr3),"" + "" msr2 from testCube"" + "" where "" + TWO_DAYS_RANGE_IT,"
156942,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestDenormalizationResolver.java,67,,"          + ""sum((testcube.msr2)) as `msr2` FROM "", null,"
156943,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestDenormalizationResolver.java,68,,"        "" group by testcube.dim2big1"", getWhereForDailyAndHourly2daysWithTimeDim(cubeName, ""it"", ""C2_summary4""),"
156944,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestDenormalizationResolver.java,76,,"          + ""sum((testcube.msr2)) as `msr2` FROM "", "" JOIN "" + getDbName() + ""c1_citytable cubecity """
156945,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestDenormalizationResolver.java,98,,"          + getDbName() + ""c2_testdim2tbl3 testdim2 "" + ""on testcube.dim2big1 = testdim2.bigid1"" + "" join """
156946,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestDenormalizationResolver.java,120,,"          + ""as `max(msr3)`, sum((testcube.msr2)) as `msr2` FROM "", "" JOIN """
156947,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestDenormalizationResolver.java,121,,"          + getDbName() + ""c1_testdim2tbl2 dim2chain ON testcube.dim2 = """
156948,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestDenormalizationResolver.java,122,,"          + "" dim2chain.id and (dim2chain.dt = 'latest') "", null, ""group by (dim2chain.bigid1)"", null,"
156949,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestDenormalizationResolver.java,123,,"        getWhereForDailyAndHourly2days(cubeName, ""c1_summary2""));"
156950,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestDenormalizationResolver.java,240,,"    String hqlQuery = rewrite(""select citydim.name, citydim.statename from"" + "" citydim"", conf);"
156951,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestDenormalizationResolver.java,244,,"    String expected = getExpectedQuery(""citydim"", ""SELECT citydim.name, citystate.name FROM "", joinExpr, null, null,"
156952,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestDenormalizationResolver.java,311,,"      getExpectedQuery(""basecube"", ""SELECT (cityzip.code) as `code`, (basecube.dim22) as `dim22`, """
156953,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestExpressionResolver.java,55,,"    th = getLensExceptionInRewrite(""select nocolexpr, SUM(msr2) from testCube"" + "" where "" + TWO_DAYS_RANGE, conf);"
156954,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestExpressionResolver.java,75,,"        getWhereForHourly2days(""C1_testfact2_raw""));"
156955,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestExpressionResolver.java,84,,"          + ""FROM "", null, "" group by testcube.dim1"", getWhereForDailyAndHourly2days(cubeName, ""c1_summary1""));"
156956,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestExpressionResolver.java,91,,"    String hqlQuery = rewrite(""select msr2 from testCube"" + "" where "" + TWO_DAYS_RANGE + "" and substrexpr != 'XYZ'"","
156957,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestExpressionResolver.java,170,,"          + "" group by testCube.dim1 != 'x' AND testCube.dim2 != 10"", getWhereForHourly2days(""C1_testfact2_raw""));"
156958,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestExpressionResolver.java,181,,"        + "" avg(testCube.msr1 + testCube.msr2) as `avgmsr` FROM "", null, "" and substr(testCube.dim1, 3) != 'XYZ' """
156959,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestExpressionResolver.java,208,,"      "" join "" + getDbName() + ""c1_citytable cubecity"""
156960,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestExpressionResolver.java,301,,"        getWhereForDailyAndHourly2days(cubeName, ""C2_testfact""));"
156961,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestExpressionResolver.java,374,,"      getExpectedQuery(""citydim"", ""SELECT citydim.name, concat((citydim.name), \"":\"", (citystate.name ),"""
156962,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestExpressionResolver.java,375,,"        + "" \"":\"",(citycountry.name),  \"":\"" , ( cityzip . code )) FROM "", joinExpr, null, null, ""c1_citytable"", true);"
156963,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestHQLParser.java,525,,"      {""((sum((testcube.segmsr1)) > 1) and (sum((testcube.msr2)) > 2))"", newArrayList(""segmsr1""),"
156964,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestJoinResolver.java,78,,"    System.out.println(""testAutoJoinResolverauto join HQL:"" + hql);"
156965,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestJoinResolver.java,79,,"    System.out.println(""testAutoJoinResolver@@Resolved join chain:["" + getAutoResolvedFromString(rewrittenQuery) + ""]"");"
156966,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestJoinResolver.java,92,,"    for (String clause : StringUtils.splitByWholeSeparator(getAutoResolvedFromString(rewrittenQuery), ""join"")) {"
156967,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestJoinResolver.java,138,,"    String expected = getExpectedQuery(""testcube"", ""SELECT (citydim.name) as `name`, (testdim4.name) as `name`, """
156968,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestJoinResolver.java,142,,"        + "" right outer join "" + getDbName()"
156969,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestJoinResolver.java,177,,"    tConf.set(CubeQueryConfUtil.JOIN_TYPE_KEY, ""LEFTOUTER"");"
156970,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestJoinResolver.java,182,,"        + ""as `msr2` FROM "", "" left outer join "" + getDbName()"
156971,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestJoinResolver.java,184,,"      null, "" group by cubecity.name"", null, getWhereForHourly2days(""testcube"", ""c1_testfact2""));"
156972,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestJoinResolver.java,242,,"      getExpectedQuery(""citydim"", ""select citydim.name, citystate.name from "", "" inner join "" + getDbName()"
156973,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestJoinResolver.java,242,,"      getExpectedQuery(""citydim"", ""select citydim.name, citystate.name from "", "" inner join "" + getDbName()"
156974,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestJoinResolver.java,244,,"        null, "" limit 10"", ""c1_citytable"", true);"
156975,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestJoinResolver.java,253,,"      + ""statedim.id"";"
156976,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestJoinResolver.java,257,,"      getExpectedQuery(""citydim"", ""select citydim.name, statedim.name from "", "" inner join "" + getDbName()"
156977,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestJoinResolver.java,258,,"          + ""c1_statetable statedim on citydim.stateid = statedim.id and citydim.dt='latest' and statedim.dt='latest'"","
156978,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestJoinResolver.java,330,,"    expected = getExpectedQuery(""basecube"", ""SELECT (cubestate.name) as `name`, sum((basecube.msr2)) """
156979,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestJoinResolver.java,331,,"        + ""as `sum(msr2)` FROM "","
156980,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestJoinResolver.java,332,,"      "" join "" + getDbName() + ""c1_statetable cubestate ON basecube.stateid=cubeState.id and cubeState.dt= 'latest'"","
156981,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestJoinResolver.java,334,,"      null, getWhereForDailyAndHourly2days(""basecube"", ""c1_testfact1_base""));"
156982,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestJoinResolver.java,342,,"        "" join "" + getDbName() + ""c1_citytable citydim ON baseCube.cityid = citydim.id and citydim.dt = 'latest'"""
156983,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestJoinResolver.java,580,,"        + getDbName() + ""c1_testdim2tbl testdim2 ON testcube.dim2 = testdim2.id and testdim2.dt = 'latest'"""
156984,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestJoinResolver.java,584,,"      null, getWhereForHourly2days(""testcube"", ""c1_testfact2_raw""));"
156985,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestJoinResolver.java,608,,"        + "" dim4chain.dt = 'latest'"", null, ""group by dim4chain.name, dim3chain.id"", null,"
156986,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestMaxUpdateInterval.java,45,,"    ""2013-Jan-01"", ""2013-Dec-31"", ""2013-Feb-01"", ""2013-Apr-25"","
156987,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestORTimeRangeWriter.java,57,,"    System.out.println(""Expected :"" + StorageUtil.getWherePartClause(""dt"", ""test"", parts));"
156988,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestRewriterPlan.java,79,,"    Assert.assertTrue(plan.getTablesQueried().contains(""TestQueryRewrite.c1_testfact2""));"
156989,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestRewriterPlan.java,80,,"    Assert.assertTrue(plan.getTablesQueried().contains(""TestQueryRewrite.c1_citytable""));"
156990,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestRewriterPlan.java,84,,"    Assert.assertFalse(plan.getPartitions().get(""c1_testfact2"").isEmpty());"
156991,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestRewriterPlan.java,86,,"    Assert.assertFalse(plan.getPartitions().get(""citytable"").isEmpty());"
156992,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestStorageUtil.java,74,,"    System.out.println(""results:"" + result);"
156993,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestTimeRangeWriter.java,82,,"    System.out.println(""Expected :"" + StorageUtil.getWherePartClause(""dt"", ""test"", parts));"
156994,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestTimeRangeWriterWithQuery.java,103,,"    String hqlQuery = rewrite(""select SUM(msr2) from testCube"" + "" where "" + twoDaysInRangeClause, conf);"
156995,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestTimeRangeWriterWithQuery.java,103,,"    String hqlQuery = rewrite(""select SUM(msr2) from testCube"" + "" where "" + twoDaysInRangeClause, conf);"
156996,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestTimeRangeWriterWithQuery.java,111,,"    System.out.println(""HQL:"" + hqlQuery);"
156997,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestTimeRangeWriterWithQuery.java,119,,"      rewrite(""select SUM(msr2) from testCube"" + "" where "" + twoDaysInRangeClause + "" OR """
156998,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestTimeRangeWriterWithQuery.java,160,,"    whereClauses.put(getDbName() + ""c4_testfact2"", TestBetweenTimeRangeWriter.getBetweenClause(""timehourchain1"","
156999,./TargetProjects/lens/lens-cube/src/test/java/org/apache/lens/cube/parse/TestTimeRangeWriterWithQuery.java,161,,"      ""full_hour"", getUptoHour(TWODAYS_BACK),"
