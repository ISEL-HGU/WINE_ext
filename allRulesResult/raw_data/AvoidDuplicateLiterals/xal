11000,./TargetProjects/ant-ivy/test/java/org/apache/ivy/ant/IvyVarTest.java,34,,"        task.setValue(""myvalue"");"
11001,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/NormalRelativeUrlResolverTest.java,35,,"        assertEquals(new URL(""http://xxx/file2.txt""), t.getURL(base, ""file2.txt""));"
11002,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/NormalRelativeUrlResolverTest.java,40,,"        URL base = new URL(""file://xxx/file.txt"");"
11003,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/NormalRelativeUrlResolverTest.java,41,,"        assertEquals(new URL(""file://xxx/file2.txt""), t.getURL(base, ""file2.txt""));"
11004,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/cache/DefaultRepositoryCacheManagerTest.java,82,,"        artifact = createArtifact(""org"", ""module"", ""rev"", ""name"", ""type"", ""ext"");"
11005,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/cache/DefaultRepositoryCacheManagerTest.java,82,,"        artifact = createArtifact(""org"", ""module"", ""rev"", ""name"", ""type"", ""ext"");"
11006,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/cache/DefaultRepositoryCacheManagerTest.java,82,,"        artifact = createArtifact(""org"", ""module"", ""rev"", ""name"", ""type"", ""ext"");"
11007,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/cache/DefaultRepositoryCacheManagerTest.java,82,,"        artifact = createArtifact(""org"", ""module"", ""rev"", ""name"", ""type"", ""ext"");"
11008,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/cache/DefaultRepositoryCacheManagerTest.java,82,,"        artifact = createArtifact(""org"", ""module"", ""rev"", ""name"", ""type"", ""ext"");"
11009,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/cache/DefaultRepositoryCacheManagerTest.java,82,,"        artifact = createArtifact(""org"", ""module"", ""rev"", ""name"", ""type"", ""ext"");"
11010,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/event/IvyEventFilterTest.java,46,,"        md = new DefaultModuleDescriptor(ModuleRevisionId.newInstance(""foo"", ""bar"", ""1.0""),"
11011,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/event/IvyEventFilterTest.java,47,,"                ""integration"", new Date());"
11012,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/event/IvyEventFilterTest.java,58,,"        IvyEventFilter f = new IvyEventFilter(""pre-resolve"", null, null);"
11013,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/event/IvyEventFilterTest.java,60,,"        assertTrue(f.accept(new StartResolveEvent(md, new String[] {""default""})));"
11014,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/install/InstallTest.java,41,,"        ivy.configure(new File(""test/repositories/ivysettings.xml""));"
11015,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/install/InstallTest.java,43,,"        ivy.install(ModuleRevisionId.newInstance(""org1"", ""mod1.2"", ""2.0""), ivy.getSettings()"
11016,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/install/InstallTest.java,44,,"                .getDefaultResolver().getName(), ""install"", new InstallOptions());"
11017,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/install/InstallTest.java,46,,"        assertTrue(new File(""build/test/install/org1/mod1.2/ivy-2.0.xml"").exists());"
11018,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/install/InstallTest.java,47,,"        assertTrue(new File(""build/test/install/org1/mod1.2/mod1.2-2.0.jar"").exists());"
11019,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/install/InstallTest.java,55,,"        ivy.install(ModuleRevisionId.newInstance(""orgfailure"", ""modfailure"", ""1.0""), ivy"
11020,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/install/InstallTest.java,69,,"        ResolveReport rr = ivy.install(ModuleRevisionId.newInstance(""org.apache"", ""test"", ""1.0""),"
11021,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/module/descriptor/DefaultDependencyDescriptorTest.java,36,,"        assertEquals(""compile(default)"", replaceSelfFallbackPattern(""@(default)"", ""compile""));"
11022,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/module/descriptor/DefaultDependencyDescriptorTest.java,40,,"        assertEquals(""runtime"", replaceSelfFallbackPattern(""@"", ""runtime""));"
11023,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/module/id/ModuleIdTest.java,31,,"        String org = ""apache"";"
11024,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/module/id/ModuleIdTest.java,32,,"        String name = ""some-new-module"";"
11025,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/module/id/ModuleRulesTest.java,55,,"        assertRule(rule[0], ""apache#module1;1.5"");"
11026,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/publish/PublishEventsTest.java,190,,"            publishSources, ""default"", publishOptions);"
11027,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/publish/PublishEventsTest.java,194,,"        assertEquals(""pre-publish trigger fired and passed all tests"", 2, preTriggers);"
11028,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/publish/PublishEventsTest.java,195,,"        assertEquals(""post-publish trigger fired and passed all tests"", 2, postTriggers);"
11029,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/report/ResolveReportTest.java,106,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""org1"", ""mod1.1"", ""1.0"");"
11030,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/report/ResolveReportTest.java,109,,"        assertEquals(Collections.singletonList(""default""),"
11031,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/report/ResolveReportTest.java,113,,"        checkFixedMdDependency(fixedMd.getDependencies()[0], ""org1"", ""mod1.2"", ""2.0"", ""default"","
11032,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/report/ResolveReportTest.java,113,,"        checkFixedMdDependency(fixedMd.getDependencies()[0], ""org1"", ""mod1.2"", ""2.0"", ""default"","
11033,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/report/ResolveReportTest.java,151,,"            getResolveOptions(new String[] {""default"", ""extension""}));"
11034,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/report/ResolveReportTest.java,183,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""org1"", ""mod1.4"", ""1.0.2"");"
11035,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/report/ResolveReportTest.java,183,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""org1"", ""mod1.4"", ""1.0.2"");"
11036,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/report/ResolveReportTest.java,186,,"        assertEquals(Arrays.asList(""default"", ""compile""),"
11037,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/report/ResolveReportTest.java,215,,"        checkFixedMdDependency(fixedMd.getDependencies()[0], ""org1"", ""mod1.2"", ""[1.0,2.0["","
11038,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,117,,"        ivy.configure(new File(""test/repositories/ivysettings.xml""));"
11039,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,136,,"            getResolveOptions(new String[] {""default""}));"
11040,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,140,,"                .getDownloadReports(ModuleRevisionId.newInstance(""org15"", ""mod15.1"", ""1.1""));"
11041,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,142,,"        assertEquals(""number of downloaded artifacts not correct"", 1, dReports.length);"
11042,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,148,,"        assertTrue(""artifact name has not been retained: "" + cachePath,"
11043,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,152,,"            ModuleRevisionId.newInstance(""org14"", ""mod14.1"", ""1.1""));"
11044,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,152,,"            ModuleRevisionId.newInstance(""org14"", ""mod14.1"", ""1.1""));"
11045,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,202,,"                ""test/repositories/1/org1/mod1.1/ivys/ivy-1.0.xml""),"
11046,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,207,,"                .getDownloadReports(ModuleRevisionId.newInstance(""org1"", ""mod1.2"", ""2.0""));"
11047,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,207,,"                .getDownloadReports(ModuleRevisionId.newInstance(""org1"", ""mod1.2"", ""2.0""));"
11048,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,207,,"                .getDownloadReports(ModuleRevisionId.newInstance(""org1"", ""mod1.2"", ""2.0""));"
11049,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,214,,"        String expectedLocation = new File(""test/repositories/1/org1/mod1.2/jars/mod1.2-2.0.jar"")"
11050,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,289,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""org1"", ""mod1.1"", ""1.0"");"
11051,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,289,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""org1"", ""mod1.1"", ""1.0"");"
11052,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,297,,"        assertTrue(getArchiveFileInCache(""org1"", ""mod1.2"", ""2.0"", ""mod1.2"", ""jar"", ""jar"").exists());"
11053,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,403,,"        assertTrue(getArchiveFileInCache(ivy, ""myorg"", ""module3"", ""2.0"", ""module3"", ""jar"", ""jar"")"
11054,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,403,,"        assertTrue(getArchiveFileInCache(ivy, ""myorg"", ""module3"", ""2.0"", ""module3"", ""jar"", ""jar"")"
11055,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,476,,"            getResolveOptions(new String[] {""test""}));"
11056,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,554,,"        FileUtil.forceDelete(new File(""build/testCache2""));"
11057,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,590,,"        ivy.getSettings().setVariable(""ivy.cache.ttl.default"", ""10s"", true);"
11058,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,590,,"        ivy.getSettings().setVariable(""ivy.cache.ttl.default"", ""10s"", true);"
11059,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,595,,"                ""build/testCache2/mod1.2-1.5.jar""), null);"
11060,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,599,,"                ""test/repositories/1/org1/mod1.4/ivys/ivy-1.0.2.xml""),"
11061,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,603,,"        assertEquals(Collections.singleton(ModuleRevisionId.newInstance(""org1"", ""mod1.2"", ""1.5"")),"
11062,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,949,,"                ""test/repositories/1/org2/mod2.1/ivys/ivy-0.3.xml""),"
11063,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,992,,"            ModuleRevisionId.newInstance(""org1"", ""mod1.2"", ""local-20080708091023"")).exists());"
11064,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,996,,"        assertTrue(getArchiveFileInCache(""org1"", ""mod1.3"", ""3.0"", ""mod1.3-A"", ""jar"", ""jar"")"
11065,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,996,,"        assertTrue(getArchiveFileInCache(""org1"", ""mod1.3"", ""3.0"", ""mod1.3-A"", ""jar"", ""jar"")"
11066,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,996,,"        assertTrue(getArchiveFileInCache(""org1"", ""mod1.3"", ""3.0"", ""mod1.3-A"", ""jar"", ""jar"")"
11067,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,1017,,"            ModuleRevisionId.newInstance(""org2"", ""mod2.1"", ""0.3-local-20050213110000"")).exists());"
11068,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,1017,,"            ModuleRevisionId.newInstance(""org2"", ""mod2.1"", ""0.3-local-20050213110000"")).exists());"
11069,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,1033,,"        assertFalse(getIvyFileInCache(ModuleRevisionId.newInstance(""org2"", ""mod2.1"", ""0.4""))"
11070,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,1078,,"            getResolveOptions(new String[] {""extension""}));"
11071,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,1082,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""org6"", ""mod6.1"", ""0.3"");"
11072,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,1082,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""org6"", ""mod6.1"", ""0.3"");"
11073,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,1082,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""org6"", ""mod6.1"", ""0.3"");"
11074,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,1153,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""org6"", ""mod6.2"", ""0.3"");"
11075,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,1197,,"        crr = report.getConfigurationReport(""run"");"
11076,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,1202,,"        crr = report.getConfigurationReport(""compile"");"
11077,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,1210,,"        assertContainsArtifact(""org1"", ""mod1.2"", ""2.2"", ""mod1.2"", ""jar"", ""jar"", crr);"
11078,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,1267,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""org6"", ""mod6.2"", ""0.5"");"
11079,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,1286,,"        assertTrue(getIvyFileInCache(ModuleRevisionId.newInstance(""org1"", ""mod1.2"", ""2.1""))"
11080,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,1356,,"        assertTrue(getArchiveFileInCache(""org1"", ""mod1.3"", ""3.0"", ""mod1.3-B"", ""jar"", ""jar"")"
11081,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,1403,,"            crr.getDownloadReports(ModuleRevisionId.newInstance(""medicel"", ""C"", ""1.0"")).length);"
11082,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,1432,,"            crr.getDownloadReports(ModuleRevisionId.newInstance(""medicel"", ""module_a"", ""local"")).length);"
11083,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,1432,,"            crr.getDownloadReports(ModuleRevisionId.newInstance(""medicel"", ""module_a"", ""local"")).length);"
11084,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,1459,,"            getResolveOptions(new String[] {""*(public)""}));"
11085,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,1463,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""org2"", ""mod2.2"", ""0.8"");"
11086,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,1506,,"            getResolveOptions(new String[] {""myconf1""}));"
11087,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,1581,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""org2"", ""mod2.3"", ""0.4"");"
11088,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,1588,,"        assertTrue(getArchiveFileInCache(""org2"", ""mod2.1"", ""0.3"", ""art21A"", ""jar"", ""jar"").exists());"
11089,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,1589,,"        assertFalse(getArchiveFileInCache(""org2"", ""mod2.1"", ""0.3"", ""art21B"", ""jar"", ""jar"").exists());"
11090,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,1665,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""org2"", ""mod2.3"", ""0.6"");"
11091,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,1875,,"        int mod32Index = revisions.indexOf(ModuleRevisionId.newInstance(""org3"", ""mod3.2"", ""1.4""));"
11092,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,1876,,"        int mod51Index = revisions.indexOf(ModuleRevisionId.newInstance(""org5"", ""mod5.1"", ""4.2""));"
11093,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,1876,,"        int mod51Index = revisions.indexOf(ModuleRevisionId.newInstance(""org5"", ""mod5.1"", ""4.2""));"
11094,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,1876,,"        int mod51Index = revisions.indexOf(ModuleRevisionId.newInstance(""org5"", ""mod5.1"", ""4.2""));"
11095,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,1906,,"            getResolveOptions(new String[] {""runtime""}));"
11096,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,2011,,"                        ModuleRevisionId.newInstance(""org2"", ""mod2.1"", ""0.3.2""),"
11097,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,2075,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""org4"", ""mod4.1"", ""4.0"");"
11098,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,2075,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""org4"", ""mod4.1"", ""4.0"");"
11099,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,2075,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""org4"", ""mod4.1"", ""4.0"");"
11100,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,2089,,"        assertTrue(getIvyFileInCache(ModuleRevisionId.newInstance(""org3"", ""mod3.1"", ""1.0""))"
11101,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,2104,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""org4"", ""mod4.1"", ""4.1"");"
11102,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,2126,,"                if (""revision"".equals(qName) && ""2.0"".equals(attributes.getValue(""name""))) {"
11103,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,2219,,"            crr.getDownloadReports(ModuleRevisionId.newInstance(""myorg"", ""commons-lang"", ""1.0.1"")).length);"
11104,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,2219,,"            crr.getDownloadReports(ModuleRevisionId.newInstance(""myorg"", ""commons-lang"", ""1.0.1"")).length);"
11105,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,2278,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""org7"", ""mod7.3"", ""1.0"");"
11106,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,2288,,"        assertTrue(getIvyFileInCache(ModuleRevisionId.newInstance(""org7"", ""mod7.1"", ""2.0""))"
11107,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,2404,,"        assertTrue(getArchiveFileInCache(""org5"", ""mod5.1"", ""4.2"", ""art51A"", ""jar"", ""jar"").exists());"
11108,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,2405,,"        assertTrue(getArchiveFileInCache(""org5"", ""mod5.1"", ""4.2"", ""art51B"", ""jar"", ""jar"").exists());"
11109,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,2407,,"        assertTrue(getIvyFileInCache(ModuleRevisionId.newInstance(""org5"", ""mod5.2"", ""1.0""))"
11110,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,2526,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""org6"", ""mod6.1"", ""1.2"");"
11111,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,2803,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""org4"", ""mod4.1"", ""4.5"");"
11112,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,3079,,"        assertFalse(getIvyFileInCache(ModuleRevisionId.newInstance(""org8"", ""mod8.3"", ""1.0""))"
11113,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,3081,,"        assertTrue(getIvyFileInCache(ModuleRevisionId.newInstance(""org8"", ""mod8.1"", ""1.0""))"
11114,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,3250,,"        ivy.configure(new File(""test/repositories/branches/ivysettings.xml""));"
11115,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,3258,,"        assertTrue(getArchiveFileInCache(ivy, ""foo#foo1#trunk;3"", ""foo1"", ""jar"", ""jar"").exists());"
11116,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,3273,,"        assertTrue(getArchiveFileInCache(ivy, ""foo#foo1#branch1;4"", ""foo1"", ""jar"", ""jar"").exists());"
11117,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,3452,,"        ResolveReport report = ivy.resolve(new File(""test/repositories/2/mod6.3/ivy-1.0.xml""),"
11118,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,3508,,"        ResolveReport report = ivy.resolve(new File(""test/repositories/2/mod6.3/ivy-1.2.xml""),"
11119,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,3549,,"        assertTrue(getIvyFileInCache(ModuleRevisionId.newInstance(""org11"", ""mod11.2"", ""1.0""))"
11120,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,3574,,"        assertTrue(new File(""build/cache/xerces/xerces/jars/xmlParserAPIs-2.6.2.jar"").exists());"
11121,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,3575,,"        assertTrue(new File(""build/cache/xerces/xerces/jars/xercesImpl-2.6.2.jar"").exists());"
11122,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,3641,,"        assertTrue(getIvyFileInCache(ModuleRevisionId.newInstance(""myorg"", ""modD"", ""1.1"")).exists());"
11123,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,3674,,"        assertTrue(getIvyFileInCache(ModuleRevisionId.newInstance(""myorg"", ""modB"", ""1.0"")).exists());"
11124,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,3718,,"        assertTrue(modRevIds.contains(ModuleRevisionId.newInstance(""org"", ""dep1"", ""1.0"")));"
11125,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,3770,,"        assertTrue(modRevIds.contains(ModuleRevisionId.newInstance(""junit"", ""junit"", ""4.4"")));"
11126,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,3770,,"        assertTrue(modRevIds.contains(ModuleRevisionId.newInstance(""junit"", ""junit"", ""4.4"")));"
11127,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,3912,,"        assertFalse(getArchiveFileInCache(""org8"", ""mod8.1"", ""1.0"", ""a-private"", ""txt"", ""txt"")"
11128,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,3912,,"        assertFalse(getArchiveFileInCache(""org8"", ""mod8.1"", ""1.0"", ""a-private"", ""txt"", ""txt"")"
11129,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,3960,,"        ivy.configure(new File(""test/repositories/IVY-84/ivysettings.xml""));"
11130,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,3966,,"        assertContainsArtifact(""test"", ""a"", ""1.0.2"", ""a"", ""txt"", ""txt"", conf);"
11131,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,3967,,"        assertDoesntContainArtifact(""test"", ""a"", ""1.0.2"", ""a-bt"", ""txt"", ""txt"", conf);"
11132,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,3969,,"        assertDoesntContainArtifact(""test"", ""b"", ""1.0.2"", ""b-bt"", ""txt"", ""txt"", conf);"
11133,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,3971,,"        assertDoesntContainArtifact(""test"", ""c"", ""1.0.2"", ""c-bt"", ""txt"", ""txt"", conf);"
11134,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,4008,,"            getResolveOptions(new String[] {""buildtime""}));"
11135,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,4241,,"        assertEquals(ModuleRevisionId.newInstance(""org2"", ""mod2.6"", ""0.9""),"
11136,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,4241,,"        assertEquals(ModuleRevisionId.newInstance(""org2"", ""mod2.6"", ""0.9""),"
11137,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,4441,,"        ivy.resolve(new File(""test/repositories/2/mod5.2/ivy-3.0.xml""),"
11138,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,4446,,"        assertFalse(getArchiveFileInCache(""org5"", ""mod5.1"", ""4.4"", ""art51B"", ""dll"", ""dll"").exists());"
11139,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,4464,,"        assertTrue(getArchiveFileInCache(""org2"", ""mod2.2"", ""0.9"", ""art22-1"", ""jar"", ""jar"").exists());"
11140,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,4465,,"        assertTrue(getArchiveFileInCache(""org2"", ""mod2.2"", ""0.9"", ""art22-2"", ""jar"", ""jar"").exists());"
11141,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,4468,,"        assertTrue(getArchiveFileInCache(""org2"", ""mod2.1"", ""0.5"", ""art21AB"", ""jar"", ""jar"").exists());"
11142,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,4515,,"        assertTrue(getArchiveFileInCache(""org2"", ""mod2.8"", ""0.6"", ""art28-linux-debug-thread"","
11143,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,4601,,"        ivy.configure(new File(""test/repositories/m2/ivysettings.xml""));"
11144,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,4608,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""org.apache"", ""test3"", ""1.0"");"
11145,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,4608,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""org.apache"", ""test3"", ""1.0"");"
11146,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,4614,,"        assertTrue(getIvyFileInCache(ModuleRevisionId.newInstance(""org.apache"", ""test2"", ""1.0""))"
11147,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,4820,,"                .newInstance(""org.apache"", ""test-classifier"", ""1.0"");"
11148,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,4827,,"            ModuleRevisionId.newInstance(""org.apache"", ""test-classified"", ""1.0"")).exists());"
11149,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,4830,,"        cmap.put(""classifier"", ""asl"");"
11150,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,4879,,"            ModuleRevisionId.newInstance(""org.apache"", ""test-sources"", ""1.0"")).exists());"
11151,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,4905,,"        assertTrue(getIvyFileInCache(ModuleRevisionId.newInstance(""org.apache"", ""test-src"", ""1.0""))"
11152,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,4976,,"        ivy.configure(new File(""test/repositories/parentPom/ivysettings.xml""));"
11153,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,4977,,"        ivy.getSettings().setDefaultResolver(""parentChain"");"
11154,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,4985,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""org.apache.dm"", ""test"", ""1.0"");"
11155,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,5103,,"            ModuleRevisionId.newInstance(""org.apache.systemDm"", ""test"", ""1.0""),"
11156,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,5245,,"        mrid = ModuleRevisionId.newInstance(""org.apache.dm"", ""test4"", ""1.0"");"
11157,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,5278,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""org.apache.dm"", ""test5"", ""2.0"");"
11158,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,5306,,"            ModuleRevisionId.newInstance(""org.apache"", ""test-SNAPSHOT1"", ""2.0.2-SNAPSHOT""))"
11159,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,5306,,"            ModuleRevisionId.newInstance(""org.apache"", ""test-SNAPSHOT1"", ""2.0.2-SNAPSHOT""))"
11160,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,5359,,"            ModuleRevisionId.newInstance(""org.apache"", ""test-SNAPSHOT2"", ""2.0.2-SNAPSHOT""))"
11161,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,5396,,"        ivy.configure(new File(""test/repositories/namespace/ivysettings.xml""));"
11162,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,5402,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""apache"", ""namespace"", ""1.0"");"
11163,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,5402,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""apache"", ""namespace"", ""1.0"");"
11164,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,5408,,"        File ivyFile = getIvyFileInCache(ModuleRevisionId.newInstance(""systemorg"", ""systemmod"","
11165,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,5408,,"        File ivyFile = getIvyFileInCache(ModuleRevisionId.newInstance(""systemorg"", ""systemmod"","
11166,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,5465,,"        assertTrue(getIvyFileInCache(ModuleRevisionId.newInstance(""systemorg2"", ""system-2"", ""1.0""))"
11167,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,5533,,"        assertFalse(getIvyFileInCache(ModuleRevisionId.newInstance(""org12"", ""mod12.1"", ""1.0""))"
11168,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,5533,,"        assertFalse(getIvyFileInCache(ModuleRevisionId.newInstance(""org12"", ""mod12.1"", ""1.0""))"
11169,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,5592,,"        ivy.configure(new File(""test/repositories/extra-attributes/ivysettings.xml""));"
11170,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,6109,,"        File deliveredIvyFile = new File(""build/test/deliver/ivy-1.xml"");"
11171,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,6115,,"        assertEquals(ModuleRevisionId.newInstance(""myorg"", ""modA"", ""0""),"
11172,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,6193,,"        opts.setResolveId(""resolveid"");"
11173,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,6477,,"        final ModuleRevisionId apiDependencyId = ModuleRevisionId.newInstance(""org.apache"", ""1580-foo-api"", ""1.2.3"");"
11174,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,6477,,"        final ModuleRevisionId apiDependencyId = ModuleRevisionId.newInstance(""org.apache"", ""1580-foo-api"", ""1.2.3"");"
11175,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,6479,,"        assertNotNull(""Dependency "" + apiDependencyId + "" not found in conf resolve report"", apiDepNode);"
11176,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/resolve/ResolveTest.java,6479,,"        assertNotNull(""Dependency "" + apiDependencyId + "" not found in conf resolve report"", apiDepNode);"
11177,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/retrieve/RetrieveTest.java,119,,"                ""test/repositories/1/org1/mod1.1/ivys/ivy-1.0.xml"").toURI().toURL(),"
11178,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/retrieve/RetrieveTest.java,125,,"        String pattern = ""build/test/retrieve/[module]/[conf]/[artifact]-[revision].[ext]"";"
11179,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/retrieve/RetrieveTest.java,128,,"        assertTrue(new File(IvyPatternHelper.substitute(pattern, ""org1"", ""mod1.2"", ""2.0"", ""mod1.2"","
11180,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/retrieve/RetrieveTest.java,128,,"        assertTrue(new File(IvyPatternHelper.substitute(pattern, ""org1"", ""mod1.2"", ""2.0"", ""mod1.2"","
11181,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/retrieve/RetrieveTest.java,128,,"        assertTrue(new File(IvyPatternHelper.substitute(pattern, ""org1"", ""mod1.2"", ""2.0"", ""mod1.2"","
11182,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/retrieve/RetrieveTest.java,129,,"            ""jar"", ""jar"", ""default"")).exists());"
11183,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/retrieve/RetrieveTest.java,129,,"            ""jar"", ""jar"", ""default"")).exists());"
11184,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/retrieve/RetrieveTest.java,531,,"        final ModuleRevisionId fooBar123Mrid = ModuleRevisionId.newInstance(""org"", ""foo-bar"", ""1.2.3"");"
11185,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/retrieve/RetrieveTest.java,531,,"        final ModuleRevisionId fooBar123Mrid = ModuleRevisionId.newInstance(""org"", ""foo-bar"", ""1.2.3"");"
11186,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/retrieve/RetrieveTest.java,533,,"        assertNotNull(""No artifact download report found for the "" + fooBar123Mrid + "" dependency"", downloadReports);"
11187,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/settings/IvySettingsTest.java,62,,"        assertNull(settings.getVariable(""foo""));"
11188,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/settings/IvySettingsTest.java,63,,"        settings.setVariable(""foo"", ""bar"", false, null, null);"
11189,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/settings/IvySettingsTest.java,76,,"        settings.setVariable(""bar"", ""foo"", true, ""noexist"", null);"
11190,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/settings/IvySettingsTest.java,84,,"        assertNull(settings.getVariable(""thing""));"
11191,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/settings/IvySettingsTest.java,93,,"        assertNull(settings.getVariable(""ivy""));"
11192,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/settings/IvySettingsTest.java,94,,"        settings.setVariable(""ivy"", ""rocks"", true, ""noexist"", ""foo"");"
11193,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/settings/XmlSettingsParserTest.java,76,,"        assertEquals(""mycache"", defaultCache.getName());"
11194,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/settings/XmlSettingsParserTest.java,107,,"        DependencyResolver internal = settings.getResolver(""internal"");"
11195,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/settings/XmlSettingsParserTest.java,126,,"                settings.getResolver(ModuleRevisionId.newInstance(""unknown"", ""lib"", ""1.0"")).getName());"
11196,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/settings/XmlSettingsParserTest.java,128,,"                settings.getResolver(ModuleRevisionId.newInstance(""apache"", ""ant"", ""1.0"")).getName());"
11197,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/settings/XmlSettingsParserTest.java,130,,"                settings.getResolver(ModuleRevisionId.newInstance(""apache"", ""ivy"", ""2.0"")).getName());"
11198,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/settings/XmlSettingsParserTest.java,196,,"        assertEquals(""default"", settings.getResolveMode(new ModuleId(""apache"", ""ant"")));"
11199,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/settings/XmlSettingsParserTest.java,465,,"        DependencyResolver testResolver = settings.getResolver(""test"");"
11200,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/settings/XmlSettingsParserTest.java,663,,"        settings.setBaseDir(new File(""test/base/dir""));"
11201,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/settings/XmlSettingsParserTest.java,716,,"        assertEquals(""Unexpected connection timeout "" + timeout1.getConnectionTimeout() + "" on time constraint test-timeout-1"", 100, timeout1.getConnectionTimeout());"
11202,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/settings/XmlSettingsParserTest.java,717,,"        assertEquals(""Unexpected read timeout "" + timeout1.getReadTimeout() + "" on time constraint test-timeout-1"", 500, timeout1.getReadTimeout());"
11203,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/settings/XmlSettingsParserTest.java,755,,"        assertEquals(""Unexpected connection timeout "" + resolver1Timeouts.getConnectionTimeout() + "" on resolver "" + resolver1.getName(), 400, resolver1Timeouts.getConnectionTimeout());"
11204,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/sort/SortTest.java,61,,"        md1 = createModuleDescriptorToSort(""md1"", null); // The revision is often not set in the"
11205,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/sort/SortTest.java,63,,"        md2 = createModuleDescriptorToSort(""md2"", ""rev2""); // But sometimes they are set"
11206,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/sort/SortTest.java,63,,"        md2 = createModuleDescriptorToSort(""md2"", ""rev2""); // But sometimes they are set"
11207,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/sort/SortTest.java,64,,"        md3 = createModuleDescriptorToSort(""md3"", ""rev3"");"
11208,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/sort/SortTest.java,64,,"        md3 = createModuleDescriptorToSort(""md3"", ""rev3"");"
11209,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/sort/SortTest.java,65,,"        md4 = createModuleDescriptorToSort(""md4"", ""rev4"");"
11210,./TargetProjects/ant-ivy/test/java/org/apache/ivy/core/sort/SortTest.java,78,,"        addDependency(md2, ""md1"", ""rev1"");"
11211,./TargetProjects/ant-ivy/test/java/org/apache/ivy/osgi/core/ManifestHeaderTest.java,54,,"            doubleValue.addValue(""value1"");"
11212,./TargetProjects/ant-ivy/test/java/org/apache/ivy/osgi/core/ManifestHeaderTest.java,136,,"                    {""value1;att=value2;att2=other"", ""value1;att='value2';att2=other""},"
11213,./TargetProjects/ant-ivy/test/java/org/apache/ivy/osgi/core/ManifestParserTest.java,48,,"        expectedRequires.add(new BundleRequirement(BundleInfo.BUNDLE_TYPE, ""com.acme.bravo"","
11214,./TargetProjects/ant-ivy/test/java/org/apache/ivy/osgi/core/ManifestParserTest.java,108,,"        assertEquals(""foo bar\n"", ManifestParser.formatLines(""foo bar""));"
11215,./TargetProjects/ant-ivy/test/java/org/apache/ivy/osgi/obr/OBRResolverTest.java,65,,"        BundleInfo.BUNDLE_TYPE, ""org.apache.ivy.osgi.testbundle"", ""1.2.3"");"
11216,./TargetProjects/ant-ivy/test/java/org/apache/ivy/osgi/obr/OBRResolverTest.java,65,,"        BundleInfo.BUNDLE_TYPE, ""org.apache.ivy.osgi.testbundle"", ""1.2.3"");"
11217,./TargetProjects/ant-ivy/test/java/org/apache/ivy/osgi/obr/OBRResolverTest.java,218,,"        genericTestResolve(jarName, ""default"", new ModuleRevisionId[] {MRID_TEST_BUNDLE});"
11218,./TargetProjects/ant-ivy/test/java/org/apache/ivy/osgi/obr/OBRResolverTest.java,319,,"                new FileInputStream(""test/test-repo/bundlerepo/"" + jarName));"
11219,./TargetProjects/ant-ivy/test/java/org/apache/ivy/osgi/util/VersionRangeTest.java,30,,"        assertEquals(new VersionRange(false, new Version(""1.0.0""), false, null), new VersionRange("
11220,./TargetProjects/ant-ivy/test/java/org/apache/ivy/osgi/util/VersionRangeTest.java,35,,"        assertEquals(new VersionRange(false, new Version(""1.0.0""), false, new Version(""2.0.0"")),"
11221,./TargetProjects/ant-ivy/test/java/org/apache/ivy/osgi/util/VersionRangeTest.java,36,,"            new VersionRange(""[1.0.0,2.0.0]""));"
11222,./TargetProjects/ant-ivy/test/java/org/apache/ivy/osgi/util/VersionRangeTest.java,57,,"        assertFalse(new VersionRange(""1.2.3"").contains(""1.0.0""));"
11223,./TargetProjects/ant-ivy/test/java/org/apache/ivy/osgi/util/VersionRangeTest.java,62,,"        assertFalse(new VersionRange(""[1.0.0,2.0.0]"").contains(""0.9.0""));"
11224,./TargetProjects/ant-ivy/test/java/org/apache/ivy/osgi/util/VersionRangeTest.java,64,,"        assertTrue(new VersionRange(""[1.0.0,2.0.0]"").contains(""1.999.999""));"
11225,./TargetProjects/ant-ivy/test/java/org/apache/ivy/osgi/util/VersionRangeTest.java,66,,"        assertFalse(new VersionRange(""[1.0.0,2.0.0]"").contains(""2.1.0""));"
11226,./TargetProjects/ant-ivy/test/java/org/apache/ivy/osgi/util/VersionRangeTest.java,67,,"        assertFalse(new VersionRange(""[1.0.0,2.0.0]"").contains(""2.0.1""));"
11227,./TargetProjects/ant-ivy/test/java/org/apache/ivy/osgi/util/VersionRangeTest.java,69,,"        assertFalse(new VersionRange(""[1.0.0,2]"").contains(""0.9.0""));"
11228,./TargetProjects/ant-ivy/test/java/org/apache/ivy/osgi/util/VersionRangeTest.java,76,,"        assertFalse(new VersionRange(""(1.0.0,2.0.0)"").contains(""0.9.0""));"
11229,./TargetProjects/ant-ivy/test/java/org/apache/ivy/osgi/util/VersionRangeTest.java,83,,"        assertFalse(new VersionRange(""(1.0.0,)"").contains(""0.9.0""));"
11230,./TargetProjects/ant-ivy/test/java/org/apache/ivy/osgi/util/VersionRangeTest.java,90,,"        assertFalse(new VersionRange(""(1.0.0,]"").contains(""0.9.0""));"
11231,./TargetProjects/ant-ivy/test/java/org/apache/ivy/osgi/util/VersionTest.java,39,,"        v = new Version(""1.2.3"");"
11232,./TargetProjects/ant-ivy/test/java/org/apache/ivy/osgi/util/VersionTest.java,43,,"        v = new Version(""1.2.3.abc"");"
11233,./TargetProjects/ant-ivy/test/java/org/apache/ivy/osgi/util/VersionTest.java,55,,"        assertTrue(new Version(""1.2.3.xyz"").compareTo(new Version(""1.2.3"")) > 0);"
11234,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/circular/WarnCircularDependencyStrategyTest.java,66,,"        strategy.handleCircularDependency(TestHelper.parseMridsToArray(""#A;1.1, #B;1.0""));"
11235,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/conflict/LatestCompatibleConflictManagerTest.java,62,,"        fixture.addMD(""#A;1-> { #B;1.4 #C;[2.0,2.5] }"").addMD(""#B;1.4->#D;1.5"")"
11236,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/conflict/LatestCompatibleConflictManagerTest.java,63,,"                .addMD(""#C;2.5->#D;[1.0,1.6]"").addMD(""#D;1.5"").addMD(""#D;1.6"").init();"
11237,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/conflict/LatestCompatibleConflictManagerTest.java,63,,"                .addMD(""#C;2.5->#D;[1.0,1.6]"").addMD(""#D;1.5"").addMD(""#D;1.6"").init();"
11238,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/conflict/LatestCompatibleConflictManagerTest.java,63,,"                .addMD(""#C;2.5->#D;[1.0,1.6]"").addMD(""#D;1.5"").addMD(""#D;1.6"").init();"
11239,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/conflict/LatestCompatibleConflictManagerTest.java,64,,"        resolveAndAssert(""#A;1"", ""#B;1.4, #C;2.5, #D;1.5"");"
11240,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/conflict/LatestCompatibleConflictManagerTest.java,70,,"                .addMD(""#B;1.5->#D;2.0"").addMD(""#C;2.5->#D;[1.0,1.6]"").addMD(""#D;1.5"")"
11241,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/conflict/LatestCompatibleConflictManagerTest.java,71,,"                .addMD(""#D;1.6"").addMD(""#D;2.0"").init();"
11242,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/conflict/LatestConflictManagerTest.java,95,,"        ConfigurationResolveReport defaultReport = report.getConfigurationReport(""default"");"
11243,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/conflict/LatestConflictManagerTest.java,115,,"        ivy.getSettings().setVariable(""ivy.log.conflict.resolution"", ""true"", true);"
11244,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/conflict/LatestConflictManagerTest.java,115,,"        ivy.getSettings().setVariable(""ivy.log.conflict.resolution"", ""true"", true);"
11245,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/latest/LatestRevisionStrategyTest.java,34,,"        ArtifactInfo[] revs = toMockAI(new String[] {""0.2a"", ""0.2_b"", ""0.2rc1"", ""0.2-final"","
11246,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/latest/LatestRevisionStrategyTest.java,35,,"                ""1.0-dev1"", ""1.0-dev2"", ""1.0-alpha1"", ""1.0-alpha2"", ""1.0-beta1"", ""1.0-beta2"","
11247,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/latest/LatestRevisionStrategyTest.java,36,,"                ""1.0-gamma"", ""1.0-rc1"", ""1.0-rc2"", ""1.0"", ""1.0.1"", ""2.0""});"
11248,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/lock/ArtifactLockStrategyTest.java,74,,"            ""org6#mod6.4;3"", 10);"
11249,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/matcher/AbstractPatternMatcherTest.java,56,,"            assertTrue(""Expression '"" + expression + ""' should be exact"", matcher.isExact());"
11250,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/namespace/MRIDTransformationRuleTest.java,30,,"        r.addSrc(new MRIDRule(""apache"", ""commons.+"", null));"
11251,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/namespace/MRIDTransformationRuleTest.java,33,,"        assertEquals(ModuleRevisionId.newInstance(""commons-client"", ""commons-client"", ""1.0""),"
11252,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/namespace/MRIDTransformationRuleTest.java,33,,"        assertEquals(ModuleRevisionId.newInstance(""commons-client"", ""commons-client"", ""1.0""),"
11253,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/namespace/MRIDTransformationRuleTest.java,35,,"        assertEquals(ModuleRevisionId.newInstance(""apache"", ""module"", ""1.0""),"
11254,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/m2/MavenVersionRangeParserTest.java,37,,"        assertTrue(""Exact value was expected to match"", MavenVersionRangeParser.rangeAccepts(""1.0"", ""1.0""));"
11255,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/m2/MavenVersionRangeParserTest.java,48,,"        assertTrue(""<= range was expected to match"", MavenVersionRangeParser.rangeAccepts(range, ""1""));"
11256,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/m2/MavenVersionRangeParserTest.java,67,,"        assertTrue(""'<' range was expected to match"", MavenVersionRangeParser.rangeAccepts(range, ""1""));"
11257,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/m2/MavenVersionRangeParserTest.java,97,,"        assertTrue("">= range was expected to match"", MavenVersionRangeParser.rangeAccepts(range, ""7""));"
11258,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/m2/MavenVersionRangeParserTest.java,104,,"        assertFalse("">= range wasn't expected to match"", MavenVersionRangeParser.rangeAccepts(range, ""5.0.1""));"
11259,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/m2/MavenVersionRangeParserTest.java,117,,"        assertTrue(""'>' range was expected to match"", MavenVersionRangeParser.rangeAccepts(range, ""12""));"
11260,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/m2/MavenVersionRangeParserTest.java,135,,"        assertTrue(""Range with multiple sets was expected to match"", MavenVersionRangeParser.rangeAccepts(range, ""1.0""));"
11261,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParserTest.java,126,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""org.apache"", ""test"", ""1.0"");"
11262,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParserTest.java,126,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""org.apache"", ""test"", ""1.0"");"
11263,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParserTest.java,126,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""org.apache"", ""test"", ""1.0"");"
11264,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParserTest.java,133,,"        Artifact[] artifact = md.getArtifacts(""master"");"
11265,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParserTest.java,137,,"        assertEquals(""jar"", artifact[0].getExt());"
11266,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParserTest.java,302,,"        assertEquals(ModuleRevisionId.newInstance(""commons-logging"", ""commons-logging"", ""1.0.4""),"
11267,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParserTest.java,302,,"        assertEquals(ModuleRevisionId.newInstance(""commons-logging"", ""commons-logging"", ""1.0.4""),"
11268,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParserTest.java,368,,"            getClass().getResource(""test-version.pom""), false);"
11269,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParserTest.java,473,,"            ModuleRevisionId.newInstance(""org.springframework"", ""spring-hibernate3"", ""2.0.2""),"
11270,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParserTest.java,538,,"        assertEquals(ModuleRevisionId.newInstance(""cglib"", ""cglib"", ""2.0.2""),"
11271,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParserTest.java,540,,"        assertEquals(new HashSet<>(Arrays.asList(""compile"", ""runtime"")),"
11272,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParserTest.java,540,,"        assertEquals(new HashSet<>(Arrays.asList(""compile"", ""runtime"")),"
11273,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParserTest.java,542,,"        assertEquals(new HashSet<>(Arrays.asList(""master(*)"", ""compile(*)"")),"
11274,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParserTest.java,542,,"        assertEquals(new HashSet<>(Arrays.asList(""master(*)"", ""compile(*)"")),"
11275,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParserTest.java,544,,"        assertEquals(new HashSet<>(Collections.singletonList(""runtime(*)"")),"
11276,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParserTest.java,813,,"            ModuleRevisionId.newInstance(""commons-collection"", ""commons-collection"", ""1.0.5""),"
11277,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorWriterTest.java,58,,"                .replaceAll(""\r\n"", ""\n"").replace('\r', '\n');"
11278,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorWriterTest.java,81,,"            new IvySettings(), getClass().getResource(""test-dependencies-with-scope.pom""), false);"
11279,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParserTest.java,93,,"        assertEquals(""myorg"", md.getModuleRevisionId().getOrganisation());"
11280,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParserTest.java,94,,"        assertEquals(""mymodule"", md.getModuleRevisionId().getName());"
11281,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParserTest.java,96,,"        assertEquals(""integration"", md.getStatus());"
11282,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParserTest.java,99,,"        assertEquals(Collections.singletonList(new Configuration(""default"")),"
11283,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParserTest.java,105,,"        assertEquals(""jar"", md.getArtifacts(""default"")[0].getType());"
11284,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParserTest.java,119,,"        assertEquals(""myval"", mrid.getExtraAttribute(""e:myextra""));"
11285,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParserTest.java,134,,"        assertEquals(""myrev"", md.getModuleRevisionId().getRevision());"
11286,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParserTest.java,242,,"        assertEquals(""e:someExtra"", someExtraElement.getName());"
11287,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParserTest.java,243,,"        assertEquals(""56576"", someExtraElement.getContent());"
11288,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParserTest.java,250,,"        assertConf(md, ""myconf1"", ""desc 1"", PUBLIC, new String[0]);"
11289,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParserTest.java,251,,"        assertConf(md, ""myconf2"", ""desc 2"", PUBLIC, new String[0]);"
11290,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParserTest.java,252,,"        assertConf(md, ""myconf3"", ""desc 3"", PRIVATE, new String[0]);"
11291,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParserTest.java,253,,"        assertConf(md, ""myconf4"", ""desc 4"", PUBLIC, new String[] {"
11292,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParserTest.java,257,,"        assertArtifacts(md.getArtifacts(""myconf1""), new String[] {""myartifact1"", ""myartifact2"","
11293,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParserTest.java,269,,"        DependencyDescriptor dd = getDependency(dependencies, ""mymodule2"");"
11294,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParserTest.java,272,,"        assertEquals(""2.0"", dd.getDependencyRevisionId().getRevision());"
11295,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParserTest.java,293,,"        assertEquals(""yourorg"", dd.getDependencyId().getOrganisation());"
11296,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParserTest.java,318,,"        assertEquals(Collections.singletonList(""yourconf1""),"
11297,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParserTest.java,333,,"        assertEquals(Arrays.asList(""yourconf1"", ""yourconf2""),"
11298,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParserTest.java,425,,"        assertDependencyArtifacts(dd, new String[] {""myconf1""}, new String[] {""yourartifact8-1"","
11299,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParserTest.java,426,,"                ""yourartifact8-2""});"
11300,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParserTest.java,456,,"        assertDependencyArtifactIncludeRules(dd, new String[] {""myconf1""}, new String[] {""your.*"","
11301,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParserTest.java,465,,"            new String[] {""toexclude""});"
11302,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParserTest.java,486,,"        assertTrue(fcm.getRevs().contains(""1.0""));"
11303,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParserTest.java,669,,"        DependencyDescriptor dd = getDependency(dependencies, ""mymodule1"");"
11304,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParserTest.java,683,,"        assertEquals(Collections.singletonList(""test""),"
11305,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParserTest.java,842,,"            Arrays.asList(new Configuration(""conf1"", PUBLIC, """", new String[0], true, null),"
11306,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParserTest.java,843,,"                    new Configuration(""conf2"", PRIVATE, """", new String[0], true, null)),"
11307,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParserTest.java,974,,"        Configuration allPublic = md.getConfiguration(""all-public"");"
11308,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParserTest.java,995,,"        assertEquals(Arrays.asList(""default"", ""test"", ""extra""),"
11309,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorWriterTest.java,73,,"                .replaceAll(""\r\n"", ""\n"").replace('\r', '\n');"
11310,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleUpdaterTest.java,72,,"            ModuleRevisionId.newInstance(""yourorg"", ""yourmodule2"", ""branch1"", ""2+""), ""2.5"");"
11311,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleUpdaterTest.java,72,,"            ModuleRevisionId.newInstance(""yourorg"", ""yourmodule2"", ""branch1"", ""2+""), ""2.5"");"
11312,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleUpdaterTest.java,72,,"            ModuleRevisionId.newInstance(""yourorg"", ""yourmodule2"", ""branch1"", ""2+""), ""2.5"");"
11313,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleUpdaterTest.java,87,,"        ivy.setVariable(""myvar"", ""myconf1"");"
11314,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleUpdaterTest.java,91,,"            getUpdateOptions(ivy.getSettings(), resolvedRevisions, ""release"", ""mynewrev"","
11315,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleUpdaterTest.java,91,,"            getUpdateOptions(ivy.getSettings(), resolvedRevisions, ""release"", ""mynewrev"","
11316,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleUpdaterTest.java,104,,"        URL settingsUrl = new File(""test/java/org/apache/ivy/plugins/parser/xml/"""
11317,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleUpdaterTest.java,111,,"            new ByteArrayInputStream(buffer.toByteArray()), new BasicResource(""test"", false, 0, 0,"
11318,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleUpdaterTest.java,222,,"            getUpdateOptions(""release"", ""mynewrev"").setConfsToExclude(new String[] {""myconf2""}));"
11319,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleUpdaterTest.java,231,,"        assertNotNull(""Configurations shouldn't be null"", configs);"
11320,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/parser/xml/XmlModuleUpdaterTest.java,398,,"        assertEquals(""Number of configurations is incorrect"", 3, configurations.length);"
11321,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/report/XmlReportWriterTest.java,67,,"            getResolveOptions(new String[] {""default""}));"
11322,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/BintrayResolverTest.java,72,,"        assertEquals(""https://jcenter.bintray.com/"", resolver.getRoot());"
11323,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/BintrayResolverTest.java,79,,"        resolver.setName(""TestName"");"
11324,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/BintrayResolverTest.java,87,,"        resolver.setSubject(""jfrog"");"
11325,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/BintrayResolverTest.java,95,,"        resolver.setRepo(""jfrog-jars"");"
11326,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/BintrayResolverTest.java,142,,"                .newInstance(""org.apache.ant"", ""ant-antunit"", ""1.2"");"
11327,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/BintrayResolverTest.java,149,,"                ""ant-antunit"", ""jar"", ""jar"");"
11328,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/BintrayResolverTest.java,177,,"        resolver.setSubject(""unknown"");"
11329,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/BintrayResolverTest.java,179,,"        resolver.setName(""test"");"
11330,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/ChainResolverTest.java,84,,"        DependencyResolver resolver = settings.getResolver(""chain"");"
11331,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/ChainResolverTest.java,123,,"                ModuleRevisionId.newInstance(""org"", ""mod"", ""rev""), false);"
11332,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/ChainResolverTest.java,123,,"                ModuleRevisionId.newInstance(""org"", ""mod"", ""rev""), false);"
11333,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/ChainResolverTest.java,157,,"                ModuleRevisionId.newInstance(""org"", ""mod"", ""latest.integration""), false);"
11334,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/ChainResolverTest.java,344,,"                + ""/test/repositories/1/[organisation]/[module]/[type]s/[artifact]-[revision].[type]"");"
11335,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/ChainResolverTest.java,362,,"                ModuleRevisionId.newInstance(""org1"", ""mod1.1"", ""1.0""), false);"
11336,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/ChainResolverTest.java,362,,"                ModuleRevisionId.newInstance(""org1"", ""mod1.1"", ""1.0""), false);"
11337,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/ChainResolverTest.java,362,,"                ModuleRevisionId.newInstance(""org1"", ""mod1.1"", ""1.0""), false);"
11338,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/DualResolverTest.java,77,,"        assertEquals(""ivy"", dual.getIvyResolver().getName());"
11339,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/DualResolverTest.java,79,,"        assertEquals(""artifact"", dual.getArtifactResolver().getName());"
11340,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/DualResolverTest.java,111,,"                ModuleRevisionId.newInstance(""org"", ""mod"", ""rev""), false);"
11341,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/DualResolverTest.java,111,,"                ModuleRevisionId.newInstance(""org"", ""mod"", ""rev""), false);"
11342,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/DualResolverTest.java,111,,"                ModuleRevisionId.newInstance(""org"", ""mod"", ""rev""), false);"
11343,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/FileSystemResolverTest.java,72,,"    private static final String REL_IVY_PATTERN = ""test"" + FS + ""repositories"" + FS + ""1"" + FS"
11344,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/FileSystemResolverTest.java,72,,"    private static final String REL_IVY_PATTERN = ""test"" + FS + ""repositories"" + FS + ""1"" + FS"
11345,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/FileSystemResolverTest.java,137,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""org1"", ""mod1.1"", ""1.0"");"
11346,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/FileSystemResolverTest.java,137,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""org1"", ""mod1.1"", ""1.0"");"
11347,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/FileSystemResolverTest.java,137,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""org1"", ""mod1.1"", ""1.0"");"
11348,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/FileSystemResolverTest.java,147,,"        DefaultArtifact artifact = new DefaultArtifact(mrid, pubdate, ""mod1.1"", ""jar"", ""jar"");"
11349,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/FileSystemResolverTest.java,238,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""test"", ""allright"", ""1.0"");"
11350,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/FileSystemResolverTest.java,285,,"                + ""/test/repositories/checksums/[module]/[revision]/[artifact]-[revision].[ext]"");"
11351,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/FileSystemResolverTest.java,290,,"        final ModuleRevisionId mrid = ModuleRevisionId.newInstance(""test"", ""allright"", ""2.0"");"
11352,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/FileSystemResolverTest.java,407,,"                .newInstance(""org1"", ""mod1.1"", ""latest.integration"");"
11353,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/FileSystemResolverTest.java,415,,"        Artifact[] artifacts = rmr.getDescriptor().getArtifacts(""default"");"
11354,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/FileSystemResolverTest.java,438,,"        assertEquals(ModuleRevisionId.newInstance(""org1"", ""mod1.1"", ""1.1""), rmr.getId());"
11355,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/FileSystemResolverTest.java,543,,"        resolver.addArtifactPattern(settings.getBaseDir() + ""/test/repositories/1/"""
11356,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/FileSystemResolverTest.java,544,,"                + ""[organisation]/[module]/[type]s/[artifact]-[revision].[type]"");"
11357,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/FileSystemResolverTest.java,663,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""myorg"", ""mymodule"", ""myrevision"");"
11358,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/FileSystemResolverTest.java,663,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""myorg"", ""mymodule"", ""myrevision"");"
11359,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/FileSystemResolverTest.java,663,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""myorg"", ""mymodule"", ""myrevision"");"
11360,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/FileSystemResolverTest.java,664,,"        Artifact ivyArtifact = new DefaultArtifact(mrid, new Date(), ""ivy"", ""ivy"", ""xml"");"
11361,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/FileSystemResolverTest.java,664,,"        Artifact ivyArtifact = new DefaultArtifact(mrid, new Date(), ""ivy"", ""ivy"", ""xml"");"
11362,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/FileSystemResolverTest.java,665,,"        Artifact artifact = new DefaultArtifact(mrid, new Date(), ""myartifact"", ""mytype"","
11363,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/FileSystemResolverTest.java,665,,"        Artifact artifact = new DefaultArtifact(mrid, new Date(), ""myartifact"", ""mytype"","
11364,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/FileSystemResolverTest.java,666,,"                ""myext"");"
11365,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/FileSystemResolverTest.java,667,,"        File src = new File(""test/repositories/ivysettings.xml"");"
11366,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/FileSystemResolverTest.java,673,,"        assertTrue(new File(""test/repositories/1/myorg/mymodule/myrevision/ivy.xml"").exists());"
11367,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/FileSystemResolverTest.java,687,,"                + ""/test/repositories/1/[organisation]/[module]/[revision]/[artifact].[ext]"");"
11368,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/FileSystemResolverTest.java,689,,"                + ""/test/repositories/1/[organisation]/[module]/[revision]/[artifact]-[revision].[ext]"");"
11369,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/FileSystemResolverTest.java,693,,"                ""test/repositories/1/myorg/mymodule/myrevision/myartifact-myrevision.myext"");"
11370,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/IBiblioResolverTest.java,162,,"        resolver.setName(""test"");"
11371,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/IBiblioResolverTest.java,168,,"                .listModules(new OrganisationEntry(resolver, ""commons-lang""));"
11372,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/Maven2LocalTest.java,69,,"                ModuleRevisionId.newInstance(""org.apache"", ""test-metadata"", ""latest.integration""),"
11373,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/Maven2LocalTest.java,69,,"                ModuleRevisionId.newInstance(""org.apache"", ""test-metadata"", ""latest.integration""),"
11374,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/MirroredURLResolverTest.java,77,,"                ModuleRevisionId.newInstance(""commons-lang"", ""commons-lang"", ""2.4""), false);"
11375,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/PackagerResolverTest.java,126,,"            resolver.setName(""packager"");"
11376,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/PackagerResolverTest.java,140,,"            Artifact artifact = new DefaultArtifact(mrid, pubdate, ""mod"", ""jar"", ""jar"");"
11377,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/URLResolverTest.java,90,,"        String rootpath = new File(""test/repositories/1"").toURI().toURL().toExternalForm();"
11378,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/URLResolverTest.java,94,,"        resolver.setName(""test"");"
11379,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/URLResolverTest.java,97,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""org1"", ""mod1.1"", ""1.0"");"
11380,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/URLResolverTest.java,97,,"        ModuleRevisionId mrid = ModuleRevisionId.newInstance(""org1"", ""mod1.1"", ""1.0"");"
11381,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/URLResolverTest.java,107,,"        DefaultArtifact artifact = new DefaultArtifact(mrid, pubdate, ""mod1.1"", ""jar"", ""jar"");"
11382,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/resolver/URLResolverTest.java,232,,"            final String ivyPattern = ""http://"" + fastServerBindAddr.getHostName() + "":"" + fastServerBindAddr.getPort()"
11383,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/trigger/LogTriggerTest.java,68,,"        mockLogger.assertLogInfoContains(""msg: o A 1"");"
11384,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/version/LatestVersionMatcherTest.java,46,,"        assertNeed(""latest.release"", true);"
11385,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/version/LatestVersionMatcherTest.java,53,,"        StatusManager.getCurrent().addStatus(new Status(""release"", false));"
11386,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/version/LatestVersionMatcherTest.java,69,,"        assertAccept(""latest.release"", ""trunk"", ""release"", ""trunk"", true);"
11387,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/version/LatestVersionMatcherTest.java,84,,"            ModuleRevisionId.newInstance(""org"", ""name"", askedVersion), null));"
11388,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/version/LatestVersionMatcherTest.java,84,,"            ModuleRevisionId.newInstance(""org"", ""name"", askedVersion), null));"
11389,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/version/PatternVersionMatcherTest.java,31,,"        assertAccept(pvm, ""foo(1,3)"", ""1.4.1"", false);"
11390,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/version/PatternVersionMatcherTest.java,32,,"        assertAccept(pvm, ""foo(1,3)"", ""1.3"", false);"
11391,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/version/VersionRangeMatcherTest.java,31,,"        assertAccept(""[3.8,4.0)"", ""3.7"", false);"
11392,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/version/VersionRangeMatcherTest.java,37,,"        assertAccept(""(3.8,4.0]"", ""3.7"", false);"
11393,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/version/VersionRangeMatcherTest.java,43,,"        assertAccept(""(3.8,4.0)"", ""3.7"", false);"
11394,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/version/VersionRangeMatcherTest.java,60,,"        assertDynamic(""[1.0,2.0]"", true);"
11395,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/version/VersionRangeMatcherTest.java,62,,"        assertDynamic(""]1.0,2.0["", true);"
11396,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/version/VersionRangeMatcherTest.java,64,,"        assertDynamic(""[1.0,)"", true);"
11397,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/version/VersionRangeMatcherTest.java,97,,"        assertAccept(""[1.0,2.0]"", ""1.1"", true);"
11398,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/version/VersionRangeMatcherTest.java,98,,"        assertAccept(""[1.0,2.0]"", ""0.9"", false);"
11399,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/version/VersionRangeMatcherTest.java,100,,"        assertAccept(""[1.0,2.0]"", ""1.0"", true);"
11400,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/version/VersionRangeMatcherTest.java,101,,"        assertAccept(""[1.0,2.0]"", ""2.0"", true);"
11401,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/version/VersionRangeMatcherTest.java,136,,"        assertAccept(""(,2.0]"", ""1.1"", true);"
11402,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/version/VersionRangeMatcherTest.java,151,,"        assertAccept(""]1.0,)"", ""1.1"", true);"
11403,./TargetProjects/ant-ivy/test/java/org/apache/ivy/plugins/version/VersionRangeMatcherTest.java,158,,"        assertAccept(""(,2.0["", ""1.1"", true);"
11404,./TargetProjects/ant-ivy/test/java/org/apache/ivy/util/ConfiguratorTest.java,230,,"        conf.setAttribute(""empty"", ""true"");"
11405,./TargetProjects/ant-ivy/test/java/org/apache/ivy/util/ConfiguratorTest.java,264,,"        conf.startCreateChild(""room"");"
11406,./TargetProjects/ant-ivy/test/java/org/apache/ivy/util/ConfiguratorTest.java,266,,"        conf.setAttribute(""surface"", ""24"");"
11407,./TargetProjects/ant-ivy/test/java/org/apache/ivy/util/ConfiguratorTest.java,301,,"        conf.typeDef(""house"", House.class.getName());"
11408,./TargetProjects/ant-ivy/test/java/org/apache/ivy/util/IvyPatternHelperTest.java,33,,"            IvyPatternHelper.substitute(pattern, ""apache"", ""Test"", ""1.0"", ""test"", ""jar"", ""jar""));"
11409,./TargetProjects/ant-ivy/test/java/org/apache/ivy/util/StringUtilsTest.java,37,,"        assertEquals(""apache"", StringUtils.decrypt(StringUtils.encrypt(""apache"")));"
11410,./TargetProjects/ant-ivy/test/java/org/apache/ivy/util/url/IvyAuthenticatorTest.java,91,,"        assertEquals(""Unexpected username"", ""dummy"", auth.getUserName());"
11411,./TargetProjects/ant-ivyde/org.apache.ivyde.eclipse/src/java/org/apache/ivyde/common/ivyfile/IvyModuleDescriptorModel.java,86,,"        IvyTagAttribute moduleTagAttribute = new IvyTagAttribute(""module"","
11412,./TargetProjects/ant-ivyde/org.apache.ivyde.eclipse/src/java/org/apache/ivyde/common/ivyfile/IvyModuleDescriptorModel.java,135,,"        child.addAttribute(new IvyTagAttribute(""name"", ""the name of the license. \n"""
11413,./TargetProjects/ant-ivyde/org.apache.ivyde.eclipse/src/java/org/apache/ivyde/common/ivyfile/IvyModuleDescriptorModel.java,139,,"                .addAttribute(new IvyTagAttribute(""url"", ""an URL pointing to the license text."","
11414,./TargetProjects/ant-ivyde/org.apache.ivyde.eclipse/src/java/org/apache/ivyde/common/ivyfile/IvyModuleDescriptorModel.java,210,,"        IvyTag conf = new IvyTag(""conf"", ""declares a configuration of this module"");"
11415,./TargetProjects/ant-ivyde/org.apache.ivyde.eclipse/src/java/org/apache/ivyde/common/ivyfile/IvyModuleDescriptorModel.java,278,,"        artifact.addAttribute(new IvyTagAttribute(""type"", ""the type of the published artifact. \n"""
11416,./TargetProjects/ant-ivyde/org.apache.ivyde.eclipse/src/java/org/apache/ivyde/common/ivyfile/IvyModuleDescriptorModel.java,282,,"        artifact.addAttribute(new IvyTagAttribute(""ext"", ""the extension of the published artifact"","
11417,./TargetProjects/ant-ivyde/org.apache.ivyde.eclipse/src/java/org/apache/ivyde/common/ivyfile/IvyModuleDescriptorModel.java,314,,"        IvyTagAttribute orgAtt = new IvyTagAttribute(""org"","
11418,./TargetProjects/ant-ivyde/org.apache.ivyde.eclipse/src/java/org/apache/ivyde/common/ivyfile/IvyModuleDescriptorModel.java,347,,"        IvyTagAttribute rev = new IvyTagAttribute(""rev"", ""the revision of the dependency. \n"""
11419,./TargetProjects/ant-ivyde/org.apache.ivyde.eclipse/src/java/org/apache/ivyde/common/ivyfile/IvyModuleDescriptorModel.java,465,,"            + ""'*' wildcard can be used to designate all configurations of this module"","
11420,./TargetProjects/ant-ivyde/org.apache.ivyde.eclipse/src/java/org/apache/ivyde/common/ivyfile/IvyModuleDescriptorModel.java,573,,"                + ""dependency module to add to the include list, \n"""
11421,./TargetProjects/ant-ivyde/org.apache.ivyde.eclipse/src/java/org/apache/ivyde/common/ivyfile/IvyModuleDescriptorModel.java,574,,"                + ""or a regexp matching this name"", false));"
11422,./TargetProjects/ant-ivyde/org.apache.ivyde.eclipse/src/java/org/apache/ivyde/common/ivysettings/IvySettingsModel.java,89,,"                new IvyTagAttribute(""name"", true),"
11423,./TargetProjects/ant-ivyde/org.apache.ivyde.eclipse/src/java/org/apache/ivyde/eclipse/IvyDEsecurityHelper.java,51,,"        IvyPlugin.logInfo(""Credentials "" + setup.toString() + "" added to IvyDE credential store"");"
11424,./TargetProjects/ant-ivyde/org.apache.ivyde.eclipse/src/java/org/apache/ivyde/internal/eclipse/CachedIvy.java,174,,"                        ""The Ivy settings file '"" + settingsPath.getResolvedPath()"
11425,./TargetProjects/ant-ivyde/org.apache.ivyde.eclipse/src/java/org/apache/ivyde/internal/eclipse/cpcontainer/IvyClasspathContainerConfAdapter.java,128,,"                value = parameter.length > 1 ? URLDecoder.decode(parameter[1], ""UTF-8"") : """";"
11426,./TargetProjects/ant-ivyde/org.apache.ivyde.eclipse/src/java/org/apache/ivyde/internal/eclipse/resolve/IvyResolveJobListener.java,63,,"                monitor.subTask(""downloading "" + evt.getResource());"
11427,./TargetProjects/ant-ivyde/org.apache.ivyde.eclipse/src/java/org/apache/ivyde/internal/eclipse/ui/preferences/IvyDEProjectPreferences.java,106,,"            @SuppressWarnings(""unchecked"")"
11428,./TargetProjects/ant-ivyde/org.apache.ivyde.eclipse/src/java/org/apache/ivyde/internal/eclipse/workspaceresolver/IvyDEStrategy.java,47,,"            rev1 = rev1.replaceAll(""([a-zA-Z])(\\d)"", ""$1.$2"");"
11429,./TargetProjects/any23-server/src/test/java/org/apache/any23/servlet/ServletTest.java,88,,"        content = ""<html><body><div class=\""vcard fn\"">Joe</div></body></html>"";"
11430,./TargetProjects/any23-server/src/test/java/org/apache/any23/servlet/ServletTest.java,94,,"                ""<http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2006/vcard/ns#VCard>"","
11431,./TargetProjects/any23-server/src/test/java/org/apache/any23/servlet/ServletTest.java,104,,"        Assert.assertEquals(""http://foo.com"", requestedIRI);"
11432,./TargetProjects/any23-server/src/test/java/org/apache/any23/servlet/ServletTest.java,157,,"        HttpTester.Response response = doPostRequest(""/"", ""format=nt&uri=http://foo.com"", ""application/x-www-form-urlencoded"");"
11433,./TargetProjects/any23-server/src/test/java/org/apache/any23/servlet/ServletTest.java,214,,"        assertContains(""a vcard:VCard"", res);"
11434,./TargetProjects/any23-server/src/test/java/org/apache/any23/servlet/ServletTest.java,305,,"        HttpTester.Response response = doGetRequest(""/best/http://foo.com"");"
11435,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-checksum/src/test/java/org/apache/archiva/checksum/ChecksummedFileTest.java,89,,"            Path srcSha1 = srcFile.resolveSibling( srcFile.getFileName() + "".sha1"" );"
11436,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-checksum/src/test/java/org/apache/archiva/checksum/ChecksummedFileTest.java,110,,"        Path testfile = getTestResource( ""examples/redback-authz-open.jar"" );"
11437,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-checksum/src/test/java/org/apache/archiva/checksum/ChecksummedFileTest.java,244,,"        Assert.assertEquals( ""Checksum doesn't match"", SERVLETAPI_SHA1, s );"
11438,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-common/src/test/java/org/apache/archiva/common/utils/BaseFileTest.java,37,,"        File repoDir = new File( ""/home/user/foo/repository"" );"
11439,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-common/src/test/java/org/apache/archiva/common/utils/BaseFileTest.java,38,,"        String pathFile = ""path/to/resource.xml"";"
11440,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-common/src/test/java/org/apache/archiva/common/utils/BaseFileTest.java,41,,"        assertAbsolutePath( ""/home/user/foo/repository/path/to/resource.xml"", file );"
11441,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-common/src/test/java/org/apache/archiva/common/utils/FileUtilsTest.java,47,,"        Path tf = Files.createTempFile( ""FileUtilsTest"", "".txt"" );"
11442,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-common/src/test/java/org/apache/archiva/common/utils/PathUtilTest.java,40,,"        assertEquals( FilenameUtils.separatorsToSystem( ""path/to/resource.xml"" ), PathUtil.getRelative( ""/home/user/foo/repository"","
11443,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-common/src/test/java/org/apache/archiva/common/utils/VersionComparatorTest.java,41,,"        assertSort( new String[] { ""1.0"", ""3.0"", ""2.0"" }, new String[] { ""1.0"", ""2.0"", ""3.0"" } );"
11444,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-common/src/test/java/org/apache/archiva/common/utils/VersionComparatorTest.java,41,,"        assertSort( new String[] { ""1.0"", ""3.0"", ""2.0"" }, new String[] { ""1.0"", ""2.0"", ""3.0"" } );"
11445,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-common/src/test/java/org/apache/archiva/common/utils/VersionComparatorTest.java,42,,"        assertSort( new String[] { ""1.5"", ""1.2"", ""1.0"" }, new String[] { ""1.0"", ""1.2"", ""1.5"" } );"
11446,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-common/src/test/java/org/apache/archiva/common/utils/VersionComparatorTest.java,46,,"        assertSort( new String[] { ""1.1"", ""1.0-SNAPSHOT"", ""1.1-m6"", ""1.1-rc1"" }, new String[] {"
11447,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-common/src/test/java/org/apache/archiva/common/utils/VersionComparatorTest.java,46,,"        assertSort( new String[] { ""1.1"", ""1.0-SNAPSHOT"", ""1.1-m6"", ""1.1-rc1"" }, new String[] {"
11448,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-common/src/test/java/org/apache/archiva/common/utils/VersionComparatorTest.java,46,,"        assertSort( new String[] { ""1.1"", ""1.0-SNAPSHOT"", ""1.1-m6"", ""1.1-rc1"" }, new String[] {"
11449,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-common/src/test/java/org/apache/archiva/common/utils/VersionComparatorTest.java,46,,"        assertSort( new String[] { ""1.1"", ""1.0-SNAPSHOT"", ""1.1-m6"", ""1.1-rc1"" }, new String[] {"
11450,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-common/src/test/java/org/apache/archiva/common/utils/VersionUtilTest.java,73,,"        assertEquals( VersionUtil.getBaseVersion( ""1.3.2-20090420.083501-3"" ), ""1.3.2-SNAPSHOT"" );"
11451,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-configuration/src/main/java/org/apache/archiva/configuration/DefaultArchivaConfiguration.java,428,,"        Registry section = registry.getSection(KEY + "".user"");"
11452,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-configuration/src/main/java/org/apache/archiva/configuration/MavenProxyPropertyLoader.java,68,,"                    proxy.setHost( getMandatoryProperty( props, ""proxy."" + key + "".host"" ) );"
11453,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-configuration/src/main/java/org/apache/archiva/configuration/io/registry/ConfigurationRegistryReader.java,164,,"        List<String> typeList = registry.getList(prefix + ""type"");"
11454,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-configuration/src/main/java/org/apache/archiva/configuration/io/registry/ConfigurationRegistryReader.java,180,,"        List<String> nameList = registry.getList(prefix + ""name"");"
11455,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-configuration/src/main/java/org/apache/archiva/configuration/io/registry/ConfigurationRegistryWriter.java,184,,"                String type = ""type"";"
11456,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-configuration/src/main/java/org/apache/archiva/configuration/io/registry/ConfigurationRegistryWriter.java,189,,"                String name = ""name"";"
11457,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-configuration/src/test/java/org/apache/archiva/configuration/ArchivaConfigurationTest.java,86,,"        assertEquals( ""check managed repositories"", ""${appserver.base}/repositories/internal"","
11458,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-configuration/src/test/java/org/apache/archiva/configuration/ArchivaConfigurationTest.java,90,,"        assertEquals( ""check managed repositories"", ""default"", repository.getLayout() );"
11459,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-configuration/src/test/java/org/apache/archiva/configuration/ArchivaConfigurationTest.java,202,,"        Path file = getTestFile( ""target/test/test-file.xml"" );"
11460,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-configuration/src/test/java/org/apache/archiva/configuration/ArchivaConfigurationTest.java,233,,"        assertTrue( ""Check file exists"", Files.exists(file) );"
11461,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-configuration/src/test/java/org/apache/archiva/configuration/ArchivaConfigurationTest.java,237,,"        assertFalse( ""check value"", configuration.getWebapp().getUi().isAppletFindEnabled() );"
11462,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-configuration/src/test/java/org/apache/archiva/configuration/ArchivaConfigurationTest.java,260,,"        Path userFile = getTestFile( ""target/test/test-file-user.xml"" );"
11463,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-configuration/src/test/java/org/apache/archiva/configuration/ArchivaConfigurationTest.java,265,,"        FileUtils.writeStringToFile( userFile.toFile(), ""<configuration/>"", Charset.forName( ""UTF-8"" ) );"
11464,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-configuration/src/test/java/org/apache/archiva/configuration/ArchivaConfigurationTest.java,265,,"        FileUtils.writeStringToFile( userFile.toFile(), ""<configuration/>"", Charset.forName( ""UTF-8"" ) );"
11465,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-configuration/src/test/java/org/apache/archiva/configuration/ArchivaConfigurationTest.java,267,,"        ArchivaConfiguration archivaConfiguration = lookup( ArchivaConfiguration.class, ""test-save-user"" );"
11466,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-configuration/src/test/java/org/apache/archiva/configuration/ConfigurationTest.java,43,,"        NetworkProxyConfiguration proxy1 = createNetworkProxy( ""id1"", ""host1"", 8080 );"
11467,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-configuration/src/test/java/org/apache/archiva/configuration/ConfigurationTest.java,45,,"        NetworkProxyConfiguration proxy2 = createNetworkProxy( ""id2"", ""host2"", 9090 );"
11468,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-configuration/src/test/java/org/apache/archiva/configuration/functors/ProxyConnectorConfigurationOrderComparatorTest.java,49,,"        proxies.add( createConnector( ""corporate"", 0 ) );"
11469,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-configuration/src/test/java/org/apache/archiva/configuration/functors/ProxyConnectorConfigurationOrderComparatorTest.java,50,,"        proxies.add( createConnector( ""snapshots"", 0 ) );"
11470,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-configuration/src/test/java/org/apache/archiva/configuration/functors/ProxyConnectorConfigurationOrderComparatorTest.java,51,,"        proxies.add( createConnector( ""3rdparty"", 0 ) );"
11471,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-configuration/src/test/java/org/apache/archiva/configuration/functors/ProxyConnectorConfigurationOrderComparatorTest.java,52,,"        proxies.add( createConnector( ""sandbox"", 0 ) );"
11472,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-configuration/src/test/java/org/apache/archiva/configuration/functors/RepositoryConfigurationComparatorTest.java,46,,"        assertEquals( 0, comparator.compare( createRepository( ""id1"" ), createRepository( ""id1"" ) ) );"
11473,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-consumers/archiva-core-consumers/src/test/java/org/apache/archiva/consumers/core/repository/AbstractRepositoryPurgeTest.java,160,,"        Path basePath = Paths.get(""target/test-"" + getName()).toAbsolutePath();"
11474,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-consumers/archiva-core-consumers/src/test/java/org/apache/archiva/consumers/core/repository/CleanupReleasedSnapshotsRepositoryPurgeTest.java,153,,"        verify(metadataRepository, never()).removeProjectVersion(eq(repositorySession) , eq(TEST_REPO_ID), eq(projectNs), eq(projectName), eq(""2.3"") );"
11475,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-consumers/archiva-core-consumers/src/test/java/org/apache/archiva/consumers/core/repository/CleanupReleasedSnapshotsRepositoryPurgeTest.java,330,,"        Path vDir2 = repo.resolve(projectPath).resolve(projectName).resolve(""2.0.3-SNAPSHOT"");"
11476,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-consumers/archiva-core-consumers/src/test/java/org/apache/archiva/consumers/core/repository/CleanupReleasedSnapshotsRepositoryPurgeTest.java,331,,"        Path vDir3 = repo.resolve(projectPath).resolve(projectName).resolve(""2.0.4-SNAPSHOT"");"
11477,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-consumers/archiva-core-consumers/src/test/java/org/apache/archiva/consumers/core/repository/DaysOldRepositoryPurgeTest.java,90,,"        String projectNs = ""org.apache.maven.plugins"";"
11478,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-consumers/archiva-core-consumers/src/test/java/org/apache/archiva/consumers/core/repository/DaysOldRepositoryPurgeTest.java,92,,"        String projectName = ""maven-install-plugin"";"
11479,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-consumers/archiva-core-consumers/src/test/java/org/apache/archiva/consumers/core/repository/DaysOldRepositoryPurgeTest.java,93,,"        String projectVersion = ""2.2-SNAPSHOT"";"
11480,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-consumers/archiva-core-consumers/src/test/java/org/apache/archiva/consumers/core/repository/DaysOldRepositoryPurgeTest.java,298,,"            Path jarFile = Paths.get( versionRoot, ""/plexus-utils-1.4.3-"" + timestamp + ""-"" + i + "".jar"" );"
11481,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-consumers/archiva-core-consumers/src/test/java/org/apache/archiva/consumers/core/repository/RepositoryPurgeConsumerTest.java,173,,"        addRepoToConfiguration( ""retention-count"", repoConfiguration );"
11482,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-consumers/archiva-core-consumers/src/test/java/org/apache/archiva/consumers/core/repository/RepositoryPurgeConsumerTest.java,188,,"        String projectPath = projectNs.replaceAll(""\\."",""/"");"
11483,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-consumers/archiva-core-consumers/src/test/java/org/apache/archiva/consumers/core/repository/RepositoryPurgeConsumerTest.java,288,,"        addRepoToConfiguration( ""days-old"", repoConfiguration );"
11484,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-consumers/archiva-core-consumers/src/test/java/org/apache/archiva/consumers/core/repository/RepositoryPurgeConsumerTest.java,390,,"        String projectVersion = ""2.3-SNAPSHOT"";"
11485,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-consumers/archiva-core-consumers/src/test/java/org/apache/archiva/consumers/core/repository/RetentionCountRepositoryPurgeTest.java,87,,"        String projectNs = ""org.jruby.plugins"";"
11486,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-consumers/archiva-core-consumers/src/test/java/org/apache/archiva/consumers/core/repository/RetentionCountRepositoryPurgeTest.java,89,,"        String projectName = ""jruby-rake-plugin"";"
11487,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-consumers/archiva-core-consumers/src/test/java/org/apache/archiva/consumers/core/repository/RetentionCountRepositoryPurgeTest.java,90,,"        String projectVersion = ""1.0RC1-SNAPSHOT"";"
11488,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-consumers/archiva-core-consumers/src/test/java/org/apache/archiva/consumers/core/repository/RetentionCountRepositoryPurgeTest.java,187,,"        String projectNs = ""org.codehaus.castor"";"
11489,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-consumers/archiva-core-consumers/src/test/java/org/apache/archiva/consumers/core/repository/RetentionCountRepositoryPurgeTest.java,189,,"        String projectName = ""castor-anttasks"";"
11490,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-consumers/archiva-core-consumers/src/test/java/org/apache/archiva/consumers/core/repository/RetentionCountRepositoryPurgeTest.java,190,,"        String projectVersion = ""1.1.2-SNAPSHOT"";"
11491,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-consumers/archiva-core-consumers/src/test/java/org/apache/archiva/consumers/core/repository/RetentionCountRepositoryPurgeTest.java,269,,"        String projectNs = ""org.apache.maven.plugins"";"
11492,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-consumers/archiva-core-consumers/src/test/java/org/apache/archiva/consumers/core/repository/RetentionCountRepositoryPurgeTest.java,271,,"        String projectName = ""maven-assembly-plugin"";"
11493,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-consumers/archiva-indexer-consumers/src/test/java/org/apache/archiva/consumers/lucene/NexusIndexerConsumerTest.java,159,,"                                      ""org/apache/archiva/archiva-index-methods-jar-test/1.0/archiva-index-methods-jar-test-1.0.jar"" );"
11494,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-filelock/src/test/java/org/apache/archiva/common/filelock/DefaultFileLockManagerTest.java,111,,"                logger.error(""Error occured {}"", e.getMessage());"
11495,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-filelock/src/test/java/org/apache/archiva/common/filelock/DefaultFileLockManagerTest.java,145,,"                    outFile = Files.createTempFile(""foo"", "".jar"");"
11496,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-filelock/src/test/java/org/apache/archiva/common/filelock/DefaultFileLockManagerTest.java,145,,"                    outFile = Files.createTempFile(""foo"", "".jar"");"
11497,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-model/src/test/java/org/apache/archiva/model/RepositoryURLTest.java,73,,"        assertURL( ""http://machine"", ""http"", ""machine"", NO_PORT, ""/"", NO_USER, NO_PASS );"
11498,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-model/src/test/java/org/apache/archiva/model/RepositoryURLTest.java,73,,"        assertURL( ""http://machine"", ""http"", ""machine"", NO_PORT, ""/"", NO_USER, NO_PASS );"
11499,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-proxy-api/src/test/java/org/apache/archiva/proxy/model/NetworkProxyTest.java,32,,"        proxy = new NetworkProxy(""test-proxy"", ""http"", ""test.apache.org"", 80, ""testuser"", ""xxxx"".toCharArray());"
11500,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-proxy-api/src/test/java/org/apache/archiva/proxy/model/NetworkProxyTest.java,32,,"        proxy = new NetworkProxy(""test-proxy"", ""http"", ""test.apache.org"", 80, ""testuser"", ""xxxx"".toCharArray());"
11501,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-proxy-api/src/test/java/org/apache/archiva/proxy/model/NetworkProxyTest.java,32,,"        proxy = new NetworkProxy(""test-proxy"", ""http"", ""test.apache.org"", 80, ""testuser"", ""xxxx"".toCharArray());"
11502,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-proxy-api/src/test/java/org/apache/archiva/proxy/model/NetworkProxyTest.java,32,,"        proxy = new NetworkProxy(""test-proxy"", ""http"", ""test.apache.org"", 80, ""testuser"", ""xxxx"".toCharArray());"
11503,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-proxy-api/src/test/java/org/apache/archiva/proxy/model/NetworkProxyTest.java,32,,"        proxy = new NetworkProxy(""test-proxy"", ""http"", ""test.apache.org"", 80, ""testuser"", ""xxxx"".toCharArray());"
11504,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-proxy-api/src/test/java/org/apache/archiva/proxy/model/NetworkProxyTest.java,50,,"        proxy = new NetworkProxy(""test-proxy"", ""https"", ""test.apache.org"", 80, ""testuser"", ""xxxx"".toCharArray());"
11505,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-proxy-api/src/test/java/org/apache/archiva/proxy/model/NetworkProxyTest.java,134,,"        assertEquals(""abcd"", new String(proxy.getPassword()));"
11506,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-proxy/src/main/java/org/apache/archiva/proxy/DefaultRepositoryProxyHandler.java,146,,"        requestProperties.setProperty( ""filetype"", ""artifact"" );"
11507,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-admin/archiva-repository-admin-default/src/main/java/org/apache/archiva/admin/repository/admin/DefaultRepositoryTaskAdministration.java,83,,"            throw RepositoryAdminException.ofKey( ""repository.id.invalid"", """" );"
11508,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-admin/archiva-repository-admin-default/src/main/java/org/apache/archiva/admin/repository/admin/DefaultRepositoryTaskAdministration.java,89,,"                throw RepositoryAdminException.ofKey( ""repository.not_found"", repositoryId );"
11509,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-admin/archiva-repository-admin-default/src/main/java/org/apache/archiva/admin/repository/admin/DefaultRepositoryTaskAdministration.java,100,,"            log.error( ""Could not queue the task: {}"", e.getMessage( ), e );"
11510,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-admin/archiva-repository-admin-default/src/main/java/org/apache/archiva/admin/repository/admin/DefaultRepositoryTaskAdministration.java,101,,"            throw RepositoryAdminException.ofKey( ""repository.scan.task_queue_error"", e, e.getMessage( ) );"
11511,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-admin/archiva-repository-admin-default/src/main/java/org/apache/archiva/admin/repository/runtime/DefaultRedbackRuntimeConfigurationAdmin.java,515,,"            log.error( ""fail to save RedbackRuntimeConfiguration: {}"", e.getMessage(), e );"
11512,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-admin/archiva-repository-admin-default/src/test/java/org/apache/archiva/admin/repository/admin/ArchivaAdministrationTest.java,60,,"        LegacyArtifactPath legacyArtifactPath = new LegacyArtifactPath( ""foo"", ""bar"" );"
11513,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-admin/archiva-repository-admin-default/src/test/java/org/apache/archiva/admin/repository/admin/ArchivaAdministrationTest.java,60,,"        LegacyArtifactPath legacyArtifactPath = new LegacyArtifactPath( ""foo"", ""bar"" );"
11514,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-admin/archiva-repository-admin-default/src/test/java/org/apache/archiva/admin/repository/admin/ArchivaAdministrationTest.java,88,,"        archivaAdministration.addFileTypePattern( ""foo"", ""zorro"", getFakeAuditInformation() );"
11515,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-admin/archiva-repository-admin-default/src/test/java/org/apache/archiva/admin/repository/admin/ArchivaAdministrationTest.java,203,,"        newOrganisationInformation.setName( ""foo org"" );"
11516,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-admin/archiva-repository-admin-default/src/test/java/org/apache/archiva/admin/repository/admin/RepositoryTaskAdministrationTest.java,92,,"        when( indexTask1.getRepository( ).getId( ) ).thenReturn( ""indexrepo1"" );"
11517,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-admin/archiva-repository-admin-default/src/test/java/org/apache/archiva/admin/repository/admin/RepositoryTaskAdministrationTest.java,97,,"        when( indexTask2.getRepository( ).getId( ) ).thenReturn( ""indexrepo2"" );"
11518,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-admin/archiva-repository-admin-default/src/test/java/org/apache/archiva/admin/repository/admin/RepositoryTaskAdministrationTest.java,160,,"        when( registry.getManagedRepository( ""internal"" ) ).thenReturn( mock( ManagedRepository.class ) );"
11519,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-admin/archiva-repository-admin-default/src/test/java/org/apache/archiva/admin/repository/admin/RepositoryTaskAdministrationTest.java,183,,"        when( asset.getFilePath( ) ).thenReturn( Paths.get( ""abc/def/ghij.pom"" ) );"
11520,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-admin/archiva-repository-admin-default/src/test/java/org/apache/archiva/admin/repository/group/RepositoryGroupAdminTest.java,57,,"            Repository repo = repositoryRegistry.getRepository(""test-new-one"");"
11521,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-admin/archiva-repository-admin-default/src/test/java/org/apache/archiva/admin/repository/group/RepositoryGroupAdminTest.java,61,,"            repo = repositoryRegistry.getRepository(""test-new-two"");"
11522,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-admin/archiva-repository-admin-default/src/test/java/org/apache/archiva/admin/repository/group/RepositoryGroupAdminTest.java,77,,"                new RepositoryGroup( ""repo-group-one"", Arrays.asList( ""test-new-one"", ""test-new-two"" ) );"
11523,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-admin/archiva-repository-admin-default/src/test/java/org/apache/archiva/admin/repository/managed/ManagedRepositoryAdminTest.java,119,,"        repo.setName( ""test repo"" );"
11524,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-admin/archiva-repository-admin-default/src/test/java/org/apache/archiva/admin/repository/managed/ManagedRepositoryAdminTest.java,121,,"        repo.setCronExpression( ""0 0 * * * ?"" );"
11525,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-admin/archiva-repository-admin-default/src/test/java/org/apache/archiva/admin/repository/networkproxy/NetworkProxyAdminTest.java,54,,"        NetworkProxy networkProxy = getNetworkProxyTest( ""foo"" );"
11526,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-admin/archiva-repository-admin-default/src/test/java/org/apache/archiva/admin/repository/proxyconnector/ProxyConnectorAdminTest.java,45,,"        proxyConnector.setSourceRepoId( ""snapshots"" );"
11527,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-admin/archiva-repository-admin-default/src/test/java/org/apache/archiva/admin/repository/proxyconnector/ProxyConnectorAdminTest.java,46,,"        proxyConnector.setTargetRepoId( ""central"" );"
11528,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-admin/archiva-repository-admin-default/src/test/java/org/apache/archiva/admin/repository/proxyconnector/ProxyConnectorAdminTest.java,62,,"        assertEquals( ""root"", mockAuditListener.getAuditEvents().get( 0 ).getUserId() );"
11529,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-admin/archiva-repository-admin-default/src/test/java/org/apache/archiva/admin/repository/proxyconnector/ProxyConnectorAdminTest.java,137,,"        ProxyConnector proxyConnector = proxyConnectorAdmin.getProxyConnector( ""internal"", ""central"" );"
11530,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-admin/archiva-repository-admin-default/src/test/java/org/apache/archiva/admin/repository/proxyconnectorrule/ProxyConnectorRuleAdminTest.java,42,,"        proxyConnector.setSourceRepoId( ""snapshots"" );"
11531,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-admin/archiva-repository-admin-default/src/test/java/org/apache/archiva/admin/repository/proxyconnectorrule/ProxyConnectorRuleAdminTest.java,43,,"        proxyConnector.setTargetRepoId( ""central"" );"
11532,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-admin/archiva-repository-admin-default/src/test/java/org/apache/archiva/admin/repository/proxyconnectorrule/ProxyConnectorRuleAdminTest.java,53,,"            rule = new ProxyConnectorRule( ""org/apache/maven"", ProxyConnectorRuleType.BLACK_LIST,"
11533,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-admin/archiva-repository-admin-default/src/test/java/org/apache/archiva/admin/repository/proxyconnectorrule/ProxyConnectorRuleAdminTest.java,79,,"        remoteRepository.setId( ""archiva"" );"
11534,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-admin/archiva-repository-admin-default/src/test/java/org/apache/archiva/admin/repository/remote/RemoteRepositoryAdminTest.java,70,,"        RemoteRepository repo = remoteRepositoryAdmin.getRemoteRepository( ""foo"" );"
11535,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-admin/archiva-repository-admin-default/src/test/java/org/apache/archiva/admin/repository/remote/RemoteRepositoryAdminTest.java,94,,"        assertEquals( ""root"", mockAuditListener.getAuditEvents().get( 0 ).getUserId() );"
11536,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-layer/src/test/java/org/apache/archiva/repository/base/ArchivaRepositoryRegistryTest.java,131,,"        assertTrue(repos.stream().anyMatch( rep -> rep.getId().equals(""internal"") ));"
11537,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-layer/src/test/java/org/apache/archiva/repository/base/ArchivaRepositoryRegistryTest.java,132,,"        assertTrue( repos.stream( ).anyMatch( rep -> rep.getId( ).equals( ""snapshots"") ) );"
11538,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-layer/src/test/java/org/apache/archiva/repository/base/ArchivaRepositoryRegistryTest.java,133,,"        assertTrue(repos.stream().anyMatch( rep -> rep.getId().equals( ""central"") ));"
11539,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-layer/src/test/java/org/apache/archiva/repository/base/ArchivaRepositoryRegistryTest.java,210,,"        BasicManagedRepository managedRepository = BasicManagedRepository.newFilesystemInstance(""test001"", ""Test repo"", archivaConfiguration.getRepositoryBaseDir().resolve(""test001""));"
11540,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-layer/src/test/java/org/apache/archiva/repository/base/ArchivaRepositoryRegistryTest.java,211,,"        managedRepository.setDescription( managedRepository.getPrimaryLocale(), ""This is just a test"" );"
11541,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-layer/src/test/java/org/apache/archiva/repository/base/ArchivaRepositoryRegistryTest.java,243,,"        cfg.setId(""test002"");"
11542,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-layer/src/test/java/org/apache/archiva/repository/base/ArchivaRepositoryRegistryTest.java,244,,"        cfg.setName(""This is test 002"");"
11543,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-layer/src/test/java/org/apache/archiva/repository/base/ArchivaRepositoryRegistryTest.java,257,,"        cfg.setName(""This is internal test 002"");"
11544,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-layer/src/test/java/org/apache/archiva/repository/base/ArchivaRepositoryRegistryTest.java,351,,"        cfg.setName(""This is central test 002"");"
11545,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-layer/src/test/java/org/apache/archiva/repository/base/ArchivaRepositoryRegistryTest.java,469,,"            throw new RuntimeException(""RepositoryRegistry exception should be thrown if id exists already."");"
11546,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-layer/src/test/java/org/apache/archiva/repository/base/group/BasicRepositoryGroupValidatorTest.java,72,,"        repositoryRegistry.removeRepository(""test"");"
11547,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-layer/src/test/java/org/apache/archiva/repository/base/group/BasicRepositoryGroupValidatorTest.java,138,,"        assertTrue( result.getResult( ).containsKey( ""merged_index_ttl"" ) );"
11548,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-layer/src/test/java/org/apache/archiva/repository/base/group/BasicRepositoryGroupValidatorTest.java,153,,"        assertTrue( result.getResult( ).containsKey( ""object"" ) );"
11549,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-layer/src/test/java/org/apache/archiva/repository/base/group/RepositoryGroupHandlerTest.java,89,,"        assertNotNull( groupHandler.get( ""test-group-01"" ).getRepositories( ) );"
11550,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-layer/src/test/java/org/apache/archiva/repository/base/managed/BasicManagedRepositoryValidatorTest.java,71,,"            repositoryRegistry.removeRepository( ""test"" );"
11551,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-layer/src/test/java/org/apache/archiva/repository/base/managed/BasicManagedRepositoryValidatorTest.java,158,,"        assertTrue( result.getResult( ).containsKey( ""object"" ) );"
11552,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-layer/src/test/java/org/apache/archiva/repository/content/base/ArchivaArtifactTest.java,47,,"        return ArchivaArtifact.withAsset( asset ).withVersion( version ).withId( ""testartifact"" );"
11553,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-layer/src/test/java/org/apache/archiva/repository/content/base/ArchivaArtifactTest.java,206,,"            .withArtifactVersion( ""3.0.484848"" )"
11554,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-layer/src/test/java/org/apache/archiva/repository/content/base/ArchivaArtifactTest.java,207,,"            .withType( ""jar"" )"
11555,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-layer/src/test/java/org/apache/archiva/repository/content/base/ArchivaArtifactTest.java,208,,"            .withClassifier( ""private"" )"
11556,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-layer/src/test/java/org/apache/archiva/repository/content/base/ArchivaArtifactTest.java,209,,"            .withRemainder( ""jar.sha1"" )"
11557,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-layer/src/test/java/org/apache/archiva/repository/content/base/ArchivaArtifactTest.java,210,,"            .withContentType( ""text/html"" )"
11558,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-layer/src/test/java/org/apache/archiva/repository/content/base/ArchivaNamespaceTest.java,98,,"        NamespaceOptBuilder builder = ArchivaNamespace.withRepository( repository ).withAsset( asset ).withNamespace( ""abc.de/abc"" );"
11559,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-layer/src/test/java/org/apache/archiva/repository/content/base/ArchivaProjectTest.java,83,,"            .withId( ""abcdefgtest1"" ).build( );"
11560,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-layer/src/test/java/org/apache/archiva/repository/mock/ManagedRepositoryContentMock.java,285,,"        return ArchivaDataItem.withAsset( version.getAsset( ).resolve( ""maven-metadata.xml"" ) ).withId( ""maven-metadata.xml"" )"
11561,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-scanner/src/main/java/org/apache/archiva/repository/scanner/RepositoryScannerInstance.java,184,,"                .getPathMatcher(""glob:"" + ts)).collect(Collectors.toList());"
11562,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-scanner/src/test/java/org/apache/archiva/repository/scanner/RepositoryContentConsumersTest.java,175,,"            assertNotNull( ""Known["" + expectedId + ""] should not be null."", consumer );"
11563,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-scanner/src/test/java/org/apache/archiva/repository/scanner/RepositoryContentConsumersTest.java,388,,"            throw new UnsupportedOperationException( ""Not supported yet."" );"
11564,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-scanner/src/test/java/org/apache/archiva/repository/scanner/RepositoryScannerTest.java,197,,"        assertNotNull( ""Stats should not be null."", stats );"
11565,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-scanner/src/test/java/org/apache/archiva/repository/scanner/RepositoryScannerTest.java,198,,"        assertEquals( ""Stats.totalFileCount"", 4, stats.getTotalFileCount() );"
11566,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-scanner/src/test/java/org/apache/archiva/repository/scanner/RepositoryScannerTest.java,200,,"        assertEquals( ""Processed Count"", 2, consumer.getProcessCount() );"
11567,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-repository-scanner/src/test/java/org/apache/archiva/repository/scanner/mock/ManagedRepositoryContentMock.java,391,,"            throw new IllegalArgumentException( ""Not a valid artifact path in a Maven 2 repository, filename '"" + id"
11568,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-storage-fs/src/main/java/org/apache/archiva/repository/storage/fs/FilesystemStorage.java,96,,"                    log.error(""Could not read the input stream from file {}"", path);"
11569,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-storage-fs/src/main/java/org/apache/archiva/repository/storage/fs/FilesystemStorage.java,102,,"            log.error( ""Runtime exception during data consume from artifact {}. Error: {}"", path, e.getMessage() );"
11570,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-storage-fs/src/main/java/org/apache/archiva/repository/storage/fs/FilesystemStorage.java,209,,"            log.error(""Locking error on file {}"", file);"
11571,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-storage-fs/src/test/java/org/apache/archiva/repository/storage/fs/FilesystemAssetTest.java,48,,"        assetPathFile = Files.createTempFile(assetPathDir,""assetFile"", ""dat"");"
11572,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-storage-fs/src/test/java/org/apache/archiva/repository/storage/fs/FilesystemAssetTest.java,88,,"        FilesystemAsset asset2 = new FilesystemAsset(filesystemStorage, ""/test1234"", assetPathDir);"
11573,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-storage-fs/src/test/java/org/apache/archiva/repository/storage/fs/FilesystemAssetTest.java,118,,"        Files.write(assetPathFile, new String(""abcdef"").getBytes(""ASCII""));"
11574,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-storage-fs/src/test/java/org/apache/archiva/repository/storage/fs/FilesystemAssetTest.java,118,,"        Files.write(assetPathFile, new String(""abcdef"").getBytes(""ASCII""));"
11575,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-storage-fs/src/test/java/org/apache/archiva/repository/storage/fs/FilesystemStorageTest.java,89,,"            IOUtils.write(""abcdefghijkl"", os, ""ASCII"");"
11576,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-storage-fs/src/test/java/org/apache/archiva/repository/storage/fs/FilesystemStorageTest.java,153,,"            newDir = baseDir.resolve(""dir2/testdir2"");"
11577,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-transaction/src/test/java/org/apache/archiva/transaction/CreateFileEventTest.java,45,,"        assertFalse( ""Test file is not yet created"", Files.exists(testFile) );"
11578,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-xml-tools/src/test/java/org/apache/archiva/xml/LatinEntityResolutionReaderTest.java,147,,"        expected.append( ""<basic>\n"" );"
11579,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-xml-tools/src/test/java/org/apache/archiva/xml/LatinEntityResolutionReaderTest.java,148,,"        expected.append( ""  <names>\n"" );"
11580,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-xml-tools/src/test/java/org/apache/archiva/xml/LatinEntityResolutionReaderTest.java,149,,"        expected.append( ""    <name>"" ).append( TRYGVIS ).append( ""</name>\n"" );"
11581,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-xml-tools/src/test/java/org/apache/archiva/xml/LatinEntityResolutionReaderTest.java,149,,"        expected.append( ""    <name>"" ).append( TRYGVIS ).append( ""</name>\n"" );"
11582,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-xml-tools/src/test/java/org/apache/archiva/xml/LatinEntityResolutionReaderTest.java,151,,"        expected.append( ""  </names>\n"" );"
11583,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-xml-tools/src/test/java/org/apache/archiva/xml/LatinEntityResolutionReaderTest.java,152,,"        expected.append( ""</basic>"" );"
11584,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-xml-tools/src/test/java/org/apache/archiva/xml/LatinEntityResolutionReaderTest.java,154,,"        assertProperRead( expected, ""no-prolog-with-entities.xml"", 4096 );"
11585,./TargetProjects/archiva/archiva-modules/archiva-base/archiva-xml-tools/src/test/java/org/apache/archiva/xml/XMLReaderTest.java,60,,"        XMLReader reader = new XMLReader( ""basic"", xmlFile );"
11586,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-indexer/src/main/java/org/apache/archiva/indexer/maven/search/MavenRepositorySearch.java,345,,"        if (StringUtils.startsWith(id, ""remote-"")) {"
11587,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-indexer/src/test/java/org/apache/archiva/indexer/maven/MavenIndexManagerTest.java,207,,"        repository = MavenManagedRepository.newLocalInstance(""test-repo"", ""Test Repo"", Paths.get(""target/repositories""));"
11588,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-indexer/src/test/java/org/apache/archiva/indexer/maven/search/AbstractMavenRepositorySearch.java,125,,"        FileUtils.deleteDirectory( Paths.get( org.apache.archiva.common.utils.FileUtils.getBasedir(), ""/target/repos/"" + TEST_REPO_1 + ""/.indexer"" ) );"
11589,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-indexer/src/test/java/org/apache/archiva/indexer/maven/search/AbstractMavenRepositorySearch.java,125,,"        FileUtils.deleteDirectory( Paths.get( org.apache.archiva.common.utils.FileUtils.getBasedir(), ""/target/repos/"" + TEST_REPO_1 + ""/.indexer"" ) );"
11590,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-indexer/src/test/java/org/apache/archiva/indexer/maven/search/MavenRepositorySearchTest.java,58,,"                              ""/org/apache/archiva/archiva-search/1.0/archiva-search-1.0.jar"" ) );"
11591,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-indexer/src/test/java/org/apache/archiva/indexer/maven/search/MavenRepositorySearchTest.java,71,,"        files.add( Paths.get( org.apache.archiva.common.utils.FileUtils.getBasedir(), ""target/repos/"" + TEST_REPO_1"
11592,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-indexer/src/test/java/org/apache/archiva/indexer/maven/search/MavenRepositorySearchTest.java,120,,"        SearchResults results = search.search( ""user"", selectedRepos, ""archiva-search"", null, null );"
11593,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-indexer/src/test/java/org/apache/archiva/indexer/maven/search/MavenRepositorySearchTest.java,120,,"        SearchResults results = search.search( ""user"", selectedRepos, ""archiva-search"", null, null );"
11594,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-indexer/src/test/java/org/apache/archiva/indexer/maven/search/MavenRepositorySearchTest.java,127,,"            results.getSearchResultHit( SearchUtil.getHitId( ""org.apache.archiva"", ""archiva-search"", null, ""jar"" ) );"
11595,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-indexer/src/test/java/org/apache/archiva/indexer/maven/search/MavenRepositorySearchTest.java,127,,"            results.getSearchResultHit( SearchUtil.getHitId( ""org.apache.archiva"", ""archiva-search"", null, ""jar"" ) );"
11596,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-indexer/src/test/java/org/apache/archiva/indexer/maven/search/MavenRepositorySearchTest.java,131,,"        assertEquals( ""1.0"", hit.getVersions().get( 0 ) );"
11597,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-indexer/src/test/java/org/apache/archiva/indexer/maven/search/MavenRepositorySearchTest.java,451,,"        previousSearchTerms.add( ""archiva-test"" );"
11598,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-proxy/src/test/java/org/apache/archiva/proxy/CacheFailuresTransferTest.java,71,,"        saveRemoteRepositoryConfig( ""badproxied1"", ""Bad Proxied 1"", ""http://bad.machine.com/repo/"", ""default"" );"
11599,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-proxy/src/test/java/org/apache/archiva/proxy/CacheFailuresTransferTest.java,71,,"        saveRemoteRepositoryConfig( ""badproxied1"", ""Bad Proxied 1"", ""http://bad.machine.com/repo/"", ""default"" );"
11600,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-proxy/src/test/java/org/apache/archiva/proxy/CacheFailuresTransferTest.java,72,,"        saveRemoteRepositoryConfig( ""badproxied2"", ""Bad Proxied 2"", ""http://bad.machine.com/anotherrepo/"", ""default"" );"
11601,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-proxy/src/test/java/org/apache/archiva/proxy/ChecksumTransferTest.java,65,,"        saveConnector( ID_DEFAULT_MANAGED, ""proxied1"", ChecksumPolicy.IGNORE, ReleasesPolicy.ALWAYS,"
11602,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-proxy/src/test/java/org/apache/archiva/proxy/ChecksumTransferTest.java,202,,"        assertChecksums( expectedFile, ""invalid checksum file"", ""invalid checksum file"" );"
11603,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-proxy/src/test/java/org/apache/archiva/proxy/ManagedDefaultTransferTest.java,143,,"        String path = ""org/apache/maven/test/get-default-layout-present/1.0/get-default-layout-present-1.0.jar"";"
11604,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-proxy/src/test/java/org/apache/archiva/proxy/MetadataTransferTest.java,154,,"        saveRemoteRepositoryConfig( ""badproxied1"", ""Bad Proxied 1"", ""http://bad.machine.com/repo/"", ""default"" );"
11605,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-proxy/src/test/java/org/apache/archiva/proxy/MetadataTransferTest.java,180,,"        assertProjectMetadataContents( requestedResource, new String[]{ ""1.0.1"" }, ""1.0.1"", ""1.0.1"" );"
11606,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-proxy/src/test/java/org/apache/archiva/proxy/MetadataTransferTest.java,229,,"        assertProjectMetadataContents( requestedResource, new String[]{ ""1.0"" }, null, null );"
11607,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-proxy/src/test/java/org/apache/archiva/proxy/MetadataTransferTest.java,305,,"        assertProjectMetadataContents( requestedResource, new String[]{ ""1.0.5"" }, ""1.0.5"", ""1.0.5"" );"
11608,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-proxy/src/test/java/org/apache/archiva/proxy/MetadataTransferTest.java,331,,"        assertProjectMetadataContents( requestedResource, new String[]{ ""1.0"", ""1.0.1"", ""2.0"" }, ""2.0"", ""2.0"" );"
11609,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-proxy/src/test/java/org/apache/archiva/proxy/MetadataTransferTest.java,714,,"        assertSnapshotMetadataContents( requestedResource, ""20050831"", ""101112"", 1 );"
11610,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-proxy/src/test/java/org/apache/archiva/proxy/MetadataTransferTest.java,714,,"        assertSnapshotMetadataContents( requestedResource, ""20050831"", ""101112"", 1 );"
11611,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-proxy/src/test/java/org/apache/archiva/proxy/MetadataTransferTest.java,828,,"        assertGroupMetadataContents( requestedResource, new String[]{ ""plugin1"" } );"
11612,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-proxy/src/test/java/org/apache/archiva/proxy/MetadataTransferTest.java,853,,"        assertGroupMetadataContents( requestedResource, new String[]{ ""plugin2"", ""plugin1"" } );"
11613,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-proxy/src/test/java/org/apache/archiva/proxy/MetadataTransferTest.java,930,,"        assertGroupMetadataContents( requestedResource, new String[]{ ""plugin1"", ""plugin2"", ""plugin4"" } );"
11614,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-proxy/src/test/java/org/apache/archiva/proxy/SnapshotTransferTest.java,98,,"        String path = ""org/apache/maven/test/get-present-timestamped-snapshot/1.0-SNAPSHOT/get-present-timestamped-snapshot-1.0-SNAPSHOT.jar"";"
11615,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-proxy/src/test/java/org/apache/archiva/repository/mock/ManagedRepositoryContentMock.java,70,,"    public static final String MAVEN_METADATA = ""maven-metadata.xml"";"
11616,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-proxy/src/test/java/org/apache/archiva/repository/mock/ManagedRepositoryContentMock.java,424,,"            throw new IllegalArgumentException( ""Not a valid artifact path in a Maven 2 repository, filename '"" + id"
11617,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/main/java/org/apache/archiva/repository/maven/MavenRepositoryProvider.java,172,,"                uri = new URI(""file://"" + uriStr);"
11618,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/main/java/org/apache/archiva/repository/maven/content/AbstractDefaultRepositoryContent.java,82,,"            throw new IllegalArgumentException( ""Not a valid artifact path in a Maven 2 repository, filename '"" + artifactFileName"
11619,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/main/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContent.java,403,,"            throw new LayoutException( ""Path null is not valid for artifact"" );"
11620,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/main/java/org/apache/archiva/repository/maven/content/MavenContentHelper.java,196,,"                if (""javadoc"".equals(testType)) {"
11621,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/main/java/org/apache/archiva/repository/maven/content/MavenContentHelper.java,237,,"        else if ( classifier.equals( ""tests"" ) && extension.equals( ""jar"" ) )"
11622,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/main/java/org/apache/archiva/repository/maven/content/MavenContentProvider.java,96,,"            throw new RepositoryException( ""Repository type ""+repository.getType()+"" is not supported by this implementation."" );"
11623,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/main/java/org/apache/archiva/repository/maven/metadata/storage/DefaultArtifactMappingProvider.java,50,,"        typeToExtensionMap.put( ""ejb-client"", ""jar"" );"
11624,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/main/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryPathTranslator.java,216,,"            throw new IllegalArgumentException( ""Not a valid artifact path in a Maven 2 repository, filename '"" + id"
11625,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/MavenRepositoryProviderTest.java,119,,"        repo.setLayout( ""maven2"" );"
11626,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/MavenRepositoryProviderTest.java,227,,"        MavenManagedRepository repo = MavenManagedRepository.newLocalInstance( ""test01"", ""My Test repo"", Paths.get(""target/repositories"") );"
11627,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/MavenRepositoryProviderTest.java,227,,"        MavenManagedRepository repo = MavenManagedRepository.newLocalInstance( ""test01"", ""My Test repo"", Paths.get(""target/repositories"") );"
11628,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/MavenRepositoryProviderTest.java,231,,"        repo.setDescription( repo.getPrimaryLocale(), ""This is a description"" );"
11629,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/MavenRepositoryProviderTest.java,235,,"        repo.setSchedulingDefinition( ""0 0 05 ? * WED"" );"
11630,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/MavenRepositoryProviderTest.java,307,,"        MavenRepositoryGroup repositoryGroup = MavenRepositoryGroup.newLocalInstance(""group1"",""group1"",Paths.get(""target/groups""));"
11631,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/RepositoryURLTest.java,56,,"        assertURL( ""http://localhost/path/to/resource.txt"", ""http"", null, null, ""localhost"", null,"
11632,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/RepositoryURLTest.java,56,,"        assertURL( ""http://localhost/path/to/resource.txt"", ""http"", null, null, ""localhost"", null,"
11633,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/RepositoryURLTest.java,57,,"                   ""/path/to/resource.txt"" );"
11634,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/AbstractRepositoryContentTest.java,79,,"        assertBadPath( ""invalid/invalid/1.0/invalid-2.0.jar"", ""version mismatch between path and artifact"" );"
11635,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/AbstractRepositoryContentTest.java,114,,"        String type = ""jar"";"
11636,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/AbstractRepositoryContentTest.java,234,,"        String type = ""pom"";"
11637,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/AbstractRepositoryContentTest.java,548,,"        assertEquals( ""Artifact <"" + expectedArtifact + ""> to path:"", path, toPath( expectedArtifact ) );"
11638,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/AbstractRepositoryContentTest.java,548,,"        assertEquals( ""Artifact <"" + expectedArtifact + ""> to path:"", path, toPath( expectedArtifact ) );"
11639,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/FilenameParserTest.java,38,,"        FilenameParser parser = new FilenameParser( ""maven-test-plugin-1.8.3.jar"" );"
11640,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/FilenameParserTest.java,41,,"        assertEquals( ""jar"", parser.getExtension() );"
11641,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/FilenameParserTest.java,82,,"        assertEquals( ""1.8.3"", parser.next() );"
11642,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContentTest.java,175,,"        assertVersions( ""include_xml"", ""1.0"", new String[]{ ""1.0"" } );"
11643,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContentTest.java,248,,"            .withNamespace( ""org.apache.maven"" )"
11644,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContentTest.java,263,,"            .withProjectId( ""shared"" )"
11645,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContentTest.java,334,,"            ""A"", ""B"", ""C"", ""archiva"", ""discovery"", ""maven-parent"", ""samplejar"", ""shared"", ""some-ejb"", ""test"","
11646,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContentTest.java,334,,"            ""A"", ""B"", ""C"", ""archiva"", ""discovery"", ""maven-parent"", ""samplejar"", ""shared"", ""some-ejb"", ""test"","
11647,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContentTest.java,433,,"            .withVersion( ""2.0"" ).build();"
11648,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContentTest.java,467,,"            .withNamespace( ""org.apache.axis2"" )"
11649,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContentTest.java,468,,"            .withProjectId( ""axis2"" )"
11650,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContentTest.java,469,,"            .withVersion( ""1.3-SNAPSHOT"" ).build();"
11651,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContentTest.java,497,,"        assertEquals( ""pom"", artifact.getExtension( ) );"
11652,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContentTest.java,540,,"            .withArtifactVersion( ""1.3-20070731.113304-21"" )"
11653,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContentTest.java,624,,"            .withNamespace( ""org.apache.maven.shared"" )"
11654,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContentTest.java,625,,"            .withProjectId( ""maven-downloader"" )"
11655,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContentTest.java,723,,"            .withVersion( ""1.0-SNAPSHOT"" )"
11656,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContentTest.java,725,,"            .withArtifactVersion( ""1.0-20050611.112233-1"" )"
11657,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContentTest.java,755,,"        Artifact artifact = results.stream( ).filter( a -> a.getFileName( ).equalsIgnoreCase( ""test-1.0-20050611.112233-1-javadoc.jar"" ) )"
11658,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContentTest.java,758,,"        assertEquals( ""javadoc"", artifact.getClassifier( ) );"
11659,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContentTest.java,783,,"        artifact = results.stream( ).filter( a -> a.getFileName( ).equalsIgnoreCase( ""wrong-artifactId-1.0-20050611.112233-1.jar"" ) )"
11660,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContentTest.java,787,,"        assertEquals( ""wrong-artifactId"", artifact.getId( ) );"
11661,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContentTest.java,952,,"            .withVersion( ""1.1"" )"
11662,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContentTest.java,969,,"            .withExtension( ""jar"" )"
11663,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContentTest.java,1168,,"        ManagedRepository repo = createManagedRepoWithContent( ""delete-repository"" );"
11664,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContentTest.java,1181,,"        assertTrue( Files.exists(repoRoot.resolve( ""org/apache/test/samplejar"" )) );"
11665,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContentTest.java,1182,,"        assertTrue( Files.exists(repoRoot.resolve( ""org/apache/test/sub/samplejar"" )) );"
11666,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContentTest.java,1184,,"            .withNamespace( ""org.apache.test"" ).build();"
11667,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContentTest.java,1250,,"        assertFalse( Files.exists(repoRoot.resolve( ""org/apache/test/samplejar/2.0"" )) );"
11668,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContentTest.java,1252,,"        assertTrue( Files.exists(repoRoot.resolve( ""org/apache/test/sub/samplejar/1.0"" )) );"
11669,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContentTest.java,1253,,"        assertTrue( Files.exists(repoRoot.resolve( ""org/apache/test/sub/samplejar/2.0"" )) );"
11670,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContentTest.java,1281,,"        assertTrue( Files.exists(repoRoot.resolve( ""org/apache/test/samplejar/1.0/samplejar-1.0.jar"" )) );"
11671,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContentTest.java,1282,,"        assertTrue( Files.exists(repoRoot.resolve( ""org/apache/test/samplejar/1.0/samplejar-1.0.jar.md5"" )) );"
11672,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContentTest.java,1283,,"        assertTrue( Files.exists(repoRoot.resolve( ""org/apache/test/samplejar/1.0/samplejar-1.0.jar.sha1"" )) );"
11673,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContentTest.java,1284,,"        assertTrue( Files.exists(repoRoot.resolve( ""org/apache/test/samplejar/1.0/samplejar-1.0.pom"" )) );"
11674,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContentTest.java,1285,,"        assertTrue( Files.exists(repoRoot.resolve( ""org/apache/test/samplejar/1.0/samplejar-1.0-source.jar"" )) );"
11675,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/ManagedDefaultRepositoryContentTest.java,1432,,"                outputStream.write( ""test.test.test\n"".getBytes( Charset.forName( ""UTF-8"" ) ) );"
11676,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/MavenContentHelperTest.java,90,,"        assertArtifactVersion( mavenContentHelper, ""1.0-alpha-11-SNAPSHOT"", storage.getAsset( ""org/apache/archiva/metadata/tests/snap_shots_1/1.0-alpha-11-SNAPSHOT"" )"
11677,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/MavenContentHelperTest.java,126,,"        assertFileName( ""test-1.0.jar"", ""test"", """", ""1.0"", ""jar"" );"
11678,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/MavenContentHelperTest.java,126,,"        assertFileName( ""test-1.0.jar"", ""test"", """", ""1.0"", ""jar"" );"
11679,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/MavenContentHelperTest.java,127,,"        assertFileName( ""test-1.1-client.jar"", ""test"", ""client"", ""1.1"", ""jar"" );"
11680,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/MavenContentHelperTest.java,128,,"        assertFileName( ""te445st-2.1-sources.jar"", ""te445st"", ""sources"", ""2.1"", ""jar"" );"
11681,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/MavenContentHelperTest.java,130,,"        assertFileName( ""testarchive-5.0.war"", ""testarchive"", """", ""5.0"", ""war"" );"
11682,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/MavenContentHelperTest.java,140,,"        assertClassifier( ""sources"", """",""java-source"" );"
11683,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/MavenContentHelperTest.java,141,,"        assertClassifier( ""tests"", """", ""test-jar"" );"
11684,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/MavenContentHelperTest.java,142,,"        assertClassifier( ""client"", """",""ejb-client"" );"
11685,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/MavenContentHelperTest.java,143,,"        assertClassifier( ""javadoc"", """",""javadoc"" );"
11686,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/MavenContentHelperTest.java,177,,"        assertType( ""ear"", """", ""ear"" );"
11687,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/MavenContentHelperTest.java,178,,"        assertType( ""rar"", """", ""rar"" );"
11688,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/MavenRepositoryRequestInfoTest.java,162,,"        assertValid( ""ch.ethz.ganymed/jars/ganymed-ssh2-build210.jar"", ""ch.ethz.ganymed"", ""ganymed-ssh2"", ""build210"","
11689,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/MavenRepositoryRequestInfoTest.java,163,,"                     ""build210"", null, ""jar"" );"
11690,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/MavenRepositoryRequestInfoTest.java,178,,"        assertValid( ""javax/jars/comm-3.0-u1.jar"", ""javax"", ""comm"", ""3.0-u1"", ""3.0-u1"", null, ""jar"" );"
11691,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/MavenRepositoryRequestInfoTest.java,193,,"                     ""3.0-public_review"", ""3.0-public_review"", null, ""jar"" );"
11692,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/MavenRepositoryRequestInfoTest.java,208,,"        assertValid( ""maven/jars/maven-test-plugin-1.8.2.jar"", ""maven"", ""maven-test-plugin"", ""1.8.2"", ""1.8.2"",null, ""jar"" );"
11693,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/MavenRepositoryRequestInfoTest.java,216,,"                     null, ""pom"" );"
11694,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/MavenRepositoryRequestInfoTest.java,223,,"        assertValid( ""commons-lang/javadoc.jars/commons-lang-2.1-javadoc.jar"", ""commons-lang"", ""commons-lang"", ""2.1"", ""2.1"","
11695,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/MavenRepositoryRequestInfoTest.java,223,,"        assertValid( ""commons-lang/javadoc.jars/commons-lang-2.1-javadoc.jar"", ""commons-lang"", ""commons-lang"", ""2.1"", ""2.1"","
11696,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/MavenRepositoryRequestInfoTest.java,224,,"                     ""javadoc"", ""javadoc"" );"
11697,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/MavenRepositoryRequestInfoTest.java,239,,"        assertValid( ""org.apache.derby/poms/derby-10.2.2.0.pom"", ""org.apache.derby"", ""derby"", ""10.2.2.0"", ""10.2.2.0"",null, ""pom"" );"
11698,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/MavenRepositoryRequestInfoTest.java,258,,"                     ""geronimo-ejb_2.1_spec"", ""1.0.1"", ""1.0.1"",null, ""jar"" );"
11699,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/MavenRepositoryRequestInfoTest.java,274,,"                     ""0.9.1-SNAPSHOT"", ""0.9.1-SNAPSHOT"",null, ""pom"" );"
11700,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/MavenRepositoryRequestInfoTest.java,289,,"        assertValid( ""test.maven-arch/poms/test-arch-2.0.3-SNAPSHOT.pom"", ""test.maven-arch"", ""test-arch"","
11701,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/MavenRepositoryRequestInfoTest.java,290,,"                     ""2.0.3-SNAPSHOT"", ""2.0.3-SNAPSHOT"",null, ""pom"" );"
11702,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/MavenRepositoryRequestInfoTest.java,306,,"                     ""com.company.department.project"", ""0.2"", ""0.2"",null, ""pom"" );"
11703,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/MavenRepositoryRequestInfoTest.java,340,,"        assertTrue( repoRequest.isSupportFile( ""org/apache/derby/derby/10.2.2.0/derby-10.2.2.0-bin.tar.gz.pgp"" ) );"
11704,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/MavenRepositoryRequestInfoTest.java,341,,"        assertTrue( repoRequest.isSupportFile( ""org/apache/derby/derby/10.2.2.0/maven-metadata.xml.sha1"" ) );"
11705,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/MavenRepositoryRequestInfoTest.java,346,,"            repoRequest.isSupportFile( ""test/maven-arch/test-arch/2.0.3-SNAPSHOT/test-arch-2.0.3-SNAPSHOT.jar"" ) );"
11706,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/MavenRepositoryRequestInfoTest.java,347,,"        assertFalse( repoRequest.isSupportFile( ""org/apache/archiva/archiva-api/1.0/archiva-api-1.0.xml.zip"" ) );"
11707,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/MavenRepositoryRequestInfoTest.java,348,,"        assertFalse( repoRequest.isSupportFile( ""org/apache/derby/derby/10.2.2.0/derby-10.2.2.0-bin.tar.gz"" ) );"
11708,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/MavenRepositoryRequestInfoTest.java,391,,"        assertNotEquals( ""default"", repoRequest.getLayout( ""test.maven-arch/poms/test-arch-2.0.3-SNAPSHOT.pom"" ) );"
11709,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/content/MavenRepositoryRequestInfoTest.java,413,,"        assertEquals(""legacy"", repoRequest.getLayout( ""test.maven-arch/poms/test-arch-2.0.3-SNAPSHOT.pom"" ) );"
11710,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/Maven2RepositoryStorageTest.java,49,,"                             repositoryStorage.getFilePath( href, MavenManagedRepository.newLocalInstance( ""repo01"", ""repo01"", Paths.get(""target/repositories"")) ) );"
11711,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/Maven2RepositoryStorageTest.java,49,,"                             repositoryStorage.getFilePath( href, MavenManagedRepository.newLocalInstance( ""repo01"", ""repo01"", Paths.get(""target/repositories"")) ) );"
11712,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/MetadataToolsTest.java,95,,"        removeProxyConnector( ""test-repo"", ""apache-snapshots"" );"
11713,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/MetadataToolsTest.java,99,,"        assertSnapshotVersions( ""snap_shots_a"", ""1.0-alpha-11-SNAPSHOT"","
11714,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/MetadataToolsTest.java,166,,"        .withNamespace( ""org.apache.archiva.metadata.tests"" )"
11715,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/MetadataToolsTest.java,173,,"                               new String[]{ ""1.0-SNAPSHOT"", ""1.1-SNAPSHOT"", ""1.2-SNAPSHOT"" }, ""1.2-SNAPSHOT"", null );"
11716,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/MetadataToolsTest.java,187,,"                                      new String[]{ ""1.0"", ""1.0.1"", ""2.0"", ""2.0.1"", ""2.0-20070821-dev"" },"
11717,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/MetadataToolsTest.java,187,,"                                      new String[]{ ""1.0"", ""1.0.1"", ""2.0"", ""2.0.1"", ""2.0-20070821-dev"" },"
11718,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/MetadataToolsTest.java,256,,"            .withNamespace( ""com.foo"" )"
11719,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/MetadataToolsTest.java,257,,"            .withArtifactId( ""foo-tool"" )"
11720,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/MetadataToolsTest.java,297,,"        String groupId = ""commons-lang"";"
11721,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/MetadataToolsTest.java,464,,"        buf.append( ""<metadata>\n"" );"
11722,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/MetadataToolsTest.java,465,,"        buf.append( ""  <groupId>"" ).append( reference.getNamespace() ).append( ""</groupId>\n"" );"
11723,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/MetadataToolsTest.java,465,,"        buf.append( ""  <groupId>"" ).append( reference.getNamespace() ).append( ""</groupId>\n"" );"
11724,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/MetadataToolsTest.java,466,,"        buf.append( ""  <artifactId>"" ).append( reference.getProjectId() ).append( ""</artifactId>\n"" );"
11725,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/MetadataToolsTest.java,466,,"        buf.append( ""  <artifactId>"" ).append( reference.getProjectId() ).append( ""</artifactId>\n"" );"
11726,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/MetadataToolsTest.java,484,,"                buf.append( ""      <version>"" ).append( expectedVersions[i] ).append( ""</version>\n"" );"
11727,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/MetadataToolsTest.java,489,,"        buf.append( ""</metadata>"" );"
11728,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverMRM1411RepoGroupTest.java,72,,"    private static final String TEST_REPO_ID = ""test"";"
11729,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverMRM1411RepoGroupTest.java,186,,"                                    ""target/test-repository/com/example/test/test-artifact-module-a"" );"
11730,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverMRM1411RepoGroupTest.java,188,,"                ""target/test-repository/com/example/test/test-artifact-root"" );"
11731,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverMRM1411RepoGroupTest.java,189,,"        copyTestArtifactWithParent( ""src/test/resources/com/example/test/test-artifact-parent"","
11732,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverMRM1411RepoGroupTest.java,190,,"                ""target/test-repository/com/example/test/test-artifact-parent"" );"
11733,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverMRM1411RepoGroupTest.java,193,,"            new ReadMetadataRequest().repositoryId( TEST_REPO_ID ).namespace( ""com.example.test"" ).projectId("
11734,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverMRM1411RepoGroupTest.java,194,,"                ""test-artifact-module-a"" ).projectVersion( ""1.0"" );"
11735,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverMRM1411RepoGroupTest.java,194,,"                ""test-artifact-module-a"" ).projectVersion( ""1.0"" );"
11736,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverMRM1411RepoGroupTest.java,198,,"        assertEquals( ""jar"", facet.getPackaging() );"
11737,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverMRM1411RepoGroupTest.java,219,,"        assertDependency( dependencies.get( 0 ), ""commons-io"", ""commons-io"", ""1.4"" );"
11738,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverMRM1411RepoGroupTest.java,219,,"        assertDependency( dependencies.get( 0 ), ""commons-io"", ""commons-io"", ""1.4"" );"
11739,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverMRM1411RepoGroupTest.java,220,,"        assertDependency( dependencies.get( 1 ), ""junit"", ""junit"", ""3.8.1"", ""test"" );"
11740,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverMRM1411RepoGroupTest.java,220,,"        assertDependency( dependencies.get( 1 ), ""junit"", ""junit"", ""3.8.1"", ""test"" );"
11741,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverMRM1411RepoGroupTest.java,302,,"                                    ""target/test-repositorys/com/example/test/test-snapshot-artifact-module-a"" );"
11742,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverMRM1411RepoGroupTest.java,304,,"                                    ""target/test-repositorys/com/example/test/test-snapshot-artifact-root"" );"
11743,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverMRM1411RepoGroupTest.java,309,,"            new ReadMetadataRequest( TEST_SNAP_REPO_ID, ""com.example.test"", ""test-snapshot-artifact-module-a"","
11744,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverMRM1411RepoGroupTest.java,310,,"                                     ""1.1-SNAPSHOT"" );"
11745,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverMRM1411Test.java,157,,"                                    ""target/test-repository/com/example/test/test-artifact-module-a"" );"
11746,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverMRM1411Test.java,159,,"                ""target/test-repository/com/example/test/test-artifact-parent"" );"
11747,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverMRM1411Test.java,162,,"                ""target/test-repository/com/example/test/test-artifact-root"" );"
11748,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverMRM1411Test.java,165,,"            new ReadMetadataRequest( TEST_REPO_ID, ""com.example.test"", ""test-artifact-module-a"", ""1.0"" ) );"
11749,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverMRM1411Test.java,165,,"            new ReadMetadataRequest( TEST_REPO_ID, ""com.example.test"", ""test-artifact-module-a"", ""1.0"" ) );"
11750,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverMRM1411Test.java,165,,"            new ReadMetadataRequest( TEST_REPO_ID, ""com.example.test"", ""test-artifact-module-a"", ""1.0"" ) );"
11751,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverMRM1411Test.java,168,,"        assertEquals( ""jar"", facet.getPackaging() );"
11752,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverMRM1411Test.java,189,,"        assertDependency( dependencies.get( 0 ), ""commons-io"", ""commons-io"", ""1.4"" );"
11753,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverMRM1411Test.java,190,,"        assertDependency( dependencies.get( 1 ), ""junit"", ""junit"", ""3.8.1"", ""test"" );"
11754,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverMRM1411Test.java,264,,"                                    ""target/test-repository/com/example/test/test-snapshot-artifact-module-a"" );"
11755,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverMRM1411Test.java,274,,"                                     ""1.1-SNAPSHOT"" ) );"
11756,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverTest.java,83,,"    private static final String TEST_REPO_ID = ""test"";"
11757,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverTest.java,178,,"            new ReadMetadataRequest( TEST_REPO_ID, ""org.apache.archiva"", ""archiva-common"", ""1.2.1"" ) );"
11758,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverTest.java,178,,"            new ReadMetadataRequest( TEST_REPO_ID, ""org.apache.archiva"", ""archiva-common"", ""1.2.1"" ) );"
11759,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverTest.java,178,,"            new ReadMetadataRequest( TEST_REPO_ID, ""org.apache.archiva"", ""archiva-common"", ""1.2.1"" ) );"
11760,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverTest.java,180,,"        assertEquals( ""jar"", facet.getPackaging() );"
11761,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverTest.java,219,,"        assertDependency( dependencies.get( 3 ), ""org.codehaus.plexus"", ""plexus-component-api"", ""1.0-alpha-22"" );"
11762,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverTest.java,220,,"        assertDependency( dependencies.get( 4 ), ""org.codehaus.plexus"", ""plexus-spring"", ""1.2"", ""test"" );"
11763,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverTest.java,220,,"        assertDependency( dependencies.get( 4 ), ""org.codehaus.plexus"", ""plexus-spring"", ""1.2"", ""test"" );"
11764,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverTest.java,271,,"        assertEquals( ""pom"", facet.getType() );"
11765,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverTest.java,279,,"            new ReadMetadataRequest( TEST_REPO_ID, ""com.example.test"", ""test-artifact"", ""1.0-SNAPSHOT"", ALL ) );"
11766,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverTest.java,279,,"            new ReadMetadataRequest( TEST_REPO_ID, ""com.example.test"", ""test-artifact"", ""1.0-SNAPSHOT"", ALL ) );"
11767,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverTest.java,296,,"        assertEquals( ""20100308.230825"", facet.getTimestamp() );"
11768,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverTest.java,312,,"        assertEquals( ""20100310.014828"", facet.getTimestamp() );"
11769,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverTest.java,313,,"        assertEquals( ""javadoc"", facet.getClassifier() );"
11770,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverTest.java,447,,"            new ReadMetadataRequest( TEST_REPO_ID, ""org.apache"", ""apache"", ""5-SNAPSHOT"" ) );"
11771,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverTest.java,447,,"            new ReadMetadataRequest( TEST_REPO_ID, ""org.apache"", ""apache"", ""5-SNAPSHOT"" ) );"
11772,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverTest.java,487,,"                new ReadMetadataRequest( TEST_REPO_ID, ""com.example.test"", ""missing-metadata"", ""1.0-SNAPSHOT"" ) );"
11773,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverTest.java,488,,"            fail( ""Should not be found"" );"
11774,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverTest.java,492,,"            assertEquals( ""missing-pom"", e.getId() );"
11775,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverTest.java,535,,"                new ReadMetadataRequest( TEST_REPO_ID, ""com.example.test"", ""invalid-pom"", ""1.0"" ) );"
11776,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-repository/src/test/java/org/apache/archiva/repository/maven/metadata/storage/Maven2RepositoryMetadataResolverTest.java,535,,"                new ReadMetadataRequest( TEST_REPO_ID, ""com.example.test"", ""invalid-pom"", ""1.0"" ) );"
11777,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-scheduler/src/test/java/org/apache/archiva/scheduler/indexing/maven/ArchivaIndexingTaskExecutorTest.java,96,,"        BasicManagedRepository repositoryConfig = BasicManagedRepository.newFilesystemInstance(""test-repo"", ""Test Repository"", baseDir.resolve(""test-repo""));"
11778,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-scheduler/src/test/java/org/apache/archiva/scheduler/indexing/maven/ArchivaIndexingTaskExecutorTest.java,141,,"                                      ""org/apache/archiva/archiva-index-methods-jar-test/1.0/archiva-index-methods-jar-test-1.0.jar"" );"
11779,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-scheduler/src/test/java/org/apache/archiva/scheduler/indexing/maven/ArchivaIndexingTaskExecutorTest.java,154,,"        queryBuilder.add( indexer.constructQuery( MAVEN.GROUP_ID, new StringSearchExpression( ""org.apache.archiva"" ) ),"
11780,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-scheduler/src/test/java/org/apache/archiva/scheduler/indexing/maven/ArchivaIndexingTaskExecutorTest.java,157,,"            indexer.constructQuery( MAVEN.ARTIFACT_ID, new StringSearchExpression( ""archiva-index-methods-jar-test"" ) ),"
11781,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-scheduler/src/test/java/org/apache/archiva/scheduler/indexing/maven/ArchivaIndexingTaskExecutorTest.java,164,,"        assertTrue( Files.exists(basePath.resolve( "".indexer"" )) );"
11782,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-scheduler/src/test/java/org/apache/archiva/scheduler/indexing/maven/ArchivaIndexingTaskExecutorTest.java,165,,"        assertTrue( Files.exists(basePath.resolve("".index"" )) );"
11783,./TargetProjects/archiva/archiva-modules/archiva-maven/archiva-maven-scheduler/src/test/java/org/apache/archiva/scheduler/indexing/maven/DownloadRemoteIndexTaskTest.java,105,,"            repositoryRegistry.removeRepository( ""test-repo-re"" );"
11784,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-api/src/main/java/org/apache/archiva/rest/api/services/ArchivaAdministrationService.java,70,,"    ActionStatus addFileTypePattern( @QueryParam( ""fileTypeId"" ) String fileTypeId, @QueryParam( ""pattern"" ) String pattern )"
11785,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-api/src/main/java/org/apache/archiva/rest/api/services/BrowseService.java,59,,"    BrowseResult getRootGroups( @QueryParam(""repositoryId"") String repositoryId )"
11786,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-api/src/main/java/org/apache/archiva/rest/api/services/BrowseService.java,154,,"                              @PathParam(""v"") String version, @PathParam(""key"") String key, @PathParam(""value"") String value,"
11787,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-api/src/main/java/org/apache/archiva/rest/api/services/BrowseService.java,154,,"                              @PathParam(""v"") String version, @PathParam(""key"") String key, @PathParam(""value"") String value,"
11788,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-api/src/main/java/org/apache/archiva/rest/api/services/ManagedRepositoriesService.java,63,,"    ManagedRepository getManagedRepository( @PathParam( ""repositoryId"" ) String repositoryId )"
11789,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-api/src/main/java/org/apache/archiva/rest/api/services/RepositoriesService.java,59,,"    ActionStatus scanRepository( @QueryParam (""repositoryId"") String repositoryId,"
11790,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-api/src/main/java/org/apache/archiva/rest/api/services/RepositoryGroupService.java,56,,"    RepositoryGroup getRepositoryGroup( @PathParam( ""repositoryGroupId"" ) String repositoryGroupId )"
11791,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-api/src/main/java/org/apache/archiva/rest/api/services/v2/RepositoryGroupService.java,79,,"            @ApiResponse( responseCode = ""200"","
11792,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-api/src/main/java/org/apache/archiva/rest/api/services/v2/RepositoryGroupService.java,83,,"            @ApiResponse( responseCode = ""403"", description = ""Authenticated user is not permitted to gather the information"","
11793,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-api/src/main/java/org/apache/archiva/rest/api/services/v2/RepositoryGroupService.java,83,,"            @ApiResponse( responseCode = ""403"", description = ""Authenticated user is not permitted to gather the information"","
11794,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-api/src/main/java/org/apache/archiva/rest/api/services/v2/RepositoryGroupService.java,111,,"            @ApiResponse( responseCode = ""404"", description = ""The repository group with the given id does not exist"","
11795,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-api/src/main/java/org/apache/archiva/rest/api/services/v2/RepositoryService.java,81,,"            @ApiResponse( responseCode = ""200"","
11796,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-api/src/main/java/org/apache/archiva/rest/api/services/v2/RepositoryService.java,85,,"            @ApiResponse( responseCode = ""403"", description = ""Authenticated user is not permitted to gather the information"","
11797,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-api/src/main/java/org/apache/archiva/rest/api/services/v2/RepositoryService.java,85,,"            @ApiResponse( responseCode = ""403"", description = ""Authenticated user is not permitted to gather the information"","
11798,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-api/src/main/java/org/apache/archiva/rest/api/services/v2/RepositoryService.java,113,,"            @ApiResponse( responseCode = ""404"", description = ""The repository does not exist"","
11799,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-api/src/main/java/org/apache/archiva/rest/api/services/v2/RepositoryService.java,113,,"            @ApiResponse( responseCode = ""404"", description = ""The repository does not exist"","
11800,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-api/src/main/java/org/apache/archiva/rest/api/services/v2/SecurityConfigurationService.java,77,,"            @ApiResponse( responseCode = ""200"","
11801,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-api/src/main/java/org/apache/archiva/rest/api/services/v2/SecurityConfigurationService.java,78,,"                description = ""If the configuration could be retrieved"","
11802,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-api/src/main/java/org/apache/archiva/rest/api/services/v2/SecurityConfigurationService.java,81,,"            @ApiResponse( responseCode = ""403"", description = ""Authenticated user is not permitted to gather the information"","
11803,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-api/src/main/java/org/apache/archiva/rest/api/services/v2/SecurityConfigurationService.java,81,,"            @ApiResponse( responseCode = ""403"", description = ""Authenticated user is not permitted to gather the information"","
11804,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-api/src/main/java/org/apache/archiva/rest/api/services/v2/SecurityConfigurationService.java,155,,"            @Parameter(in = ParameterIn.PATH, name=""propertyName"", description = ""The name of the property to get the value for"")"
11805,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-api/src/main/java/org/apache/archiva/rest/api/services/v2/maven/MavenManagedRepositoryService.java,85,,"            @ApiResponse( responseCode = ""200"","
11806,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-api/src/main/java/org/apache/archiva/rest/api/services/v2/maven/MavenManagedRepositoryService.java,89,,"            @ApiResponse( responseCode = ""403"", description = ""Authenticated user is not permitted to gather the information"","
11807,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-api/src/main/java/org/apache/archiva/rest/api/services/v2/maven/MavenManagedRepositoryService.java,89,,"            @ApiResponse( responseCode = ""403"", description = ""Authenticated user is not permitted to gather the information"","
11808,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-api/src/main/java/org/apache/archiva/rest/api/services/v2/maven/MavenManagedRepositoryService.java,102,,"    @Path( ""{id}"" )"
11809,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-api/src/main/java/org/apache/archiva/rest/api/services/v2/maven/MavenManagedRepositoryService.java,119,,"            @ApiResponse( responseCode = ""404"", description = ""The managed repository with this id does not exist"","
11810,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/main/java/org/apache/archiva/rest/services/DefaultManagedRepositoriesService.java,269,,"            snippet.append( ""        <enabled>"" ).append( Boolean.valueOf( repo.isReleases() ) ).append("
11811,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/main/java/org/apache/archiva/rest/services/DefaultManagedRepositoriesService.java,270,,"                ""</enabled>\n"" );"
11812,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/main/java/org/apache/archiva/rest/services/DefaultRepositoriesService.java,641,,"            throw new ArchivaRestServiceException( ""repositoryId cannot be null"", 400, null );"
11813,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/main/java/org/apache/archiva/rest/services/DefaultRepositoriesService.java,646,,"            throw new ArchivaRestServiceException( ""not authorized to delete artifacts"", 403, null );"
11814,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/main/java/org/apache/archiva/rest/services/DefaultRepositoriesService.java,703,,"            throw new ArchivaRestServiceException( ""Repository exception: "" + e.getMessage(), 500, e );"
11815,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/main/java/org/apache/archiva/rest/services/v2/DefaultSecurityConfigurationService.java,163,,"            log.debug( ""getRedbackRuntimeConfiguration -> {}"", redbackRuntimeConfiguration );"
11816,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/AbstractArchivaRestTest.java,239,,"        T service = JAXRSClientFactory.create( getBaseUrl() + ""/"" + getRestServicesPath() + ""/archivaServices/"", clazz,"
11817,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/AbstractArchivaRestTest.java,244,,"            WebClient.client( service ).header( ""Authorization"", authzHeader );"
11818,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/AbstractArchivaRestTest.java,246,,"        WebClient.client(service).header(""Referer"",""http://localhost:""+getServerPort());"
11819,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/AbstractArchivaRestTest.java,246,,"        WebClient.client(service).header(""Referer"",""http://localhost:""+getServerPort());"
11820,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/ArchivaAdministrationServiceTest.java,52,,"        fileType.setId( ""footwo"" );"
11821,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/ArchivaAdministrationServiceTest.java,53,,"        fileType.setPatterns( Arrays.asList( ""foo"", ""bar"" ) );"
11822,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/ArchivaAdministrationServiceTest.java,83,,"        organisationInformation.setName( ""foo org"" );"
11823,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/ArtifactContentEntriesTests.java,64,,"                              ""src/test/repo-with-osgi/commons-logging/commons-logging/1.1/commons-logging-1.1.jar"" );"
11824,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/ArtifactContentEntriesTests.java,66,,"        List<ArtifactContentEntry> artifactContentEntries = browseService.readFileEntries( new FilesystemAsset(filesystemStorage, file.toString(), file), null, ""foo"" );"
11825,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/ArtifactContentEntriesTests.java,68,,"        log.info( ""artifactContentEntries: {}"", artifactContentEntries );"
11826,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/ArtifactContentEntriesTests.java,71,,"            new ArtifactContentEntry( ""org"", false, 0, ""foo"" ),"
11827,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/BrowseServiceTest.java,80,,"            toMap( browseService.getMetadatas( ""commons-cli"", ""commons-cli"", ""1.0"", TEST_REPO_ID ) );"
11828,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/BrowseServiceTest.java,80,,"            toMap( browseService.getMetadatas( ""commons-cli"", ""commons-cli"", ""1.0"", TEST_REPO_ID ) );"
11829,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/BrowseServiceTest.java,84,,"        browseService.addMetadata( ""commons-cli"", ""commons-cli"", ""1.0"", ""wine"", ""bordeaux"", TEST_REPO_ID );"
11830,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/BrowseServiceTest.java,84,,"        browseService.addMetadata( ""commons-cli"", ""commons-cli"", ""1.0"", ""wine"", ""bordeaux"", TEST_REPO_ID );"
11831,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/BrowseServiceTest.java,140,,"                       new BrowseResultEntry( ""commons-logging"", false ), //"
11832,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/BrowseServiceTest.java,253,,"            browseService.getArtifactContentEntries( ""commons-logging"", ""commons-logging"", ""1.1"", null, null, null,"
11833,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/NetworkProxyServiceTest.java,37,,"        getNetworkProxyService().addNetworkProxy( getNetworkProxy( ""foo"" ) );"
11834,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/RedbackRuntimeConfigurationServiceTest.java,44,,"        assertEquals( ""jpa"", redbackRuntimeConfiguration.getUserManagerImpls().get( 0 ) );"
11835,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/RemoteRepositoriesServiceTest.java,42,,"            WebClient.client( service ).header( ""Authorization"", authorizationHeader );"
11836,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/RemoteRepositoriesServiceTest.java,98,,"        assertNotNull( service.getRemoteRepository( ""id-new"" ) );"
11837,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/RepositoriesServiceTest.java,94,,"            artifact.setGroupId( ""commons-logging"" );"
11838,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/RepositoriesServiceTest.java,96,,"            artifact.setVersion( ""1.0.1"" );"
11839,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/RepositoriesServiceTest.java,97,,"            artifact.setPackaging( ""jar"" );"
11840,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/RepositoriesServiceTest.java,152,,"            browseService.getArtifactDownloadInfos( ""org.apache.karaf.features"", ""org.apache.karaf.features.core"","
11841,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/RepositoriesServiceTest.java,152,,"            browseService.getArtifactDownloadInfos( ""org.apache.karaf.features"", ""org.apache.karaf.features.core"","
11842,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/RepositoriesServiceTest.java,153,,"                                                    ""2.2.2"", SOURCE_REPO_ID );"
11843,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/RepositoriesServiceTest.java,155,,"        log.info( ""artifacts: {}"", artifacts );"
11844,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/RepositoriesServiceTest.java,389,,"        ManagedRepository managedRepository = getTestManagedRepository( ""SOURCE_REPO_ID"", ""SOURCE_REPO_ID"" );"
11845,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/SearchServiceTest.java,52,,"        List<Artifact> artifacts = searchService.quickSearch( ""commons-logging"" );"
11846,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/SearchServiceTest.java,60,,"        log.info( ""artifacts for commons-logging size {} search {}"", artifacts.size(), artifacts );"
11847,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/v2/NativeRepositoryGroupServiceTest.java,94,,"            jsonAsMap.put( ""id"", ""group_001"" );"
11848,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/v2/NativeRepositoryGroupServiceTest.java,95,,"            jsonAsMap.put( ""name"", ""group_001"" );"
11849,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/v2/NativeRepositoryGroupServiceTest.java,293,,"                .put( ""group_001/repositories/internal"" )"
11850,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/v2/NativeRepositoryGroupServiceTest.java,301,,"            assertTrue( result.getRepositories( ).contains( ""internal"" ) );"
11851,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/v2/NativeRepositoryServiceTest.java,77,,"        assertTrue( data.stream( ).anyMatch( p -> ""central"".equals( p.getId( ) ) ) );"
11852,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/v2/NativeSecurityConfigurationServiceTest.java,80,,"                .get( ""config"" )"
11853,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/v2/NativeSecurityConfigurationServiceTest.java,83,,"        assertEquals( ""jpa"", response.getBody( ).jsonPath( ).getString( ""active_user_managers[0]"" ) );"
11854,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/v2/NativeSecurityConfigurationServiceTest.java,126,,"            .get( ""config/ldap"" )"
11855,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/v2/NativeSecurityConfigurationServiceTest.java,186,,"            .get( ""config/cache"" )"
11856,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/v2/NativeSecurityConfigurationServiceTest.java,310,,"            .get( ""config/properties/rest.csrffilter.absentorigin.deny"" )"
11857,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/v2/NativeSecurityConfigurationServiceTest.java,313,,"        assertEquals( ""true"", response.getBody( ).jsonPath( ).getString( ""value"" ) );"
11858,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-security/src/test/java/org/apache/archiva/security/ArchivaServletAuthenticatorTest.java,63,,"        setupRepository( ""corporate"" );"
11859,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-security/src/test/java/org/apache/archiva/security/ArchivaServletAuthenticatorTest.java,102,,"        createUser( USER_ALPACA, ""Al 'Archiva' Paca"" );"
11860,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-security/src/test/java/org/apache/archiva/security/DefaultUserRepositoriesTest.java,61,,"        setupRepository( ""central"" );"
11861,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-security/src/test/java/org/apache/archiva/security/DefaultUserRepositoriesTest.java,62,,"        setupRepository( ""corporate"" );"
11862,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-web-common/src/test/java/org/apache/archiva/remotedownload/AbstractDownloadTest.java,213,,"            JAXRSClientFactory.create( getBaseUrl() + ""/"" + getRestServicesPath() + ""/archivaServices/"","
11863,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-web-common/src/test/java/org/apache/archiva/remotedownload/AbstractDownloadTest.java,217,,"        WebClient.client( service ).header( ""Authorization"", authorizationHeader );"
11864,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-web-common/src/test/java/org/apache/archiva/remotedownload/AbstractDownloadTest.java,218,,"        WebClient.client( service ).header( ""Referer"", ""http://localhost:"" + port );"
11865,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-web-common/src/test/java/org/apache/archiva/remotedownload/AbstractDownloadTest.java,218,,"        WebClient.client( service ).header( ""Referer"", ""http://localhost:"" + port );"
11866,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-web-common/src/test/java/org/apache/archiva/remotedownload/DownloadArtifactFromQueryTest.java,59,,"        previousAppServerBase = System.getProperty( ""appserver.base"" );"
11867,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-web-common/src/test/java/org/apache/archiva/remotedownload/DownloadArtifactsTest.java,82,,"        previousAppServerBase = System.getProperty( ""appserver.base"" );"
11868,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-web-common/src/test/java/org/apache/archiva/remotedownload/DownloadMergedIndexNonDefaultPathTest.java,69,,"        previousAppServerBase = System.getProperty( ""appserver.base"" );"
11869,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-web-common/src/test/java/org/apache/archiva/remotedownload/DownloadMergedIndexTest.java,68,,"        previousAppServerBase = System.getProperty( ""appserver.base"" );"
11870,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-web-common/src/test/java/org/apache/archiva/remotedownload/DownloadMergedIndexTest.java,182,,"        remoteRepository.setId( ""all-merged"" );"
11871,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-web-common/src/test/java/org/apache/archiva/remotedownload/DownloadSnapshotTest.java,65,,"        previousAppServerBase = System.getProperty( ""appserver.base"" );"
11872,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-web-common/src/test/java/org/apache/archiva/remotedownload/RemoteRepositoryConnectivityCheckTest.java,57,,"        previousAppServerBase = System.getProperty( ""appserver.base"" );"
11873,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-web-common/src/test/java/org/apache/archiva/remotedownload/RemoteRepositoryConnectivityCheckTest.java,116,,"            service.deleteRemoteRepository( ""id-new"" );"
11874,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-web-common/src/test/java/org/apache/archiva/upload/UploadArtifactsTest.java,138,,"            Path file = getProjectDirectory().resolve(""src/test/repositories/snapshot-repo/org/apache/archiva/archiva-model/1.4-M4-SNAPSHOT/archiva-model-1.4-M4-20130425.081822-1.jar"");"
11875,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-web-common/src/test/java/org/apache/archiva/upload/UploadArtifactsTest.java,139,,"            final Attachment fileAttachment = new AttachmentBuilder().object(Files.newInputStream(file)).contentDisposition(new ContentDisposition(""form-data; filename=\"""" + file.getFileName().toString() + ""\""; name=\""files[]\"""")).build();"
11876,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-web-common/src/test/java/org/apache/archiva/upload/UploadArtifactsTest.java,139,,"            final Attachment fileAttachment = new AttachmentBuilder().object(Files.newInputStream(file)).contentDisposition(new ContentDisposition(""form-data; filename=\"""" + file.getFileName().toString() + ""\""; name=\""files[]\"""")).build();"
11877,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-web-common/src/test/java/org/apache/archiva/upload/UploadArtifactsTest.java,235,,"        assertTrue(service.save(""internal"", ""org.apache.archiva"", ""archiva-model"", ""1.2"", ""jar"", true));"
11878,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-web-common/src/test/java/org/apache/archiva/web/rss/RssFeedServletTest.java,456,,"        request.addHeader( ""User-Agent"", ""Apache Archiva unit test"" );"
11879,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-web-common/src/test/java/org/apache/archiva/web/rss/RssFeedServletTest.java,456,,"        request.addHeader( ""User-Agent"", ""Apache Archiva unit test"" );"
11880,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-web-common/src/test/java/org/apache/archiva/web/rss/RssFeedServletTest.java,457,,"        request.setMethod( ""GET"" );"
11881,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-web-common/src/test/java/org/apache/archiva/web/rss/RssFeedServletTest.java,462,,"        request.addHeader( ""Authorization"", ""BASIC "" + encodedUserPass );"
11882,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-web-common/src/test/java/org/apache/archiva/web/rss/RssFeedServletTest.java,462,,"        request.addHeader( ""Authorization"", ""BASIC "" + encodedUserPass );"
11883,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webapp-test/src/test/java/org/apache/archiva/web/test/LoginTest.java,45,,"        setFieldValue( ""user-login-form-username"", ""badUsername"" );"
11884,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webapp-test/src/test/java/org/apache/archiva/web/test/LoginTest.java,46,,"        clickLinkWithLocator( ""modal-login-ok"", false );"
11885,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webapp-test/src/test/java/org/apache/archiva/web/test/LoginTest.java,48,,"        wait.until(ExpectedConditions.textToBePresentInElementLocated(By.id(""modal-login""), ""This field is required.""));"
11886,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webapp-test/src/test/java/org/apache/archiva/web/test/LoginTest.java,56,,"        setFieldValue( ""user-login-form-username"", getProperty( ""ADMIN_USERNAME"" ) );"
11887,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webapp-test/src/test/java/org/apache/archiva/web/test/RepositoryAdminTest.java,63,,"        setFieldValue( ""id"", ""myrepoid"" );        "
11888,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webapp-test/src/test/java/org/apache/archiva/web/test/parent/AbstractSeleniumTest.java,167,,"                            ExpectedConditions.visibilityOfElementLocated(By.id(""login-link-a""))));"
11889,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webapp-test/src/test/java/org/apache/archiva/web/test/parent/AbstractSeleniumTest.java,417,,"        Assert.assertTrue( ""The link '"" + text + ""' isn't present."", isElementPresent( ""//*[text()='"" + text+""']//ancestor::a""  ) );"
11890,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webapp-test/src/test/java/org/apache/archiva/web/test/parent/AbstractSeleniumTest.java,417,,"        Assert.assertTrue( ""The link '"" + text + ""' isn't present."", isElementPresent( ""//*[text()='"" + text+""']//ancestor::a""  ) );"
11891,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webapp-test/src/test/java/org/apache/archiva/web/test/tools/WebdriverUtility.java,78,,"                    return new RemoteWebDriver( new URL( ""http://"" + seleniumHost + "":"" + seleniumPort + ""/wd/hub"" ),"
11892,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webapp-test/src/test/java/org/apache/archiva/web/test/tools/WebdriverUtility.java,78,,"                    return new RemoteWebDriver( new URL( ""http://"" + seleniumHost + "":"" + seleniumPort + ""/wd/hub"" ),"
11893,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/main/java/org/apache/archiva/webdav/ArchivaDavResourceFactory.java,270,,"                    ""Invalid repository: "" + archivaLocator.getRepositoryId() );"
11894,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/main/java/org/apache/archiva/webdav/ArchivaDavResourceFactory.java,274,,"                log.error(""Inconsistency detected. Repository content not found for '{}'"", archivaLocator.getRepositoryId());"
11895,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/main/java/org/apache/archiva/webdav/ArchivaDavResourceFactory.java,328,,"                            log.error(""Incompatible layout: {}"", e.getMessage(), e);"
11896,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/main/java/org/apache/archiva/webdav/ArchivaDavResourceFactory.java,867,,"            response.setHeader( ""Pragma"", ""no-cache"" );"
11897,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/main/java/org/apache/archiva/webdav/ArchivaDavResourceFactory.java,869,,"            response.setDateHeader( ""Last-Modified"", new Date().getTime() );"
11898,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/AbstractRepositoryServletTestCase.java,816,,"        assertNotNull( ""Should have recieved a response"", response );"
11899,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/ArchivaDavResourceFactoryTest.java,343,,"        DavResourceLocator locator = new ArchivaDavResourceLocator( """", ""/repository/"" + LOCAL_REPO_GROUP"
11900,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/ArchivaDavResourceFactoryTest.java,356,,"            expect( request.getMethod() ).andReturn( ""GET"" ).times( 3 );"
11901,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/ArchivaDavResourceFactoryTest.java,362,,"            expect( request.getRemoteAddr() ).andReturn( ""http://localhost:8080"" ).times( 2 );"
11902,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/ArchivaDavResourceFactoryTest.java,368,,"            expect( repoRequest.isSupportFile( ""org/apache/archiva/archiva/1.2-SNAPSHOT/archiva-1.2-SNAPSHOT.jar"" ) ).andReturn( true );"
11903,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/ArchivaDavResourceFactoryTest.java,372,,"                ""legacy"" );"
11904,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/ArchivaDavResourceFactoryTest.java,380,,"                          ""target/test-classes/internal/org/apache/archiva/archiva/1.2-SNAPSHOT/archiva-1.2-SNAPSHOT.jar"" ).toString());"
11905,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/ArchivaDavResourceLocatorTest.java,49,,"        String prefix = ""http://myproxy/"";"
11906,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/ArchivaDavResourceLocatorTest.java,57,,"        assertEquals( ""http://myproxy/repository/internal/"", locator.getHref( false ) );"
11907,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/ArchivaDavResourceLocatorTest.java,59,,"        assertEquals( ""/repository/internal"", locator.getResourcePath() );"
11908,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletDeployTest.java,67,,"        String putUrl = ""http://machine.com/repository/internal"" + ARTIFACT_DEFAULT_LAYOUT;"
11909,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletDeployTest.java,68,,"        InputStream is = getClass().getResourceAsStream( ""/artifact.jar"" );"
11910,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletDeployTest.java,70,,"        assertNotNull( ""artifact.jar inputstream"", is );"
11911,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletDeployTest.java,72,,"        WebRequest request = new PutMethodWebRequest( putUrl, is, ""application/octet-stream"" );"
11912,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletDeployTest.java,92,,"        String metadataUrl = ""http://machine.com/repository/internal/path/to/artifact/maven-metadata.xml"";"
11913,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletDeployTest.java,104,,"        is = getClass().getResourceAsStream( ""/artifact.jar.sha1"" );"
11914,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletDeployTest.java,109,,"        is = getClass().getResourceAsStream( ""/maven-metadata.xml"" );"
11915,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletNoProxyMetadataTest.java,66,,"        WebRequest request = new GetMethodWebRequest( ""http://machine.com/repository/internal/"" + commonsLangMetadata );"
11916,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletNoProxyMetadataTest.java,70,,"        assertEquals( ""Expected file contents"", expectedMetadataContents, response.getContentAsString() );"
11917,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletNoProxyTest.java,66,,"        String commonsLangSha1 = ""commons-lang/commons-lang/2.1/commons-lang-2.1.jar.sha1"";"
11918,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletNoProxyTest.java,71,,"        org.apache.archiva.common.utils.FileUtils.writeStringToFile( checksumFile, Charset.defaultCharset(), ""dummy-checksum"" );"
11919,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletNoProxyTest.java,74,,"        WebResponse response = getWebResponse( ""/repository/internal/"" + commonsLangSha1 );"
11920,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletNoProxyTest.java,93,,"        assertEquals( ""Expected file contents"", ""dummy-checksum"", response.getContentAsString() );"
11921,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletNoProxyTest.java,176,,"        String expectedArtifactContents = ""dummy-commons-lang-artifact"";"
11922,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletNoProxyTest.java,213,,"        String commonsLangJar = ""commons-lang/commons-lang/2.1-SNAPSHOT/commons-lang-2.1-SNAPSHOT.jar"";"
11923,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletNoProxyTest.java,214,,"        String expectedArtifactContents = ""dummy-commons-lang-snapshot-artifact"";"
11924,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletNoProxyTest.java,290,,"        String expectedContents = ""the-contents-of-the-dual-extension"";"
11925,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletNoProxyTest.java,335,,"        WebRequest request = new GetMethodWebRequest( ""http://machine.com/repository/legacy/"" + commonsLangSha1 );"
11926,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletProxiedMetadataLocalOnlyTest.java,61,,"        String expectedMetadata = createVersionMetadata( ""org.apache.archiva"", ""archivatest-maven-plugin"","
11927,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletProxiedMetadataLocalOnlyTest.java,61,,"        String expectedMetadata = createVersionMetadata( ""org.apache.archiva"", ""archivatest-maven-plugin"","
11928,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletProxiedMetadataRemoteOnlyTest.java,68,,"            createVersionMetadata( ""org.apache.archiva"", ""archivatest-maven-plugin"", version, timestamp, buildNumber,"
11929,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletProxiedMetadataRemoteOnlyTest.java,68,,"            createVersionMetadata( ""org.apache.archiva"", ""archivatest-maven-plugin"", version, timestamp, buildNumber,"
11930,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletRepositoryGroupTest.java,72,,"    protected static final String MANAGED_REPO_FIRST = ""first"";"
11931,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletRepositoryGroupTest.java,74,,"    protected static final String MANAGED_REPO_LAST = ""last"";"
11932,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletRepositoryGroupTest.java,167,,"            ""http://machine.com/repository/"" + REPO_GROUP_WITH_VALID_REPOS + ""/"" + resourceName );"
11933,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletSecurityTest.java,87,,"    protected static final String REPOID_INTERNAL = ""internal"";"
11934,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletSecurityTest.java,253,,"        InputStream is = getClass().getResourceAsStream( ""/artifact.jar"" );"
11935,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletSecurityTest.java,254,,"        assertNotNull( ""artifact.jar inputstream"", is );"
11936,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletSecurityTest.java,266,,"        EasyMock.expectLastCall().andThrow( new AuthenticationException( ""Authentication error"" ) );"
11937,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletSecurityTest.java,268,,"        servletAuth.isAuthorized( ""guest"", ""internal"", ArchivaRoleConstants.OPERATION_REPOSITORY_UPLOAD );"
11938,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletSecurityTest.java,275,,"        mockHttpServletRequest.addHeader( ""User-Agent"", ""foo"" );"
11939,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletSecurityTest.java,275,,"        mockHttpServletRequest.addHeader( ""User-Agent"", ""foo"" );"
11940,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletSecurityTest.java,276,,"        mockHttpServletRequest.setMethod( ""PUT"" );"
11941,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletSecurityTest.java,277,,"        mockHttpServletRequest.setRequestURI( ""/repository/internal/path/to/artifact.jar"" );"
11942,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletSecurityTest.java,279,,"        mockHttpServletRequest.setContentType( ""application/octet-stream"" );"
11943,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletSecurityTest.java,504,,"        String commonsLangJar = ""commons-lang/commons-lang/2.1/commons-lang-2.1.jar"";"
11944,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletSecurityTest.java,505,,"        String expectedArtifactContents = ""dummy-commons-lang-artifact"";"
11945,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletSecurityTest.java,556,,"        mockHttpServletRequest.setMethod( ""GET"" );"
11946,./TargetProjects/archiva/archiva-modules/archiva-web/archiva-webdav/src/test/java/org/apache/archiva/webdav/RepositoryServletSecurityTest.java,557,,"        mockHttpServletRequest.setRequestURI( ""/repository/internal/"" + commonsLangJar );"
11947,./TargetProjects/archiva/archiva-modules/metadata/metadata-repository-api/src/main/java/org/apache/archiva/metadata/repository/DefaultMetadataResolver.java,143,,"                    log.warn( ""Unable to persist resolved information: {}"", e.getMessage(), e );"
11948,./TargetProjects/archiva/archiva-modules/metadata/metadata-repository-api/src/test/java/org/apache/archiva/metadata/repository/AbstractMetadataRepositoryTest.java,400,,"            scm.setUrl( ""url"" );"
11949,./TargetProjects/archiva/archiva-modules/metadata/metadata-repository-api/src/test/java/org/apache/archiva/metadata/repository/AbstractMetadataRepositoryTest.java,404,,"            ci.setSystem( ""system"" );"
11950,./TargetProjects/archiva/archiva-modules/metadata/metadata-repository-api/src/test/java/org/apache/archiva/metadata/repository/AbstractMetadataRepositoryTest.java,422,,"            d.setClassifier( ""classifier"" );"
11951,./TargetProjects/archiva/archiva-modules/metadata/metadata-repository-api/src/test/java/org/apache/archiva/metadata/repository/AbstractMetadataRepositoryTest.java,423,,"            d.setNamespace( ""groupId"" );"
11952,./TargetProjects/archiva/archiva-modules/metadata/metadata-repository-api/src/test/java/org/apache/archiva/metadata/repository/AbstractMetadataRepositoryTest.java,424,,"            d.setScope( ""scope"" );"
11953,./TargetProjects/archiva/archiva-modules/metadata/metadata-repository-api/src/test/java/org/apache/archiva/metadata/repository/AbstractMetadataRepositoryTest.java,425,,"            d.setSystemPath( ""system path"" );"
11954,./TargetProjects/archiva/archiva-modules/metadata/metadata-repository-api/src/test/java/org/apache/archiva/metadata/repository/AbstractMetadataRepositoryTest.java,426,,"            d.setType( ""type"" );"
11955,./TargetProjects/archiva/archiva-modules/metadata/metadata-repository-api/src/test/java/org/apache/archiva/metadata/repository/AbstractMetadataRepositoryTest.java,523,,"            MetadataFacet facet = new TestMetadataFacet( ""baz"" );"
11956,./TargetProjects/archiva/archiva-modules/metadata/metadata-repository-api/src/test/java/org/apache/archiva/metadata/repository/AbstractMetadataRepositoryTest.java,588,,"            additionalProps.put( ""deleteKey"", ""deleteValue"" );"
11957,./TargetProjects/archiva/archiva-modules/metadata/metadata-repository-api/src/test/java/org/apache/archiva/metadata/repository/AbstractMetadataRepositoryTest.java,588,,"            additionalProps.put( ""deleteKey"", ""deleteValue"" );"
11958,./TargetProjects/archiva/archiva-modules/metadata/metadata-repository-api/src/test/java/org/apache/archiva/metadata/repository/AbstractMetadataRepositoryTest.java,913,,"                getRepository( ).addMetadataFacet( session, TEST_REPO_ID, new TestMetadataFacet( TEST_FACET_ID, TEST_VALUE, TEST_NAME+""/""+String.format(""%03d"",i) ) );"
11959,./TargetProjects/archiva/archiva-modules/metadata/metadata-repository-api/src/test/java/org/apache/archiva/metadata/repository/AbstractMetadataRepositoryTest.java,1243,,"            artifact1.setId( artifact1.getProject( ) + ""-"" + version1 + "".jar"" );"
11960,./TargetProjects/archiva/archiva-modules/metadata/metadata-repository-api/src/test/java/org/apache/archiva/metadata/repository/AbstractMetadataRepositoryTest.java,1552,,"                namespaces = getRepository( ).getChildNamespaces( session, TEST_REPO_ID, ""org.apache.maven"" );"
11961,./TargetProjects/archiva/archiva-modules/metadata/metadata-repository-api/src/test/java/org/apache/archiva/metadata/repository/AbstractMetadataRepositoryTest.java,1813,,"                    getRepository( ).getArtifactsByAttribute( session, ""foo"", TEST_METADATA_VALUE, null );"
11962,./TargetProjects/archiva/archiva-modules/metadata/metadata-repository-api/src/test/java/org/apache/archiva/metadata/repository/AbstractMetadataRepositoryTest.java,1903,,"            artifact.addFacet( new TestMetadataFacet( ""value"" ) );"
11963,./TargetProjects/archiva/archiva-modules/metadata/metadata-repository-api/src/test/java/org/apache/archiva/metadata/repository/AbstractMetadataRepositoryTest.java,2031,,"            artifactOne.setProjectVersion( ""2.0-SNAPSHOT"" );"
11964,./TargetProjects/archiva/archiva-modules/metadata/metadata-store-provider/metadata-store-cassandra/src/main/java/org/apache/archiva/metadata/repository/cassandra/CassandraMetadataRepository.java,715,,"            Boolean.parseBoolean( getStringValue( columnSlice, ""incomplete"" ) ) );"
11965,./TargetProjects/archiva/archiva-modules/metadata/metadata-store-provider/metadata-store-cassandra/src/main/java/org/apache/archiva/metadata/repository/cassandra/CassandraMetadataRepository.java,1129,,"            addInsertion( mailingMutator, keyMailingList, cfMailingList, ""projectVersionMetadataModel.key"","
11966,./TargetProjects/archiva/archiva-modules/metadata/metadata-store-provider/metadata-store-cassandra/src/test/java/org/apache/archiva/metadata/repository/cassandra/RepositoriesNamespaceTest.java,88,,"            cmr.updateNamespace( null , ""release"", ""org"" );"
11967,./TargetProjects/archiva/archiva-modules/metadata/metadata-store-provider/metadata-store-cassandra/src/test/java/org/apache/archiva/metadata/repository/cassandra/RepositoriesNamespaceTest.java,88,,"            cmr.updateNamespace( null , ""release"", ""org"" );"
11968,./TargetProjects/archiva/archiva-modules/metadata/metadata-store-provider/metadata-store-file/src/main/java/org/apache/archiva/metadata/repository/file/FileMetadataRepository.java,162,,"                if (!name.contains("":"") && !name.equals(""facetIds"")) {"
11969,./TargetProjects/archiva/archiva-modules/metadata/metadata-store-provider/metadata-store-file/src/main/java/org/apache/archiva/metadata/repository/file/FileMetadataRepository.java,193,,"                setProperty(properties, ""license."" + i + "".name"", license.getName());"
11970,./TargetProjects/archiva/archiva-modules/metadata/metadata-store-provider/metadata-store-file/src/main/java/org/apache/archiva/metadata/repository/file/FileMetadataRepository.java,193,,"                setProperty(properties, ""license."" + i + "".name"", license.getName());"
11971,./TargetProjects/archiva/archiva-modules/metadata/metadata-store-provider/metadata-store-file/src/main/java/org/apache/archiva/metadata/repository/file/FileMetadataRepository.java,199,,"                setProperty(properties, ""mailingList."" + i + "".archive"", mailingList.getMainArchiveUrl());"
11972,./TargetProjects/archiva/archiva-modules/metadata/metadata-store-provider/metadata-store-file/src/main/java/org/apache/archiva/metadata/repository/file/FileMetadataRepository.java,215,,"                setProperty(properties, ""dependency."" + i + "".classifier"", dependency.getClassifier());"
11973,./TargetProjects/archiva/archiva-modules/metadata/metadata-store-provider/metadata-store-file/src/main/java/org/apache/archiva/metadata/repository/file/FileMetadataRepository.java,274,,"            setProperty(properties, ""ref:reference."" + i + "".namespace"", reference.getNamespace());"
11974,./TargetProjects/archiva/archiva-modules/metadata/metadata-store-provider/metadata-store-file/src/main/java/org/apache/archiva/metadata/repository/file/FileMetadataRepository.java,307,,"            final String searchFile = METADATA_KEY + "".properties"";"
11975,./TargetProjects/archiva/archiva-modules/metadata/metadata-store-provider/metadata-store-file/src/main/java/org/apache/archiva/metadata/repository/file/FileMetadataRepository.java,538,,"                        String algorithmStr = StringUtils.removeStart( name, ""artifact:checksum:""+id+"":"");"
11976,./TargetProjects/archiva/archiva-modules/metadata/metadata-store-provider/metadata-store-file/src/main/java/org/apache/archiva/metadata/repository/file/FileMetadataRepository.java,542,,"                            String propertyPrefix = ""artifact:facet:"" + id + "":"";"
11977,./TargetProjects/archiva/archiva-modules/metadata/metadata-store-provider/metadata-store-file/src/main/java/org/apache/archiva/metadata/repository/file/FileMetadataRepository.java,641,,"            properties.remove(""artifact:version:"" + id);"
11978,./TargetProjects/archiva/archiva-modules/metadata/metadata-store-provider/oak-jcr/metadata-store-jcr/src/main/java/org/apache/archiva/metadata/repository/jcr/JcrMetadataRepository.java,110,,"    private static final String QUERY_ARTIFACT_1 = ""SELECT * FROM ["" + ARTIFACT_NODE_TYPE + ""] AS artifact WHERE ISDESCENDANTNODE(artifact,'/"";"
11979,./TargetProjects/archiva/archiva-modules/metadata/metadata-store-provider/oak-jcr/metadata-store-jcr/src/main/java/org/apache/archiva/metadata/repository/jcr/JcrMetadataRepository.java,209,,"            node.setProperty(""whenGathered"", cal);"
11980,./TargetProjects/archiva/archiva-modules/metadata/metadata-store-provider/oak-jcr/metadata-store-jcr/src/main/java/org/apache/archiva/metadata/repository/jcr/JcrMetadataRepository.java,211,,"            node.setProperty(""size"", artifactMeta.getSize());"
11981,./TargetProjects/archiva/archiva-modules/metadata/metadata-store-provider/oak-jcr/metadata-store-jcr/src/main/java/org/apache/archiva/metadata/repository/jcr/JcrMetadataRepository.java,225,,"                csNode.setProperty(""type"", type);"
11982,./TargetProjects/archiva/archiva-modules/metadata/metadata-store-provider/oak-jcr/metadata-store-jcr/src/main/java/org/apache/archiva/metadata/repository/jcr/JcrMetadataRepository.java,226,,"                csNode.setProperty(""value"", entry.getValue());"
11983,./TargetProjects/archiva/archiva-modules/metadata/metadata-store-provider/oak-jcr/metadata-store-jcr/src/main/java/org/apache/archiva/metadata/repository/jcr/JcrMetadataRepository.java,229,,"            node.setProperty(""version"", artifactMeta.getVersion());"
11984,./TargetProjects/archiva/archiva-modules/metadata/metadata-store-provider/oak-jcr/metadata-store-jcr/src/main/java/org/apache/archiva/metadata/repository/jcr/JcrMetadataRepository.java,266,,"            versionNode.setProperty(""name"", StringUtils.isEmpty(versionMetadata.getName()) ? """" : versionMetadata.getName());"
11985,./TargetProjects/archiva/archiva-modules/metadata/metadata-store-provider/oak-jcr/metadata-store-jcr/src/main/java/org/apache/archiva/metadata/repository/jcr/JcrMetadataRepository.java,268,,"            versionNode.setProperty(""url"", versionMetadata.getUrl());"
11986,./TargetProjects/archiva/archiva-modules/metadata/metadata-store-provider/oak-jcr/metadata-store-jcr/src/main/java/org/apache/archiva/metadata/repository/jcr/JcrMetadataRepository.java,352,,"                    n.setProperty(""namespace"", dependency.getNamespace());"
11987,./TargetProjects/archiva/archiva-modules/metadata/metadata-store-provider/oak-jcr/metadata-store-jcr/src/main/java/org/apache/archiva/metadata/repository/jcr/JcrMetadataRepository.java,540,,"                if (node.hasProperty(""archiva:name"")) {"
11988,./TargetProjects/archiva/archiva-modules/metadata/metadata-store-provider/oak-jcr/metadata-store-jcr/src/main/java/org/apache/archiva/metadata/repository/jcr/JcrMetadataRepository.java,731,,"        appendQueryParams(q, ""artifact"", ""whenGathered"", queryParameter);"
11989,./TargetProjects/archiva/archiva-modules/metadata/metadata-store-provider/oak-jcr/metadata-store-jcr/src/main/java/org/apache/archiva/metadata/repository/jcr/OakRepositoryFactory.java,414,,"                    .property(JCR_LASTMODIFIED ).propertyIndex().type( ""Date"" ).ordered()"
11990,./TargetProjects/archiva/archiva-modules/metadata/metadata-store-provider/oak-jcr/metadata-store-jcr/src/main/java/org/apache/archiva/metadata/repository/jcr/OakRepositoryFactory.java,451,,"                if (!oakIdx.hasChildNode( ""repo-lucene"" ))"
11991,./TargetProjects/archiva/archiva-modules/plugins/repository-statistics/src/test/java/org/apache/archiva/metadata/repository/stats/RepositoryStatisticsManagerTest.java,611,,"        stats.setTotalCountForType( ""jar"", 10 );"
11992,./TargetProjects/archiva/archiva-modules/plugins/repository-statistics/src/test/java/org/apache/archiva/metadata/repository/stats/RepositoryStatisticsManagerTest.java,612,,"        stats.setTotalCountForType( ""pom"", 10 );"
11993,./TargetProjects/archiva/archiva-modules/plugins/repository-statistics/src/test/java/org/apache/archiva/metadata/repository/stats/RepositoryStatisticsManagerTest.java,633,,"            expect( metadataRepository.getChildNamespaces(session , TEST_REPO_ID, ""com.example"" ) ).andReturn("
11994,./TargetProjects/archiva/archiva-modules/plugins/repository-statistics/src/test/java/org/apache/archiva/metadata/repository/stats/RepositoryStatisticsManagerTest.java,637,,"                Arrays.asList( ""example-project"" ) );"
11995,./TargetProjects/archiva/archiva-modules/plugins/repository-statistics/src/test/java/org/apache/archiva/metadata/repository/stats/RepositoryStatisticsManagerTest.java,640,,"                Arrays.asList( ""1.0"", ""1.1"" ) );"
11996,./TargetProjects/archiva/archiva-modules/plugins/repository-statistics/src/test/java/org/apache/archiva/metadata/repository/stats/RepositoryStatisticsManagerTest.java,640,,"                Arrays.asList( ""1.0"", ""1.1"" ) );"
11997,./TargetProjects/archiva/archiva-modules/plugins/repository-statistics/src/test/java/org/apache/archiva/metadata/repository/stats/RepositoryStatisticsManagerTest.java,660,,"            expect( metadataRepository.getChildNamespaces(session , TEST_REPO_ID, ""org.apache.archiva"" ) ).andReturn( Arrays.<String>asList() );"
11998,./TargetProjects/archiva/archiva-modules/plugins/repository-statistics/src/test/java/org/apache/archiva/metadata/repository/stats/RepositoryStatisticsManagerTest.java,662,,"            expect( metadataRepository.getProjects(session , TEST_REPO_ID, ""org.apache.archiva"" ) ).andReturn( Arrays.asList( ""metadata-repository-api"", ""metadata-model"" ) );"
11999,./TargetProjects/archiva/archiva-modules/plugins/repository-statistics/src/test/java/org/apache/archiva/metadata/repository/stats/RepositoryStatisticsManagerTest.java,662,,"            expect( metadataRepository.getProjects(session , TEST_REPO_ID, ""org.apache.archiva"" ) ).andReturn( Arrays.asList( ""metadata-repository-api"", ""metadata-model"" ) );"
