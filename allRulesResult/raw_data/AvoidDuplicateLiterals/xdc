80000,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/organisation/teller/api/TellerApiResource.java,92,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(array = @ArraySchema(schema = @Schema(implementation = TellerApiResourceSwagger.GetTellersResponse.class)))) })"
80001,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/organisation/teller/api/TellerApiResource.java,106,,"    public String findTeller(@PathParam(""tellerId"") @Parameter(description = ""tellerId"") final Long tellerId) {"
80002,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/organisation/teller/api/TellerApiResource.java,193,,"            @PathParam(""cashierId"") @Parameter(description = ""cashierId"") final Long cashierId) {"
80003,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/organisation/teller/api/TellerApiResource.java,319,,"            @QueryParam(""currencyCode"") @Parameter(description = ""currencyCode"") final String currencyCode,"
80004,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/organisation/teller/api/TellerApiResource.java,320,,"            @QueryParam(""offset"") @Parameter(description = ""offset"") final Integer offset,"
80005,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/organisation/teller/api/TellerApiResource.java,321,,"            @QueryParam(""limit"") @Parameter(description = ""limit"") final Integer limit,"
80006,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/organisation/teller/api/TellerApiResource.java,322,,"            @QueryParam(""orderBy"") @Parameter(description = ""orderBy"") final String orderBy,"
80007,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/organisation/teller/api/TellerApiResource.java,323,,"            @QueryParam(""sortOrder"") @Parameter(description = ""sortOrder"") final String sortOrder) {"
80008,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/organisation/teller/api/TellerApiResource.java,384,,"            @QueryParam(""dateRange"") @Parameter(description = ""dateRange"") final String dateRange) {"
80009,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/organisation/teller/api/TellerApiResourceSwagger.java,64,,"        @Schema(example = ""Head Office"")"
80010,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/organisation/teller/api/TellerApiResourceSwagger.java,85,,"        @Schema(example = ""dd-MM-yyyy"")"
80011,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/organisation/teller/api/TellerApiResourceSwagger.java,87,,"        @Schema(example = ""01 February 2015"")"
80012,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/organisation/teller/api/TellerApiResourceSwagger.java,171,,"        @Schema(example = ""Teller1"")"
80013,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/organisation/teller/domain/Teller.java,44,,"@Table(name = ""m_tellers"", uniqueConstraints = { @UniqueConstraint(name = ""ux_tellers_name"", columnNames = { ""name"" }) })"
80014,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/organisation/teller/serialization/TellerCommandFromApiJsonDeserializer.java,52,,"    private final Set<String> supportedParameters = new HashSet<>(Arrays.asList(""officeId"", ""name"", ""description"", ""startDate"", ""endDate"","
80015,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/organisation/teller/serialization/TellerCommandFromApiJsonDeserializer.java,52,,"    private final Set<String> supportedParameters = new HashSet<>(Arrays.asList(""officeId"", ""name"", ""description"", ""startDate"", ""endDate"","
80016,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/organisation/teller/serialization/TellerCommandFromApiJsonDeserializer.java,52,,"    private final Set<String> supportedParameters = new HashSet<>(Arrays.asList(""officeId"", ""name"", ""description"", ""startDate"", ""endDate"","
80017,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/organisation/teller/service/TellerManagementReadPlatformServiceImpl.java,108,,"            final String tellerName = rs.getString(""teller_name"");"
80018,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/organisation/teller/service/TellerManagementReadPlatformServiceImpl.java,201,,"        final String sql = ""select "" + this.lookupMapper.schema() + "" where s.office_id = ? and s.is_active=1 "";"
80019,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/organisation/teller/service/TellerManagementReadPlatformServiceImpl.java,658,,"            sqlBuilder.append("" left join m_payment_type payType on payType.id = payDetails.payment_type_id "");"
80020,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/organisation/teller/service/TellerManagementReadPlatformServiceImpl.java,659,,"            sqlBuilder.append("" left join m_account_transfer_transaction acnttrans "");"
80021,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/api/AccountTransfersApiResource.java,85,,"            + ""\n\n"" + ""Field Defaults\n\n"" + ""Allowed Value Lists\n\n"" + ""Example Requests:\n\n"" + ""\n\n"""
80022,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/api/AccountTransfersApiResource.java,90,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(schema = @Schema(implementation = AccountTransfersApiResourceSwagger.GetAccountTransfersTemplateResponse.class))) })"
80023,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/api/AccountTransfersApiResource.java,91,,"    public String template(@QueryParam(""fromOfficeId"") @Parameter(description = ""fromOfficeId"") final Long fromOfficeId,"
80024,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/api/AccountTransfersApiResource.java,92,,"            @QueryParam(""fromClientId"") @Parameter(description = ""fromClientId"") final Long fromClientId,"
80025,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/api/AccountTransfersApiResource.java,93,,"            @QueryParam(""fromAccountId"") @Parameter(description = ""fromAccountId"") final Long fromAccountId,"
80026,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/api/AccountTransfersApiResource.java,94,,"            @QueryParam(""fromAccountType"") @Parameter(description = ""fromAccountType"") final Integer fromAccountType,"
80027,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/api/AccountTransfersApiResource.java,95,,"            @QueryParam(""toOfficeId"") @Parameter(description = ""toOfficeId"") final Long toOfficeId,"
80028,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/api/AccountTransfersApiResource.java,96,,"            @QueryParam(""toClientId"") @Parameter(description = ""toClientId"") final Long toClientId,"
80029,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/api/AccountTransfersApiResource.java,97,,"            @QueryParam(""toAccountId"") @Parameter(description = ""toAccountId"") final Long toAccountId,"
80030,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/api/AccountTransfersApiResource.java,98,,"            @QueryParam(""toAccountType"") @Parameter(description = ""toAccountType"") final Integer toAccountType,"
80031,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/api/AccountTransfersApiResourceSwagger.java,302,,"            @Schema(example = ""Head Office"")"
80032,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/api/AccountTransfersApiResourceSwagger.java,385,,"            @Schema(example = ""Daniel Owusu"")"
80033,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/api/StandingInstructionApiResource.java,104,,"    @ApiResponses(@ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(schema = @Schema(implementation = StandingInstructionApiResourceSwagger.GetStandingInstructionsTemplateResponse.class))))"
80034,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/api/StandingInstructionApiResource.java,107,,"            @QueryParam(""fromAccountId"") @Parameter(description = ""fromAccountId"") final Long fromAccountId,"
80035,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/api/StandingInstructionApiResource.java,108,,"            @QueryParam(""fromAccountType"") @Parameter(description = ""fromAccountType"") final Integer fromAccountType,"
80036,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/api/StandingInstructionApiResource.java,113,,"            @QueryParam(""transferType"") @Parameter(description = ""transferType"") final Integer transferType,"
80037,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/api/StandingInstructionApiResource.java,155,,"            @PathParam(""standingInstructionId"") @Parameter(description = ""standingInstructionId"") final Long standingInstructionId,"
80038,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/api/StandingInstructionApiResource.java,188,,"            @QueryParam(""sqlSearch"") @Parameter(description = ""sqlSearch"") final String sqlSearch,"
80039,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/api/StandingInstructionApiResource.java,189,,"            @QueryParam(""externalId"") @Parameter(description = ""externalId"") final String externalId,"
80040,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/api/StandingInstructionApiResource.java,190,,"            @QueryParam(""offset"") @Parameter(description = ""offset"") final Integer offset,"
80041,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/api/StandingInstructionApiResource.java,191,,"            @QueryParam(""limit"") @Parameter(description = ""limit"") final Integer limit,"
80042,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/api/StandingInstructionApiResource.java,192,,"            @QueryParam(""orderBy"") @Parameter(description = ""orderBy"") final String orderBy,"
80043,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/api/StandingInstructionApiResource.java,193,,"            @QueryParam(""sortOrder"") @Parameter(description = ""sortOrder"") final String sortOrder,"
80044,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/api/StandingInstructionApiResourceSwagger.java,45,,"            @Schema(example = ""Head Office"")"
80045,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/api/StandingInstructionApiResourceSwagger.java,63,,"            @Schema(example = ""accountType.savings"")"
80046,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/api/StandingInstructionApiResourceSwagger.java,65,,"            @Schema(example = ""Savings Account"")"
80047,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/service/PortfolioAccountReadPlatformServiceImpl.java,76,,"                    sql = ""select "" + this.loanAccountMapper.schema() + "" where la.id = ?"";"
80048,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/service/StandingInstructionHistoryReadPlatformServiceImpl.java,84,,"                sqlBuilder.append("" and "");"
80049,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/service/StandingInstructionReadPlatformServiceImpl.java,270,,"                sqlBuilder.append("" and "");"
80050,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/service/StandingInstructionWritePlatformServiceImpl.java,267,,"            errors.add(new Exception(""Validation exception while transfering funds for standing Instruction id"" + instructionId + "" from """
80051,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/service/StandingInstructionWritePlatformServiceImpl.java,268,,"                    + accountTransferDTO.getFromAccountId() + "" to "" + accountTransferDTO.getToAccountId(), e));"
80052,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/accountdetails/service/AccountDetailsReadPlatformServiceJpaRepositoryImpl.java,179,,"        final String sql = ""select "" + rm.loanAccountSummarySchema() + loanWhereClauseForGroupAndLoanType;"
80053,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/accountdetails/service/AccountDetailsReadPlatformServiceJpaRepositoryImpl.java,259,,"            final String accountNo = rs.getString(""accountNo"");"
80054,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/accountdetails/service/AccountDetailsReadPlatformServiceJpaRepositoryImpl.java,262,,"            final String externalId = rs.getString(""externalId"");"
80055,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/accountdetails/service/AccountDetailsReadPlatformServiceJpaRepositoryImpl.java,263,,"            final Long productId = JdbcSupport.getLong(rs, ""productId"");"
80056,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/accountdetails/service/AccountDetailsReadPlatformServiceJpaRepositoryImpl.java,264,,"            final String productName = rs.getString(""productName"");"
80057,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/accountdetails/service/AccountDetailsReadPlatformServiceJpaRepositoryImpl.java,265,,"            final String shortProductName = rs.getString(""shortProductName"");"
80058,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/accounts/api/AccountsApiResource.java,103,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(schema = @Schema(implementation = AccountsApiResourceSwagger.GetAccountsTypeTemplateResponse.class))) })"
80059,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/accounts/api/AccountsApiResource.java,104,,"    public String template(@PathParam(""type"") @Parameter(description = ""type"") final String accountType,"
80060,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/accounts/api/AccountsApiResource.java,127,,"    public String retrieveAccount(@PathParam(""accountId"") @Parameter(description = ""accountId"") final Long accountId,"
80061,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/accounts/api/AccountsApiResourceSwagger.java,48,,"            @Schema(example = ""100"")"
80062,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/accounts/api/AccountsApiResourceSwagger.java,74,,"            @Schema(example = ""false"")"
80063,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/accounts/api/AccountsApiResourceSwagger.java,80,,"            @Schema(example = ""true"")"
80064,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/accounts/api/AccountsApiResourceSwagger.java,90,,"            @Schema(example = ""[2016, 4, 1]"")"
80065,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/address/domain/Address.java,53,,"    @Column(name = ""street"")"
80066,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/address/domain/Address.java,68,,"    @Column(name = ""city"")"
80067,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/address/domain/Address.java,85,,"    @Column(name = ""latitude"")"
80068,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/address/domain/Address.java,88,,"    @Column(name = ""longitude"")"
80069,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/address/serialization/AddressCommandFromApiJsonDeserializer.java,113,,"        final String addressLine1 = this.fromApiJsonHelper.extractStringNamed(""addressLine1"", element);"
80070,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/address/serialization/AddressCommandFromApiJsonDeserializer.java,124,,"        final String addressLine2 = this.fromApiJsonHelper.extractStringNamed(""addressLine2"", element);"
80071,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/address/serialization/AddressCommandFromApiJsonDeserializer.java,134,,"        final String addressLine3 = this.fromApiJsonHelper.extractStringNamed(""addressLine3"", element);"
80072,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/address/serialization/AddressCommandFromApiJsonDeserializer.java,144,,"        final String townVillage = this.fromApiJsonHelper.extractStringNamed(""townVillage"", element);"
80073,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/address/serialization/AddressCommandFromApiJsonDeserializer.java,154,,"        final String city = this.fromApiJsonHelper.extractStringNamed(""city"", element);"
80074,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/address/serialization/AddressCommandFromApiJsonDeserializer.java,164,,"        final String countyDistrict = this.fromApiJsonHelper.extractStringNamed(""countyDistrict"", element);"
80075,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/address/serialization/AddressCommandFromApiJsonDeserializer.java,175,,"        if (this.fromApiJsonHelper.extractLongNamed(""stateProvinceId"", element) != null) {"
80076,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/address/serialization/AddressCommandFromApiJsonDeserializer.java,189,,"        if (this.fromApiJsonHelper.extractLongNamed(""countryId"", element) != null) {"
80077,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/address/serialization/AddressCommandFromApiJsonDeserializer.java,202,,"        final String postalCode = this.fromApiJsonHelper.extractStringNamed(""postalCode"", element);"
80078,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/address/serialization/AddressCommandFromApiJsonDeserializer.java,213,,"        if (this.fromApiJsonHelper.extractBigDecimalWithLocaleNamed(""latitude"", element) != null) {"
80079,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/address/serialization/AddressCommandFromApiJsonDeserializer.java,226,,"        if (this.fromApiJsonHelper.extractBigDecimalWithLocaleNamed(""longitude"", element) != null) {"
80080,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/address/service/AddressReadPlatformServiceImpl.java,182,,"        final String sql = ""select "" + rm.schema() + "" where client.id=?"";"
80081,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/address/service/AddressWritePlatformServiceImpl.java,80,,"        if (command.longValueOfParameterNamed(""stateProvinceId"") != null) {"
80082,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/address/service/AddressWritePlatformServiceImpl.java,85,,"        if (command.longValueOfParameterNamed(""countryId"") != null) {"
80083,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/address/service/AddressWritePlatformServiceImpl.java,100,,"        final boolean isActive = command.booleanPrimitiveValueOfParameterNamed(""isActive"");"
80084,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/calendar/api/CalendarsApiResource.java,72,,"    private final Set<String> responseDataParameters = new HashSet<>(Arrays.asList(""id"", ""entityId"", ""entityType"", ""title"", ""description"","
80085,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/calendar/api/CalendarsApiResource.java,72,,"    private final Set<String> responseDataParameters = new HashSet<>(Arrays.asList(""id"", ""entityId"", ""entityType"", ""title"", ""description"","
80086,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/calendar/command/CalendarCommand.java,25,,"    @SuppressWarnings(""unused"")"
80087,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/calendar/service/CalendarUtils.java,269,,"                humanReadable = ""Every "" + recur.getInterval() + "" days"";"
80088,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/charge/api/ChargesApiResource.java,98,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(array = @ArraySchema(schema = @Schema(implementation = ChargesApiResourceSwagger.GetChargesResponse.class)))) })"
80089,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/charge/api/ChargesApiResource.java,117,,"    public String retrieveCharge(@PathParam(""chargeId"") @Parameter(description = ""chargeId"") final Long chargeId,"
80090,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/charge/domain/Charge.java,55,,"@Table(name = ""m_charge"", uniqueConstraints = { @UniqueConstraint(columnNames = { ""name"" }, name = ""name"") })"
80091,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/charge/domain/Charge.java,120,,"        final ChargeTimeType chargeTimeType = ChargeTimeType.fromInt(command.integerValueOfParameterNamed(""chargeTimeType""));"
80092,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/charge/domain/Charge.java,122,,"                .fromInt(command.integerValueOfParameterNamed(""chargeCalculationType""));"
80093,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/charge/domain/Charge.java,129,,"        final MonthDay feeOnMonthDay = command.extractMonthDayNamed(""feeOnMonthDay"");"
80094,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/charge/domain/Charge.java,130,,"        final Integer feeInterval = command.integerValueOfParameterNamed(""feeInterval"");"
80095,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/charge/domain/Charge.java,320,,"            actualChanges.put(""locale"", localeAsInput);"
80096,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/charge/serialization/ChargeDefinitionCommandFromApiJsonDeserializer.java,54,,"    private final Set<String> supportedParameters = new HashSet<>(Arrays.asList(""name"", ""amount"", ""locale"", ""currencyCode"","
80097,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/charge/serialization/ChargeDefinitionCommandFromApiJsonDeserializer.java,54,,"    private final Set<String> supportedParameters = new HashSet<>(Arrays.asList(""name"", ""amount"", ""locale"", ""currencyCode"","
80098,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/charge/serialization/ChargeDefinitionCommandFromApiJsonDeserializer.java,54,,"    private final Set<String> supportedParameters = new HashSet<>(Arrays.asList(""name"", ""amount"", ""locale"", ""currencyCode"","
80099,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/charge/serialization/ChargeDefinitionCommandFromApiJsonDeserializer.java,55,,"            ""currencyOptions"", ""chargeAppliesTo"", ""chargeTimeType"", ""chargeCalculationType"", ""chargeCalculationTypeOptions"", ""penalty"","
80100,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/charge/serialization/ChargeDefinitionCommandFromApiJsonDeserializer.java,55,,"            ""currencyOptions"", ""chargeAppliesTo"", ""chargeTimeType"", ""chargeCalculationType"", ""chargeCalculationTypeOptions"", ""penalty"","
80101,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/charge/serialization/ChargeDefinitionCommandFromApiJsonDeserializer.java,55,,"            ""currencyOptions"", ""chargeAppliesTo"", ""chargeTimeType"", ""chargeCalculationType"", ""chargeCalculationTypeOptions"", ""penalty"","
80102,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/charge/serialization/ChargeDefinitionCommandFromApiJsonDeserializer.java,55,,"            ""currencyOptions"", ""chargeAppliesTo"", ""chargeTimeType"", ""chargeCalculationType"", ""chargeCalculationTypeOptions"", ""penalty"","
80103,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/charge/serialization/ChargeDefinitionCommandFromApiJsonDeserializer.java,56,,"            ""active"", ""chargePaymentMode"", ""feeOnMonthDay"", ""feeInterval"", ""monthDayFormat"", ""minCap"", ""maxCap"", ""feeFrequency"","
80104,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/charge/serialization/ChargeDefinitionCommandFromApiJsonDeserializer.java,56,,"            ""active"", ""chargePaymentMode"", ""feeOnMonthDay"", ""feeInterval"", ""monthDayFormat"", ""minCap"", ""maxCap"", ""feeFrequency"","
80105,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/charge/serialization/ChargeDefinitionCommandFromApiJsonDeserializer.java,56,,"            ""active"", ""chargePaymentMode"", ""feeOnMonthDay"", ""feeInterval"", ""monthDayFormat"", ""minCap"", ""maxCap"", ""feeFrequency"","
80106,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/charge/serialization/ChargeDefinitionCommandFromApiJsonDeserializer.java,56,,"            ""active"", ""chargePaymentMode"", ""feeOnMonthDay"", ""feeInterval"", ""monthDayFormat"", ""minCap"", ""maxCap"", ""feeFrequency"","
80107,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/charge/serialization/ChargeDefinitionCommandFromApiJsonDeserializer.java,56,,"            ""active"", ""chargePaymentMode"", ""feeOnMonthDay"", ""feeInterval"", ""monthDayFormat"", ""minCap"", ""maxCap"", ""feeFrequency"","
80108,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/charge/serialization/ChargeDefinitionCommandFromApiJsonDeserializer.java,56,,"            ""active"", ""chargePaymentMode"", ""feeOnMonthDay"", ""feeInterval"", ""monthDayFormat"", ""minCap"", ""maxCap"", ""feeFrequency"","
80109,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/charge/serialization/ChargeDefinitionCommandFromApiJsonDeserializer.java,56,,"            ""active"", ""chargePaymentMode"", ""feeOnMonthDay"", ""feeInterval"", ""monthDayFormat"", ""minCap"", ""maxCap"", ""feeFrequency"","
80110,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/charge/service/ChargeReadPlatformServiceImpl.java,92,,"        String sql = ""select "" + rm.chargeSchema() + "" where c.is_deleted=false "";"
80111,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/charge/service/ChargeReadPlatformServiceImpl.java,96,,"        sql += "" order by c.name "";"
80112,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/charge/service/ChargeReadPlatformServiceImpl.java,377,,"        String sql = ""select "" + rm.chargeSchema() + "" where c.is_deleted=false and c.is_active=true and c.charge_applies_to_enum=? "";"
80113,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/api/ClientAddressApiResources.java,109,,"    public String addClientAddress(@QueryParam(""type"") @Parameter(description = ""type"") final long addressTypeId,"
80114,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/api/ClientChargesApiResource.java,104,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(schema = @Schema(implementation = ClientChargesApiResourceSwagger.GetClientsClientIdChargesResponse.class))) })"
80115,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/api/ClientChargesApiResource.java,105,,"    public String retrieveAllClientCharges(@PathParam(""clientId"") @Parameter(description = ""clientId"") final Long clientId,"
80116,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/api/ClientChargesApiResource.java,157,,"            @PathParam(""chargeId"") @Parameter(description = ""chargeId"") final Long chargeId, @Context final UriInfo uriInfo) {"
80117,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/api/ClientFamilyMembersApiResources.java,59,,"    private final Set<String> responseDataParameters = new HashSet<>(Arrays.asList(""id"", ""clientId"", ""firstName"", ""middleName"", ""lastName"","
80118,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/api/ClientIdentifiersApiResource.java,72,,"            Arrays.asList(""id"", ""clientId"", ""documentType"", ""documentKey"", ""description"", ""allowedDocumentTypes""));"
80119,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/api/ClientIdentifiersApiResource.java,106,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(array = @ArraySchema(schema = @Schema(implementation = ClientIdentifiersApiResourceSwagger.GetClientsClientIdIdentifiersResponse.class)))) })"
80120,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/api/ClientIdentifiersApiResource.java,178,,"            @PathParam(""identifierId"") @Parameter(description = ""identifierId"") final Long clientIdentifierId,"
80121,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/api/ClientTransactionsApiResource.java,86,,"    public String retrieveAllClientTransactions(@PathParam(""clientId"") @Parameter(description = ""clientId"") final Long clientId,"
80122,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/api/ClientTransactionsApiResource.java,109,,"            @PathParam(""transactionId"") @Parameter(description = ""transactionId"") final Long transactionId,"
80123,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/api/ClientsApiResource.java,129,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(schema = @Schema(implementation = ClientsApiResourceSwagger.GetClientsTemplateResponse.class))) })"
80124,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/api/ClientsApiResource.java,131,,"            @Parameter(description = ""officeId"") @QueryParam(""officeId"") final Long officeId,"
80125,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/api/ClientsApiResource.java,133,,"            @DefaultValue(""false"") @QueryParam(""staffInSelectedOfficeOnly"") @Parameter(description = ""staffInSelectedOfficeOnly"") final boolean staffInSelectedOfficeOnly) {"
80126,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/api/ClientsApiResource.java,199,,"    @Path(""{clientId}"")"
80127,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/api/ClientsApiResource.java,206,,"    public String retrieveOne(@PathParam(""clientId"") @Parameter(description = ""clientId"") final Long clientId,"
80128,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/api/ClientsApiResourceSwagger.java,44,,"            @Schema(example = ""Head Office"")"
80129,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/api/ClientsApiResourceSwagger.java,66,,"            @Schema(example = ""true"")"
80130,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/api/ClientsApiResourceSwagger.java,80,,"            @Schema(example = ""false"")"
80131,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/data/ClientDataValidator.java,226,,"        if (this.fromApiJsonHelper.parameterExists(""isStaff"", element)) {"
80132,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/serialization/ClientFamilyMemberCommandFromApiJsonDeserializer.java,47,,"    private final Set<String> supportedParameters = new HashSet<>(Arrays.asList(""id"", ""clientId"", ""firstName"", ""middleName"", ""lastName"","
80133,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/serialization/ClientFamilyMemberCommandFromApiJsonDeserializer.java,47,,"    private final Set<String> supportedParameters = new HashSet<>(Arrays.asList(""id"", ""clientId"", ""firstName"", ""middleName"", ""lastName"","
80134,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/serialization/ClientFamilyMemberCommandFromApiJsonDeserializer.java,47,,"    private final Set<String> supportedParameters = new HashSet<>(Arrays.asList(""id"", ""clientId"", ""firstName"", ""middleName"", ""lastName"","
80135,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/serialization/ClientFamilyMemberCommandFromApiJsonDeserializer.java,48,,"            ""qualification"", ""mobileNumber"", ""age"", ""isDependent"", ""relationshipId"", ""maritalStatusId"", ""genderId"", ""dateOfBirth"","
80136,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/serialization/ClientFamilyMemberCommandFromApiJsonDeserializer.java,48,,"            ""qualification"", ""mobileNumber"", ""age"", ""isDependent"", ""relationshipId"", ""maritalStatusId"", ""genderId"", ""dateOfBirth"","
80137,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/serialization/ClientFamilyMemberCommandFromApiJsonDeserializer.java,48,,"            ""qualification"", ""mobileNumber"", ""age"", ""isDependent"", ""relationshipId"", ""maritalStatusId"", ""genderId"", ""dateOfBirth"","
80138,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/serialization/ClientFamilyMemberCommandFromApiJsonDeserializer.java,48,,"            ""qualification"", ""mobileNumber"", ""age"", ""isDependent"", ""relationshipId"", ""maritalStatusId"", ""genderId"", ""dateOfBirth"","
80139,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/serialization/ClientFamilyMemberCommandFromApiJsonDeserializer.java,48,,"            ""qualification"", ""mobileNumber"", ""age"", ""isDependent"", ""relationshipId"", ""maritalStatusId"", ""genderId"", ""dateOfBirth"","
80140,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/serialization/ClientFamilyMemberCommandFromApiJsonDeserializer.java,48,,"            ""qualification"", ""mobileNumber"", ""age"", ""isDependent"", ""relationshipId"", ""maritalStatusId"", ""genderId"", ""dateOfBirth"","
80141,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/serialization/ClientFamilyMemberCommandFromApiJsonDeserializer.java,48,,"            ""qualification"", ""mobileNumber"", ""age"", ""isDependent"", ""relationshipId"", ""maritalStatusId"", ""genderId"", ""dateOfBirth"","
80142,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/serialization/ClientFamilyMemberCommandFromApiJsonDeserializer.java,49,,"            ""professionId"", ""locale"", ""dateFormat"", ""familyMembers""));"
80143,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/serialization/ClientFamilyMemberCommandFromApiJsonDeserializer.java,49,,"            ""professionId"", ""locale"", ""dateFormat"", ""familyMembers""));"
80144,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/serialization/ClientFamilyMemberCommandFromApiJsonDeserializer.java,65,,"        final DataValidatorBuilder baseDataValidator = new DataValidatorBuilder(dataValidationErrors).resource(""FamilyMembers"");"
80145,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/serialization/ClientFamilyMemberCommandFromApiJsonDeserializer.java,129,,"        if (this.fromApiJsonHelper.extractLongNamed(""relationShipId"", element) != null) {"
80146,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/service/ClientChargeWritePlatformServiceJpaRepositoryImpl.java,368,,"    public CommandProcessingResult updateCharge(@SuppressWarnings(""unused"") Long clientId,"
80147,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/service/ClientFamilyMembersWritePlatformServiceImpl.java,92,,"        if (command.stringValueOfParameterNamed(""firstName"") != null) {"
80148,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/service/ClientFamilyMembersWritePlatformServiceImpl.java,96,,"        if (command.stringValueOfParameterNamed(""middleName"") != null) {"
80149,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/service/ClientFamilyMembersWritePlatformServiceImpl.java,100,,"        if (command.stringValueOfParameterNamed(""lastName"") != null) {"
80150,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/service/ClientFamilyMembersWritePlatformServiceImpl.java,104,,"        if (command.stringValueOfParameterNamed(""qualification"") != null) {"
80151,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/service/ClientFamilyMembersWritePlatformServiceImpl.java,108,,"        if (command.stringValueOfParameterNamed(""mobileNumber"") != null) {"
80152,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/service/ClientFamilyMembersWritePlatformServiceImpl.java,112,,"        if (command.longValueOfParameterNamed(""age"") != null) {"
80153,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/service/ClientFamilyMembersWritePlatformServiceImpl.java,116,,"        if (command.booleanObjectValueOfParameterNamed(""isDependent"") != null) {"
80154,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/service/ClientFamilyMembersWritePlatformServiceImpl.java,120,,"        if (command.longValueOfParameterNamed(""relationshipId"") != null) {"
80155,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/service/ClientFamilyMembersWritePlatformServiceImpl.java,125,,"        if (command.longValueOfParameterNamed(""maritalStatusId"") != null) {"
80156,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/service/ClientFamilyMembersWritePlatformServiceImpl.java,130,,"        if (command.longValueOfParameterNamed(""genderId"") != null) {"
80157,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/service/ClientFamilyMembersWritePlatformServiceImpl.java,135,,"        if (command.longValueOfParameterNamed(""professionId"") != null) {"
80158,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/service/ClientFamilyMembersWritePlatformServiceImpl.java,140,,"        if (command.dateValueOfParameterNamed(""dateOfBirth"") != null) {"
80159,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/service/ClientIdentifierWritePlatformServiceJpaRepositoryImpl.java,132,,"            if (changes.containsKey(""documentTypeId"")) {"
80160,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/service/ClientReadPlatformServiceImpl.java,311,,"            final String sql = ""select "" + this.clientMapper.schema()"
80161,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/service/ClientReadPlatformServiceImpl.java,454,,"            final String accountNo = rs.getString(""accountNo"");"
80162,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/service/ClientReadPlatformServiceImpl.java,465,,"            final Long officeId = JdbcSupport.getLong(rs, ""officeId"");"
80163,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/service/ClientReadPlatformServiceImpl.java,466,,"            final String officeName = rs.getString(""officeName"");"
80164,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/service/ClientReadPlatformServiceImpl.java,476,,"            final String displayName = rs.getString(""displayName"");"
80165,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/service/ClientWritePlatformServiceJpaRepositoryImpl.java,718,,"                throw new InvalidClientStateTransitionException(""close"", ""is.already.closed"", errorMessage);"
80166,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/collateral/api/CollateralsApiResource.java,100,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(schema = @Schema(implementation = CollateralsApiResourceSwagger.GetLoansLoanIdCollateralsTemplateResponse.class))) })"
80167,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/collateral/api/CollateralsApiResource.java,102,,"            @PathParam(""loanId"") @Parameter(description = ""loanId"") final Long loanId) {"
80168,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/collateral/api/CollateralsApiResource.java,142,,"            @PathParam(""collateralId"") @Parameter(description = ""collateralId"") final Long CollateralId) {"
80169,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/collectionsheet/data/CollectionSheetTransactionDataValidator.java,192,,"                    baseDataValidator.reset().parameter(""bulktransaction"" + ""["" + i + ""].loan.id"").value(loanId).notNull()"
80170,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/collectionsheet/data/SavingsDueData.java,29,,"    @SuppressWarnings(""unused"")"
80171,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/collectionsheet/service/CollectionSheetReadPlatformServiceImpl.java,267,,"        public JLGCollectionSheetFlatData mapRow(final ResultSet rs, @SuppressWarnings(""unused"") final int rowNum) throws SQLException {"
80172,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/collectionsheet/service/CollectionSheetReadPlatformServiceImpl.java,270,,"            final Long groupId = JdbcSupport.getLong(rs, ""groupId"");"
80173,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/collectionsheet/service/CollectionSheetReadPlatformServiceImpl.java,275,,"            final String clientName = rs.getString(""clientName"");"
80174,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/collectionsheet/service/CollectionSheetReadPlatformServiceImpl.java,276,,"            final Long clientId = JdbcSupport.getLong(rs, ""clientId"");"
80175,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/collectionsheet/service/CollectionSheetWritePlatformServiceJpaRepositoryImpl.java,88,,"        final String noteText = command.stringValueOfParameterNamed(""note"");"
80176,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/common/service/CommonEnumerations.java,73,,"                        ""Invalid"");"
80177,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/common/service/DropdownReadPlatformServiceImpl.java,40,,"        final List<EnumOptionData> loanTermFrequencyOptions = Arrays.asList(termFrequencyType(PeriodFrequencyType.DAYS, ""frequency""),"
80178,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/common/service/DropdownReadPlatformServiceImpl.java,48,,"        final List<EnumOptionData> loanTermFrequencyOptions = Arrays.asList(conditionType(ConditionType.EQUAL, ""condition""),"
80179,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/floatingrates/api/FloatingRatesApiResource.java,95,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(schema = @Schema(implementation = FloatingRatesApiResourceSwagger.PostFloatingRatesResponse.class))) })"
80180,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/floatingrates/api/FloatingRatesApiResource.java,123,,"    public String retrieveOne(@PathParam(""floatingRateId"") @Parameter(description = ""floatingRateId"") final Long floatingRateId,"
80181,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/floatingrates/api/FloatingRatesApiResourceSwagger.java,50,,"        @Schema(example = ""Floating Rate 1"")"
80182,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/floatingrates/api/FloatingRatesApiResourceSwagger.java,52,,"        @Schema(example = ""true"")"
80183,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/floatingrates/api/FloatingRatesApiResourceSwagger.java,81,,"        @Schema(example = ""mifos"")"
80184,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/floatingrates/api/FloatingRatesApiResourceSwagger.java,83,,"        @Schema(example = ""Nov 18, 2015"")"
80185,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/floatingrates/domain/FloatingRate.java,52,,"@Table(name = ""m_floating_rates"", uniqueConstraints = { @UniqueConstraint(columnNames = { ""name"" }, name = ""unq_name"") })"
80186,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/floatingrates/domain/FloatingRate.java,106,,"        final boolean isBaseLendingRate = command.parameterExists(""isBaseLendingRate"")"
80187,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/floatingrates/domain/FloatingRate.java,109,,"        final boolean isActive = command.parameterExists(""isActive"") ? command.booleanPrimitiveValueOfParameterNamed(""isActive"") : true;"
80188,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/floatingrates/domain/FloatingRate.java,119,,"        if (!command.parameterExists(""ratePeriods"")) {"
80189,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/floatingrates/serialization/FloatingRateDataValidator.java,48,,"            Arrays.asList(""name"", ""isBaseLendingRate"", ""isActive"", ""ratePeriods""));"
80190,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/floatingrates/serialization/FloatingRateDataValidator.java,48,,"            Arrays.asList(""name"", ""isBaseLendingRate"", ""isActive"", ""ratePeriods""));"
80191,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/floatingrates/serialization/FloatingRateDataValidator.java,48,,"            Arrays.asList(""name"", ""isBaseLendingRate"", ""isActive"", ""ratePeriods""));"
80192,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/floatingrates/serialization/FloatingRateDataValidator.java,48,,"            Arrays.asList(""name"", ""isBaseLendingRate"", ""isActive"", ""ratePeriods""));"
80193,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/floatingrates/serialization/FloatingRateDataValidator.java,50,,"            Arrays.asList(""fromDate"", ""interestRate"", ""isDifferentialToBaseLendingRate"", ""locale"", ""dateFormat""));"
80194,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/floatingrates/serialization/FloatingRateDataValidator.java,50,,"            Arrays.asList(""fromDate"", ""interestRate"", ""isDifferentialToBaseLendingRate"", ""locale"", ""dateFormat""));"
80195,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/floatingrates/serialization/FloatingRateDataValidator.java,50,,"            Arrays.asList(""fromDate"", ""interestRate"", ""isDifferentialToBaseLendingRate"", ""locale"", ""dateFormat""));"
80196,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/floatingrates/service/FloatingRatesReadPlatformServiceImpl.java,52,,"        final String sql = ""select "" + rateMapper.schema();"
80197,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/floatingrates/service/FloatingRatesReadPlatformServiceImpl.java,118,,"        public FloatingRateData mapRow(final ResultSet rs, @SuppressWarnings(""unused"") final int rowNum) throws SQLException {"
80198,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/fund/api/FundsApiResource.java,94,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(array = @ArraySchema(schema = @Schema(implementation = FundsApiResourceSwagger.GetFundsResponse.class)))) })"
80199,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/fund/api/FundsApiResource.java,129,,"    public String retreiveFund(@PathParam(""fundId"") @Parameter(description = ""fundId"") final Long fundId, @Context final UriInfo uriInfo) {"
80200,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/fund/domain/Fund.java,32,,"@Table(name = ""m_fund"", uniqueConstraints = { @UniqueConstraint(columnNames = { ""name"" }, name = ""fund_name_org""),"
80201,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/fund/serialization/FundCommandFromApiJsonDeserializer.java,45,,"    private final Set<String> supportedParameters = new HashSet<>(Arrays.asList(""name"", ""externalId""));"
80202,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/fund/serialization/FundCommandFromApiJsonDeserializer.java,45,,"    private final Set<String> supportedParameters = new HashSet<>(Arrays.asList(""name"", ""externalId""));"
80203,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/api/CentersApiResource.java,150,,"    @Operation(summary = ""Retrieve a Center Template"", description = ""Retrieves a Center Template\n\n"" + ""Example Requests:\n\n"" + ""\n\n"""
80204,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/api/CentersApiResource.java,150,,"    @Operation(summary = ""Retrieve a Center Template"", description = ""Retrieves a Center Template\n\n"" + ""Example Requests:\n\n"" + ""\n\n"""
80205,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/api/CentersApiResource.java,153,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(schema = @Schema(implementation = CentersApiResourceSwagger.GetCentersTemplateResponse.class))) })"
80206,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/api/CentersApiResource.java,155,,"            @QueryParam(""command"") @Parameter(description = ""command"") final String commandParam,"
80207,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/api/CentersApiResource.java,156,,"            @QueryParam(""officeId"") @Parameter(description = ""officeId"") final Long officeId,"
80208,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/api/CentersApiResource.java,157,,"            @DefaultValue(""false"") @QueryParam(""staffInSelectedOfficeOnly"") @Parameter(description = ""staffInSelectedOfficeOnly"") final boolean staffInSelectedOfficeOnly) {"
80209,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/api/CentersApiResource.java,197,,"            @QueryParam(""dateFormat"") @Parameter(description = ""dateFormat"") final String dateFormat,"
80210,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/api/CentersApiResource.java,223,,"    @Path(""{centerId}"")"
80211,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/api/CentersApiResource.java,231,,"            @PathParam(""centerId"") @Parameter(description = ""centerId"") final Long centerId,"
80212,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/api/CentersApiResourceSwagger.java,43,,"            @Schema(example = ""Head Office"")"
80213,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/api/CentersApiResourceSwagger.java,59,,"        @Schema(example = ""false"")"
80214,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/api/GroupsApiResource.java,183,,"            + ""\n\n"" + ""Field Defaults\n\n"" + ""Allowed Value Lists\n\n"" + ""Example Requests:\n\n"" + ""\n\n"" + ""groups/template\n\n"" + ""\n\n"""
80215,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/api/GroupsApiResource.java,183,,"            + ""\n\n"" + ""Field Defaults\n\n"" + ""Allowed Value Lists\n\n"" + ""Example Requests:\n\n"" + ""\n\n"" + ""groups/template\n\n"" + ""\n\n"""
80216,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/api/GroupsApiResource.java,187,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(schema = @Schema(implementation = GroupsApiResourceSwagger.GetGroupsTemplateResponse.class))) })"
80217,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/api/GroupsApiResource.java,189,,"            @QueryParam(""officeId"") @Parameter(description = ""officeId"") final Long officeId,"
80218,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/api/GroupsApiResource.java,192,,"            @QueryParam(""command"") @Parameter(description = ""command"") final String commandParam,"
80219,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/api/GroupsApiResource.java,193,,"            @DefaultValue(""false"") @QueryParam(""staffInSelectedOfficeOnly"") @Parameter(description = ""staffInSelectedOfficeOnly"") final boolean staffInSelectedOfficeOnly) {"
80220,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/api/GroupsApiResource.java,260,,"    @Path(""{groupId}"")"
80221,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/api/GroupsApiResource.java,267,,"    public String retrieveOne(@Context final UriInfo uriInfo, @PathParam(""groupId"") @Parameter(description = ""groupId"") final Long groupId,"
80222,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/api/GroupsApiResource.java,269,,"            @QueryParam(""roleId"") @Parameter(description = ""roleId"") final Long roleId) {"
80223,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/api/GroupsApiResourceSwagger.java,43,,"            @Schema(example = ""Head Office"")"
80224,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/api/GroupsApiResourceSwagger.java,94,,"                @Schema(example = ""false"")"
80225,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/api/GroupsApiResourceSwagger.java,96,,"                @Schema(example = ""true"")"
80226,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/data/GroupRoleData.java,27,,"    @SuppressWarnings(""unused"")"
80227,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/serialization/GroupingTypesDataValidator.java,433,,"        final DataValidatorBuilder baseDataValidator = new DataValidatorBuilder(dataValidationErrors).resource(""group"");"
80228,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/service/CenterReadPlatformServiceImpl.java,99,,"    private static final Set<String> SUPPORTED_ORDER_BY_VALUES = new HashSet<>(Arrays.asList(""id"", ""name"", ""officeId"", ""officeName""));"
80229,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/service/CenterReadPlatformServiceImpl.java,99,,"    private static final Set<String> SUPPORTED_ORDER_BY_VALUES = new HashSet<>(Arrays.asList(""id"", ""name"", ""officeId"", ""officeName""));"
80230,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/service/CenterReadPlatformServiceImpl.java,176,,"            final Long staffId = JdbcSupport.getLong(rs, ""staffId"");"
80231,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/service/CenterReadPlatformServiceImpl.java,375,,"        sqlBuilder.append(""select "");"
80232,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/service/GroupingTypesWritePlatformServiceJpaRepositoryImpl.java,629,,"            throw new InvalidGroupStateTransitionException(group.getGroupLevel().getLevelName(), ""close"", ""active.clients.exist"","
80233,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/interestratechart/api/InterestRateChartSlabsApiResource.java,104,,"    public String template(@Context final UriInfo uriInfo, @PathParam(""chartId"") @Parameter(description = ""chartId"") final Long chartId) {"
80234,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/interestratechart/api/InterestRateChartSlabsApiResource.java,116,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(array = @ArraySchema(schema = @Schema(implementation = InterestRateChartSlabsApiResourceSwagger.GetInterestRateChartsChartIdChartSlabsResponse.class)))) })"
80235,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/interestratechart/api/InterestRateChartSlabsApiResource.java,136,,"            @PathParam(""chartSlabId"") @Parameter(description = ""chartSlabId"") final Long chartSlabId, @Context final UriInfo uriInfo) {"
80236,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/interestratechart/api/InterestRateChartsApiResource.java,105,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(schema = @Schema(implementation = InterestRateChartsApiResourceSwagger.GetInterestRateChartsTemplateResponse.class))) })"
80237,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/interestratechart/api/InterestRateChartsApiResource.java,141,,"    public String retrieveOne(@PathParam(""chartId"") @Parameter(description = ""chartId"") final Long chartId,"
80238,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/interestratechart/service/InterestRateChartReadPlatformServiceImpl.java,154,,"    public InterestRateChartData retrieveOneWithSlabsOnProductId(@SuppressWarnings(""unused"") Long productId) {"
80239,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/interestratechart/service/InterestRateChartSlabWritePlatformServiceJpaRepositoryImpl.java,42,,"    @SuppressWarnings(""unused"")"
80240,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/api/LoanChargesApiResource.java,75,,"            Arrays.asList(""id"", ""chargeId"", ""name"", ""penalty"", ""chargeTimeType"", ""dueAsOfDate"", ""chargeCalculationType"", ""percentage"","
80241,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/api/LoanChargesApiResource.java,111,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(array = @ArraySchema(schema = @Schema(implementation = LoanChargesApiResourceSwagger.GetLoansLoanIdChargesChargeIdResponse.class)))) })"
80242,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/api/LoanChargesApiResource.java,112,,"    public String retrieveAllLoanCharges(@PathParam(""loanId"") @Parameter(description = ""loanId"") final Long loanId,"
80243,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/api/LoanChargesApiResource.java,145,,"    @Path(""{chargeId}"")"
80244,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/api/LoanChargesApiResource.java,176,,"            @QueryParam(""command"") @Parameter(description = ""command"") final String commandParam,"
80245,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/api/LoanChargesApiResourceSwagger.java,91,,"        @Schema(example = ""100"")"
80246,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/api/LoanTransactionsApiResource.java,112,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(schema = @Schema(implementation = LoanTransactionsApiResourceSwagger.GetLoansLoanIdTransactionsTemplateResponse.class))) })"
80247,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/api/LoanTransactionsApiResource.java,113,,"    public String retrieveTransactionTemplate(@PathParam(""loanId"") @Parameter(description = ""loanId"") final Long loanId,"
80248,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/api/LoanTransactionsApiResource.java,114,,"            @QueryParam(""command"") @Parameter(description = ""command"") final String commandParam, @Context final UriInfo uriInfo,"
80249,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/api/LoanTransactionsApiResource.java,116,,"            @QueryParam(""transactionDate"") @Parameter(description = ""transactionDate"") final DateParam transactionDateParam,"
80250,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/api/LoanTransactionsApiResource.java,177,,"            @PathParam(""transactionId"") @Parameter(description = ""transactionId"") final Long transactionId,"
80251,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/api/LoanTransactionsApiResourceSwagger.java,66,,"            @Schema(example = ""false"")"
80252,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/api/LoansApiResource.java,201,,"    private final Set<String> loanDataParameters = new HashSet<>(Arrays.asList(""id"", ""accountNo"", ""status"", ""externalId"", ""clientId"","
80253,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/api/LoansApiResource.java,210,,"            ""repaymentSchedule"", ""transactions"", ""charges"", ""collateral"", ""guarantors"", ""meeting"", ""productOptions"","
80254,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/api/LoansApiResource.java,210,,"            ""repaymentSchedule"", ""transactions"", ""charges"", ""collateral"", ""guarantors"", ""meeting"", ""productOptions"","
80255,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/api/LoansApiResource.java,210,,"            ""repaymentSchedule"", ""transactions"", ""charges"", ""collateral"", ""guarantors"", ""meeting"", ""productOptions"","
80256,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/api/LoansApiResource.java,210,,"            ""repaymentSchedule"", ""transactions"", ""charges"", ""collateral"", ""guarantors"", ""meeting"", ""productOptions"","
80257,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/api/LoansApiResource.java,210,,"            ""repaymentSchedule"", ""transactions"", ""charges"", ""collateral"", ""guarantors"", ""meeting"", ""productOptions"","
80258,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/api/LoansApiResource.java,215,,"            ""loanCounter"", ""loanProductCounter"", ""notes"", ""accountLinkingOptions"", ""linkedAccount"", ""interestRateDifferential"","
80259,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/api/LoansApiResource.java,215,,"            ""loanCounter"", ""loanProductCounter"", ""notes"", ""accountLinkingOptions"", ""linkedAccount"", ""interestRateDifferential"","
80260,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/api/LoansApiResource.java,325,,"    public String retrieveApprovalTemplate(@PathParam(""loanId"") @Parameter(description = ""loanId"") final Long loanId,"
80261,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/api/LoansApiResource.java,326,,"            @QueryParam(""templateType"") @Parameter(description = ""templateType"") final String templateType,"
80262,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/api/LoansApiResource.java,354,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(schema = @Schema(implementation = LoansApiResourceSwagger.GetLoansTemplateResponse.class))) })"
80263,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/api/LoansApiResource.java,359,,"            @DefaultValue(""false"") @QueryParam(""staffInSelectedOfficeOnly"") @Parameter(description = ""staffInSelectedOfficeOnly"") final boolean staffInSelectedOfficeOnly,"
80264,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/api/LoansApiResource.java,480,,"    @Path(""{loanId}"")"
80265,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/api/LoansApiResource.java,784,,"            @QueryParam(""command"") @Parameter(description = ""command"") final String commandParam, @Context final UriInfo uriInfo,"
80266,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/api/LoansApiResource.java,852,,"            + ""Mandatory Fields: actualDisbursementDate\n"" + ""Optional Fields: transactionAmount and fixedEmiAmount\n"""
80267,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/api/LoansApiResource.java,852,,"            + ""Mandatory Fields: actualDisbursementDate\n"" + ""Optional Fields: transactionAmount and fixedEmiAmount\n"""
80268,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/api/LoansApiResource.java,921,,"            @QueryParam(""dateFormat"") final String dateFormat) {"
80269,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/api/LoansApiResource.java,996,,"    public String postLoanTemplate(@FormDataParam(""file"") InputStream uploadedInputStream,"
80270,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/api/LoansApiResourceSwagger.java,80,,"            @Schema(example = ""false"")"
80271,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/api/LoansApiResourceSwagger.java,84,,"            @Schema(example = ""true"")"
80272,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/api/LoansApiResourceSwagger.java,535,,"            @Schema(example = ""100000"")"
80273,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/command/LoanChargeCommand.java,30,,"    @SuppressWarnings(""unused"")"
80274,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/data/LoanBorrowerCycleData.java,25,,"    @SuppressWarnings(""unused"")"
80275,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/Loan.java,306,,"    @OneToMany(cascade = CascadeType.ALL, mappedBy = ""loan"", orphanRemoval = true, fetch = FetchType.LAZY)"
80276,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/Loan.java,587,,"            throw new LoanChargeCannotBeAddedException(""loanCharge"", ""due.at.disbursement.and.loan.is.disbursed"", defaultUserMessage,"
80277,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/Loan.java,1341,,"            actualChanges.put(""recalculateLoanSchedule"", recalculateLoanSchedule);"
80278,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/Loan.java,1448,,"            actualChanges.put(""dateFormat"", dateFormatAsInput);"
80279,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/Loan.java,1449,,"            actualChanges.put(""locale"", localeAsInput);"
80280,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/Loan.java,1512,,"            throw new InvalidLoanStateTransitionException(""submittal"", ""cannot.be.a.future.date"", errorMessage, getSubmittedOnDate());"
80281,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/Loan.java,1512,,"            throw new InvalidLoanStateTransitionException(""submittal"", ""cannot.be.a.future.date"", errorMessage, getSubmittedOnDate());"
80282,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/Loan.java,2061,,"            actualChanges.put(""status"", LoanEnumerations.status(this.loanStatus));"
80283,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/Loan.java,2076,,"            actualChanges.put(""closedOnDate"", rejectedOn.format(fmt));"
80284,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/Loan.java,2081,,"                throw new InvalidLoanStateTransitionException(""reject"", ""cannot.be.before.submittal.date"", errorMessage, rejectedOn,"
80285,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/Loan.java,2081,,"                throw new InvalidLoanStateTransitionException(""reject"", ""cannot.be.before.submittal.date"", errorMessage, rejectedOn,"
80286,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/Loan.java,2130,,"                throw new InvalidLoanStateTransitionException(""withdraw"", ""cannot.be.before.submittal.date"", errorMessage, command,"
80287,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/Loan.java,2173,,"            LocalDate approvedOn = command.localDateValueOfParameterNamed(""approvedOnDate"");"
80288,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/Loan.java,2204,,"                    throw new InvalidLoanStateTransitionException(""approval"", ""amount.can't.be.greater.than.loan.amount.demanded"","
80289,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/Loan.java,2333,,"        final LocalDate actualDisbursementDate = command.localDateValueOfParameterNamed(""actualDisbursementDate"");"
80290,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/Loan.java,2761,,"            throw new InvalidLoanStateTransitionException(""disbursal"", ""cannot.be.before.approval.date"", errorMessage, disbursedOn,"
80291,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/Loan.java,3001,,"                throw new InvalidLoanStateTransitionException(""transaction"", ""is.exceeding.overpaid.amount"", errorMessage,"
80292,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/Loan.java,3289,,"            BigDecimal interestToPost = cumulativeIncomeFromInstallments.get(""interest"")"
80293,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/Loan.java,3291,,"            BigDecimal feeToPost = cumulativeIncomeFromInstallments.get(""fee"").subtract(cumulativeIncomeFromIncomePosting.get(""fee""));"
80294,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/Loan.java,3292,,"            BigDecimal penaltyToPost = cumulativeIncomeFromInstallments.get(""penalty"")"
80295,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/Loan.java,3617,,"            final LocalDate writtenOffOnLocalDate = command.localDateValueOfParameterNamed(""transactionDate"");"
80296,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/Loan.java,3629,,"                throw new InvalidLoanStateTransitionException(""writeoff"", ""cannot.be.before.submittal.date"", errorMessage,"
80297,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/Loan.java,3715,,"            throw new InvalidLoanStateTransitionException(""close"", ""cannot.be.before.submittal.date"", errorMessage, closureDate,"
80298,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/Loan.java,4663,,"                        postfix = ""cannot.be.before.client.transfer.date"";"
80299,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/Loan.java,4673,,"                        postfix = ""cannot.be.undone.before.client.transfer.date"";"
80300,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/LoanCharge.java,135,,"        final LocalDate dueDate = command.localDateValueOfParameterNamed(""dueDate"");"
80301,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/LoanCharge.java,154,,"                if (command.hasParameter(""principal"")) {"
80302,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/LoanCharge.java,161,,"                if (command.hasParameter(""principal"") && command.hasParameter(""interest"")) {"
80303,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/LoanRepository.java,75,,"    List<Loan> getGroupLoansDisbursedAfter(@Param(""disbursementDate"") Date disbursementDate, @Param(""groupId"") Long groupId,"
80304,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/LoanRepository.java,79,,"    List<Loan> getClientOrJLGLoansDisbursedAfter(@Param(""disbursementDate"") Date disbursementDate, @Param(""clientId"") Long clientId);"
80305,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/LoanRepository.java,114,,"            @Param(""loanStatuses"") Collection<Integer> loanStatuses);"
80306,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/LoanRepositoryWrapper.java,90,,"    public List<Loan> getGroupLoansDisbursedAfter(@Param(""disbursementDate"") Date disbursementDate, @Param(""groupId"") Long groupId,"
80307,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/LoanRepositoryWrapper.java,97,,"            @Param(""clientId"") Long clientId) {"
80308,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/transactionprocessor/impl/CreocoreLoanRepaymentScheduleTransactionProcessor.java,46,,"    @SuppressWarnings(""unused"")"
80309,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/guarantor/api/GuarantorsApiResource.java,80,,"            Arrays.asList(""id"", ""loanId"", ""clientRelationshipType"", ""guarantorType"", ""firstname"", ""lastname"", ""entityId"", ""externalId"","
80310,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/guarantor/data/GuarantorFundingData.java,28,,"    @SuppressWarnings(""unused"")"
80311,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/guarantor/data/GuarantorTransactionData.java,26,,"    @SuppressWarnings(""unused"")"
80312,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/guarantor/service/GuarantorDomainServiceImpl.java,143,,"            final DataValidatorBuilder baseDataValidator = new DataValidatorBuilder(dataValidationErrors).resource(""loan.guarantor"");"
80313,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/guarantor/service/GuarantorDomainServiceImpl.java,160,,"                throw new PlatformApiDataValidationException(""validation.msg.validation.errors.exist"", ""Validation errors exist."","
80314,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/guarantor/service/GuarantorDomainServiceImpl.java,160,,"                throw new PlatformApiDataValidationException(""validation.msg.validation.errors.exist"", ""Validation errors exist."","
80315,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/guarantor/service/GuarantorDomainServiceImpl.java,531,,"        public void businessEventToBeExecuted(@SuppressWarnings(""unused"") Map<BusinessEntity, Object> businessEventEntity) {}"
80316,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/loanschedule/domain/LoanScheduleModelDisbursementPeriod.java,33,,"    @SuppressWarnings(""unused"")"
80317,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/loanschedule/service/LoanScheduleAssembler.java,753,,"                                ""variable.schedule.insert.not.allowed.before.grace.period"", ""Loan schedule insert request invalid"");"
80318,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/rescheduleloan/api/RescheduleLoansApiResource.java,106,,"            @QueryParam(""command"") final String command) {"
80319,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/rescheduleloan/service/LoanRescheduleRequestReadPlatformServiceImpl.java,231,,"        final String sql = ""select "" + this.loanRescheduleRequestRowMapper.schema() + "" where lr.loan_id = ?"";"
80320,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanApplicationCommandFromApiJsonHelper.java,112,,"        final DataValidatorBuilder baseDataValidator = new DataValidatorBuilder(dataValidationErrors).resource(""loan"");"
80321,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanApplicationCommandFromApiJsonHelper.java,124,,"            final Long clientId = this.fromApiJsonHelper.extractLongNamed(""clientId"", element);"
80322,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanApplicationCommandFromApiJsonHelper.java,125,,"            final Long groupId = this.fromApiJsonHelper.extractLongNamed(""groupId"", element);"
80323,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanApplicationCommandFromApiJsonHelper.java,204,,"        final BigDecimal principal = this.fromApiJsonHelper.extractBigDecimalWithLocaleNamed(""principal"", element);"
80324,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanApplicationCommandFromApiJsonHelper.java,248,,"            if (this.fromApiJsonHelper.parameterExists(""interestRatePerPeriod"", element)) {"
80325,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanApplicationCommandFromApiJsonHelper.java,283,,"                        ""not.supported.loanproduct.not.linked.to.floating.rate"","
80326,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanApplicationCommandFromApiJsonHelper.java,310,,"        final Integer graceOnPrincipalPayment = this.fromApiJsonHelper.extractIntegerWithLocaleNamed(""graceOnPrincipalPayment"", element);"
80327,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanApplicationCommandFromApiJsonHelper.java,313,,"        final Integer graceOnInterestPayment = this.fromApiJsonHelper.extractIntegerWithLocaleNamed(""graceOnInterestPayment"", element);"
80328,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanApplicationCommandFromApiJsonHelper.java,316,,"        final Integer graceOnInterestCharged = this.fromApiJsonHelper.extractIntegerWithLocaleNamed(""graceOnInterestCharged"", element);"
80329,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanApplicationCommandFromApiJsonHelper.java,367,,"        final String linkAccountIdParameterName = ""linkAccountId"";"
80330,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanApplicationCommandFromApiJsonHelper.java,385,,"        final String chargesParameterName = ""charges"";"
80331,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanApplicationCommandFromApiJsonHelper.java,394,,"                        Arrays.asList(""id"", ""chargeId"", ""amount"", ""chargeTimeType"", ""chargeCalculationType"", ""dueDate""));"
80332,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanApplicationCommandFromApiJsonHelper.java,394,,"                        Arrays.asList(""id"", ""chargeId"", ""amount"", ""chargeTimeType"", ""chargeCalculationType"", ""dueDate""));"
80333,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanApplicationCommandFromApiJsonHelper.java,394,,"                        Arrays.asList(""id"", ""chargeId"", ""amount"", ""chargeTimeType"", ""chargeCalculationType"", ""dueDate""));"
80334,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanApplicationCommandFromApiJsonHelper.java,418,,"        final String collateralParameterName = ""collateral"";"
80335,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanApplicationCommandFromApiJsonHelper.java,425,,"                final Set<String> supportedParameters = new HashSet<>(Arrays.asList(""id"", ""type"", ""value"", ""description""));"
80336,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanApplicationCommandFromApiJsonHelper.java,425,,"                final Set<String> supportedParameters = new HashSet<>(Arrays.asList(""id"", ""type"", ""value"", ""description""));"
80337,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanApplicationCommandFromApiJsonHelper.java,425,,"                final Set<String> supportedParameters = new HashSet<>(Arrays.asList(""id"", ""type"", ""value"", ""description""));"
80338,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanApplicationCommandFromApiJsonHelper.java,946,,"            throw new PlatformApiDataValidationException(""validation.msg.validation.errors.exist"", ""Validation errors exist."","
80339,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanApplicationCommandFromApiJsonHelper.java,946,,"            throw new PlatformApiDataValidationException(""validation.msg.validation.errors.exist"", ""Validation errors exist."","
80340,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanApplicationCommandFromApiJsonHelper.java,1231,,"                            .failWithCode(""not.supported.for.selected.interest.calcualtion.type"");"
80341,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanEventApiJsonValidator.java,77,,"            disbursementParameters = new HashSet<>(Arrays.asList(""actualDisbursementDate"", ""externalId"", ""note"", ""locale"", ""dateFormat"","
80342,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanEventApiJsonValidator.java,77,,"            disbursementParameters = new HashSet<>(Arrays.asList(""actualDisbursementDate"", ""externalId"", ""note"", ""locale"", ""dateFormat"","
80343,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanEventApiJsonValidator.java,77,,"            disbursementParameters = new HashSet<>(Arrays.asList(""actualDisbursementDate"", ""externalId"", ""note"", ""locale"", ""dateFormat"","
80344,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanEventApiJsonValidator.java,77,,"            disbursementParameters = new HashSet<>(Arrays.asList(""actualDisbursementDate"", ""externalId"", ""note"", ""locale"", ""dateFormat"","
80345,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanEventApiJsonValidator.java,77,,"            disbursementParameters = new HashSet<>(Arrays.asList(""actualDisbursementDate"", ""externalId"", ""note"", ""locale"", ""dateFormat"","
80346,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanEventApiJsonValidator.java,81,,"                    ""paymentTypeId"", ""accountNumber"", ""checkNumber"", ""routingCode"", ""receiptNumber"", ""bankNumber"", ""adjustRepaymentDate"","
80347,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanEventApiJsonValidator.java,81,,"                    ""paymentTypeId"", ""accountNumber"", ""checkNumber"", ""routingCode"", ""receiptNumber"", ""bankNumber"", ""adjustRepaymentDate"","
80348,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanEventApiJsonValidator.java,81,,"                    ""paymentTypeId"", ""accountNumber"", ""checkNumber"", ""routingCode"", ""receiptNumber"", ""bankNumber"", ""adjustRepaymentDate"","
80349,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanEventApiJsonValidator.java,81,,"                    ""paymentTypeId"", ""accountNumber"", ""checkNumber"", ""routingCode"", ""receiptNumber"", ""bankNumber"", ""adjustRepaymentDate"","
80350,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanEventApiJsonValidator.java,81,,"                    ""paymentTypeId"", ""accountNumber"", ""checkNumber"", ""routingCode"", ""receiptNumber"", ""bankNumber"", ""adjustRepaymentDate"","
80351,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanEventApiJsonValidator.java,81,,"                    ""paymentTypeId"", ""accountNumber"", ""checkNumber"", ""routingCode"", ""receiptNumber"", ""bankNumber"", ""adjustRepaymentDate"","
80352,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanEventApiJsonValidator.java,133,,"        final Set<String> transactionParameters = new HashSet<>(Arrays.asList(""transactionDate"", ""transactionAmount"", ""externalId"", ""note"","
80353,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanEventApiJsonValidator.java,133,,"        final Set<String> transactionParameters = new HashSet<>(Arrays.asList(""transactionDate"", ""transactionAmount"", ""externalId"", ""note"","
80354,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanEventApiJsonValidator.java,140,,"        final DataValidatorBuilder baseDataValidator = new DataValidatorBuilder(dataValidationErrors).resource(""loan.transaction"");"
80355,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanEventApiJsonValidator.java,243,,"        final Set<String> disbursementParameters = new HashSet<>(Arrays.asList(""chargeId"", ""amount"", ""dueDate"", ""locale"", ""dateFormat""));"
80356,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanEventApiJsonValidator.java,243,,"        final Set<String> disbursementParameters = new HashSet<>(Arrays.asList(""chargeId"", ""amount"", ""dueDate"", ""locale"", ""dateFormat""));"
80357,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanEventApiJsonValidator.java,243,,"        final Set<String> disbursementParameters = new HashSet<>(Arrays.asList(""chargeId"", ""amount"", ""dueDate"", ""locale"", ""dateFormat""));"
80358,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanEventApiJsonValidator.java,297,,"                Arrays.asList(""assignmentDate"", ""fromLoanOfficerId"", ""toLoanOfficerId"", ""locale"", ""dateFormat""));"
80359,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanEventApiJsonValidator.java,297,,"                Arrays.asList(""assignmentDate"", ""fromLoanOfficerId"", ""toLoanOfficerId"", ""locale"", ""dateFormat""));"
80360,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanEventApiJsonValidator.java,297,,"                Arrays.asList(""assignmentDate"", ""fromLoanOfficerId"", ""toLoanOfficerId"", ""locale"", ""dateFormat""));"
80361,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanEventApiJsonValidator.java,357,,"                    Arrays.asList(""transactionDate"", ""locale"", ""dateFormat"", ""chargeId"", ""dueDate"", ""installmentNumber""));"
80362,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/GLIMAccountInfoReadPlatformServiceImpl.java,95,,"        final String sql = ""select "" + rm.schema() + "" and glim.id=?"";"
80363,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanApplicationWritePlatformServiceJpaRepositoryImpl.java,503,,"                final Integer repaymentFrequencyNthDayType = command.integerValueOfParameterNamed(""repaymentFrequencyNthDayType"");"
80364,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanApplicationWritePlatformServiceJpaRepositoryImpl.java,822,,"            if (changes.containsKey(""expectedDisbursementDate"")) {"
80365,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanApplicationWritePlatformServiceJpaRepositoryImpl.java,1429,,"            final String noteText = command.stringValueOfParameterNamed(""note"");"
80366,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanChargeAssembler.java,68,,"        JsonArray jsonDisbursement = this.fromApiJsonHelper.extractJsonArrayNamed(""disbursementData"", element);"
80367,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanChargeAssembler.java,104,,"            if (topLevelJsonElement.has(""charges"") && topLevelJsonElement.get(""charges"").isJsonArray()) {"
80368,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanChargeReadPlatformServiceImpl.java,88,,"        public LoanChargeData mapRow(final ResultSet rs, @SuppressWarnings(""unused"") final int rowNum) throws SQLException {"
80369,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanChargeReadPlatformServiceImpl.java,95,,"            final BigDecimal amountWaived = JdbcSupport.getBigDecimalDefaultToZeroIfNull(rs, ""amountWaived"");"
80370,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanChargeReadPlatformServiceImpl.java,97,,"            final BigDecimal amountOutstanding = rs.getBigDecimal(""amountOutstanding"");"
80371,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanChargeReadPlatformServiceImpl.java,115,,"            LocalDate dueAsOfDate = JdbcSupport.getLocalDate(rs, ""dueAsOfDate"");"
80372,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanChargeReadPlatformServiceImpl.java,174,,"        final String sql = ""select "" + rm.schema() + "" where lc.id=? and lc.loan_id=?"";"
80373,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanChargeReadPlatformServiceImpl.java,243,,"            final Integer installmentNumber = rs.getInt(""installmentNumber"");"
80374,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanReadPlatformServiceImpl.java,207,,"            sqlBuilder.append(""select "");"
80375,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanReadPlatformServiceImpl.java,658,,"        public LoanAccountData mapRow(final ResultSet rs, @SuppressWarnings(""unused"") final int rowNum) throws SQLException {"
80376,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanReadPlatformServiceImpl.java,660,,"            final String currencyCode = rs.getString(""currencyCode"");"
80377,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanReadPlatformServiceImpl.java,661,,"            final String currencyName = rs.getString(""currencyName"");"
80378,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanReadPlatformServiceImpl.java,662,,"            final String currencyNameCode = rs.getString(""currencyNameCode"");"
80379,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanReadPlatformServiceImpl.java,663,,"            final String currencyDisplaySymbol = rs.getString(""currencyDisplaySymbol"");"
80380,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanReadPlatformServiceImpl.java,664,,"            final Integer currencyDigits = JdbcSupport.getInteger(rs, ""currencyDigits"");"
80381,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanReadPlatformServiceImpl.java,665,,"            final Integer inMultiplesOf = JdbcSupport.getInteger(rs, ""inMultiplesOf"");"
80382,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanReadPlatformServiceImpl.java,756,,"            final BigDecimal principal = rs.getBigDecimal(""principal"");"
80383,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanReadPlatformServiceImpl.java,829,,"                final BigDecimal interestWaived = JdbcSupport.getBigDecimalDefaultToZeroIfNull(rs, ""interestWaived"");"
80384,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanReadPlatformServiceImpl.java,898,,"                final Long productId = JdbcSupport.getLong(rs, ""loanId"");"
80385,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanReadPlatformServiceImpl.java,982,,"                    + "" mc.amount,mc.id as chargeId "" + "" from m_loan_repayment_schedule ls """
80386,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanReadPlatformServiceImpl.java,1320,,"            final BigDecimal interestPortion = JdbcSupport.getBigDecimalDefaultToZeroIfNull(rs, ""interest"");"
80387,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanReadPlatformServiceImpl.java,1814,,"        sqlBuilder.append("" and (("");"
80388,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanWritePlatformServiceJpaRepositoryImpl.java,351,,"        final LocalDate actualDisbursementDate = command.localDateValueOfParameterNamed(""actualDisbursementDate"");"
80389,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanWritePlatformServiceJpaRepositoryImpl.java,390,,"            BigDecimal transactionAmount = command.bigDecimalValueOfParameterNamed(""transactionAmount"");"
80390,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanWritePlatformServiceJpaRepositoryImpl.java,406,,"            final String txnExternalId = command.stringValueOfParameterNamedAllowingNull(""externalId"");"
80391,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanWritePlatformServiceJpaRepositoryImpl.java,463,,"            final String noteText = command.stringValueOfParameterNamed(""note"");"
80392,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanWritePlatformServiceJpaRepositoryImpl.java,500,,"                    PortfolioAccountType.SAVINGS, PortfolioAccountType.LOAN, savingAccountData.accountId(), loanId, ""Loan Charge Payment"","
80393,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanWritePlatformServiceJpaRepositoryImpl.java,874,,"        final LocalDate transactionDate = command.localDateValueOfParameterNamed(""transactionDate"");"
80394,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanWritePlatformServiceJpaRepositoryImpl.java,881,,"        changes.put(""locale"", command.locale());"
80395,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanWritePlatformServiceJpaRepositoryImpl.java,882,,"        changes.put(""dateFormat"", command.dateFormat());"
80396,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanWritePlatformServiceJpaRepositoryImpl.java,883,,"        changes.put(""paymentTypeId"", command.stringValueOfParameterNamed(""paymentTypeId""));"
80397,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanWritePlatformServiceJpaRepositoryImpl.java,1467,,"            throw new LoanChargeCannotBeAddedException(""loanCharge"", ""overdue.charge"", defaultUserMessage, null,"
80398,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanWritePlatformServiceJpaRepositoryImpl.java,1622,,"                final LocalDate dueDate = command.localDateValueOfParameterNamed(""dueDate"");"
80399,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/api/LoanProductsApiResource.java,110,,"            Arrays.asList(""productId"", ""productName"", ""restrictedProducts"", ""allowedProducts"", ""productOptions""));"
80400,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/api/LoanProductsApiResource.java,186,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(schema = @Schema(implementation = LoanProductsApiResourceSwagger.PostLoanProductsResponse.class))) })"
80401,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/api/LoanProductsApiResourceSwagger.java,74,,"        @Schema(example = ""false"")"
80402,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/api/LoanProductsApiResourceSwagger.java,279,,"            @Schema(example = ""true"")"
80403,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/data/LoanProductData.java,143,,"    @SuppressWarnings(""unused"")"
80404,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/data/LoanProductGuaranteeData.java,26,,"    @SuppressWarnings(""unused"")"
80405,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/data/LoanProductInterestRecalculationData.java,33,,"    @SuppressWarnings(""unused"")"
80406,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/domain/LoanProduct.java,77,,"@Table(name = ""m_product_loan"", uniqueConstraints = { @UniqueConstraint(columnNames = { ""name"" }, name = ""unq_name""),"
80407,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/domain/LoanProduct.java,136,,"    @OneToMany(cascade = CascadeType.ALL, mappedBy = ""loanProduct"", orphanRemoval = true, fetch = FetchType.EAGER)"
80408,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/domain/LoanProduct.java,338,,"        final boolean syncExpectedWithDisbursementDate = command.booleanPrimitiveValueOfParameterNamed(""syncExpectedWithDisbursementDate"");"
80409,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/domain/LoanProduct.java,869,,"        final String localeParamName = ""locale"";"
80410,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/domain/LoanProductInterestRecalculationDetails.java,216,,"            actualChanges.put(""locale"", localeAsInput);"
80411,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/domain/LoanProductMinMaxConstraints.java,85,,"            actualChanges.put(""locale"", localeAsInput);"
80412,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/domain/LoanProductRelatedDetail.java,299,,"            actualChanges.put(""locale"", localeAsInput);"
80413,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/productmix/api/ProductMixApiResource.java,62,,"            Arrays.asList(""productId"", ""productName"", ""restrictedProducts"", ""allowedProducts"", ""productOptions""));"
80414,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/productmix/serialization/ProductMixDataValidator.java,45,,"    private final Set<String> supportedParameters = new HashSet<>(Arrays.asList(""restrictedProducts""));"
80415,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/productmix/service/ProductMixWritePlatformServiceJpaRepositoryImpl.java,94,,"            changes.put(""removedProductsForMix"", removedRestrictions);"
80416,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,63,,"    private final Set<String> supportedParameters = new HashSet<>(Arrays.asList(""locale"", ""dateFormat"", ""name"", ""description"", ""fundId"","
80417,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,63,,"    private final Set<String> supportedParameters = new HashSet<>(Arrays.asList(""locale"", ""dateFormat"", ""name"", ""description"", ""fundId"","
80418,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,63,,"    private final Set<String> supportedParameters = new HashSet<>(Arrays.asList(""locale"", ""dateFormat"", ""name"", ""description"", ""fundId"","
80419,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,64,,"            ""currencyCode"", ""digitsAfterDecimal"", ""inMultiplesOf"", ""principal"", ""minPrincipal"", ""maxPrincipal"", ""repaymentEvery"","
80420,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,64,,"            ""currencyCode"", ""digitsAfterDecimal"", ""inMultiplesOf"", ""principal"", ""minPrincipal"", ""maxPrincipal"", ""repaymentEvery"","
80421,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,64,,"            ""currencyCode"", ""digitsAfterDecimal"", ""inMultiplesOf"", ""principal"", ""minPrincipal"", ""maxPrincipal"", ""repaymentEvery"","
80422,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,64,,"            ""currencyCode"", ""digitsAfterDecimal"", ""inMultiplesOf"", ""principal"", ""minPrincipal"", ""maxPrincipal"", ""repaymentEvery"","
80423,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,64,,"            ""currencyCode"", ""digitsAfterDecimal"", ""inMultiplesOf"", ""principal"", ""minPrincipal"", ""maxPrincipal"", ""repaymentEvery"","
80424,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,64,,"            ""currencyCode"", ""digitsAfterDecimal"", ""inMultiplesOf"", ""principal"", ""minPrincipal"", ""maxPrincipal"", ""repaymentEvery"","
80425,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,64,,"            ""currencyCode"", ""digitsAfterDecimal"", ""inMultiplesOf"", ""principal"", ""minPrincipal"", ""maxPrincipal"", ""repaymentEvery"","
80426,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,65,,"            ""numberOfRepayments"", ""minNumberOfRepayments"", ""maxNumberOfRepayments"", ""repaymentFrequencyType"", ""interestRatePerPeriod"","
80427,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,65,,"            ""numberOfRepayments"", ""minNumberOfRepayments"", ""maxNumberOfRepayments"", ""repaymentFrequencyType"", ""interestRatePerPeriod"","
80428,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,65,,"            ""numberOfRepayments"", ""minNumberOfRepayments"", ""maxNumberOfRepayments"", ""repaymentFrequencyType"", ""interestRatePerPeriod"","
80429,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,65,,"            ""numberOfRepayments"", ""minNumberOfRepayments"", ""maxNumberOfRepayments"", ""repaymentFrequencyType"", ""interestRatePerPeriod"","
80430,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,65,,"            ""numberOfRepayments"", ""minNumberOfRepayments"", ""maxNumberOfRepayments"", ""repaymentFrequencyType"", ""interestRatePerPeriod"","
80431,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,66,,"            ""minInterestRatePerPeriod"", ""maxInterestRatePerPeriod"", ""interestRateFrequencyType"", ""amortizationType"", ""interestType"","
80432,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,66,,"            ""minInterestRatePerPeriod"", ""maxInterestRatePerPeriod"", ""interestRateFrequencyType"", ""amortizationType"", ""interestType"","
80433,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,66,,"            ""minInterestRatePerPeriod"", ""maxInterestRatePerPeriod"", ""interestRateFrequencyType"", ""amortizationType"", ""interestType"","
80434,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,66,,"            ""minInterestRatePerPeriod"", ""maxInterestRatePerPeriod"", ""interestRateFrequencyType"", ""amortizationType"", ""interestType"","
80435,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,66,,"            ""minInterestRatePerPeriod"", ""maxInterestRatePerPeriod"", ""interestRateFrequencyType"", ""amortizationType"", ""interestType"","
80436,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,67,,"            ""interestCalculationPeriodType"", LoanProductConstants.ALLOW_PARTIAL_PERIOD_INTEREST_CALCUALTION_PARAM_NAME,"
80437,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,68,,"            ""inArrearsTolerance"", ""transactionProcessingStrategyId"", ""graceOnPrincipalPayment"", ""recurringMoratoriumOnPrincipalPeriods"","
80438,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,68,,"            ""inArrearsTolerance"", ""transactionProcessingStrategyId"", ""graceOnPrincipalPayment"", ""recurringMoratoriumOnPrincipalPeriods"","
80439,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,68,,"            ""inArrearsTolerance"", ""transactionProcessingStrategyId"", ""graceOnPrincipalPayment"", ""recurringMoratoriumOnPrincipalPeriods"","
80440,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,69,,"            ""graceOnInterestPayment"", ""graceOnInterestCharged"", ""charges"", ""accountingRule"", ""includeInBorrowerCycle"", ""startDate"","
80441,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,69,,"            ""graceOnInterestPayment"", ""graceOnInterestCharged"", ""charges"", ""accountingRule"", ""includeInBorrowerCycle"", ""startDate"","
80442,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,69,,"            ""graceOnInterestPayment"", ""graceOnInterestCharged"", ""charges"", ""accountingRule"", ""includeInBorrowerCycle"", ""startDate"","
80443,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,69,,"            ""graceOnInterestPayment"", ""graceOnInterestCharged"", ""charges"", ""accountingRule"", ""includeInBorrowerCycle"", ""startDate"","
80444,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,70,,"            ""closeDate"", ""externalId"", ""isLinkedToFloatingInterestRates"", ""floatingRatesId"", ""interestRateDifferential"","
80445,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,70,,"            ""closeDate"", ""externalId"", ""isLinkedToFloatingInterestRates"", ""floatingRatesId"", ""interestRateDifferential"","
80446,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,70,,"            ""closeDate"", ""externalId"", ""isLinkedToFloatingInterestRates"", ""floatingRatesId"", ""interestRateDifferential"","
80447,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,71,,"            ""minDifferentialLendingRate"", ""defaultDifferentialLendingRate"", ""maxDifferentialLendingRate"","
80448,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,71,,"            ""minDifferentialLendingRate"", ""defaultDifferentialLendingRate"", ""maxDifferentialLendingRate"","
80449,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,71,,"            ""minDifferentialLendingRate"", ""defaultDifferentialLendingRate"", ""maxDifferentialLendingRate"","
80450,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,72,,"            ""isFloatingInterestRateCalculationAllowed"", ""syncExpectedWithDisbursementDate"","
80451,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,340,,"                        ""not.supported.when.isLinkedToFloatingInterestRates.is.true"","
80452,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,422,,"                        ""not.supported.when.isLinkedToFloatingInterestRates.is.false"","
80453,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java,2009,,"                            .failWithCode(""not.supported.for.selected.interest.calcualtion.type"");"
80454,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/service/LoanEnumerations.java,114,,"                        ""Invalid"");"
80455,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/service/LoanProductReadPlatformServiceImpl.java,83,,"            final String sql = ""select "" + rm.loanProductSchema() + "" where lp.id = ?"";"
80456,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/service/LoanProductReadPlatformServiceImpl.java,113,,"            sql += "" where lp.id in ( "" + inClause + "" ) "";"
80457,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/service/LoanProductReadPlatformServiceImpl.java,248,,"        public LoanProductData mapRow(final ResultSet rs, @SuppressWarnings(""unused"") final int rowNum) throws SQLException {"
80458,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/service/LoanProductWritePlatformServiceJpaRepositoryImpl.java,136,,"            if (command.parameterExists(""floatingRatesId"")) {"
80459,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/service/LoanProductWritePlatformServiceJpaRepositoryImpl.java,232,,"            if (changes.containsKey(""charges"")) {"
80460,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/meeting/api/MeetingsApiResource.java,110,,"    public String template(@PathParam(""entityType"") final String entityType, @PathParam(""entityId"") final Long entityId,"
80461,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/meeting/api/MeetingsApiResource.java,110,,"    public String template(@PathParam(""entityType"") final String entityType, @PathParam(""entityId"") final Long entityId,"
80462,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/meeting/api/MeetingsApiResource.java,163,,"    @Path(""{meetingId}"")"
80463,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/meeting/api/MeetingsApiResource.java,166,,"    public String retrieveMeeting(@PathParam(""meetingId"") final Long meetingId, @PathParam(""entityType"") final String entityType,"
80464,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/meeting/attendance/data/ClientAttendanceData.java,28,,"    @SuppressWarnings(""unused"")"
80465,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/note/api/NotesApiResource.java,99,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(array = @ArraySchema(schema = @Schema(implementation = NotesApiResourceSwagger.GetResourceTypeResourceIdNotesResponse.class)))) })"
80466,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/note/api/NotesApiResource.java,100,,"    public String retrieveNotesByResource(@PathParam(""resourceType"") @Parameter(description = ""resourceType"") final String resourceType,"
80467,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/note/api/NotesApiResource.java,101,,"            @PathParam(""resourceId"") @Parameter(description = ""resourceId"") final Long resourceId, @Context final UriInfo uriInfo) {"
80468,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/note/api/NotesApiResource.java,131,,"            @PathParam(""noteId"") @Parameter(description = ""noteId"") final Long noteId, @Context final UriInfo uriInfo) {"
80469,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/note/api/NotesApiResourceSwagger.java,57,,"        @Schema(example = ""mifos"")"
80470,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/note/api/NotesApiResourceSwagger.java,79,,"        @Schema(example = ""a note about the client"")"
80471,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/note/data/NoteData.java,29,,"    @SuppressWarnings(""unused"")"
80472,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/note/domain/Note.java,59,,"    @Column(name = ""note"", length = 1000)"
80473,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/note/serialization/NoteCommandFromApiJsonDeserializer.java,51,,"    private final Set<String> supportedParameters = new HashSet<>(Arrays.asList(""note""));"
80474,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/paymentdetail/data/PaymentDetailData.java,30,,"    @SuppressWarnings(""unused"")"
80475,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/paymenttype/api/PaymentTypeApiResource.java,91,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(array = @ArraySchema(schema = @Schema(implementation = PaymentTypeApiResourceSwagger.GetPaymentTypesResponse.class)))) })"
80476,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/paymenttype/api/PaymentTypeApiResource.java,106,,"    public String retrieveOnePaymentType(@PathParam(""paymentTypeId"") @Parameter(description = ""paymentTypeId"") final Long paymentTypeId,"
80477,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/paymenttype/data/PaymentTypeData.java,26,,"    @SuppressWarnings(""unused"")"
80478,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/products/api/ProductsApiResource.java,86,,"    public String retrieveTemplate(@PathParam(""type"") @Parameter(description = ""type"") final String productType,"
80479,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/products/api/ProductsApiResource.java,106,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(schema = @Schema(implementation = ProductsApiResourceSwagger.GetProductsTypeProductIdResponse.class))) })"
80480,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/products/api/ProductsApiResource.java,107,,"    public String retrieveProduct(@PathParam(""productId"") @Parameter(description = ""productId"") final Long productId,"
80481,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/products/api/ProductsApiResourceSwagger.java,142,,"            @Schema(example = ""true"")"
80482,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/products/api/ProductsApiResourceSwagger.java,144,,"            @Schema(example = ""false"")"
80483,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/products/api/ProductsApiResourceSwagger.java,187,,"                @Schema(example = ""ACCOUNT_NAME_1FJBQ"")"
80484,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/rate/domain/Rate.java,42,,"@Table(name = ""m_rate"", uniqueConstraints = { @UniqueConstraint(columnNames = { ""name"" }, name = ""name"") })"
80485,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/rate/exception/RateNotFoundException.java,28,,"        super(""error.msg.rate.id.invalid"", ""Rate with identifier "" + id + "" does not exist"", id);"
80486,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/rate/exception/RateNotFoundException.java,28,,"        super(""error.msg.rate.id.invalid"", ""Rate with identifier "" + id + "" does not exist"", id);"
80487,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/rate/service/RateReadServiceImpl.java,59,,"        final String sql = ""select "" + rm.rateSchema();"
80488,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/FixedDepositAccountTransactionsApiResource.java,97,,"    public String retrieveTemplate(@PathParam(""fixedDepositAccountId"") final Long fixedDepositAccountId,"
80489,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/FixedDepositAccountTransactionsApiResource.java,137,,"            @QueryParam(""command"") final String commandParam, final String apiRequestBodyAsJson) {"
80490,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/FixedDepositAccountsApiResource.java,134,,"            + ""\n\n"" + ""Field Defaults\n\n"" + ""Allowed Value Lists"" + ""Example Requests:\n\n"" + ""\n\n"""
80491,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/FixedDepositAccountsApiResource.java,137,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(schema = @Schema(implementation = FixedDepositAccountsApiResourceSwagger.GetFixedDepositAccountsTemplateResponse.class))) })"
80492,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/FixedDepositAccountsApiResource.java,141,,"            @DefaultValue(""false"") @QueryParam(""staffInSelectedOfficeOnly"") @Parameter(description = ""staffInSelectedOfficeOnly"") final boolean staffInSelectedOfficeOnly,"
80493,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/FixedDepositAccountsApiResource.java,203,,"    @Path(""{accountId}"")"
80494,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/FixedDepositAccountsApiResource.java,210,,"    public String retrieveOne(@PathParam(""accountId"") @Parameter(description = ""accountId"") final Long accountId,"
80495,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/FixedDepositAccountsApiResource.java,212,,"            @DefaultValue(""all"") @QueryParam(""chargeStatus"") @Parameter(description = ""chargeStatus"") final String chargeStatus,"
80496,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/FixedDepositAccountsApiResource.java,351,,"            @QueryParam(""command"") @Parameter(description = ""command"") final String commandParam, @Context final UriInfo uriInfo,"
80497,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/FixedDepositAccountsApiResource.java,449,,"            @QueryParam(""dateFormat"") final String dateFormat) {"
80498,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/FixedDepositAccountsApiResource.java,457,,"    public String postFixedDepositTemplate(@FormDataParam(""file"") InputStream uploadedInputStream,"
80499,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/FixedDepositAccountsApiResourceSwagger.java,71,,"            @Schema(example = ""false"")"
80500,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/FixedDepositProductsApiResource.java,155,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(schema = @Schema(implementation = FixedDepositProductsApiResourceSwagger.PostFixedDepositProductsResponse.class))) })"
80501,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/FixedDepositProductsApiResource.java,174,,"    public String update(@PathParam(""productId"") @Parameter(description = ""productId"") final Long productId,"
80502,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/FixedDepositProductsApiResourceSwagger.java,68,,"        @Schema(example = ""FD01"")"
80503,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/FixedDepositProductsApiResourceSwagger.java,269,,"        @Schema(example = ""false"")"
80504,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/RecurringDepositAccountTransactionsApiResource.java,113,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(schema = @Schema(implementation = RecurringDepositAccountTransactionsApiResourceSwagger.GetRecurringDepositAccountsRecurringDepositAccountIdTransactionsTemplateResponse.class))) })"
80505,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/RecurringDepositAccountTransactionsApiResource.java,115,,"            @PathParam(""recurringDepositAccountId"") @Parameter(description = ""recurringDepositAccountId"") final Long recurringDepositAccountId,"
80506,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/RecurringDepositAccountTransactionsApiResource.java,116,,"            @QueryParam(""command"") @Parameter(description = ""command"") final String commandParam, @Context final UriInfo uriInfo) {"
80507,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/RecurringDepositAccountTransactionsApiResource.java,123,,"        if (!(is(commandParam, ""deposit"") || is(commandParam, ""withdrawal""))) {"
80508,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/RecurringDepositAccountTransactionsApiResource.java,123,,"        if (!(is(commandParam, ""deposit"") || is(commandParam, ""withdrawal""))) {"
80509,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/RecurringDepositAccountTransactionsApiResource.java,158,,"            @PathParam(""transactionId"") @Parameter(description = ""transactionId"") final Long transactionId,"
80510,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/RecurringDepositAccountTransactionsApiResourceSwagger.java,48,,"            @Schema(example = ""true"")"
80511,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/RecurringDepositAccountTransactionsApiResourceSwagger.java,50,,"            @Schema(example = ""false"")"
80512,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/RecurringDepositAccountsApiResource.java,131,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(schema = @Schema(implementation = RecurringDepositAccountsApiResourceSwagger.GetRecurringDepositAccountsTemplateResponse.class))) })"
80513,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/RecurringDepositAccountsApiResource.java,135,,"            @DefaultValue(""false"") @QueryParam(""staffInSelectedOfficeOnly"") @Parameter(description = ""staffInSelectedOfficeOnly"") final boolean staffInSelectedOfficeOnly,"
80514,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/RecurringDepositAccountsApiResource.java,200,,"    @Path(""{accountId}"")"
80515,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/RecurringDepositAccountsApiResource.java,207,,"    public String retrieveOne(@PathParam(""accountId"") @Parameter(description = ""accountId"") final Long accountId,"
80516,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/RecurringDepositAccountsApiResource.java,209,,"            @DefaultValue(""all"") @QueryParam(""chargeStatus"") @Parameter(description = ""chargeStatus"") final String chargeStatus,"
80517,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/RecurringDepositAccountsApiResource.java,327,,"            @QueryParam(""command"") @Parameter(description = ""command"") final String commandParam, @Context final UriInfo uriInfo,"
80518,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/RecurringDepositAccountsApiResource.java,432,,"            @QueryParam(""dateFormat"") final String dateFormat) {"
80519,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/RecurringDepositAccountsApiResource.java,440,,"    public String postRecurringDepositTemplate(@FormDataParam(""file"") InputStream uploadedInputStream,"
80520,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/RecurringDepositAccountsApiResourceSwagger.java,71,,"            @Schema(example = ""false"")"
80521,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/RecurringDepositProductsApiResource.java,156,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(schema = @Schema(implementation = RecurringDepositProductsApiResourceSwagger.PostRecurringDepositProductsResponse.class))) })"
80522,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/RecurringDepositProductsApiResource.java,175,,"    public String update(@PathParam(""productId"") @Parameter(description = ""productId"") final Long productId,"
80523,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/RecurringDepositProductsApiResourceSwagger.java,68,,"        @Schema(example = ""RD01"")"
80524,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/RecurringDepositProductsApiResourceSwagger.java,294,,"        @Schema(example = ""false"")"
80525,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsAccountChargesApiResource.java,109,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(array = @ArraySchema(schema = @Schema(implementation = SavingsAccountChargesApiResourceSwagger.GetSavingsAccountsSavingsAccountIdChargesResponse.class)))) })"
80526,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsAccountChargesApiResource.java,111,,"            @PathParam(""savingsAccountId"") @Parameter(description = ""savingsAccountId"") final Long savingsAccountId,"
80527,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsAccountChargesApiResource.java,153,,"    @Path(""{savingsAccountChargeId}"")"
80528,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsAccountChargesApiResource.java,162,,"            @PathParam(""savingsAccountChargeId"") @Parameter(description = ""savingsAccountChargeId"") final Long savingsAccountChargeId,"
80529,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsAccountChargesApiResourceSwagger.java,91,,"        @Schema(example = ""100"")"
80530,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsAccountChargesApiResourceSwagger.java,103,,"        @Schema(example = ""false"")"
80531,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsAccountChargesApiResourceSwagger.java,212,,"        @Schema(example = ""dd MMMM yyyy"")"
80532,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsAccountTransactionsApiResource.java,92,,"    public String retrieveTemplate(@PathParam(""savingsId"") final Long savingsId,"
80533,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsAccountTransactionsApiResource.java,133,,"    public String transaction(@PathParam(""savingsId"") final Long savingsId, @QueryParam(""command"") final String commandParam,"
80534,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsAccountsApiResource.java,119,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(schema = @Schema(implementation = SavingsAccountsApiResourceSwagger.GetSavingsAccountsTemplateResponse.class))) })"
80535,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsAccountsApiResource.java,123,,"            @DefaultValue(""false"") @QueryParam(""staffInSelectedOfficeOnly"") @Parameter(description = ""staffInSelectedOfficeOnly"") final boolean staffInSelectedOfficeOnly,"
80536,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsAccountsApiResource.java,196,,"    @Path(""{accountId}"")"
80537,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsAccountsApiResource.java,203,,"    public String retrieveOne(@PathParam(""accountId"") @Parameter(description = ""accountId"") final Long accountId,"
80538,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsAccountsApiResource.java,205,,"            @DefaultValue(""all"") @QueryParam(""chargeStatus"") @Parameter(description = ""chargeStatus"") final String chargeStatus,"
80539,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsAccountsApiResource.java,283,,"            @QueryParam(""command"") @Parameter(description = ""command"") final String commandParam) {"
80540,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsAccountsApiResource.java,342,,"        if (is(commandParam, ""reject"")) {"
80541,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsAccountsApiResource.java,345,,"        } else if (is(commandParam, ""withdrawnByApplicant"")) {"
80542,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsAccountsApiResource.java,348,,"        } else if (is(commandParam, ""approve"")) {"
80543,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsAccountsApiResource.java,351,,"        } else if (is(commandParam, ""undoapproval"")) {"
80544,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsAccountsApiResource.java,354,,"        } else if (is(commandParam, ""activate"")) {"
80545,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsAccountsApiResource.java,357,,"        } else if (is(commandParam, ""calculateInterest"")) {"
80546,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsAccountsApiResource.java,360,,"        } else if (is(commandParam, ""postInterest"")) {"
80547,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsAccountsApiResource.java,366,,"        } else if (is(commandParam, ""close"")) {"
80548,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsAccountsApiResource.java,525,,"            @QueryParam(""dateFormat"") final String dateFormat) {"
80549,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsAccountsApiResource.java,532,,"    public String postSavingsTemplate(@FormDataParam(""file"") InputStream uploadedInputStream,"
80550,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsAccountsApiResourceSwagger.java,75,,"                @Schema(example = ""false"")"
80551,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsProductsApiResource.java,138,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(schema = @Schema(implementation = SavingsProductsApiResourceSwagger.PostSavingsProductsResponse.class))) })"
80552,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsProductsApiResource.java,156,,"    public String update(@PathParam(""productId"") @Parameter(description = ""productId"") final Long productId,"
80553,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsProductsApiResourceSwagger.java,217,,"        @Schema(example = ""false"")"
80554,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/api/SavingsProductsApiResourceSwagger.java,389,,"                @Schema(example = ""true"")"
80555,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/DepositAccountInterestIncentiveData.java,27,,"    @SuppressWarnings(""unused"")"
80556,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/DepositAccountInterestRateChartSlabData.java,50,,"    @SuppressWarnings(""unused"")"
80557,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/DepositAccountOnHoldTransactionData.java,27,,"    @SuppressWarnings(""unused"")"
80558,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountDataValidator.java,452,,"                Arrays.asList(""fromSavingsOfficerId"", ""toSavingsOfficerId"", ""assignmentDate"", ""locale"", ""dateFormat""));"
80559,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountDataValidator.java,485,,"        final Set<String> supportedParameters = new HashSet<>(Arrays.asList(""unassignedDate"", ""locale"", ""dateFormat""));"
80560,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountStatusEnumData.java,29,,"    @SuppressWarnings(""unused"")"
80561,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountSubStatusEnumData.java,29,,"    @SuppressWarnings(""unused"")"
80562,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/domain/RecurringDepositAccount.java,79,,"    @OneToOne(mappedBy = ""account"", cascade = CascadeType.ALL)"
80563,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/domain/SavingsAccount.java,736,,"                        ""transactionDate"", getStartInterestCalculationDate().toString());"
80564,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/domain/SavingsAccount.java,1131,,"                    throw new InsufficientAccountBalanceException(""transactionAmount"", getAccountBalance(), withdrawalFee,"
80565,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/domain/SavingsAccount.java,1257,,"            baseDataValidator.reset().failWithCodeNoParameterAddedToErrorCode(""not.in.submittedandpendingapproval.state"");"
80566,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/domain/SavingsAccount.java,1679,,"            throw new SavingsOfficerAssignmentDateException(""cannot.be.a.future.date"", errorMessage, assignmentDate);"
80567,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/domain/SavingsAccount.java,2496,,"            baseDataValidator.reset().failWithCodeNoParameterAddedToErrorCode(""transaction.invalid.account.is.closed"");"
80568,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/domain/SavingsAccountTransaction.java,84,,"    @Column(name = ""amount"", scale = 6, precision = 19, nullable = false)"
80569,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/DepositAccountInterestRateChartReadPlatformServiceImpl.java,96,,"        sql.append(""CASE "");"
80570,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/DepositAccountReadPlatformServiceImpl.java,172,,"        sqlBuilder.append(""select "");"
80571,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/DepositAccountReadPlatformServiceImpl.java,576,,"                    ""sa.currency_code as currencyCode, sa.currency_digits as currencyDigits, sa.currency_multiplesof as inMultiplesOf, "");"
80572,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/DepositAccountReadPlatformServiceImpl.java,577,,"            selectFieldsSqlBuilder.append(""curr.name as currencyName, curr.internationalized_name_code as currencyNameCode, "");"
80573,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/DepositAccountReadPlatformServiceImpl.java,578,,"            selectFieldsSqlBuilder.append(""curr.display_symbol as currencyDisplaySymbol, "");"
80574,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/DepositAccountReadPlatformServiceImpl.java,609,,"            selectTablesSqlBuilder.append(""join m_currency curr on curr.code = sa.currency_code "");"
80575,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/DepositAccountReadPlatformServiceImpl.java,690,,"            final Integer depositTypeId = JdbcSupport.getInteger(rs, ""depositTypeId"");"
80576,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/DepositAccountReadPlatformServiceImpl.java,693,,"            final String currencyCode = rs.getString(""currencyCode"");"
80577,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/DepositAccountReadPlatformServiceImpl.java,694,,"            final String currencyName = rs.getString(""currencyName"");"
80578,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/DepositAccountReadPlatformServiceImpl.java,695,,"            final String currencyNameCode = rs.getString(""currencyNameCode"");"
80579,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/DepositAccountReadPlatformServiceImpl.java,696,,"            final String currencyDisplaySymbol = rs.getString(""currencyDisplaySymbol"");"
80580,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/DepositAccountReadPlatformServiceImpl.java,697,,"            final Integer currencyDigits = JdbcSupport.getInteger(rs, ""currencyDigits"");"
80581,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/DepositAccountReadPlatformServiceImpl.java,698,,"            final Integer inMultiplesOf = JdbcSupport.getInteger(rs, ""inMultiplesOf"");"
80582,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/DepositAccountReadPlatformServiceImpl.java,801,,"        public FixedDepositAccountData mapRow(final ResultSet rs, @SuppressWarnings(""unused"") final int rowNum) throws SQLException {"
80583,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/DepositAccountReadPlatformServiceImpl.java,804,,"            final boolean preClosurePenalApplicable = rs.getBoolean(""preClosurePenalApplicable"");"
80584,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/DepositAccountReadPlatformServiceImpl.java,805,,"            final BigDecimal preClosurePenalInterest = JdbcSupport.getBigDecimalDefaultToNullIfZero(rs, ""preClosurePenalInterest"");"
80585,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/DepositAccountReadPlatformServiceImpl.java,806,,"            final Integer preClosurePenalInterestOnTypeId = JdbcSupport.getInteger(rs, ""preClosurePenalInterestOnId"");"
80586,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/DepositAccountReadPlatformServiceImpl.java,810,,"            final Integer minDepositTerm = JdbcSupport.getInteger(rs, ""minDepositTerm"");"
80587,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/DepositAccountReadPlatformServiceImpl.java,811,,"            final Integer maxDepositTerm = JdbcSupport.getInteger(rs, ""maxDepositTerm"");"
80588,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/DepositAccountReadPlatformServiceImpl.java,812,,"            final Integer minDepositTermTypeId = JdbcSupport.getInteger(rs, ""minDepositTermTypeId"");"
80589,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/DepositAccountReadPlatformServiceImpl.java,815,,"            final Integer maxDepositTermTypeId = JdbcSupport.getInteger(rs, ""maxDepositTermTypeId"");"
80590,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/DepositAccountReadPlatformServiceImpl.java,818,,"            final Integer inMultiplesOfDepositTerm = JdbcSupport.getInteger(rs, ""inMultiplesOfDepositTerm"");"
80591,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/DepositAccountReadPlatformServiceImpl.java,819,,"            final Integer inMultiplesOfDepositTermTypeId = JdbcSupport.getInteger(rs, ""inMultiplesOfDepositTermTypeId"");"
80592,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/DepositAccountWritePlatformServiceJpaRepositoryImpl.java,406,,"    public CommandProcessingResult depositToFDAccount(final Long savingsId, @SuppressWarnings(""unused"") final JsonCommand command) {"
80593,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/DepositAccountWritePlatformServiceJpaRepositoryImpl.java,834,,"        final String noteText = command.stringValueOfParameterNamed(""note"");"
80594,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/DepositApplicationProcessWritePlatformServiceJpaRepositoryImpl.java,655,,"            final String noteText = command.stringValueOfParameterNamed(""note"");"
80595,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/GSIMReadPlatformServiceImpl.java,191,,"        final String sql = ""select "" + rm.schema() + "" and gsim.id=?"";"
80596,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/SavingsAccountApplicationTransitionApiJsonValidator.java,62,,"        final Set<String> disbursementParameters = new HashSet<>(Arrays.asList(""approvedOnDate"", ""note"", ""locale"", ""dateFormat""));"
80597,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/SavingsAccountChargeReadPlatformServiceImpl.java,180,,"            final String sql = ""select "" + rm.schema() + "" where sc.id=? and sc.savings_account_id=?"";"
80598,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/SavingsAccountReadPlatformServiceImpl.java,136,,"        final StringBuilder sqlBuilder = new StringBuilder(""select "" + this.savingAccountMapper.schema());"
80599,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/SavingsAccountReadPlatformServiceImpl.java,183,,"                sqlQueryCriteria = sqlQueryCriteria.replaceAll(""accountNo"", ""sa.account_no"");"
80600,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/SavingsAccountReadPlatformServiceImpl.java,273,,"            sqlBuilder.append(""curr.name as currencyName, curr.internationalized_name_code as currencyNameCode, "");"
80601,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/SavingsAccountReadPlatformServiceImpl.java,274,,"            sqlBuilder.append(""curr.display_symbol as currencyDisplaySymbol, "");"
80602,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/SavingsAccountReadPlatformServiceImpl.java,327,,"            sqlBuilder.append(""from m_savings_account sa "");"
80603,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/SavingsAccountReadPlatformServiceImpl.java,349,,"        public SavingsAccountData mapRow(final ResultSet rs, @SuppressWarnings(""unused"") final int rowNum) throws SQLException {"
80604,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/SavingsAccountReadPlatformServiceImpl.java,435,,"            final String currencyCode = rs.getString(""currencyCode"");"
80605,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/SavingsAccountReadPlatformServiceImpl.java,436,,"            final String currencyName = rs.getString(""currencyName"");"
80606,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/SavingsAccountReadPlatformServiceImpl.java,437,,"            final String currencyNameCode = rs.getString(""currencyNameCode"");"
80607,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/SavingsAccountReadPlatformServiceImpl.java,438,,"            final String currencyDisplaySymbol = rs.getString(""currencyDisplaySymbol"");"
80608,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/SavingsAccountReadPlatformServiceImpl.java,439,,"            final Integer currencyDigits = JdbcSupport.getInteger(rs, ""currencyDigits"");"
80609,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/SavingsAccountReadPlatformServiceImpl.java,440,,"            final Integer inMultiplesOf = JdbcSupport.getInteger(rs, ""inMultiplesOf"");"
80610,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/SavingsAccountWritePlatformServiceJpaRepositoryImpl.java,367,,"        final String noteText = command.stringValueOfParameterNamed(""note"");"
80611,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/SavingsAccountWritePlatformServiceJpaRepositoryImpl.java,599,,"                    ""Savings account transaction:"" + transactionId + "" update not allowed as it involves in account transfer"","
80612,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/SavingsApplicationProcessWritePlatformServiceJpaRepositoryImpl.java,528,,"            final String noteText = command.stringValueOfParameterNamed(""note"");"
80613,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/SavingsEnumerations.java,98,,"                SavingsPeriodFrequencyType.INVALID.getCode(), ""Invalid"");"
80614,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/SavingsEnumerations.java,104,,"                        codePrefix + SavingsPeriodFrequencyType.DAYS.getCode(), ""Days"");"
80615,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/SavingsEnumerations.java,108,,"                        codePrefix + SavingsPeriodFrequencyType.WEEKS.getCode(), ""Weeks"");"
80616,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/SavingsEnumerations.java,112,,"                        codePrefix + SavingsPeriodFrequencyType.MONTHS.getCode(), ""Months"");"
80617,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/SavingsEnumerations.java,116,,"                        codePrefix + SavingsPeriodFrequencyType.YEARS.getCode(), ""Years"");"
80618,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/SavingsProductReadPlatformServiceImpl.java,65,,"        String sql = ""select "" + this.savingsProductRowMapper.schema() + ""where sp.deposit_type_enum = ?"";"
80619,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/SavingsProductReadPlatformServiceImpl.java,72,,"            sql += "" and sp.id in ( "" + inClause + "" ) "";"
80620,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/search/data/AdHocSearchQueryData.java,28,,"    @SuppressWarnings(""unused"")"
80621,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/account/api/SelfAccountTransferApiResource.java,107,,"    public String template(@DefaultValue("""") @QueryParam(""type"") @Parameter(name = ""type"") final String type,"
80622,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/account/api/SelfBeneficiariesTPTApiResource.java,97,,"            + ""\n"" + ""Example Requests:\n"" + ""\n"" + ""/self/beneficiaries/tpt/template"")"
80623,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/account/api/SelfBeneficiariesTPTApiResource.java,99,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(schema = @Schema(implementation = SelfBeneficiariesTPTApiResourceSwagger.GetSelfBeneficiariesTPTTemplateResponse.class))) })"
80624,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/account/data/SelfBeneficiariesTPTData.java,26,,"    @SuppressWarnings(""unused"")"
80625,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/account/service/SelfBeneficiariesTPTReadPlatformServiceImpl.java,73,,"            sqlBuilder.append("" c.display_name as clientName, "");"
80626,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/account/service/SelfBeneficiariesTPTReadPlatformServiceImpl.java,74,,"            sqlBuilder.append("" b.account_type as accountType, "");"
80627,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/account/service/SelfBeneficiariesTPTReadPlatformServiceImpl.java,77,,"            sqlBuilder.append("" from m_selfservice_beneficiaries_tpt as b "");"
80628,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/account/service/SelfBeneficiariesTPTReadPlatformServiceImpl.java,78,,"            sqlBuilder.append("" inner join m_office as o on b.office_id = o.id "");"
80629,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/account/service/SelfBeneficiariesTPTReadPlatformServiceImpl.java,79,,"            sqlBuilder.append("" inner join m_client as c on b.client_id = c.id "");"
80630,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/account/service/SelfBeneficiariesTPTReadPlatformServiceImpl.java,81,,"            sqlBuilder.append("" where b.is_active = 1 "");"
80631,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/account/service/SelfBeneficiariesTPTReadPlatformServiceImpl.java,83,,"            sqlBuilder.append("" and b.app_user_id = ?) "");"
80632,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/client/api/SelfClientsApiResource.java,93,,"            + ""Example Requests:\n"" + ""\n"" + ""self/clients\n"" + ""\n"" + ""self/clients?fields=displayName,officeName\n"" + ""\n"""
80633,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/client/api/SelfClientsApiResource.java,96,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(schema = @Schema(implementation = SelfClientsApiResourceSwagger.GetSelfClientsResponse.class))) })"
80634,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/client/api/SelfClientsApiResource.java,101,,"            @QueryParam(""offset"") @Parameter(description = ""offset"") final Integer offset,"
80635,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/client/api/SelfClientsApiResource.java,103,,"            @QueryParam(""limit"") @Parameter(description = ""limit"") final Integer limit,"
80636,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/client/api/SelfClientsApiResource.java,124,,"    public String retrieveOne(@PathParam(""clientId"") @Parameter(description = ""clientId"") final Long clientId,"
80637,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/client/api/SelfClientsApiResource.java,153,,"    @Path(""{clientId}/images"")"
80638,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/client/api/SelfClientsApiResourceSwagger.java,60,,"            @Schema(example = ""true"")"
80639,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/client/api/SelfClientsApiResourceSwagger.java,70,,"            @Schema(example = ""Head Office"")"
80640,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/client/api/SelfClientsApiResourceSwagger.java,154,,"                @Schema(example = ""false"")"
80641,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/loanaccount/api/SelfLoansApiResource.java,97,,"    @Operation(summary = ""Retrieve a Loan"", description = ""Retrieves a Loan\n\n"" + ""Example Requests:\n"" + ""\n"" + ""self/loans/1\n"" + ""\n"""
80642,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/loanaccount/api/SelfLoansApiResource.java,101,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(schema = @Schema(implementation = SelfLoansApiResourceSwagger.GetSelfLoansLoanIdResponse.class))) })"
80643,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/loanaccount/api/SelfLoansApiResource.java,102,,"    public String retrieveLoan(@PathParam(""loanId"") @Parameter(description = ""loanId"") final Long loanId, @Context final UriInfo uriInfo) {"
80644,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/loanaccount/api/SelfLoansApiResource.java,174,,"    public String template(@QueryParam(""clientId"") @Parameter(description = ""clientId"") final Long clientId,"
80645,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/loanaccount/api/SelfLoansApiResource.java,214,,"            @QueryParam(""command"") @Parameter(description = ""command"") final String commandParam, @Context final UriInfo uriInfo,"
80646,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/loanaccount/api/SelfLoansApiResourceSwagger.java,48,,"            @Schema(example = ""false"")"
80647,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/loanaccount/api/SelfLoansApiResourceSwagger.java,52,,"            @Schema(example = ""true"")"
80648,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/loanaccount/api/SelfLoansApiResourceSwagger.java,647,,"        @Schema(example = ""dd MMMM yyyy"")"
80649,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/loanaccount/data/SelfLoansDataValidator.java,93,,"        final String clientIdParameterName = ""clientId"";"
80650,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/registration/data/SelfServiceRegistrationData.java,26,,"    @SuppressWarnings(""unused"")"
80651,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/savings/api/SelfSavingsApiResource.java,94,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(schema = @Schema(implementation = SelfSavingsApiResourceSwagger.GetSelfSavingsAccountsResponse.class))) })"
80652,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/savings/api/SelfSavingsApiResource.java,95,,"    public String retrieveSavings(@PathParam(""accountId"") @Parameter(description = ""accountId"") final Long accountId,"
80653,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/savings/api/SelfSavingsApiResource.java,96,,"            @DefaultValue(""all"") @QueryParam(""chargeStatus"") @Parameter(description = ""chargeStatus"") final String chargeStatus,"
80654,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/savings/api/SelfSavingsApiResourceSwagger.java,40,,"            @Schema(example = ""100"")"
80655,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/savings/api/SelfSavingsApiResourceSwagger.java,48,,"            @Schema(example = ""false"")"
80656,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/shareaccounts/api/SelfShareAccountsApiResourceSwagger.java,129,,"            @Schema(example = ""true"")"
80657,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/shareaccounts/api/SelfShareAccountsApiResourceSwagger.java,131,,"            @Schema(example = ""false"")"
80658,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/shareaccounts/api/SelfShareAccountsApiResourceSwagger.java,312,,"                        @Schema(example = ""accountUsage.detail"")"
80659,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/shareaccounts/api/SelfShareAccountsApiResourceSwagger.java,314,,"                        @Schema(example = ""DETAIL"")"
80660,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/serialization/ShareAccountDataSerializer.java,133,,"        final DataValidatorBuilder baseDataValidator = new DataValidatorBuilder(dataValidationErrors).resource(""sharesaccount"");"
80661,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/service/ShareAccountWritePlatformServiceJpaRepositoryImpl.java,263,,"                final String noteText = jsonCommand.stringValueOfParameterNamed(""note"");"
80662,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/service/SharesEnumerations.java,50,,"                        ShareAccountStatusType.INVALID.getCode(), ""Invalid"", submittedAndPendingApproval, isApproved, isRejected, isActive,"
80663,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareproducts/api/ShareDividendApiResource.java,83,,"    public String retrieveAll(@PathParam(""productId"") final Long productId, @QueryParam(""offset"") final Integer offset,"
80664,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareproducts/data/ShareProductDividendPayOutData.java,29,,"    @SuppressWarnings(""unused"")"
80665,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/tax/api/TaxComponentApiResource.java,87,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(array = @ArraySchema(schema = @Schema(implementation = TaxComponentApiResourceSwagger.GetTaxesComponentsResponse.class)))) })"
80666,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/tax/api/TaxComponentApiResource.java,105,,"    public String retrieveTaxComponent(@PathParam(""taxComponentId"") @Parameter(description = ""taxComponentId"") final Long taxComponentId,"
80667,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/tax/api/TaxGroupApiResource.java,86,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(array = @ArraySchema(schema = @Schema(implementation = TaxGroupApiResourceSwagger.GetTaxesGroupResponse.class)))) })"
80668,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/tax/api/TaxGroupApiResource.java,104,,"    public String retrieveTaxGroup(@PathParam(""taxGroupId"") @Parameter(description = ""taxGroupId"") final Long taxGroupId,"
80669,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/tax/data/TaxComponentData.java,32,,"    @SuppressWarnings(""unused"")"
80670,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/tax/data/TaxGroupMappingsData.java,26,,"    @SuppressWarnings(""unused"")"
80671,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/tax/serialization/TaxValidator.java,88,,"        final DataValidatorBuilder baseDataValidator = new DataValidatorBuilder(dataValidationErrors).resource(""tax.component"");"
80672,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/tax/serialization/TaxValidator.java,169,,"        final DataValidatorBuilder baseDataValidator = new DataValidatorBuilder(dataValidationErrors).resource(""tax.group"");"
80673,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/tax/serialization/TaxValidator.java,235,,"                                TaxApiConstants.taxComponentsParamName + ""."" + TaxApiConstants.taxComponentIdParamName + "".at.index."" + i)"
80674,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/tax/service/TaxReadPlatformServiceImpl.java,62,,"        String sql = ""select "" + this.taxComponentMapper.getSchema();"
80675,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/tax/service/TaxReadPlatformServiceImpl.java,139,,"            final String name = rs.getString(""name"");"
80676,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/portfolio/tax/service/TaxReadPlatformServiceImpl.java,191,,"        public TaxComponentHistoryData mapRow(ResultSet rs, @SuppressWarnings(""unused"") int rowNum) throws SQLException {"
80677,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/spm/api/SpmApiResource.java,75,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(array = @ArraySchema(schema = @Schema(implementation = SurveyData.class)))) })"
80678,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/spm/service/ScorecardReadPlatformServiceImpl.java,105,,"        String sql = ""select "" + scvm.schema();"
80679,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/template/api/TemplatesApiResource.java,118,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(schema = @Schema(implementation = TemplatesApiResourcesSwagger.GetTemplatesResponse.class))) })"
80680,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/template/api/TemplatesApiResource.java,171,,"    @Path(""{templateId}"")"
80681,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/template/api/TemplatesApiResource.java,175,,"    public String retrieveOne(@PathParam(""templateId"") @Parameter(description = ""templateId"") final Long templateId,"
80682,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/template/api/TemplatesApiResourcesSwagger.java,43,,"        @Schema(example = ""Text"")"
80683,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/template/api/TemplatesApiResourcesSwagger.java,49,,"        @Schema(example = ""This is a loan for {{loan.clientName}}"")"
80684,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/useradministration/api/RolesApiResource.java,114,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(array = @ArraySchema(schema = @Schema(implementation = RolesApiResourceSwagger.GetRolesResponse.class)))) })"
80685,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/useradministration/api/RolesApiResource.java,145,,"    @Path(""{roleId}"")"
80686,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/useradministration/api/RolesApiResource.java,151,,"    public String retrieveRole(@PathParam(""roleId"") @Parameter(description = ""roleId"") final Long roleId, @Context final UriInfo uriInfo) {"
80687,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/useradministration/api/UsersApiResource.java,114,,"            @ApiResponse(responseCode = ""200"", description = ""OK"", content = @Content(array = @ArraySchema(schema = @Schema(implementation = UsersApiResourceSwagger.GetUsersResponse.class)))) })"
80688,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/useradministration/api/UsersApiResource.java,135,,"    public String retrieveOne(@PathParam(""userId"") @Parameter(description = ""userId"") final Long userId, @Context final UriInfo uriInfo) {"
80689,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/useradministration/data/PasswordValidationPolicyData.java,28,,"    @SuppressWarnings(""unused"")"
80690,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/useradministration/data/PermissionData.java,26,,"    @SuppressWarnings(""unused"")"
80691,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/useradministration/data/RolePermissionsData.java,28,,"    @SuppressWarnings(""unused"")"
80692,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/useradministration/domain/AppUser.java,62,,"@Table(name = ""m_appuser"", uniqueConstraints = @UniqueConstraint(columnNames = { ""username"" }, name = ""username_org""))"
80693,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/useradministration/domain/AppUser.java,79,,"    @Column(name = ""password"", nullable = false)"
80694,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/useradministration/domain/AppUser.java,468,,"        return hasNotPermissionForAnyOf(""ALL_FUNCTIONS"", ""APPROVEINPAST_LOAN"");"
80695,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/useradministration/domain/Role.java,40,,"@Table(name = ""m_role"", uniqueConstraints = { @UniqueConstraint(columnNames = { ""name"" }, name = ""unq_name"") })"
80696,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/useradministration/service/RoleDataValidator.java,45,,"    private final Set<String> supportedParameters = new HashSet<>(Arrays.asList(""id"", ""name"", ""description""));"
80697,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/useradministration/service/RoleDataValidator.java,45,,"    private final Set<String> supportedParameters = new HashSet<>(Arrays.asList(""id"", ""name"", ""description""));"
80698,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/useradministration/service/RoleReadPlatformServiceImpl.java,49,,"        final String sql = ""select "" + this.roleRowMapper.schema() + "" order by r.id"";"
80699,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/useradministration/service/UserDataValidator.java,48,,"    private final Set<String> supportedParameters = new HashSet<>(Arrays.asList(""username"", ""firstname"", ""lastname"", ""password"","
80700,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/useradministration/service/UserDataValidator.java,48,,"    private final Set<String> supportedParameters = new HashSet<>(Arrays.asList(""username"", ""firstname"", ""lastname"", ""password"","
80701,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/useradministration/service/UserDataValidator.java,48,,"    private final Set<String> supportedParameters = new HashSet<>(Arrays.asList(""username"", ""firstname"", ""lastname"", ""password"","
80702,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/useradministration/service/UserDataValidator.java,48,,"    private final Set<String> supportedParameters = new HashSet<>(Arrays.asList(""username"", ""firstname"", ""lastname"", ""password"","
80703,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/useradministration/service/UserDataValidator.java,49,,"            ""repeatPassword"", ""email"", ""officeId"", ""notSelectedRoles"", ""roles"", ""sendPasswordToEmail"", ""staffId"", ""passwordNeverExpires"","
80704,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/useradministration/service/UserDataValidator.java,49,,"            ""repeatPassword"", ""email"", ""officeId"", ""notSelectedRoles"", ""roles"", ""sendPasswordToEmail"", ""staffId"", ""passwordNeverExpires"","
80705,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/useradministration/service/UserDataValidator.java,49,,"            ""repeatPassword"", ""email"", ""officeId"", ""notSelectedRoles"", ""roles"", ""sendPasswordToEmail"", ""staffId"", ""passwordNeverExpires"","
80706,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/useradministration/service/UserDataValidator.java,49,,"            ""repeatPassword"", ""email"", ""officeId"", ""notSelectedRoles"", ""roles"", ""sendPasswordToEmail"", ""staffId"", ""passwordNeverExpires"","
80707,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/useradministration/service/UserDataValidator.java,49,,"            ""repeatPassword"", ""email"", ""officeId"", ""notSelectedRoles"", ""roles"", ""sendPasswordToEmail"", ""staffId"", ""passwordNeverExpires"","
80708,./TargetProjects/fineract/fineract-provider/src/main/java/org/apache/fineract/useradministration/service/UserDataValidator.java,116,,"            baseDataValidator.reset().parameter(""passwordNeverExpire"").value(passwordNeverExpire).validateForBooleanValue();"
80709,./TargetProjects/fineract/fineract-provider/src/test/java/org/apache/fineract/infrastructure/security/utils/SQLBuilderTest.java,46,,"        sqlBuilder.addCriteria(""hobby LIKE "", ""Mifos/Apache Fineract"");"
80710,./TargetProjects/fineract/fineract-provider/src/test/java/org/apache/fineract/portfolio/loanaccount/LoanScheduleTestDataHelper.java,48,,"                .withInstallmentNumber(1).withDueDate(firstDueDate).withPrincipal(""1000.00"").withInterest(""200.00"").build();"
80711,./TargetProjects/fineract/fineract-provider/src/test/java/org/apache/fineract/portfolio/loanaccount/LoanScheduleTestDataHelper.java,48,,"                .withInstallmentNumber(1).withDueDate(firstDueDate).withPrincipal(""1000.00"").withInterest(""200.00"").build();"
80712,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/AccountNumberPreferencesTest.java,152,,"            LOG.info(""Successfully deleted account number preference (ID: {} )"", delResponse.get(""resourceId""));"
80713,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/AccountNumberPreferencesTest.java,289,,"        this.groupAccountNo = Utils.performServerGet(requestSpec, responseSpec, GROUP_URL, ""accountNo"");"
80714,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/AccountNumberPreferencesTest.java,293,,"                    .getAccountNumberPreference(this.groupsAccountNumberPreferenceId, ""prefixType.value"");"
80715,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/AccountNumberPreferencesTest.java,297,,"                final String groupOfficeName = Utils.performServerGet(requestSpec, responseSpec, GROUP_URL, ""officeName"");"
80716,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/AccountTransferTest.java,147,,"        Integer toOfficeId = officeHelper.createOffice(""01 January 2011"");"
80717,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/AccountTransferTest.java,211,,"        assertEquals(fromSavingsBalance, fromSavingsSummaryAfter.get(""accountBalance""),"
80718,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/AccountTransferTest.java,212,,"                ""Verifying From Savings Account Balance after Account Transfer"");"
80719,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/AccountingScenarioIntegrationTest.java,154,,"        LOG.info(""Entries ......"");"
80720,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/AccountingScenarioIntegrationTest.java,166,,"        LOG.info(""Repayment 1 ......"");"
80721,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/AccountingScenarioIntegrationTest.java,354,,"        DateFormat dateFormat = new SimpleDateFormat(""dd MMMM yyyy"", Locale.US);"
80722,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/AuditIntegrationTest.java,81,,"        auditsRecieved = auditHelper.getAuditDetails(clientId, ""CREATE"", ""CLIENT"");"
80723,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/AuditIntegrationTest.java,81,,"        auditsRecieved = auditHelper.getAuditDetails(clientId, ""CREATE"", ""CLIENT"");"
80724,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/BatchApiTest.java,195,,"                .withPrincipal(""10000000.00"") //"
80725,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/BatchApiTest.java,203,,"                .currencyDetails(""0"", ""100"").build(null);"
80726,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/CenterIntegrationTest.java,60,,"        int officeId = new OfficeHelper(requestSpec, responseSpec).createOffice(""01 July 2007"");"
80727,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/CenterIntegrationTest.java,88,,"        String externalId = Utils.randomStringGenerator(""ID_"", 7, ""ABCDEFGHIJKLMNOPQRSTUVWXYZ"");"
80728,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/CenterIntegrationTest.java,155,,"        request.put(""staffId"", newStaffId);"
80729,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ChargesTest.java,65,,"        Assertions.assertEquals(chargeDataAfterChanges.get(""amount""), changes.get(""amount""), ""Verifying Charge after Modification"");"
80730,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ChargesTest.java,65,,"        Assertions.assertEquals(chargeDataAfterChanges.get(""amount""), changes.get(""amount""), ""Verifying Charge after Modification"");"
80731,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ChargesTest.java,72,,"        HashMap chargeChangedData = (HashMap) chargeDataAfterChanges.get(""chargePaymentMode"");"
80732,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ChargesTest.java,75,,"        chargeChangedData = (HashMap) chargeDataAfterChanges.get(""chargeCalculationType"");"
80733,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ChargesTest.java,95,,"        Assertions.assertEquals(disbursementChargeId, chargeIdAfterDeletion, ""Verifying Charge ID after deletion"");"
80734,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,110,,"        final Integer loanID = applyForLoanApplication(clientID, loanProductID, null, null, ""12,000.00"");"
80735,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,148,,"        validateCharge(amountPercentage, loanCharges, ""1.0"", ""120.0"", ""0.0"", ""0.0"");"
80736,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,148,,"        validateCharge(amountPercentage, loanCharges, ""1.0"", ""120.0"", ""0.0"", ""0.0"");"
80737,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,148,,"        validateCharge(amountPercentage, loanCharges, ""1.0"", ""120.0"", ""0.0"", ""0.0"");"
80738,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,150,,"        validateCharge(amountPlusInterestPercentage, loanCharges, ""1.0"", ""126.06"", ""0.0"", ""0.0"");"
80739,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,152,,"        validateNumberForEqual(""252.12"", String.valueOf(disbursementDetail.get(""feeChargesDue"")));"
80740,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,152,,"        validateNumberForEqual(""252.12"", String.valueOf(disbursementDetail.get(""feeChargesDue"")));"
80741,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,160,,"        validateCharge(flatDisbursement, loanCharges, ""100.0"", ""100.0"", ""0.0"", ""0.0"");"
80742,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,171,,"                LoanTransactionHelper.getUpdateChargesForLoanAsJSON(""150""));"
80743,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,176,,"        validateCharge(amountPercentage, loanCharges, ""2.0"", ""240.0"", ""0.0"", ""0.0"");"
80744,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,179,,"        validateCharge(flatDisbursement, loanCharges, ""150.0"", ""150.0"", ""0.0"", ""0.0"");"
80745,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,188,,"        validateCharge(amountPercentage, loanCharges, ""2.0"", ""200.0"", ""0.0"", ""0.0"");"
80746,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,190,,"        validateCharge(amountPlusInterestPercentage, loanCharges, ""2.0"", ""210.1"", ""0.0"", ""0.0"");"
80747,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,206,,"        addCharges(charges, flatDisbursement, ""100"", null);"
80748,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,259,,"        LOG.info(""-----------------------------------APPROVE LOAN-----------------------------------------"");"
80749,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,260,,"        loanStatusHashMap = this.loanTransactionHelper.approveLoan(""20 September 2011"", loanID);"
80750,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,266,,"        LOG.info(""DISBURSE {}"", loanStatusHashMap.toString());"
80751,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,296,,"        addCharges(charges, amountPercentage, ""1"", ""29 September 2011"");"
80752,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,425,,"        validateNumberForEqual(""100.0"", String.valueOf(firstInstallment.get(""feeChargesOutstanding"")));"
80753,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,426,,"        validateNumberForEqual(""100.0"", String.valueOf(firstInstallment.get(""feeChargesWaived"")));"
80754,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,478,,"            Float principalDue = (Float) installment.get(""principalDue"");"
80755,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,479,,"            Float interestDue = (Float) installment.get(""interestDue"");"
80756,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,518,,"        validateChargeExcludePrecission(flat, loanCharges, ""50.0"", ""200"", ""0.0"", ""0.0"");"
80757,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,518,,"        validateChargeExcludePrecission(flat, loanCharges, ""50.0"", ""200"", ""0.0"", ""0.0"");"
80758,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,552,,"        validateChargeExcludePrecission(flat, loanCharges, ""100.0"", ""400"", ""0.0"", ""0.0"");"
80759,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,731,,"        assertEquals(balance, summary.get(""accountBalance""), ""Verifying opening Balance"");"
80760,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,731,,"        assertEquals(balance, summary.get(""accountBalance""), ""Verifying opening Balance"");"
80761,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,760,,"        tranches.add(createTrancheDetail(""01 March 2014"", ""25000""));"
80762,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,760,,"        tranches.add(createTrancheDetail(""01 March 2014"", ""25000""));"
80763,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,761,,"        tranches.add(createTrancheDetail(""23 April 2014"", ""20000""));"
80764,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,889,,"        LOG.info(""------------------------------CREATING NEW LOAN PRODUCT ---------------------------------------"");"
80765,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,911,,"                .withPrincipal(""10000000.00"") //"
80766,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,942,,"        LOG.info(""--------------------------------APPLYING FOR LOAN APPLICATION--------------------------------"");"
80767,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1070,,"        LOG.info(""--------------------VERIFYING THE PRINCIPAL DUES,INTEREST DUE AND DUE DATE--------------------------"");"
80768,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1072,,"        assertEquals(new ArrayList<>(Arrays.asList(2011, 10, 20)), loanSchedule.get(1).get(""dueDate""),"
80769,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1074,,"        assertEquals(Float.parseFloat(""2911.49""), loanSchedule.get(1).get(""principalOriginalDue""),"
80770,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1074,,"        assertEquals(Float.parseFloat(""2911.49""), loanSchedule.get(1).get(""principalOriginalDue""),"
80771,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1076,,"        assertEquals(Float.parseFloat(""240.00""), loanSchedule.get(1).get(""interestOriginalDue""), ""Checking for Interest Due for 1st Month"");"
80772,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1076,,"        assertEquals(Float.parseFloat(""240.00""), loanSchedule.get(1).get(""interestOriginalDue""), ""Checking for Interest Due for 1st Month"");"
80773,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1080,,"        assertEquals(Float.parseFloat(""2969.72""), loanSchedule.get(2).get(""principalDue""), ""Checking for Principal Due for 2nd Month"");"
80774,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1081,,"        assertEquals(Float.parseFloat(""181.77""), loanSchedule.get(2).get(""interestOriginalDue""), ""Checking for Interest Due for 2nd Month"");"
80775,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1086,,"        assertEquals(Float.parseFloat(""122.38""), loanSchedule.get(3).get(""interestOriginalDue""), ""Checking for Interest Due for 3rd Month"");"
80776,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1090,,"        assertEquals(Float.parseFloat(""3089.68""), loanSchedule.get(4).get(""principalDue""), ""Checking for Principal Due for 4th Month"");"
80777,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1091,,"        assertEquals(Float.parseFloat(""61.79""), loanSchedule.get(4).get(""interestOriginalDue""), ""Checking for Interest Due for 4th Month"");"
80778,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1098,,"        assertEquals(Float.parseFloat(""416700""), loanSchedule.get(1).get(""principalOriginalDue""),"
80779,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1100,,"        assertEquals(Float.parseFloat(""200000""), loanSchedule.get(1).get(""interestOriginalDue""), ""Checking for Interest Due for 1st Month"");"
80780,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1176,,"        assertEquals(Float.parseFloat(""526300""), loanSchedule.get(6).get(""principalDue""), ""Checking for Principal Due for 6th Month"");"
80781,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1208,,"        charge.put(""chargeId"", chargeId.toString());"
80782,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1209,,"        charge.put(""amount"", amount);"
80783,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1295,,"        validateCharge(flatDisbursement, loanCharges, ""100"", ""100.00"", ""0.0"", ""0.0"");"
80784,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1297,,"        validateCharge(flatInstallmentFee, loanCharges, ""50"", ""200.00"", ""0.0"", ""0.0"");"
80785,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1305,,"        validateNumberForEqual(""150.00"", String.valueOf(firstInstallment.get(""feeChargesDue"")));"
80786,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1309,,"        validateNumberForEqual(""50.00"", String.valueOf(secondInstallment.get(""feeChargesDue"")));"
80787,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1316,,"        LOG.info(""-------------------------------DISBURSE LOAN-------------------------------------------"");"
80788,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1321,,"                new JournalEntry(Float.parseFloat(""12000.00""), JournalEntry.TransactionType.CREDIT),"
80789,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1328,,"        validateCharge(flatDisbursement, loanCharges, ""100"", ""0.00"", ""100.0"", ""0.0"");"
80790,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1330,,"        LOG.info(""-------------Make repayment 1-----------"");"
80791,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1331,,"        this.loanTransactionHelper.makeRepayment(""20 October 2011"", Float.parseFloat(""3301.49""), loanID);"
80792,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1331,,"        this.loanTransactionHelper.makeRepayment(""20 October 2011"", Float.parseFloat(""3301.49""), loanID);"
80793,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1345,,"                .getSpecifiedDueDateChargesForLoanAsJSON(String.valueOf(flatSpecifiedDueDate), ""29 October 2011"", ""100""));"
80794,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1357,,"        LOG.info(""----------Make repayment 2------------"");"
80795,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1358,,"        this.loanTransactionHelper.makeRepayment(""20 November 2011"", Float.parseFloat(""3251.49""), loanID);"
80796,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1358,,"        this.loanTransactionHelper.makeRepayment(""20 November 2011"", Float.parseFloat(""3251.49""), loanID);"
80797,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1368,,"        validateNumberForEqual(""0"", String.valueOf(secondInstallment.get(""totalOutstandingForPeriod"")));"
80798,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1370,,"        LOG.info(""--------------Waive interest---------------"");"
80799,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1371,,"        this.loanTransactionHelper.waiveInterest(""20 December 2011"", String.valueOf(61.79), loanID);"
80800,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1375,,"        validateNumberForEqual(""60.59"", String.valueOf(thirdInstallment.get(""interestOutstanding"")));"
80801,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1375,,"        validateNumberForEqual(""60.59"", String.valueOf(thirdInstallment.get(""interestOutstanding"")));"
80802,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1396,,"                new JournalEntry(Float.parseFloat(""240""), JournalEntry.TransactionType.CREDIT));"
80803,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1398,,"        LOG.info(""----------Make repayment 3 advance------------"");"
80804,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1407,,"                .getSpecifiedDueDateChargesForLoanAsJSON(String.valueOf(flatPenaltySpecifiedDueDate), ""10 January 2012"", ""100""));"
80805,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1411,,"        validateNumberForEqual(""100"", String.valueOf(fourthInstallment.get(""penaltyChargesOutstanding"")));"
80806,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1414,,"        LOG.info(""----------Pay applied penalty ------------"");"
80807,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1415,,"        this.loanTransactionHelper.makeRepayment(""20 January 2012"", Float.parseFloat(""100""), loanID);"
80808,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1424,,"        validateNumberForEqual(""3139.68"", String.valueOf(fourthInstallment.get(""totalOutstandingForPeriod"")));"
80809,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1426,,"        LOG.info(""----------Make repayment 4 ------------"");"
80810,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1475,,"        validateCharge(percentageDisbursementCharge, loanCharges, ""1"", ""120.00"", ""0.0"", ""0.0"");"
80811,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1485,,"        validateNumberForEqual(""149.11"", String.valueOf(firstInstallment.get(""feeChargesDue"")));"
80812,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1489,,"        validateNumberForEqual(""29.70"", String.valueOf(secondInstallment.get(""feeChargesDue"")));"
80813,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1511,,"        this.loanTransactionHelper.makeRepayment(""20 October 2011"", Float.parseFloat(""3300.60""), loanID);"
80814,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1516,,"        validateCharge(percentageInstallmentFee, loanCharges, ""1"", ""90.89"", ""29.11"", ""0.0"");"
80815,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1538,,"        this.loanTransactionHelper.makeRepayment(""20 November 2011"", Float.parseFloat(""3271.49""), loanID);"
80816,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1568,,"        validateNumberForEqual(""120"", String.valueOf(secondInstallment.get(""totalOutstandingForPeriod"")));"
80817,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1579,,"        this.loanTransactionHelper.makeRepayment(""20 November 2011"", Float.parseFloat(""3301.78""), loanID);"
80818,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1604,,"        validateNumberForEqual(""3120.58"", String.valueOf(fourthInstallment.get(""totalOutstandingForPeriod"")));"
80819,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1657,,"        validateCharge(amountPlusInterestPercentageInstallmentFee, loanCharges, ""1"", ""126.04"", ""0.0"", ""0.0"");"
80820,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1665,,"        validateNumberForEqual(""157.57"", String.valueOf(firstInstallment.get(""feeChargesDue"")));"
80821,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1669,,"        validateNumberForEqual(""31.51"", String.valueOf(secondInstallment.get(""feeChargesDue"")));"
80822,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1691,,"        this.loanTransactionHelper.makeRepayment(""20 October 2011"", Float.parseFloat(""3309.06""), loanID);"
80823,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1719,,"        this.loanTransactionHelper.makeRepayment(""20 November 2011"", Float.parseFloat(""3277.55""), loanID);"
80824,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1760,,"        this.loanTransactionHelper.makeRepayment(""20 November 2011"", Float.parseFloat(""3303""), loanID);"
80825,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1785,,"        validateNumberForEqual(""3121.19"", String.valueOf(fourthInstallment.get(""totalOutstandingForPeriod"")));"
80826,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1857,,"        final JournalEntry[] assetAccountInitialEntry = { new JournalEntry(Float.parseFloat(""605.94""), JournalEntry.TransactionType.DEBIT),"
80827,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1900,,"        LOG.info(""----------- Waive installment charge for 2nd installment ---------"");"
80828,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,1985,,"        loanStatusHashMap = (HashMap) this.loanTransactionHelper.getLoanDetail(this.requestSpec, this.responseSpec, loanID, ""status"");"
80829,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,3017,,"        validateNumberForEqual(""3200"", String.valueOf(firstInstallment.get(""totalOutstandingForPeriod"")));"
80830,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,3037,,"        validateNumberForEqual(""3000"", String.valueOf(secondInstallment.get(""principalOutstanding"")));"
80831,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,3111,,"            final Float penaltyPortion = BigDecimal.valueOf(Double.parseDouble(repayment.get(""penaltyChargesDue"").toString()))"
80832,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,3124,,"        DateFormat dateFormat = new SimpleDateFormat(""dd MMMM yyyy"");"
80833,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,3149,,"        addRepaymentValues(expectedvalues, todaysDate, -1, false, ""2482.76"", ""46.15"", ""0.0"", ""0.0"");"
80834,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,3149,,"        addRepaymentValues(expectedvalues, todaysDate, -1, false, ""2482.76"", ""46.15"", ""0.0"", ""0.0"");"
80835,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,3150,,"        addRepaymentValues(expectedvalues, todaysDate, 1, false, ""2494.22"", ""34.69"", ""0.0"", ""0.0"");"
80836,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,3150,,"        addRepaymentValues(expectedvalues, todaysDate, 1, false, ""2494.22"", ""34.69"", ""0.0"", ""0.0"");"
80837,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,3151,,"        addRepaymentValues(expectedvalues, todaysDate, 1, false, ""2505.73"", ""23.18"", ""0.0"", ""0.0"");"
80838,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,3151,,"        addRepaymentValues(expectedvalues, todaysDate, 1, false, ""2505.73"", ""23.18"", ""0.0"", ""0.0"");"
80839,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,3152,,"        addRepaymentValues(expectedvalues, todaysDate, 1, false, ""2517.29"", ""11.62"", ""0.0"", ""0.0"");"
80840,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,3152,,"        addRepaymentValues(expectedvalues, todaysDate, 1, false, ""2517.29"", ""11.62"", ""0.0"", ""0.0"");"
80841,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,3169,,"        addRepaymentValues(expectedvalues, todaysDate, 1, false, ""2505.67"", ""23.24"", ""0.0"", ""0.0"");"
80842,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,3169,,"        addRepaymentValues(expectedvalues, todaysDate, 1, false, ""2505.67"", ""23.24"", ""0.0"", ""0.0"");"
80843,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,3170,,"        addRepaymentValues(expectedvalues, todaysDate, 1, false, ""2528.81"", ""11.67"", ""0.0"", ""0.0"");"
80844,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,3177,,"        Float totalDueForCurrentPeriod = (Float) loanSchedule.get(1).get(""totalDueForPeriod"");"
80845,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,3189,,"        Float earlyPayment = Float.parseFloat(""4000"");"
80846,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,3205,,"        validateNumberForEqualWithMsg(""verify pre-close amount"", ""3551.93"", prepayAmount);"
80847,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,3340,,"        addRepaymentValues(expectedvalues, todaysDate, -1, false, ""2482.76"", ""46.15"", ""4.62"", ""0.0"");"
80848,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,3454,,"        addRepaymentValues(expectedvalues, todaysDate, 1, false, ""2482.54"", ""46.37"", ""0.0"", ""0.0"");"
80849,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,3454,,"        addRepaymentValues(expectedvalues, todaysDate, 1, false, ""2482.54"", ""46.37"", ""0.0"", ""0.0"");"
80850,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,3456,,"        addRepaymentValues(expectedvalues, todaysDate, 1, false, ""2529.03"", ""11.67"", ""0.0"", ""0.0"");"
80851,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,3823,,"        addRepaymentValues(expectedvalues, todaysDate, -2, false, ""2482.76"", ""46.15"", ""0.0"", ""252.89"");"
80852,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,4027,,"        List dates = (List) loanSummary.get(""overdueSinceDate"");"
80853,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,4440,,"        validateNumberForEqual(""2290"", String.valueOf(firstInstallment.get(""totalOutstandingForPeriod"")));"
80854,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,4462,,"                new JournalEntry(Float.parseFloat(""2000""), JournalEntry.TransactionType.CREDIT));"
80855,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,4478,,"        this.loanTransactionHelper.makeRepayment(oneMonthfromNow, Float.parseFloat(""4580""), loanID);"
80856,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java,4512,,"        validateNumberForEqual(""20.00"", String.valueOf(fourthInstallment.get(""totalOutstandingForPeriod"")));"
80857,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientSavingsIntegrationTest.java,72,,"    public static final String DATE_FORMAT = ""dd MMMM yyyy"";"
80858,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientSavingsIntegrationTest.java,94,,"        final String enforceMinRequiredBalance = ""false"";"
80859,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientSavingsIntegrationTest.java,105,,"        Assertions.assertTrue(modifications.containsKey(""submittedOnDate""));"
80860,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientSavingsIntegrationTest.java,135,,"        final String minBalanceForInterestCalculation = ""5000"";"
80861,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientSavingsIntegrationTest.java,173,,"    @SuppressWarnings(""unchecked"")"
80862,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientSavingsIntegrationTest.java,184,,"        final String enforceMinRequiredBalance = ""true"";"
80863,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientSavingsIntegrationTest.java,256,,"        assertEquals(balance, summary.get(""accountBalance""), ""Verifying opening Balance"");"
80864,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientSavingsIntegrationTest.java,271,,"        assertEquals(Float.parseFloat(DEPOSIT_AMOUNT), depositTransaction.get(""amount""), ""Verifying Deposit Amount"");"
80865,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientSavingsIntegrationTest.java,271,,"        assertEquals(Float.parseFloat(DEPOSIT_AMOUNT), depositTransaction.get(""amount""), ""Verifying Deposit Amount"");"
80866,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientSavingsIntegrationTest.java,272,,"        assertEquals(balance, depositTransaction.get(""runningBalance""), ""Verifying Balance after Deposit"");"
80867,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientSavingsIntegrationTest.java,272,,"        assertEquals(balance, depositTransaction.get(""runningBalance""), ""Verifying Balance after Deposit"");"
80868,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientSavingsIntegrationTest.java,278,,"        assertEquals(Float.parseFloat(withdrawAmt), withdrawTransaction.get(""amount""), ""Verifying Withdrawal Amount"");"
80869,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientSavingsIntegrationTest.java,279,,"        assertEquals(balance, withdrawTransaction.get(""runningBalance""), ""Verifying Balance after Withdrawal"");"
80870,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientSavingsIntegrationTest.java,425,,"        List<HashMap> error = (List) savingsAccountHelperValidationError.withdrawalFromSavingsAccount(savingsId, ""100"","
80871,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientSavingsIntegrationTest.java,679,,"        final String zeroOpeningBalance = ""0.0"";"
80872,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientSavingsIntegrationTest.java,763,,"        summary = (HashMap) accountDetails.get(""summary"");"
80873,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientSavingsIntegrationTest.java,764,,"        Float actualInterestPosted = Float.parseFloat(summary.get(""totalInterestPosted"").toString());"
80874,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientSavingsIntegrationTest.java,770,,"        final Float nominalAnnualInterest = Float.parseFloat(accountDetails.get(""nominalAnnualInterestRate"").toString());"
80875,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientSavingsIntegrationTest.java,771,,"        final HashMap interestCalculationDaysInYearType = (HashMap) accountDetails.get(""interestCalculationDaysInYearType"");"
80876,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientSavingsIntegrationTest.java,782,,"        decimalFormat.applyPattern(""#.###"");"
80877,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientSavingsIntegrationTest.java,785,,"        assertEquals(interestPosted, actualInterestPosted, ""Verifying interest posted"");"
80878,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientSavingsIntegrationTest.java,931,,"        LOG.info(""-----Post Interest As on Successfully Worked----------"");"
80879,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientSavingsIntegrationTest.java,1811,,"        assertEquals(balance, summary.get(""accountBalance""), ""Verifying account Balance"");"
80880,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientSavingsIntegrationTest.java,2027,,"        error = (List) savingsAccountHelperValidationError.withdrawalFromSavingsAccount(savingsId, ""300"","
80881,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientStatusChecker.java,42,,"        LOG.info(""Client Status: {} \n"", clientStatusHashMap);"
80882,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ClientUndoRejectAndWithdrawalIntegrationTest.java,46,,"    public static final String DATE_FORMAT = ""dd MMMM yyyy"";"
80883,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ConcurrencyIntegrationTest.java,71,,"        this.loanTransactionHelper.approveLoan(""20 September 2011"", loanID);"
80884,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/ExternalServicesConfigurationTest.java,67,,"                value = (String) externalServicesConfig.get(configIndex).get(""value"");"
80885,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/FixedDepositTest.java,146,,"        DateFormat dateFormat = new SimpleDateFormat(""dd MMMM yyyy"", Locale.US);"
80886,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/FixedDepositTest.java,147,,"        DateFormat monthDayFormat = new SimpleDateFormat(""dd MMM"", Locale.US);"
80887,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/FixedDepositTest.java,206,,"        Float depositAmount = (Float) accountSummary.get(""totalDeposits"");"
80888,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/FixedDepositTest.java,229,,"        Float totalInterestPosted = (Float) accountSummary.get(""totalInterestPosted"");"
80889,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/FixedDepositTest.java,254,,"        Float maturityAmount = Float.valueOf(accountDetails.get(""maturityAmount"").toString());"
80890,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/FixedDepositTest.java,363,,"        Assertions.assertNull(accountSummary.get(""totalWithholdTax""));"
80891,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/FixedDepositTest.java,533,,"        final String chartToUse = ""period"";"
80892,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/FixedDepositTest.java,534,,"        final String depositAmount = ""10000"";"
80893,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/FixedDepositTest.java,560,,"        final String chartToUse = ""amount"";"
80894,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/FixedDepositTest.java,587,,"        final String chartToUse = ""period_amount"";"
80895,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/FixedDepositTest.java,614,,"        final String chartToUse = ""amount_period"";"
80896,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/FixedDepositTest.java,1214,,"        Float principal = (Float) fixedDepositAccountData.get(""depositAmount"");"
80897,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/FixedDepositTest.java,1216,,"        Integer depositPeriod = (Integer) fixedDepositAccountData.get(""depositPeriod"");"
80898,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/FixedDepositTest.java,1217,,"        HashMap daysInYearMap = (HashMap) fixedDepositAccountData.get(""interestCalculationDaysInYearType"");"
80899,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/FixedDepositTest.java,1224,,"        LOG.info(""per day = {}"", perDay);"
80900,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/FixedDepositTest.java,1233,,"        Assertions.assertTrue(Math.abs(principal - maturityAmount) < THRESHOLD, ""Verifying Maturity amount for Fixed Deposit Account"");"
80901,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/FixedDepositTest.java,1360,,"        Float preClosurePenalInterestRate = (Float) fixedDepositAccountData.get(""preClosurePenalInterest"");"
80902,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/FixedDepositTest.java,1383,,"        LOG.info(""IPM = {}"", interestPerMonth);"
80903,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/FixedDepositTest.java,1385,,"        LOG.info(""principal = {}"", principal);"
80904,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/FixedDepositTest.java,1402,,"        Assertions.assertTrue(Math.abs(principal - maturityAmount) < THRESHOLD, ""Verifying Pre-Closure maturity amount"");"
80905,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/FundsIntegrationTest.java,60,,"        FundsHelper fh = FundsHelper.create(Utils.randomNameGenerator("""", 10)).externalId(Utils.randomNameGenerator(""fund-"", 5)).build();"
80906,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/GroupLoanIntegrationTest.java,95,,"        final Integer loanId = glim.get(""loanId"");"
80907,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/GroupLoanIntegrationTest.java,219,,"                .withExpectedDisbursementDate(""20 September 2011"") //"
80908,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/GroupLoanIntegrationTest.java,249,,"        assertEquals(new ArrayList<>(Arrays.asList(2011, 10, 20)), loanSchedule.get(1).get(""dueDate""),"
80909,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/GroupLoanIntegrationTest.java,252,,"        assertEquals(Float.valueOf(""240.00""), loanSchedule.get(1).get(""interestOriginalDue""), ""Checking for Interest Due for 1st Month"");"
80910,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/GroupSavingsIntegrationTest.java,64,,"    public static final String MINIMUM_OPENING_BALANCE = ""1000.0"";"
80911,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/GroupSavingsIntegrationTest.java,95,,"        final String enforceMinRequiredBalance = ""false"";"
80912,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/GroupSavingsIntegrationTest.java,128,,"    @SuppressWarnings(""unchecked"")"
80913,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/GroupSavingsIntegrationTest.java,146,,"        final String enforceMinRequiredBalance = ""true"";"
80914,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/GroupSavingsIntegrationTest.java,253,,"        clientArray.add(clientArray(clientID, groupID, savingsProductID, ""08 January 2013""));"
80915,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/GroupSavingsIntegrationTest.java,588,,"        assertEquals(Float.valueOf(DEPOSIT_AMOUNT), depositTransaction.get(""amount""), ""Verifying Deposit Amount"");"
80916,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/GroupSavingsIntegrationTest.java,616,,"        error = (List) savingsAccountHelperValidationError.withdrawalFromSavingsAccount(savingsId, ""5000"","
80917,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/GroupTest.java,122,,"        assertEquals(assignStaffGroupId.get(""staffId""), createStaffId1, ""Verify assigned staff id is the same as id sent"");"
80918,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/GroupTest.java,133,,"        this.loanTransactionHelper.approveLoan(""20 September 2014"", loanId);"
80919,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/LoanApplicationApprovalTest.java,71,,"        final String approvalAmount = ""5000"";"
80920,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/LoanApplicationApprovalTest.java,129,,"        createTranches.add(createTrancheDetail(""01 March 2014"", ""1000""));"
80921,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/LoanApplicationApprovalTest.java,129,,"        createTranches.add(createTrancheDetail(""01 March 2014"", ""1000""));"
80922,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/LoanApplicationApprovalTest.java,130,,"        createTranches.add(createTrancheDetail(""23 March 2014"", ""4000""));"
80923,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/LoanApplicationApprovalTest.java,191,,"        approveTranche3.add(createTrancheDetail(""01 March 2014"", ""100""));"
80924,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/LoanApplicationUndoLastTrancheTest.java,65,,"        final String approveDate = ""01 March 2014"";"
80925,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/LoanDisbursementDetailsIntegrationTest.java,54,,"    final String approveDate = ""01 March 2014"";"
80926,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/LoanDisbursementDetailsIntegrationTest.java,56,,"    final String proposedAmount = ""5000"";"
80927,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/LoanDisbursementDetailsIntegrationTest.java,75,,"        createTranches.add(this.loanTransactionHelper.createTrancheDetail(id, ""01 June 2015"", ""5000""));"
80928,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/LoanDisbursementDetailsIntegrationTest.java,363,,"                this.responseSpec, this.loanID, ""disbursementDetails"");"
80929,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/LoanRepaymentRescheduleAtDisbursementTest.java,72,,"        final String approveDate = ""01 March 2015"";"
80930,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/LoanRepaymentRescheduleAtDisbursementTest.java,90,,"        createTranches.add(this.loanApplicationApprovalTest.createTrancheDetail(""01 March 2015"", ""5000""));"
80931,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/LoanRescheduleOnDecliningBalanceLoanTest.java,236,,"        LOG.info(""Successfully created loan reschedule request (ID: {} )"", this.loanRescheduleRequestId);"
80932,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/LoanRescheduleOnDecliningBalanceLoanTest.java,240,,"        final HashMap response = (HashMap) this.loanRescheduleRequestHelper.getLoanRescheduleRequest(loanRescheduleRequestId, ""statusEnum"");"
80933,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/LoanRescheduleOnDecliningBalanceLoanTest.java,241,,"        assertTrue((Boolean) response.get(""approved""));"
80934,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/LoanRescheduleOnDecliningBalanceLoanTest.java,243,,"        LOG.info(""Successfully approved loan reschedule request (ID: {})"", this.loanRescheduleRequestId);"
80935,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/LoanRescheduleOnDecliningBalanceLoanTest.java,246,,"                ""repaymentSchedule"");"
80936,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/LoanRescheduleOnDecliningBalanceLoanTest.java,247,,"        final ArrayList periods = (ArrayList) repaymentSchedule.get(""periods"");"
80937,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/LoanRescheduleOnDecliningBalanceLoanTest.java,250,,"        Float totalDueForPeriod = (Float) period.get(""totalDueForPeriod"");"
80938,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/LoanRescheduleOnDecliningBalanceLoanTest.java,253,,"        final Float totalExpectedRepayment = (Float) loanSummary.get(""totalExpectedRepayment"");"
80939,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/LoanReschedulingWithinCenterTest.java,79,,"    @SuppressWarnings(""rawtypes"")"
80940,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/LoanReschedulingWithinCenterTest.java,83,,"        Integer officeId = new OfficeHelper(requestSpec, responseSpec).createOffice(""01 July 2007"");"
80941,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/LoanReschedulingWithinCenterTest.java,103,,"        DateFormat dateFormat = new SimpleDateFormat(""dd MMMM yyyy"");"
80942,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/LoanReschedulingWithinCenterTest.java,239,,"        createTranches.add(this.loanApplicationApprovalTest.createTrancheDetail(disbursementDate, ""5000""));"
80943,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/LoanWithWaiveInterestAndWriteOffIntegrationTest.java,109,,"        this.loanTransactionHelper.makeRepayment(""01 January 2011"", 540.0f, loanID);"
80944,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/NotesTest.java,63,,"        String request = ""{\""note\"": \"""" + noteText + ""\""}"";"
80945,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/NotesTest.java,63,,"        String request = ""{\""note\"": \"""" + noteText + ""\""}"";"
80946,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/NotesTest.java,174,,"        final Integer clientID = ClientHelper.createClient(this.requestSpec, this.responseSpec, ""01 January 2012"");"
80947,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/NotesTest.java,192,,"                .withSubmittedOnDate(""02 April 2012"").build(clientID.toString(), loanProductID.toString(), null);"
80948,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/RecurringDepositTest.java,145,,"        DateFormat dateFormat = new SimpleDateFormat(""dd MMMM yyyy"", Locale.US);"
80949,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/RecurringDepositTest.java,146,,"        DateFormat monthDayFormat = new SimpleDateFormat(""dd MMM"", Locale.US);"
80950,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/RecurringDepositTest.java,211,,"        Float depositAmount = (Float) recurringDepositAccountData.get(""mandatoryRecommendedDepositAmount"");"
80951,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/RecurringDepositTest.java,239,,"        Float totalInterestPosted = (Float) accountSummary.get(""totalInterestPosted"");"
80952,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/RecurringDepositTest.java,268,,"        Float maturityAmount = Float.valueOf(recurringDepositAccountData.get(""maturityAmount"").toString());"
80953,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/RecurringDepositTest.java,428,,"        Float balanceBefore = (Float) savingsSummaryBefore.get(""accountBalance"");"
80954,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/RecurringDepositTest.java,621,,"        Assertions.assertNull(accountSummary.get(""totalWithholdTax""));"
80955,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/RecurringDepositTest.java,1399,,"        Integer depositPeriod = (Integer) recurringDepositAccountData.get(""depositPeriod"");"
80956,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/RecurringDepositTest.java,1400,,"        HashMap daysInYearMap = (HashMap) recurringDepositAccountData.get(""interestCalculationDaysInYearType"");"
80957,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/RecurringDepositTest.java,1411,,"        LOG.info(""per day = {}"", perDay);"
80958,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/RecurringDepositTest.java,1420,,"        Assertions.assertTrue(Math.abs(principal - maturityAmount) < THRESHOLD, ""Verifying Maturity amount for Recurring Deposit Account"");"
80959,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/RecurringDepositTest.java,1565,,"        Float principal = (Float) recurringDepositSummary.get(""totalDeposits"");"
80960,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/RecurringDepositTest.java,1661,,"        Float preClosurePenalInterestRate = (Float) recurringDepositAccountData.get(""preClosurePenalInterest"");"
80961,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/RecurringDepositTest.java,1697,,"        LOG.info(""IPM = {}"", interestPerMonth);"
80962,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/RecurringDepositTest.java,1699,,"        LOG.info(""principal = {}"", principal);"
80963,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/RecurringDepositTest.java,1717,,"        Assertions.assertTrue(Math.abs(principal - maturityAmount) < THRESHOLD, ""Verifying Pre-Closure maturity amount"");"
80964,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/RecurringDepositTest.java,2450,,"        LOG.info(""per day = {} "", perDay);"
80965,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/RecurringDepositTest.java,2828,,"        final String chartToUse = ""period"";"
80966,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/RecurringDepositTest.java,2829,,"        final String depositAmount = ""1000"";"
80967,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/RecurringDepositTest.java,2855,,"        final String chartToUse = ""amount"";"
80968,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/RecurringDepositTest.java,2882,,"        final String chartToUse = ""period_amount"";"
80969,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/RecurringDepositTest.java,2909,,"        final String chartToUse = ""amount_period"";"
80970,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/RolesTest.java,54,,"    @SuppressWarnings(""cast"")"
80971,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/RolesTest.java,62,,"        LOG.info(""--------------------------------- Getting ROLE -------------------------------"");"
80972,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/SchedulerJobsTest.java,56,,"            Boolean active = (Boolean) schedulerJob.get(""active"");"
80973,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/SchedulerJobsTestResults.java,189,,"        Assertions.assertNotSame(summaryBefore.get(""accountBalance""), summaryAfter.get(""accountBalance""),"
80974,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/SchedulerJobsTestResults.java,250,,"        Float chargeAmount = (Float) chargeData.get(""amount"");"
80975,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/SchedulerJobsTestResults.java,451,,"        DateFormat dateFormat = new SimpleDateFormat(""dd MMMM yyyy"", Locale.US);"
80976,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/SkipRepaymentOnMonthFirstTest.java,153,,"        assertEquals(new ArrayList<>(Arrays.asList(2011, 10, 15)), loanSchedule.get(1).get(""dueDate""),"
80977,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/StaffTest.java,59,,"        Assertions.assertEquals(1, response.get(""officeId""));"
80978,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/StaffTest.java,65,,"        final String noOfficeJson = StaffHelper.createStaffWithJSONFields(""firstname"", ""lastname"");"
80979,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/StaffTest.java,65,,"        final String noOfficeJson = StaffHelper.createStaffWithJSONFields(""firstname"", ""lastname"");"
80980,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/StaffTest.java,76,,"        map.put(""firstname"", Utils.randomNameGenerator(""michael_"", 5));"
80981,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/StaffTest.java,77,,"        map.put(""lastname"", Utils.randomNameGenerator(""Doe_"", 4));"
80982,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/StaffTest.java,90,,"        map.put(""mobileNo"", Utils.randomNameGenerator(""num_"", 47));"
80983,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/StaffTest.java,114,,"        map.put(""externalId"", Utils.randomStringGenerator(""EXT"", 98));"
80984,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/StaffTest.java,157,,"            StaffHelper.getStaffListWithState(requestSpec, responseSpecForValidationError, ""xyz"");"
80985,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/SystemCodeTest.java,76,,"        assertEquals(createResponseId, newCodeAttributes.get(CodeHelper.CODE_ID_ATTRIBUTE_NAME), ""Verify value of codeId"");"
80986,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/SystemCodeTest.java,78,,"        assertEquals(codeName, newCodeAttributes.get(CodeHelper.CODE_NAME_ATTRIBUTE_NAME), ""Verify code name"");"
80987,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/SystemCodeTest.java,79,,"        assertEquals(false, newCodeAttributes.get(CodeHelper.CODE_SYSTEM_DEFINED_ATTRIBUTE_NAME), ""Verify system defined is false"");"
80988,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/SystemCodeTest.java,163,,"                systemDefinedCode.get(CodeHelper.CODE_NAME_ATTRIBUTE_NAME) + ""CHANGE"", CommonConstants.RESPONSE_ERROR);"
80989,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/UserAdministrationTest.java,79,,"        final Integer userId = (Integer) UserHelper.createUser(this.requestSpec, this.responseSpec, roleId, staffId, ""alphabet"","
80990,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/UserAdministrationTest.java,80,,"                ""resourceId"");"
80991,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/UserAdministrationTest.java,84,,"        final List errors = (List) UserHelper.createUser(this.requestSpec, expectStatusCode(403), roleId, staffId, ""alphabet"", ""errors"");"
80992,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/UserAdministrationTest.java,86,,"        LOG.info(""Reason: {}"", reason.get(""defaultUserMessage""));"
80993,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/client/DocumentTest.java,47,,"        assertThat(ok(fineract().documents.retrieveAllDocuments(""clients"", clientId))).isNotNull();"
80994,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/client/ImageTest.java,49,,"        ok(fineract().images.create(""staff"", staffId, Parts.fromFile(testImage)));"
80995,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/common/AuditHelper.java,76,,"        String actual = auditToCheck.get(""actionName"").toString() + "" is done on "" + auditToCheck.get(""entityName"").toString() + "" with id """
80996,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/common/AuditHelper.java,76,,"        String actual = auditToCheck.get(""actionName"").toString() + "" is done on "" + auditToCheck.get(""entityName"").toString() + "" with id """
80997,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/common/BatchHelper.java,148,,"        br.setMethod(""POST"");"
80998,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/common/CalendarHelper.java,54,,"                getTestCalendarAsJSON(frequency, interval, repeatsOnDay, startDate), ""resourceId"");"
80999,./TargetProjects/fineract/integration-tests/src/test/java/org/apache/fineract/integrationtests/common/CenterHelper.java,120,,"                ""changes"");"
