236000,./TargetProjects/storm/storm-client/src/jvm/org/apache/storm/validation/ConfigValidation.java,737,,"            if (!((Map<?, ?>) o).containsKey(""class"")) {"
236001,./TargetProjects/storm/storm-client/src/jvm/org/apache/storm/validation/ConfigValidation.java,738,,"                throw new IllegalArgumentException(""Field "" + name + "" must have map entry with key: class"");"
236002,./TargetProjects/storm/storm-client/src/jvm/org/apache/storm/validation/ConfigValidationUtils.java,36,,"                        throw new IllegalArgumentException(""Field "" + name + "" must not be null"");"
236003,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/PaceMakerStateStorageFactoryTest.java,68,,"        stateStorage.set_worker_hb(""/foo"", ""data"".getBytes(""UTF-8""), null);"
236004,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/TestConfigValidate.java,126,,"        topologyMap.put(""key1"", new HashMap<String, String>());"
236005,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/TestConfigValidate.java,127,,"        topologyMap.put(""key2"", new HashMap<String, String>());"
236006,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/TestConfigValidate.java,248,,"                Assert.fail(""Expected Exception not Thrown for value: "" + value);"
236007,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/TestConfigValidate.java,275,,"        conf.put(""aaa"", new Integer(""123""));"
236008,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/TestConfigValidate.java,276,,"        conf.put(""bbb"", new Long(""456""));"
236009,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/TestConfigValidate.java,311,,"                validator.validateField(""test"", value);"
236010,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/TestConfigValidate.java,405,,"        Object[] passCase2 = { ""one"", ""two"", ""three"" };"
236011,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/TestConfigValidate.java,405,,"        Object[] passCase2 = { ""one"", ""two"", ""three"" };"
236012,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/TestConfigValidate.java,405,,"        Object[] passCase2 = { ""one"", ""two"", ""three"" };"
236013,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/TestConfigValidate.java,505,,"        passCase1.put(""ccc"", 7);"
236014,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/TestConfigValidate.java,591,,"        passCaseListOfList.add(Arrays.asList(""comp1"", ""comp2""));"
236015,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/TestConfigValidate.java,591,,"        passCaseListOfList.add(Arrays.asList(""comp1"", ""comp2""));"
236016,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/TestConfigValidate.java,592,,"        passCaseListOfList.add(Arrays.asList(""comp1"", ""comp3""));"
236017,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/TestConfigValidate.java,593,,"        passCaseListOfList.add(Arrays.asList(""comp2"", ""comp4""));"
236018,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/TestConfigValidate.java,594,,"        passCaseListOfList.add(Arrays.asList(""comp2"", ""comp5""));"
236019,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/TestConfigValidate.java,820,,"        passCase1.put(""jerry"", passCase1_hostsAndGroups);"
236020,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/TestConfigValidate.java,863,,"        passCase1.put(""bobby"", new HashMap<String, Integer>());"
236021,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/TestConfigValidate.java,864,,"        passCase1.put(""derek"", new HashMap<String, Integer>());"
236022,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/TestConfigValidate.java,866,,"        passCase1.get(""jerry"").put(""cpu"", 10000);"
236023,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/TestConfigValidate.java,867,,"        passCase1.get(""jerry"").put(""memory"", 20148);"
236024,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/bolt/TestJoinBolt.java,31,,"    String[] userFields = { ""userId"", ""name"", ""city"" };"
236025,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/bolt/TestJoinBolt.java,31,,"    String[] userFields = { ""userId"", ""name"", ""city"" };"
236026,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/bolt/TestJoinBolt.java,39,,"        { 7, ""arun"", ""bengaluru"" },"
236027,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/bolt/TestJoinBolt.java,68,,"    String[] cityFields = { ""cityId"", ""cityName"", ""country"" };"
236028,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/bolt/TestJoinBolt.java,144,,"        ArrayList<Tuple> orderStream = makeStream(""orders"", orderFields, orders, ""ordersSpout"");"
236029,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/bolt/TestJoinBolt.java,158,,"        ArrayList<Tuple> userStream = makeNestedEventsStream(""users"", userFields, users, ""usersSpout"");"
236030,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/bolt/TestJoinBolt.java,158,,"        ArrayList<Tuple> userStream = makeNestedEventsStream(""users"", userFields, users, ""usersSpout"");"
236031,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/bolt/TestJoinBolt.java,172,,"        ArrayList<Tuple> storeStream = makeStream(""stores"", storeFields, stores, ""storesSpout"");"
236032,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/bolt/TestJoinBolt.java,172,,"        ArrayList<Tuple> storeStream = makeStream(""stores"", storeFields, stores, ""storesSpout"");"
236033,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/bolt/TestJoinBolt.java,233,,"        ArrayList<Tuple> cityStream = makeStream(""cities"", cityFields, cities, ""citiesSpout"");"
236034,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/bolt/TestJoinBolt.java,233,,"        ArrayList<Tuple> cityStream = makeStream(""cities"", cityFields, cities, ""citiesSpout"");"
236035,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/bolt/TestJoinBolt.java,240,,"            .select(""name,storeName,city,country"");"
236036,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/daemon/worker/LogConfigManagerTest.java,87,,"            config.put(""foo"", ll(""INFO"", ""WARN"", past));"
236037,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/daemon/worker/LogConfigManagerTest.java,87,,"            config.put(""foo"", ll(""INFO"", ""WARN"", past));"
236038,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/daemon/worker/LogConfigManagerTest.java,112,,"            config.put(LogManager.ROOT_LOGGER_NAME, ll(""DEBUG"", ""WARN"", past));"
236039,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/daemon/worker/LogConfigManagerTest.java,168,,"            config.put(""my_debug_logger"", ll(""DEBUG"", ""INFO"", past));"
236040,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/daemon/worker/LogConfigManagerTest.java,169,,"            config.put(""my_info_logger"", ll(""INFO"", ""WARN"", past));"
236041,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/daemon/worker/LogConfigManagerTest.java,170,,"            config.put(""my_error_logger"", ll(""ERROR"", ""INFO"", past));"
236042,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/dependency/DependencyUploaderTest.java,94,,"        fail(""Should throw FileNotAvailableException"");"
236043,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/dependency/DependencyUploaderTest.java,121,,"        when(mockFile2.getPath()).thenThrow(new RuntimeException(""just for test!""));"
236044,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/dependency/DependencyUploaderTest.java,204,,"        artifacts.put(""group:artifact:1.0.0"", mockFile);"
236045,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/grouping/LoadAwareShuffleGroupingTest.java,66,,"        NodeInfo nodeInfo = new NodeInfo(""node-id"", Sets.newHashSet(6700L));"
236046,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/security/auth/authorizer/DRPCSimpleACLAuthorizerTest.java,72,,"                           isPermitted(strictHandler, ReqContext.context(), ""execute"", partialFunction));"
236047,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/security/auth/authorizer/SimpleACLAuthorizerTest.java,37,,"        Collection<String> adminUserSet = new HashSet<>(Arrays.asList(""admin""));"
236048,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/security/auth/authorizer/SimpleACLAuthorizerTest.java,38,,"        Collection<String> supervisorUserSet = new HashSet<>(Arrays.asList(""supervisor""));"
236049,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/security/auth/authorizer/SimpleACLAuthorizerTest.java,46,,"        Subject userA = createSubject(""user-a"");"
236050,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/security/auth/authorizer/SimpleACLAuthorizerTest.java,47,,"        Subject userB = createSubject(""user-b"");"
236051,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/security/auth/authorizer/SimpleACLAuthorizerTest.java,51,,"        Assert.assertTrue(authorizer.permit(new ReqContext(adminUser), ""submitTopology"", new HashMap<>()));"
236052,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/security/auth/authorizer/SimpleACLAuthorizerTest.java,56,,"        Assert.assertTrue(authorizer.permit(new ReqContext(adminUser), ""fileUpload"", new HashMap<>()));"
236053,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/security/auth/authorizer/SimpleACLAuthorizerTest.java,61,,"        Assert.assertTrue(authorizer.permit(new ReqContext(adminUser), ""getNimbusConf"", new HashMap<>()));"
236054,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/security/auth/authorizer/SimpleACLAuthorizerTest.java,66,,"        Assert.assertTrue(authorizer.permit(new ReqContext(adminUser), ""getClusterInfo"", new HashMap<>()));"
236055,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/security/auth/authorizer/SimpleACLAuthorizerTest.java,71,,"        Assert.assertTrue(authorizer.permit(new ReqContext(adminUser), ""getSupervisorPageInfo"", new HashMap<>()));"
236056,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/security/auth/authorizer/SimpleACLAuthorizerTest.java,76,,"        Assert.assertTrue(authorizer.permit(new ReqContext(adminUser), ""fileDownload"", new HashMap<>()));"
236057,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/security/auth/authorizer/SimpleACLAuthorizerTest.java,85,,"        Assert.assertTrue(authorizer.permit(new ReqContext(adminUser), ""killTopology"", topoConf));"
236058,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/security/auth/authorizer/SimpleACLAuthorizerTest.java,90,,"        Assert.assertTrue(authorizer.permit(new ReqContext(adminUser), ""rebalance"", topoConf));"
236059,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/security/auth/authorizer/SimpleACLAuthorizerTest.java,95,,"        Assert.assertTrue(authorizer.permit(new ReqContext(adminUser), ""activate"", topoConf));"
236060,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/security/auth/authorizer/SimpleACLAuthorizerTest.java,100,,"        Assert.assertTrue(authorizer.permit(new ReqContext(adminUser), ""deactivate"", topoConf));"
236061,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/security/auth/authorizer/SimpleACLAuthorizerTest.java,105,,"        Assert.assertTrue(authorizer.permit(new ReqContext(adminUser), ""getTopologyConf"", topoConf));"
236062,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/security/auth/authorizer/SimpleACLAuthorizerTest.java,110,,"        Assert.assertTrue(authorizer.permit(new ReqContext(adminUser), ""getTopology"", topoConf));"
236063,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/security/auth/authorizer/SimpleACLAuthorizerTest.java,115,,"        Assert.assertTrue(authorizer.permit(new ReqContext(adminUser), ""getUserTopology"", topoConf));"
236064,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/security/auth/authorizer/SimpleACLAuthorizerTest.java,120,,"        Assert.assertTrue(authorizer.permit(new ReqContext(adminUser), ""getTopologyInfo"", topoConf));"
236065,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/security/auth/authorizer/SimpleACLAuthorizerTest.java,125,,"        Assert.assertTrue(authorizer.permit(new ReqContext(adminUser), ""getTopologyPageInfo"", topoConf));"
236066,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/security/auth/authorizer/SimpleACLAuthorizerTest.java,130,,"        Assert.assertTrue(authorizer.permit(new ReqContext(adminUser), ""getComponentPageInfo"", topoConf));"
236067,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/security/auth/authorizer/SimpleACLAuthorizerTest.java,135,,"        Assert.assertTrue(authorizer.permit(new ReqContext(adminUser), ""uploadNewCredentials"", topoConf));"
236068,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/security/auth/authorizer/SimpleACLAuthorizerTest.java,140,,"        Assert.assertTrue(authorizer.permit(new ReqContext(adminUser), ""setLogConfig"", topoConf));"
236069,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/security/auth/authorizer/SimpleACLAuthorizerTest.java,145,,"        Assert.assertTrue(authorizer.permit(new ReqContext(adminUser), ""setWorkerProfiler"", topoConf));"
236070,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/security/auth/authorizer/SimpleACLAuthorizerTest.java,150,,"        Assert.assertTrue(authorizer.permit(new ReqContext(adminUser), ""getWorkerProfileActionExpiry"", topoConf));"
236071,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/security/auth/authorizer/SimpleACLAuthorizerTest.java,155,,"        Assert.assertTrue(authorizer.permit(new ReqContext(adminUser), ""getComponentPendingProfileActions"", topoConf));"
236072,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/security/auth/authorizer/SimpleACLAuthorizerTest.java,160,,"        Assert.assertTrue(authorizer.permit(new ReqContext(adminUser), ""startProfiling"", topoConf));"
236073,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/security/auth/authorizer/SimpleACLAuthorizerTest.java,165,,"        Assert.assertTrue(authorizer.permit(new ReqContext(adminUser), ""stopProfiling"", topoConf));"
236074,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/security/auth/authorizer/SimpleACLAuthorizerTest.java,170,,"        Assert.assertTrue(authorizer.permit(new ReqContext(adminUser), ""dumpProfile"", topoConf));"
236075,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/security/auth/authorizer/SimpleACLAuthorizerTest.java,175,,"        Assert.assertTrue(authorizer.permit(new ReqContext(adminUser), ""dumpJstack"", topoConf));"
236076,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/security/auth/authorizer/SimpleACLAuthorizerTest.java,180,,"        Assert.assertTrue(authorizer.permit(new ReqContext(adminUser), ""dumpHeap"", topoConf));"
236077,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/security/auth/authorizer/SimpleACLAuthorizerTest.java,185,,"        Assert.assertTrue(authorizer.permit(new ReqContext(adminUser), ""debug"", topoConf));"
236078,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/security/auth/authorizer/SimpleACLAuthorizerTest.java,190,,"        Assert.assertTrue(authorizer.permit(new ReqContext(adminUser), ""getLogConfig"", topoConf));"
236079,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/spout/CheckpointSpoutTest.java,103,,"            (KeyValueState<String, CheckPointState>) StateFactory.getState(""__state"", topoConf, mockTopologyContext);"
236080,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/state/BaseBinaryStateIteratorTest.java,44,,"        putEncodedKeyValueToMap(pendingPrepare, ""key0"".getBytes(), ""value0"".getBytes());"
236081,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/state/BaseBinaryStateIteratorTest.java,44,,"        putEncodedKeyValueToMap(pendingPrepare, ""key0"".getBytes(), ""value0"".getBytes());"
236082,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/state/BaseBinaryStateIteratorTest.java,45,,"        putTombstoneToMap(pendingPrepare, ""key1"".getBytes());"
236083,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/state/BaseBinaryStateIteratorTest.java,46,,"        putEncodedKeyValueToMap(pendingPrepare, ""key2"".getBytes(), ""value2"".getBytes());"
236084,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/state/BaseBinaryStateIteratorTest.java,46,,"        putEncodedKeyValueToMap(pendingPrepare, ""key2"".getBytes(), ""value2"".getBytes());"
236085,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/streams/ProcessorBoltTest.java,79,,"        assertEquals(""outputstream"", os.getValue());"
236086,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/streams/ProcessorBoltTest.java,87,,"        setUpProcessorBolt(new AggregateProcessor<>(new LongSum()), Collections.singleton(""inputstream""), true, null);"
236087,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/streams/StreamBuilderTest.java,116,,"        expected.put(new GlobalStreamId(spoutId, ""default""), Grouping.shuffle(new NullStruct()));"
236088,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/streams/StreamBuilderTest.java,160,,"        Bolt bolt1 = topology.get_bolts().get(""bolt1"");"
236089,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/streams/StreamBuilderTest.java,161,,"        Bolt bolt2 = topology.get_bolts().get(""bolt2"");"
236090,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/topology/StatefulBoltExecutorTest.java,70,,"        Mockito.when(mockTuple.getSourceStreamId()).thenReturn(""default"");"
236091,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/topology/StatefulWindowedBoltExecutorTest.java,63,,"        mockStormConf.put(Config.TOPOLOGY_BOLTS_MESSAGE_ID_FIELD_NAME, ""msgid"");"
236092,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/topology/TopologyBuilderTest.java,56,,"        builder.setSpout(""spout1"", makeDummySpout());"
236093,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/topology/TopologyBuilderTest.java,57,,"        builder.setSpout(""spout2"", makeDummySpout());"
236094,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/topology/TopologyBuilderTest.java,58,,"        builder.setBolt(""bolt1"", makeDummyStatefulBolt(), 1)"
236095,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/topology/TopologyBuilderTest.java,60,,"        builder.setBolt(""bolt2"", makeDummyStatefulBolt(), 1).shuffleGrouping(""spout1"");"
236096,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/topology/TopologyBuilderTest.java,70,,"        Assert.assertEquals(ImmutableSet.of(new GlobalStreamId(""spout1"", ""default""),"
236097,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/topology/TopologyBuilderTest.java,72,,"                                            new GlobalStreamId(""$checkpointspout"", ""$checkpoint"")),"
236098,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/topology/WindowedBoltExecutorTest.java,69,,"                return new GlobalStreamId(""s1"", ""default"");"
236099,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/topology/WindowedBoltExecutorTest.java,144,,"        conf.put(Config.TOPOLOGY_BOLTS_LATE_TUPLE_STREAM, ""$late"");"
236100,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/tuple/FieldsTest.java,25,,"        Assert.assertEquals(new Fields(""foo"", ""bar"").size(), 2);"
236101,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/tuple/FieldsTest.java,25,,"        Assert.assertEquals(new Fields(""foo"", ""bar"").size(), 2);"
236102,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/utils/StormBoundedExponentialBackoffRetryTest.java,72,,"            LOG.info(""For retryCount ["" + retryCount + ""] the previousSleepMs ["" + prevSleepMs +"
236103,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/utils/StormBoundedExponentialBackoffRetryTest.java,73,,"                     ""] the currentSleepMs ["" + currSleepMs + ""]"");"
236104,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/utils/ThriftTopologyUtilsTest.java,62,,"            ImmutableSet.of(""bolt-1"", ""spout-1""),"
236105,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/utils/UtilsTest.java,285,,"                    tb.setSpout(""spout1"", new TestWordSpout(), 10);"
236106,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/utils/UtilsTest.java,286,,"                    tb.setBolt(""bolt1"", new TestWordCounter(), 10).shuffleGrouping(""spout1"");"
236107,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/utils/UtilsTest.java,287,,"                    tb.setBolt(""bolt2"", new TestWordCounter(), 10).shuffleGrouping(""spout1"");"
236108,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/utils/UtilsTest.java,288,,"                    tb.setBolt(""bolt11"", new TestWordCounter(), 10).shuffleGrouping(""bolt1"");"
236109,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/utils/UtilsTest.java,289,,"                    tb.setBolt(""bolt12"", new TestWordCounter(), 10).shuffleGrouping(""bolt1"");"
236110,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/utils/UtilsTest.java,290,,"                    tb.setBolt(""bolt21"", new TestWordCounter(), 10).shuffleGrouping(""bolt2"");"
236111,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/utils/UtilsTest.java,291,,"                    tb.setBolt(""bolt22"", new TestWordCounter(), 10).shuffleGrouping(""bolt2"");"
236112,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/utils/UtilsTest.java,311,,"                    tb.setBolt(""bolt3"", new TestWordCounter(), 10).shuffleGrouping(""spout1"").shuffleGrouping(""bolt3"");"
236113,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/utils/UtilsTest.java,330,,"                    tb.setBolt(""bolt3"", new TestWordCounter(), 10).shuffleGrouping(""spout1"").shuffleGrouping(""bolt5"");"
236114,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/utils/UtilsTest.java,331,,"                    tb.setBolt(""bolt4"", new TestWordCounter(), 10).shuffleGrouping(""bolt3"");"
236115,./TargetProjects/storm/storm-client/test/jvm/org/apache/storm/utils/UtilsTest.java,368,,"                    tb.setSpout(""spout2"", new TestWordSpout(), 10);"
236116,./TargetProjects/storm/storm-clojure/src/main/java/org/apache/storm/clojure/ClojureTuple.java,208,,"        throw new ArityException(0, ""1 or 2 args only"");"
236117,./TargetProjects/storm/storm-core/src/jvm/org/apache/storm/command/Blobstore.java,90,,"                                    .arg(""key"", CLI.FIRST_WINS)"
236118,./TargetProjects/storm/storm-core/src/jvm/org/apache/storm/shade/org/apache/zookeeper/ZkCli.java,113,,"            throw new IllegalArgumentException(""In Read Only Mode"");"
236119,./TargetProjects/storm/storm-core/src/jvm/org/apache/storm/utils/Monitor.java,59,,"            System.out.println(""------------------"");"
236120,./TargetProjects/storm/storm-core/test/jvm/org/apache/storm/SubmitterTest.java,34,,"        conf.put(Config.STORM_ZOOKEEPER_TOPOLOGY_AUTH_PAYLOAD, ""foobar:12345"");"
236121,./TargetProjects/storm/storm-core/test/jvm/org/apache/storm/SubmitterTest.java,35,,"        conf.put(Config.STORM_ZOOKEEPER_AUTH_SCHEME, ""anything"");"
236122,./TargetProjects/storm/storm-core/test/jvm/org/apache/storm/SubmitterTest.java,40,,"        assertEquals(""digest"", actualScheme);"
236123,./TargetProjects/storm/storm-core/test/jvm/org/apache/storm/command/TestCLI.java,70,,"            .parse(""TEST"");"
236124,./TargetProjects/storm/storm-core/test/jvm/org/apache/storm/integration/TestingTest.java,192,,"        Tuple tuple = Testing.testTuple(new Values(""james"", ""bond""));"
236125,./TargetProjects/storm/storm-core/test/jvm/org/apache/storm/integration/TestingTest.java,192,,"        Tuple tuple = Testing.testTuple(new Values(""james"", ""bond""));"
236126,./TargetProjects/storm/storm-core/test/jvm/org/apache/storm/integration/TopologyIntegrationTest.java,88,,"            builder.setBolt(""2"", new TestWordCounter(), 4).fieldsGrouping(""1"", new Fields(""word""));"
236127,./TargetProjects/storm/storm-core/test/jvm/org/apache/storm/integration/TopologyIntegrationTest.java,97,,"            List<FixedTuple> testTuples = Arrays.asList(""nathan"", ""bob"", ""joey"", ""nathan"").stream()"
236128,./TargetProjects/storm/storm-core/test/jvm/org/apache/storm/integration/TopologyIntegrationTest.java,97,,"            List<FixedTuple> testTuples = Arrays.asList(""nathan"", ""bob"", ""joey"", ""nathan"").stream()"
236129,./TargetProjects/storm/storm-core/test/jvm/org/apache/storm/integration/TopologyIntegrationTest.java,97,,"            List<FixedTuple> testTuples = Arrays.asList(""nathan"", ""bob"", ""joey"", ""nathan"").stream()"
236130,./TargetProjects/storm/storm-core/test/jvm/org/apache/storm/integration/TopologyIntegrationTest.java,408,,"            declarer.declare(new Fields(""num""));"
236131,./TargetProjects/storm/storm-core/test/jvm/org/apache/storm/messaging/netty/NettyTest.java,112,,"        String reqMessage = ""0123456789abcdefghijklmnopqrstuvwxyz"";"
236132,./TargetProjects/storm/storm-core/test/jvm/org/apache/storm/messaging/netty/NettyTest.java,117,,"                IConnection client = context.connect(null, ""localhost"", server.getPort(), remoteBpStatus)) {"
236133,./TargetProjects/storm/storm-core/test/jvm/org/apache/storm/stats/TestStatsUtil.java,60,,"        hostPort.add(""node1"");"
236134,./TargetProjects/storm/storm-core/test/jvm/org/apache/storm/stats/TestStatsUtil.java,66,,"        nodeHost.put(""node2"", ""host2"");"
236135,./TargetProjects/storm/storm-core/test/jvm/org/apache/storm/stats/TestStatsUtil.java,67,,"        nodeHost.put(""node3"", ""host3"");"
236136,./TargetProjects/storm/storm-core/test/jvm/org/apache/storm/stats/TestStatsUtil.java,74,,"        exec1Beat.put(""type"", ""bolt"");"
236137,./TargetProjects/storm/storm-core/test/jvm/org/apache/storm/stats/TestStatsUtil.java,89,,"        task2Component.put(1, ""my-component"");"
236138,./TargetProjects/storm/storm-core/test/jvm/org/apache/storm/stats/TestStatsUtil.java,183,,"        task2Component.put(8, ""my-spout"");"
236139,./TargetProjects/storm/storm-core/test/jvm/org/apache/storm/stats/TestStatsUtil.java,205,,"            StatsUtil.aggWorkerStats(""my-storm-id"", ""my-storm-name"","
236140,./TargetProjects/storm/storm-core/test/jvm/org/apache/storm/stats/TestStatsUtil.java,401,,"        assertNotNull(topologyPageInfo.get_id_to_spout_agg_stats(), ""Should be non-null"");"
236141,./TargetProjects/storm/storm-core/test/jvm/org/apache/storm/stats/TestStatsUtil.java,410,,"        assertNotNull(componentStats.get_last_error(), ""Last error should not be null"");"
236142,./TargetProjects/storm/storm-server/src/main/java/org/apache/storm/LocalCluster.java,617,,"        throw new KeyNotFoundException(""BLOBS NOT SUPPORTED IN LOCAL MODE"");"
236143,./TargetProjects/storm/storm-server/src/main/java/org/apache/storm/LocalCluster.java,860,,"        throw new RuntimeException(""NOT IMPLEMENTED YET"");"
236144,./TargetProjects/storm/storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java,424,,"    @SuppressWarnings(""deprecation"")"
236145,./TargetProjects/storm/storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java,726,,"    @SuppressWarnings(""unchecked"")"
236146,./TargetProjects/storm/storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java,1784,,"                                .orElseThrow(() -> new WrappedNotAliveException(topoName + "" is not alive""));"
236147,./TargetProjects/storm/storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java,3752,,"                throw new RuntimeException(""Blob for session "" + session + "" does not exist (or timed out)"");"
236148,./TargetProjects/storm/storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java,3752,,"                throw new RuntimeException(""Blob for session "" + session + "" does not exist (or timed out)"");"
236149,./TargetProjects/storm/storm-server/src/main/java/org/apache/storm/daemon/supervisor/BasicContainer.java,263,,"        @SuppressWarnings(""unchecked"")"
236150,./TargetProjects/storm/storm-server/src/main/java/org/apache/storm/nimbus/NimbusHeartbeatsPressureTest.java,158,,"        println(""===== min time cost: "" + totalPointsArray[0] + "" ====="");"
236151,./TargetProjects/storm/storm-server/src/main/java/org/apache/storm/utils/ServerUtils.java,848,,"            LOG.debug(""CMD-LINE#{}: {}"", lineNo, line);"
236152,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/PacemakerTest.java,92,,"        hbPulse.set_details(dataString.getBytes(""UTF-8""));"
236153,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/TestRebalance.java,82,,"            SpoutDeclarer s1 = builder.setSpout(""spout-1"", new TestUtilsForResourceAwareScheduler.TestSpout(),"
236154,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/TestingTest.java,42,,"        tb.setSpout(""spout"", new TestWordSpout(true), 3);"
236155,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/TestingTest.java,52,,"                           new Values(""nathan""),"
236156,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/TestingTest.java,68,,"        assertTrue(expectedSpoutTuples + "" expected, but found "" + spoutTuples,"
236157,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/blobstore/LocalFsBlobStoreSynchronizerTest.java,88,,"    zkSet.add(""key1"");"
236158,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/blobstore/LocalFsBlobStoreTest.java,93,,"    Mockito.doNothing().when(spy).checkForBlobUpdate(""test"");"
236159,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/blobstore/LocalFsBlobStoreTest.java,94,,"    Mockito.doNothing().when(spy).checkForBlobUpdate(""other"");"
236160,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/blobstore/LocalFsBlobStoreTest.java,95,,"    Mockito.doNothing().when(spy).checkForBlobUpdate(""test-empty-subject-WE"");"
236161,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/blobstore/LocalFsBlobStoreTest.java,96,,"    Mockito.doNothing().when(spy).checkForBlobUpdate(""test-empty-subject-DEF"");"
236162,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/blobstore/LocalFsBlobStoreTest.java,97,,"    Mockito.doNothing().when(spy).checkForBlobUpdate(""test-empty-acls"");"
236163,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/blobstore/LocalFsBlobStoreTest.java,248,,"        assertTrue(""ACL does not contain WORLD_EVERYTHING"", metadata.toString().contains(""AccessControl(type:OTHER, access:7)""));"
236164,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/blobstore/LocalFsBlobStoreTest.java,248,,"        assertTrue(""ACL does not contain WORLD_EVERYTHING"", metadata.toString().contains(""AccessControl(type:OTHER, access:7)""));"
236165,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/container/oci/OciUtilsTest.java,37,,"        conf.put(DaemonConfig.STORM_OCI_IMAGE, ""storm/rhel7:dev_test"");"
236166,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/daemon/drpc/DRPCTest.java,86,,"            Future<String> found = exec.submit(() -> server.executeBlocking(""testing"", ""test""));"
236167,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/daemon/drpc/DRPCTest.java,86,,"            Future<String> found = exec.submit(() -> server.executeBlocking(""testing"", ""test""));"
236168,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/daemon/drpc/DRPCTest.java,162,,"        acl.put(""jump"", new AclFunctionEntry(Arrays.asList(jumpClient.getName()), jumpTopo.getName()));"
236169,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/daemon/drpc/DRPCTest.java,174,,"        DRPC.checkAuthorization(jt, auth, ""fetchRequest"", ""jump"");"
236170,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/daemon/drpc/DRPCTest.java,178,,"        DRPC.checkAuthorization(jt, auth, ""result"", ""jump"");"
236171,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/daemon/drpc/DRPCTest.java,182,,"        assertThrows(() -> DRPC.checkAuthorization(jt, auth, ""execute"", ""jump""), AuthorizationException.class);"
236172,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/daemon/drpc/DRPCTest.java,187,,"        assertThrows(() -> DRPC.checkAuthorization(jt, auth, ""fetchRequest"", ""not_jump""), AuthorizationException.class);"
236173,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/daemon/supervisor/BasicContainerTest.java,94,,"        final String topoId = ""test_topology"";"
236174,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/daemon/supervisor/BasicContainerTest.java,109,,"            ""SUPERVISOR"", supervisorPort, port, la, iso, ls, null, new StormMetricsRegistry(),"
236175,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/daemon/supervisor/BasicContainerTest.java,110,,"            new HashMap<>(), ops, ""profile"");"
236176,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/daemon/supervisor/BasicContainerTest.java,177,,"        final String workerId = ""worker-id"";"
236177,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/daemon/supervisor/BasicContainerTest.java,212,,"        final String stormLocal = ContainerTest.asAbsPath(""tmp"", ""testing"");"
236178,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/daemon/supervisor/BasicContainerTest.java,354,,"                           ""java"","
236179,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/daemon/supervisor/BasicContainerTest.java,355,,"                           ""-cp"","
236180,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/daemon/supervisor/BasicContainerTest.java,356,,"                           ""FRAMEWORK_CP:"" + stormjar.getAbsolutePath(),"
236181,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/daemon/supervisor/BasicContainerTest.java,357,,"                           ""-Dlogging.sensitivity=S3"","
236182,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/daemon/supervisor/BasicContainerTest.java,358,,"                           ""-Dlogfile.name=worker.log"","
236183,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/daemon/supervisor/BasicContainerTest.java,359,,"                           ""-Dstorm.home="" + stormHome,"
236184,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/daemon/supervisor/BasicContainerTest.java,360,,"                           ""-Dworkers.artifacts="" + stormLocal,"
236185,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/daemon/supervisor/BasicContainerTest.java,361,,"                           ""-Dstorm.id="" + topoId,"
236186,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/daemon/supervisor/BasicContainerTest.java,362,,"                           ""-Dworker.id="" + workerId,"
236187,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/daemon/supervisor/BasicContainerTest.java,363,,"                           ""-Dworker.port="" + port,"
236188,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/daemon/supervisor/BasicContainerTest.java,364,,"                           ""-Dstorm.log.dir="" + stormLogDir,"
236189,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/daemon/supervisor/BasicContainerTest.java,365,,"                           ""-DLog4jContextSelector=org.apache.logging.log4j.core.selector.BasicContextSelector"","
236190,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/daemon/supervisor/BasicContainerTest.java,366,,"                           ""-Dstorm.local.dir="" + stormLocal,"
236191,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/daemon/supervisor/BasicContainerTest.java,367,,"                           ""-Dworker.memory_limit_mb=768"","
236192,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/daemon/supervisor/BasicContainerTest.java,368,,"                           ""-Dlog4j.configurationFile="" + workerConf,"
236193,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/daemon/supervisor/ContainerTest.java,104,,"        final String stormLocal = asAbsPath(""tmp"", ""testing"");"
236194,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/daemon/supervisor/ContainerTest.java,233,,"            fail(""THIS IS NOT UNDER TEST"");"
236195,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/daemon/supervisor/SlotTest.java,139,,"                containerLauncher, ""localhost"", 8080, iSuper, state, cb, null, null,"
236196,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/daemon/supervisor/SlotTest.java,180,,"            assertSame(""pendingDownload not set properly"", blobFuture, nextState.pendingDownload);"
236197,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/daemon/supervisor/SlotTest.java,188,,"            assertSame(""pendingDownload is not null"", null, nextState.pendingDownload);"
236198,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/daemon/supervisor/SlotTest.java,301,,"            String topoId = ""CURRENT"";"
236199,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/localizer/AsyncLocalizerTest.java,423,,"            LocalAssignment topo1 = constructLocalAssignment(""topo1"", user1, Collections.emptyList());"
236200,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/localizer/AsyncLocalizerTest.java,428,,"            assertEquals(""local resource set size wrong"", 3, lrsrcFiles.size() + lrsrcArchives.size());"
236201,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/localizer/AsyncLocalizerTest.java,430,,"            assertNotNull(""Local resource doesn't exist but should"", key1rsrc);"
236202,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/localizer/AsyncLocalizerTest.java,431,,"            assertEquals(""key doesn't match"", key1, key1rsrc.getKey());"
236203,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/localizer/AsyncLocalizerTest.java,436,,"            assertEquals(""refcount doesn't match "" + key2rsrc.getDependencies(), false, key2rsrc.isUsed());"
236204,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/localizer/AsyncLocalizerTest.java,462,,"        testArchives(getFileFromResource(joinPath(""localizer"", ""localtestwithsymlink.tgz"")), true, 21344);"
236205,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/localizer/AsyncLocalizerTest.java,521,,"            assertTrue(""failed to create user dir"", user1Dir.mkdirs());"
236206,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/localizer/AsyncLocalizerTest.java,531,,"            assertTrue(""user filecache dir not created"", new File(expectedFileDir).exists());"
236207,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/localizer/AsyncLocalizerTest.java,551,,"            assertEquals(""size doesn't match"", size, key1rsrc.getSizeOnDisk());"
236208,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/localizer/AsyncLocalizerTest.java,575,,"            assertFalse(""blob not deleted"", keyFile.exists());"
236209,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/localizer/AsyncLocalizerTest.java,577,,"            assertFalse(""blob dir not deleted"", new File(expectedUserDir).exists());"
236210,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/localizer/AsyncLocalizerTest.java,589,,"            String key1 = ""key1"";"
236211,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/localizer/AsyncLocalizerTest.java,618,,"            assertTrue(""blob not created"", keyFileCurrentSymlink.exists());"
236212,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/localizer/AsyncLocalizerTest.java,742,,"            assertTrue(""blob deleted"", keyFile.exists());"
236213,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/localizer/LocalizedResourceRetentionSetTest.java,47,,"        PortAndAssignment pna1 = new PortAndAssignmentImpl(1, new LocalAssignment(""topo1"", Collections.emptyList()));"
236214,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/localizer/LocalizedResourceRetentionSetTest.java,55,,"        LocalizedResource localresource1 = new LocalizedResource(""key1"", Paths.get(""testfile1""), false, ops, conf, user, metricsRegistry);"
236215,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/localizer/LocalizedResourceRetentionSetTest.java,57,,"        LocalizedResource localresource2 = new LocalizedResource(""key2"", Paths.get(""testfile2""), false, ops, conf, user, metricsRegistry);"
236216,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/metricstore/rocksdb/RocksDbStoreTest.java,169,,"        Metric m1 = new Metric(""metricType1"", 50000000L, ""Topo-m1"", 1.0,"
236217,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/metricstore/rocksdb/RocksDbStoreTest.java,170,,"                ""component-1"", ""executor-2"", ""hostname-1"", ""stream-1"", 1, AggLevel.AGG_LEVEL_NONE);"
236218,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/metricstore/rocksdb/RocksDbStoreTest.java,172,,"                ""component-1"", ""executor-1"", ""hostname-2"", ""stream-2"", 1, AggLevel.AGG_LEVEL_NONE);"
236219,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/metricstore/rocksdb/StringMetadataCacheTest.java,113,,"        wCache.put(""default"", metadata, false);"
236220,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/blacklist/TestBlacklistScheduler.java,87,,"        TopologyDetails topo1 = TestUtilsForBlacklistScheduler.getTopology(""topo-1"", config, 5, 15, 1, 1, currentTime - 2, true);"
236221,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/blacklist/TestBlacklistScheduler.java,97,,"        cluster = new Cluster(iNimbus, resourceMetrics, TestUtilsForBlacklistScheduler.removeSupervisorFromSupervisors(supMap, ""sup-0""), TestUtilsForBlacklistScheduler.assignmentMapToImpl(cluster.getAssignments()), topologies, config);"
236222,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/blacklist/TestBlacklistScheduler.java,103,,"        Assert.assertEquals(""blacklist"", Collections.singleton(""host-0""), cluster.getBlacklistedHosts());"
236223,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/blacklist/TestBlacklistScheduler.java,103,,"        Assert.assertEquals(""blacklist"", Collections.singleton(""host-0""), cluster.getBlacklistedHosts());"
236224,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/TestResourceAwareScheduler.java,122,,"        TopologyDetails topology1 = genTopology(""topology1"", config, 1, 0, 2, 0, 0, 0, ""user"");"
236225,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/TestResourceAwareScheduler.java,122,,"        TopologyDetails topology1 = genTopology(""topology1"", config, 1, 0, 2, 0, 0, 0, ""user"");"
236226,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/TestResourceAwareScheduler.java,123,,"        TopologyDetails topology2 = genTopology(""topology2"", config, 1, 0, 2, 0, 0, 0, ""user"");"
236227,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/TestResourceAwareScheduler.java,128,,"        RasNode node = nodes.get(""r000s000"");"
236228,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/TestResourceAwareScheduler.java,212,,"        assertTrue(cluster.getStatusMap().get(topology1.getId()).startsWith(""Running - Fully Scheduled by DefaultResourceAwareStrategy""));"
236229,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/TestResourceAwareScheduler.java,221,,"        builder1.setSpout(""wordSpout1"", new TestWordSpout(), 1);"
236230,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/TestResourceAwareScheduler.java,222,,"        builder1.setSpout(""wordSpout2"", new TestWordSpout(), 1);"
236231,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/TestResourceAwareScheduler.java,285,,"        builder1.setSpout(""wordSpout"", new TestWordSpout(), 1).setCPULoad(20.0).setMemoryLoad(200.0);"
236232,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/TestResourceAwareScheduler.java,637,,"            String expectedMsgPrefix = ""Running - Fully Scheduled by "" + strategyName;"
236233,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/TestResourceAwareScheduler.java,790,,"            userRes(""jerry"", 200, 2000));"
236234,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/TestResourceAwareScheduler.java,795,,"            genTopology(""topo-1"", config, 1, 0, 1, 0, currentTime - 2, 10, ""jerry""),"
236235,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/TestResourceAwareScheduler.java,796,,"            genTopology(""topo-2"", config, 1, 0, 1, 0, currentTime - 2, 20, ""jerry""),"
236236,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/TestResourceAwareScheduler.java,797,,"            genTopology(""topo-3"", config, 1, 0, 1, 0, currentTime - 2, 20, ""jerry""),"
236237,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/TestResourceAwareScheduler.java,798,,"            genTopology(""topo-4"", config, 1, 0, 1, 0, currentTime - 2, 10, ""bobby""),"
236238,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/TestResourceAwareScheduler.java,798,,"            genTopology(""topo-4"", config, 1, 0, 1, 0, currentTime - 2, 10, ""bobby""),"
236239,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/TestResourceAwareScheduler.java,799,,"            genTopology(""topo-5"", config, 1, 0, 1, 0, currentTime - 2, 20, ""bobby""));"
236240,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/TestResourceAwareScheduler.java,816,,"            userRes(""derek"", 5_000, 16_384));"
236241,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/TestResourceAwareScheduler.java,825,,"            genTopology(""topo-6"", config, 5, 15, 1, 1, currentTime - 2, 20, ""bobby""),"
236242,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/TestUser.java,62,,"            userRes(""user1"", cpuGuarantee, memoryGuarantee));"
236243,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/eviction/TestDefaultEvictionStrategy.java,77,,"            userRes(""jerry"", 200, 2000),"
236244,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/eviction/TestDefaultEvictionStrategy.java,78,,"            userRes(""bobby"", 100, 1000),"
236245,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/eviction/TestDefaultEvictionStrategy.java,79,,"            userRes(""derek"", 200, 2000));"
236246,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/eviction/TestDefaultEvictionStrategy.java,82,,"            genTopology(""topo-1"", config, 1, 0, 1, 0, currentTime - 2, 10, ""jerry""),"
236247,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/eviction/TestDefaultEvictionStrategy.java,83,,"            genTopology(""topo-2"", config, 1, 0, 1, 0, currentTime - 2, 10, ""bobby""),"
236248,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/eviction/TestDefaultEvictionStrategy.java,84,,"            genTopology(""topo-3"", config, 1, 0, 1, 0, currentTime - 2, 20, ""bobby""),"
236249,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/eviction/TestDefaultEvictionStrategy.java,85,,"            genTopology(""topo-4"", config, 1, 0, 1, 0, currentTime - 2, 29, ""derek""));"
236250,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/eviction/TestDefaultEvictionStrategy.java,96,,"            genTopology(""topo-6"", config, 1, 0, 1, 0, currentTime - 2, 20, ""jerry""));"
236251,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/eviction/TestDefaultEvictionStrategy.java,118,,"            genTopology(""topo-5"", config, 1, 0, 1, 0, currentTime - 2, 29, ""derek""));"
236252,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/eviction/TestDefaultEvictionStrategy.java,124,,"        LOG.info(""\n\n\t\tDone scheduling..."");"
236253,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/priority/TestFIFOSchedulingPriorityStrategy.java,68,,"                genTopology(""topo-1-jerry"", config, 1, 0, 1, 0, Time.currentTimeSecs() - 250, 20, ""jerry""),"
236254,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/priority/TestFIFOSchedulingPriorityStrategy.java,69,,"                genTopology(""topo-2-bobby"", config, 1, 0, 1, 0, Time.currentTimeSecs() - 200, 10, ""bobby""),"
236255,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/priority/TestFIFOSchedulingPriorityStrategy.java,70,,"                genTopology(""topo-3-bobby"", config, 1, 0, 1, 0, Time.currentTimeSecs() - 300, 20, ""bobby""),"
236256,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/priority/TestFIFOSchedulingPriorityStrategy.java,71,,"                genTopology(""topo-4-derek"", config, 1, 0, 1, 0, Time.currentTimeSecs() - 201, 29, ""derek""));"
236257,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/priority/TestGenericResourceAwareSchedulingPriorityStrategy.java,89,,"        requestedgenericResourcesMap.put(""generic.resource.1"", 40.0);"
236258,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/priority/TestGenericResourceAwareSchedulingPriorityStrategy.java,94,,"            genTopology(""ethan-topo-1"", ethanConf, 1, 0, 1, 0, currentTime - 2, 10, ""ethan""),"
236259,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/priority/TestGenericResourceAwareSchedulingPriorityStrategy.java,94,,"            genTopology(""ethan-topo-1"", ethanConf, 1, 0, 1, 0, currentTime - 2, 10, ""ethan""),"
236260,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/priority/TestGenericResourceAwareSchedulingPriorityStrategy.java,95,,"            genTopology(""ethan-topo-2"", ethanConf, 1, 0, 1, 0, currentTime - 2, 20, ""ethan""),"
236261,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/priority/TestGenericResourceAwareSchedulingPriorityStrategy.java,96,,"            genTopology(""ethan-topo-3"", ethanConf, 1, 0, 1, 0, currentTime - 2, 28, ""ethan""),"
236262,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/priority/TestGenericResourceAwareSchedulingPriorityStrategy.java,97,,"            genTopology(""ethan-topo-4"", ethanConf, 1, 0, 1, 0, currentTime - 2, 29, ""ethan""));"
236263,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/priority/TestGenericResourceAwareSchedulingPriorityStrategy.java,100,,"            genTopology(""rui-topo-1"", ruiConf, 1, 0, 4, 0, currentTime - 2, 10, ""rui""));"
236264,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/priority/TestGenericResourceAwareSchedulingPriorityStrategy.java,100,,"            genTopology(""rui-topo-1"", ruiConf, 1, 0, 4, 0, currentTime - 2, 10, ""rui""));"
236265,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/scheduling/TestConstraintSolverStrategy.java,121,,"        addConstraints(""spout-0"", ""bolt-0"", constraints);"
236266,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/scheduling/TestConstraintSolverStrategy.java,121,,"        addConstraints(""spout-0"", ""bolt-0"", constraints);"
236267,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/scheduling/TestConstraintSolverStrategy.java,122,,"        addConstraints(""bolt-2"", ""spout-0"", constraints);"
236268,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/scheduling/TestConstraintSolverStrategy.java,123,,"        addConstraints(""bolt-1"", ""bolt-2"", constraints);"
236269,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/scheduling/TestConstraintSolverStrategy.java,300,,"            new ConstraintSolverConfig(""test-topoid-4"", conf, new HashSet<>(Arrays.asList(""comp-1"")));"
236270,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/scheduling/TestConstraintSolverStrategy.java,325,,"        allComps.addAll(Arrays.asList(""comp-1"", ""comp-2"", ""comp-3"", ""comp-4"", ""comp-5""));"
236271,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/scheduling/TestDefaultResourceAwareStrategy.java,156,,"                builder.setSpout(""spout"", new TestSpout(), spoutParallelism)"
236272,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/scheduling/TestDefaultResourceAwareStrategy.java,174,,"        conf.put(Config.TOPOLOGY_NAME, ""testTopology"");"
236273,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/scheduling/TestDefaultResourceAwareStrategy.java,177,,"        TopologyDetails topo = new TopologyDetails(""testTopology-id"", conf, stormToplogy, 0,"
236274,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/scheduling/TestDefaultResourceAwareStrategy.java,178,,"                genExecsAndComps(stormToplogy), CURRENT_TIME, ""user"");"
236275,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/scheduling/TestDefaultResourceAwareStrategy.java,249,,"        builder.setBolt(""bolt-1"", new TestBolt(),"
236276,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/scheduling/TestDefaultResourceAwareStrategy.java,251,,"        builder.setBolt(""bolt-2"", new TestBolt(),"
236277,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/scheduling/TestDefaultResourceAwareStrategy.java,253,,"        builder.setBolt(""bolt-3"", new TestBolt(),"
236278,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/scheduling/TestDefaultResourceAwareStrategy.java,793,,"        Assert.assertEquals(""rack-0 should be ordered first"", ""rack-0"", it.next().id);"
236279,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/scheduling/TestDefaultResourceAwareStrategy.java,795,,"        Assert.assertEquals(""rack-1 should be ordered second"", ""rack-1"", it.next().id);"
236280,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/scheduling/TestGenericResourceAwareStrategy.java,108,,"        builder.setSpout(""spout"", new TestSpout(),"
236281,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/scheduling/TestGenericResourceAwareStrategy.java,109,,"                spoutParallelism).addResource(""gpu.count"", 1.0);"
236282,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/scheduling/TestGenericResourceAwareStrategy.java,110,,"        builder.setBolt(""bolt-1"", new TestBolt(),"
236283,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/scheduling/TestGenericResourceAwareStrategy.java,112,,"        builder.setBolt(""bolt-2"", new TestBolt(),"
236284,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/scheduling/TestGenericResourceAwareStrategy.java,114,,"        builder.setBolt(""bolt-3"", new TestBolt(),"
236285,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/scheduling/TestGenericResourceAwareStrategy.java,128,,"        conf.put(Config.TOPOLOGY_NAME, ""testTopology"");"
236286,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/scheduling/TestGenericResourceAwareStrategy.java,130,,"        TopologyDetails topo = new TopologyDetails(""testTopology-id"", conf, stormToplogy, 0,"
236287,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/scheduling/TestGenericResourceAwareStrategy.java,131,,"                genExecsAndComps(stormToplogy), currentTime, ""user"");"
236288,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/scheduling/sorter/TestNodeSorterHostProximity.java,212,,"        TopologyDetails topo1 = genTopology(""topo-1"", config, 8, 0, 2, 0, CURRENT_TIME - 2, 10, ""user"");"
236289,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/scheduling/sorter/TestNodeSorterHostProximity.java,212,,"        TopologyDetails topo1 = genTopology(""topo-1"", config, 8, 0, 2, 0, CURRENT_TIME - 2, 10, ""user"");"
236290,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/scheduling/sorter/TestNodeSorterHostProximity.java,213,,"        TopologyDetails topo2 = genTopology(""topo-2"", config, 8, 0, 2, 0, CURRENT_TIME - 2, 10, ""user"");"
236291,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/scheduling/sorter/TestNodeSorterHostProximity.java,230,,"                .map(x -> String.format(""Rack %s -> scheduled-cnt %d, min-avail %f, avg-avail %f, cpu %f, mem %f"","
236292,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/scheduling/sorter/TestNodeSorterHostProximity.java,235,,"                .collect(Collectors.joining(""\n\t""));"
236293,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/scheduling/sorter/TestNodeSorterHostProximity.java,238,,"        Assert.assertEquals(rackSummaries + ""\nrack-000 should be ordered first since it has the most balanced set of resources"", ""rack-000"", it.next().id);"
236294,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/scheduling/sorter/TestNodeSorterHostProximity.java,239,,"        Assert.assertEquals(rackSummaries + ""\nrack-001 should be ordered second since it has a balanced set of resources but less than rack-000"", ""rack-001"", it.next().id);"
236295,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/scheduling/sorter/TestNodeSorterHostProximity.java,699,,"        final String topoName1 = ""topology1"";"
236296,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/scheduling/sorter/TestNodeSorterHostProximity.java,723,,"        assertEquals(""Racks for topology="" + td1.getId() + "" is "" + assignedRacks, 2, assignedRacks.size());"
236297,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/utils/ArtifactoryConfigLoaderTest.java,72,,"        loaderMock.setData(""Anything"", ""/location/of/this/dir"","
236298,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/utils/ArtifactoryConfigLoaderTest.java,75,,"            .setData(null, null, ""{ \"""" + DaemonConfig.MULTITENANT_SCHEDULER_USER_POOLS + ""\"": {one: 1, two: 2, three: 3, four : 4}}"");"
236299,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/utils/ArtifactoryConfigLoaderTest.java,78,,"        Assert.assertNotNull(""Unexpectedly returned null"", ret);"
236300,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/utils/ArtifactoryConfigLoaderTest.java,79,,"        Assert.assertEquals(1, ret.get(""one""));"
236301,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/utils/ArtifactoryConfigLoaderTest.java,80,,"        Assert.assertEquals(2, ret.get(""two""));"
236302,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/utils/ArtifactoryConfigLoaderTest.java,81,,"        Assert.assertEquals(3, ret.get(""three""));"
236303,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/scheduler/utils/ArtifactoryConfigLoaderTest.java,82,,"        Assert.assertEquals(4, ret.get(""four""));"
236304,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/security/auth/AuthTest.java,124,,"            conf.put(Config.STORM_ZOOKEEPER_SERVERS, Arrays.asList(""localhost""));"
236305,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/security/auth/AuthTest.java,166,,"            client.getClient().activate(""bad_auth_test_topology"");"
236306,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/security/auth/AuthTest.java,233,,"                           client.getClient().activate(""security_auth_test_topology"");"
236307,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/security/auth/AuthTest.java,285,,"                       assertEquals(""bob"", found.principal().getName());"
236308,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/security/auth/AuthTest.java,339,,"                               Subject alice = testConnectWithTokenFor(wtMan, conf, server, ""alice"", ""topo-alice"");"
236309,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/security/auth/AuthTest.java,339,,"                               Subject alice = testConnectWithTokenFor(wtMan, conf, server, ""alice"", ""topo-alice"");"
236310,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/security/auth/AuthTest.java,375,,"        assertFalse(auth.permit(context, ""activate"", conf));"
236311,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/security/auth/AuthTest.java,391,,"        clusterConf.put(Config.NIMBUS_ADMINS, Arrays.asList(""admin""));"
236312,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/security/auth/AuthTest.java,392,,"        clusterConf.put(Config.NIMBUS_SUPERVISOR_USERS, Arrays.asList(""supervisor""));"
236313,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/security/auth/AuthTest.java,395,,"        ReqContext userA = new ReqContext(mkSubject(""user-a""));"
236314,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/security/auth/AuthTest.java,405,,"        assertTrue(authorizer.permit(userA, ""submitTopology"", empty));"
236315,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/security/auth/AuthTest.java,410,,"        assertTrue(authorizer.permit(userA, ""fileUpload"", null));"
236316,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/security/auth/AuthTest.java,415,,"        assertTrue(authorizer.permit(userA, ""getNimbusConf"", null));"
236317,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/security/auth/AuthTest.java,420,,"        assertTrue(authorizer.permit(userA, ""getClusterInfo"", null));"
236318,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/security/auth/AuthTest.java,425,,"        assertFalse(authorizer.permit(userA, ""fileDownload"", null));"
236319,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/security/auth/AuthTest.java,430,,"        assertTrue(authorizer.permit(userA, ""killTopology"", aAllowed));"
236320,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/security/auth/AuthTest.java,435,,"        assertTrue(authorizer.permit(userA, ""uploadNewCredentials"", aAllowed));"
236321,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/security/auth/AuthTest.java,440,,"        assertTrue(authorizer.permit(userA, ""rebalance"", aAllowed));"
236322,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/security/auth/AuthTest.java,450,,"        assertTrue(authorizer.permit(userA, ""deactivate"", aAllowed));"
236323,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/security/auth/AuthTest.java,455,,"        assertTrue(authorizer.permit(userA, ""getTopologyConf"", aAllowed));"
236324,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/security/auth/AuthTest.java,460,,"        assertTrue(authorizer.permit(userA, ""getTopology"", aAllowed));"
236325,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/security/auth/AuthTest.java,465,,"        assertTrue(authorizer.permit(userA, ""getUserTopology"", aAllowed));"
236326,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/security/auth/AuthTest.java,470,,"        assertTrue(authorizer.permit(userA, ""getTopologyInfo"", aAllowed));"
236327,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/security/auth/AuthTest.java,610,,"                                      ""someOperation"", null));"
236328,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/utils/EquivalenceUtilsTest.java,88,,"        resources.put(""network.resource.units"", 0.0);"
236329,./TargetProjects/storm/storm-server/src/test/java/org/apache/storm/utils/ServerUtilsTest.java,150,,"        String currentUser = System.getProperty(""user.name"");"
236330,./TargetProjects/storm/storm-submit-tools/src/test/java/org/apache/storm/submit/dependency/AetherUtilsTest.java,61,,"        String testExclusion = ""group"";"
236331,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/handler/LogviewerLogPageHandler.java,243,,"                    bodyContents.add(pre(matchedString).withId(""logContent""));"
236332,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/handler/LogviewerLogPageHandler.java,398,,"                dropDown(""file"", logFiles, selectedFile),"
236333,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/handler/LogviewerLogPageHandler.java,424,,"        urlQueryParams.put(""length"", length);"
236334,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/handler/LogviewerLogPageHandler.java,429,,"        btnLinks.add(toButtonLink(UrlBuilder.build(""/api/v1/"" + type, urlQueryParams), ""Prev"", prevStart < start));"
236335,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/handler/LogviewerLogSearchHandler.java,172,,"                    if (StringUtils.isNotEmpty(search) && search.getBytes(""UTF-8"").length <= GREP_MAX_SEARCH_SIZE) {"
236336,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/webapp/LogviewerResource.java,135,,"            Integer start = request.getParameter(""start"") != null ? parseIntegerFromMap(request.getParameterMap(), ""start"") : null;"
236337,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/webapp/LogviewerResource.java,136,,"            Integer length = request.getParameter(""length"") != null ? parseIntegerFromMap(request.getParameterMap(), ""length"") : null;"
236338,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/webapp/LogviewerResource.java,137,,"            String decodedFileName = Utils.urlDecodeUtf8(request.getParameter(""file""));"
236339,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/logviewer/webapp/LogviewerResource.java,183,,"        String origin = request.getHeader(""Origin"");"
236340,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java,536,,"        ret.put(""version"", info.getVersion());"
236341,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java,540,,"        ret.put(""user"", info.getUser());"
236342,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java,604,,"        result.put(""executorsTotal"", totalExecutors);"
236343,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java,632,,"        result.put(""schedulerDisplayResource"","
236344,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java,700,,"        result.put(""owner"", ownerResourceSummary.get_owner());"
236345,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java,708,,"        result.put(""memoryGuarantee"", memoryGuarantee != -1 ? memoryGuarantee : ""N/A"");"
236346,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java,759,,"        result.put(""encodedId"", Utils.urlEncodeUtf8(topologySummary.get_id()));"
236347,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java,762,,"        result.put(""status"", topologySummary.get_status());"
236348,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java,763,,"        result.put(""uptime"", UIHelpers.prettyUptimeSec(topologySummary.get_uptime_secs()));"
236349,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java,764,,"        result.put(""uptimeSeconds"", topologySummary.get_uptime_secs());"
236350,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java,770,,"        result.put(""requestedMemOnHeap"", topologySummary.get_requested_memonheap());"
236351,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java,771,,"        result.put(""requestedMemOffHeap"", topologySummary.get_requested_memoffheap());"
236352,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java,775,,"        result.put(""requestedCpu"", topologySummary.get_requested_cpu());"
236353,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java,909,,"        result.put(""host"", supervisorSummary.get_host());"
236354,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java,1018,,"        result.put(""port"", workerSummary.get_port());"
236355,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java,1158,,"        result.put(""window"", window);"
236356,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java,1191,,"        result.put(""emitted"", commonAggregateStats.get_emitted());"
236357,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java,1192,,"        result.put(""transferred"", commonAggregateStats.get_transferred());"
236358,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java,1193,,"        result.put(""acked"", commonAggregateStats.get_acked());"
236359,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java,1194,,"        result.put(""failed"", commonAggregateStats.get_failed());"
236360,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java,1239,,"        result.put(""completeLatency"", spoutAggregateStats.get_complete_latency_ms());"
236361,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java,1263,,"        result.put(""executeLatency"", StatsUtil.floatStr(boltAggregateStats.get_execute_latency_ms()));"
236362,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java,1264,,"        result.put(""executed"", boltAggregateStats.get_executed());"
236363,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java,1265,,"        result.put(""processLatency"", StatsUtil.floatStr(boltAggregateStats.get_process_latency_ms()));"
236364,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java,1303,,"        result.put(""stream"", globalStreamId.get_streamId());"
236365,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java,1792,,"        result.put("":transferred"", null);"
236366,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/ui/resources/StormApiResource.java,113,,"    @Produces(""application/json"")"
236367,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/ui/resources/StormApiResource.java,129,,"    @AuthNimbusOp(""getClusterInfo"")"
236368,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/ui/resources/StormApiResource.java,246,,"                                  @QueryParam(""sys"") boolean sys,"
236369,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/ui/resources/StormApiResource.java,286,,"    @AuthNimbusOp(value = ""getTopology"", needsTopoId = true)"
236370,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/ui/resources/StormApiResource.java,289,,"                                @DefaultValue("":all-time"") @QueryParam(""window"") String window,"
236371,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/ui/resources/StormApiResource.java,289,,"                                @DefaultValue("":all-time"") @QueryParam(""window"") String window,"
236372,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/ui/resources/StormApiResource.java,603,,"    @AuthNimbusOp(value = ""setWorkerProfiler"", needsTopoId = true)"
236373,./TargetProjects/storm/storm-webapp/src/main/java/org/apache/storm/daemon/ui/resources/StormApiResource.java,606,,"                                              @PathParam(""host-port"") String hostPort,"
236374,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/drpc/DRPCServerTest.java,94,,"            try (DRPCClient client = new DRPCClient(conf, ""localhost"", server.getDrpcPort());"
236375,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/drpc/DRPCServerTest.java,96,,"                final Future<String> found = exec.submit(() -> client.getClient().execute(""testing"", ""test""));"
236376,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/drpc/DRPCServerTest.java,96,,"                final Future<String> found = exec.submit(() -> client.getClient().execute(""testing"", ""test""));"
236377,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/drpc/DRPCServerTest.java,101,,"                invoke.result(request.get_request_id(), ""tested"");"
236378,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/logviewer/handler/LogviewerLogDownloadHandlerTest.java,49,,"            Response topoAResponse = handler.downloadLogFile(""host"", ""topoA/1111/worker.log"", ""user"");"
236379,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/logviewer/handler/LogviewerLogDownloadHandlerTest.java,49,,"            Response topoAResponse = handler.downloadLogFile(""host"", ""topoA/1111/worker.log"", ""user"");"
236380,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/logviewer/handler/LogviewerLogPageHandlerTest.java,55,,"        File file1 = new File(String.join(File.separator, rootPath, ""topoA"", ""1111""), ""worker.log"");"
236381,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/logviewer/handler/LogviewerLogPageHandlerTest.java,55,,"        File file1 = new File(String.join(File.separator, rootPath, ""topoA"", ""1111""), ""worker.log"");"
236382,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/logviewer/handler/LogviewerLogPageHandlerTest.java,90,,"        final Response returnedAll = handler.listLogFiles(""user"", null, null, null, origin);"
236383,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/logviewer/handler/LogviewerLogSearchHandlerTest.java,73,,"        private final String pattern = ""needle"";"
236384,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/logviewer/handler/LogviewerLogSearchHandlerTest.java,132,,"        @SuppressWarnings(""checkstyle:LineLength"")"
236385,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/logviewer/handler/LogviewerLogSearchHandlerTest.java,142,,"                final File file = new File(String.join(File.separator, ""src"", ""test"", ""resources""),"
236386,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/logviewer/handler/LogviewerLogSearchHandlerTest.java,142,,"                final File file = new File(String.join(File.separator, ""src"", ""test"", ""resources""),"
236387,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/logviewer/handler/LogviewerLogSearchHandlerTest.java,142,,"                final File file = new File(String.join(File.separator, ""src"", ""test"", ""resources""),"
236388,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/logviewer/handler/LogviewerLogSearchHandlerTest.java,146,,"                expected.put(""isDaemon"", ""no"");"
236389,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/logviewer/handler/LogviewerLogSearchHandlerTest.java,147,,"                expected.put(""searchString"", pattern);"
236390,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/logviewer/handler/LogviewerLogSearchHandlerTest.java,148,,"                expected.put(""startByteOffset"", 0);"
236391,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/logviewer/handler/LogviewerLogSearchHandlerTest.java,155,,"                    ""/api/v1/log?file=test"" + encodedFileSeparator() + ""resources"" + encodedFileSeparator() + file.getName()"
236392,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/logviewer/handler/LogviewerLogSearchHandlerTest.java,156,,"                    + ""&start=0&length=51200"""
236393,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/logviewer/handler/LogviewerLogSearchHandlerTest.java,182,,"                expected.put(""matches"", matches);"
236394,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/logviewer/handler/LogviewerLogSearchHandlerTest.java,317,,"                    ""test-worker.log.test"");"
236395,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/logviewer/handler/LogviewerLogSearchHandlerTest.java,339,,"                    assertEquals(data.v3(), result.get(""nextByteOffset""));"
236396,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/logviewer/handler/LogviewerLogSearchHandlerTest.java,648,,"            new File(topoPath.toFile(), ""6700"").createNewFile();"
236397,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/logviewer/handler/LogviewerLogSearchHandlerTest.java,669,,"            handler.deepSearchLogsForTopology("""", null, ""search"", ""20"", ""*"", ""20"", ""199"", true, null, null);"
236398,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/logviewer/handler/LogviewerProfileHandlerTest.java,49,,"            Response topoAResponse = handler.listDumpFiles(""topoA"", ""localhost:1111"", ""user"");"
236399,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/logviewer/handler/LogviewerProfileHandlerTest.java,49,,"            Response topoAResponse = handler.listDumpFiles(""topoA"", ""localhost:1111"", ""user"");"
236400,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/logviewer/handler/LogviewerProfileHandlerTest.java,56,,"            assertThat(contentA, containsString(""worker.jfr""));"
236401,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/logviewer/handler/LogviewerProfileHandlerTest.java,58,,"            assertThat(contentA, not(containsString(""worker.txt"")));"
236402,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/logviewer/utils/ResourceAuthorizerTest.java,54,,"        conf.put(NIMBUS_ADMINS, Collections.singletonList(""alice""));"
236403,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/logviewer/utils/ResourceAuthorizerTest.java,63,,"        assertTrue(authorizer.isAuthorizedLogUser(""alice"", ""non-blank-fname""));"
236404,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/logviewer/utils/ResourceAuthorizerTest.java,77,,"        conf.put(TOPOLOGY_GROUPS, Collections.singletonList(""alice-group""));"
236405,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/ui/UIHelpersTest.java,140,,"            ""spp"""
236406,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/ui/UIHelpersTest.java,144,,"        assertNotNull(result, ""Should never return null"");"
236407,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/ui/UIHelpersTest.java,151,,"        assertEquals(expectedBoltId, boltResult.get(""boltId""));"
236408,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/ui/UIHelpersTest.java,155,,"        assertEquals(expectedErrorMsg, boltResult.get(""lastError""));"
236409,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/ui/UIHelpersTest.java,156,,"        assertEquals(expectedErrorPort, boltResult.get(""errorPort""));"
236410,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/ui/UIHelpersTest.java,157,,"        assertEquals(expectedErrorHost, boltResult.get(""errorHost""));"
236411,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/ui/UIHelpersTest.java,158,,"        assertEquals(expectedErrorTime, boltResult.get(""errorTime""));"
236412,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/ui/UIHelpersTest.java,159,,"        assertEquals(expectedErrorElapsedTime, boltResult.get(""errorLapsedSecs""));"
236413,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/ui/UIHelpersTest.java,200,,"        assertTrue(boltResult.containsKey(""errorWorkerLogLink""));"
236414,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/ui/UIHelpersTest.java,282,,"        assertEquals(String.format(""%.3f"", expectedExecuteLatency), boltResult.get(""executeLatency""));"
236415,./TargetProjects/storm/storm-webapp/src/test/java/org/apache/storm/daemon/ui/UIHelpersTest.java,346,,"        assertEquals(expectedSpoutId, spoutResult.get(""spoutId""));"
236416,./TargetProjects/streams/streams-components/streams-converters/src/test/java/org/apache/streams/converter/test/CustomActivityConverterProcessorTest.java,61,,"        testDocument.setTest(""testValue"");"
236417,./TargetProjects/streams/streams-components/streams-converters/src/test/java/org/apache/streams/converter/test/CustomActivityObjectConverterProcessorTest.java,60,,"        testDocument.setTest(""testValue"");"
236418,./TargetProjects/streams/streams-components/streams-converters/src/test/java/org/apache/streams/converter/test/TestLineReadWriteUtil.java,62,,"                .withFields(Collections.singletonList(""DOC""))"
236419,./TargetProjects/streams/streams-components/streams-filters/src/test/java/org/apache/streams/filters/test/VerbDefinitionFilterTest.java,47,,"        VerbDefinition definition = mapper.readValue(VerbDefinitionFilterTest.class.getResourceAsStream(""/post.json""), VerbDefinition.class);"
236420,./TargetProjects/streams/streams-components/streams-filters/src/test/java/org/apache/streams/filters/test/VerbDefinitionFilterTest.java,50,,"        StreamsDatum datum1 = new StreamsDatum(mapper.readValue(""{\""id\"":\""1\"",\""verb\"":\""notpost\""}\n"", Activity.class));"
236421,./TargetProjects/streams/streams-components/streams-filters/src/test/java/org/apache/streams/filters/test/VerbDefinitionFilterTest.java,53,,"        StreamsDatum datum2 = new StreamsDatum(mapper.readValue(""{\""id\"":\""1\"",\""verb\"":\""post\""}\n"", Activity.class));"
236422,./TargetProjects/streams/streams-components/streams-filters/src/test/java/org/apache/streams/filters/test/VerbDefinitionFilterTest.java,66,,"        StreamsDatum datum1 = new StreamsDatum(mapper.readValue(""{\""id\"":\""1\"",\""verb\"":\""post\"",\""provider\"":{\""id\"":\""providerId\"",\""objectType\"":\""product\""}}\n"", Activity.class));"
236423,./TargetProjects/streams/streams-components/streams-filters/src/test/java/org/apache/streams/filters/test/VerbDefinitionFilterTest.java,69,,"        StreamsDatum datum2 = new StreamsDatum(mapper.readValue(""{\""id\"":\""1\"",\""verb\"":\""post\"",\""provider\"":{\""id\"":\""providerId\"",\""objectType\"":\""application\""}}\n\n"", Activity.class));"
236424,./TargetProjects/streams/streams-components/streams-filters/src/test/java/org/apache/streams/filters/test/VerbDefinitionFilterTest.java,82,,"        StreamsDatum datum1 = new StreamsDatum(mapper.readValue(""{\""id\"":\""1\"",\""verb\"":\""post\"",\""actor\"":{\""id\"":\""actorId\"",\""objectType\"":\""page\""}}\n"", Activity.class));"
236425,./TargetProjects/streams/streams-components/streams-filters/src/test/java/org/apache/streams/filters/test/VerbDefinitionFilterTest.java,135,,"        StreamsDatum datum1 = new StreamsDatum(mapper.readValue(""{\""id\"":\""id\"",\""verb\"":\""post\"",\""object\"":{\""id\"":\""objectId\"",\""objectType\"":\""task\""}}\n"", Activity.class));"
236426,./TargetProjects/streams/streams-components/streams-filters/src/test/java/org/apache/streams/filters/test/VerbDefinitionFilterTest.java,138,,"        StreamsDatum datum2 = new StreamsDatum(mapper.readValue(""{\""id\"":\""id\"",\""verb\"":\""post\"",\""target\"":{\""id\"":\""targetId\"",\""objectType\"":\""group\""}}\n"", Activity.class));"
236427,./TargetProjects/streams/streams-components/streams-http/src/main/java/org/apache/streams/components/http/processor/SimpleHTTPPostProcessor.java,103,,"      LOGGER.warn(""IOException"", ex);"
236428,./TargetProjects/streams/streams-config/src/test/java/org/apache/streams/config/test/ComponentConfiguratorTest.java,60,,"    Config testConfig = ConfigFactory.load(""componentTest"");"
236429,./TargetProjects/streams/streams-config/src/test/java/org/apache/streams/config/test/ComponentConfiguratorTest.java,69,,"    ComponentConfiguration configuredPojo = configurator.detectConfiguration(testConfig.getConfig(""configuredComponent""));"
236430,./TargetProjects/streams/streams-config/src/test/java/org/apache/streams/config/test/ComponentConfiguratorTest.java,201,,"    Assert.assertThat(configuredPojo.getInClasses().get(0), equalTo(""java.lang.Object""));"
236431,./TargetProjects/streams/streams-config/src/test/java/org/apache/streams/config/test/StreamsConfigurationForTesting.java,29,,"  @JsonProperty(""componentOne"")"
236432,./TargetProjects/streams/streams-config/src/test/java/org/apache/streams/config/test/StreamsConfigurationForTesting.java,33,,"  @JsonProperty(""componentTwo"")"
236433,./TargetProjects/streams/streams-contrib/streams-persist-elasticsearch/src/main/java/org/apache/streams/elasticsearch/ElasticsearchMetadataUtil.java,45,,"    if ( metadata != null && metadata.containsKey(""index"")) {"
236434,./TargetProjects/streams/streams-contrib/streams-persist-elasticsearch/src/main/java/org/apache/streams/elasticsearch/ElasticsearchMetadataUtil.java,89,,"    if ( metadata != null && metadata.containsKey(""type"")) {"
236435,./TargetProjects/streams/streams-contrib/streams-persist-elasticsearch/src/test/java/org/apache/streams/elasticsearch/test/ElasticsearchPersistUpdaterIT.java,120,,"      update.setAdditionalProperty(""str"", ""str"");"
236436,./TargetProjects/streams/streams-contrib/streams-persist-hdfs/src/test/java/org/apache/streams/hdfs/test/HdfsPersistConfigTest.java,46,,"    writerConfiguration.setPath(""path"");"
236437,./TargetProjects/streams/streams-contrib/streams-persist-hdfs/src/test/java/org/apache/streams/hdfs/test/HdfsPersistConfigTest.java,56,,"      Assert.fail(""URI Syntax"");"
236438,./TargetProjects/streams/streams-contrib/streams-persist-hdfs/src/test/java/org/apache/streams/hdfs/test/HdfsPersistConfigTest.java,67,,"    writerConfiguration.setHost(""localhost"");"
236439,./TargetProjects/streams/streams-contrib/streams-persist-neo4j/src/main/java/org/apache/streams/neo4j/CypherQueryGraphHelper.java,121,,"      createVertex.add(""labels"", String.join("" "", labels));"
236440,./TargetProjects/streams/streams-contrib/streams-persist-neo4j/src/main/java/org/apache/streams/neo4j/http/Neo4jHttpPersistWriter.java,126,,"              result.get(""errors"") != null"
236441,./TargetProjects/streams/streams-contrib/streams-persist-neo4j/src/test/java/org/apache/streams/neo4j/test/TestCypherQueryGraphHelper.java,63,,"    activityObject.setObjectType(""type"");"
236442,./TargetProjects/streams/streams-contrib/streams-persist-neo4j/src/test/java/org/apache/streams/neo4j/test/TestCypherQueryGraphHelper.java,64,,"    activityObject.setContent(""content"");"
236443,./TargetProjects/streams/streams-contrib/streams-persist-riak/src/main/java/org/apache/streams/riak/binary/RiakBinaryPersistWriter.java,95,,"        && entry.getMetadata().containsKey(""bucket"")"
236444,./TargetProjects/streams/streams-contrib/streams-persist-riak/src/main/java/org/apache/streams/riak/binary/RiakBinaryPersistWriter.java,103,,"        && entry.getMetadata().containsKey(""bucketType"")"
236445,./TargetProjects/streams/streams-contrib/streams-persist-riak/src/main/java/org/apache/streams/riak/binary/RiakBinaryPersistWriter.java,111,,"        && entry.getMetadata().containsKey(""charset"")"
236446,./TargetProjects/streams/streams-contrib/streams-persist-riak/src/main/java/org/apache/streams/riak/binary/RiakBinaryPersistWriter.java,119,,"        && entry.getMetadata().containsKey(""contentType"")"
236447,./TargetProjects/streams/streams-contrib/streams-persist-riak/src/main/java/org/apache/streams/riak/http/RiakHttpPersistReader.java,94,,"      LOGGER.warn(""URISyntaxException"", e);"
236448,./TargetProjects/streams/streams-contrib/streams-persist-riak/src/main/java/org/apache/streams/riak/http/RiakHttpPersistReader.java,102,,"      LOGGER.warn(""IOException"", e);"
236449,./TargetProjects/streams/streams-contrib/streams-persist-riak/src/main/java/org/apache/streams/riak/http/RiakHttpPersistWriter.java,98,,"        && entry.getMetadata().containsKey(""bucket"")"
236450,./TargetProjects/streams/streams-contrib/streams-persist-riak/src/main/java/org/apache/streams/riak/http/RiakHttpPersistWriter.java,106,,"        && entry.getMetadata().containsKey(""bucketType"")"
236451,./TargetProjects/streams/streams-contrib/streams-persist-riak/src/main/java/org/apache/streams/riak/http/RiakHttpPersistWriter.java,114,,"        && entry.getMetadata().containsKey(""charset"")"
236452,./TargetProjects/streams/streams-contrib/streams-persist-riak/src/main/java/org/apache/streams/riak/http/RiakHttpPersistWriter.java,122,,"        && entry.getMetadata().containsKey(""contentType"")"
236453,./TargetProjects/streams/streams-contrib/streams-processor-fullcontact/src/main/java/org/apache/streams/fullcontact/FullContact.java,85,,"      .accept(""application/json"")"
236454,./TargetProjects/streams/streams-contrib/streams-processor-fullcontact/src/test/java/org/apache/streams/fullcontact/test/FullContactIT.java,106,,"        assertThat(""response contains a non-empty fullName"", StringUtils.isNotBlank(response.getFullName()));"
236455,./TargetProjects/streams/streams-contrib/streams-processor-peopledatalabs/src/main/java/org/apache/streams/peopledatalabs/PeopleDataLabs.java,90,,"      .accept(""application/json"")"
236456,./TargetProjects/streams/streams-contrib/streams-processor-regex/src/test/java/org/apache/streams/regex/RegexMentionExtractorTest.java,60,,"                  put(""displayName"", ""content"");"
236457,./TargetProjects/streams/streams-contrib/streams-processor-regex/src/test/java/org/apache/streams/regex/RegexUtilsTest.java,54,,"                {""#\\w+"", ""This is#freakingcrazydude."", 1, 0},"
236458,./TargetProjects/streams/streams-contrib/streams-processor-thedatagroup/src/main/java/org/apache/streams/thedatagroup/SyncAppend.java,29,,"  @RemoteMethod(method =""POST"", path=""/demographics"")"
236459,./TargetProjects/streams/streams-contrib/streams-processor-thedatagroup/src/main/java/org/apache/streams/thedatagroup/SyncLookup.java,32,,"  @RemoteMethod(method =""POST"", path=""/email"")"
236460,./TargetProjects/streams/streams-contrib/streams-processor-thedatagroup/src/main/java/org/apache/streams/thedatagroup/TheDataGroup.java,117,,"      LOGGER.error(""Exception"", e);"
236461,./TargetProjects/streams/streams-contrib/streams-processor-urls/src/test/java/org/apache/streams/urls/LinkHelperFunctionsTest.java,73,,"        assertEquals(""smashew.com: No need to wait"", 0, LinkResolverHelperFunctions.waitTimeForDomain(domain1));"
236462,./TargetProjects/streams/streams-contrib/streams-processor-urls/src/test/java/org/apache/streams/urls/TestLinkUnwinderProcessor.java,74,,"        testActivityUnwinderHelper(Collections.singletonList(""http://bit.ly/1cX5Rh4""), Collections.singletonList(""http://www.wcgworld.com/""));"
236463,./TargetProjects/streams/streams-contrib/streams-processor-urls/src/test/java/org/apache/streams/urls/TestLinkUnwinderProcessor.java,88,,"        testActivityUnwinderHelper(Collections.singletonList(""http://goo.gl/wSrHDA""), Collections.singletonList(""http://www.wcgworld.com/""));"
236464,./TargetProjects/streams/streams-contrib/streams-processor-urls/src/test/java/org/apache/streams/urls/TestLinkUnwinderProcessor.java,95,,"        testActivityUnwinderHelper(Collections.singletonList(""http://ow.ly/u4Kte""), Collections.singletonList(""http://www.wcgworld.com/""));"
236465,./TargetProjects/streams/streams-contrib/streams-processor-urls/src/test/java/org/apache/streams/urls/TestLinkUnwinderProcessor.java,102,,"        testActivityUnwinderHelper(Collections.singletonList(""http://x.co/3yapt""), Collections.singletonList(""http://www.wcgworld.com/""));"
236466,./TargetProjects/streams/streams-contrib/streams-provider-google/google-gplus/src/main/java/org/apache/streams/gplus/serializer/util/GPlusActivityDeserializer.java,60,,"      activity.setUrl(node.get(""url"").asText());"
236467,./TargetProjects/streams/streams-contrib/streams-provider-google/google-gplus/src/main/java/org/apache/streams/gplus/serializer/util/GPlusActivityDeserializer.java,91,,"    if( actorNode.has(""displayName"") ) {"
236468,./TargetProjects/streams/streams-contrib/streams-provider-google/google-gplus/src/main/java/org/apache/streams/gplus/serializer/util/GPlusActivityDeserializer.java,117,,"    if( node.has(""content"") ) {"
236469,./TargetProjects/streams/streams-contrib/streams-provider-google/google-gplus/src/main/java/org/apache/streams/gplus/serializer/util/GPlusEventClassifier.java,60,,"    if (objectNode.findValue(""kind"") != null && objectNode.get(""kind"").toString().equals(ACTIVITY_IDENTIFIER)) {"
236470,./TargetProjects/streams/streams-contrib/streams-provider-instagram/src/main/java/org/apache/streams/instagram/api/Instagram.java,134,,"      uriBuilder.addParameter(""access_token"", configuration.getOauth().getAccessToken());"
236471,./TargetProjects/streams/streams-contrib/streams-provider-instagram/src/main/java/org/apache/streams/instagram/api/Instagram.java,136,,"      uriBuilder.addParameter(""sig"", sig);"
236472,./TargetProjects/streams/streams-contrib/streams-provider-instagram/src/main/java/org/apache/streams/instagram/api/Instagram.java,144,,"        LOGGER.warn(""RestCallException"", ex);"
236473,./TargetProjects/streams/streams-contrib/streams-provider-instagram/src/main/java/org/apache/streams/instagram/api/Instagram.java,147,,"      LOGGER.warn(""IOException"", ex);"
236474,./TargetProjects/streams/streams-contrib/streams-provider-instagram/src/main/java/org/apache/streams/instagram/api/Instagram.java,149,,"      LOGGER.warn(""URISyntaxException"", ex);"
236475,./TargetProjects/streams/streams-contrib/streams-provider-instagram/src/main/java/org/apache/streams/instagram/api/Instagram.java,151,,"      LOGGER.warn(""Exception"", ex);"
236476,./TargetProjects/streams/streams-contrib/streams-provider-instagram/src/main/java/org/apache/streams/instagram/api/Instagram.java,198,,"        uriBuilder.addParameter(""count"", parameters.getCount().toString());"
236477,./TargetProjects/streams/streams-contrib/streams-provider-moreover/src/main/java/org/apache/streams/moreover/MoreoverClient.java,94,,"    BufferedReader reader = new BufferedReader(new InputStreamReader(cn.getInputStream(), Charset.forName(""UTF-8"")));"
236478,./TargetProjects/streams/streams-contrib/streams-provider-rss/src/main/java/org/apache/streams/rss/serializer/SyndEntrySerializer.java,70,,"    serializeString(entry.getTitle(), ""title"", root);"
236479,./TargetProjects/streams/streams-contrib/streams-provider-rss/src/main/java/org/apache/streams/rss/serializer/SyndEntrySerializer.java,91,,"          catNode.put(""value"", category.getValue());"
236480,./TargetProjects/streams/streams-contrib/streams-provider-rss/src/main/java/org/apache/streams/rss/serializer/SyndEntrySerializer.java,124,,"        content.put(""type"", rssContent.getType());"
236481,./TargetProjects/streams/streams-contrib/streams-provider-rss/src/main/java/org/apache/streams/rss/serializer/SyndEntrySerializer.java,251,,"      root.put(""links"", factory.arrayNode());"
236482,./TargetProjects/streams/streams-contrib/streams-provider-rss/src/test/java/org/apache/streams/rss/provider/RssStreamProviderTaskIT.java,50,,"    RssStreamProviderTask task = new RssStreamProviderTask(queue, ""fake url"");"
236483,./TargetProjects/streams/streams-contrib/streams-provider-rss/src/test/java/org/apache/streams/rss/provider/RssStreamProviderTaskIT.java,51,,"    Set<String> batch = task.queueFeedEntries(new URL(""resource:///test_rss_xml/economist1.xml""));"
236484,./TargetProjects/streams/streams-contrib/streams-provider-sprinklr/src/main/java/org/apache/streams/sprinklr/Sprinklr.java,90,,"        .accept(""application/json"")"
236485,./TargetProjects/streams/streams-contrib/streams-provider-sysomos/src/main/java/org/apache/streams/sysomos/conversion/SysomosBeatActivityConverter.java,56,,"    converted.setVerb(""post"");"
236486,./TargetProjects/streams/streams-contrib/streams-provider-twitter/src/main/java/org/apache/streams/twitter/api/AccountActivity.java,47,,"  @RemoteMethod(method = ""GET"", path = ""/all/webhooks.json"")"
236487,./TargetProjects/streams/streams-contrib/streams-provider-twitter/src/main/java/org/apache/streams/twitter/api/AccountActivity.java,59,,"  public List<Webhook> getWebhooks(@Path(""env_name"") String env_name);"
236488,./TargetProjects/streams/streams-contrib/streams-provider-twitter/src/main/java/org/apache/streams/twitter/api/DirectMessages.java,47,,"  @RemoteMethod(method = ""GET"", path = ""/events/list.json"")"
236489,./TargetProjects/streams/streams-contrib/streams-provider-twitter/src/main/java/org/apache/streams/twitter/api/Friendships.java,68,,"  @RemoteMethod(method =""GET"", path = ""/incoming.json"")"
236490,./TargetProjects/streams/streams-contrib/streams-provider-twitter/src/main/java/org/apache/streams/twitter/api/Statuses.java,48,,"  @RemoteMethod(method =""GET"", path = ""/home_timeline.json"")"
236491,./TargetProjects/streams/streams-contrib/streams-provider-twitter/src/main/java/org/apache/streams/twitter/api/Twitter.java,170,,"    Statuses restStatuses = restClient.getRemoteResource(Statuses.class, TwitterProviderUtil.baseUrl(configuration)+""/statuses"");"
236492,./TargetProjects/streams/streams-contrib/streams-provider-twitter/src/main/java/org/apache/streams/twitter/api/Twitter.java,247,,"    Users restUsers = restClient.getRemoteResource(Users.class, TwitterProviderUtil.baseUrl(configuration)+""/users"");"
236493,./TargetProjects/streams/streams-contrib/streams-provider-twitter/src/main/java/org/apache/streams/twitter/api/Twitter.java,299,,"    WelcomeMessages proxy = restClient.getRemoteResource(WelcomeMessages.class, TwitterProviderUtil.baseUrl(configuration)+""/direct_messages/welcome_messages"");"
236494,./TargetProjects/streams/streams-contrib/streams-provider-twitter/src/main/java/org/apache/streams/twitter/api/Twitter.java,323,,"    WelcomeMessageRules proxy = restClient.getRemoteResource(WelcomeMessageRules.class, TwitterProviderUtil.baseUrl(configuration)+""/direct_messages/welcome_messages/rules"");"
236495,./TargetProjects/streams/streams-contrib/streams-provider-twitter/src/main/java/org/apache/streams/twitter/api/Twitter.java,347,,"    AccountActivity proxy = restClient.getRemoteResource(AccountActivity.class, TwitterProviderUtil.baseUrl(configuration)+""/account_activity"");"
236496,./TargetProjects/streams/streams-contrib/streams-provider-twitter/src/main/java/org/apache/streams/twitter/api/Twitter.java,379,,"              .setPath(""/account_activity/all/""+env_name+""/webhooks/""+webhookId+"".json"");"
236497,./TargetProjects/streams/streams-contrib/streams-provider-twitter/src/main/java/org/apache/streams/twitter/api/Twitter.java,386,,"        LOGGER.warn(""RestCallException"", e);"
236498,./TargetProjects/streams/streams-contrib/streams-provider-twitter/src/main/java/org/apache/streams/twitter/api/Twitter.java,389,,"      LOGGER.warn(""IOException"", e);"
236499,./TargetProjects/streams/streams-contrib/streams-provider-twitter/src/main/java/org/apache/streams/twitter/api/Twitter.java,391,,"      LOGGER.warn(""URISyntaxException"", e);"
236500,./TargetProjects/streams/streams-contrib/streams-provider-twitter/src/main/java/org/apache/streams/twitter/provider/TwitterUserInformationProvider.java,303,,"      LOGGER.info(""Thread Submitted: {}"", providerTask.request);"
236501,./TargetProjects/streams/streams-contrib/streams-provider-twitter/src/test/java/org/apache/streams/twitter/test/api/TwitterIT.java,127,,"  @Test(dependsOnGroups = {""AccountVerifyCredentials""}, groups = {""Account""})"
236502,./TargetProjects/streams/streams-contrib/streams-provider-twitter/src/test/java/org/apache/streams/twitter/test/api/TwitterIT.java,189,,"  @Test(dependsOnGroups = {""Account""}, groups = {""Statuses"",""StatusesHomeTimeline""})"
236503,./TargetProjects/streams/streams-contrib/streams-provider-twitter/src/test/java/org/apache/streams/twitter/test/api/TwitterIT.java,258,,"  @Test(dependsOnGroups = {""Account""}, groups = {""Users""})"
236504,./TargetProjects/streams/streams-contrib/streams-provider-twitter/src/test/java/org/apache/streams/twitter/test/api/TwitterSecurityTest.java,64,,"    testParamMap.put(""oauth_consumer_key"", ""xvz1evFS4wEEPTGEFPHBog"");"
236505,./TargetProjects/streams/streams-contrib/streams-provider-twitter/src/test/java/org/apache/streams/twitter/test/api/TwitterSecurityTest.java,65,,"    testParamMap.put(""oauth_nonce"", ""kYjzVBB8Y0ZFabxSWbWovY3uYSQ2pTgmZeNu2VS4cg"");"
236506,./TargetProjects/streams/streams-contrib/streams-provider-twitter/src/test/java/org/apache/streams/twitter/test/api/TwitterSecurityTest.java,67,,"    testParamMap.put(""oauth_timestamp"", ""1318622958"");"
236507,./TargetProjects/streams/streams-contrib/streams-provider-twitter/src/test/java/org/apache/streams/twitter/test/api/TwitterSecurityTest.java,68,,"    testParamMap.put(""oauth_token"", ""370773112-GmHxMAgYyLbNEtIKZeRNFsMKPR9EyMZeS9weJAEb"");"
236508,./TargetProjects/streams/streams-contrib/streams-provider-youtube/src/main/java/org/apache/streams/youtube/serializer/YoutubeEventClassifier.java,54,,"    if (objectNode.findValue(""kind"") != null && objectNode.get(""kind"").toString().equals(VIDEO_IDENTIFIER)) {"
236509,./TargetProjects/streams/streams-contrib/streams-provider-youtube/src/test/java/org/apache/streams/youtube/provider/YoutubeProviderTest.java,65,,"    config.setApiKey(""API_KEY"");"
236510,./TargetProjects/streams/streams-monitoring/src/main/java/org/apache/streams/monitoring/tasks/BroadcastMonitorThread.java,128,,"          if (name.getKeyPropertyList().get(""type"") != null) {"
236511,./TargetProjects/streams/streams-plugins/streams-plugin-cassandra/src/main/java/org/apache/streams/plugins/cassandra/StreamsCassandraResourceGenerator.java,214,,"            if ( itemsNode.has(""$ref"") || itemsNode.has(""extends"") ) {"
236512,./TargetProjects/streams/streams-plugins/streams-plugin-cassandra/src/main/java/org/apache/streams/plugins/cassandra/StreamsCassandraResourceGenerator.java,214,,"            if ( itemsNode.has(""$ref"") || itemsNode.has(""extends"") ) {"
236513,./TargetProjects/streams/streams-plugins/streams-plugin-elasticsearch/src/main/java/org/apache/streams/plugins/elasticsearch/StreamsElasticsearchResourceGenerator.java,224,,"            if ( itemsNode.has(""$ref"") || itemsNode.has(""extends"") ) {"
236514,./TargetProjects/streams/streams-plugins/streams-plugin-elasticsearch/src/main/java/org/apache/streams/plugins/elasticsearch/StreamsElasticsearchResourceGenerator.java,224,,"            if ( itemsNode.has(""$ref"") || itemsNode.has(""extends"") ) {"
236515,./TargetProjects/streams/streams-plugins/streams-plugin-scala/src/main/java/org/apache/streams/plugins/StreamsScalaSourceGenerator.java,153,,"      String pojoPath = clazz.getPackage().getName().replace("".pojo.json"", "".scala"").replace(""."",""/"") + ""/traits/"";"
236516,./TargetProjects/streams/streams-plugins/streams-plugin-scala/src/main/java/org/apache/streams/plugins/StreamsScalaSourceGenerator.java,153,,"      String pojoPath = clazz.getPackage().getName().replace("".pojo.json"", "".scala"").replace(""."",""/"") + ""/traits/"";"
236517,./TargetProjects/streams/streams-plugins/streams-plugin-scala/src/test/java/org/apache/streams/plugins/test/StreamsScalaSourceGeneratorTest.java,70,,"    assertTrue( new File(testOutput + ""/traits"").exists() );"
236518,./TargetProjects/streams/streams-plugins/streams-plugin-scala/src/test/java/org/apache/streams/plugins/test/StreamsScalaSourceGeneratorTest.java,74,,"    assertTrue( new File(testOutput + ""/objectTypes"").exists() );"
236519,./TargetProjects/streams/streams-plugins/streams-plugin-scala/src/test/java/org/apache/streams/plugins/test/StreamsScalaSourceGeneratorTest.java,78,,"    assertTrue( new File(testOutput + ""/verbs"").exists() );"
236520,./TargetProjects/streams/streams-pojo/src/main/java/org/apache/streams/juneau/DateSwap.java,54,,"    if( StringUtils.isNotBlank(session.getProperty(""format"", String.class, RFC3339Utils.UTC_STANDARD_FMT.toString()))) {"
236521,./TargetProjects/streams/streams-pojo/src/main/java/org/apache/streams/juneau/JodaDateSwap.java,50,,"    if( StringUtils.isNotBlank(session.getProperty(""format"", String.class, RFC3339Utils.UTC_STANDARD_FMT.toString()))) {"
236522,./TargetProjects/streams/streams-runtimes/streams-runtime-local/src/test/java/org/apache/streams/local/builders/LocalStreamBuilderTest.java,175,,"      builder.newPerpetualStream(""numeric_provider"", new NumericMessageProvider(numDatums));"
236523,./TargetProjects/streams/streams-runtimes/streams-runtime-local/src/test/java/org/apache/streams/local/builders/LocalStreamBuilderTest.java,186,,"      builder.addStreamsPersistWriter(""writer"", new DatumCounterWriter(""writer""), 1, processorId+(numProcessors-1));"
236524,./TargetProjects/streams/streams-runtimes/streams-runtime-local/src/test/java/org/apache/streams/local/builders/LocalStreamBuilderTest.java,247,,"      StreamsProcessor processor1 = new PassthroughDatumCounterProcessor(""proc1"");"
236525,./TargetProjects/streams/streams-runtimes/streams-runtime-local/src/test/java/org/apache/streams/local/builders/LocalStreamBuilderTest.java,248,,"      StreamsProcessor processor2 = new PassthroughDatumCounterProcessor(""proc2"");"
236526,./TargetProjects/streams/streams-runtimes/streams-runtime-local/src/test/java/org/apache/streams/local/builders/LocalStreamBuilderTest.java,272,,"      builder.newPerpetualStream(""prov1"", new NumericMessageProvider(numDatums))"
236527,./TargetProjects/streams/streams-runtimes/streams-runtime-local/src/test/java/org/apache/streams/local/tasks/BasicTasksTest.java,83,,"        fail(""Provider task failed to output ""+numMessages+"" in a timely fashion."");"
236528,./TargetProjects/streams/streams-runtimes/streams-runtime-local/src/test/java/org/apache/streams/local/tasks/BasicTasksTest.java,90,,"        fail(""Service did not terminate."");"
236529,./TargetProjects/streams/streams-runtimes/streams-runtime-local/src/test/java/org/apache/streams/local/tasks/BasicTasksTest.java,92,,"      assertTrue(""Task should have completed running in allotted time."", service.isTerminated());"
236530,./TargetProjects/streams/streams-runtimes/streams-runtime-local/src/test/java/org/apache/streams/local/tasks/BasicTasksTest.java,117,,"        fail(""Processor task failed to output ""+numMessages+"" in a timely fashion."");"
236531,./TargetProjects/streams/streams-runtimes/streams-runtime-local/src/test/java/org/apache/streams/local/tasks/BasicTasksTest.java,129,,"      fail(""Test Interrupted."");"
236532,./TargetProjects/streams/streams-schemas/streams-schema-activitystreams2/src/test/java/org/w3c/activitystreams/test/ExamplesSerDeIT.java,60,,"        String testFileString = new String(Files.readAllBytes(Paths.get(""target/test-classes/w3c/activitystreams-master/test/"" + file)));"
236533,./TargetProjects/streams/streams-schemas/streams-schema-activitystreams2/src/test/java/org/w3c/activitystreams/test/ExamplesSerDeIT.java,61,,"        LOGGER.info(""Content: "" + testFileString);"
236534,./TargetProjects/streams/streams-schemas/streams-schema-activitystreams2/src/test/java/org/w3c/activitystreams/test/ExamplesSerDeIT.java,63,,"        LOGGER.info(""Object:"" + testFileObjectNode);"
236535,./TargetProjects/streams/streams-util/src/main/java/org/apache/streams/util/schema/SchemaStoreImpl.java,69,,"        if ( baseNode.has(""extends"") && baseNode.get(""extends"").isObject()) {"
236536,./TargetProjects/streams/streams-util/src/main/java/org/apache/streams/util/schema/SchemaStoreImpl.java,70,,"          URI ref = URI.create((baseNode.get(""extends"")).get(""$ref"").asText());"
236537,./TargetProjects/streams/streams-util/src/main/java/org/apache/streams/util/schema/SchemaStoreImpl.java,202,,"      if (schemaContent.has(""properties"")) {"
236538,./TargetProjects/streams/streams-util/src/main/java/org/apache/streams/util/schema/SchemaStoreImpl.java,272,,"      if ( schemaContent.has(""items"") ) {"
236539,./TargetProjects/streams/streams-util/src/test/java/org/apache/streams/util/test/PropertyUtilTest.java,50,,"    node.put(""objectType"", ""post"");"
236540,./TargetProjects/streams/streams-util/src/test/java/org/apache/streams/util/test/PropertyUtilTest.java,50,,"    node.put(""objectType"", ""post"");"
236541,./TargetProjects/streams/streams-util/src/test/java/org/apache/streams/util/test/PropertyUtilTest.java,51,,"    node.putArray(""links"").add(""link1"");"
236542,./TargetProjects/streams/streams-util/src/test/java/org/apache/streams/util/test/PropertyUtilTest.java,52,,"    node.putObject(""actor"").put(""id"", ""leftId"").putObject(""author"").put(""id"", ""authorId"");"
236543,./TargetProjects/streams/streams-util/src/test/java/org/apache/streams/util/test/PropertyUtilTest.java,52,,"    node.putObject(""actor"").put(""id"", ""leftId"").putObject(""author"").put(""id"", ""authorId"");"
236544,./TargetProjects/streams/streams-util/src/test/java/org/apache/streams/util/test/PropertyUtilTest.java,52,,"    node.putObject(""actor"").put(""id"", ""leftId"").putObject(""author"").put(""id"", ""authorId"");"
236545,./TargetProjects/streams/streams-util/src/test/java/org/apache/streams/util/test/PropertyUtilTest.java,53,,"    node.putObject(""extensions"");"
236546,./TargetProjects/struts/apps/rest-showcase/src/main/java/org/demo/rest/example/OrdersController.java,35,,"    @Result(name=""success"", type=""redirectAction"", params = {""actionName"" , ""orders""})"
236547,./TargetProjects/struts/apps/rest-showcase/src/test/java/it/org/apache/struts2/rest/example/PostOrderTest.java,42,,"        setTextField(""amount"", ""321"");"
236548,./TargetProjects/struts/apps/rest-showcase/src/test/java/it/org/apache/struts2/rest/example/PostOrderTest.java,42,,"        setTextField(""amount"", ""321"");"
236549,./TargetProjects/struts/apps/rest-showcase/src/test/java/it/org/apache/struts2/rest/example/PostOrderTest.java,84,,"        assertTrue(response.getHeaders(""Location"")[0].getValue().startsWith(ParameterUtils.getBaseUrl() + ""/orders/""));"
236550,./TargetProjects/struts/apps/showcase/src/main/java/org/apache/struts2/showcase/chat/ChatServiceImpl.java,82,,"			throw new ChatException(""No such room exists ["" + roomName + ""]"", ChatException.ErrorType.NO_SUCH_ROOM_EXISTS);"
236551,./TargetProjects/struts/apps/showcase/src/main/java/org/apache/struts2/showcase/token/TokenAction.java,40,,"		Integer balSource = (Integer) ActionContext.getContext().getSession().get(""balanceSource"");"
236552,./TargetProjects/struts/apps/showcase/src/main/java/org/apache/struts2/showcase/token/TokenAction.java,41,,"		Integer balDest = (Integer) ActionContext.getContext().getSession().get(""balanceDestination"");"
236553,./TargetProjects/struts/apps/showcase/src/test/java/it/org/apache/struts2/showcase/UITagExampleTest.java,44,,"            final HtmlTextInput textField = form.getInputByName(""name"");"
236554,./TargetProjects/struts/apps/showcase/src/test/java/it/org/apache/struts2/showcase/UITagExampleTest.java,45,,"            final HtmlTextArea textField2 = form.getTextAreaByName(""bio"");"
236555,./TargetProjects/struts/core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java,286,,"        builder.constant(StrutsConstants.STRUTS_DEVMODE, ""false"");"
236556,./TargetProjects/struts/core/src/main/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProvider.java,210,,"                        String name = child.getAttribute(""name"");"
236557,./TargetProjects/struts/core/src/main/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProvider.java,211,,"                        String impl = child.getAttribute(""class"");"
236558,./TargetProjects/struts/core/src/main/java/com/opensymphony/xwork2/conversion/impl/NumberConverter.java,54,,"                    throw new TypeConversionException(""Overflow or underflow casting: \"""" + stringValue + ""\"" into class "" + convertedValue.getClass().getName());"
236559,./TargetProjects/struts/core/src/main/java/com/opensymphony/xwork2/conversion/impl/NumberConverter.java,70,,"                    throw new TypeConversionException(""Unparseable number: \"""" + stringValue + ""\"" at position """
236560,./TargetProjects/struts/core/src/main/java/com/opensymphony/xwork2/conversion/impl/NumberConverter.java,70,,"                    throw new TypeConversionException(""Unparseable number: \"""" + stringValue + ""\"" at position """
236561,./TargetProjects/struts/core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,182,,"            throw new TypeConversionException(""TypeConverter with name [#0] must be registered first! Converter: ""+ StrutsConstants.STRUTS_CONVERTER_COLLECTION);"
236562,./TargetProjects/struts/core/src/main/java/com/opensymphony/xwork2/inject/ContainerImpl.java,57,,"    @SuppressWarnings(""unchecked"")"
236563,./TargetProjects/struts/core/src/main/java/com/opensymphony/xwork2/util/AbstractLocalizedTextProvider.java,207,,"                LOG.warn(""Missing key [{}] in bundle [{}]!"", aTextName, bundle);"
236564,./TargetProjects/struts/core/src/main/java/com/opensymphony/xwork2/util/finder/ResourceFinder.java,87,,"            if (url == null || isDirectory(url) || ""jar"".equals(url.getProtocol())) {"
236565,./TargetProjects/struts/core/src/main/java/com/opensymphony/xwork2/util/finder/ResourceFinder.java,150,,"            LOG.trace(""Null resources URL enumeration for [{}], should not be possible!"", uri);"
236566,./TargetProjects/struts/core/src/main/java/com/opensymphony/xwork2/util/finder/ResourceFinder.java,151,,"            throw new IllegalStateException(""Null resources URL enumeration produced for uri: "" + uri);"
236567,./TargetProjects/struts/core/src/main/java/com/opensymphony/xwork2/util/finder/ResourceFinder.java,281,,"            LOG.trace(""Null resources URL map for [{}], should not be possible!"", uri);"
236568,./TargetProjects/struts/core/src/main/java/com/opensymphony/xwork2/util/finder/ResourceFinder.java,282,,"            throw new IllegalStateException(""Null resources URL map produced for uri: "" + uri);"
236569,./TargetProjects/struts/core/src/main/java/com/opensymphony/xwork2/util/finder/ResourceFinder.java,388,,"            LOG.trace(""Null strings list for [{}], should not be possible!"", uri);"
236570,./TargetProjects/struts/core/src/main/java/com/opensymphony/xwork2/util/finder/ResourceFinder.java,467,,"            LOG.trace(""Null strings map for [{}], should not be possible!"", uri);"
236571,./TargetProjects/struts/core/src/main/java/com/opensymphony/xwork2/util/finder/ResourceFinder.java,1057,,"                } else if (""file"".equals(location.getProtocol())) {"
236572,./TargetProjects/struts/core/src/main/java/com/opensymphony/xwork2/util/finder/UrlSet.java,242,,"        ArrayList<URL> urls = Collections.list(classLoader.getResources(""META-INF""));"
236573,./TargetProjects/struts/core/src/main/java/com/opensymphony/xwork2/validator/AnnotationValidationConfigurationBuilder.java,377,,"        String validatorType = ""expression"";"
236574,./TargetProjects/struts/core/src/main/java/com/opensymphony/xwork2/validator/AnnotationValidationConfigurationBuilder.java,382,,"            params.put(""fieldName"", fieldName);"
236575,./TargetProjects/struts/core/src/main/java/com/opensymphony/xwork2/validator/AnnotationValidationConfigurationBuilder.java,390,,"                .addParam(""methodName"", methodName)"
236576,./TargetProjects/struts/core/src/main/java/com/opensymphony/xwork2/validator/AnnotationValidationConfigurationBuilder.java,662,,"            params.put(""min"", v.min());"
236577,./TargetProjects/struts/core/src/main/java/com/opensymphony/xwork2/validator/AnnotationValidationConfigurationBuilder.java,665,,"            params.put(""max"", v.max());"
236578,./TargetProjects/struts/core/src/main/java/com/opensymphony/xwork2/validator/AnnotationValidationConfigurationBuilder.java,668,,"            params.put(""maxExpression"", v.maxExpression());"
236579,./TargetProjects/struts/core/src/main/java/com/opensymphony/xwork2/validator/AnnotationValidationConfigurationBuilder.java,671,,"            params.put(""minExpression"", v.minExpression());"
236580,./TargetProjects/struts/core/src/main/java/org/apache/struts2/components/ActionComponent.java,304,,"    @StrutsTagAttribute(description=""Whether the result of this action (probably a view) should be executed/rendered"", type=""Boolean"", defaultValue=""false"")"
236581,./TargetProjects/struts/core/src/main/java/org/apache/struts2/components/Anchor.java,239,,"    @StrutsTagAttribute(description = ""Whether to encode parameters"", type = ""Boolean"", defaultValue = ""true"")"
236582,./TargetProjects/struts/core/src/main/java/org/apache/struts2/components/Anchor.java,239,,"    @StrutsTagAttribute(description = ""Whether to encode parameters"", type = ""Boolean"", defaultValue = ""true"")"
236583,./TargetProjects/struts/core/src/main/java/org/apache/struts2/components/ComboBox.java,131,,"                addParameter(""list"", tmp);"
236584,./TargetProjects/struts/core/src/main/java/org/apache/struts2/components/DoubleListUIBean.java,175,,"                addParameter(""doubleNameValue"", findValue(doubleValue, valueClazz));"
236585,./TargetProjects/struts/core/src/main/java/org/apache/struts2/components/Label.java,82,,"            addParameter(""nameValue"", findString(value));"
236586,./TargetProjects/struts/core/src/main/java/org/apache/struts2/components/ListUIBean.java,70,,"            list = parameters.get(""list"");"
236587,./TargetProjects/struts/core/src/main/java/org/apache/struts2/components/Number.java,326,,"    @StrutsTagAttribute(description = ""Maximum fraction digits"", type = ""Integer"")"
236588,./TargetProjects/struts/core/src/main/java/org/apache/struts2/components/Property.java,105,,"    @StrutsTagAttribute(description=""Whether to escape HTML"", type=""Boolean"", defaultValue=""true"")"
236589,./TargetProjects/struts/core/src/main/java/org/apache/struts2/components/Text.java,145,,"    @StrutsTagAttribute(description=""Whether to escape HTML"", type=""Boolean"", defaultValue=""false"")"
236590,./TargetProjects/struts/core/src/main/java/org/apache/struts2/components/Text.java,145,,"    @StrutsTagAttribute(description=""Whether to escape HTML"", type=""Boolean"", defaultValue=""false"")"
236591,./TargetProjects/struts/core/src/main/java/org/apache/struts2/components/TextArea.java,92,,"    @StrutsTagAttribute(description=""HTML cols attribute"", type=""Integer"")"
236592,./TargetProjects/struts/core/src/main/java/org/apache/struts2/components/UIBean.java,800,,"            parameters.put(""nameValue"", parameters.get(""value""));"
236593,./TargetProjects/struts/core/src/main/java/org/apache/struts2/components/UIBean.java,880,,"            String tooltipDelayParam = (String) getParameters().get(""tooltipDelay"");"
236594,./TargetProjects/struts/core/src/main/java/org/apache/struts2/components/URL.java,184,,"    @StrutsTagAttribute(description=""Whether to encode parameters"", type=""Boolean"", defaultValue=""true"")"
236595,./TargetProjects/struts/core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,51,,"        prettyWriter.addAttribute(""class"", ""debugTable"");"
236596,./TargetProjects/struts/core/src/main/java/org/apache/struts2/views/xslt/SimpleTextNode.java,37,,"        throw new StrutsException(""Operation not supported"");"
236597,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ActionInvocationTest.java,38,,"            ""baz"", ""commandTest"", null, null);"
236598,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ActionNestingTest.java,125,,"            PackageConfig packageContext = new PackageConfig.Builder(""nestedActionTest"")"
236599,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ActionSupportTest.java,102,,"        assertEquals(""not.in.bundle"", as.getText(""not.in.bundle""));"
236600,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ActionSupportTest.java,193,,"        assertEquals(""Hello World"", mas.getText(""hello""));"
236601,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ActionSupportTest.java,193,,"        assertEquals(""Hello World"", mas.getText(""hello""));"
236602,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ActionSupportTest.java,196,,"        assertEquals(""Hello World"", mas.getText(""hello"", ""this is default""));"
236603,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ActionSupportTest.java,205,,"        assertEquals(""Hello World"", mas.getText(""hello"", ""this is default"", ""from me"")); // no args in bundle"
236604,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ActionSupportTest.java,206,,"        assertEquals(""Hello World from me"", mas.getText(""hello.0"", ""this is default"", ""from me""));"
236605,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ActionSupportTest.java,208,,"        assertEquals(""this is default from me"", mas.getText(""not.in.bundle"", ""this is default {0}"", ""from me""));"
236606,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ActionSupportTest.java,215,,"        args.add(""Santa"");"
236607,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ActionSupportTest.java,216,,"        args.add(""loud"");"
236608,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ActionSupportTest.java,218,,"        assertEquals(""Hello World Santa"", mas.getText(""hello.0"", ""this is default"", args)); // only 1 arg in bundle"
236609,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ActionSupportTest.java,219,,"        assertEquals(""Hello World. This is Santa speaking loud"", mas.getText(""hello.1"", ""this is default"", args));"
236610,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ActionSupportTest.java,219,,"        assertEquals(""Hello World. This is Santa speaking loud"", mas.getText(""hello.1"", ""this is default"", args));"
236611,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ActionSupportTest.java,222,,"        assertEquals(""this is default Santa"", mas.getText(""not.in.bundle"", ""this is default {0}"", args));"
236612,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ActionSupportTest.java,223,,"        assertEquals(""this is default Santa speaking loud"", mas.getText(""not.in.bundle"", ""this is default {0} speaking {1}"", args));"
236613,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ActionSupportTest.java,223,,"        assertEquals(""this is default Santa speaking loud"", mas.getText(""not.in.bundle"", ""this is default {0} speaking {1}"", args));"
236614,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/CompositeTextProviderTest.java,43,,"        assertEquals(textProvider.getText(""car""), ""This is a car"");"
236615,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/CompositeTextProviderTest.java,44,,"        assertEquals(textProvider.getText(""bike""), ""This is a bike"");"
236616,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/CompositeTextProviderTest.java,61,,"        assertEquals(textProvider.getText(""goodnight"", ""say good night"", ""Adam""), ""1 good night Adam"");"
236617,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/DefaultActionInvocationTest.java,59,,"        mockInterceptor1.setFoo(""test1"");"
236618,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/DefaultActionInvocationTest.java,115,,"        assertEquals(""success"", result);"
236619,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/DefaultActionInvocationTest.java,130,,"        proxy.setMethod(""notExists"");"
236620,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/DefaultClasstTest.java,47,,"        assertEquals(""com.opensymphony.xwork2.ModelDrivenAction"", proxy.getConfig().getClassName());"
236621,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/DefaultTextProviderTest.java,33,,"        assertEquals(""Hello World"", tp.getText(""hello""));"
236622,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/DefaultTextProviderTest.java,33,,"        assertEquals(""Hello World"", tp.getText(""hello""));"
236623,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/DefaultTextProviderTest.java,34,,"        assertEquals(null, tp.getText(""not.in.bundle""));"
236624,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/DefaultTextProviderTest.java,36,,"        assertEquals(""Hello World"", tp.getText(""hello"", ""this is default""));"
236625,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/DefaultTextProviderTest.java,47,,"        assertEquals(""Hello World"", tp.getText(""hello"", ""this is default"", ""from me"")); // no args in bundle"
236626,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/DefaultTextProviderTest.java,48,,"        assertEquals(""Hello World from me"", tp.getText(""hello.0"", ""this is default"", ""from me""));"
236627,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/DefaultTextProviderTest.java,50,,"        assertEquals(""this is default from me"", tp.getText(""not.in.bundle"", ""this is default {0}"", ""from me""));"
236628,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/DefaultTextProviderTest.java,57,,"        args.add(""Santa"");"
236629,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/DefaultTextProviderTest.java,58,,"        args.add(""loud"");"
236630,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/DefaultTextProviderTest.java,60,,"        assertEquals(""Hello World Santa"", tp.getText(""hello.0"", ""this is default"", args)); // only 1 arg in bundle"
236631,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/DefaultTextProviderTest.java,61,,"        assertEquals(""Hello World. This is Santa speaking loud"", tp.getText(""hello.1"", ""this is default"", args));"
236632,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/DefaultTextProviderTest.java,61,,"        assertEquals(""Hello World. This is Santa speaking loud"", tp.getText(""hello.1"", ""this is default"", args));"
236633,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/DefaultTextProviderTest.java,64,,"        assertEquals(""this is default Santa"", tp.getText(""not.in.bundle"", ""this is default {0}"", args));"
236634,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/DefaultTextProviderTest.java,65,,"        assertEquals(""this is default Santa speaking loud"", tp.getText(""not.in.bundle"", ""this is default {0} speaking {1}"", args));"
236635,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/DefaultTextProviderTest.java,65,,"        assertEquals(""this is default Santa speaking loud"", tp.getText(""not.in.bundle"", ""this is default {0} speaking {1}"", args));"
236636,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/TextProviderSupportTest.java,37,,"    	assertTrue(tp.hasKey(""hello""));"
236637,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/TextProviderSupportTest.java,38,,"    	assertFalse(tp.hasKey(""not.in.bundle""));"
236638,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/TextProviderSupportTest.java,42,,"        assertEquals(""Hello World"", tp.getText(""hello""));"
236639,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/TextProviderSupportTest.java,45,,"        assertEquals(""Hello World"", tp.getText(""hello"", ""this is default""));"
236640,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/TextProviderSupportTest.java,50,,"        assertEquals(""Hello World"", tp.getText(""hello"", ""this is default"", ""from me"")); // no args in bundle"
236641,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/TextProviderSupportTest.java,51,,"        assertEquals(""Hello World from me"", tp.getText(""hello.0"", ""this is default"", ""from me""));"
236642,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/TextProviderSupportTest.java,63,,"        assertEquals(""Hello World Santa"", tp.getText(""hello.0"", ""this is default"", args)); // only 1 arg in bundle"
236643,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/TextProviderSupportTest.java,64,,"        assertEquals(""Hello World. This is Santa speaking loud"", tp.getText(""hello.1"", ""this is default"", args));"
236644,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/TextProviderSupportTest.java,64,,"        assertEquals(""Hello World. This is Santa speaking loud"", tp.getText(""hello.1"", ""this is default"", args));"
236645,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/ConfigurationManagerTest.java,51,,"        configProviderMock.expect(""destroy"", C.ANY_ARGS);"
236646,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/ConfigurationTest.java,48,,"            actionProxyFactory.createActionProxy(""/abstract"", ""test"", null, null);"
236647,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/ConfigurationTest.java,72,,"            ActionProxy proxy = actionProxyFactory.createActionProxy(""/does/not/exist"", ""Foo"", null, extraContext);"
236648,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/ConfigurationTest.java,102,,"        assertTrue(""Wrong parameter, "" + p.get(""foo""), ""Simple"".equals(p.get(""foo"")));"
236649,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/ConfigurationTest.java,102,,"        assertTrue(""Wrong parameter, "" + p.get(""foo""), ""Simple"".equals(p.get(""foo"")));"
236650,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/ConfigurationTest.java,132,,"            ActionProxy proxy = actionProxyFactory.createActionProxy(""/foo/bar"", ""TestInterceptorParamInehritanceOverride"", null, null);"
236651,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/entities/AllowedMethodsTest.java,30,,"        String method = ""myMethod"";"
236652,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/entities/AllowedMethodsTest.java,40,,"        assertFalse(allowedMethods.isAllowed(""someOtherMethod""));"
236653,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/entities/PackageConfigTest.java,39,,"        PackageConfig parent = new PackageConfig.Builder(""parent"").build();"
236654,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/entities/PackageConfigTest.java,42,,"        PackageConfig child = new PackageConfig.Builder(""child"")"
236655,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/impl/ActionConfigMatcherTest.java,62,,"        assertNotNull(""ActionConfig should be matched"", matched);"
236656,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/impl/ActionConfigMatcherTest.java,79,,"        assertTrue(""Method hasn't been replaced"", ""domethod"".equals(m.getMethodName()));"
236657,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/impl/ActionConfigMatcherTest.java,82,,"        assertTrue(""First param isn't correct"", ""class"".equals(m.getParams().get(""first"")));"
236658,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/impl/ActionConfigMatcherTest.java,82,,"        assertTrue(""First param isn't correct"", ""class"".equals(m.getParams().get(""first"")));"
236659,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/impl/ActionConfigMatcherTest.java,83,,"        assertTrue(""Second param isn't correct"", ""method"".equals(m.getParams().get(""second"")));"
236660,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/impl/ActionConfigMatcherTest.java,83,,"        assertTrue(""Second param isn't correct"", ""method"".equals(m.getParams().get(""second"")));"
236661,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/impl/ActionConfigMatcherTest.java,154,,"        params.put(""first"", ""{1}"");"
236662,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/impl/ActionConfigMatcherTest.java,156,,"        ActionConfig config = new ActionConfig.Builder(""package"", ""foo/{one}/{two}/{three}"", ""foo.bar.Action"")"
236663,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/impl/ActionConfigMatcherTest.java,158,,"                .addExceptionMapping(new ExceptionMappingConfig.Builder(""foo{1}"", ""java.lang.{2}Exception"", ""success{1}"")"
236664,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/impl/ActionConfigMatcherTest.java,172,,"        assertEquals(""The ResultConfigs should have the correct number of params"", 1, matched.getResults().get(""successparamOne"").getParams().size());"
236665,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/impl/ActionConfigMatcherTest.java,175,,"        assertEquals(""The ActionConfig params have replaced values"", ""paramOne"", matched.getParams().get(""first""));"
236666,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/InterceptorBuilderTest.java,62,,"        InterceptorStackConfig interceptorStackConfig1 = new InterceptorStackConfig.Builder(""interceptorStack1"").build();"
236667,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/InterceptorBuilderTest.java,64,,"        InterceptorConfig interceptorConfig1 = new InterceptorConfig.Builder(""interceptor1"", ""com.opensymphony.xwork2.config.providers.InterceptorBuilderTest$MockInterceptor1"").build();"
236668,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/InterceptorBuilderTest.java,64,,"        InterceptorConfig interceptorConfig1 = new InterceptorConfig.Builder(""interceptor1"", ""com.opensymphony.xwork2.config.providers.InterceptorBuilderTest$MockInterceptor1"").build();"
236669,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/InterceptorBuilderTest.java,66,,"        InterceptorConfig interceptorConfig2 = new InterceptorConfig.Builder(""interceptor2"", ""com.opensymphony.xwork2.config.providers.InterceptorBuilderTest$MockInterceptor2"").build();"
236670,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/InterceptorBuilderTest.java,66,,"        InterceptorConfig interceptorConfig2 = new InterceptorConfig.Builder(""interceptor2"", ""com.opensymphony.xwork2.config.providers.InterceptorBuilderTest$MockInterceptor2"").build();"
236671,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/InterceptorBuilderTest.java,69,,"        PackageConfig packageConfig = new PackageConfig.Builder(""package1"").namespace(""/namespace"").addInterceptorConfig(interceptorConfig1).addInterceptorConfig(interceptorConfig2).addInterceptorStackConfig(interceptorStackConfig1).build();"
236672,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/InterceptorBuilderTest.java,78,,"                                put(""interceptor1.param1"", ""interceptor1_value1"");"
236673,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/InterceptorBuilderTest.java,79,,"                                put(""interceptor1.param2"", ""interceptor1_value2"");"
236674,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/InterceptorBuilderTest.java,80,,"                                put(""interceptor2.param1"", ""interceptor2_value1"");"
236675,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/InterceptorBuilderTest.java,81,,"                                put(""interceptor2.param2"", ""interceptor2_value2"");"
236676,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/MockConfigurationProvider.java,83,,"        PackageConfig.Builder defaultPackageContext = new PackageConfig.Builder(""defaultPackage"");"
236677,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/MockConfigurationProvider.java,85,,"        params.put(""bar"", ""5"");"
236678,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/MockConfigurationProvider.java,90,,"        results.put(""success"", new ResultConfig.Builder(""success"", ActionChainResult.class.getName()).addParams(successParams).build());"
236679,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/MockConfigurationProvider.java,112,,"        interceptors.add(new InterceptorMapping(""model"", "
236680,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderActionsTest.java,55,,"        params.put(""foo"", ""17"");"
236681,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderActionsTest.java,56,,"        params.put(""bar"", ""23"");"
236682,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderActionsTest.java,61,,"        ActionConfig barAction = new ActionConfig.Builder("""", ""Bar"", SimpleAction.class.getName())"
236683,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderActionsTest.java,69,,"        results.put(""success"", new ResultConfig.Builder(""success"", MockResult.class.getName()).build());"
236684,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderAllowedMethodsTest.java,49,,"        assertTrue(action.isAllowedMethod(""execute""));"
236685,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderAllowedMethodsTest.java,50,,"        assertTrue(action.isAllowedMethod(""input""));"
236686,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderAllowedMethodsTest.java,51,,"        assertTrue(action.isAllowedMethod(""cancel""));"
236687,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderAllowedMethodsTest.java,52,,"        assertTrue(action.isAllowedMethod(""foo""));"
236688,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderAllowedMethodsTest.java,53,,"        assertTrue(action.isAllowedMethod(""bar""));"
236689,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderAllowedMethodsTest.java,54,,"        assertTrue(action.isAllowedMethod(""baz""));"
236690,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderAllowedMethodsTest.java,55,,"        assertTrue(action.isAllowedMethod(""xyz""));"
236691,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderExceptionMappingsTest.java,52,,"                new ExceptionMappingConfig.Builder(""spooky-result"", ""com.opensymphony.xwork2.SpookyException"", ""spooky-result"")"
236692,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderGlobalResultInheritenceTest.java,57,,"        System.out.println(parentResultConfig1.getParams().get(""identity""));"
236693,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderInterceptorsTest.java,50,,"    InterceptorConfig loggingInterceptor = new InterceptorConfig.Builder(""logging"", LoggingInterceptor.class.getName()).build();"
236694,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderInterceptorsTest.java,52,,"    InterceptorConfig noopInterceptor = new InterceptorConfig.Builder(""noop"", NoOpInterceptor.class.getName()).build();"
236695,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderInterceptorsTest.java,69,,"        params.put(""foo"", ""expectedFoo"");"
236696,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderInterceptorsTest.java,71,,"        InterceptorConfig paramsInterceptor = new InterceptorConfig.Builder(""test"", MockInterceptor.class.getName())"
236697,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderInterceptorsTest.java,75,,"        InterceptorStackConfig defaultStack = new InterceptorStackConfig.Builder(""defaultStack"")"
236698,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderPackagesTest.java,79,,"        PackageConfig expectedPackageConfig = new PackageConfig.Builder(""default"").build();"
236699,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderPackagesTest.java,124,,"        assertNotNull(runtimeConfiguration.getActionConfig(""/multiple"", ""default""));"
236700,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderPackagesTest.java,128,,"        assertNotNull(runtimeConfiguration.getActionConfig(""/single"", ""default""));"
236701,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderPackagesTest.java,133,,"        assertNotNull(runtimeConfiguration.getActionConfig(""/parentBelow"", ""default""));"
236702,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderResultTypesTest.java,61,,"		assertTrue(result1ParamsMap.containsKey(""param1""));"
236703,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderResultTypesTest.java,62,,"		assertTrue(result1ParamsMap.containsKey(""param2""));"
236704,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderResultTypesTest.java,63,,"		assertTrue(result1ParamsMap.containsKey(""param3""));"
236705,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderResultTypesTest.java,65,,"		assertTrue(result2ParamsMap.containsKey(""paramA""));"
236706,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderResultTypesTest.java,66,,"		assertTrue(result2ParamsMap.containsKey(""paramB""));"
236707,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderResultTypesTest.java,85,,"		ResultConfig action1Result = (ResultConfig) action1ActionConfig.getResults().get(""success"");"
236708,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderResultsTest.java,71,,"        ActionConfig expectedAction = new ActionConfig.Builder(""default"", ""Bar"", SimpleAction.class.getName())"
236709,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderTest.java,226,,"        final String filename = ""com/opensymphony/xwork2/config/providers/xwork- test.xml"";"
236710,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderTest.java,337,,"        multipleStringList.add(""allowedMethod3"");"
236711,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderTest.java,340,,"        Element mockSingleChildAllowedMethodsElement = new MockElement(""allowed-methods"", fakeBodyString,"
236712,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderTest.java,348,,"        Element mockActionElementSingle = new MockElement(""action"", ""fakeBody"", ""action"", ""fakeValue"","
236713,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderTest.java,348,,"        Element mockActionElementSingle = new MockElement(""action"", ""fakeBody"", ""action"", ""fakeValue"","
236714,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderTest.java,348,,"        Element mockActionElementSingle = new MockElement(""action"", ""fakeBody"", ""action"", ""fakeValue"","
236715,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderTest.java,394,,"        Element mockSingleChildAllowedMethodsElement = new MockElement(""global-allowed-methods"", fakeBodyString,"
236716,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderTest.java,402,,"        Element mockPackageElementSingle = new MockElement(""package"", ""fakeBody"", ""package"", ""fakeValue"","
236717,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderTest.java,449,,"        ResultTypeConfig.Builder resultTypeConfigBuilder = new ResultTypeConfig.Builder(""dispatcher"", ServletDispatcherResult.class.getName());"
236718,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderTest.java,471,,"        Element mockSingleChildResultElement = new MockElement(""result"", fakeBodyString,"
236719,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderTest.java,473,,"        mockSingleChildResultElement.setAttribute(""name"", ""input"");"
236720,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderTest.java,473,,"        mockSingleChildResultElement.setAttribute(""name"", ""input"");"
236721,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderTest.java,474,,"        mockSingleChildResultElement.setAttribute(""type"", ""dispatcher"");"
236722,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderTest.java,477,,"        mockSingleChildResultElement2.setAttribute(""name"", ""success"");"
236723,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderTest.java,584,,"        Element mockGlobalResultsElementSingle = new MockElement(""global-results"", ""fakeBody"", ""global-results"", ""fakeValue"","
236724,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProviderTest.java,820,,"            throw new UnsupportedOperationException(""No mock support."");"
236725,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/conversion/impl/AnnotationXWorkConverterTest.java,113,,"        assertEquals(""Conversion should have failed."", OgnlRuntime.NoConversionPossible, converter.convertValue(ognlStackContext, action.getBean(), null, ""birth"", value, Date.class));"
236726,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/conversion/impl/AnnotationXWorkConverterTest.java,176,,"        message = XWorkConverter.getConversionErrorMessage(""foo"", Integer.class, stack);"
236727,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/conversion/impl/AnnotationXWorkConverterTest.java,219,,"        list.add(""bar"");"
236728,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/conversion/impl/AnnotationXWorkConverterTest.java,220,,"        list.add(""baz"");"
236729,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/conversion/impl/AnnotationXWorkConverterTest.java,238,,"                ""123"", ""456"""
236730,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/conversion/impl/AnnotationXWorkConverterTest.java,238,,"                ""123"", ""456"""
236731,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/conversion/impl/AnnotationXWorkConverterTest.java,262,,"                ""true"", ""false"""
236732,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/conversion/impl/AnnotationXWorkConverterTest.java,262,,"                ""true"", ""false"""
236733,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/conversion/impl/AnnotationXWorkConverterTest.java,343,,"        assertEquals(123.5, converter.convertValue(context, null, null, null, ""123.5"", Double.class));"
236734,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverterTest.java,339,,"            basicConverter.convertValue(new HashMap<>(), null, null, null, ""Foo"", Class.class);"
236735,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/conversion/impl/XWorkConverterTest.java,163,,"        assertEquals(""Conversion should have failed."", OgnlRuntime.NoConversionPossible, converter.convertValue(ognlStackContext, action.getBean(), null, ""birth"", value, Date.class));"
236736,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/conversion/impl/XWorkConverterTest.java,163,,"        assertEquals(""Conversion should have failed."", OgnlRuntime.NoConversionPossible, converter.convertValue(ognlStackContext, action.getBean(), null, ""birth"", value, Date.class));"
236737,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/conversion/impl/XWorkConverterTest.java,182,,"        assertEquals(""Conversion should have failed."", OgnlRuntime.NoConversionPossible, converter.convertValue(ognlStackContext, action, null, ""date"", value, Date.class));"
236738,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/conversion/impl/XWorkConverterTest.java,243,,"        message = XWorkConverter.getConversionErrorMessage(""foo"", Integer.class, stack);"
236739,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/conversion/impl/XWorkConverterTest.java,271,,"        String message = XWorkConverter.getConversionErrorMessage(""baz"", int.class, stack);"
236740,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/conversion/impl/XWorkConverterTest.java,372,,"        list.add(""bar"");"
236741,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/conversion/impl/XWorkConverterTest.java,391,,"                ""123"", ""456"""
236742,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/conversion/impl/XWorkConverterTest.java,391,,"                ""123"", ""456"""
236743,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/conversion/impl/XWorkConverterTest.java,415,,"                ""true"", ""false"""
236744,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/conversion/impl/XWorkConverterTest.java,415,,"                ""true"", ""false"""
236745,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/conversion/impl/XWorkConverterTest.java,534,,"        assertEquals(123.5, converter.convertValue(context, null, null, null, ""123.5"", Double.class));"
236746,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/conversion/impl/XWorkConverterTest.java,585,,"        assertEquals(OgnlRuntime.NoConversionPossible, converter.convertValue(context, null, null, null, ""123.12"", int.class));"
236747,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/conversion/impl/XWorkConverterTest.java,586,,"        assertEquals(OgnlRuntime.NoConversionPossible, converter.convertValue(context, null, null, null, ""123aa"", int.class));"
236748,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/conversion/impl/XWorkConverterTest.java,587,,"        assertEquals(OgnlRuntime.NoConversionPossible, converter.convertValue(context, null, null, null, ""aa123"", int.class));"
236749,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/conversion/impl/XWorkConverterTest.java,588,,"        assertEquals(OgnlRuntime.NoConversionPossible, converter.convertValue(context, null, null, null, ""1,234"", int.class));"
236750,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/conversion/impl/XWorkConverterTest.java,589,,"        assertEquals(OgnlRuntime.NoConversionPossible, converter.convertValue(context, null, null, null, ""1,23"", int.class));"
236751,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/conversion/impl/XWorkConverterTest.java,590,,"        assertEquals(OgnlRuntime.NoConversionPossible, converter.convertValue(context, null, null, null, ""1,234.12"", int.class));"
236752,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/conversion/impl/XWorkConverterTest.java,591,,"        assertEquals(OgnlRuntime.NoConversionPossible, converter.convertValue(context, null, null, null, ""1.234"", int.class));"
236753,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/conversion/impl/XWorkConverterTest.java,592,,"        assertEquals(OgnlRuntime.NoConversionPossible, converter.convertValue(context, null, null, null, ""1.234,12"", int.class));"
236754,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/inject/ContainerImplTest.java,129,,"        assertEquals(""initialized early"", ((EarlyInitializableBean) earlyInitializableCheck.getEarlyInitializable()).getMessage());"
236755,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/inject/ContainerImplTest.java,150,,"        assertEquals(""initialized"", ((InitializableBean) initializableCheck.getInitializable()).getMessage());"
236756,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/ChainingInterceptorTest.java,44,,"        action1.addActionError(""foo"");"
236757,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/ChainingInterceptorTest.java,45,,"        mockInvocation.matchAndReturn(""getAction"", action2);"
236758,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/ChainingInterceptorTest.java,48,,"        interceptor.setCopyErrors(""true"");"
236759,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/ChainingInterceptorTest.java,54,,"        action2.addActionError(""bar"");"
236760,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/ConversionErrorInterceptorTest.java,48,,"        conversionErrors.put(""foo"", new ConversionData(123L, int.class));"
236761,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/ConversionErrorInterceptorTest.java,51,,"        mockInvocation.expectAndReturn(""getAction"", action);"
236762,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/DefaultWorkflowInterceptorTest.java,56,,"        interceptor.setExcludeMethods(""execute"");"
236763,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/DefaultWorkflowInterceptorTest.java,97,,"        interceptor.setExcludeMethods(""execute,input,validate"");"
236764,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/ExceptionMappingInterceptorTest.java,48,,"        Exception exception = new StrutsException(""test"");"
236765,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/ExceptionMappingInterceptorTest.java,49,,"        mockInvocation.expectAndThrow(""invoke"", exception);"
236766,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/ExceptionMappingInterceptorTest.java,50,,"        mockInvocation.matchAndReturn(""getAction"", action.proxy());"
236767,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/ExceptionMappingInterceptorTest.java,52,,"        assertNotNull(stack.findValue(""exception""));"
236768,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/ExceptionMappingInterceptorTest.java,93,,"            fail(""Should not have reached this point."");"
236769,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/ExceptionMappingInterceptorTest.java,126,,"        	interceptor.setLogCategory(""showcase.unhandled"");"
236770,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/MethodFilterInterceptorUtilTest.java,30,,"        included.add(""included"");"
236771,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/MethodFilterInterceptorUtilTest.java,34,,"        excluded.add(""excluded"");"
236772,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/ModelDrivenInterceptorTest.java,80,,"        preResultListener.beforeResult((ActionInvocation) mockActionInvocation.proxy(), ""success"");"
236773,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/ParameterFilterInterceptorTest.java,64,,"        runFilterTest(null,null,true,new String[] {""blah"", ""bladeblah"", ""bladebladeblah""});"
236774,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/ParameterFilterInterceptorTest.java,78,,"        runFilterTest(null,""blah"",false,new String[] {""blah.deblah"", ""blah.somethingelse"", ""blah(22)""});"
236775,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/ParameterRemoverInterceptorTest.java,59,,"                put(""param1"", new String[]{""paramValue1""});"
236776,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/ParameterRemoverInterceptorTest.java,60,,"                put(""param2"", new String[]{""paramValue2""});"
236777,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/ParametersInterceptorTest.java,72,,"                put(""fooKey"", ""fooValue"");"
236778,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/ParametersInterceptorTest.java,72,,"                put(""fooKey"", ""fooValue"");"
236779,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/ParametersInterceptorTest.java,85,,"                put(""error-key"", ""error"");"
236780,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/ParametersInterceptorTest.java,101,,"                put(""name"", ""(#context[\""xwork.MethodAccessor.denyMethodExecution\""]= new "" +"
236781,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/ParametersInterceptorTest.java,104,,"                put(""top['name'](0)"", ""true"");"
236782,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/ParametersInterceptorTest.java,138,,"                put(pollution1, ""bad"");"
236783,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/ParametersInterceptorTest.java,235,,"        params.put(""foo"", fooVal);"
236784,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/ParametersInterceptorTest.java,256,,"        params.put(""blah"", ""This is blah"");"
236785,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/ParametersInterceptorTest.java,256,,"        params.put(""blah"", ""This is blah"");"
236786,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/ParametersInterceptorTest.java,258,,"        params.put(""\u0023session['user']"", ""0wn3d"");"
236787,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/ParametersInterceptorTest.java,625,,"        parameters.put(""user.address.city"", ""London"");"
236788,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/ParametersInterceptorTest.java,625,,"        parameters.put(""user.address.city"", ""London"");"
236789,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/ParametersInterceptorTest.java,626,,"        parameters.put(""user.name"", ""Superman"");"
236790,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/ParametersInterceptorTest.java,626,,"        parameters.put(""user.name"", ""Superman"");"
236791,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/PreResultListenerTest.java,47,,"        ActionProxy proxy = actionProxyFactory.createActionProxy(""package"", ""action"", null, new HashMap<String, Object>(), false, true);"
236792,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/PreResultListenerTest.java,47,,"        ActionProxy proxy = actionProxyFactory.createActionProxy(""package"", ""action"", null, new HashMap<String, Object>(), false, true);"
236793,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/PrefixMethodInvocationUtilTest.java,48,,"				new String[] { ""prepare"", ""prepareDo"" }, ""save"", action);"
236794,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/PrefixMethodInvocationUtilTest.java,48,,"				new String[] { ""prepare"", ""prepareDo"" }, ""save"", action);"
236795,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/PrefixMethodInvocationUtilTest.java,48,,"				new String[] { ""prepare"", ""prepareDo"" }, ""save"", action);"
236796,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/PrepareInterceptorTest.java,48,,"        mock.expect(""prepare"");"
236797,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/PrepareInterceptorTest.java,79,,"        mockActionProxy.setMethod(""submit"");"
236798,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/PrepareInterceptorTest.java,121,,"    	expect(mockActionInvocation.invoke()).andStubReturn(""okok"");"
236799,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/ScopedModelDrivenInterceptorTest.java,56,,"        Object obj = inter.resolveModel(factory, ctx, ""java.lang.String"", ""request"", ""foo"");"
236800,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/ScopedModelDrivenInterceptorTest.java,56,,"        Object obj = inter.resolveModel(factory, ctx, ""java.lang.String"", ""request"", ""foo"");"
236801,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/ScopedModelDrivenInterceptorTest.java,122,,"        inter.setName(""king"");"
236802,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/StaticParametersInterceptorTest.java,65,,"                .addParam(""top.name"", ""Santa"")"
236803,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/StaticParametersInterceptorTest.java,85,,"                .addParam(""top.name"", ""${top.hero}"")"
236804,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/StaticParametersInterceptorTest.java,147,,"                .addParam(""name"", ""${hero}"")"
236805,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/annotations/AnnotationParameterFilterInterceptorTest.java,55,,"        parameterMap.put(""job"", ""Baker"");"
236806,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/annotations/AnnotationParameterFilterInterceptorTest.java,55,,"        parameterMap.put(""job"", ""Baker"");"
236807,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/annotations/AnnotationParameterFilterInterceptorTest.java,56,,"        parameterMap.put(""name"", ""Martin"");"
236808,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/annotations/AnnotationParameterFilterInterceptorTest.java,56,,"        parameterMap.put(""name"", ""Martin"");"
236809,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/annotations/AnnotationParameterFilterInterceptorTest.java,65,,"        mockInvocation.expectAndReturn(""getInvocationContext"", actionContext);"
236810,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/annotations/AnnotationParameterFilterInterceptorTest.java,66,,"        mockInvocation.matchAndReturn(""getAction"", action);"
236811,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/annotations/AnnotationParameterFilterInterceptorTest.java,67,,"        mockInvocation.matchAndReturn(""getStack"", stack);"
236812,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/interceptor/annotations/AnnotationParameterFilterInterceptorTest.java,68,,"        mockInvocation.expectAndReturn(""invoke"", Action.SUCCESS);"
236813,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlUtilTest.java,125,,"        ognlUtil.setEnableExpressionCache(""true"");"
236814,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlUtilTest.java,126,,"        Object expr0 = ognlUtil.compile(""test"");"
236815,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlUtilTest.java,285,,"        excludes.add(""title"");"
236816,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlUtilTest.java,286,,"        excludes.add(""number"");"
236817,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlUtilTest.java,443,,"        String[] foo = new String[]{""asdf""};"
236818,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlUtilTest.java,648,,"        props.put(""ALong"", ""123"");"
236819,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlUtilTest.java,748,,"            stack.setValue(""list.1114778947765"", foo);"
236820,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlUtilTest.java,755,,"            stack.setValue(""1114778947765"", foo);"
236821,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlUtilTest.java,761,,"            stack.setValue(""1234"", foo);"
236822,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlUtilTest.java,770,,"            fail(""Unable to reload container configuration - exception: "" + ex);"
236823,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlUtilTest.java,919,,"            String result = (String) ognlUtil.getValue(""toString"", ognlUtil.createDefaultContext(foo), foo, String.class);"
236824,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlUtilTest.java,1198,,"            assertTrue(""Exception not an OgnlException?"", ex instanceof OgnlException);"
236825,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlValueStackTest.java,154,,"        dog.setName(""Rover"");"
236826,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlValueStackTest.java,193,,"            vs.findValue(""bite"", true);"
236827,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlValueStackTest.java,315,,"            vs.setValue(""exception"", ""exceptionValue"", false);"
236828,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlValueStackTest.java,318,,"            vs.findValue(""getException()"", false);"
236829,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlValueStackTest.java,322,,"            vs.findValue(""getBite()"", false);"
236830,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlValueStackTest.java,438,,"            vs.setValue(""name"", value);"
236831,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlValueStackTest.java,634,,"        assertEquals(""blah:123"", vs.findValue(""bar"", String.class));"
236832,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlValueStackTest.java,648,,"        assertEquals(""bar:123"", output);"
236833,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlValueStackTest.java,743,,"        dog2.setName(""Jack"");"
236834,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlValueStackTest.java,773,,"        vs.setValue(""count"", ""1"", true);"
236835,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlValueStackTest.java,969,,"        vs.setValue(""cats[0].name"", ""Cat One"");"
236836,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlValueStackTest.java,970,,"        vs.setValue(""cats[1].name"", ""Cat Two"");"
236837,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlValueStackTest.java,992,,"        vs.setValue(""cats[0].foo.cats[1].name"", ""Deep null cat"");"
236838,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlValueStackTest.java,1026,,"        assertEquals(""Cat One"", ((Cat) foo.getCatMap().get(""One"")).getName());"
236839,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlValueStackTest.java,1139,,"        assertEquals(dog2, vs.findValue(""top""));"
236840,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlValueStackTest.java,1187,,"        stack.push(""Hello World"");"
236841,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlValueStackTest.java,1224,,"        overrides.put(""claus"", ""top"");"
236842,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlValueStackTest.java,1278,,"        accessedValue = ognlValueStack.findValue(""@com.opensymphony.xwork2.ognl.OgnlValueStackTest@staticInteger100Method()"");"
236843,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlValueStackTest.java,1279,,"        assertNull(""able to access static method (result not null) ?"", accessedValue);"
236844,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlValueStackTest.java,1280,,"        accessedValue = ognlValueStack.findValue(""@com.opensymphony.xwork2.ognl.OgnlValueStackTest@STATIC_FINAL_PUBLIC_ATTRIBUTE"");"
236845,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlValueStackTest.java,1282,,"        accessedValue = ognlValueStack.findValue(""@com.opensymphony.xwork2.ognl.OgnlValueStackTest@STATIC_PUBLIC_ATTRIBUTE"");"
236846,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlValueStackTest.java,1284,,"        accessedValue = ognlValueStack.findValue(""@com.opensymphony.xwork2.ognl.OgnlValueStackTest@STATIC_FINAL_PACKAGE_ATTRIBUTE"");"
236847,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlValueStackTest.java,1285,,"        assertNull(""accessed final package field (result not null) ?"", accessedValue);"
236848,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlValueStackTest.java,1286,,"        accessedValue = ognlValueStack.findValue(""@com.opensymphony.xwork2.ognl.OgnlValueStackTest@STATIC_PACKAGE_ATTRIBUTE"");"
236849,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlValueStackTest.java,1287,,"        assertNull(""accessed package field (result not null) ?"", accessedValue);"
236850,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlValueStackTest.java,1288,,"        accessedValue = ognlValueStack.findValue(""@com.opensymphony.xwork2.ognl.OgnlValueStackTest@STATIC_FINAL_PROTECTED_ATTRIBUTE"");"
236851,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlValueStackTest.java,1289,,"        assertNull(""accessed final protected field (result not null) ?"", accessedValue);"
236852,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlValueStackTest.java,1290,,"        accessedValue = ognlValueStack.findValue(""@com.opensymphony.xwork2.ognl.OgnlValueStackTest@STATIC_PROTECTED_ATTRIBUTE"");"
236853,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlValueStackTest.java,1291,,"        assertNull(""accessed protected field (result not null) ?"", accessedValue);"
236854,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlValueStackTest.java,1292,,"        accessedValue = ognlValueStack.findValue(""@com.opensymphony.xwork2.ognl.OgnlValueStackTest@STATIC_FINAL_PRIVATE_ATTRIBUTE"");"
236855,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlValueStackTest.java,1293,,"        assertNull(""accessed final private field (result not null) ?"", accessedValue);"
236856,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlValueStackTest.java,1294,,"        accessedValue = ognlValueStack.findValue(""@com.opensymphony.xwork2.ognl.OgnlValueStackTest@STATIC_PRIVATE_ATTRIBUTE"");"
236857,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/OgnlValueStackTest.java,1295,,"        assertNull(""accessed private field (result not null) ?"", accessedValue);"
236858,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/SecurityMemberAccessTest.java,50,,"        String propertyName = ""stringField"";"
236859,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/SecurityMemberAccessTest.java,51,,"        Member member = FooBar.class.getMethod(""get"" + propertyName.substring(0, 1).toUpperCase() + propertyName.substring(1));"
236860,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/ognl/SecurityMemberAccessTest.java,110,,"        String propertyName = ""barLogic"";"
236861,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/security/DefaultAcceptedPatternsCheckerTest.java,149,,"            fail(""accepted patterns modifiable?"");"
236862,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsCheckerTest.java,168,,"            fail (""excluded patterns modifiable?"");"
236863,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/spring/SpringObjectFactoryTest.java,117,,"        sac.registerPrototype(""simple-action"", SimpleAction.class, new MutablePropertyValues());"
236864,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/spring/SpringObjectFactoryTest.java,154,,"        sac.getBeanFactory().registerSingleton(""bean"", new TestBean());"
236865,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/spring/SpringObjectFactoryTest.java,230,,"        sac.registerSingleton(""actionBean"", SimpleAction.class, new MutablePropertyValues());"
236866,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/spring/SpringObjectFactoryTest.java,234,,"        assertNotNull(""Bean should not be null"", bean);"
236867,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/spring/SpringObjectFactoryTest.java,235,,"        assertNotNull(""Action should have been added via DI"", bean.getAction());"
236868,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/util/ClassLoaderUtilTest.java,32,,"        Iterator<URL> i = ClassLoaderUtil.getResources(""xwork-sample.xml"", ClassLoaderUtilTest.class, false);"
236869,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/util/ClassLoaderUtilTest.java,42,,"        Iterator<URL> i = ClassLoaderUtil.getResources(""struts-2.0.dtd"", ClassLoaderUtilTest.class, false);"
236870,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/util/ClassLoaderUtilTest.java,88,,"            private Iterator<String> itt = Arrays.asList(""str1"", ""str1"", ""str3"", ""str1"").iterator();"
236871,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/util/ClassPathFinderTest.java,38,,"		assertEquals(found.contains(""com/opensymphony/xwork2/config/providers/xwork-test-wildcard-1.xml""), true );"
236872,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/util/DefaultFileManagerTest.java,108,,"        assertEquals(""file:/c:/somefile.jar"", outputURL.toExternalForm());"
236873,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/util/DefaultFileManagerTest.java,116,,"        assertEquals(""file:c:/somefile.jar"", outputURL.toExternalForm());"
236874,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/util/MyBeanActionTest.java,39,,"        params.put(""beanList(1234567890).name"", ""This is the bla bean"");"
236875,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/util/MyBeanActionTest.java,40,,"        params.put(""beanList(1234567891).name"", ""This is the 2nd bla bean"");"
236876,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/util/MyBeanActionTest.java,42,,"        params.put(""annotatedBeanList(1234567890).name"", ""This is the bla bean by annotation"");"
236877,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/util/MyBeanActionTest.java,43,,"        params.put(""annotatedBeanList(1234567891).name"", ""This is the 2nd bla bean by annotation"");"
236878,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/util/MyBeanActionTest.java,76,,"        params.put(""beanMap[1234567890].id"", ""1234567890"");"
236879,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/util/MyBeanActionTest.java,77,,"        params.put(""beanMap[1234567891].id"", ""1234567891"");"
236880,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/util/StrutsLocalizedTextProviderTest.java,73,,"        mockActionInvocation.expectAndReturn(""getAction"", action);"
236881,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/util/StrutsLocalizedTextProviderTest.java,79,,"        assertEquals(""Title:"", message);"
236882,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/util/StrutsLocalizedTextProviderTest.java,118,,"        localizedTextProvider.addDefaultResourceBundle(""com/opensymphony/xwork2/util/FindMe"");"
236883,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/util/StrutsLocalizedTextProviderTest.java,140,,"        localizedTextProvider.addDefaultResourceBundle(""com/opensymphony/xwork2/SimpleAction"");"
236884,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/util/StrutsLocalizedTextProviderTest.java,162,,"        localizedTextProvider.addDefaultResourceBundle(""com/opensymphony/xwork2/test"");"
236885,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/util/StrutsLocalizedTextProviderTest.java,182,,"        assertEquals(""Title is invalid!"", message);"
236886,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/util/StrutsLocalizedTextProviderTest.java,217,,"        localizedTextProvider.addDefaultResourceBundle(""com/opensymphony/xwork2/util/LocalizedTextUtilTest"");"
236887,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/util/StrutsLocalizedTextProviderTest.java,229,,"        String text = localizedTextProvider.findText(Bar.class, ""xw377"", ActionContext.getContext().getLocale(), ""xw377"", null, ActionContext.getContext().getValueStack());"
236888,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/util/StrutsLocalizedTextProviderTest.java,232,,"        String text2 = localizedTextProvider.findText(StrutsLocalizedTextProviderTest.class, ""notinbundle"", ActionContext.getContext().getLocale(), ""hello"", null, ActionContext.getContext().getValueStack());"
236889,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/util/StrutsLocalizedTextProviderTest.java,241,,"        String text5 = localizedTextProvider.findText(StrutsLocalizedTextProviderTest.class, ""username"", ActionContext.getContext().getLocale(), null, null, ActionContext.getContext().getValueStack());"
236890,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/util/StrutsLocalizedTextProviderTest.java,242,,"        assertEquals(""Santa"", text5); // should not log"
236891,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/util/StrutsLocalizedTextProviderTest.java,409,,"        getDefaultMessageReturnArg = testStrutsLocalizedTextProvider.getDefaultMessageWithAlternateKey(""key_does_not_exist"", ""alternateKey_does_not_exist"", Locale.ENGLISH, valueStack, null, null);"
236892,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/util/StrutsLocalizedTextProviderTest.java,429,,"        getDefaultMessageReturnArg = testStrutsLocalizedTextProvider.getDefaultMessageWithAlternateKey(""key_does_not_exist"", ""invalid.fieldvalue.title"", Locale.ENGLISH, valueStack, paramArray, null);"
236893,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/util/StrutsLocalizedTextProviderTest.java,437,,"        assertNotNull(""GetDefaultMessageReturnArg result is null with key that exists ?"", getDefaultMessageReturnArg);"
236894,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/util/StrutsLocalizedTextProviderTest.java,438,,"        assertTrue(""GetDefaultMessageReturnArg result with key that exists indicates message not found in bundle ?"", getDefaultMessageReturnArg.foundInBundle);"
236895,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/util/StrutsLocalizedTextProviderTest.java,439,,"        assertTrue(""GetDefaultMessageReturnArg result with key that exists indicates message is null or empty ?"", (getDefaultMessageReturnArg.message != null && !getDefaultMessageReturnArg.message.isEmpty()));"
236896,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/util/TextParseUtilTest.java,61,,"        assertEquals(""foo: [1, 2, 3], bar: 1"", s);"
236897,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/util/TextParseUtilTest.java,106,,"        stack.push(new HashMap<String, Object>() {{ put(""foo"", ""${%{1+1}}""); }});"
236898,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/util/location/LocationAttributesTest.java,45,,"        assertTrue(""path/to/file.xml"".equals(attrs.getValue(""loc:src"")));"
236899,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/util/location/LocationAttributesTest.java,46,,"        assertTrue(""1"".equals(attrs.getValue(""loc:line"")));"
236900,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/util/location/LocationAttributesTest.java,47,,"        assertTrue(""40"".equals(attrs.getValue(""loc:column"")));"
236901,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/AnnotationActionValidatorManagerTest.java,126,,"        List validatorList = annotationActionValidatorManager.getValidators(AnnotatedTestBean.class, ""beanMessageBundle"");"
236902,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/AnnotationActionValidatorManagerTest.java,145,,"            fail(""Validation error: "" + ex.getMessage());"
236903,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/AnnotationActionValidatorManagerTest.java,156,,"        assertEquals(""data"", dataValidator1.getFieldName());"
236904,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/AnnotationValidationAction.java,47,,"    @RegexFieldValidator(regex = ""foo"", message = ""Foo doesn't match!"", key = ""regex.key"","
236905,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/AnnotationValidationAction.java,49,,"            messageParams = {""one"", ""two"", ""three""})"
236906,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/AnnotationValidationAction.java,49,,"            messageParams = {""one"", ""two"", ""three""})"
236907,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/AnnotationValidationAction.java,49,,"            messageParams = {""one"", ""two"", ""three""})"
236908,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/AnnotationValidationAction.java,64,,"            fieldName = ""foo"", key = ""double.key"", message = ""Foo is out of range!"", shortCircuit = true,"
236909,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/AnnotationValidationConfigurationBuilderTest.java,138,,"        assertEquals(""foo"", validator.getFieldName());"
236910,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/AnnotationValidationConfigurationBuilderTest.java,141,,"        assertTrue(Arrays.equals(new String[]{""one"", ""two"", ""three""}, validator.getMessageParameters()));"
236911,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/AnnotationValidationConfigurationBuilderTest.java,141,,"        assertTrue(Arrays.equals(new String[]{""one"", ""two"", ""three""}, validator.getMessageParameters()));"
236912,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/AnnotationValidationConfigurationBuilderTest.java,141,,"        assertTrue(Arrays.equals(new String[]{""one"", ""two"", ""three""}, validator.getMessageParameters()));"
236913,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/AnnotationValidationConfigurationBuilderTest.java,167,,"        assertEquals(""Foo is out of range!"", validator.getDefaultMessage());"
236914,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/AnnotationValidationExpAction.java,51,,"            messageParams = {""one"", ""two"", ""three""})"
236915,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/AnnotationValidationExpAction.java,51,,"            messageParams = {""one"", ""two"", ""three""})"
236916,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/AnnotationValidationExpAction.java,51,,"            messageParams = {""one"", ""two"", ""three""})"
236917,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/AnnotationValidationExpAction.java,57,,"    @CustomValidator(type = ""myValidator"", fieldName = ""foo"", key = ""foo.invalid"", message = ""Foo is invalid!"","
236918,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/ConversionErrorFieldValidatorTest.java,54,,"        conversionErrors.put(""foo"", new ConversionData(""bar"", Integer.class));"
236919,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/DefaultActionValidatorManagerTest.java,95,,"        mockValidatorFileParser.expectAndReturn(""parseActionValidatorConfigs"","
236920,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/DefaultValidatorFactoryTest.java,35,,"        mockValidatorFileParser.expect(""parseValidatorDefinitions"", C.args(C.IS_NOT_NULL, C.IS_NOT_NULL, C.eq(""com/opensymphony/xwork2/validator/validators/default.xml"")));"
236921,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/DefaultValidatorFileParserTest.java,53,,"        mockValidatorFactory.expectAndReturn(""lookupRegisteredValidatorType"", C.args(C.eq(""expression"")), ExpressionValidator.class.getName());"
236922,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/DefaultValidatorFileParserTest.java,53,,"        mockValidatorFactory.expectAndReturn(""lookupRegisteredValidatorType"", C.args(C.eq(""expression"")), ExpressionValidator.class.getName());"
236923,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/DefaultValidatorFileParserTest.java,54,,"        mockValidatorFactory.expectAndReturn(""lookupRegisteredValidatorType"", C.args(C.eq(""required"")), RequiredFieldValidator.class.getName());"
236924,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/DefaultValidatorFileParserTest.java,130,,"        assertTrue(""Validation file should have thrown exception"", pass);"
236925,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/DefaultValidatorFileParserTest.java,174,,"            mockValidatorFactory.expectAndReturn(""lookupRegisteredValidatorType"", C.args(C.eq(""requiredstring"")), RequiredStringValidator.class.getName());"
236926,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/DoubleRangeFieldValidatorTest.java,57,,"        params.put(""percentage"", 100.12);"
236927,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/DoubleRangeFieldValidatorTest.java,97,,"        prod.setName(""coca cola"");"
236928,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/DoubleRangeFieldValidatorTest.java,105,,"        val.setFieldName(""price"");"
236929,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/RegexFieldValidatorTest.java,57,,"        validator.setRegex(""^Sec.*"");"
236930,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/RegexFieldValidatorTest.java,59,,"        validator.setFieldName(""username"");"
236931,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/RepopulateConversionErrorFieldValidatorSupportTest.java,50,,"		Object valueFromStack1 = ActionContext.getContext().getValueStack().findValue(""someFieldName"", String.class);"
236932,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/SimpleActionValidationTest.java,50,,"        params.put(""baz"", ""10"");"
236933,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/SimpleActionValidationTest.java,53,,"        params.put(""bar"", ""7"");"
236934,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/StringLengthFieldValidatorTest.java,61,,"        action.setMyField(""   "");"
236935,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/StringValidatorTest.java,69,,"        assertTrue(fieldErrors.containsKey(""horse""));"
236936,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/StringValidatorTest.java,101,,"        assertTrue(fieldErrors.containsKey(""cow""));"
236937,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/StringValidatorTest.java,109,,"        assertTrue(fieldErrors.containsKey(""donkey""));"
236938,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/URLValidatorTest.java,280,,"        validator.setFieldName(""urlSafeness"");"
236939,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/ValidatorAnnotationTest.java,74,,"        ActionProxy proxy = actionProxyFactory.createActionProxy("""", ""annotatedMethod"", null, extraContext);"
236940,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/VisitorFieldValidatorModelTest.java,50,,"        ActionConfig config = new ActionConfig.Builder("""", ""name"", """").build();"
236941,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/VisitorFieldValidatorTest.java,92,,"        assertTrue(fieldErrors.containsKey(""context""));"
236942,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/VisitorFieldValidatorTest.java,109,,"        assertTrue(fieldErrors.containsKey(""bean.count""));"
236943,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/VisitorFieldValidatorTest.java,152,,"        assertTrue(fieldErrors.containsKey(""bean.name""));"
236944,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/VisitorFieldValidatorTest.java,153,,"        assertFalse(fieldErrors.containsKey(""bean.birth""));"
236945,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/validators/CreditCardValidatorTest.java,40,,"        validator.setFieldName(""americanExpress"");"
236946,./TargetProjects/struts/core/src/test/java/com/opensymphony/xwork2/validator/validators/IntRangeFieldValidatorTest.java,89,,"        validator.setFieldName(""ints"");"
236947,./TargetProjects/struts/core/src/test/java/org/apache/struts2/RequestUtilsTest.java,36,,"        expect(requestMock.getServletPath()).andStubReturn(""/mycontext/"");"
236948,./TargetProjects/struts/core/src/test/java/org/apache/struts2/RequestUtilsTest.java,47,,"        expect(requestMock.getPathInfo()).andStubReturn(""test.jsp"");"
236949,./TargetProjects/struts/core/src/test/java/org/apache/struts2/RequestUtilsTest.java,57,,"        expect(requestMock.getContextPath()).andStubReturn(""/servlet"");"
236950,./TargetProjects/struts/core/src/test/java/org/apache/struts2/StrutsExceptionTest.java,32,,"        StrutsException e = new StrutsException(""testThrowable"", new IllegalArgumentException(""Arg is null""));"
236951,./TargetProjects/struts/core/src/test/java/org/apache/struts2/StrutsExceptionTest.java,33,,"        assertEquals(""org/apache/struts2/StrutsExceptionTest.java"", e.getLocation().getURI());"
236952,./TargetProjects/struts/core/src/test/java/org/apache/struts2/action/CspReportActionTest.java,35,,"      MockHttpServletRequest request = new MockHttpServletRequest(method.toString(), ""/requestUri"");"
236953,./TargetProjects/struts/core/src/test/java/org/apache/struts2/components/ComponentTest.java,160,,"        t.setName(""textFieldName"");"
236954,./TargetProjects/struts/core/src/test/java/org/apache/struts2/components/FormButtonTest.java,43,,"        submit.setId(""submitId"");"
236955,./TargetProjects/struts/core/src/test/java/org/apache/struts2/components/PropertyTest.java,48,,"        stack.push(new FooBar(""foo-value"", ""bar-value""));"
236956,./TargetProjects/struts/core/src/test/java/org/apache/struts2/components/PropertyTest.java,48,,"        stack.push(new FooBar(""foo-value"", ""bar-value""));"
236957,./TargetProjects/struts/core/src/test/java/org/apache/struts2/components/PropertyTest.java,50,,"        property.setDefault(""default"");"
236958,./TargetProjects/struts/core/src/test/java/org/apache/struts2/components/UIBeanTest.java,46,,"        form.getParameters().put(""id"", ""formId"");"
236959,./TargetProjects/struts/core/src/test/java/org/apache/struts2/components/UIBeanTest.java,151,,"        ActionContext.getContext().put(""attr"", context);"
236960,./TargetProjects/struts/core/src/test/java/org/apache/struts2/components/UIBeanTest.java,370,,"        assertEquals(""/content"", field.uiStaticContentPath);"
236961,./TargetProjects/struts/core/src/test/java/org/apache/struts2/components/UIComponentTest.java,129,,"            tag.setName(""name"");"
236962,./TargetProjects/struts/core/src/test/java/org/apache/struts2/components/UIComponentTest.java,130,,"            tag.setLabel(""label"");"
236963,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/DefaultDispatcherErrorHandlerTest.java,58,,"            fail(""Mock sendError call setup failed.  Ex: "" + ioe);"
236964,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/DefaultStaticContentLoaderTest.java,45,,"        assertEquals(result1.get(0), ""foo/bar/package1/"");"
236965,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/DefaultStaticContentLoaderTest.java,46,,"        assertEquals(result1.get(1), ""foo/bar/package2/"");"
236966,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/DefaultStaticContentLoaderTest.java,47,,"        assertEquals(result1.get(2), ""foo/bar/package3/"");"
236967,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/DefaultStaticContentLoaderTest.java,121,,"        assertEquals(""/content"", loader.uiStaticContentPath);"
236968,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/DispatcherTest.java,79,,"            put(StrutsConstants.STRUTS_I18N_ENCODING, ""utf-8"");"
236969,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/DispatcherTest.java,89,,"        req.addHeader(""X-Requested-With"", ""XMLHttpRequest"");"
236970,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/DispatcherTest.java,107,,"        mock.expectAndReturn(""getCharacterEncoding"", ""utf-8"");"
236971,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/DispatcherTest.java,108,,"        mock.expectAndReturn(""getHeader"", ""X-Requested-With"", """");"
236972,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/DispatcherTest.java,251,,"        mockContainer.expectAndReturn(""getInstance"", C.args(C.eq(String.class), C.eq(StrutsConstants.STRUTS_CONFIGURATION_XML_RELOAD)),"
236973,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/DispatcherTest.java,275,,"        InterceptorMapping interceptorMapping = new InterceptorMapping(""test"", (Interceptor) mockInterceptor.proxy());"
236974,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/DispatcherTest.java,430,,"        mock.expectAndReturn(""getParameterMap"", new HashMap<String, Object>());  // From Dispatcher prepare()."
236975,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/DispatcherTest.java,431,,"        mock.expectAndReturn(""getSession"", false, mockHttpSession);  // From Dispatcher prepare()."
236976,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/DispatcherTest.java,482,,"        mock.expectAndReturn(""getLocale"", Locale.UK);                // From Dispatcher prepare()."
236977,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/SessionMapTest.java,51,,"        attributeNames.add(""test"");"
236978,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/SessionMapTest.java,52,,"        attributeNames.add(""anotherTest"");"
236979,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/SessionMapTest.java,56,,"        sessionMock.expect(""setAttribute"","
236980,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/SessionMapTest.java,83,,"        sessionMock.expectAndReturn(""getAttribute"", new Constraint[]{"
236981,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/SessionMapTest.java,84,,"                new IsEqual(""KEY"")"
236982,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/mapper/CompositeActionMapperTest.java,46,,"        mockContainer.expectAndReturn(""getInstance"", C.args(C.eq(ActionMapper.class), C.eq(""mapper1"")), mapper1);"
236983,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapperTest.java,53,,"        req.setupGetContextPath(""/my/namespace"");"
236984,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapperTest.java,58,,"        PackageConfig pkg2 = new PackageConfig.Builder(""my"").namespace(""/my"").build();"
236985,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapperTest.java,69,,"        req.setupGetRequestURI(""/my/namespace/actionName.action"");"
236986,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapperTest.java,72,,"        req.addExpectedGetAttributeName(""javax.servlet.include.servlet_path"");"
236987,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapperTest.java,78,,"        assertEquals(""actionName"", mapping.getName());"
236988,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapperTest.java,84,,"        req.setupGetRequestURI(""/my/namespace/actionName!add.action"");"
236989,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapperTest.java,90,,"        mapper.setAllowDynamicMethodCalls(""true"");"
236990,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapperTest.java,116,,"        req.setupGetRequestURI(""/foo/actionName.action"");"
236991,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapperTest.java,185,,"        req.setupGetRequestURI(""/bo/foo/actionName.action"");"
236992,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapperTest.java,230,,"        mapper.setAllowDynamicMethodCalls(""false"");"
236993,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapperTest.java,243,,"        request.setupGetServletPath(""/someServletPath.action"");"
236994,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapperTest.java,300,,"        orig.setExtension(""foo"");"
236995,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapperTest.java,347,,"        defaultActionMapper.parseNameAndNamespace(""someAction"", actionMapping, configManager);"
236996,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapperTest.java,402,,"        parameterMap.put(DefaultActionMapper.ACTION_PREFIX + ""myAction"", """");"
236997,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapperTest.java,431,,"        parameterMap.put(DefaultActionMapper.ACTION_PREFIX + ""my/Action"", """");"
236998,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapperTest.java,633,,"        assertEquals(""Name not right: "" + name, ""foo"", name);"
236999,./TargetProjects/struts/core/src/test/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapperTest.java,665,,"        actionMapping.setMethod(""myMethod"");"
