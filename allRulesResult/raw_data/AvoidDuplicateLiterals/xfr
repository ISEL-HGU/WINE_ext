147000,./TargetProjects/jmeter/src/jorphan/src/test/java/org/apache/jorphan/collections/PackageTest.java,52,,"        HashTree tree3 = new HashTree(""abcde"");"
147001,./TargetProjects/jmeter/src/jorphan/src/test/java/org/apache/jorphan/collections/PackageTest.java,97,,"        ListedHashTree tree = new ListedHashTree(""key"");"
147002,./TargetProjects/jmeter/src/jorphan/src/test/java/org/apache/jorphan/gui/MinMaxLongRendererTest.java,37,,"            {Long.MAX_VALUE, ""#N/A"" },"
147003,./TargetProjects/jmeter/src/jorphan/src/test/java/org/apache/jorphan/util/TestJorphanUtils.java,37,,"        assertEquals(""xyzdef"", JOrphanUtils.replaceFirst(""abcdef"", ""abc"", ""xyz""));"
147004,./TargetProjects/jmeter/src/jorphan/src/test/java/org/apache/jorphan/util/TestJorphanUtils.java,37,,"        assertEquals(""xyzdef"", JOrphanUtils.replaceFirst(""abcdef"", ""abc"", ""xyz""));"
147005,./TargetProjects/jmeter/src/jorphan/src/test/java/org/apache/jorphan/util/TestJorphanUtils.java,37,,"        assertEquals(""xyzdef"", JOrphanUtils.replaceFirst(""abcdef"", ""abc"", ""xyz""));"
147006,./TargetProjects/jmeter/src/jorphan/src/test/java/org/apache/jorphan/util/TestJorphanUtils.java,57,,"        assertEquals(""abcdef"", JOrphanUtils.replaceFirst(""abcdef"", ""alt=\""\"" "", """"));"
147007,./TargetProjects/jmeter/src/jorphan/src/test/java/org/apache/jorphan/util/TestJorphanUtils.java,82,,"        assertThat(""Ignore trailing split chars"", JOrphanUtils.split(""a,bc,,"", "","", true),"
147008,./TargetProjects/jmeter/src/jorphan/src/test/java/org/apache/jorphan/util/TestJorphanUtils.java,315,,"                JOrphanUtils.rightAlign(new StringBuilder(""foo""), 39).toString());"
147009,./TargetProjects/jmeter/src/jorphan/src/test/java/org/apache/jorphan/util/TestJorphanUtils.java,343,,"        Assert.assertArrayEquals(new Object[]{""toto"", 0},"
147010,./TargetProjects/jmeter/src/protocol/http/src/main/java/org/apache/jmeter/protocol/http/control/CacheManager.java,66,,"    @SuppressWarnings(""JdkObsolete"")"
147011,./TargetProjects/jmeter/src/protocol/http/src/main/java/org/apache/jmeter/protocol/http/modifier/URLRewritingModifier.java,183,,"                + ""[\""']"" + ""[^>]*""  // $NON-NLS-1$"
147012,./TargetProjects/jmeter/src/protocol/http/src/main/java/org/apache/jmeter/protocol/http/parser/HtmlParsingUtils.java,304,,"                    url.addEncodedArgument(getAttributeValue(nodeAtts, ""name""),  // $NON-NLS-1$"
147013,./TargetProjects/jmeter/src/protocol/http/src/main/java/org/apache/jmeter/protocol/http/proxy/ProxyControl.java,772,,"    @SuppressWarnings(""JdkObsolete"")"
147014,./TargetProjects/jmeter/src/protocol/http/src/main/java/org/apache/jmeter/protocol/http/proxy/gui/ProxyControlGui.java,592,,"                    + ""\n"" + ioe.getLocalizedMessage(), JMeterUtils.getResString(""error_title""),  // $NON-NLS-1$  $NON-NLS-2$"
147015,./TargetProjects/jmeter/src/protocol/http/src/main/java/org/apache/jmeter/protocol/http/proxy/gui/ProxyControlGui.java,972,,"        panel.add(prefixHTTPSampleName, ""growx, span"");"
147016,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/curl/BasicCurlParserTest.java,93,,"        assertEquals(""http://jmeter.apache.org/"", request.getUrl());"
147017,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/curl/BasicCurlParserTest.java,96,,"        assertEquals(""GET"", request.getMethod());"
147018,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/curl/BasicCurlParserTest.java,301,,"                ""With method 'parser',the cacert need to show a warning' "");"
147019,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/curl/BasicCurlParserTest.java,351,,"        String cmdLine = ""curl 'https://www.w3schools.com/html/tryit.asp?filename=tryhtml_form_submit/action_page.php' """
147020,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/curl/BasicCurlParserTest.java,355,,"        assertEquals(""name=test"", request.getPostData());"
147021,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/curl/BasicCurlParserTest.java,424,,"        FileUtils.writeStringToFile(tempFile, ""test"", encoding, true);"
147022,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/curl/BasicCurlParserTest.java,493,,"        String cmdLine = ""curl 'https://www.exaple.invalid/' """
147023,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/gui/action/ParseCurlCommandActionTest.java,66,,"        testCommentText(""curl 'http://jmeter.apache.org/' --max-redirs 'b'"","
147024,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/gui/action/ParseCurlCommandActionTest.java,69,,"        testCommentText(""curl 'http://jmeter.apache.org/' --include --keepalive-time '20'"","
147025,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/gui/action/ParseCurlCommandActionTest.java,106,,"                ""Curl commands should be saved in list"");"
147026,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/gui/action/ParseCurlCommandActionTest.java,127,,"        return Files.write(dir.resolve(""test.txt""), s.getBytes(StandardCharsets.UTF_8), StandardOpenOption.CREATE_NEW)"
147027,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/gui/action/ParseCurlCommandActionTest.java,208,,"        assertEquals(""jmeter.apache.org"", httpSampler.getDomain(), ""domain should be set in httpsampler"");"
147028,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/gui/action/ParseCurlCommandActionTest.java,210,,"        assertEquals(""GET"", httpSampler.getMethod(), ""method should be set in httpsampler"");"
147029,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/gui/action/ParseCurlCommandActionTest.java,225,,"        assertEquals(""test"", samplerArguments.getArgument(0).getName(), ""form name should be set in httpsampler"");"
147030,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/gui/action/ParseCurlCommandActionTest.java,482,,"                ""When the Dns servers aren't the same, should add the DnsCacheManager in Http Request"");"
147031,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/gui/action/ParseCurlCommandActionTest.java,508,,"        dnsCacheManager.addHost(""moonagic.com"", ""127.0.0.2"");"
147032,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/config/MultipartUrlConfigTest.java,98,,"            + ""\r\n"""
147033,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/control/TestAuthManager.java,55,,"        assertEquals(""password"", at.getPass());"
147034,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/control/TestAuthManager.java,68,,"        assertEquals(""pass"", at.getPass());"
147035,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/control/TestAuthManagerThreadIteration.java,46,,"        subjects.put(""test"", future);"
147036,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/control/TestAuthManagerThreadIteration.java,68,,"        assertNotNull(""Before the iteration, the AuthManager shouldn't be cleared"",subjects.get(""test""));"
147037,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/control/TestCacheManagerBase.java,64,,"        this.sampleResultOK = getSampleResultWithSpecifiedResponseCode(""200"");"
147038,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/control/TestCacheManagerBase.java,163,,"        String varyHeader = ""Accept-Encoding"";"
147039,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/control/TestCacheManagerBase.java,174,,"                        new Header(varyHeader, ""another value"") },"
147040,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/control/TestCacheManagerBase.java,210,,"    @SuppressWarnings(""deprecation"")"
147041,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/control/TestCacheManagerThreadIteration.java,315,,"        setCacheControl(""public, max-age=1"");"
147042,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/control/TestCookieManagerThreadIteration.java,95,,"        assertTrue(""Before the iteration,the quantity of cookies should be 1"","
147043,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/control/TestCookieManagerThreadIteration.java,97,,"        assertEquals(""Before the iteration, the value of cookie should be what user have set"", DYNAMIC_COOKIE,"
147044,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/control/TestCookieManagerThreadIteration.java,102,,"        assertTrue(""After the iteration, the quantity of cookies should be 1"","
147045,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/control/TestHC4CookieManager.java,226,,"        man.addCookieFromHeader(""test=1"", url);"
147046,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/control/TestHC4CookieManager.java,234,,"        URL url = new URL(""http://a.b.c/"");"
147047,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/control/TestHC4CookieManager.java,392,,"        URL url = new URL(""http://d.e.f/goo.html"");"
147048,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/control/TestHC4CookieManager.java,393,,"        man.addCookieFromHeader(""test=moo"", url);"
147049,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/control/TestHC4CookieManager.java,464,,"        URL url = new URL(""http://order.now/sub1/moo.html"");"
147050,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/control/TestHC4CookieManager.java,467,,"        man.addCookieFromHeader(""test2=moo2;path=/sub1"", url);"
147051,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/control/TestHC4CookieManager.java,468,,"        man.addCookieFromHeader(""test2=moo3;path=/"", url);"
147052,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/control/TestHC4CookieManager.java,482,,"        man.addCookieFromHeader(""test1=moo1;"", url);"
147053,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/control/TestHC4CookieManager.java,486,,"        assertEquals(""/sub1"", man.get(0).getPath()); // Defaults to caller URL"
147054,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/control/TestHTTPMirrorThread.java,109,,"        Socket clientSocket = new Socket(""localhost"", HTTP_SERVER_PORT);"
147055,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/control/TestHTTPMirrorThread.java,116,,"        bos.write(""GET / HTTP 1.1"".getBytes(ISO_8859_1));"
147056,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/control/TestHTTPMirrorThread.java,118,,"        bos.write(""Host: localhost"".getBytes(ISO_8859_1));"
147057,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/control/TestHTTPMirrorThread.java,341,,"        URL url = new URL(""http"", ""localhost"", HTTP_SERVER_PORT, ""/"");"
147058,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/modifier/TestAnchorModifier.java,115,,"        jmctx.setCurrentSampler(makeContext(""http://www.apache.org/subdir/previous.html""));"
147059,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/modifier/TestAnchorModifier.java,131,,"        String responseText = ""<html><head><title>Test page</title></head><body>"""
147060,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/modifier/TestAnchorModifier.java,142,,"        assertEquals(""http://www.apache.org/subdir/index.html"", config.getUrl().toString());"
147061,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/modifier/TestAnchorModifier.java,192,,"                + ""<a href=\""/home/index.html?param1=value1\"">"" + ""Goto index page</a></body></html>"";"
147062,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/modifier/TestAnchorModifier.java,192,,"                + ""<a href=\""/home/index.html?param1=value1\"">"" + ""Goto index page</a></body></html>"";"
147063,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/modifier/TestURLRewritingModifier.java,60,,"        String html = ""location: http://server.com/index.html"" + ""?session_id=jfdkjdkf%20jddkfdfjkdjfdf%22;"";"
147064,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/modifier/TestURLRewritingModifier.java,63,,"        mod.setArgumentName(""session_id"");"
147065,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/modifier/TestURLRewritingModifier.java,65,,"        sampler.addArgument(""session_id"", ""adfasdfdsafasdfasd"");"
147066,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/modifier/TestURLRewritingModifier.java,149,,"        String html = ""<url>/some/path;jsessionid=123456789</url>"";"
147067,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/modifier/TestURLRewritingModifier.java,152,,"        mod.setArgumentName(""jsessionid"");"
147068,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/parser/TestBug60842HtmlParser.java,83,,"                            ""http://example.org/foo"" },"
147069,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/parser/TestHTMLParser.java,152,,"                    ""http://localhost/mydir/myfile.html"","
147070,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/parser/TestHTMLParser.java,157,,"                    ""testfiles/HTMLParserTestCaseBase.set"","
147071,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/parser/TestHTMLParser.java,158,,"                    ""testfiles/HTMLParserTestCaseBase.all""),"
147072,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/parser/TestHTMLParser.java,192,,"        new TestData(""testfiles/HTMLParserTestCaseWithConditional1.html"","
147073,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/parser/TestHTMLParser.java,219,,"        new TestData(""testfiles/HTMLParserTestCaseWithConditional2.html"","
147074,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/parser/TestHTMLParser.java,240,,"        new TestData(""testfiles/HTMLParserTestCaseWithConditional3.html"","
147075,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/parser/TestHTMLParser.java,313,,"            fail(""Should not have been able to create the parser"");"
147076,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/parser/TestHtmlParsingUtils.java,53,,"        arg = new Argument(""test"", ""abcd"");"
147077,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/parser/TestHtmlParsingUtils.java,69,,"        target.setProtocol(""http:"");"
147078,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/parser/TestHtmlParsingUtils.java,101,,"        assertTrue(HtmlParsingUtils.isEqualOrMatches(""http:"", ""ht+p:""));"
147079,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/proxy/TestHttpRequestHdr.java,48,,"        String url = ""http://localhost/matrix.html"";"
147080,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/proxy/TestHttpRequestHdr.java,50,,"        String contentEncoding = ""UTF-8"";"
147081,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/proxy/TestHttpRequestHdr.java,52,,"            ""GET "" + url"
147082,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/proxy/TestHttpRequestHdr.java,61,,"        checkArgument((HTTPArgument)arguments.getArgument(0), ""update"", ""yes"", ""yes"", contentEncoding, false);"
147083,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/proxy/TestHttpRequestHdr.java,78,,"        String testPostRequest = ""POST "" + url + "" HTTP/1.0\n"""
147084,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/proxy/TestHttpRequestHdr.java,79,,"                + ""Content-type: """
147085,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/proxy/TestHttpRequestHdr.java,80,,"                + HTTPConstants.APPLICATION_X_WWW_FORM_URLENCODED + ""\r\n"""
147086,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/proxy/TestHttpRequestHdr.java,81,,"                + ""Content-length: "" + getBodyLength(postBody, contentEncoding) + ""\r\n"""
147087,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/proxy/TestHttpRequestHdr.java,108,,"        testPostRequest = ""POST "" + url + "" HTTP/1.1\r\n"""
147088,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/proxy/TestHttpRequestHdr.java,224,,"        checkArgument((HTTPArgument)arguments.getArgument(0), ""abc%3FSPACE"", ""a+b"", ""a+b"", contentEncoding, false);"
147089,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/proxy/TestHttpRequestHdr.java,225,,"        checkArgument((HTTPArgument)arguments.getArgument(1), ""space"", ""a%20b"", ""a%20b"", contentEncoding, false);"
147090,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/proxy/TestHttpRequestHdr.java,225,,"        checkArgument((HTTPArgument)arguments.getArgument(1), ""space"", ""a%20b"", ""a%20b"", contentEncoding, false);"
147091,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/proxy/TestHttpRequestHdr.java,226,,"        checkArgument((HTTPArgument)arguments.getArgument(2), ""query"", ""What%3F"", ""What%3F"", contentEncoding, false);"
147092,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/proxy/TestHttpRequestHdr.java,226,,"        checkArgument((HTTPArgument)arguments.getArgument(2), ""query"", ""What%3F"", ""What%3F"", contentEncoding, false);"
147093,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/proxy/TestHttpRequestHdr.java,243,,"        checkArgument((HTTPArgument)arguments.getArgument(0), ""abc?SPACE"", ""a b"", ""a+b"", contentEncoding, true);"
147094,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/proxy/TestHttpRequestHdr.java,314,,"            + ""?param1="" + param1Value + ""&param2="" + param2ValueEncoded + "" """
147095,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/proxy/TestHttpRequestHdr.java,324,,"        checkArgument((HTTPArgument)arguments.getArgument(0), ""param1"", param1Value, param1Value, contentEncoding, false);"
147096,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/proxy/TestHttpRequestHdr.java,326,,"        checkArgument((HTTPArgument)arguments.getArgument(1), ""param2"", param2ValueEncoded, param2ValueEncoded, contentEncoding, false);"
147097,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/proxy/TestHttpRequestHdr.java,347,,"        contentEncoding = ""ISO-8859-1"";"
147098,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/proxy/TestHttpRequestHdr.java,449,,"        String descriptionValue = ""mydescription"";"
147099,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/proxy/TestHttpRequestHdr.java,461,,"        checkArgument((HTTPArgument)arguments.getArgument(0), ""title"", titleValue, titleValue, contentEncoding, false);"
147100,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/proxy/TestHttpRequestHdr.java,462,,"        checkArgument((HTTPArgument)arguments.getArgument(1), ""description"", descriptionValue, descriptionValue, contentEncoding, false);"
147101,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/proxy/TestProxyControl.java,71,,"        assertTrue(""Should allow if no content-type present"", control.filterContentType(result));"
147102,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/proxy/TestProxyControl.java,72,,"        result.setContentType(""text/html; charset=utf-8"");"
147103,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/proxy/TestProxyControl.java,73,,"        assertTrue(""Should allow text/html"", control.filterContentType(result));"
147104,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/proxy/TestProxyControl.java,74,,"        result.setContentType(""image/png"");"
147105,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/proxy/TestProxyControl.java,109,,"        result.setContentType(""text/css"");"
147106,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/sampler/ParallelResourcesAndIpSource.java,200,,"                        ""  response: OK\n"" +"
147107,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/sampler/PostWriterTest.java,54,,"    private static final String HTTP_ENCODING = ""ISO-8859-1"";"
147108,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/sampler/PostWriterTest.java,102,,"        String titleValue = ""mytitle"";"
147109,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/sampler/PostWriterTest.java,103,,"        String descriptionValue = ""mydescription"";"
147110,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/sampler/PostWriterTest.java,179,,"        byte[] expectedUrl = ""title=mytitle&description=mydescription"".getBytes(); // TODO - charset?"
147111,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/sampler/PostWriterTest.java,264,,"        String fileField = ""upload"";"
147112,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/sampler/PostWriterTest.java,265,,"        String mimeType = ""text/plain"";"
147113,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/sampler/PostWriterTest.java,430,,"        byte[] expectedUrl = (""title="" + titleValue + ""&description="" + descriptionValue).getBytes(""US-ASCII"");"
147114,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/sampler/PostWriterTest.java,430,,"        byte[] expectedUrl = (""title="" + titleValue + ""&description="" + descriptionValue).getBytes(""US-ASCII"");"
147115,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/sampler/PostWriterTest.java,430,,"        byte[] expectedUrl = (""title="" + titleValue + ""&description="" + descriptionValue).getBytes(""US-ASCII"");"
147116,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/sampler/PostWriterTest.java,544,,"        expectedUrl = sb.append(""title="").append(titleValue.replaceAll(""%20"", ""+"").replaceAll(""%C3%85"", ""%C5""))"
147117,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/sampler/PostWriterTest.java,544,,"        expectedUrl = sb.append(""title="").append(titleValue.replaceAll(""%20"", ""+"").replaceAll(""%C3%85"", ""%C5""))"
147118,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/sampler/TestHTTPSamplers.java,60,,"        assertEquals(""name2"", arg.getName());"
147119,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/sampler/TestHTTPSamplers.java,113,,"        sampler.setProtocol(""http"");"
147120,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/sampler/TestHTTPSamplers.java,125,,"        config.addArgument(""param1"", ""value1"");"
147121,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/sampler/TestHTTPSamplers.java,125,,"        config.addArgument(""param1"", ""value1"");"
147122,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/sampler/TestHTTPSamplers.java,126,,"        config.setPath(""/index.html"");"
147123,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/sampler/TestHTTPSamplers.java,136,,"        config.setDomain(""192.168.0.1"");"
147124,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/sampler/TestHTTPSamplers.java,274,,"        config.setHTTPFiles(new HTTPFileArg[]{new HTTPFileArg("""", """", ""text/plain"")});"
147125,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/sampler/TestHTTPSamplersAgainstHttpMirrorServer.java,195,,"        String titleValue = ""mytitle"";"
147126,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/sampler/TestHTTPSamplersAgainstHttpMirrorServer.java,197,,"        String descriptionValue = ""mydescription"";"
147127,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/sampler/TestHTTPSamplersAgainstHttpMirrorServer.java,215,,"        String titleField = ""title"";"
147128,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/sampler/TestHTTPSamplersAgainstHttpMirrorServer.java,217,,"        String descriptionField = ""description"";"
147129,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/sampler/TestHTTPSamplersAgainstHttpMirrorServer.java,246,,"                contentEncoding = ""UTF-8"";"
147130,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/sampler/TestHTTPSamplersAgainstHttpMirrorServer.java,316,,"                vars.put(""title_prefix"", ""a test\u00c5"");"
147131,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/sampler/TestHTTPSamplersAgainstHttpMirrorServer.java,316,,"                vars.put(""title_prefix"", ""a test\u00c5"");"
147132,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/sampler/TestHTTPSamplersAgainstHttpMirrorServer.java,317,,"                vars.put(""description_suffix"", ""the_end"");"
147133,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/sampler/TestHTTPSamplersAgainstHttpMirrorServer.java,317,,"                vars.put(""description_suffix"", ""the_end"");"
147134,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/sampler/TestHTTPSamplersAgainstHttpMirrorServer.java,393,,"        titleValue = ""mytitle/="";"
147135,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/sampler/TestHTTPSamplersAgainstHttpMirrorServer.java,394,,"        descriptionValue = ""mydescription   /\\"";"
147136,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/sampler/TestHTTPSamplersAgainstHttpMirrorServer.java,881,,"        checkHeaderContentType(res.getRequestHeaders(), ""multipart/form-data"" + ""; boundary="" + boundaryString);"
147137,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/sampler/TestHTTPSamplersAgainstHttpMirrorServer.java,881,,"        checkHeaderContentType(res.getRequestHeaders(), ""multipart/form-data"" + ""; boundary="" + boundaryString);"
147138,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/sampler/TestHTTPSamplersAgainstHttpMirrorServer.java,895,,"            fail(""No header and body section found"");"
147139,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/util/TestGraphQLRequestParamUtils.java,129,,"        assertEquals(""query { droid { id }}"", params.getQuery());"
147140,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/util/TestGraphQLRequestParamUtils.java,158,,"        args.addArgument(new HTTPArgument(""query"", ""query { droid { id }}"", ""="", false));"
147141,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/util/TestHTTPArgument.java,30,,"        HTTPArgument arg = new HTTPArgument(""name.?"", ""value_ here"");"
147142,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/util/TestHTTPArgument.java,30,,"        HTTPArgument arg = new HTTPArgument(""name.?"", ""value_ here"");"
147143,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/util/TestHTTPArgument.java,33,,"        assertEquals(""name.%3F"", arg.getEncodedName());"
147144,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/util/TestHTTPArgument.java,34,,"        assertEquals(""value_+here"", arg.getEncodedValue());"
147145,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/util/TestHTTPFileArg.java,32,,"        file = new HTTPFileArg(""path"");"
147146,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/util/TestHTTPFileArg.java,36,,"        file = new HTTPFileArg(""path"", ""param"", ""mimetype"");"
147147,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/util/TestHTTPFileArg.java,36,,"        file = new HTTPFileArg(""path"", ""param"", ""mimetype"");"
147148,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/util/TestHTTPFileArgs.java,40,,"        files.addHTTPFileArg(""hede"");"
147149,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/util/TestHTTPFileArgs.java,75,,"        files.addHTTPFileArg(""file1"");"
147150,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/util/TestHTTPFileArgs.java,76,,"        files.addHTTPFileArg(""file2"");"
147151,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/util/TestHTTPFileArgs.java,80,,"        files.addHTTPFileArg(""file5"");"
147152,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/util/TestHTTPFileArgs.java,81,,"        files.addHTTPFileArg(""file6"");"
147153,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/util/accesslog/TestLogFilter.java,102,,"                assertTrue(""Expect to accept "" + theFile, expect);"
147154,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/protocol/http/util/accesslog/TestLogFilter.java,104,,"                assertFalse(""Expect to reject "" + theFile, expect);"
147155,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/testelement/TestHeaderManager.java,32,,"        headerManager.add(new Header(""Referer"", ""https://jmeter.apache.org/changes.html""));"
147156,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/testelement/TestHeaderManager.java,32,,"        headerManager.add(new Header(""Referer"", ""https://jmeter.apache.org/changes.html""));"
147157,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/testelement/TestHeaderManager.java,33,,"        headerManager.add(new Header(""JSESSIONID"", ""AZAZDZDAFEFZEVZEZEVZEVZEVZZ""));"
147158,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/testelement/TestHeaderManager.java,33,,"        headerManager.add(new Header(""JSESSIONID"", ""AZAZDZDAFEFZEVZEZEVZEVZEVZZ""));"
147159,./TargetProjects/jmeter/src/protocol/http/src/test/java/org/apache/jmeter/testelement/TestHeaderManager.java,35,,"        int numberOfReplacements = headerManager.replace(""jmeter.apache.org"", ""${host}"", true);"
147160,./TargetProjects/jmeter/src/protocol/jms/src/main/java/org/apache/jmeter/protocol/jms/Utils.java,59,,"                log.error(""Error during close: "", e);"
147161,./TargetProjects/jmeter/src/protocol/jms/src/main/java/org/apache/jmeter/protocol/jms/control/gui/JMSPublisherGui.java,210,,"        mainPanel.add(useProperties, ""span"");"
147162,./TargetProjects/jmeter/src/protocol/jms/src/main/java/org/apache/jmeter/protocol/jms/control/gui/JMSPublisherGui.java,213,,"        mainPanel.add(jndiICF, ""span, growx"");"
147163,./TargetProjects/jmeter/src/protocol/jms/src/main/java/org/apache/jmeter/protocol/jms/control/gui/JMSSubscriberGui.java,183,,"        mainPanel.add(jndiICF, ""span, growx"");"
147164,./TargetProjects/jmeter/src/protocol/jms/src/main/java/org/apache/jmeter/protocol/jms/sampler/JMSSampler.java,353,,"    @SuppressWarnings(""JdkObsolete"")"
147165,./TargetProjects/jmeter/src/protocol/jms/src/main/java/org/apache/jmeter/protocol/jms/sampler/render/RendererFactory.java,36,,"    @SuppressWarnings(""ImmutableEnumChecker"")"
147166,./TargetProjects/jmeter/src/protocol/jms/src/test/java/org/apache/jmeter/protocol/jms/sampler/render/ObjectMessageRendererTest.java,67,,"            assertSame(p, getFirstCachedValue(), ""cache"");"
147167,./TargetProjects/jmeter/src/protocol/jms/src/test/java/org/apache/jmeter/protocol/jms/sampler/render/ObjectMessageRendererTest.java,75,,"        assertObject(object, ""eéè€"");"
147168,./TargetProjects/jmeter/src/protocol/jms/src/test/java/org/apache/jmeter/protocol/jms/sampler/render/TextMessageRendererTest.java,61,,"        String fileName = writeFile(""oneVar.txt"", ""${oneVar}"");"
147169,./TargetProjects/jmeter/src/protocol/jms/src/test/java/org/apache/jmeter/protocol/jms/sampler/render/TextMessageRendererTest.java,62,,"        vars.put(""oneVar"", ""foobar"");"
147170,./TargetProjects/jmeter/src/protocol/junit-sample/src/main/java/woolfel/DummyTestCase.java,54,,"            LOGGER.warn(""Exception on sleep"", e);"
147171,./TargetProjects/jmeter/src/protocol/junit/src/main/java/org/apache/jmeter/protocol/java/control/gui/JUnitTestSamplerGui.java,212,,"        panel.add(junit4, ""span 2"");"
147172,./TargetProjects/jmeter/src/protocol/ldap/src/main/java/org/apache/jmeter/protocol/ldap/sampler/LDAPExtSampler.java,125,,"    public static final String ATTRIBS = ""attributes""; // $NON-NLS-1$"
147173,./TargetProjects/jmeter/src/protocol/ldap/src/main/java/org/apache/jmeter/protocol/ldap/sampler/LDAPExtSampler.java,749,,"                xmlBuffer.tag(""baseobj"",getRootdn()); // $NON-NLS-1$"
147174,./TargetProjects/jmeter/src/protocol/tcp/src/test/java/org/apache/jmeter/protocol/tcp/sampler/TCPClientDecoratorTest.java,162,,"            fail(""Expected IllegalArgumentException"");"
147175,./TargetProjects/johnzon/johnzon-core/src/main/java/org/apache/johnzon/core/JsonReaderImpl.java,95,,"                    throw new JsonParsingException(""Expected end of file"", parser.getLocation());"
147176,./TargetProjects/johnzon/johnzon-core/src/main/java/org/apache/johnzon/core/JsonStreamParserImpl.java,766,,"            throw uexc(""Unexpected premature end of number"");"
147177,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonCollectorTest.java,45,,"                                                      .add(""key"" + i, ""value"" + i)"
147178,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonCollectorTest.java,45,,"                                                      .add(""key"" + i, ""value"" + i)"
147179,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonCollectorTest.java,60,,"        source.put(""a"", Json.createValue(""string""));"
147180,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonGeneratorImplTest.java,56,,"        Json.createGenerator(writer).writeStartObject().writeKey(""foo"").write(""bar"").writeEnd().close();"
147181,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonGeneratorImplTest.java,310,,"        generator.writeStartObject().write(""firstName"", ""John"").write(""lastName"", ""Smith"").write(""age"", 25)"
147182,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonGeneratorImplTest.java,310,,"        generator.writeStartObject().write(""firstName"", ""John"").write(""lastName"", ""Smith"").write(""age"", 25)"
147183,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonGeneratorImplTest.java,313,,"        .writeStartObject().write(""type"", ""home"").write(""number"", ""212 555-1234"").writeEnd().writeStartObject()"
147184,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonGeneratorImplTest.java,313,,"        .writeStartObject().write(""type"", ""home"").write(""number"", ""212 555-1234"").writeEnd().writeStartObject()"
147185,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonGeneratorImplTest.java,336,,"        assertEquals(""{\n"" +"
147186,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonGeneratorImplTest.java,355,,"                        ""  ]\n"" +"
147187,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonGeneratorImplTest.java,380,,"                    ""  [\n"" +"
147188,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonObjectImplTest.java,43,,"            jsonObjectBuilder.add(""key"", String.format(""Key %d"", numer));"
147189,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonObjectImplTest.java,94,,"        getObject().getBoolean(""missing"");"
147190,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonParserTest.java,1332,,"                put(""org.apache.johnzon.max-string-length"", ""5"");"
147191,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPatchBuilderTest.java,44,,"                ""/foo"","
147192,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPatchBuilderTest.java,46,,"                new JsonStringImpl(""bar"")));"
147193,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPatchBuilderTest.java,94,,"                ""/path"","
147194,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPatchBuilderTest.java,97,,"                        .add(""test"")"
147195,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPatchBuilderTest.java,243,,"                        .add(""foo"", ""bar"")"
147196,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPatchBuilderTest.java,338,,"                new JsonStringImpl(""value"")));"
147197,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPatchDiffTest.java,46,,"                ""        {\n"" +"
147198,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPatchDiffTest.java,49,,"                ""        }\n"" +"
147199,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPatchDiffTest.java,97,,"        final JsonObject from = Json.createObjectBuilder().add(""testEmpty"", JsonValue.EMPTY_JSON_ARRAY).build();"
147200,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPatchDiffTest.java,139,,"                                              .add(""aa"", ""value"")"
147201,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPatchDiffTest.java,279,,"                                .add(""a"", ""replaced"")"
147202,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPatchTest.java,51,,"                                                                             ""/baz"","
147203,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPatchTest.java,53,,"                                                                             new JsonStringImpl(""qux"")));"
147204,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPatchTest.java,57,,"        assertEquals(""bar"", patched.getString(""foo""));"
147205,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPatchTest.java,57,,"        assertEquals(""bar"", patched.getString(""foo""));"
147206,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPatchTest.java,58,,"        assertEquals(""qux"", patched.getString(""baz""));"
147207,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPatchTest.java,85,,"        assertEquals(""aName"", patched.getString(""name""));"
147208,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPatchTest.java,98,,"                                                                             ""/foo/1"","
147209,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPatchTest.java,273,,"                                                                             ""/nomatch"","
147210,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPatchTest.java,307,,"                                                                             new JsonStringImpl(""boo"")));"
147211,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPatchTest.java,467,,"                              .add(""two"")"
147212,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPatchTest.java,470,,"                              .add(""one"")"
147213,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPatchTest.java,541,,"                                                                             ""/foo"","
147214,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPatchTest.java,641,,"                                .add(""partner"", Json.createObjectBuilder()"
147215,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPointerTest.java,232,,"        jsonPointer.add((JsonStructure) null, new JsonStringImpl(""qux""));"
147216,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPointerTest.java,240,,"                .add(""foo"", ""bar"").build(); // { ""foo"": ""bar"" }"
147217,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPointerTest.java,240,,"                .add(""foo"", ""bar"").build(); // { ""foo"": ""bar"" }"
147218,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPointerTest.java,306,,"        JsonPointerImpl jsonPointer = new JsonPointerImpl(JsonProvider.provider(), ""/baz"");"
147219,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPointerTest.java,336,,"                .add(""baz"", ""qux"")"
147220,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPointerTest.java,339,,"        JsonStructure result = jsonPointer.add(target, new JsonStringImpl(""boo""));"
147221,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPointerTest.java,350,,"                .add(""abc"")"
147222,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPointerTest.java,351,,"                .add(""def"").build();// [""abc"",""def""]"
147223,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPointerTest.java,359,,"        JsonPointerImpl jsonPointer = new JsonPointerImpl(JsonProvider.provider(), ""/foo/1"");"
147224,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPointerTest.java,544,,"                .add(""test"", Json.createObjectBuilder().add(""status"", ""200""))"
147225,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPointerTest.java,544,,"                .add(""test"", Json.createObjectBuilder().add(""status"", ""200""))"
147226,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPointerTest.java,558,,"                                  Json.createObjectBuilder().add(""CREATED"", ""201""))"
147227,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPointerTest.java,773,,"                                                                      .add(""name"", ""Anakin Skywalker""))"
147228,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonPointerUtilTest.java,41,,"        String encodedString = JsonPointerUtil.encode(""TestString"");"
147229,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/JsonReaderImplTest.java,377,,"                put(""org.apache.johnzon.default-char-buffer"", ""8"");"
147230,./TargetProjects/johnzon/johnzon-core/src/test/java/org/apache/johnzon/core/SerializationTest.java,46,,"        final JsonString source = new JsonStringImpl(""test"");"
147231,./TargetProjects/johnzon/johnzon-jaxrs/src/test/java/org/apache/johnzon/jaxrs/ConfigurableJohnzonProviderTest.java,65,,"        final String result = client().path(""johnzon"").type(MediaType.APPLICATION_JSON_TYPE).post(new Johnzon(""client"")).readEntity(String.class);"
147232,./TargetProjects/johnzon/johnzon-jaxrs/src/test/java/org/apache/johnzon/jaxrs/JohnzonProviderTest.java,82,,"        final String result = client().path(""johnzon"").type(MediaType.APPLICATION_JSON_TYPE).post(new Johnzon(""client""))"
147233,./TargetProjects/johnzon/johnzon-jsonb/src/main/java/org/apache/johnzon/jsonb/JohnzonJsonb.java,269,,"                throw new JsonbException(""I-JSON mode only accepts arrays and objects as root instances"");"
147234,./TargetProjects/johnzon/johnzon-jsonb/src/test/java/org/apache/johnzon/jsonb/DateFormatTest.java,96,,"                DateTimeFormatter.ofPattern(""E DD MMM yyyy HH:mm:ss z"")"
147235,./TargetProjects/johnzon/johnzon-jsonb/src/test/java/org/apache/johnzon/jsonb/DefaultMappingTest.java,155,,"        assertEquals(""\""true\"""", JSONB.toJson(""true""));"
147236,./TargetProjects/johnzon/johnzon-jsonb/src/test/java/org/apache/johnzon/jsonb/DefaultMappingTest.java,157,,"        assertEquals(""\""null\"""", JSONB.toJson(""null""));"
147237,./TargetProjects/johnzon/johnzon-jsonb/src/test/java/org/apache/johnzon/jsonb/DefaultMappingTest.java,165,,"        assertEquals(""1.2"", JSONB.toJson(OptionalDouble.of(1.2)));"
147238,./TargetProjects/johnzon/johnzon-jsonb/src/test/java/org/apache/johnzon/jsonb/DefaultMappingTest.java,395,,"        commonMap.put(""first"", 1);"
147239,./TargetProjects/johnzon/johnzon-jsonb/src/test/java/org/apache/johnzon/jsonb/DefaultMappingTest.java,396,,"        commonMap.put(""second"", 2);"
147240,./TargetProjects/johnzon/johnzon-jsonb/src/test/java/org/apache/johnzon/jsonb/DefaultMappingTest.java,405,,"        assertEquals(""[1,2]"", JSONB.toJson(commonList));"
147241,./TargetProjects/johnzon/johnzon-jsonb/src/test/java/org/apache/johnzon/jsonb/DefaultMappingTest.java,422,,"        Collection<Object> collection = JSONB.fromJson(""[\""first\"",\""second\""]"", Collection.class);"
147242,./TargetProjects/johnzon/johnzon-jsonb/src/test/java/org/apache/johnzon/jsonb/DefaultMappingTest.java,458,,"        assertEquals(""[1,2,3]"", JSONB.toJson(collection));"
147243,./TargetProjects/johnzon/johnzon-jsonb/src/test/java/org/apache/johnzon/jsonb/DefaultMappingTest.java,640,,"        pojo.setName(""pojoName"");"
147244,./TargetProjects/johnzon/johnzon-jsonb/src/test/java/org/apache/johnzon/jsonb/DefaultMappingTest.java,1126,,"        assertEquals(""newRegularValue"", modifiersClass.regularField);"
147245,./TargetProjects/johnzon/johnzon-jsonb/src/test/java/org/apache/johnzon/jsonb/DynamicBufferResizingTest.java,43,,"        final Request request = new Request(""Screenshot.png"", ""image/png"", new byte[558140]);"
147246,./TargetProjects/johnzon/johnzon-jsonb/src/test/java/org/apache/johnzon/jsonb/JohnzonJsonbTest.java,78,,"        assertEquals(""[0,1,2,3,4,5,6]"", new String(output.toByteArray(), StandardCharsets.UTF_8));"
147247,./TargetProjects/johnzon/johnzon-jsonb/src/test/java/org/apache/johnzon/jsonb/JohnzonJsonbTest.java,126,,"        assertEquals(""[1.0,1.1]"", new String(output.toByteArray(), StandardCharsets.UTF_8));"
147248,./TargetProjects/johnzon/johnzon-jsonb/src/test/java/org/apache/johnzon/jsonb/JsonbReadTest.java,59,,"        assertEquals(""test"", JsonbProvider.provider().create().build().fromJson(new StringReader(""{\""value\"":\""test\""}""), Simple.class).value);"
147249,./TargetProjects/johnzon/johnzon-jsonb/src/test/java/org/apache/johnzon/jsonb/JsonbTypesTest.java,92,,"        assertEquals(TimeZone.getTimeZone(""UTC""), types.timeZone);"
147250,./TargetProjects/johnzon/johnzon-jsonb/src/test/java/org/apache/johnzon/jsonb/JsonbTypesTest.java,118,,"            ""\""calendar\"":\"""" + dateTimeFormatter.format(zonedDateTime) + ""\"","" +"
147251,./TargetProjects/johnzon/johnzon-jsonb/src/test/java/org/apache/johnzon/jsonb/PropertyNamingStrategyFactoryTest.java,36,,"            new String[] { PropertyNamingStrategy.IDENTITY, ""aBEOCBDJ4397dkabqWLCd"", ""aBEOCBDJ4397dkabqWLCd"" },"
147252,./TargetProjects/johnzon/johnzon-jsonb/src/test/java/org/apache/johnzon/jsonb/SerializerTest.java,408,,"                        case ""type"":"
147253,./TargetProjects/johnzon/johnzon-jsonb/src/test/java/org/apache/johnzon/jsonb/SerializerTest.java,421,,"                        case ""name"":"
147254,./TargetProjects/johnzon/johnzon-jsonb/src/test/java/org/apache/johnzon/jsonb/jaxrs/JsonbJaxRsTest.java,100,,"        final String result = client().path(""johnzon"").type(MediaType.APPLICATION_JSON_TYPE).post(new Johnzon(""client"")).readEntity(String.class);"
147255,./TargetProjects/johnzon/johnzon-jsonlogic/src/main/java/org/apache/johnzon/jsonlogic/JohnzonJsonLogic.java,376,,"                throw new IllegalArgumentException(""Expected '"" + array.get(0) + ""' to be an array, got "" + items.getValueType());"
147256,./TargetProjects/johnzon/johnzon-jsonlogic/src/main/java/org/apache/johnzon/jsonlogic/JohnzonJsonLogic.java,376,,"                throw new IllegalArgumentException(""Expected '"" + array.get(0) + ""' to be an array, got "" + items.getValueType());"
147257,./TargetProjects/johnzon/johnzon-jsonlogic/src/test/java/org/apache/johnzon/jsonlogic/JohnzonJsonLogicTest.java,203,,"                        .add(""var"", ""a"")"
147258,./TargetProjects/johnzon/johnzon-jsonlogic/src/test/java/org/apache/johnzon/jsonlogic/JohnzonJsonLogicTest.java,374,,"                                                                        .add(""var"", ""temp""))"
147259,./TargetProjects/johnzon/johnzon-jsonlogic/src/test/java/org/apache/johnzon/jsonlogic/JohnzonJsonLogicTest.java,539,,"                                .add(""==="", builderFactory.createArrayBuilder()"
147260,./TargetProjects/johnzon/johnzon-jsonlogic/src/test/java/org/apache/johnzon/jsonlogic/JohnzonJsonLogicTest.java,846,,"                                                .add(""var"", ""integers""))"
147261,./TargetProjects/johnzon/johnzon-jsonlogic/src/test/java/org/apache/johnzon/jsonlogic/JohnzonJsonLogicTest.java,1111,,"                                .add(""substr"", builderFactory.createArrayBuilder()"
147262,./TargetProjects/johnzon/johnzon-jsonlogic/src/test/java/org/apache/johnzon/jsonlogic/JohnzonJsonLogicTest.java,1112,,"                                        .add(""jsonlogic"")"
147263,./TargetProjects/johnzon/johnzon-jsonp-strict/src/test/java/org/apache/johnzon/jsonp/strict/StrictJsonPointerFactoryTest.java,38,,"                        .add(""bar"")"
147264,./TargetProjects/johnzon/johnzon-jsonp-strict/src/test/java/org/apache/johnzon/jsonp/strict/StrictJsonPointerFactoryTest.java,39,,"                        .add(""qux"")"
147265,./TargetProjects/johnzon/johnzon-jsonp-strict/src/test/java/org/apache/johnzon/jsonp/strict/StrictJsonPointerFactoryTest.java,40,,"                        .add(""baz"")).build(); // [[""bar"",""qux"",""baz""]]"
147266,./TargetProjects/johnzon/johnzon-jsonp-strict/src/test/java/org/apache/johnzon/jsonp/strict/StrictJsonPointerFactoryTest.java,48,,"        final JsonPointer jsonPointer = Json.createPointer(""/0/-"");"
147267,./TargetProjects/johnzon/johnzon-jsonschema/src/main/java/org/apache/johnzon/jsonschema/generator/SchemaProcessor.java,256,,"                    .filter(it -> (it.getName().startsWith(""get"") || it.getName().startsWith(""is"")) && it.getName().length() > 2)"
147268,./TargetProjects/johnzon/johnzon-jsonschema/src/test/java/org/apache/johnzon/jsonschema/JsonSchemaValidatorTest.java,55,,"                .add(""type"", ""object"")"
147269,./TargetProjects/johnzon/johnzon-jsonschema/src/test/java/org/apache/johnzon/jsonschema/JsonSchemaValidatorTest.java,55,,"                .add(""type"", ""object"")"
147270,./TargetProjects/johnzon/johnzon-jsonschema/src/test/java/org/apache/johnzon/jsonschema/JsonSchemaValidatorTest.java,56,,"                .add(""properties"", jsonFactory.createObjectBuilder()"
147271,./TargetProjects/johnzon/johnzon-jsonschema/src/test/java/org/apache/johnzon/jsonschema/JsonSchemaValidatorTest.java,57,,"                        .add(""name"", jsonFactory.createObjectBuilder()"
147272,./TargetProjects/johnzon/johnzon-jsonschema/src/test/java/org/apache/johnzon/jsonschema/JsonSchemaValidatorTest.java,58,,"                                .add(""type"", ""string"")"
147273,./TargetProjects/johnzon/johnzon-jsonschema/src/test/java/org/apache/johnzon/jsonschema/JsonSchemaValidatorTest.java,60,,"                        .add(""age"", jsonFactory.createObjectBuilder()"
147274,./TargetProjects/johnzon/johnzon-jsonschema/src/test/java/org/apache/johnzon/jsonschema/JsonSchemaValidatorTest.java,61,,"                                .add(""type"", ""number"")"
147275,./TargetProjects/johnzon/johnzon-jsonschema/src/test/java/org/apache/johnzon/jsonschema/JsonSchemaValidatorTest.java,239,,"        assertEquals(""/age"", error.getField());"
147276,./TargetProjects/johnzon/johnzon-jsonschema/src/test/java/org/apache/johnzon/jsonschema/JsonSchemaValidatorTest.java,446,,"                        .add(""names"", jsonFactory.createObjectBuilder()"
147277,./TargetProjects/johnzon/johnzon-jsonschema/src/test/java/org/apache/johnzon/jsonschema/JsonSchemaValidatorTest.java,447,,"                                .add(""type"", ""array"")"
147278,./TargetProjects/johnzon/johnzon-jsonschema/src/test/java/org/apache/johnzon/jsonschema/JsonSchemaValidatorTest.java,601,,"                .add(""names"", jsonFactory.createArrayBuilder().add(2).add(""test""))"
147279,./TargetProjects/johnzon/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/JsonObjectGenerator.java,224,,"                throw new IllegalArgumentException(""Unsupported previous builder: "" + previous);"
147280,./TargetProjects/johnzon/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/Mappings.java,770,,"            throw new UnsupportedOperationException(""getAnnotation shouldn't get called for virtual fields"");"
147281,./TargetProjects/johnzon/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/converter/LocaleConverter.java,58,,"            throw new IllegalArgumentException(""Invalid locale format: "" + locale);"
147282,./TargetProjects/johnzon/johnzon-mapper/src/main/java/org/apache/johnzon/mapper/map/LazyConverterMap.java,305,,"            final ZoneId zoneIDUTC = ZoneId.of(""UTC"");"
147283,./TargetProjects/johnzon/johnzon-mapper/src/test/java/org/apache/johnzon/mapper/CircularObjectsTest.java,40,,"        Person john = new Person(""John"");"
147284,./TargetProjects/johnzon/johnzon-mapper/src/test/java/org/apache/johnzon/mapper/CircularObjectsTest.java,41,,"        Person marry = new Person(""Marry"");"
147285,./TargetProjects/johnzon/johnzon-mapper/src/test/java/org/apache/johnzon/mapper/CircularObjectsTest.java,47,,"                .setAccessModeName(""field"")"
147286,./TargetProjects/johnzon/johnzon-mapper/src/test/java/org/apache/johnzon/mapper/CircularObjectsTest.java,96,,"        Person karl = new Person(""Karl"");"
147287,./TargetProjects/johnzon/johnzon-mapper/src/test/java/org/apache/johnzon/mapper/CircularObjectsTest.java,97,,"        Person andrea = new Person(""Andrea"");"
147288,./TargetProjects/johnzon/johnzon-mapper/src/test/java/org/apache/johnzon/mapper/CircularObjectsTest.java,99,,"        Person sue = new Person(""Sue"");"
147289,./TargetProjects/johnzon/johnzon-mapper/src/test/java/org/apache/johnzon/mapper/GenericsTest.java,41,,"                Arrays.asList(""Test 1"", ""Test 2""));"
147290,./TargetProjects/johnzon/johnzon-mapper/src/test/java/org/apache/johnzon/mapper/GenericsTest.java,41,,"                Arrays.asList(""Test 1"", ""Test 2""));"
147291,./TargetProjects/johnzon/johnzon-mapper/src/test/java/org/apache/johnzon/mapper/GenericsTest.java,53,,"                .readObject(""{ \""instance\"" : [[ \""Test 1\"", \""Test 2\"" ]] }"", type);"
147292,./TargetProjects/johnzon/johnzon-mapper/src/test/java/org/apache/johnzon/mapper/MapperEnhancedTest.java,124,,"            ""\""dates\"":[],"" +"
147293,./TargetProjects/johnzon/johnzon-mapper/src/test/java/org/apache/johnzon/mapper/MapperTest.java,73,,"        object.children = Collections.singletonList(""first"");"
147294,./TargetProjects/johnzon/johnzon-mapper/src/test/java/org/apache/johnzon/mapper/MapperTest.java,253,,"        final String json = ""[1,2]"";"
147295,./TargetProjects/johnzon/johnzon-mapper/src/test/java/org/apache/johnzon/mapper/MapperTest.java,328,,"            assertEquals(""val"", simpleMapper.readObject(new ByteArrayInputStream(""\""val\"""".getBytes()), Object.class));"
147296,./TargetProjects/johnzon/johnzon-mapper/src/test/java/org/apache/johnzon/mapper/MapperTest.java,353,,"            final Mapper fieldMapper = new MapperBuilder().setAccessModeName(""field"").build();"
147297,./TargetProjects/johnzon/johnzon-mapper/src/test/java/org/apache/johnzon/mapper/MapperTest.java,354,,"            assertEquals(""{\""bool\"":true}"", fieldMapper.writeObjectAsString(p));"
147298,./TargetProjects/johnzon/johnzon-mapper/src/test/java/org/apache/johnzon/mapper/MapperTest.java,558,,"       assertEquals(""[1.0,2.0]"", baos.toString());"
147299,./TargetProjects/johnzon/johnzon-mapper/src/test/java/org/apache/johnzon/mapper/MapperTest.java,852,,"                    new ByteArrayInputStream(""{\""super_long_property\"":\""ok\""}"".getBytes()), Aliases.class);"
147300,./TargetProjects/johnzon/johnzon-mapper/src/test/java/org/apache/johnzon/mapper/MapperVersionTest.java,45,,"                { -1, ""foo"", ""{\""name\"":\""foo\""}""}, // no version eg version of -1"
147301,./TargetProjects/johnzon/johnzon-mapper/src/test/java/org/apache/johnzon/mapper/NullTest.java,101,,"                    o1 = ""null"";"
147302,./TargetProjects/johnzon/johnzon-mapper/src/test/java/org/apache/johnzon/mapper/ObjectConverterWithAnnotationTest.java,62,,"                              ""\""bike\"":{"" +"
147303,./TargetProjects/johnzon/johnzon-mapper/src/test/java/org/apache/johnzon/mapper/ObjectConverterWithAnnotationTest.java,64,,"                                ""\"""" + TYPE_INDEX + ""\"":0"" +"
147304,./TargetProjects/johnzon/johnzon-mapper/src/test/java/org/apache/johnzon/mapper/ObjectConverterWithAnnotationTest.java,80,,"                          ""\"""" + MANUFACTURER_ID + ""\"":1,"" +"
147305,./TargetProjects/johnzon/johnzon-mapper/src/test/java/org/apache/johnzon/mapper/ObjectConverterWithAnnotationTest.java,85,,"        Cyclist expected = new Cyclist(""Jan Frodeno"", new Bike(""Canyon"", BikeType.TRIATHLON));"
147306,./TargetProjects/johnzon/johnzon-maven-plugin/src/main/java/org/apache/johnzon/maven/plugin/ExampleToModelMojo.java,138,,"            writer.write(""}\n"");"
147307,./TargetProjects/johnzon/johnzon-maven-plugin/src/test/java/org/apache/johnzon/maven/plugin/ExampleToModelMojoTest.java,52,,"                "" *\n"" +"
147308,./TargetProjects/joshua/src/main/java/org/apache/joshua/adagrad/AdaGradCore.java,287,,"      println(""----------------------------------------------------"", 1);"
147309,./TargetProjects/joshua/src/main/java/org/apache/joshua/adagrad/AdaGradCore.java,326,,"        String paramName = (line.substring(0, line.indexOf(""|||""))).trim();"
147310,./TargetProjects/joshua/src/main/java/org/apache/joshua/adagrad/AdaGradCore.java,363,,"      BufferedReader inFile_refs = new BufferedReader(new InputStreamReader(inStream_refs, ""utf8""));"
147311,./TargetProjects/joshua/src/main/java/org/apache/joshua/adagrad/AdaGradCore.java,478,,"      renameFile(decoderConfigFileName, decoderConfigFileName + "".AdaGrad.orig"");"
147312,./TargetProjects/joshua/src/main/java/org/apache/joshua/adagrad/AdaGradCore.java,590,,"        deleteFile(tmpDirPrefix + ""temp.sents.it"" + iteration + "".gz"");"
147313,./TargetProjects/joshua/src/main/java/org/apache/joshua/adagrad/AdaGradCore.java,590,,"        deleteFile(tmpDirPrefix + ""temp.sents.it"" + iteration + "".gz"");"
147314,./TargetProjects/joshua/src/main/java/org/apache/joshua/adagrad/AdaGradCore.java,591,,"        deleteFile(tmpDirPrefix + ""temp.feats.it"" + iteration + "".gz"");"
147315,./TargetProjects/joshua/src/main/java/org/apache/joshua/adagrad/AdaGradCore.java,592,,"        if (fileExists(tmpDirPrefix + ""temp.stats.it"" + iteration + "".copy.gz"")) {"
147316,./TargetProjects/joshua/src/main/java/org/apache/joshua/adagrad/AdaGradCore.java,678,,"        if (!copyFile(decoderConfigFileName, decoderConfigFileName + "".AdaGrad.it"" + iteration)) {"
147317,./TargetProjects/joshua/src/main/java/org/apache/joshua/adagrad/AdaGradCore.java,897,,"              if (sents_str.equals(""||||||"")) {"
147318,./TargetProjects/joshua/src/main/java/org/apache/joshua/adagrad/AdaGradCore.java,909,,"                featVal_str = feats_str.split(""\\s+"");"
147319,./TargetProjects/joshua/src/main/java/org/apache/joshua/adagrad/Optimizer.java,118,,"		  vecOraFeat = oraFeat.split(""\\s+"");"
147320,./TargetProjects/joshua/src/main/java/org/apache/joshua/corpus/syntax/ArraySyntaxTree.java,331,,"      sb.append(""FI["").append(i).append(""] =\t"").append(forwardIndex.get(i)).append(""\n"");"
147321,./TargetProjects/joshua/src/main/java/org/apache/joshua/decoder/Decoder.java,352,,"        String[] tokens = joshuaConfiguration.weight_overwrite.split(""\\s+"");"
147322,./TargetProjects/joshua/src/main/java/org/apache/joshua/decoder/JoshuaConfiguration.java,444,,"            String[] tokens = fds[1].split(""\\s+"");"
147323,./TargetProjects/joshua/src/main/java/org/apache/joshua/decoder/ff/FeatureVector.java,341,,"      outputString.append(String.format(""%s=%.3f "", DENSE_FEATURE_NAMES.get(i).replace(""_"", ""-""), getDense(i)));"
147324,./TargetProjects/joshua/src/main/java/org/apache/joshua/decoder/ff/tm/AbstractGrammar.java,168,,"            s.append(""\n\t"").append(r.getLHS()).append("" ||| "")"
147325,./TargetProjects/joshua/src/main/java/org/apache/joshua/decoder/ff/tm/Rule.java,399,,"        "" |||"" +"
147326,./TargetProjects/joshua/src/main/java/org/apache/joshua/decoder/hypergraph/KBestExtractor.java,1027,,"        sb.append("" ||| "").append(Vocabulary.word(rule.getLHS())).append("" -> "")"
147327,./TargetProjects/joshua/src/main/java/org/apache/joshua/decoder/io/DeNormalize.java,166,,"          result.replaceAll(""\\b"" + title + ""\\b"","
147328,./TargetProjects/joshua/src/main/java/org/apache/joshua/decoder/io/DeNormalize.java,194,,"    result = result.replaceAll(""(?iu)"" + ""-lrb-"", ""("");"
147329,./TargetProjects/joshua/src/main/java/org/apache/joshua/decoder/segment_file/Token.java,110,,"        annotations.put(""lettercase"", ""all-upper"");"
147330,./TargetProjects/joshua/src/main/java/org/apache/joshua/metrics/BLEU.java,167,,"      String[] words = cand_str.split(""\\s+"");"
147331,./TargetProjects/joshua/src/main/java/org/apache/joshua/metrics/TER.java,156,,"      OutputStreamWriter outStreamWriter = new OutputStreamWriter(outStream, ""utf8"");"
147332,./TargetProjects/joshua/src/main/java/org/apache/joshua/metrics/TER.java,160,,"        writeLine(cand_strings[d] + "" (ID"" + d + "")"", outFile);"
147333,./TargetProjects/joshua/src/main/java/org/apache/joshua/mira/MIRACore.java,283,,"      println(""----------------------------------------------------"", 1);"
147334,./TargetProjects/joshua/src/main/java/org/apache/joshua/mira/MIRACore.java,322,,"        String paramName = (line.substring(0, line.indexOf(""|||""))).trim();"
147335,./TargetProjects/joshua/src/main/java/org/apache/joshua/mira/MIRACore.java,360,,"      BufferedReader inFile_refs = new BufferedReader(new InputStreamReader(inStream_refs, ""utf8""));"
147336,./TargetProjects/joshua/src/main/java/org/apache/joshua/mira/MIRACore.java,475,,"      renameFile(decoderConfigFileName, decoderConfigFileName + "".MIRA.orig"");"
147337,./TargetProjects/joshua/src/main/java/org/apache/joshua/mira/MIRACore.java,587,,"        deleteFile(tmpDirPrefix + ""temp.sents.it"" + iteration + "".gz"");"
147338,./TargetProjects/joshua/src/main/java/org/apache/joshua/mira/MIRACore.java,587,,"        deleteFile(tmpDirPrefix + ""temp.sents.it"" + iteration + "".gz"");"
147339,./TargetProjects/joshua/src/main/java/org/apache/joshua/mira/MIRACore.java,588,,"        deleteFile(tmpDirPrefix + ""temp.feats.it"" + iteration + "".gz"");"
147340,./TargetProjects/joshua/src/main/java/org/apache/joshua/mira/MIRACore.java,589,,"        if (fileExists(tmpDirPrefix + ""temp.stats.it"" + iteration + "".copy.gz"")) {"
147341,./TargetProjects/joshua/src/main/java/org/apache/joshua/mira/MIRACore.java,675,,"        if (!copyFile(decoderConfigFileName, decoderConfigFileName + "".MIRA.it"" + iteration)) {"
147342,./TargetProjects/joshua/src/main/java/org/apache/joshua/mira/MIRACore.java,894,,"              if (sents_str.equals(""||||||"")) {"
147343,./TargetProjects/joshua/src/main/java/org/apache/joshua/mira/MIRACore.java,906,,"                featVal_str = feats_str.split(""\\s+"");"
147344,./TargetProjects/joshua/src/main/java/org/apache/joshua/mira/Optimizer.java,117,,"	      vecOraFeat = oraFeat.split(""\\s+"");"
147345,./TargetProjects/joshua/src/main/java/org/apache/joshua/mira/Optimizer.java,255,,"      String result = ""Iter "" + iter + "": Avg learning rate="" + String.format(""%.4f"", avgEta);"
147346,./TargetProjects/joshua/src/main/java/org/apache/joshua/oracle/OracleExtractionHG.java,444,,"            num_ngram_match[ngram.split(""\\s+"").length - 1] += Support.findMin(final_count,"
147347,./TargetProjects/joshua/src/main/java/org/apache/joshua/pro/Optimizer.java,128,,"        feat_str = feat_hash[i].get(candStr).split(""\\s+"");"
147348,./TargetProjects/joshua/src/main/java/org/apache/joshua/pro/PROCore.java,276,,"      println(""----------------------------------------------------"", 1);"
147349,./TargetProjects/joshua/src/main/java/org/apache/joshua/pro/PROCore.java,315,,"        String paramName = (line.substring(0, line.indexOf(""|||""))).trim();"
147350,./TargetProjects/joshua/src/main/java/org/apache/joshua/pro/PROCore.java,353,,"      BufferedReader inFile_refs = new BufferedReader(new InputStreamReader(inStream_refs, ""utf8""));"
147351,./TargetProjects/joshua/src/main/java/org/apache/joshua/pro/PROCore.java,468,,"      renameFile(decoderConfigFileName, decoderConfigFileName + "".PRO.orig"");"
147352,./TargetProjects/joshua/src/main/java/org/apache/joshua/pro/PROCore.java,582,,"        deleteFile(tmpDirPrefix + ""temp.sents.it"" + iteration + "".gz"");"
147353,./TargetProjects/joshua/src/main/java/org/apache/joshua/pro/PROCore.java,582,,"        deleteFile(tmpDirPrefix + ""temp.sents.it"" + iteration + "".gz"");"
147354,./TargetProjects/joshua/src/main/java/org/apache/joshua/pro/PROCore.java,583,,"        deleteFile(tmpDirPrefix + ""temp.feats.it"" + iteration + "".gz"");"
147355,./TargetProjects/joshua/src/main/java/org/apache/joshua/pro/PROCore.java,584,,"        if (fileExists(tmpDirPrefix + ""temp.stats.it"" + iteration + "".copy.gz"")) {"
147356,./TargetProjects/joshua/src/main/java/org/apache/joshua/pro/PROCore.java,670,,"        if (!copyFile(decoderConfigFileName, decoderConfigFileName + "".PRO.it"" + iteration)) {"
147357,./TargetProjects/joshua/src/main/java/org/apache/joshua/pro/PROCore.java,889,,"              if (sents_str.equals(""||||||"")) {"
147358,./TargetProjects/joshua/src/main/java/org/apache/joshua/pro/PROCore.java,901,,"                featVal_str = feats_str.split(""\\s+"");"
147359,./TargetProjects/joshua/src/main/java/org/apache/joshua/tools/GrammarPacker.java,273,,"      String[] features = rule.getFeatureString().split(""\\s+"");"
147360,./TargetProjects/joshua/src/main/java/org/apache/joshua/tools/TestSetFilter.java,141,,"    for (String t : source.split(""\\s+"")) {"
147361,./TargetProjects/joshua/src/main/java/org/apache/joshua/util/JoshuaEval.java,81,,"        String[] topCandidates = getTopCandidates(inFileName, ""plain"", 1, 1);"
147362,./TargetProjects/joshua/src/main/java/org/apache/joshua/util/UnicodeCharacterName.java,252,,"    map.put('\u0080', ""<control>"");"
147363,./TargetProjects/joshua/src/main/java/org/apache/joshua/util/UnicodeCharacterName.java,2510,,"    map.put('\u09E4', ""<reserved>"");"
147364,./TargetProjects/joshua/src/main/java/org/apache/joshua/util/UnicodeCharacterName.java,15749,,"    map.put('\uFDD0', ""<not a character>"");"
147365,./TargetProjects/joshua/src/main/java/org/apache/joshua/zmert/IntermediateOptimizer.java,882,,"    println(""Initial lambda[j="" + j + ""]: "" + lambdaToString(initialLambda), 1);"
147366,./TargetProjects/joshua/src/main/java/org/apache/joshua/zmert/MertCore.java,288,,"      println(""----------------------------------------------------"", 1);"
147367,./TargetProjects/joshua/src/main/java/org/apache/joshua/zmert/MertCore.java,344,,"        String paramName = (line.substring(0, line.indexOf(""|||""))).trim();"
147368,./TargetProjects/joshua/src/main/java/org/apache/joshua/zmert/MertCore.java,366,,"        reference_readers[0] = new BufferedReader(new InputStreamReader(new FileInputStream(new File(refFileName)), ""utf8""));"
147369,./TargetProjects/joshua/src/main/java/org/apache/joshua/zmert/MertCore.java,484,,"      renameFile(decoderConfigFileName, decoderConfigFileName + "".ZMERT.orig"");"
147370,./TargetProjects/joshua/src/main/java/org/apache/joshua/zmert/MertCore.java,591,,"        deleteFile(tmpDirPrefix + ""temp.sents.it"" + iteration + "".gz"");"
147371,./TargetProjects/joshua/src/main/java/org/apache/joshua/zmert/MertCore.java,591,,"        deleteFile(tmpDirPrefix + ""temp.sents.it"" + iteration + "".gz"");"
147372,./TargetProjects/joshua/src/main/java/org/apache/joshua/zmert/MertCore.java,592,,"        deleteFile(tmpDirPrefix + ""temp.feats.it"" + iteration + "".gz"");"
147373,./TargetProjects/joshua/src/main/java/org/apache/joshua/zmert/MertCore.java,593,,"        if (fileExists(tmpDirPrefix + ""temp.stats.it"" + iteration + "".copy.gz"")) {"
147374,./TargetProjects/joshua/src/main/java/org/apache/joshua/zmert/MertCore.java,593,,"        if (fileExists(tmpDirPrefix + ""temp.stats.it"" + iteration + "".copy.gz"")) {"
147375,./TargetProjects/joshua/src/main/java/org/apache/joshua/zmert/MertCore.java,601,,"        if (fileExists(tmpDirPrefix + ""temp.stats.it"" + iteration + "".copy"")) {"
147376,./TargetProjects/joshua/src/main/java/org/apache/joshua/zmert/MertCore.java,682,,"        if (!copyFile(decoderConfigFileName, decoderConfigFileName + "".ZMERT.it"" + iteration)) {"
147377,./TargetProjects/joshua/src/main/java/org/apache/joshua/zmert/MertCore.java,906,,"              if (sents_str.equals(""||||||"")) {"
147378,./TargetProjects/joshua/src/main/java/org/apache/joshua/zmert/MertCore.java,912,,"                featVal_str = feats_str.split(""\\s+"");"
147379,./TargetProjects/joshua/src/main/java/org/apache/joshua/zmert/MertCore.java,1668,,"        case ""-Inf"":"
147380,./TargetProjects/joshua/src/main/java/org/apache/joshua/zmert/MertCore.java,1671,,"        case ""+Inf"":"
147381,./TargetProjects/joshua/src/test/java/org/apache/joshua/decoder/ff/lm/ArpaFileTest.java,102,,"  @Test(dependsOnMethods = { ""setup"" })"
147382,./TargetProjects/joshua/src/test/java/org/apache/joshua/lattice/ArcTest.java,54,,"  @Test(dependsOnMethods = { ""constructArc"" })"
147383,./TargetProjects/joshua/src/test/java/org/apache/joshua/packed/Benchmark.java,80,,"    LOG.info(""Sum: {}"", sum);"
147384,./TargetProjects/joshua/src/test/java/org/apache/joshua/packed/PrintRules.java,70,,"    @SuppressWarnings(""resource"")"
147385,./TargetProjects/joshua/src/test/java/org/apache/joshua/packed/PrintRules.java,188,,"    System.out.println(Vocabulary.word(lhs) + "" |||"" +"
147386,./TargetProjects/joshua/src/test/java/org/apache/joshua/ui/tree_visualizer/tree/TreeTest.java,41,,"    Tree tree = new Tree(""(A{0-1} foo)"");"
147387,./TargetProjects/joshua/src/test/java/org/apache/joshua/util/FormatUtilsTest.java,37,,"    assertTrue(isNonterminal(""[X]""));"
147388,./TargetProjects/jsecurity/core/src/main/java/org/apache/ki/mgt/DefaultSecurityManager.java,270,,"                    String msg = ""Delegate RememberMeManager instance of type ["" + rmm.getClass().getName() +"
147389,./TargetProjects/jsecurity/core/src/main/java/org/apache/ki/realm/AuthorizingRealm.java,382,,"    @SuppressWarnings(""deprecation"")"
147390,./TargetProjects/jsecurity/core/src/main/java/org/apache/ki/realm/text/PropertiesRealm.java,229,,"            log.debug(""Loading user security information from file ["" + resourcePath + ""]..."");"
147391,./TargetProjects/jsecurity/core/src/main/java/org/apache/ki/util/ClassUtils.java,104,,"                    log.trace(""Unable to load class named ["" + fqcn +"
147392,./TargetProjects/jsecurity/core/src/main/java/org/apache/ki/util/SoftHashMap.java,93,,"    @SuppressWarnings({""unchecked""})"
147393,./TargetProjects/jsecurity/core/src/test/java/org/apache/ki/authz/permission/WildcardPermissionTest.java,57,,"        p1 = new WildcardPermission(""something"");"
147394,./TargetProjects/jsecurity/core/src/test/java/org/apache/ki/authz/permission/WildcardPermissionTest.java,75,,"        p1 = new WildcardPermission(""BLAHBLAH"", false);"
147395,./TargetProjects/jsecurity/core/src/test/java/org/apache/ki/config/ReflectionBuilderTest.java,39,,"        defs.put(""compositeBean"", ""org.apache.ki.config.CompositeBean"");"
147396,./TargetProjects/jsecurity/core/src/test/java/org/apache/ki/config/ReflectionBuilderTest.java,39,,"        defs.put(""compositeBean"", ""org.apache.ki.config.CompositeBean"");"
147397,./TargetProjects/jsecurity/core/src/test/java/org/apache/ki/config/ReflectionBuilderTest.java,40,,"        defs.put(""compositeBean.stringProp"", ""blah"");"
147398,./TargetProjects/jsecurity/core/src/test/java/org/apache/ki/config/ReflectionBuilderTest.java,70,,"        defs.put(""simpleBean"", ""org.apache.ki.config.SimpleBean"");"
147399,./TargetProjects/jsecurity/core/src/test/java/org/apache/ki/mgt/DefaultSecurityManagerTest.java,65,,"        AuthenticationToken token = new UsernamePasswordToken(""guest"", ""guest"");"
147400,./TargetProjects/jsecurity/core/src/test/java/org/apache/ki/mgt/DefaultSecurityManagerTest.java,72,,"        session.setAttribute(""key"", ""value"");"
147401,./TargetProjects/jsecurity/core/src/test/java/org/apache/ki/mgt/DefaultSecurityManagerTest.java,72,,"        session.setAttribute(""key"", ""value"");"
147402,./TargetProjects/jsecurity/core/src/test/java/org/apache/ki/realm/AuthorizingRealmTest.java,220,,"        assertFalse(realm.isPermitted(pCollection, ""perm1""));"
147403,./TargetProjects/jsecurity/core/src/test/java/org/apache/ki/util/StringUtilsTest.java,44,,"        assertEquals(""shall"", split[0]);"
147404,./TargetProjects/jsecurity/web/src/main/java/org/apache/ki/web/filter/authz/HostFilter.java,47,,"            ""172\\."" + PRIVATE_CLASS_B_SUBSET + ""\\."" + IPV4_QUAD_REGEX + ""\\."" + IPV4_QUAD_REGEX + ""$"";"
147405,./TargetProjects/jsecurity/web/src/test/java/org/apache/ki/web/WebRememberMeManagerTest.java,53,,"        UsernamePasswordToken token = new UsernamePasswordToken(""user"", ""secret"");"
147406,./TargetProjects/jsecurity/web/src/test/java/org/apache/ki/web/attr/CookieAttributeTest.java,48,,"        this.cookieAttribute = new CookieAttribute<String>(""test"");"
147407,./TargetProjects/jsecurity/web/src/test/java/org/apache/ki/web/attr/CookieAttributeTest.java,55,,"        Cookie cookie = new Cookie(""test"", ""blah"");"
147408,./TargetProjects/jspwiki/jspwiki-210-adapters/src/main/java/org/apache/wiki/api/filters/BasicPageFilter.java,56,,"        final Method m = methodOfNonPublicAPI( this, ""preTranslate"", ""org.apache.wiki.WikiContext"", ""java.lang.String"" );"
147409,./TargetProjects/jspwiki/jspwiki-210-adapters/src/main/java/org/apache/wiki/api/filters/BasicPageFilter.java,56,,"        final Method m = methodOfNonPublicAPI( this, ""preTranslate"", ""org.apache.wiki.WikiContext"", ""java.lang.String"" );"
147410,./TargetProjects/jspwiki/jspwiki-210-adapters/src/test/java/org/apache/wiki/providers/WikiProviderAdaptersTest.java,58,,"        Assertions.assertTrue( pageProvider.pageExists( ""page1"" ) );"
147411,./TargetProjects/jspwiki/jspwiki-210-adapters/src/test/java/org/apache/wiki/providers/WikiProviderAdaptersTest.java,61,,"        pageProvider.movePage( ""page1"", ""page0"" );"
147412,./TargetProjects/jspwiki/jspwiki-210-adapters/src/test/java/org/apache/wiki/providers/WikiProviderAdaptersTest.java,65,,"        pageProvider.putPageText( new WikiPage( engine, ""page4"" ), ""bloblobloblo"" );"
147413,./TargetProjects/jspwiki/jspwiki-api/src/main/java/org/apache/wiki/api/filters/PageFilter.java,69,,"        final Method m = methodOfNonPublicAPI( this, ""preTranslate"", ""org.apache.wiki.WikiContext"", ""java.lang.String"" );"
147414,./TargetProjects/jspwiki/jspwiki-api/src/main/java/org/apache/wiki/api/filters/PageFilter.java,69,,"        final Method m = methodOfNonPublicAPI( this, ""preTranslate"", ""org.apache.wiki.WikiContext"", ""java.lang.String"" );"
147415,./TargetProjects/jspwiki/jspwiki-api/src/test/java/org/apache/wiki/api/ReleaseTest.java,49,,"        final String rel = Release.VERSION + ""."" + Release.REVISION + ""."" + ( Release.MINORREVISION + 1 ) + ""-cvs"";"
147416,./TargetProjects/jspwiki/jspwiki-api/src/test/java/org/apache/wiki/api/filters/PageFilterTest.java,32,,"        Assertions.assertEquals( ""duh"", filter.preSave( null, ""duh"" ) );"
147417,./TargetProjects/jspwiki/jspwiki-it-tests/jspwiki-selenide-tests/src/main/java/org/apache/wiki/its/AnonymousViewIT.java,42,,"        final ViewWikiPage main = ViewWikiPage.open( ""Main"" );"
147418,./TargetProjects/jspwiki/jspwiki-it-tests/jspwiki-selenide-tests/src/main/java/org/apache/wiki/its/EditIT.java,39,,"                                                    .saveText( ""random page [{ALLOW edit janne}] [{ALLOW view All}]"", ""random page"" );"
147419,./TargetProjects/jspwiki/jspwiki-it-tests/jspwiki-selenide-tests/src/main/java/org/apache/wiki/its/LoginIT.java,37,,"        ViewWikiPage main = ViewWikiPage.open( ""Main"" );"
147420,./TargetProjects/jspwiki/jspwiki-it-tests/jspwiki-selenide-tests/src/main/java/org/apache/wiki/its/LoginIT.java,40,,"        Assertions.assertEquals( ""G’day (anonymous guest)"", main.hoverLoginArea().authenticatedText() );"
147421,./TargetProjects/jspwiki/jspwiki-it-tests/jspwiki-selenide-tests/src/main/java/org/apache/wiki/its/SearchIT.java,40,,"        final ViewWikiPage main = ViewWikiPage.open( ""Main"" )"
147422,./TargetProjects/jspwiki/jspwiki-kendra-searchprovider/src/test/java/org/apache/wiki/search/kendra/KendraSearchProviderTest.java,145,,"    @WithKendra( indexName = ""JSPWikiIndex"", dataSourceName = """" )"
147423,./TargetProjects/jspwiki/jspwiki-kendra-searchprovider/src/test/java/org/apache/wiki/search/kendra/KendraSearchProviderTest.java,153,,"    @WithPage( name = ""TestPage"","
147424,./TargetProjects/jspwiki/jspwiki-kendra-searchprovider/src/test/java/org/apache/wiki/search/kendra/KendraSearchProviderTest.java,154,,"               text = ""It was the dawn of the third age of mankind, ten years after the Earth-Minbari War."","
147425,./TargetProjects/jspwiki/jspwiki-kendra-searchprovider/src/test/java/org/apache/wiki/search/kendra/KendraSearchProviderTest.java,167,,"    @WithResult( name = ""TestPage"", text = ""mankind"", scoreConfidence = ScoreConfidence.VERY_HIGH )"
147426,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/TranslationsCheck.java,100,,"            final int expected = coreMetrics.get( ""expected"" ) + templateMetrics.get( ""expected"" ) + pluginMetrics.get( ""expected"" );"
147427,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/TranslationsCheck.java,101,,"            final int missing = coreMetrics.get( ""missing"" ) + templateMetrics.get( ""missing"" ) + pluginMetrics.get( ""missing"" );"
147428,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/TranslationsCheck.java,103,,"            final int outdated = coreMetrics.get( ""outdated"" ) + templateMetrics.get( ""outdated"" ) + pluginMetrics.get( ""outdated"" );"
147429,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/WikiEngine.java,411,,"    @SuppressWarnings( ""unchecked"" )"
147430,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/auth/DefaultAuthorizationManager.java,286,,"                log.fatal( ""Authorizer "" + clazz + "" cannot be found"", e );"
147431,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/auth/SecurityVerifier.java,74,,"    public static final String    ERROR                        = ""Error."";"
147432,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/auth/SecurityVerifier.java,221,,"        s.append( ""  <tr>\n"" );"
147433,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/auth/SecurityVerifier.java,228,,"        s.append( ""  </tr>\n"" );"
147434,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/auth/SecurityVerifier.java,245,,"            s.append( ""    <td>PagePermission \"""" + wiki + "":"" + page + ""\""</td>\n"" );"
147435,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/auth/SecurityVerifier.java,309,,"            s.append( ""&nbsp;</td>\n"" );"
147436,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/auth/SecurityVerifier.java,317,,"            s.append( ""&quot;"" );"
147437,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/auth/authorize/JDBCGroupDatabase.java,473,,"            m_findGroup = ""SELECT DISTINCT * FROM "" + table + "" WHERE "" + m_name + ""=?"";"
147438,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/auth/authorize/XMLGroupDatabase.java,362,,"                io.write( ""=\"""" + StringEscapeUtils.escapeXml11( group.getName() )+ ""\"" "" );"
147439,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/auth/authorize/XMLGroupDatabase.java,362,,"                io.write( ""=\"""" + StringEscapeUtils.escapeXml11( group.getName() )+ ""\"" "" );"
147440,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/auth/user/DummyUserDatabase.java,51,,"        throw new NoSuchPrincipalException(""No user profiles available"");"
147441,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/auth/user/JDBCUserDatabase.java,437,,"            m_findAll = ""SELECT * FROM "" + userTable;"
147442,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/auth/user/JDBCUserDatabase.java,438,,"            m_findByEmail = ""SELECT * FROM "" + userTable + "" WHERE "" + m_email + ""=?"";"
147443,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/auth/user/JDBCUserDatabase.java,459,,"                              + m_uid + ""=?,"""
147444,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/auth/user/XMLUserDatabase.java,96,,"            throw new WikiSecurityException( ""FATAL: database does not exist"" );"
147445,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/auth/user/XMLUserDatabase.java,249,,"                io.write( ""=\"""" + user.getAttribute( UID ) + ""\"" "" );"
147446,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/auth/user/XMLUserDatabase.java,249,,"                io.write( ""=\"""" + user.getAttribute( UID ) + ""\"" "" );"
147447,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/filters/SpamFilter.java,276,,"        message = TextUtil.replaceString( message, ""\r\n"", ""\\r\\n"" );"
147448,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/htmltowiki/XHtmlElementToWikiTranslator.java,124,,"            if( ""imageplugin"".equals( base.getAttributeValue( ""class"" ) ) )"
147449,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/htmltowiki/XHtmlElementToWikiTranslator.java,166,,"                        n = ""div"";"
147450,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/htmltowiki/XHtmlElementToWikiTranslator.java,564,,"                    final String name = e.getAttributeValue( ""name"" );"
147451,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/htmltowiki/XHtmlElementToWikiTranslator.java,734,,"        map.put( ""style"", base.getAttributeValue( ""style"" ) );"
147452,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/pages/DefaultPageManager.java,176,,"            throw new ProviderException( ""Illegal page name"" );"
147453,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/parser/JSPWikiMarkupParser.java,261,,"        el.setAttribute(""class"",CLASS_TYPES[type]);"
147454,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/parser/JSPWikiMarkupParser.java,326,,"                el = new Element(""img"").setAttribute(""class"",""inline"");"
147455,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/parser/JSPWikiMarkupParser.java,327,,"                el.setAttribute(""src"",link);"
147456,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/parser/JSPWikiMarkupParser.java,328,,"                el.setAttribute(""alt"",text);"
147457,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/parser/JSPWikiMarkupParser.java,646,,"                    tmpBuf.append(""&amp;"");"
147458,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/parser/JSPWikiMarkupParser.java,1364,,"                return pushElement( new Element(""span"").setAttribute(""class"",""inline-code"") );"
147459,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/plugin/AbstractReferralPlugin.java,112,,"    public static final String PARAM_SHOW_VALUE_COUNT = ""count"";"
147460,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/plugin/IndexPlugin.java,73,,"        final Element masterDiv = getElement(""div"",""index"");"
147461,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/plugin/ListLocksPlugin.java,63,,"                result.append( ""<td>"" + lock.getPage() + ""</td>"" );"
147462,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/plugin/ListLocksPlugin.java,63,,"                result.append( ""<td>"" + lock.getPage() + ""</td>"" );"
147463,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/plugin/WeblogPlugin.java,258,,"        sb.append(""</div>\n"");"
147464,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/plugin/WeblogPlugin.java,329,,"                buffer.append("" <a href=\""""+entryCtx.getURL( ContextEnum.PAGE_VIEW.getRequestContext(), entry.getName())+""\"">""+rb.getString(""weblogentryplugin.more"")+""</a>\n"");"
147465,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/preferences/Preferences.java,106,,"        prefs.put(""SectionEditing"", TextUtil.getStringProperty( props, ""jspwiki.defaultprefs.template.sectionediting"", ""true"" ) );"
147466,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/providers/AbstractFileProvider.java,497,,"                        throw new IOException( ""Custom property key "" + key + "" is too long. Max allowed length is "" + MAX_PROPKEYLENGTH );"
147467,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/providers/CachingAttachmentProvider.java,171,,"            @SuppressWarnings(""unchecked"") final List< Attachment > c = ( List< Attachment > )element.getObjectValue();"
147468,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/providers/VersioningFileProvider.java,171,,"                if( key.endsWith( "".author"" ) ) {"
147469,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/render/DefaultRenderingManager.java,117,,"        m_useCache = ""true"".equals( properties.getProperty( PageManager.PROP_USECACHE ) );"
147470,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/rss/AtomFeed.java,98,,"            entryEl.addContent( getElement( ""link"" ).setAttribute( ""rel"", ""alternate"" ).setAttribute( ""href"", e.getURL() ) );"
147471,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/rss/AtomFeed.java,98,,"            entryEl.addContent( getElement( ""link"" ).setAttribute( ""rel"", ""alternate"" ).setAttribute( ""href"", e.getURL() ) );"
147472,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/tags/CalendarTag.java,151,,"                    result = ""<td class=\""link\""><a href=\""""+url+""\"">""+day.get( Calendar.DATE )+""</a></td>"";"
147473,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/tags/CalendarTag.java,151,,"                    result = ""<td class=\""link\""><a href=\""""+url+""\"">""+day.get( Calendar.DATE )+""</a></td>"";"
147474,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/tags/CalendarTag.java,157,,"                result = ""<td class=\""days\"">""+day.get(Calendar.DATE)+""</td>"";"
147475,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/tags/FeedDiscoveryTag.java,52,,"            pageContext.getOut().print(""<link rel=\""alternate\"" type=\""application/rss+xml\"" title=\""RSS wiki feed for the entire site.\"" href=\""""+rssURL+""\"" />\n"");"
147476,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/tags/LinkTag.java,342,,"            sb.append( (m_cssClass != null)   ? ""class=\""""+m_cssClass+""\"" "" : """" );"
147477,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/xmlrpc/RPCHandler.java,245,,"                ht.put( ""href"", context.getURL( ContextEnum.PAGE_VIEW.getRequestContext(), link ) );"
147478,./TargetProjects/jspwiki/jspwiki-main/src/main/java/org/apache/wiki/xmlrpc/RPCHandlerUTF8.java,196,,"                ht.put( ""href"", context.getViewURL( link ) );"
147479,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/HsqlDbUtils.java,86,,"        final Properties hProps = loadPropertiesFrom( ""target/test-classes/jspwiki-custom.properties"" );"
147480,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/WikiEngineTest.java,88,,"        m_engine.saveText( ""Foobar"", ""1"" );"
147481,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/WikiEngineTest.java,89,,"        m_engine.saveText( ""Foobars"", ""2"" );"
147482,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/WikiEngineTest.java,135,,"        final Attachment att = Wiki.contents().attachment( m_engine, NAME1, ""TestAtt.txt"" );"
147483,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/WikiEngineTest.java,136,,"        att.setAuthor( ""FirstPost"" );"
147484,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/WikiEngineTest.java,148,,"        Assertions.assertTrue(  ( first.equals( NAME1 ) && second.equals( NAME1 + ""/TestAtt.txt"" ) )"
147485,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/WikiEngineTest.java,149,,"                             || ( first.equals( NAME1 + ""/TestAtt.txt"" ) && second.equals( NAME1 ) ), ""unreferenced"" );"
147486,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/WikiEngineTest.java,299,,"        m_engine.saveText( ""OldNameTestPage"", ""Linked to RenameBugTestPage"" );"
147487,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/WikiServletTest.java,32,,"        final MockHttpServletRequest req = new MockHttpServletRequest( ""/JSPWiki"", ""/wiki/Wiki.jsp"" );"
147488,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/WikiSessionTest.java,140,,"        request.setUserPrincipal( new WikiPrincipal( ""Fred Flintstone"") );"
147489,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/attachment/AttachmentManagerTest.java,92,,"        final Attachment att = Wiki.contents().attachment( m_engine, NAME1, ""test1.txt"" );"
147490,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/attachment/AttachmentManagerTest.java,94,,"        att.setAuthor( ""FirstPost"" );"
147491,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/attachment/AttachmentManagerTest.java,100,,"        Assertions.assertNotNull( att2, ""attachment disappeared"" );"
147492,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/attachment/AttachmentManagerTest.java,101,,"        Assertions.assertEquals( att.getName(), att2.getName(), ""name"" );"
147493,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/attachment/AttachmentManagerTest.java,102,,"        Assertions.assertEquals( att.getAuthor(), att2.getAuthor(), ""author"" );"
147494,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/attachment/AttachmentManagerTest.java,103,,"        Assertions.assertEquals( c_fileContents.length(), att2.getSize(), ""size"" );"
147495,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/attachment/AttachmentManagerTest.java,107,,"        Assertions.assertNotNull( in, ""stream"" );"
147496,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/attachment/AttachmentManagerTest.java,115,,"        Assertions.assertEquals( c_fileContents, sout.toString(), ""contents"" );"
147497,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/AuthenticationManagerTest.java,48,,"        private static final Principal[] m_roles = new Principal[] { new Role( ""ContainerRole"" ), new Role( ""AuthorizerRole"" ),"
147498,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/AuthenticationManagerTest.java,48,,"        private static final Principal[] m_roles = new Principal[] { new Role( ""ContainerRole"" ), new Role( ""AuthorizerRole"" ),"
147499,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/AuthenticationManagerTest.java,113,,"        Assertions.assertTrue( session.hasPrincipal( new WikiPrincipal( ""JanneJalkanen"", WikiPrincipal.WIKI_NAME ) ) );"
147500,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/AuthenticationManagerTest.java,190,,"            m_groupMgr.removeGroup( ""Test1"" );"
147501,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/AuthenticationManagerTest.java,191,,"            m_groupMgr.removeGroup( ""Test2"" );"
147502,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/AuthorizationManagerTest.java,105,,"        m_engine.saveText( ""TestDefaultPage"", ""Foo"" );"
147503,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/AuthorizationManagerTest.java,105,,"        m_engine.saveText( ""TestDefaultPage"", ""Foo"" );"
147504,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/AuthorizationManagerTest.java,106,,"        final Permission view = PermissionFactory.getPagePermission( ""*:TestDefaultPage"", ""view"" );"
147505,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/AuthorizationManagerTest.java,107,,"        final Permission edit = PermissionFactory.getPagePermission( ""*:TestDefaultPage"", ""edit"" );"
147506,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/AuthorizationManagerTest.java,134,,"        Group test = m_groupMgr.parseGroup( ""Test"", ""Alice \n Charlie"", true );"
147507,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/AuthorizationManagerTest.java,178,,"        final Role finance = new Role( ""Finance"" );"
147508,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/AuthorizationManagerTest.java,179,,"        final Principal admin = new GroupPrincipal( ""Admin"" );"
147509,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/AuthorizationManagerTest.java,184,,"        final Group barGroup = m_groupMgr.parseGroup( ""Bar"", """", true );"
147510,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/AuthorizationManagerTest.java,191,,"        Assertions.assertFalse ( m_auth.hasRoleOrPrincipal( session, new WikiPrincipal( Users.ALICE ) ), ""Alice has Alice"" );"
147511,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/AuthorizationManagerTest.java,193,,"        Assertions.assertFalse( m_auth.hasRoleOrPrincipal( session, new WikiPrincipal( Users.BOB ) ), ""Alice not has Bob"" );"
147512,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/AuthorizationManagerTest.java,205,,"        Assertions.assertFalse( m_auth.hasRoleOrPrincipal( session, finance ), ""Alice not in Finance"" );"
147513,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/AuthorizationManagerTest.java,333,,"        final Group g1 = m_groupMgr.parseGroup( ""Group1"", ""Alice"", true );"
147514,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/AuthorizationManagerTest.java,336,,"        final Group g2 = m_groupMgr.parseGroup( ""Group2"", ""Bob"", true );"
147515,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/AuthorizationManagerTest.java,354,,"        Assertions.assertFalse( m_auth.hasRoleOrPrincipal( session, Role.ANONYMOUS ), ""Alice not anonymous"" );"
147516,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/AuthorizationManagerTest.java,361,,"        Assertions.assertFalse( m_auth.hasRoleOrPrincipal( session, group2 ), ""Alice not in Group2"" );"
147517,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/AuthorizationManagerTest.java,477,,"        Assertions.assertEquals( principal, m_auth.resolvePrincipal( ""Authenticated"" ) );"
147518,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/AuthorizationManagerTest.java,493,,"        final Group group1 = m_groupMgr.parseGroup( ""SampleGroup"", """", true );"
147519,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/AuthorizationManagerTest.java,519,,"        profile.setLoginName( ""authmanagertest"" );"
147520,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/UserManagerTest.java,120,,"        profile.setEmail( ""jspwiki.tests@mailinator.com"" );"
147521,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/UserManagerTest.java,123,,"        profile.setPassword( ""password"" );"
147522,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/UserManagerTest.java,156,,"        Assertions.assertTrue( authManager.checkPermission( session, PermissionFactory.getPagePermission( p, ""view"" ) ), ""Test User view page"" );"
147523,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/UserManagerTest.java,156,,"        Assertions.assertTrue( authManager.checkPermission( session, PermissionFactory.getPagePermission( p, ""view"" ) ), ""Test User view page"" );"
147524,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/UserManagerTest.java,158,,"        Assertions.assertFalse( authManager.checkPermission( bobSession, PermissionFactory.getPagePermission( p, ""view"" ) ), ""Bob !view page"" );"
147525,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/UserManagerTest.java,276,,"        final String loginName = ""TestUser"" + String.valueOf( System.currentTimeMillis() );"
147526,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/UserManagerTest.java,280,,"        profile.setFullname( ""FullName"" + loginName );"
147527,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/Users.java,28,,"    public static final String ALICE_PASS = ""password"";"
147528,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/acl/DefaultAclManagerTest.java,46,,"        m_engine.saveText( ""TestAclPage"", ""Bar. [{ALLOW edit Charlie, Herman}] "" );"
147529,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/acl/DefaultAclManagerTest.java,74,,"        p = acl.findPrincipals( PermissionFactory.getPagePermission(page, ""view"") );"
147530,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/acl/DefaultAclManagerTest.java,79,,"        p = acl.findPrincipals( PermissionFactory.getPagePermission(page, ""edit"") );"
147531,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/acl/DefaultAclManagerTest.java,176,,"        entry.addPermission( PermissionFactory.getPagePermission( ""Main:Foo"", ""view"" ) );"
147532,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/authorize/GroupManagerTest.java,63,,"            m_groupMgr.removeGroup( ""Test"" );"
147533,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/authorize/GroupManagerTest.java,64,,"            m_groupMgr.removeGroup( ""Test2"" );"
147534,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/authorize/GroupManagerTest.java,65,,"            m_groupMgr.removeGroup( ""Test3"" );"
147535,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/authorize/GroupManagerTest.java,130,,"        Assertions.assertFalse( m_groupMgr.isUserInRole( s, new GroupPrincipal( ""NonExistant"" ) ) );"
147536,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/authorize/GroupManagerTest.java,181,,"            m_groupMgr.removeGroup( ""Events"" );"
147537,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/authorize/GroupTest.java,48,,"        final Principal u1 = new WikiPrincipal( ""Alice"" );"
147538,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/authorize/GroupTest.java,57,,"        final Principal u2 = new WikiPrincipal( ""Bob"" );"
147539,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/authorize/JDBCGroupDatabaseTest.java,115,,"        final Principal bob = new WikiPrincipal( ""Bob"" );"
147540,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/authorize/JDBCGroupDatabaseTest.java,118,,"        m_db.save(group, new WikiPrincipal( ""Tester"") );"
147541,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/authorize/XMLGroupDatabaseTest.java,66,,"      final Principal bob = new WikiPrincipal( ""Bob"" );"
147542,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/authorize/XMLGroupDatabaseTest.java,69,,"      m_db.save(group, new WikiPrincipal( ""Tester"") );"
147543,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/login/CookieAssertionLoginModuleTest.java,62,,"            final Cookie cookie = new Cookie( CookieAssertionLoginModule.PREFS_COOKIE_NAME, ""Bullwinkle"" );"
147544,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/login/UserDatabaseLoginModuleTest.java,57,,"            CallbackHandler handler = new WikiCallbackHandler( m_engine, null, ""user"", ""password"" );"
147545,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/permissions/AllPermissionCollectionTest.java,47,,"        final AllPermission all2 = new AllPermission( ""JSPWiki"" );"
147546,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/permissions/AllPermissionCollectionTest.java,48,,"        final AllPermission all3 = new AllPermission( ""myWiki"" );"
147547,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/permissions/AllPermissionCollectionTest.java,68,,"        final PagePermission p1 = new PagePermission( ""JSPWiki:Main"", ""edit"" );"
147548,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/permissions/AllPermissionCollectionTest.java,68,,"        final PagePermission p1 = new PagePermission( ""JSPWiki:Main"", ""edit"" );"
147549,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/permissions/AllPermissionCollectionTest.java,70,,"        final PagePermission p3 = new PagePermission( ""JSPWiki:Foobar"", ""delete"" );"
147550,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/permissions/AllPermissionCollectionTest.java,90,,"        final WikiPermission p1 = new WikiPermission( ""JSPWiki"", ""login"" );"
147551,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/permissions/AllPermissionCollectionTest.java,92,,"        final WikiPermission p3 = new WikiPermission( ""JSPWiki"", ""editPreferences"" );"
147552,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/permissions/AllPermissionCollectionTest.java,155,,"        Assertions.assertFalse( c_all.implies( new AllPermission( ""bigTimeWiki"" ) ) );"
147553,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/permissions/AllPermissionCollectionTest.java,219,,"        final Permission p3 = new PagePermission( ""bigTimeWiki:FooBar"", ""modify"" );"
147554,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/permissions/AllPermissionCollectionTest.java,224,,"        Assertions.assertTrue( c_all.implies( new PagePermission( ""JSPWiki:FooBar"", ""edit"" ) ) );"
147555,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/permissions/AllPermissionCollectionTest.java,230,,"        Assertions.assertFalse( c_all.implies( new PagePermission( ""bigTimeWiki:Bar"", ""delete"" ) ) );"
147556,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/permissions/AllPermissionTest.java,37,,"        final AllPermission p3 = new AllPermission( ""myWiki"" );"
147557,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/permissions/AllPermissionTest.java,61,,"        PagePermission p2 = new PagePermission( ""*:TestPage"", ""delete"" );"
147558,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/permissions/GroupPermissionTest.java,41,,"        final GroupPermission p1 = new GroupPermission( ""mywiki:Test"", ""view,edit,delete"" );"
147559,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/permissions/GroupPermissionTest.java,41,,"        final GroupPermission p1 = new GroupPermission( ""mywiki:Test"", ""view,edit,delete"" );"
147560,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/permissions/GroupPermissionTest.java,53,,"        Assertions.assertEquals( 1, GroupPermission.createMask( ""view"" ) );"
147561,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/permissions/GroupPermissionTest.java,56,,"        Assertions.assertEquals( 2, GroupPermission.createMask( ""edit"" ) );"
147562,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/permissions/GroupPermissionTest.java,67,,"        p = new GroupPermission( ""Test"", ""view,edit,delete"" );"
147563,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/permissions/GroupPermissionTest.java,91,,"        p1 = new GroupPermission( ""*:Test"", ""edit"" );"
147564,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/permissions/GroupPermissionTest.java,112,,"        p2 = new GroupPermission (""*:TestGroup"", ""view"" );"
147565,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/permissions/PagePermissionTest.java,35,,"        final PagePermission p1 = new PagePermission( ""mywiki:Main"", ""view,edit,delete"" );"
147566,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/permissions/PagePermissionTest.java,35,,"        final PagePermission p1 = new PagePermission( ""mywiki:Main"", ""view,edit,delete"" );"
147567,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/permissions/PagePermissionTest.java,47,,"        Assertions.assertEquals( 1, PagePermission.createMask( ""view"" ) );"
147568,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/permissions/PagePermissionTest.java,60,,"        p = new PagePermission( ""Main"", ""view,edit,delete"" );"
147569,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/permissions/PagePermissionTest.java,77,,"        p1 = new PagePermission( ""Main"", ""edit"" );"
147570,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/permissions/PagePermissionTest.java,83,,"        p1 = new PagePermission( ""*:Main"", ""edit"" );"
147571,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/permissions/PagePermissionTest.java,173,,"        p1 = new PagePermission( ""*:*in"", ""view,edit,delete"" );"
147572,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/permissions/PagePermissionTest.java,198,,"        p2 = new PagePermission( ""*:Main"", ""upload"" );"
147573,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/permissions/PagePermissionTest.java,205,,"        p2 = new PagePermission( ""*:Main"", ""comment"" );"
147574,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/permissions/WikiPermissionTest.java,34,,"      final WikiPermission p = new WikiPermission(""*"", ""createPages"");"
147575,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/permissions/WikiPermissionTest.java,48,,"      final WikiPermission p3 = new WikiPermission(""*"", ""createGroups"");"
147576,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/permissions/WikiPermissionTest.java,64,,"      final WikiPermission p1 = new WikiPermission(""mywiki"", ""createPages"");"
147577,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/permissions/WikiPermissionTest.java,82,,"      final WikiPermission p1 = new WikiPermission(""*"", ""createPages,createGroups,editProfile"");"
147578,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/user/JDBCUserDatabaseTest.java,147,,"        profile.setEmail(""jspwiki.tests@mailinator.com"");"
147579,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/user/JDBCUserDatabaseTest.java,150,,"        profile.setPassword(""password"");"
147580,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/user/JDBCUserDatabaseTest.java,166,,"        UserProfile profile = m_db.findByEmail( ""janne@ecyrd.com"" );"
147581,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/user/JDBCUserDatabaseTest.java,170,,"        Assertions.assertTrue( attributes.containsKey( ""attribute1"" ) );"
147582,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/user/JDBCUserDatabaseTest.java,171,,"        Assertions.assertTrue( attributes.containsKey( ""attribute2"" ) );"
147583,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/user/JDBCUserDatabaseTest.java,177,,"        attributes.put( ""attribute the third"", ""some value"" );"
147584,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/user/JDBCUserDatabaseTest.java,203,,"            Assertions.assertEquals( ""-7739839977499061014"", profile.getUid() );"
147585,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/user/JDBCUserDatabaseTest.java,204,,"            Assertions.assertEquals( ""janne"", profile.getLoginName() );"
147586,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/user/JDBCUserDatabaseTest.java,205,,"            Assertions.assertEquals( ""Janne Jalkanen"", profile.getFullname() );"
147587,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/user/JDBCUserDatabaseTest.java,206,,"            Assertions.assertEquals( ""JanneJalkanen"", profile.getWikiName() );"
147588,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/user/JDBCUserDatabaseTest.java,207,,"            Assertions.assertEquals( ""{SHA}457b08e825da547c3b77fbc1ff906a1d00a7daee"", profile.getPassword() );"
147589,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/user/JDBCUserDatabaseTest.java,365,,"            m_db.rename( ""nonexistentname"", ""renameduser"" );"
147590,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/user/JDBCUserDatabaseTest.java,377,,"        profile.setLoginName( ""olduser"" );"
147591,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/user/XMLUserDatabaseTest.java,63,,"        profile.setEmail( ""jspwiki.tests@mailinator.com"" );"
147592,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/user/XMLUserDatabaseTest.java,66,,"        profile.setPassword( ""password"" );"
147593,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/user/XMLUserDatabaseTest.java,81,,"        UserProfile profile = m_db.findByEmail( ""janne@ecyrd.com"" );"
147594,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/user/XMLUserDatabaseTest.java,85,,"        Assertions.assertTrue( attributes.containsKey( ""attribute1"" ) );"
147595,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/user/XMLUserDatabaseTest.java,86,,"        Assertions.assertTrue( attributes.containsKey( ""attribute2"" ) );"
147596,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/user/XMLUserDatabaseTest.java,92,,"        attributes.put( ""attribute the third"", ""some value"" );"
147597,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/user/XMLUserDatabaseTest.java,116,,"            Assertions.assertEquals( ""-7739839977499061014"", profile.getUid() );"
147598,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/user/XMLUserDatabaseTest.java,117,,"            Assertions.assertEquals( ""janne"", profile.getLoginName() );"
147599,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/user/XMLUserDatabaseTest.java,118,,"            Assertions.assertEquals( ""Janne Jalkanen"", profile.getFullname() );"
147600,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/user/XMLUserDatabaseTest.java,119,,"            Assertions.assertEquals( ""JanneJalkanen"", profile.getWikiName() );"
147601,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/user/XMLUserDatabaseTest.java,120,,"            Assertions.assertEquals( ""{SHA-256}AeJQgAgYDAf2WZiqPJ2l6cGdGC/PgWmkjZmkjrBEV6SW/HlclZGlIg=="", profile.getPassword() );"
147602,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/user/XMLUserDatabaseTest.java,245,,"            m_db.rename( ""nonexistentname"", ""renameduser"" );"
147603,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/auth/user/XMLUserDatabaseTest.java,255,,"        profile.setLoginName( ""olduser"" );"
147604,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/content/PageRenamerTest.java,56,,"        m_engine.deleteTestPage(""TestPage"");"
147605,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/content/PageRenamerTest.java,57,,"        m_engine.deleteTestPage(""TestPage2"");"
147606,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/content/PageRenamerTest.java,58,,"        m_engine.deleteTestPage(""FooTest"");"
147607,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/content/PageRenamerTest.java,59,,"        m_engine.deleteTestPage(""Test"");"
147608,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/content/PageRenamerTest.java,61,,"        m_engine.deleteTestPage(""Cdauth"");"
147609,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/content/PageRenamerTest.java,62,,"        m_engine.deleteTestPage(""TestPageReferring"");"
147610,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/content/PageRenamerTest.java,64,,"        m_engine.deleteTestPage(""Main"");"
147611,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/content/PageRenamerTest.java,65,,"        m_engine.deleteTestPage(""Main8887"");"
147612,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/content/PageRenamerTest.java,66,,"        m_engine.deleteTestPage(""TestPage1234"");"
147613,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/content/PageRenamerTest.java,67,,"        m_engine.deleteTestPage(""TestPageReferred"");"
147614,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/content/PageRenamerTest.java,68,,"        m_engine.deleteTestPage(""RenameTest"");"
147615,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/content/PageRenamerTest.java,69,,"        m_engine.deleteTestPage(""Link one"");"
147616,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/content/PageRenamerTest.java,106,,"        m_engine.saveText(""TestPage"", ""foofoo"" );"
147617,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/content/PageRenamerTest.java,117,,"        Assertions.assertEquals( ""[FooTest]"", data.trim(), ""no rename"" );"
147618,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/content/PageRenamerTest.java,121,,"        Assertions.assertNull( refs, ""oldpage"" );"
147619,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/content/PageRenamerTest.java,124,,"        Assertions.assertEquals( 1, refs.size(), ""new size"" );"
147620,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/content/PageRenamerTest.java,125,,"        Assertions.assertEquals( ""TestPage2"", refs.iterator().next(), ""wrong ref"" );"
147621,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/content/PageRenamerTest.java,210,,"        m_engine.saveText(""Test"",""foo"");"
147622,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/content/PageRenamerTest.java,380,,"            System.out.println(""NPE: Bug 85 caught?"");"
147623,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/diff/ContextualDiffProviderTest.java,67,,"        diffTest( null, ""A B"", ""A B"", ""A B"" );"
147624,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/diff/ContextualDiffProviderTest.java,70,,"        diffTest( null, ""A B  C"", ""A B  C"", ""A B _C"" );"
147625,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/diff/ContextualDiffProviderTest.java,71,,"        diffTest( null, ""A B   C"", ""A B   C"", ""A B _ C"" );"
147626,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/diff/ContextualDiffProviderTest.java,82,,"        diffTest( null, ""A C"", ""A B C"", ""A |^B ^|C"" );"
147627,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/diff/ContextualDiffProviderTest.java,116,,"        diffTest( ""1"", ""A B C D E F G H I"", ""A B C D E F G H I"", ""A..."" );"
147628,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/htmltowiki/HtmlStringToWikiTranslatorTest.java,190,,"                        + ""<tbody><tr><td><img src=\""attach?page=AbenteuerQuilpins%2FQuilpins.jpg\""></td></tr>\r\n</tbody>"" + ""</table>"" ) );"
147629,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/pages/DefaultPageManagerTest.java,83,,"        engine.getWikiProperties().setProperty( ""jspwiki.usePageCache"", ""true"" );"
147630,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/pages/DefaultPageManagerTest.java,91,,"        engine.getWikiProperties().setProperty( ""jspwiki.usePageCache"", ""false"" );"
147631,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/pages/DefaultPageManagerTest.java,165,,"        props.setProperty( ""jspwiki.pageProvider"", ""VersioningFileProvider"" );"
147632,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/pages/DefaultPageManagerTest.java,200,,"        props.setProperty( ""jspwiki.pageProvider"", ""org.apache.wiki.providers.VerySimpleProvider"" );"
147633,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/pages/DefaultPageManagerTest.java,203,,"        final Page p = engine.getManager( PageManager.class ).getPage( ""test"", -1 );"
147634,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/pages/DefaultPageManagerTest.java,206,,"        Assertions.assertEquals( ""test"", vsp.m_latestReq, ""wrong page"" );"
147635,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/pages/DefaultPageManagerTest.java,207,,"        Assertions.assertEquals( -1, vsp.m_latestVers, ""wrong version"" );"
147636,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/pages/DefaultPageManagerTest.java,208,,"        Assertions.assertNotNull( p, ""null"" );"
147637,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/pages/DefaultPageManagerTest.java,261,,"        Assertions.assertTrue( engine.getManager( PageManager.class ).wikiPageExists( name ), ""page does not exist"" );"
147638,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/pages/DefaultPageManagerTest.java,281,,"        Assertions.assertEquals( text, engine.getManager( PageManager.class ).getText( name ), ""wrong content"" );"
147639,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/pages/PageSorterTest.java,47,,"        Assertions.assertTrue( sorter.compare( ""ab2"", ""ab10"" ) > 0 );"
147640,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/pages/PageSorterTest.java,47,,"        Assertions.assertTrue( sorter.compare( ""ab2"", ""ab10"" ) > 0 );"
147641,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/CreoleToJSPWikiTranslatorTest.java,233,,"        final String src = ""{{{\r\n"" + ""\r\n"" + ""[[http://en.wikipedia.org|wikipedia]]\r\n"" + ""}}}"";"
147642,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/CreoleToJSPWikiTranslatorTest.java,233,,"        final String src = ""{{{\r\n"" + ""\r\n"" + ""[[http://en.wikipedia.org|wikipedia]]\r\n"" + ""}}}"";"
147643,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/CreoleToJSPWikiTranslatorTest.java,233,,"        final String src = ""{{{\r\n"" + ""\r\n"" + ""[[http://en.wikipedia.org|wikipedia]]\r\n"" + ""}}}"";"
147644,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/CreoleToJSPWikiTranslatorTest.java,352,,"        final String src = ""- 1\r\n"" + ""-- 1.1\r\n"" + ""-- 1.2\r\n"" + ""- 2\r\n"" + ""---------\r\n"" + ""test\r\n"" + ""Test"";"
147645,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/CreoleToJSPWikiTranslatorTest.java,398,,"        final String src = ""|a|b\r\n"" + ""|c|d"";"
147646,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/CreoleToJSPWikiTranslatorTest.java,398,,"        final String src = ""|a|b\r\n"" + ""|c|d"";"
147647,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/CreoleToJSPWikiTranslatorTest.java,418,,"        final String src = ""before\r\n"" + ""|a|b|   \r\n"" + ""|c|d|\r\n"" + ""after"";"
147648,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/CreoleToJSPWikiTranslatorTest.java,418,,"        final String src = ""before\r\n"" + ""|a|b|   \r\n"" + ""|c|d|\r\n"" + ""after"";"
147649,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/CreoleToJSPWikiTranslatorTest.java,454,,"        final String target = ""||a||b\r\n"" + ""|c|d"";"
147650,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/CreoleToJSPWikiTranslatorTest.java,620,,"        props.put(""creole.dateFormat"", ""dd/MM/yyyy"");"
147651,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/CreoleToJSPWikiTranslatorTest.java,621,,"        Assertions.assertEquals(target, new CreoleToJSPWikiTranslator().translateSignature(props, src, ""Hanno""));"
147652,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/CreoleToJSPWikiTranslatorTest.java,660,,"        final String src = ""{{{Hallo\r\n"" + ""--~~~~\r\n"" + ""Hallo\r\n"" + ""}}}"";"
147653,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/CreoleToJSPWikiTranslatorTest.java,702,,"        props.put(""creole.imagePlugin.para.M"", ""width='250'"");"
147654,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/CreoleToJSPWikiTranslatorTest.java,702,,"        props.put(""creole.imagePlugin.para.M"", ""width='250'"");"
147655,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/CreoleToJSPWikiTranslatorTest.java,703,,"        props.put(""creole.imagePlugin.para.NB"", ""border=0"");"
147656,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/CreoleToJSPWikiTranslatorTest.java,703,,"        props.put(""creole.imagePlugin.para.NB"", ""border=0"");"
147657,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/CreoleToJSPWikiTranslatorTest.java,704,,"        props.put(""creole.imagePlugin.name"", ""ImageX"");"
147658,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/CreoleToJSPWikiTranslatorTest.java,704,,"        props.put(""creole.imagePlugin.name"", ""ImageX"");"
147659,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/CreoleToJSPWikiTranslatorTest.java,838,,"        final String src = ""<<JudoScript\r\n"" + ""if this works then ok\r\n"" + ""else improve the programm\r\n"" + "">>"";"
147660,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/JSPWikiMarkupParserTest.java,70,,"        props.setProperty( ""jspwiki.translatorReader.matchEnglishPlurals"", ""true"" );"
147661,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/JSPWikiMarkupParserTest.java,189,,"        newPage(""HyperLink"");"
147662,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/JSPWikiMarkupParserTest.java,332,,"        newPage(""ThisToo"");"
147663,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/JSPWikiMarkupParserTest.java,738,,"        newPage(""Test"");"
147664,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/JSPWikiMarkupParserTest.java,740,,"        final Attachment att = Wiki.contents().attachment( testEngine, ""Test"", ""TestAtt.txt"" );"
147665,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/JSPWikiMarkupParserTest.java,741,,"        att.setAuthor( ""FirstPost"" );"
147666,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/JSPWikiMarkupParserTest.java,784,,"        testEngine2.saveText( ""TestPage"", ""foo "");"
147667,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/JSPWikiMarkupParserTest.java,1056,,"                     ""In UNIX, the file(1) command can be used."";"
147668,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/JSPWikiMarkupParserTest.java,1059,,"                      ""<p>In UNIX, the file(1) command can be used.</p>"","
147669,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/JSPWikiMarkupParserTest.java,1481,,"                      ""<li>Item B</li>""+"
147670,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/JSPWikiMarkupParserTest.java,1482,,"                      ""</ul>"","
147671,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/JSPWikiMarkupParserTest.java,1503,,"                      ""</ul></li>""+"
147672,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/JSPWikiMarkupParserTest.java,1505,,"                      ""</ol>"","
147673,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/JSPWikiMarkupParserTest.java,1544,,"        Assertions.assertEquals( ""<ul>""+"
147674,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/JSPWikiMarkupParserTest.java,1552,,"                      ""</li>""+"
147675,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/JSPWikiMarkupParserTest.java,2008,,"        Assertions.assertEquals( ""<table class=\""wikitable\"" border=\""1\"">""+"
147676,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/JSPWikiMarkupParserTest.java,2012,,"                      ""</table><p />"","
147677,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/JSPWikiMarkupParserTest.java,2454,,"        Assertions.assertEquals( ""Foobar."", res, ""Page text"" );"
147678,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/JSPWikiMarkupParserTest.java,2454,,"        Assertions.assertEquals( ""Foobar."", res, ""Page text"" );"
147679,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/parser/JSPWikiMarkupParserTest.java,2456,,"        Assertions.assertEquals( ""foo"", p.getAttribute(""name"") );"
147680,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/plugin/DefaultPluginManagerTest.java,58,,"        Assertions.assertEquals( ""foobar"", res );"
147681,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/plugin/IfPluginTest.java,43,,"        testEngine.getManager( PageManager.class ).deletePage( ""Test"" );"
147682,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/plugin/InsertPageTest.java,45,,"        testEngine.deleteTestPage( ""ThisPage"" );"
147683,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/plugin/InsertPageTest.java,62,,"        Assertions.assertTrue( res.indexOf(""Circular reference"") != -1 );"
147684,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/plugin/InsertPageTest.java,82,,"        final String src2 = ""foo[{ALLOW view Anonymous}]"";"
147685,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/plugin/PageViewPluginTest.java,53,,"        testEngine.saveText( ""TestPage01"", ""this is test page 01 [{PageViewPlugin}]"" );"
147686,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/plugin/PageViewPluginTest.java,54,,"        testEngine.saveText( ""TestPage02"", ""this is test page 02 [{PageViewPlugin}]"" );"
147687,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/plugin/PageViewPluginTest.java,64,,"        testEngine.deleteTestPage( ""PageViews"" );"
147688,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/plugin/ReferringPagesPluginTest.java,49,,"        engine.saveText( ""TestPage"", ""Reference to [Foobar]."" );"
147689,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/plugin/ReferringPagesPluginTest.java,50,,"        engine.saveText( ""Foobar"", ""Reference to [TestPage]."" );"
147690,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/plugin/ReferringPagesPluginTest.java,50,,"        engine.saveText( ""Foobar"", ""Reference to [TestPage]."" );"
147691,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/plugin/ReferringPagesPluginTest.java,51,,"        engine.saveText( ""Foobar2"", ""Reference to [TestPage]."" );"
147692,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/plugin/ReferringPagesPluginTest.java,52,,"        engine.saveText( ""Foobar3"", ""Reference to [TestPage]."" );"
147693,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/plugin/ReferringPagesPluginTest.java,53,,"        engine.saveText( ""Foobar4"", ""Reference to [TestPage]."" );"
147694,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/plugin/ReferringPagesPluginTest.java,54,,"        engine.saveText( ""Foobar5"", ""Reference to [TestPage]."" );"
147695,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/plugin/ReferringPagesPluginTest.java,55,,"        engine.saveText( ""Foobar6"", ""Reference to [TestPage]."" );"
147696,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/plugin/ReferringPagesPluginTest.java,56,,"        engine.saveText( ""Foobar7"", ""Reference to [TestPage]."" );"
147697,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/plugin/ReferringUndefinedPagesPluginTest.java,73,,"		Assertions.assertTrue(res.contains(""href=\""/test/Wiki.jsp?page=TestPage01\""""));"
147698,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/plugin/TableOfContentsTest.java,42,,"        testEngine.getManager( PageManager.class ).deletePage( ""Test"" );"
147699,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/plugin/TableOfContentsTest.java,56,,"        Assertions.assertEquals( ""<p><div class=\""toc\"">\n<div class=\""collapsebox\"">\n""+"
147700,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/plugin/TableOfContentsTest.java,57,,"                      ""<h4 id=\""section-TOC\"">Table of Contents</h4>\n""+"
147701,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/plugin/TableOfContentsTest.java,58,,"                      ""<ul>\n""+"
147702,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/plugin/TableOfContentsTest.java,60,,"                      ""</ul>\n</div>\n</div>\n\n</p>""+"
147703,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/plugin/TableOfContentsTest.java,83,,"                ""\n<h2 id=\""section-Test-HeadingBar\"">Heading bar<a class=\""hashlink\"" href=\""#section-Test-HeadingBar\"">#</a></h2>""+"
147704,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/plugin/TableOfContentsTest.java,84,,"                ""\n<h3 id=\""section-Test-Subheading\"">Subheading<a class=\""hashlink\"" href=\""#section-Test-Subheading\"">#</a></h3>""+"
147705,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/providers/BasicAttachmentProviderTest.java,135,,"        final Attachment att = Wiki.contents().attachment( m_engine, NAME1, ""test1.txt"" );"
147706,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/providers/BasicAttachmentProviderTest.java,170,,"        final Attachment att2 = Wiki.contents().attachment( m_engine, NAME2, ""test2.txt"" );"
147707,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/providers/BasicAttachmentProviderTest.java,175,,"        Assertions.assertEquals( 2, res.size(), ""list size"" );"
147708,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/providers/BasicAttachmentProviderTest.java,180,,"        Assertions.assertEquals( att.getName(), a1.getName(), ""a1 name :: "" + res );"
147709,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/providers/BasicAttachmentProviderTest.java,181,,"        Assertions.assertEquals( att2.getName(), a2.getName(), ""a2 name :: "" + res );"
147710,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/providers/CachingProviderTest.java,44,,"        testEngine.deleteTestPage(""Testi"");"
147711,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/providers/FileSystemProviderTest.java,71,,"        final WikiPage page = new WikiPage(m_engine, ""\u00c5\u00e4Test"");"
147712,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/providers/FileSystemProviderTest.java,73,,"        m_provider.putPageText( page, ""test"" );"
147713,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/providers/FileSystemProviderTest.java,77,,"        Assertions.assertTrue( resultfile.exists(), ""No such file"" );"
147714,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/providers/FileSystemProviderTest.java,81,,"        Assertions.assertEquals( contents, ""test"", ""Wrong contents"" );"
147715,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/providers/FileSystemProviderTest.java,252,,"        final WikiPage p = new WikiPage(m_engine,""Test"");"
147716,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/providers/VersioningFileProviderTest.java,87,,"        final String fakeWikiPage = ""foobar"";"
147717,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/providers/VersioningFileProviderTest.java,176,,"        final String text = ""diddo\r\n"";"
147718,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/providers/VersioningFileProviderTest.java,191,,"        Assertions.assertEquals( fakeWikiPage, result4, ""fetch original by version Assertions.failed"" );"
147719,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/providers/VersioningFileProviderTest.java,341,,"        Assertions.assertEquals( maxver, pageinfo.getVersion(), ""wrong version"" );"
147720,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/providers/VersioningFileProviderTest.java,533,,"        p.setAttribute(Page.CHANGENOTE, ""Test change"" );"
147721,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/providers/VersioningFileProviderTest.java,536,,"        engine.getManager( PageManager.class ).saveText( context, ""test"" );"
147722,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/references/ReferenceManagerTest.java,48,,"        engine.saveText( ""TestPage"", ""Reference to [Foobar]."" );"
147723,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/references/ReferenceManagerTest.java,49,,"        engine.saveText( ""Foobar"", ""Reference to [Foobar2], [Foobars], [Foobar]"" );"
147724,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/references/ReferenceManagerTest.java,68,,"        final Collection< String > c = mgr.findReferrers(""Foobar2"");"
147725,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/references/ReferenceManagerTest.java,70,,"        Assertions.assertNotNull( c, ""referrers expected"" );"
147726,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/references/ReferenceManagerTest.java,139,,"        c = mgr.findReferrers( ""Foobars"" );"
147727,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/references/ReferenceManagerTest.java,230,,"        engine.saveText( ""BugOne"", ""NewBug"" );"
147728,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/references/ReferenceManagerTest.java,230,,"        engine.saveText( ""BugOne"", ""NewBug"" );"
147729,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/references/ReferenceManagerTest.java,231,,"        engine.saveText( ""NewBugs"", ""foo"" );"
147730,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/references/ReferenceManagerTest.java,232,,"        engine.saveText( ""OpenBugs"", ""bar"" );"
147731,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/references/ReferenceManagerTest.java,233,,"        engine.saveText( ""BugOne"", ""OpenBug"" );"
147732,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/references/ReferenceManagerTest.java,236,,"        Assertions.assertNull( ref, ""newbugs"" ); // No referrers must be found"
147733,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/references/ReferenceManagerTest.java,244,,"        Assertions.assertEquals( ref.iterator().next(), ""BugOne"", ""openbugs2"" );"
147734,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/render/RenderingManagerTest.java,40,,"        m_engine.getManager( PageManager.class ).deletePage( ""TestPage"" );"
147735,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/rss/RSSGeneratorTest.java,71,,"        m_testEngine.saveText( ""TestBlog"", ""Foo1"" );"
147736,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/search/SearchManagerTest.java,99,,"        final String txt = ""It was the dawn of the third age of mankind, ten years after the Earth-Minbari War."";"
147737,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/search/SearchManagerTest.java,100,,"        m_engine.saveText(""TestPage"", txt);"
147738,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/search/SearchManagerTest.java,103,,"        Awaitility.await( ""testSimpleSearch"" ).until( findsResultsFor( res, ""mankind"" ) );"
147739,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/search/SearchManagerTest.java,105,,"        Assertions.assertEquals( 1, res.size(), ""no pages"" );"
147740,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/search/SearchManagerTest.java,106,,"        Assertions.assertEquals( ""TestPage"", res.iterator().next().getPage().getName(), ""page"" );"
147741,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/ui/CommandResolverTest.java,51,,"        m_engine.saveText( ""SinglePage"", ""This is a test."" );"
147742,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/ui/CommandResolverTest.java,52,,"        m_engine.saveText( ""PluralPages"", ""This is a test."" );"
147743,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/ui/InputValidatorTest.java,63,,"        Assertions.assertTrue( val.validate( ""Test string"", ""Name"", InputValidator.STANDARD ) );"
147744,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/ui/InputValidatorTest.java,86,,"        Assertions.assertTrue( val.validateNotNull(""foo@bar.com"", ""E-mail"", InputValidator.EMAIL) );"
147745,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/ui/RedirectCommandTest.java,60,,"        b = a.targetedCommand( ""http://www.yahoo.com"" );"
147746,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/url/DefaultURLConstructorTest.java,59,,"        Assertions.assertEquals( ""/test/Wiki.jsp?page=Main"", c.makeURL( ContextEnum.PAGE_VIEW.getRequestContext(),""Main"",null) );"
147747,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/url/DefaultURLConstructorTest.java,59,,"        Assertions.assertEquals( ""/test/Wiki.jsp?page=Main"", c.makeURL( ContextEnum.PAGE_VIEW.getRequestContext(),""Main"",null) );"
147748,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/url/ShortURLConstructorTest.java,59,,"        Assertions.assertEquals( ""/test/wiki/Main"", c.makeURL( ContextEnum.PAGE_VIEW.getRequestContext(),""Main"",null) );"
147749,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/url/ShortURLConstructorTest.java,59,,"        Assertions.assertEquals( ""/test/wiki/Main"", c.makeURL( ContextEnum.PAGE_VIEW.getRequestContext(),""Main"",null) );"
147750,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/url/ShortViewURLConstructorTest.java,59,,"        Assertions.assertEquals( ""/test/wiki/Main"", c.makeURL( ContextEnum.PAGE_VIEW.getRequestContext(),""Main"",null) );"
147751,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/url/ShortViewURLConstructorTest.java,59,,"        Assertions.assertEquals( ""/test/wiki/Main"", c.makeURL( ContextEnum.PAGE_VIEW.getRequestContext(),""Main"",null) );"
147752,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/workflow/ApprovalWorkflowTest.java,53,,"        final Task prepTask = new TestPrepTask( ""task.preSaveWikiPage"" );"
147753,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/workflow/SimpleDecisionTest.java,39,,"        m_decision = new SimpleDecision( m_workflow.getId(), m_workflow.getAttributes(), ""decision.key"", new WikiPrincipal( ""Actor1"" ) );"
147754,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/workflow/WorkflowTest.java,56,,"        w = new Workflow( ""workflow.myworkflow"", new WikiPrincipal( ""Owner1"" ) );"
147755,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/workflow/WorkflowTest.java,73,,"        w.addMessageArgument( ""MyPage"" );"
147756,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/xmlrpc/RPCHandlerTest.java,164,,"        Assertions.assertEquals( ""local"",  linkinfo.get(""type""), ""type"" );"
147757,./TargetProjects/jspwiki/jspwiki-main/src/test/java/org/apache/wiki/xmlrpc/RPCHandlerTest.java,165,,"        Assertions.assertEquals( ""/test/Edit.jsp?page=Foobar"", linkinfo.get(""href""), ""href"" );"
147758,./TargetProjects/jspwiki/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java,483,,"                sb.append( ""\r\n"" );"
147759,./TargetProjects/jspwiki/jspwiki-util/src/main/java/org/apache/wiki/util/XmlUtil.java,82,,"				LOG.error( ""Couldn't load all "" + xml + "" resources"", ioe );"
147760,./TargetProjects/jspwiki/jspwiki-util/src/test/java/org/apache/wiki/util/ClassUtilTest.java,60,,"        Assertions.assertEquals( foo.getName(), ""java.util.List"" );"
147761,./TargetProjects/jspwiki/jspwiki-util/src/test/java/org/apache/wiki/util/CommentedPropertiesTest.java,60,,"        Assertions.assertEquals( ""Foo"", m_props.get( ""testProp1"" ) );"
147762,./TargetProjects/jspwiki/jspwiki-util/src/test/java/org/apache/wiki/util/CommentedPropertiesTest.java,61,,"        Assertions.assertEquals( ""Bar"", m_props.get( ""testProp2"" ) );"
147763,./TargetProjects/jspwiki/jspwiki-util/src/test/java/org/apache/wiki/util/CommentedPropertiesTest.java,62,,"        Assertions.assertEquals( """", m_props.get( ""testProp3"" ) );"
147764,./TargetProjects/jspwiki/jspwiki-util/src/test/java/org/apache/wiki/util/CommentedPropertiesTest.java,63,,"        Assertions.assertEquals( ""FooAgain"", m_props.get( ""testProp4"" ) );"
147765,./TargetProjects/jspwiki/jspwiki-util/src/test/java/org/apache/wiki/util/CommentedPropertiesTest.java,64,,"        Assertions.assertEquals( ""BarAgain"", m_props.get( ""testProp5"" ) );"
147766,./TargetProjects/jspwiki/jspwiki-util/src/test/java/org/apache/wiki/util/CryptoUtilTest.java,42,,"        CryptoUtil.main( new String[] { ""--hash"", ""password"" } );"
147767,./TargetProjects/jspwiki/jspwiki-util/src/test/java/org/apache/wiki/util/CryptoUtilTest.java,62,,"        CryptoUtil.main( new String[] { ""--verify"", ""password"", ""{SSHA}yfT8SRT/WoOuNuA6KbJeF10OznZmb28="" } );"
147768,./TargetProjects/jspwiki/jspwiki-util/src/test/java/org/apache/wiki/util/CryptoUtilTest.java,77,,"            CryptoUtil.main( new String[] { ""--verify"", ""password"", ""yfT8SRT/WoOuNuA6KbJeF10OznZmb28="", ""{SSHA}"" } );"
147769,./TargetProjects/jspwiki/jspwiki-util/src/test/java/org/apache/wiki/util/PriorityListTest.java,32,,"        p.add( ""One"", 1 );"
147770,./TargetProjects/jspwiki/jspwiki-util/src/test/java/org/apache/wiki/util/PriorityListTest.java,33,,"        p.add( ""Two"", 2 );"
147771,./TargetProjects/jspwiki/jspwiki-util/src/test/java/org/apache/wiki/util/PriorityListTest.java,35,,"        Assertions.assertEquals( 2, p.size(), ""size"" );"
147772,./TargetProjects/jspwiki/jspwiki-util/src/test/java/org/apache/wiki/util/PriorityListTest.java,66,,"        p.add( ""Three"", 3 );"
147773,./TargetProjects/jspwiki/jspwiki-util/src/test/java/org/apache/wiki/util/PriorityListTest.java,74,,"        p.add( ""TwoTwo"", 2 );"
147774,./TargetProjects/jspwiki/jspwiki-util/src/test/java/org/apache/wiki/util/PriorityListTest.java,91,,"        p.add( ""Two2"", 2 );"
147775,./TargetProjects/jspwiki/jspwiki-util/src/test/java/org/apache/wiki/util/PriorityListTest.java,92,,"        p.add( ""Two3"", 2 );"
147776,./TargetProjects/jspwiki/jspwiki-util/src/test/java/org/apache/wiki/util/PropertyReaderTest.java,36,,"        Assertions.assertEquals( ""/ini/jspwiki.properties"", PropertyReader.createResourceLocation( ""ini"", ""jspwiki.properties"" ) );"
147777,./TargetProjects/jspwiki/jspwiki-util/src/test/java/org/apache/wiki/util/PropertyReaderTest.java,50,,"        p.put( ""jspwiki.fileSystemProvider.pageDir"", ""$basedir/www/"" );"
147778,./TargetProjects/jspwiki/jspwiki-util/src/test/java/org/apache/wiki/util/PropertyReaderTest.java,50,,"        p.put( ""jspwiki.fileSystemProvider.pageDir"", ""$basedir/www/"" );"
147779,./TargetProjects/jspwiki/jspwiki-util/src/test/java/org/apache/wiki/util/PropertyReaderTest.java,51,,"        p.put( ""jspwiki.basicAttachmentProvider.storageDir"", ""$basedir/www/"" );"
147780,./TargetProjects/jspwiki/jspwiki-util/src/test/java/org/apache/wiki/util/PropertyReaderTest.java,52,,"        p.put( ""jspwiki.workDir"", ""$basedir/wrk/"" );"
147781,./TargetProjects/jspwiki/jspwiki-util/src/test/java/org/apache/wiki/util/PropertyReaderTest.java,52,,"        p.put( ""jspwiki.workDir"", ""$basedir/wrk/"" );"
147782,./TargetProjects/jspwiki/jspwiki-util/src/test/java/org/apache/wiki/util/PropertyReaderTest.java,53,,"        p.put( ""jspwiki.xyz"", ""test basedir"" ); //don't touch this"
147783,./TargetProjects/jspwiki/jspwiki-util/src/test/java/org/apache/wiki/util/PropertyReaderTest.java,53,,"        p.put( ""jspwiki.xyz"", ""test basedir"" ); //don't touch this"
147784,./TargetProjects/jspwiki/jspwiki-util/src/test/java/org/apache/wiki/util/PropertyReaderTest.java,57,,"        Assertions.assertEquals( ""/p/mywiki/www/"", p.getProperty( ""jspwiki.fileSystemProvider.pageDir"" ) );"
147785,./TargetProjects/jspwiki/jspwiki-util/src/test/java/org/apache/wiki/util/TextUtilTest.java,280,,"        final String[] vals = { ""foo"", "" this is a property "", ""bar"", ""60"" };"
147786,./TargetProjects/jspwiki/jspwiki-util/src/test/java/org/apache/wiki/util/TextUtilTest.java,280,,"        final String[] vals = { ""foo"", "" this is a property "", ""bar"", ""60"" };"
147787,./TargetProjects/jspwiki/jspwiki-util/src/test/java/org/apache/wiki/util/TextUtilTest.java,280,,"        final String[] vals = { ""foo"", "" this is a property "", ""bar"", ""60"" };"
147788,./TargetProjects/jspwiki/jspwiki-util/src/test/java/org/apache/wiki/util/TimedCounterListTest.java,33,,"        m_list.add( ""Foo"" );"
147789,./TargetProjects/jspwiki/jspwiki-util/src/test/java/org/apache/wiki/util/TimedCounterListTest.java,36,,"        m_list.add( ""Bar"" );"
147790,./TargetProjects/jspwiki/jspwiki-util/src/test/java/org/apache/wiki/util/XmlUtilTest.java,37,,"        List< Element > elements = XmlUtil.parse( ""ini/jspwiki_module.xml"", ""/modules/plugin"" );"
147791,./TargetProjects/jspwiki/jspwiki-util/src/test/java/org/apache/wiki/util/XmlUtilTest.java,43,,"        elements = XmlUtil.parse( ""ini/jspwiki_module.xml"", ""/modules/editor"" );"
147792,./TargetProjects/jspwiki/jspwiki-util/src/test/java/org/apache/wiki/util/comparators/HumanComparatorTest.java,37,,"        Assertions.assertTrue( comparator.compare( ""a c"", ""a1c"" ) < 0 );"
147793,./TargetProjects/juddi/juddi-client-cli/src/main/java/org/apache/juddi/v3/client/cli/EntryPoint.java,30,,"                if (System.getProperty(""javax.net.ssl.trustStore"") == null) {"
147794,./TargetProjects/juddi/juddi-client-cli/src/main/java/org/apache/juddi/v3/client/cli/EntryPoint.java,63,,"                if (System.getProperty(""javax.net.ssl.keyStore"") == null) {"
147795,./TargetProjects/juddi/juddi-client-cli/src/main/java/org/apache/juddi/v3/client/cli/EntryPoint.java,100,,"                        System.out.println(""____________________________"");"
147796,./TargetProjects/juddi/juddi-client-cli/src/main/java/org/apache/juddi/v3/client/cli/EntryPointSingleNode.java,162,,"                        System.out.println(""Success!"");"
147797,./TargetProjects/juddi/juddi-client-cli/src/main/java/org/apache/juddi/v3/client/cli/EntryPointSingleNode.java,260,,"                        char passwordArray[] = System.console().readPassword(""password: "");"
147798,./TargetProjects/juddi/juddi-client-cli/src/main/java/org/apache/juddi/v3/client/cli/JuddiAdminService.java,122,,"        String curentnode = ""default"";"
147799,./TargetProjects/juddi/juddi-client-cli/src/main/java/org/apache/juddi/v3/client/cli/JuddiAdminService.java,162,,"                System.out.println(""Node #: "");"
147800,./TargetProjects/juddi/juddi-client-cli/src/main/java/org/apache/juddi/v3/client/cli/JuddiAdminService.java,246,,"                System.out.println(""fetching..."");"
147801,./TargetProjects/juddi/juddi-client-cli/src/main/java/org/apache/juddi/v3/client/cli/JuddiAdminService.java,252,,"                        System.out.println(""Error getting replication config"");"
147802,./TargetProjects/juddi/juddi-client-cli/src/main/java/org/apache/juddi/v3/client/cli/JuddiAdminService.java,285,,"                                        replicationNodes.getRegistryContact().getContact().getPersonName().add(new PersonName(""unknown"", null));"
147803,./TargetProjects/juddi/juddi-client-cli/src/main/java/org/apache/juddi/v3/client/cli/JuddiAdminService.java,481,,"                String authtoken = transport.getUDDISecurityService().getAuthToken(new GetAuthToken(""root"", ""root"")).getAuthInfo();"
147804,./TargetProjects/juddi/juddi-client-cli/src/main/java/org/apache/juddi/v3/client/cli/JuddiAdminService.java,499,,"                op.setOperatorNodeID(""uddi:juddi.apache.org:node1"");"
147805,./TargetProjects/juddi/juddi-client-cli/src/main/java/org/apache/juddi/v3/client/cli/JuddiAdminService.java,503,,"                op.getContact().get(0).getPersonName().add(new PersonName(""bob"", ""en""));"
147806,./TargetProjects/juddi/juddi-client-cli/src/main/java/org/apache/juddi/v3/client/cli/JuddiAdminService.java,504,,"                op.getContact().get(0).setUseType(""admin"");"
147807,./TargetProjects/juddi/juddi-client-cli/src/main/java/org/apache/juddi/v3/client/cli/JuddiAdminService.java,509,,"                op.setOperatorNodeID(""uddi:another.juddi.apache.org:node2"");"
147808,./TargetProjects/juddi/juddi-client-cli/src/main/java/org/apache/juddi/v3/client/cli/JuddiAdminService.java,513,,"                op.getContact().get(0).getPersonName().add(new PersonName(""mary"", ""en""));"
147809,./TargetProjects/juddi/juddi-client-cli/src/main/java/org/apache/juddi/v3/client/cli/JuddiAdminService.java,518,,"                op.setOperatorNodeID(""uddi:yet.another.juddi.apache.org:node3"");"
147810,./TargetProjects/juddi/juddi-client-cli/src/main/java/org/apache/juddi/v3/client/cli/SimpleBrowse.java,192,,"                                System.out.println(""Name: "" + contacts.getContact().get(i).getPersonName().get(k).getValue());"
147811,./TargetProjects/juddi/juddi-client-cli/src/main/java/org/apache/juddi/v3/client/cli/UddiCustodyTransfer.java,76,,"                getAuthTokenRoot.setUserID(""uddi"");"
147812,./TargetProjects/juddi/juddi-client-cli/src/main/java/org/apache/juddi/v3/client/cli/UddiSubscribe.java,114,,"                System.out.println(""Registered FindBusiness subscription key: "" + (subscriptionBiz.getSubscriptionKey()) + "" bindingkey: "" + subscriptionBiz.getBindingKey());"
147813,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/JUDDIApiService.java,34,,"@WebServiceClient(name = ""JUDDIApiService"", targetNamespace = ""urn:juddi-apache-org:v3_service"", wsdlLocation = ""classpath:/juddi_api_v1.wsdl"")"
147814,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/JUDDIApiService.java,59,,"    @WebEndpoint(name = ""JUDDIApiImplPort"")"
147815,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/UDDIService.java,50,,"@WebServiceClient(name = ""UDDI_Service"", targetNamespace = ""urn:uddi-org:v3_service"", wsdlLocation = ""classpath:/uddi_v3_service.wsdl"")"
147816,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/UDDIService.java,79,,"    @WebEndpoint(name = ""UDDI_Inquiry_Port"")"
147817,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/UDDIService.java,101,,"    @WebEndpoint(name = ""UDDI_Publication_Port"")"
147818,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/UDDIService.java,123,,"    @WebEndpoint(name = ""UDDI_Security_Port"")"
147819,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/UDDIService.java,145,,"    @WebEndpoint(name = ""UDDI_Custody_Port"")"
147820,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/UDDIService.java,167,,"    @WebEndpoint(name = ""UDDI_Replication_Port"")"
147821,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/UDDIService.java,189,,"    @WebEndpoint(name = ""UDDI_Subscription_Port"")"
147822,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/UDDIService.java,211,,"    @WebEndpoint(name = ""UDDI_SubscriptionListener_Port"")"
147823,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/UDDIService.java,233,,"    @WebEndpoint(name = ""UDDI_ValueSetValidation_Port"")"
147824,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/UDDIService.java,255,,"    @WebEndpoint(name = ""UDDI_ValueSetCaching_Port"")"
147825,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/UDDIServiceV2.java,36,,"@WebServiceClient(name = ""UDDI_Service"", targetNamespace = ""urn:uddi-org:v2_service"", wsdlLocation = ""classpath:/uddi_v2_service.wsdl"")"
147826,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/compare/TModelInstanceDetailsComparator.java,53,,"            throw new IllegalArgumentException(""only one data type can be selected"");"
147827,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/config/ClientConfig.java,217,,"                                uddiClerk.setName(config.getString(""client.clerks.clerk("" + i + "")[@name]""));"
147828,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/config/ClientConfig.java,217,,"                                uddiClerk.setName(config.getString(""client.clerks.clerk("" + i + "")[@name]""));"
147829,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/config/ClientConfig.java,229,,"                                String clerkBusinessKey = config.getString(""client.clerks.clerk("" + i + "")[@businessKey]"");"
147830,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/config/ClientConfig.java,242,,"                                                String fileName = config.getString(""client.clerks.clerk("" + i + "").wsdl("" + w + "")"");"
147831,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/config/ClientConfig.java,323,,"                        String nodeName = config.getString(""client.nodes.node("" + i + "").name"");"
147832,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/config/ClientConfig.java,331,,"                                        String name = config.getString(""client.nodes.node("" + i + "").properties.property("" + p + "")[@name]"");"
147833,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/config/ClientConfig.java,373,,"                String[] entityKeys = config.getStringArray(""client.clerks.xregister."" + entityType + ""[@entityKey]"");"
147834,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/config/ClientConfig.java,539,,"                        p.setProperty(DigSigUtil.SIGNATURE_KEYSTORE_KEY_PASSWORD_WAS_ENC, ""true"");"
147835,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/config/ClientConfig.java,545,,"                        p.setProperty(DigSigUtil.SIGNATURE_KEYSTORE_KEY_PASSWORD_WAS_ENC, ""false"");"
147836,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/config/ClientConfig.java,665,,"                                cc.addProperty(""client(0).nodes.node("" + i + "").properties.property("" + x + "")[@name]"", next.getKey());"
147837,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/config/ClientConfig.java,706,,"                        cc.addProperty(""client(0).clerks.clerk("" + i + "")[@name]"", uddiClerk.getName());"
147838,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/config/ClientConfig.java,805,,"                                cc.addProperty(""client(0).signature.signingKeyPassword"", val);"
147839,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/config/UDDIClerk.java,284,,"                                                properties.setProperty(""keyDomain"", wsdl.keyDomain);"
147840,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/config/UDDIClerk.java,293,,"                                        log.error(""Unable to register wsdl "" + wsdl.getFileName() + "" ."" + e.getMessage(), e);"
147841,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/config/UDDIClerk.java,402,,"                                log.debug(""Registering subscription "" + subscription.getSubscriptionKey() + "" completed."");"
147842,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/config/UDDIClerk.java,537,,"                        log.error(""Unable to register service "" + service.getName().get(0).getValue()"
147843,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/config/UDDIClerk.java,788,,"                     throw new RemoteException(""Unhandled exception"", t);"
147844,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/config/UDDIClerk.java,1185,,"                                log.warn(""Error discarding auth token: "" + ex.getMessage());"
147845,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/config/XRegistration.java,74,,"			log.info(""xregister business "" + businessEntity.getName().get(0).getValue() + "" + from """
147846,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/config/XRegistration.java,75,,"					+ fromClerk.getName() + "" to "" + toClerk.getName() + ""."");"
147847,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/config/XRegistration.java,80,,"			log.error(""Could not "" + toString() + "". "" + e.getMessage() + "" "" + e.getCause(),e);"
147848,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/cryptor/AESCryptorAbstract.java,71,,"        SecretKeySpec skeySpec = new SecretKeySpec(raw, ""AES"");"
147849,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/cryptor/DigSigUtil.java,720,,"                                logger.warn(""unable to load truststore from file ""+map.getProperty(TRUSTSTORE_FILE)+"" ""+ x.getMessage());"
147850,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/cryptor/XmlUtils.java,45,,"                        spf.setFeature(""http://xml.org/sax/features/external-general-entities"", false);"
147851,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/cryptor/XmlUtils.java,46,,"                        spf.setFeature(""http://xml.org/sax/features/external-parameter-entities"", false);"
147852,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/cryptor/XmlUtils.java,47,,"                        spf.setFeature(""http://apache.org/xml/features/nonvalidating/load-external-dtd"", false);"
147853,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/mapping/wsdl/WSDL2UDDI.java,457,,"                                        ""uddi:uddi.org:xml:namespace"", ""uddi-org:xml:namespace"", namespace);"
147854,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/mapping/wsdl/WSDL2UDDI.java,457,,"                                        ""uddi:uddi.org:xml:namespace"", ""uddi-org:xml:namespace"", namespace);"
147855,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/mapping/wsdl/WSDL2UDDI.java,463,,"                                ""uddi:uddi.org:wsdl:types"", ""uddi-org:wsdl:types"", ""binding"");"
147856,./TargetProjects/juddi/juddi-client/src/main/java/org/apache/juddi/v3/client/mapping/wsdl/WSDL2UDDI.java,463,,"                                ""uddi:uddi.org:wsdl:types"", ""uddi-org:wsdl:types"", ""binding"");"
147857,./TargetProjects/juddi/juddi-client/src/test/java/org/apache/juddi/v3/client/DigSigUtilTest.java,47,,"        if (System.getProperty(""debug"") != null && System.getProperty(""debug"").equalsIgnoreCase(""true"")) {"
147858,./TargetProjects/juddi/juddi-client/src/test/java/org/apache/juddi/v3/client/DigSigUtilTest.java,96,,"        be.setBusinessKey(""uddi:juddi.apache.org:testkey"");"
147859,./TargetProjects/juddi/juddi-client/src/test/java/org/apache/juddi/v3/client/DigSigUtilTest.java,98,,"        be.getDiscoveryURLs().getDiscoveryURL().add(new DiscoveryURL(""website"", ""http://localhost""));"
147860,./TargetProjects/juddi/juddi-client/src/test/java/org/apache/juddi/v3/client/DigSigUtilTest.java,98,,"        be.getDiscoveryURLs().getDiscoveryURL().add(new DiscoveryURL(""website"", ""http://localhost""));"
147861,./TargetProjects/juddi/juddi-client/src/test/java/org/apache/juddi/v3/client/DigSigUtilTest.java,99,,"        be.getDescription().add(new Description(""a description"", ""en""));"
147862,./TargetProjects/juddi/juddi-client/src/test/java/org/apache/juddi/v3/client/DigSigUtilTest.java,100,,"        be.getName().add(new Name(""My biz"", ""en""));"
147863,./TargetProjects/juddi/juddi-client/src/test/java/org/apache/juddi/v3/client/DigSigUtilTest.java,105,,"        Assert.assertNotSame(""items are the same"", be, signUDDI_JAXBObject);"
147864,./TargetProjects/juddi/juddi-client/src/test/java/org/apache/juddi/v3/client/DigSigUtilTest.java,112,,"            System.out.println(""signature validation failed (not expected)"");"
147865,./TargetProjects/juddi/juddi-client/src/test/java/org/apache/juddi/v3/client/UDDIClientTest.java,40,,"                        client.getClientConfig().getUDDINode(""default"");"
147866,./TargetProjects/juddi/juddi-client/src/test/java/org/apache/juddi/v3/client/UDDIClientTest.java,56,,"                        assertEquals(""test-client"", client.getName());"
147867,./TargetProjects/juddi/juddi-client/src/test/java/org/apache/juddi/v3/client/UDDIClientTest.java,67,,"                        Assert.fail(""No exceptions are expected"");"
147868,./TargetProjects/juddi/juddi-client/src/test/java/org/apache/juddi/v3/client/compare/TModelInstanceDetailsComparatorTest.java,192,,"        rhs.getTModelInstanceInfo().get(0).getInstanceDetails().setInstanceParms(""xyz"");"
147869,./TargetProjects/juddi/juddi-client/src/test/java/org/apache/juddi/v3/client/compare/TModelInstanceDetailsComparatorTest.java,243,,"        lhs.getTModelInstanceInfo().get(0).getInstanceDetails().setInstanceParms(""3.14"");"
147870,./TargetProjects/juddi/juddi-client/src/test/java/org/apache/juddi/v3/client/compare/TModelInstanceDetailsComparatorTest.java,253,,"        Assert.assertEquals(""result "" + result, expResult, result);"
147871,./TargetProjects/juddi/juddi-client/src/test/java/org/apache/juddi/v3/client/compare/TModelInstanceDetailsComparatorTest.java,334,,"        Assert.assertTrue(""result "" + lhs.getTModelInstanceInfo().get(0).getInstanceDetails().getInstanceParms() + "" compare to "" +"
147872,./TargetProjects/juddi/juddi-client/src/test/java/org/apache/juddi/v3/client/config/SaveConfigurationTest.java,75,,"                        UDDIClient client = new UDDIClient(""META-INF/uddi.xml"");"
147873,./TargetProjects/juddi/juddi-client/src/test/java/org/apache/juddi/v3/client/cryptor/AES128CryptorTest.java,64,,"                String str = ""test"";"
147874,./TargetProjects/juddi/juddi-client/src/test/java/org/apache/juddi/v3/client/cryptor/TripleDESCrytorTest.java,37,,"                String clear = ""test"";"
147875,./TargetProjects/juddi/juddi-client/src/test/java/org/apache/juddi/v3/client/mapping/SelectionTest.java,34,,"		eprs.add(""epr2"");"
147876,./TargetProjects/juddi/juddi-client/src/test/java/org/apache/juddi/v3/client/mapping/SelectionTest.java,52,,"		eprs.add(""localhost:epr1"");"
147877,./TargetProjects/juddi/juddi-client/src/test/java/org/apache/juddi/v3/client/mapping/SelectionTest.java,70,,"		eprs.add(""host2:epr2"");"
147878,./TargetProjects/juddi/juddi-client/src/test/java/org/apache/juddi/v3/client/mapping/wsdl/BPEL2UDDITest.java,76,,"	    @SuppressWarnings(""unchecked"")"
147879,./TargetProjects/juddi/juddi-client/src/test/java/org/apache/juddi/v3/client/mapping/wsdl/BPEL2UDDITest.java,127,,"		Definition wsdlDefinition = rw.readWSDL(""bpel/HelloWorld.wsdl"");"
147880,./TargetProjects/juddi/juddi-client/src/test/java/org/apache/juddi/v3/client/mapping/wsdl/WSDLLocatorTest.java,33,,"		URL url = wsdlLocatorImpl.constructImportUrl(null, ""http://localhost/file.wsdl"");"
147881,./TargetProjects/juddi/juddi-client/src/test/java/org/apache/juddi/v3/client/mapping/wsdl/WSDLLocatorTest.java,47,,"		URL wsdlFile = ClassUtil.getResource(""wsdl/HelloWorld.wsdl"", this.getClass());"
147882,./TargetProjects/juddi/juddi-client/src/test/java/org/apache/juddi/v3/client/mapping/wsdl/WSDLLocatorTest.java,48,,"		if (wsdlFile==null) Assert.fail(""Can not find HelloWorld.wsdl file"");"
147883,./TargetProjects/juddi/juddi-client/src/test/java/org/apache/juddi/v3/client/mapping/wsdl/WSDLLocatorTest.java,52,,"		Assert.assertEquals(wsdlDir + ""/child.wsdl"", url.toExternalForm());"
147884,./TargetProjects/juddi/juddi-client/src/test/java/org/apache/juddi/v3/client/subscription/SubscriptionCallbackTest.java,42,,"        UDDIClient c = new UDDIClient(""META-INF/uddi-subcallback1.xml"");"
147885,./TargetProjects/juddi/juddi-client/src/test/java/org/apache/juddi/v3/client/subscription/SubscriptionCallbackTest.java,44,,"        UDDIClerk clerk = c.getClerk(""default"");"
147886,./TargetProjects/juddi/juddi-client/src/test/java/org/apache/juddi/v3/client/subscription/SubscriptionCallbackTest.java,163,,"        log.log(Level.INFO, ""AP url: {0} EP url: {1}"", new Object[]{start.getAccessPoint().getValue(), SubscriptionCallbackListener.getCallbackURL()});"
147887,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/api/impl/AuthenticatedService.java,119,,"                                throw new AuthTokenRequiredException(new ErrorMessage(""errors.auth.AuthInvalid""));"
147888,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/api/impl/JUDDIApiImpl.java,1183,,"                                throw new UserMismatchException(new ErrorMessage(""errors.AdminReqd""));"
147889,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/api/impl/UDDIPublicationImpl.java,148,,"                                                        existingPubAssertion.setFromCheck(""true"");"
147890,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/api/impl/UDDIPublicationImpl.java,159,,"                                                changes.add(getChangeRecord_deletePublisherAssertion(apiPubAssertion, getNode(), existingPubAssertion.getToCheck().equalsIgnoreCase(""false""), existingPubAssertion.getFromCheck().equalsIgnoreCase(""false""), System.currentTimeMillis()));"
147891,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/api/impl/UDDIPublicationImpl.java,1114,,"                        throw new FatalErrorException(new ErrorMessage(""errors.configuration.Retrieval"", Property.JUDDI_NODE_ID));"
147892,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/api/impl/UDDIPublicationImpl.java,1268,,"                        cr.setContents(sw.toString().getBytes(""UTF8""));"
147893,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/api/impl/UDDIReplicationImpl.java,334,,"                                createQuery.setParameter(""node"", rec.getChangeID().getNodeID());"
147894,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/api/impl/UDDIReplicationImpl.java,607,,"                                                        model.setFromCheck(""true"");"
147895,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/api/impl/UDDIReplicationImpl.java,609,,"                                                        model.setFromCheck(""false"");"
147896,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/api/impl/UDDIReplicationImpl.java,1056,,"                                                createQuery = em.createQuery(""select e from ChangeRecord e where """
147897,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/api/impl/UDDISecurityImpl.java,90,,"                                logger.info(""AUDIT: AuthToken discarded for "" + modelAuthToken.getAuthorizedName() + "" from "" + getRequestorsIPAddress());"
147898,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/api/impl/UDDIServiceCounter.java,188,,"            throw new RuntimeException(""Exception in Update : "" + queryObject.getQuery() "
147899,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/api/impl/UDDIServiceCounter.java,189,,"                    + "" time "" + procTime + "" queryprocessingtime.size() + """
147900,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/api/impl/UDDIServiceCounter.java,312,,"                TOTAL_API_QUERIES, ""java.lang.Integer"", ""Property "" + TOTAL_API_QUERIES,"
147901,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/api/impl/UDDIServiceCounter.java,312,,"                TOTAL_API_QUERIES, ""java.lang.Integer"", ""Property "" + TOTAL_API_QUERIES,"
147902,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/api/impl/UDDIValueSetValidationImpl.java,150,,"                        throw new FatalErrorException(new ErrorMessage(""errors.valuesetvalidation.fatal"", drfm.getMessage()));"
147903,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/api/impl/XRegisterHelper.java,58,,"						log.debug(""Found business with key "" +  existingBusinessEntity.getBusinessKey() + "". No need to add it again"");"
147904,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/api/impl/XRegisterHelper.java,61,,"								+ "", going to add it in."");"
147905,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/config/Install.java,116,,"                        TModel rootTModelKeyGen = (TModel) buildInstallEntity(fileRootTModelKeygen, ""org.uddi.api_v3"", config);"
147906,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/config/Install.java,249,,"                        throw new InvalidKeyPassedException(new ErrorMessage(""errors.invalidkey.MalformedKey"", result));"
147907,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/config/Install.java,286,,"                                throw new KeyUnavailableException(new ErrorMessage(""errors.keyunavailable.BadPartition"", userNodeId));"
147908,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/config/Install.java,788,,"                        op.setOperatorNodeID(op.getOperatorNodeID().replace(""${juddi.nodeId}"", thisnode));"
147909,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/mapping/MappingModelToApi.java,247,,"                                        JAXBElement dataJAXB = new JAXBElement(new QName(""http://www.w3.org/2000/09/xmldsig#"", tagName), X509DataType.class, x509DataType);"
147910,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/mapping/MappingModelToApi.java,418,,"                                        logger.warn(""Token '"" + Property.JUDDI_BASE_URL + ""' not found in the juddiv3.xml, defaulting to '"""
147911,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/mapping/MappingModelToApi.java,418,,"                                        logger.warn(""Token '"" + Property.JUDDI_BASE_URL + ""' not found in the juddiv3.xml, defaulting to '"""
147912,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/mapping/MappingModelToApi.java,422,,"                                discoveryURL = discoveryURL.replaceAll(""\\$\\{"" + Property.JUDDI_BASE_URL + ""\\}"", baseUrl);"
147913,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/mapping/MappingModelToApi.java,422,,"                                discoveryURL = discoveryURL.replaceAll(""\\$\\{"" + Property.JUDDI_BASE_URL + ""\\}"", baseUrl);"
147914,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/mapping/MappingModelToApi.java,1046,,"                if (""true"".equalsIgnoreCase(modelPublisherAssertion.getFromCheck())"
147915,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/model/BindingTemplate.java,110,,"	@OneToOne(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = ""bindingTemplate"")"
147916,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/model/BusinessEntity.java,82,,"	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = ""businessEntity"")"
147917,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/model/BusinessService.java,79,,"	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = ""businessService"")"
147918,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/model/Contact.java,107,,"	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = ""contact"")"
147919,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/model/Tmodel.java,100,,"	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = ""tmodel"")"
147920,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/model/UddiEntityPublisher.java,83,,"		DynamicQuery.Parameter keyParam = new DynamicQuery.Parameter(""UPPER(t.entityKey)"", "
147921,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/query/FindBusinessByTModelKeyQuery.java,135,,"						thetaJoins.append(entityAliasChild + (tblCount - 1) + ""."" + BindingTemplateQuery.ENTITY_FIELD + ""."" + BindingTemplateQuery.KEY_NAME + "" = "" + entityAliasChild + tblCount + ""."" + BindingTemplateQuery.ENTITY_FIELD + ""."" + BindingTemplateQuery.KEY_NAME + "" "");"
147922,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/query/FindPublisherAssertionByBusinessQuery.java,75,,"				qry.appendGroupedAnd(new DynamicQuery.Parameter(fromCheckTerm, ""TRUE"", DynamicQuery.PREDICATE_NOTEQUALS));"
147923,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/subscription/notify/SMTPNotifier.java,75,,"		""mail.smtp.socketFactory.port"",""mail.smtp.auth"",""mail.smtp.user"",""mail.smtp.password"",""mail.debug""};"
147924,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/subscription/notify/SMTPNotifier.java,75,,"		""mail.smtp.socketFactory.port"",""mail.smtp.auth"",""mail.smtp.user"",""mail.smtp.password"",""mail.debug""};"
147925,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/subscription/notify/SMTPNotifier.java,115,,"						log.error(""Unable to decrypt settings"",ex);"
147926,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/subscription/notify/USERFRIENDLYSMTPNotifier.java,98,,"                        boolean auth = (properties.getProperty(""mail.smtp.auth"", ""false"")).equalsIgnoreCase(""true"");"
147927,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/subscription/notify/USERFRIENDLYSMTPNotifier.java,98,,"                        boolean auth = (properties.getProperty(""mail.smtp.auth"", ""false"")).equalsIgnoreCase(""true"");"
147928,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/subscription/notify/USERFRIENDLYSMTPNotifier.java,100,,"                                final String username = properties.getProperty(""mail.smtp.user"");"
147929,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/subscription/notify/USERFRIENDLYSMTPNotifier.java,101,,"                                String pwd = properties.getProperty(""mail.smtp.password"");"
147930,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/subscription/notify/USERFRIENDLYSMTPNotifier.java,107,,"                                                log.error(""Unable to decrypt settings"", ex);"
147931,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/subscription/notify/USERFRIENDLYSMTPNotifier.java,141,,"                        message.setFrom(new InternetAddress(properties.getProperty(""mail.smtp.from"", ""jUDDI"")));"
147932,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/subscription/notify/USERFRIENDLYSMTPNotifier.java,141,,"                        message.setFrom(new InternetAddress(properties.getProperty(""mail.smtp.from"", ""jUDDI"")));"
147933,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/subscription/notify/USERFRIENDLYSMTPNotifier.java,160,,"                                AppConfig.getConfiguration().getString(Property.JUDDI_BASE_URL, ""(unknown url)""),"
147934,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/subscription/notify/USERFRIENDLYSMTPNotifier.java,178,,"                        log.warn(""Error sending email!"" + t.getMessage());"
147935,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/v3/auth/LdapExpandedAuthenticator.java,114,,"            throw new UnknownUserException(new ErrorMessage(""errors.auth.NoPublisher"", authorizedName));"
147936,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/v3/auth/LdapSimpleAuthenticator.java,120,,"            throw new UnknownUserException(new ErrorMessage(""errors.auth.NoPublisher"", authorizedName));"
147937,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/ValidateClientSubscriptionInfo.java,57,,"			throw new FatalErrorException(new ErrorMessage(""errors.NullInput""));"
147938,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/ValidateInquiry.java,77,,"                        throw new FatalErrorException(new ErrorMessage(""errors.NullInput""));"
147939,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/ValidateInquiry.java,83,,"                        throw new InvalidKeyPassedException(new ErrorMessage(""errors.invalidkey.NoKeys""));"
147940,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/ValidateInquiry.java,96,,"                                throw new InvalidKeyPassedException(new ErrorMessage(""errors.invalidkey.DuplicateKey"", entityKey));"
147941,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/ValidateInquiry.java,506,,"                                        throw new InvalidCombinationException(new ErrorMessage(""errors.findqualifiers.InvalidCombo"", fq + "" & "" + FindQualifiers.OR_ALL_KEYS));"
147942,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/ValidateInquiry.java,506,,"                                        throw new InvalidCombinationException(new ErrorMessage(""errors.findqualifiers.InvalidCombo"", fq + "" & "" + FindQualifiers.OR_ALL_KEYS));"
147943,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/ValidatePublish.java,137,,"                        throw new FatalErrorException(new ErrorMessage(""errors.NullInput""));"
147944,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/ValidatePublish.java,143,,"                        throw new InvalidKeyPassedException(new ErrorMessage(""errors.invalidkey.NoKeys""));"
147945,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/ValidatePublish.java,156,,"                                throw new InvalidKeyPassedException(new ErrorMessage(""errors.invalidkey.DuplicateKey"", entityKey));"
147946,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/ValidatePublish.java,362,,"                                log.error(""Could not optain config. "" + ce.getMessage(), ce);"
147947,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/ValidatePublish.java,614,,"                        throw new ValueNotAllowedException(new ErrorMessage(""errors.entity.SignedButNoKey"", ""businessKey""));"
147948,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/ValidatePublish.java,713,,"                                        throw new KeyUnavailableException(new ErrorMessage(""errors.keyunavailable.BadPartition"", entityKey));"
147949,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/ValidatePublish.java,722,,"                                throw new KeyUnavailableException(new ErrorMessage(""errors.keyunavailable.KeyExists"", entityKey));"
147950,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/ValidatePublish.java,872,,"                                        throw new InvalidKeyPassedException(new ErrorMessage(""errors.invalidkey.ParentBusinessNotFound"", parentKey));"
147951,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/ValidatePublish.java,1385,,"                        log.warn(""Error caught reading "" + Property.JUDDI_ENFORCE_REFERENTIAL_INTEGRITY + "" from config file"", ex);"
147952,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/ValidatePublish.java,1385,,"                        log.warn(""Error caught reading "" + Property.JUDDI_ENFORCE_REFERENTIAL_INTEGRITY + "" from config file"", ex);"
147953,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/ValidatePublish.java,1580,,"                        throw new UserMismatchException(new ErrorMessage(""errors.deletepublisher.AdminReqd""));"
147954,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/ValidatePublish.java,2176,,"                log.debug(""looking for key="" + key + "" from tModel "" + ref.getTModelKey());"
147955,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/ValidatePublish.java,2506,,"                                throw new FatalErrorException(new ErrorMessage(""errors.digitalsignature.validationfailure"", bindingTemplate.getBindingKey() + "" "" + outmsg.get()));"
147956,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/ValidatePublisher.java,58,,"			throw new FatalErrorException(new ErrorMessage(""errors.NullInput""));"
147957,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/ValidateReplication.java,152,,"                        throw new InvalidValueException(new ErrorMessage(""errors.replication.contactNull""));"
147958,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/ValidateReplication.java,180,,"                                        throw new InvalidValueException(new ErrorMessage(""errors.replication.configNodeNotFound""));"
147959,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/ValidateReplication.java,288,,"                        throw new TransferNotAllowedException(new ErrorMessage(""errors.NullInput""));"
147960,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/ValidateUDDIKey.java,45,,"			throw new InvalidKeyPassedException(new ErrorMessage(""errors.invalidkey.MalformedKey"", key));"
147961,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/ValidateValuesFromWebService.java,102,,"                        ValueNotAllowedException x = new ValueNotAllowedException(new ErrorMessage(""errors.valuesetvalidation.invalidcontent"", ex.getMessage()));"
147962,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/vsv/AbstractSimpleValidator.java,52,,"                                validatedValuesKeyRef(items.get(i).getCategoryBag().getKeyedReference(), xpath + ""bindingTemplate("" + i + "").categoryBag."");"
147963,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/vsv/AbstractSimpleValidator.java,69,,"                                validatedValuesKeyRef(items.get(i).getCategoryBag().getKeyedReference(), ""businessEntity("" + i + "").categoryBag."");"
147964,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/vsv/Uddiuddiorgcategorizationderivedfrom.java,94,,"                                                        throw new InvalidValueException(new ErrorMessage(""errors.valuesetvalidation.invalidcontent"", ""not allowed on binding templates""));"
147965,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/vsv/Uddiuddiorgcategorizationowningbusiness.java,76,,"                                                        throw new InvalidValueException(new ErrorMessage(""errors.valuesetvalidation.invalidcontent"", ""not allowed on binding templates""));"
147966,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/vsv/Uddiuddiorgcategorizationtypes.java,898,,"                                                        throw new InvalidValueException(new ErrorMessage(""errors.valuesetvalidation.invalidcontent"", xpath+""("" + i + "").catbag.keyedReferences("" +k +"").tModelKey "" + ""Value ["" + items.get(i).getCategoryBag().getKeyedReference().get(k).getTModelKey() + ""] not allowed on bindingtemplates for key "" + key));"
147967,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/vsv/Uddiuddiorgcategorizationtypes.java,898,,"                                                        throw new InvalidValueException(new ErrorMessage(""errors.valuesetvalidation.invalidcontent"", xpath+""("" + i + "").catbag.keyedReferences("" +k +"").tModelKey "" + ""Value ["" + items.get(i).getCategoryBag().getKeyedReference().get(k).getTModelKey() + ""] not allowed on bindingtemplates for key "" + key));"
147968,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/vsv/Uddiuddiorgidentifierisreplacedby.java,193,,"                                                        throw new InvalidValueException(new ErrorMessage(""errors.valuesetvalidation.invalidcontent"", ""not allowed on binding templates""));"
147969,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/vsv/Uddiuddiorgidentifierisreplacedby.java,217,,"                                                                throw new InvalidValueException(new ErrorMessage(""errors.valuesetvalidation.invalidcontent"", ""Referenced key "" + items.get(i).getCategoryBag().getKeyedReference().get(k).getKeyValue() + "" can't reference itself""));"
147970,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/vsv/Uddiuddiorgidentifierisreplacedby.java,217,,"                                                                throw new InvalidValueException(new ErrorMessage(""errors.valuesetvalidation.invalidcontent"", ""Referenced key "" + items.get(i).getCategoryBag().getKeyedReference().get(k).getKeyValue() + "" can't reference itself""));"
147971,./TargetProjects/juddi/juddi-core/src/main/java/org/apache/juddi/validation/vsv/Uddiuddiorgidentifierisreplacedby.java,225,,"                                                                                throw new InvalidValueException(new ErrorMessage(""errors.valuesetvalidation.invalidcontent"", ""Referenced key "" + items.get(i).getCategoryBag().getKeyedReference().get(k).getKeyValue() + "" does not exist""));"
147972,./TargetProjects/juddi/juddi-core/src/test/java/org/apache/juddi/api/impl/API_090_SubscriptionListenerIntegrationTest.java,101,,"                        System.setProperty(Property.DEFAULT_JUDDI_EMAIL_PREFIX + ""mail.smtp.host"", ""localhost"");"
147973,./TargetProjects/juddi/juddi-core/src/test/java/org/apache/juddi/api/impl/API_090_SubscriptionListenerIntegrationTest.java,159,,"                        logger.error(""No exceptions please."");"
147974,./TargetProjects/juddi/juddi-core/src/test/java/org/apache/juddi/api/impl/API_100_ClientSubscriptionInfoTest.java,81,,"		node.setSecurityUrl(""http://localhost:8080/services/securityUrl"");"
147975,./TargetProjects/juddi/juddi-core/src/test/java/org/apache/juddi/api/impl/API_100_ClientSubscriptionInfoTest.java,106,,"		node2.setSecurityUrl(""http://localhost:8080/services/securityUrl2"");"
147976,./TargetProjects/juddi/juddi-core/src/test/java/org/apache/juddi/api/impl/API_100_ClientSubscriptionInfoTest.java,126,,"		clientSubscriptionInfo.setSubscriptionKey(""mykey"");"
147977,./TargetProjects/juddi/juddi-core/src/test/java/org/apache/juddi/api/impl/API_120_CombineCategoryBagsFindServiceTest.java,135,,"                    Assert.fail(""Should have found one entry on FindService with TModelBag, """
147978,./TargetProjects/juddi/juddi-core/src/test/java/org/apache/juddi/api/impl/API_120_CombineCategoryBagsFindServiceTest.java,136,,"                       + ""found "" + size);"
147979,./TargetProjects/juddi/juddi-core/src/test/java/org/apache/juddi/api/impl/API_130_CombineCategoryBagsFindBusinessTest.java,134,,"					Assert.fail(""Should have found one entry on FindBusiness with TModelBag, """
147980,./TargetProjects/juddi/juddi-core/src/test/java/org/apache/juddi/api/impl/API_130_CombineCategoryBagsFindBusinessTest.java,135,,"							+ ""found "" + size);"
147981,./TargetProjects/juddi/juddi-core/src/test/java/org/apache/juddi/api/impl/API_140_NegativePublicationTest.java,168,,"            Assert.fail(""request should have been rejected"");"
147982,./TargetProjects/juddi/juddi-core/src/test/java/org/apache/juddi/api/impl/API_140_NegativePublicationTest.java,266,,"        n.setValue(""A Test business"");"
147983,./TargetProjects/juddi/juddi-core/src/test/java/org/apache/juddi/api/impl/API_140_NegativePublicationTest.java,536,,"        n.setValue(""Bob"");"
147984,./TargetProjects/juddi/juddi-core/src/test/java/org/apache/juddi/api/impl/API_140_NegativePublicationTest.java,2121,,"        kr.setTModelKey(""uddi:uddi.org:categorization:types"");"
147985,./TargetProjects/juddi/juddi-core/src/test/java/org/apache/juddi/api/impl/API_140_NegativePublicationTest.java,2122,,"        kr.setKeyName(""uddi-org:keyGenerator"");"
147986,./TargetProjects/juddi/juddi-core/src/test/java/org/apache/juddi/api/impl/API_140_NegativePublicationTest.java,2123,,"        kr.setKeyValue(""keyGenerator"");"
147987,./TargetProjects/juddi/juddi-core/src/test/java/org/apache/juddi/api/impl/API_140_NegativePublicationTest.java,2128,,"        @SuppressWarnings(""unused"")"
147988,./TargetProjects/juddi/juddi-core/src/test/java/org/apache/juddi/api/impl/API_140_NegativePublicationTest.java,2344,,"                System.out.println(""Name: "" + contacts.getContact().get(i).getPersonName().get(k).getValue());"
147989,./TargetProjects/juddi/juddi-core/src/test/java/org/apache/juddi/api/impl/API_141_JIRATest.java,189,,"            Assert.fail(""unexpected failure"");"
147990,./TargetProjects/juddi/juddi-core/src/test/java/org/apache/juddi/api/impl/API_141_JIRATest.java,242,,"            failuremsg += ""Lang defined, "" + found1 + "" records found instead of 1"";"
147991,./TargetProjects/juddi/juddi-core/src/test/java/org/apache/juddi/api/impl/API_141_JIRATest.java,250,,"        System.out.println(""Pass"");"
147992,./TargetProjects/juddi/juddi-core/src/test/java/org/apache/juddi/api/impl/API_141_JIRATest.java,582,,"                System.out.println(""Name: "" + contacts.getContact().get(i).getPersonName().get(k).getValue());"
147993,./TargetProjects/juddi/juddi-core/src/test/java/org/apache/juddi/api/impl/API_141_JIRATest.java,736,,"            Assert.fail(""unexpected success"");"
147994,./TargetProjects/juddi/juddi-core/src/test/java/org/apache/juddi/api/impl/API_141_JIRATest.java,738,,"            logger.info(""Expected failure: "" + ex.getMessage());"
147995,./TargetProjects/juddi/juddi-core/src/test/java/org/apache/juddi/api/impl/API_141_JIRATest.java,754,,"        bs.getName().add(new Name(""Joe's bs"", null));"
147996,./TargetProjects/juddi/juddi-core/src/test/java/org/apache/juddi/api/impl/API_141_JIRATest.java,951,,"            logger.info(""UnExpected failure: "", ex);"
147997,./TargetProjects/juddi/juddi-core/src/test/java/org/apache/juddi/api/impl/API_141_JIRATest.java,1003,,"        bt.setAccessPoint(new AccessPoint(""http://localhost"", ""wsdl""));"
147998,./TargetProjects/juddi/juddi-core/src/test/java/org/apache/juddi/api/impl/API_141_JIRATest.java,1003,,"        bt.setAccessPoint(new AccessPoint(""http://localhost"", ""wsdl""));"
147999,./TargetProjects/juddi/juddi-core/src/test/java/org/apache/juddi/api/impl/API_150_ValueSetValidationTest.java,108,,"        final static String TMODEL = ""uddi:uddi.org:categorization:nodes"";"
