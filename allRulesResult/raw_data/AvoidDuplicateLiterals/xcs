70000,./TargetProjects/druid/extensions-contrib/influx-extensions/src/test/java/org/apache/druid/data/input/influx/InfluxParserTest.java,70,,"            Parsed.row(""foo"", -123L)"
70001,./TargetProjects/druid/extensions-contrib/influx-extensions/src/test/java/org/apache/druid/data/input/influx/InfluxParserTest.java,72,,"                  .with(""host"", ""127.0.0.1"")"
70002,./TargetProjects/druid/extensions-contrib/influxdb-emitter/src/test/java/org/apache/druid/emitter/influxdb/InfluxdbEmitterConfigTest.java,48,,"        ""localhost"","
70003,./TargetProjects/druid/extensions-contrib/influxdb-emitter/src/test/java/org/apache/druid/emitter/influxdb/InfluxdbEmitterConfigTest.java,54,,"        ""dbname"","
70004,./TargetProjects/druid/extensions-contrib/influxdb-emitter/src/test/java/org/apache/druid/emitter/influxdb/InfluxdbEmitterConfigTest.java,58,,"        ""adam"","
70005,./TargetProjects/druid/extensions-contrib/influxdb-emitter/src/test/java/org/apache/druid/emitter/influxdb/InfluxdbEmitterConfigTest.java,59,,"        ""password"","
70006,./TargetProjects/druid/extensions-contrib/influxdb-emitter/src/test/java/org/apache/druid/emitter/influxdb/InfluxdbEmitterTest.java,49,,"        ""service"","
70007,./TargetProjects/druid/extensions-contrib/influxdb-emitter/src/test/java/org/apache/druid/emitter/influxdb/InfluxdbEmitterTest.java,50,,"        ""druid/historical"","
70008,./TargetProjects/druid/extensions-contrib/influxdb-emitter/src/test/java/org/apache/druid/emitter/influxdb/InfluxdbEmitterTest.java,51,,"        ""host"","
70009,./TargetProjects/druid/extensions-contrib/influxdb-emitter/src/test/java/org/apache/druid/emitter/influxdb/InfluxdbEmitterTest.java,52,,"        ""localhost"","
70010,./TargetProjects/druid/extensions-contrib/influxdb-emitter/src/test/java/org/apache/druid/emitter/influxdb/InfluxdbEmitterTest.java,53,,"        ""version"","
70011,./TargetProjects/druid/extensions-contrib/influxdb-emitter/src/test/java/org/apache/druid/emitter/influxdb/InfluxdbEmitterTest.java,54,,"        ""0.10.0"""
70012,./TargetProjects/druid/extensions-contrib/influxdb-emitter/src/test/java/org/apache/druid/emitter/influxdb/InfluxdbEmitterTest.java,58,,"    builder.setDimension(""dataSource"", ""test_datasource"");"
70013,./TargetProjects/druid/extensions-contrib/influxdb-emitter/src/test/java/org/apache/druid/emitter/influxdb/InfluxdbEmitterTest.java,73,,"        ""dbname"","
70014,./TargetProjects/druid/extensions-contrib/influxdb-emitter/src/test/java/org/apache/druid/emitter/influxdb/InfluxdbEmitterTest.java,77,,"        ""adam"","
70015,./TargetProjects/druid/extensions-contrib/influxdb-emitter/src/test/java/org/apache/druid/emitter/influxdb/InfluxdbEmitterTest.java,78,,"        ""password"","
70016,./TargetProjects/druid/extensions-contrib/influxdb-emitter/src/test/java/org/apache/druid/emitter/influxdb/InfluxdbEmitterTest.java,237,,"        ""https"","
70017,./TargetProjects/druid/extensions-contrib/materialized-view-maintenance/src/test/java/org/apache/druid/indexing/materializedview/MaterializedViewSupervisorSpecTest.java,102,,"                           ""        {\n"" +"
70018,./TargetProjects/druid/extensions-contrib/materialized-view-maintenance/src/test/java/org/apache/druid/indexing/materializedview/MaterializedViewSupervisorSpecTest.java,120,,"                new StringDimensionSchema(""isUnpatrolled""),"
70019,./TargetProjects/druid/extensions-contrib/materialized-view-maintenance/src/test/java/org/apache/druid/indexing/materializedview/MaterializedViewSupervisorSpecTest.java,121,,"                new StringDimensionSchema(""metroCode""),"
70020,./TargetProjects/druid/extensions-contrib/materialized-view-maintenance/src/test/java/org/apache/druid/indexing/materializedview/MaterializedViewSupervisorSpecTest.java,122,,"                new StringDimensionSchema(""namespace""),"
70021,./TargetProjects/druid/extensions-contrib/materialized-view-maintenance/src/test/java/org/apache/druid/indexing/materializedview/MaterializedViewSupervisorSpecTest.java,123,,"                new StringDimensionSchema(""page""),"
70022,./TargetProjects/druid/extensions-contrib/materialized-view-maintenance/src/test/java/org/apache/druid/indexing/materializedview/MaterializedViewSupervisorSpecTest.java,124,,"                new StringDimensionSchema(""regionIsoCode""),"
70023,./TargetProjects/druid/extensions-contrib/materialized-view-maintenance/src/test/java/org/apache/druid/indexing/materializedview/MaterializedViewSupervisorSpecTest.java,125,,"                new StringDimensionSchema(""regionName""),"
70024,./TargetProjects/druid/extensions-contrib/materialized-view-maintenance/src/test/java/org/apache/druid/indexing/materializedview/MaterializedViewSupervisorSpecTest.java,126,,"                new StringDimensionSchema(""user"")"
70025,./TargetProjects/druid/extensions-contrib/materialized-view-maintenance/src/test/java/org/apache/druid/indexing/materializedview/MaterializedViewSupervisorSpecTest.java,132,,"            new CountAggregatorFactory(""count""),"
70026,./TargetProjects/druid/extensions-contrib/materialized-view-maintenance/src/test/java/org/apache/druid/indexing/materializedview/MaterializedViewSupervisorSpecTest.java,133,,"            new LongSumAggregatorFactory(""added"", ""added"")"
70027,./TargetProjects/druid/extensions-contrib/materialized-view-maintenance/src/test/java/org/apache/druid/indexing/materializedview/MaterializedViewSupervisorTest.java,108,,"        ""base"","
70028,./TargetProjects/druid/extensions-contrib/materialized-view-maintenance/src/test/java/org/apache/druid/indexing/materializedview/MaterializedViewSupervisorTest.java,139,,"            Intervals.of(""2015-01-01T00Z/2015-01-02T00Z""),"
70029,./TargetProjects/druid/extensions-contrib/materialized-view-maintenance/src/test/java/org/apache/druid/indexing/materializedview/MaterializedViewSupervisorTest.java,142,,"            ImmutableList.of(""dim1"", ""dim2""),"
70030,./TargetProjects/druid/extensions-contrib/materialized-view-maintenance/src/test/java/org/apache/druid/indexing/materializedview/MaterializedViewSupervisorTest.java,142,,"            ImmutableList.of(""dim1"", ""dim2""),"
70031,./TargetProjects/druid/extensions-contrib/materialized-view-maintenance/src/test/java/org/apache/druid/indexing/materializedview/MaterializedViewSupervisorTest.java,150,,"            Intervals.of(""2015-01-02T00Z/2015-01-03T00Z""),"
70032,./TargetProjects/druid/extensions-contrib/materialized-view-maintenance/src/test/java/org/apache/druid/indexing/materializedview/MaterializedViewSupervisorTest.java,151,,"            ""2015-01-03"","
70033,./TargetProjects/druid/extensions-contrib/materialized-view-selection/src/test/java/org/apache/druid/query/materializedview/DatasourceOptimizerTest.java,140,,"    String baseDataSource = ""base"";"
70034,./TargetProjects/druid/extensions-contrib/materialized-view-selection/src/test/java/org/apache/druid/query/materializedview/DatasourceOptimizerTest.java,141,,"    Set<String> dims = Sets.newHashSet(""dim1"", ""dim2"", ""dim3"");"
70035,./TargetProjects/druid/extensions-contrib/materialized-view-selection/src/test/java/org/apache/druid/query/materializedview/DatasourceOptimizerTest.java,142,,"    Set<String> metrics = Sets.newHashSet(""cost"");"
70036,./TargetProjects/druid/extensions-contrib/materialized-view-selection/src/test/java/org/apache/druid/query/materializedview/MaterializedViewQueryQueryToolChestTest.java,112,,"        .setDimensions(new DefaultDimensionSpec(""quality"", ""alias""))"
70037,./TargetProjects/druid/extensions-contrib/materialized-view-selection/src/test/java/org/apache/druid/query/materializedview/MaterializedViewQueryQueryToolChestTest.java,115,,"            new LongSumAggregatorFactory(""idx"", ""index"")"
70038,./TargetProjects/druid/extensions-contrib/materialized-view-selection/src/test/java/org/apache/druid/query/materializedview/MaterializedViewQueryQueryToolChestTest.java,133,,"            ""2011-04-01"","
70039,./TargetProjects/druid/extensions-contrib/materialized-view-selection/src/test/java/org/apache/druid/query/materializedview/MaterializedViewQueryQueryToolChestTest.java,136,,"            ""rows"","
70040,./TargetProjects/druid/extensions-contrib/materialized-view-selection/src/test/java/org/apache/druid/query/materializedview/MaterializedViewUtilsTest.java,66,,"        ""  ],\n"" +"
70041,./TargetProjects/druid/extensions-contrib/materialized-view-selection/src/test/java/org/apache/druid/query/materializedview/MaterializedViewUtilsTest.java,75,,"        ""    }\n"" +"
70042,./TargetProjects/druid/extensions-contrib/momentsketch/src/test/java/org/apache/druid/query/aggregation/momentsketch/aggregator/MomentSketchAggregatorFactoryTest.java,64,,"                  new MomentSketchAggregatorFactory(""moment"", ""col"", null, null),"
70043,./TargetProjects/druid/extensions-contrib/momentsketch/src/test/java/org/apache/druid/query/aggregation/momentsketch/aggregator/MomentSketchAggregatorFactoryTest.java,65,,"                  new MomentSketchMergeAggregatorFactory(""momentMerge"", null, null)"
70044,./TargetProjects/druid/extensions-contrib/moving-average-query/src/main/java/org/apache/druid/query/movingaverage/AveragerFactoryWrapper.java,69,,"    throw new UnsupportedOperationException(""Invalid operation for AveragerFactoryWrapper."");"
70045,./TargetProjects/druid/extensions-contrib/moving-average-query/src/test/java/org/apache/druid/query/movingaverage/MovingAverageIterableTest.java,61,,"  private static final String GENDER = ""gender"";"
70046,./TargetProjects/druid/extensions-contrib/moving-average-query/src/test/java/org/apache/druid/query/movingaverage/MovingAverageIterableTest.java,181,,"    event1.put(""pageViews"", 10L);"
70047,./TargetProjects/druid/extensions-contrib/moving-average-query/src/test/java/org/apache/druid/query/movingaverage/MovingAverageIterableTest.java,209,,"            new LongMeanAveragerFactory(""movingAvgPageViews"", 7, 1, ""pageViews"")"
70048,./TargetProjects/druid/extensions-contrib/moving-average-query/src/test/java/org/apache/druid/query/movingaverage/PostAveragerAggregatorCalculatorTest.java,64,,"        Collections.singletonList(new CountAggregatorFactory(""count"")),"
70049,./TargetProjects/druid/extensions-contrib/moving-average-query/src/test/java/org/apache/druid/query/movingaverage/PostAveragerAggregatorCalculatorTest.java,67,,"        Collections.singletonList(new DoubleMeanAveragerFactory(""avgCount"", 7, 1, ""count"")),"
70050,./TargetProjects/druid/extensions-contrib/moving-average-query/src/test/java/org/apache/druid/query/movingaverage/PostAveragerAggregatorCalculatorTest.java,69,,"            ""avgCountRatio"","
70051,./TargetProjects/druid/extensions-contrib/moving-average-query/src/test/java/org/apache/druid/query/movingaverage/averagers/BaseAveragerTest.java,47,,"    BaseAverager<Integer, Integer> avg = new TestAverager(Integer.class, 5, ""test"", ""field"", 1);"
70052,./TargetProjects/druid/extensions-contrib/moving-average-query/src/test/java/org/apache/druid/query/movingaverage/averagers/BaseAveragerTest.java,47,,"    BaseAverager<Integer, Integer> avg = new TestAverager(Integer.class, 5, ""test"", ""field"", 1);"
70053,./TargetProjects/druid/extensions-contrib/moving-average-query/src/test/java/org/apache/druid/query/movingaverage/averagers/DoubleMaxAveragerTest.java,33,,"    BaseAverager<Number, Double> avg = new DoubleMaxAverager(3, ""test"", ""field"", 1);"
70054,./TargetProjects/druid/extensions-contrib/moving-average-query/src/test/java/org/apache/druid/query/movingaverage/averagers/DoubleMeanAveragerTest.java,33,,"    BaseAverager<Number, Double> avg = new DoubleMeanAverager(3, ""test"", ""field"", 1);"
70055,./TargetProjects/druid/extensions-contrib/moving-average-query/src/test/java/org/apache/druid/query/movingaverage/averagers/DoubleMeanAveragerWithPeriodTest.java,33,,"    BaseAverager<Number, Double> averager = new DoubleMeanAverager(14, ""test"", ""field"", 7);"
70056,./TargetProjects/druid/extensions-contrib/moving-average-query/src/test/java/org/apache/druid/query/movingaverage/averagers/DoubleMeanNoNullAveragerTest.java,33,,"    BaseAverager<Number, Double> avg = new DoubleMeanNoNullAverager(3, ""test"", ""field"", 1);"
70057,./TargetProjects/druid/extensions-contrib/moving-average-query/src/test/java/org/apache/druid/query/movingaverage/averagers/DoubleMinAveragerTest.java,33,,"    BaseAverager<Number, Double> avg = new DoubleMinAverager(3, ""test"", ""field"", 1);"
70058,./TargetProjects/druid/extensions-contrib/moving-average-query/src/test/java/org/apache/druid/query/movingaverage/averagers/DoubleSumAveragerTest.java,34,,"    BaseAverager<Number, Double> avg = new DoubleSumAverager(3, ""test"", ""field"", 1);"
70059,./TargetProjects/druid/extensions-contrib/moving-average-query/src/test/java/org/apache/druid/query/movingaverage/averagers/LongMaxAveragerTest.java,33,,"    BaseAverager<Number, Long> avg = new LongMaxAverager(3, ""test"", ""field"", 1);"
70060,./TargetProjects/druid/extensions-contrib/moving-average-query/src/test/java/org/apache/druid/query/movingaverage/averagers/LongMeanAveragerTest.java,33,,"    BaseAverager<Number, Double> avg = new LongMeanAverager(3, ""test"", ""field"", 1);"
70061,./TargetProjects/druid/extensions-contrib/moving-average-query/src/test/java/org/apache/druid/query/movingaverage/averagers/LongMeanNoNullAveragerTest.java,33,,"    BaseAverager<Number, Double> avg = new LongMeanNoNullAverager(3, ""test"", ""field"", 1);"
70062,./TargetProjects/druid/extensions-contrib/moving-average-query/src/test/java/org/apache/druid/query/movingaverage/averagers/LongMinAveragerTest.java,33,,"    BaseAverager<Number, Long> avg = new LongMinAverager(3, ""test"", ""field"", 1);"
70063,./TargetProjects/druid/extensions-contrib/moving-average-query/src/test/java/org/apache/druid/query/movingaverage/averagers/LongSumAveragerTest.java,33,,"    BaseAverager<Number, Long> avg = new LongSumAverager(3, ""test"", ""field"", 1);"
70064,./TargetProjects/druid/extensions-contrib/opentsdb-emitter/src/test/java/org/apache/druid/emitter/opentsdb/EventConverterTest.java,61,,"        .setDimension(""dataSource"", ""foo:bar"")"
70065,./TargetProjects/druid/extensions-contrib/opentsdb-emitter/src/test/java/org/apache/druid/emitter/opentsdb/EventConverterTest.java,62,,"        .setDimension(""type"", ""groupBy"")"
70066,./TargetProjects/druid/extensions-contrib/opentsdb-emitter/src/test/java/org/apache/druid/emitter/opentsdb/EventConverterTest.java,62,,"        .setDimension(""type"", ""groupBy"")"
70067,./TargetProjects/druid/extensions-contrib/opentsdb-emitter/src/test/java/org/apache/druid/emitter/opentsdb/OpentsdbEmitterConfigTest.java,42,,"    OpentsdbEmitterConfig opentsdbEmitterConfig = new OpentsdbEmitterConfig(""localhost"", 9999, 2000, 2000, 200, 2000, 10000L, null, ""druid"");"
70068,./TargetProjects/druid/extensions-contrib/prometheus-emitter/src/test/java/org/apache/druid/emitter/prometheus/PrometheusEmitterTest.java,67,,"            .setDimension(""taskType"", ""index_parallel"")"
70069,./TargetProjects/druid/extensions-contrib/redis-cache/src/test/java/org/apache/druid/client/cache/RedisCacheConfigTest.java,118,,"    RedisCacheConfig fromJson = mapper.readValue(""{\""expiration\"": 1000,"""
70070,./TargetProjects/druid/extensions-contrib/redis-cache/src/test/java/org/apache/druid/client/cache/RedisCacheConfigTest.java,119,,"                                                 + ""\""cluster\"": {"""
70071,./TargetProjects/druid/extensions-contrib/redis-cache/src/test/java/org/apache/druid/client/cache/RedisStandaloneCacheTest.java,149,,"    Assert.assertNull(cache.get(new Cache.NamedKey(""the"", HI)));"
70072,./TargetProjects/druid/extensions-contrib/statsd-emitter/src/test/java/org/apache/druid/emitter/statsd/StatsDEmitterTest.java,42,,"        new StatsDEmitterConfig(""localhost"", 8888, null, null, null, null, null, null, null, null, null),"
70073,./TargetProjects/druid/extensions-contrib/statsd-emitter/src/test/java/org/apache/druid/emitter/statsd/StatsDEmitterTest.java,49,,"                     .setDimension(""dataSource"", ""data-source"")"
70074,./TargetProjects/druid/extensions-contrib/statsd-emitter/src/test/java/org/apache/druid/emitter/statsd/StatsDEmitterTest.java,49,,"                     .setDimension(""dataSource"", ""data-source"")"
70075,./TargetProjects/druid/extensions-contrib/statsd-emitter/src/test/java/org/apache/druid/emitter/statsd/StatsDEmitterTest.java,51,,"                     .build(""broker"", ""brokerHost1"")"
70076,./TargetProjects/druid/extensions-contrib/statsd-emitter/src/test/java/org/apache/druid/emitter/statsd/StatsDEmitterTest.java,51,,"                     .build(""broker"", ""brokerHost1"")"
70077,./TargetProjects/druid/extensions-contrib/statsd-emitter/src/test/java/org/apache/druid/emitter/statsd/StatsDEmitterTest.java,88,,"                     .setDimension(""type"", ""groupBy"")"
70078,./TargetProjects/druid/extensions-contrib/statsd-emitter/src/test/java/org/apache/druid/emitter/statsd/StatsDEmitterTest.java,88,,"                     .setDimension(""type"", ""groupBy"")"
70079,./TargetProjects/druid/extensions-contrib/statsd-emitter/src/test/java/org/apache/druid/emitter/statsd/StatsDEmitterTest.java,97,,"                     .build(DateTimes.nowUtc(), ""query/time"", 10)"
70080,./TargetProjects/druid/extensions-contrib/tdigestsketch/src/test/java/org/apache/druid/query/aggregation/tdigestsketch/TDigestSketchAggregatorFactoryTest.java,46,,"                  new TDigestSketchAggregatorFactory(""tdigest"", ""col"", null)"
70081,./TargetProjects/druid/extensions-contrib/tdigestsketch/src/test/java/org/apache/druid/query/aggregation/tdigestsketch/TDigestSketchAggregatorTest.java,123,,"            ""  ],"","
70082,./TargetProjects/druid/extensions-contrib/tdigestsketch/src/test/java/org/apache/druid/query/aggregation/tdigestsketch/sql/TDigestSketchSqlAggregatorTest.java,86,,"                                    ""qsketch_m1"","
70083,./TargetProjects/druid/extensions-contrib/tdigestsketch/src/test/java/org/apache/druid/query/aggregation/tdigestsketch/sql/TDigestSketchSqlAggregatorTest.java,121,,"        ""SELECT\n"""
70084,./TargetProjects/druid/extensions-contrib/tdigestsketch/src/test/java/org/apache/druid/query/aggregation/tdigestsketch/sql/TDigestSketchSqlAggregatorTest.java,123,,"        + ""FROM foo"","
70085,./TargetProjects/druid/extensions-contrib/tdigestsketch/src/test/java/org/apache/druid/query/aggregation/tdigestsketch/sql/TDigestSketchSqlAggregatorTest.java,130,,"                      new TDigestSketchAggregatorFactory(""a0:agg"", ""m1"", 200)"
70086,./TargetProjects/druid/extensions-contrib/tdigestsketch/src/test/java/org/apache/druid/query/aggregation/tdigestsketch/sql/TDigestSketchSqlAggregatorTest.java,289,,"                                new TDigestSketchAggregatorFactory(""_a0:agg"", ""a0:agg"", 100)"
70087,./TargetProjects/druid/extensions-contrib/tdigestsketch/src/test/java/org/apache/druid/query/aggregation/tdigestsketch/sql/TDigestSketchSqlAggregatorTest.java,360,,"                      new TDigestSketchAggregatorFactory(""a1:agg"", ""m1"","
70088,./TargetProjects/druid/extensions-contrib/thrift-extensions/src/test/java/org/apache/druid/data/input/thrift/ThriftInputRowParserTest.java,62,,"                                      new StringDimensionSchema(""title""),"
70089,./TargetProjects/druid/extensions-contrib/thrift-extensions/src/test/java/org/apache/druid/data/input/thrift/ThriftInputRowParserTest.java,83,,"        ""org.apache.druid.data.input.thrift.Book"""
70090,./TargetProjects/druid/extensions-contrib/time-min-max/src/test/java/org/apache/druid/query/aggregation/TimestampGroupByAggregationTest.java,156,,"        ""    \""type\"": \"""" + aggType + ""\"",\n"" +"
70091,./TargetProjects/druid/extensions-contrib/time-min-max/src/test/java/org/apache/druid/query/aggregation/TimestampMinMaxAggregatorFactoryTest.java,44,,"    TimestampMaxAggregatorFactory maxAgg = new TimestampMaxAggregatorFactory(""timeMax"", ""__time"", null);"
70092,./TargetProjects/druid/extensions-contrib/time-min-max/src/test/java/org/apache/druid/query/aggregation/TimestampMinMaxAggregatorFactoryTest.java,44,,"    TimestampMaxAggregatorFactory maxAgg = new TimestampMaxAggregatorFactory(""timeMax"", ""__time"", null);"
70093,./TargetProjects/druid/extensions-contrib/time-min-max/src/test/java/org/apache/druid/query/aggregation/TimestampMinMaxAggregatorFactoryTest.java,45,,"    TimestampMinAggregatorFactory minAgg = new TimestampMinAggregatorFactory(""timeMin"", ""__time"", null);"
70094,./TargetProjects/druid/extensions-contrib/virtual-columns/src/test/java/org/apache/druid/segment/MapVirtualColumnGroupByTest.java,128,,"        VirtualColumns.create(ImmutableList.of(new MapVirtualColumn(""keys"", ""values"", ""params""))),"
70095,./TargetProjects/druid/extensions-contrib/virtual-columns/src/test/java/org/apache/druid/segment/MapVirtualColumnGroupByTest.java,132,,"        ImmutableList.of(new CountAggregatorFactory(""count"")),"
70096,./TargetProjects/druid/extensions-contrib/virtual-columns/src/test/java/org/apache/druid/segment/MapVirtualColumnTopNTest.java,89,,"                new MapVirtualColumn(""keys"", ""values"", ""params"")"
70097,./TargetProjects/druid/extensions-contrib/virtual-columns/src/test/java/org/apache/druid/segment/MapVirtualColumnTopNTest.java,93,,"        new NumericTopNMetricSpec(""count""),"
70098,./TargetProjects/druid/extensions-contrib/virtual-columns/src/test/java/org/apache/druid/segment/MapVirtualColumnTopNTest.java,118,,"        new DefaultDimensionSpec(""params.key3"", ""params.key3""), // params.key3 is string"
70099,./TargetProjects/druid/extensions-core/avro-extensions/src/main/java/org/apache/druid/data/input/avro/GenericAvroJsonProvider.java,58,,"    throw new UnsupportedOperationException(""Unused"");"
70100,./TargetProjects/druid/extensions-core/avro-extensions/src/test/java/org/apache/druid/data/input/AvroStreamInputRowParserTest.java,87,,"      ""nested"","
70101,./TargetProjects/druid/extensions-core/azure-extensions/src/test/java/org/apache/druid/storage/azure/AzureDataSegmentPusherTest.java,60,,"      ImmutableMap.of(""containerName"", CONTAINER_NAME, ""blobPath"", BLOB_PATH),"
70102,./TargetProjects/druid/extensions-core/azure-extensions/src/test/java/org/apache/druid/storage/azure/AzureDataSegmentPusherTest.java,113,,"    File tmp = tempFolder.newFile(""version.bin"");"
70103,./TargetProjects/druid/extensions-core/azure-extensions/src/test/java/org/apache/druid/storage/azure/AzureTaskLogsTest.java,98,,"      final File logFile = new File(tmpDir, ""log"");"
70104,./TargetProjects/druid/extensions-core/azure-extensions/src/test/java/org/apache/druid/storage/azure/AzureTaskLogsTest.java,100,,"      azureStorage.uploadBlob(logFile, CONTAINER, PREFIX + ""/"" + TASK_ID + ""/log"");"
70105,./TargetProjects/druid/extensions-core/azure-extensions/src/test/java/org/apache/druid/storage/azure/AzureTaskLogsTest.java,144,,"      azureStorage.uploadBlob(logFile, CONTAINER, PREFIX + ""/"" + TASK_ID + ""/report.json"");"
70106,./TargetProjects/druid/extensions-core/azure-extensions/src/test/java/org/apache/druid/storage/azure/AzureTaskLogsTest.java,183,,"    final String testLog = ""hello this is a log"";"
70107,./TargetProjects/druid/extensions-core/azure-extensions/src/test/java/org/apache/druid/storage/azure/AzureTaskLogsTest.java,197,,"    IOUtils.copy(byteSource.get().openStream(), writer, ""UTF-8"");"
70108,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/hll/HllSketchAggregatorFactoryTest.java,243,,"                      ""hllBuild"","
70109,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/hll/HllSketchAggregatorFactoryTest.java,244,,"                      ""col"","
70110,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/hll/HllSketchAggregatorFactoryTest.java,250,,"                      ""hllBuildRound"","
70111,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/hll/HllSketchAggregatorFactoryTest.java,257,,"                      ""hllMerge"","
70112,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/hll/HllSketchAggregatorFactoryTest.java,264,,"                      ""hllMergeRound"","
70113,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/hll/HllSketchAggregatorTest.java,89,,"            Arrays.asList(""dim"", ""multiDim""),"
70114,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/hll/HllSketchAggregatorTest.java,89,,"            Arrays.asList(""dim"", ""multiDim""),"
70115,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/hll/HllSketchAggregatorTest.java,90,,"            Arrays.asList(""timestamp"", ""dim"", ""multiDim"", ""sketch"")"
70116,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/hll/HllSketchAggregatorTest.java,90,,"            Arrays.asList(""timestamp"", ""dim"", ""multiDim"", ""sketch"")"
70117,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/hll/HllSketchAggregatorTest.java,92,,"        buildAggregatorJson(""HLLSketchMerge"", ""sketch"", !ROUND),"
70118,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/hll/HllSketchAggregatorTest.java,108,,"        new File(this.getClass().getClassLoader().getResource(""hll/hll_raw.tsv"").getFile()),"
70119,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/hll/HllSketchAggregatorTest.java,113,,"        buildAggregatorJson(""HLLSketchBuild"", ""id"", !ROUND),"
70120,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/hll/HllSketchToEstimatePostAggregatorTest.java,92,,"                      ""hllMerge"","
70121,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/hll/HllSketchUnionPostAggregatorTest.java,41,,"            new FieldAccessPostAggregator(""field1"", ""sketch""),"
70122,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/hll/sql/HllSketchSqlAggregatorTest.java,158,,"        ""SELECT\n"""
70123,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/hll/sql/HllSketchSqlAggregatorTest.java,191,,"                              ""dim2"","
70124,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchAggregatorFactoryTest.java,46,,"                  new DoublesSketchAggregatorFactory(""doublesSketch"", ""col"", 8),"
70125,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchAggregatorFactoryTest.java,47,,"                  new DoublesSketchMergeAggregatorFactory(""doublesSketchMerge"", 8)"
70126,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchAggregatorTest.java,132,,"            ""  \""type\"": \""string\"","","
70127,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchAggregatorTest.java,133,,"            ""  \""parseSpec\"": {"","
70128,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchAggregatorTest.java,134,,"            ""    \""format\"": \""tsv\"","","
70129,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchAggregatorTest.java,135,,"            ""    \""timestampSpec\"": {\""column\"": \""timestamp\"", \""format\"": \""yyyyMMddHH\""},"","
70130,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchAggregatorTest.java,136,,"            ""    \""dimensionsSpec\"": {"","
70131,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchAggregatorTest.java,138,,"            ""      \""dimensionExclusions\"": [],"","
70132,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchAggregatorTest.java,139,,"            ""      \""spatialDimensions\"": []"","
70133,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchAggregatorTest.java,140,,"            ""    },"","
70134,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchAggregatorTest.java,142,,"            ""  }"","
70135,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchAggregatorTest.java,158,,"            ""  \""queryType\"": \""groupBy\"","","
70136,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchAggregatorTest.java,159,,"            ""  \""dataSource\"": \""test_datasource\"","","
70137,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchAggregatorTest.java,160,,"            ""  \""granularity\"": \""ALL\"","","
70138,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchAggregatorTest.java,161,,"            ""  \""dimensions\"": [],"","
70139,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchAggregatorTest.java,162,,"            ""  \""aggregations\"": ["","
70140,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchAggregatorTest.java,165,,"            ""  ],"","
70141,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchAggregatorTest.java,166,,"            ""  \""postAggregations\"": ["","
70142,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchAggregatorTest.java,167,,"            ""    {\""type\"": \""quantilesDoublesSketchToQuantiles\"", \""name\"": \""quantiles\"", \""fractions\"": [0, 0.5, 1], \""field\"": {\""type\"": \""fieldAccess\"", \""fieldName\"": \""sketch\""}},"","
70143,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchAggregatorTest.java,170,,"            ""  \""intervals\"": [\""2016-01-01T00:00:00.000Z/2016-01-31T00:00:00.000Z\""]"","
70144,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchAggregatorTest.java,210,,"        new File(this.getClass().getClassLoader().getResource(""quantiles/doubles_build_data.tsv"").getFile()),"
70145,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchComplexMetricSerdeTest.java,38,,"        new MapBasedInputRow(0L, ImmutableList.of(), ImmutableMap.of(""foo"", """")),"
70146,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchToCDFPostAggregatorTest.java,54,,"        new FieldAccessPostAggregator(""field1"", ""sketch""),"
70147,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchToCDFPostAggregatorTest.java,99,,"                  .withNonnullFields(""name"", ""field"", ""splitPoints"")"
70148,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchToHistogramPostAggregatorTest.java,54,,"        new FieldAccessPostAggregator(""field1"", ""sketch""),"
70149,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchToHistogramPostAggregatorTest.java,102,,"                  .withNonnullFields(""name"", ""field"", ""splitPoints"")"
70150,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchToQuantilesPostAggregatorTest.java,54,,"        new FieldAccessPostAggregator(""field1"", ""sketch""),"
70151,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchToQuantilesPostAggregatorTest.java,99,,"                  .withNonnullFields(""name"", ""field"", ""fractions"")"
70152,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchToRankPostAggregatorTest.java,48,,"        new FieldAccessPostAggregator(""field1"", ""sketch""),"
70153,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchToRankPostAggregatorTest.java,80,,"                  .withNonnullFields(""name"", ""field"", ""value"")"
70154,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/sql/DoublesSketchSqlAggregatorTest.java,104,,"                                new CountAggregatorFactory(""cnt""),"
70155,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/sql/DoublesSketchSqlAggregatorTest.java,107,,"                                    ""qsketch_m1"","
70156,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/sql/DoublesSketchSqlAggregatorTest.java,140,,"        ""SELECT\n"""
70157,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/sql/DoublesSketchSqlAggregatorTest.java,150,,"        + ""FROM foo"","
70158,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/sql/DoublesSketchSqlAggregatorTest.java,165,,"                      new DoublesSketchAggregatorFactory(""a0:agg"", ""m1"", null),"
70159,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/sql/DoublesSketchSqlAggregatorTest.java,166,,"                      new DoublesSketchAggregatorFactory(""a1:agg"", ""m1"", 64),"
70160,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/sql/DoublesSketchSqlAggregatorTest.java,167,,"                      new DoublesSketchAggregatorFactory(""a2:agg"", ""m1"", 256),"
70161,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/sql/DoublesSketchSqlAggregatorTest.java,168,,"                      new DoublesSketchAggregatorFactory(""a4:agg"", ""v0"", null),"
70162,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/sql/DoublesSketchSqlAggregatorTest.java,170,,"                          new DoublesSketchAggregatorFactory(""a5:agg"", ""m1"", null),"
70163,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/sql/DoublesSketchSqlAggregatorTest.java,171,,"                          new SelectorDimFilter(""dim1"", ""abc"", null)"
70164,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/sql/DoublesSketchSqlAggregatorTest.java,171,,"                          new SelectorDimFilter(""dim1"", ""abc"", null)"
70165,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/sql/DoublesSketchSqlAggregatorTest.java,174,,"                          new DoublesSketchAggregatorFactory(""a6:agg"", ""m1"", null),"
70166,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/sql/DoublesSketchSqlAggregatorTest.java,335,,"                          new SelectorDimFilter(""dim2"", ""abc"", null)"
70167,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/sql/DoublesSketchSqlAggregatorTest.java,537,,"                      new DoublesSketchAggregatorFactory(""a3:agg"", ""v0"", 128)"
70168,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/quantiles/sql/DoublesSketchSqlAggregatorTest.java,787,,"                                    selector(""dim1"", ""nonexistent"", null)"
70169,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/BufferHashGrouperUsingSketchMergeAggregatorFactoryTest.java,54,,"                new SketchMergeAggregatorFactory(""sketch"", ""sketch"", 16, false, true, 2),"
70170,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/SketchAggregationTest.java,143,,"                DateTimes.of(""2014-10-19T00:00:00.000Z""),"
70171,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/SketchAggregationTest.java,151,,"                    .put(""sketchEstimatePostAgg"", 50.0)"
70172,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/SketchAggregationTest.java,156,,"                    .put(""sketchUnionPostAggEstimate"", 50.0)"
70173,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/SketchAggregationTest.java,158,,"                    .put(""sketchIntersectionPostAggEstimate"", 50.0)"
70174,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/SketchAggregationTest.java,159,,"                    .put(""sketchAnotBPostAggEstimate"", 0.0)"
70175,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/SketchAggregationTest.java,160,,"                    .put(""non_existing_col_validation"", 0.0)"
70176,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/SketchAggregationTest.java,193,,"                    .put(""product"", ""product_b"")"
70177,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/SketchAggregationTest.java,194,,"                    .put(""sketch_count"", 0.0)"
70178,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/SketchAggregationTest.java,301,,"    assertAggregatorFactorySerde(new SketchMergeAggregatorFactory(""name"", ""fieldName"", 16, null, null, null));"
70179,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/SketchAggregationTest.java,301,,"    assertAggregatorFactorySerde(new SketchMergeAggregatorFactory(""name"", ""fieldName"", 16, null, null, null));"
70180,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/SketchAggregationWithSimpleDataTest.java,154,,"                  DateTimes.of(""2014-10-19T00:00:00.000Z""),"
70181,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/SketchAggregationWithSimpleDataTest.java,157,,"                      .put(""product"", ""product_3"")"
70182,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/SketchAggregationWithSimpleDataTest.java,158,,"                      .put(""sketch_count"", 38.0)"
70183,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/SketchAggregationWithSimpleDataTest.java,159,,"                      .put(""sketchEstimatePostAgg"", 38.0)"
70184,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/SketchAggregationWithSimpleDataTest.java,160,,"                      .put(""sketchUnionPostAggEstimate"", 38.0)"
70185,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/SketchAggregationWithSimpleDataTest.java,161,,"                      .put(""sketchIntersectionPostAggEstimate"", 38.0)"
70186,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/SketchAggregationWithSimpleDataTest.java,162,,"                      .put(""sketchAnotBPostAggEstimate"", 0.0)"
70187,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/SketchAggregationWithSimpleDataTest.java,163,,"                      .put(""non_existing_col_validation"", 0.0)"
70188,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/SketchAggregatorFactoryTest.java,49,,"                  new OldSketchBuildAggregatorFactory(""oldBuild"", ""col"", 16),"
70189,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/SketchAggregatorFactoryTest.java,49,,"                  new OldSketchBuildAggregatorFactory(""oldBuild"", ""col"", 16),"
70190,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/SketchAggregatorFactoryTest.java,50,,"                  new OldSketchMergeAggregatorFactory(""oldMerge"", ""col"", 16, false),"
70191,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/SketchAggregatorFactoryTest.java,51,,"                  new OldSketchMergeAggregatorFactory(""oldMergeFinalize"", ""col"", 16, true),"
70192,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/SketchAggregatorFactoryTest.java,52,,"                  new SketchMergeAggregatorFactory(""merge"", ""col"", 16, false, false, null),"
70193,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/SketchAggregatorFactoryTest.java,53,,"                  new SketchMergeAggregatorFactory(""mergeFinalize"", ""col"", 16, true, false, null)"
70194,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/SketchSetPostAggregatorTest.java,54,,"        ""summary"","
70195,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/SketchSetPostAggregatorTest.java,55,,"        ""UNION"","
70196,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/SketchSetPostAggregatorTest.java,65,,"        new FieldAccessPostAggregator(""field1"", ""sketch""),"
70197,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/SketchToStringPostAggregatorTest.java,46,,"        ""summary"","
70198,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/SketchToStringPostAggregatorTest.java,47,,"        new FieldAccessPostAggregator(""field"", ""sketch"")"
70199,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/SketchToStringPostAggregatorTest.java,47,,"        new FieldAccessPostAggregator(""field"", ""sketch"")"
70200,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/oldapi/OldApiSketchAggregationTest.java,179,,"    assertAggregatorFactorySerde(new OldSketchMergeAggregatorFactory(""name"", ""fieldName"", 16, null));"
70201,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/oldapi/OldApiSketchAggregationTest.java,179,,"    assertAggregatorFactorySerde(new OldSketchMergeAggregatorFactory(""name"", ""fieldName"", 16, null));"
70202,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/sql/ThetaSketchSqlAggregatorTest.java,89,,"                                                         new CountAggregatorFactory(""cnt""),"
70203,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/sql/ThetaSketchSqlAggregatorTest.java,92,,"                                                             ""thetasketch_dim1"","
70204,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/sql/ThetaSketchSqlAggregatorTest.java,93,,"                                                             ""dim1"","
70205,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/sql/ThetaSketchSqlAggregatorTest.java,172,,"        ""SELECT\n"""
70206,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/sql/ThetaSketchSqlAggregatorTest.java,211,,"                              ""dim2"","
70207,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/sql/ThetaSketchSqlAggregatorTest.java,361,,"              ""\""AQMDAAA6zJOQxkPsNomrZQ==\"""","
70208,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/sql/ThetaSketchSqlAggregatorTest.java,456,,"                          ""INTERSECT"","
70209,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/sql/ThetaSketchSqlAggregatorTest.java,624,,"        ImmutableList.of(new Object[]{0L, 0L, ""0.0"", ""0.0""})"
70210,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/sql/ThetaSketchSqlAggregatorTest.java,658,,"                                    selector(""dim1"", ""nonexistent"", null)"
70211,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,85,,"            ""  \""type\"": \""string\"","","
70212,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,86,,"            ""  \""parseSpec\"": {"","
70213,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,87,,"            ""    \""format\"": \""tsv\"","","
70214,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,88,,"            ""    \""timestampSpec\"": {\""column\"": \""timestamp\"", \""format\"": \""yyyyMMddHH\""},"","
70215,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,89,,"            ""    \""dimensionsSpec\"": {"","
70216,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,90,,"            ""      \""dimensions\"": [\""product\""],"","
70217,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,91,,"            ""      \""dimensionExclusions\"": [],"","
70218,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,92,,"            ""      \""spatialDimensions\"": []"","
70219,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,93,,"            ""    },"","
70220,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,95,,"            ""  }"","
70221,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,111,,"            ""  \""queryType\"": \""groupBy\"","","
70222,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,112,,"            ""  \""dataSource\"": \""test_datasource\"","","
70223,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,113,,"            ""  \""granularity\"": \""ALL\"","","
70224,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,114,,"            ""  \""dimensions\"": [],"","
70225,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,115,,"            ""  \""aggregations\"": ["","
70226,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,118,,"            ""  ],"","
70227,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,119,,"            ""  \""postAggregations\"": ["","
70228,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,120,,"            ""    {\""type\"": \""arrayOfDoublesSketchToEstimate\"", \""name\"": \""estimate\"", \""field\"": {\""type\"": \""fieldAccess\"", \""fieldName\"": \""sketch\""}},"","
70229,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,122,,"            ""    {\""type\"": \""arrayOfDoublesSketchToQuantilesSketch\"", \""name\"": \""quantiles-sketch\"", \""field\"": {\""type\"": \""fieldAccess\"", \""fieldName\"": \""sketch\""}},"","
70230,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,123,,"            ""    {\""type\"": \""arrayOfDoublesSketchToEstimate\"", \""name\"": \""union\"", \""field\"": {"","
70231,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,124,,"            ""      \""type\"": \""arrayOfDoublesSketchSetOp\"","","
70232,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,125,,"            ""      \""name\"": \""union\"","","
70233,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,126,,"            ""      \""operation\"": \""UNION\"","","
70234,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,127,,"            ""      \""nominalEntries\"": 1024,"","
70235,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,128,,"            ""      \""fields\"": [{\""type\"": \""fieldAccess\"", \""fieldName\"": \""sketch\""}, {\""type\"": \""fieldAccess\"", \""fieldName\"": \""sketch\""}]"","
70236,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,129,,"            ""    }},"","
70237,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,130,,"            ""    {\""type\"": \""arrayOfDoublesSketchToEstimate\"", \""name\"": \""intersection\"", \""field\"": {"","
70238,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,132,,"            ""      \""name\"": \""intersection\"","","
70239,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,133,,"            ""      \""operation\"": \""INTERSECT\"","","
70240,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,137,,"            ""    {\""type\"": \""arrayOfDoublesSketchToEstimate\"", \""name\"": \""anotb\"", \""field\"": {"","
70241,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,139,,"            ""      \""name\"": \""anotb\"","","
70242,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,140,,"            ""      \""operation\"": \""NOT\"","","
70243,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,147,,"            ""  \""intervals\"": [\""2015-01-01T00:00:00.000Z/2015-01-31T00:00:00.000Z\""]"","
70244,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,154,,"    Assert.assertEquals(""sketch"", 40.0, (double) row.get(0), 0);"
70245,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,156,,"    Assert.assertEquals(""estimate"", 40.0, (double) row.get(2), 0);"
70246,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,158,,"    Assert.assertEquals(""union"", 40.0, (double) row.get(5), 0);"
70247,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,159,,"    Assert.assertEquals(""intersection"", 40.0, (double) row.get(6), 0);"
70248,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,160,,"    Assert.assertEquals(""anotb"", 0, (double) row.get(7), 0);"
70249,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,233,,"            ""      \""numberOfValues\"": 2,"","
70250,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,250,,"            ""    {"","
70251,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,251,,"            ""      \""type\"": \""arrayOfDoublesSketchToMeans\"","","
70252,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,252,,"            ""      \""name\"": \""means\"","","
70253,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,253,,"            ""      \""field\"": {\""type\"": \""fieldAccess\"", \""fieldName\"": \""sketch\""}"","
70254,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,254,,"            ""    }"","
70255,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregationTest.java,524,,"            ""      \""numberOfValues\"": 3,"","
70256,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchAggregatorFactoryTest.java,89,,"                      ""arrayOfDoublesSketch"","
70257,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchSetOpPostAggregatorTest.java,62,,"        ""UNION"","
70258,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchSetOpPostAggregatorTest.java,112,,"    s1.update(""foo"", new double[]{1.0, 2.0});"
70259,./TargetProjects/druid/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/util/ToObjectVectorColumnProcessorFactoryTest.java,148,,"            Arrays.asList(""a"", ""preferred""),"
70260,./TargetProjects/druid/extensions-core/druid-basic-security/src/main/java/org/apache/druid/security/basic/authentication/endpoint/BasicAuthenticatorResource.java,106,,"      @PathParam(""authenticatorName"") final String authenticatorName"
70261,./TargetProjects/druid/extensions-core/druid-basic-security/src/main/java/org/apache/druid/security/basic/authentication/endpoint/BasicAuthenticatorResource.java,127,,"      @PathParam(""userName"") final String userName"
70262,./TargetProjects/druid/extensions-core/druid-basic-security/src/main/java/org/apache/druid/security/basic/authorization/db/updater/CoordinatorBasicAuthorizerMetadataStorageUpdater.java,940,,"      throw new BasicSecurityDBResourceException(""Role [%s] does not exist."", roleName);"
70263,./TargetProjects/druid/extensions-core/druid-basic-security/src/main/java/org/apache/druid/security/basic/authorization/endpoint/BasicAuthorizerResource.java,110,,"      @PathParam(""authorizerName"") final String authorizerName"
70264,./TargetProjects/druid/extensions-core/druid-basic-security/src/main/java/org/apache/druid/security/basic/authorization/endpoint/BasicAuthorizerResource.java,150,,"      @PathParam(""userName"") final String userName,"
70265,./TargetProjects/druid/extensions-core/druid-basic-security/src/main/java/org/apache/druid/security/basic/authorization/endpoint/BasicAuthorizerResource.java,173,,"      @PathParam(""groupMappingName"") final String groupMappingName,"
70266,./TargetProjects/druid/extensions-core/druid-basic-security/src/main/java/org/apache/druid/security/basic/authorization/endpoint/BasicAuthorizerResource.java,312,,"      @PathParam(""roleName"") final String roleName,"
70267,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/BasicAuthUtilsTest.java,83,,"            ""name"","
70268,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/BasicAuthUtilsTest.java,88,,"                    ""resourceAction"", fooRead,"
70269,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/BasicAuthUtilsTest.java,89,,"                    ""resourceNamePattern"", ""foo"""
70270,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/BasicAuthUtilsTest.java,115,,"                        ImmutableMap.of(""name"", ""some-view"", ""type"", ""VIEW""),"
70271,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authentication/BasicHTTPAuthenticatorTest.java,66,,"              ""userA"", new BasicAuthenticatorUser(""userA"", USER_A_CREDENTIALS)"
70272,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authentication/BasicHTTPAuthenticatorTest.java,74,,"      ""basic"","
70273,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authentication/BasicHTTPAuthenticatorTest.java,89,,"    header = StringUtils.format(""Basic %s"", header);"
70274,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authentication/BasicHTTPAuthenticatorTest.java,92,,"    EasyMock.expect(req.getHeader(""Authorization"")).andReturn(header);"
70275,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authentication/CoordinatorBasicAuthenticatorMetadataStorageUpdaterTest.java,47,,"  private static final String AUTHENTICATOR_NAME = ""test"";"
70276,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authentication/CoordinatorBasicAuthenticatorMetadataStorageUpdaterTest.java,104,,"        ""druid"", new BasicAuthenticatorUser(""druid"", null)"
70277,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authentication/CoordinatorBasicAuthenticatorResourceTest.java,95,,"                new DefaultPasswordProvider(""druid""),"
70278,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authentication/CoordinatorBasicAuthenticatorResourceTest.java,179,,"    resource.createUser(req, AUTHENTICATOR_NAME, ""druid2"");"
70279,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authentication/CoordinatorBasicAuthenticatorResourceTest.java,180,,"    resource.createUser(req, AUTHENTICATOR_NAME, ""druid3"");"
70280,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authentication/CoordinatorBasicAuthenticatorResourceTest.java,222,,"    resource.createUser(req, AUTHENTICATOR_NAME2, ""druid4"");"
70281,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authentication/CoordinatorBasicAuthenticatorResourceTest.java,223,,"    resource.createUser(req, AUTHENTICATOR_NAME2, ""druid5"");"
70282,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authentication/CoordinatorBasicAuthenticatorResourceTest.java,224,,"    resource.createUser(req, AUTHENTICATOR_NAME2, ""druid6"");"
70283,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authentication/CoordinatorBasicAuthenticatorResourceTest.java,308,,"    Assert.assertEquals(errorMapWithMsg(""User [druid] does not exist.""), response.getEntity());"
70284,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authentication/CoordinatorBasicAuthenticatorResourceTest.java,325,,"        new BasicAuthenticatorCredentialUpdate(""helloworld"", null)"
70285,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authentication/validator/DBCredentialsValidatorTest.java,48,,"      new BasicAuthenticatorCredentialUpdate(""helloworld"", 20)"
70286,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authentication/validator/DBCredentialsValidatorTest.java,64,,"              ""userA"", new BasicAuthenticatorUser(""userA"", USER_A_CREDENTIALS),"
70287,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authentication/validator/DBCredentialsValidatorTest.java,79,,"    String authorizerName = ""basic"";"
70288,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authorization/BasicRoleBasedAuthorizerTest.java,85,,"    userAttrs.put(new BasicAttribute(""sAMAccountName"", ""druiduser""));"
70289,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authorization/BasicRoleBasedAuthorizerTest.java,89,,"    adminAttrs.put(new BasicAttribute(""sAMAccountName"", ""druidadmin""));"
70290,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authorization/BasicRoleBasedAuthorizerTest.java,159,,"    updater.createUser(DB_AUTHORIZER_NAME, ""druid"");"
70291,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authorization/BasicRoleBasedAuthorizerTest.java,160,,"    updater.createRole(DB_AUTHORIZER_NAME, ""druidRole"");"
70292,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authorization/BasicRoleBasedAuthorizerTest.java,164,,"        new ResourceAction(new Resource(""testResource"", ResourceType.DATASOURCE), Action.WRITE)"
70293,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authorization/BasicRoleBasedAuthorizerTest.java,180,,"        new Resource(""wrongResource"", ResourceType.DATASOURCE),"
70294,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authorization/BasicRoleBasedAuthorizerTest.java,189,,"    BasicAuthorizerGroupMapping groupMapping = new BasicAuthorizerGroupMapping(""druidGroupMapping"", ""CN=admin,OU=Platform,OU=Groupings,DC=corp,DC=apache,DC=org"", null);"
70295,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authorization/BasicRoleBasedAuthorizerTest.java,223,,"    BasicAuthorizerGroupMapping adminGrroupMapping = new BasicAuthorizerGroupMapping(""adminGrroupMapping"", ""CN=admin,*"", null);"
70296,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authorization/BasicRoleBasedAuthorizerTest.java,225,,"    updater.createRole(LDAP_AUTHORIZER_NAME, ""adminDruidRole"");"
70297,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authorization/BasicRoleBasedAuthorizerTest.java,234,,"    BasicAuthorizerGroupMapping userGrroupMapping = new BasicAuthorizerGroupMapping(""userGrroupMapping"", ""CN=user,*"", null);"
70298,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authorization/BasicRoleBasedAuthorizerTest.java,236,,"    updater.createRole(LDAP_AUTHORIZER_NAME, ""userDruidRole"");"
70299,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authorization/CoordinatorBasicAuthorizerMetadataStorageUpdaterTest.java,126,,"    updater.createUser(AUTHORIZER_NAME, ""druid"");"
70300,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authorization/CoordinatorBasicAuthorizerMetadataStorageUpdaterTest.java,147,,"    updater.createGroupMapping(AUTHORIZER_NAME, new BasicAuthorizerGroupMapping(""druid"", ""CN=test"", null));"
70301,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authorization/CoordinatorBasicAuthorizerMetadataStorageUpdaterTest.java,243,,"    updater.createRole(AUTHORIZER_NAME, ""druidRole"");"
70302,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authorization/CoordinatorBasicAuthorizerResourceTest.java,207,,"    resource.createUser(req, AUTHORIZER_NAME, ""druid"");"
70303,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authorization/CoordinatorBasicAuthorizerResourceTest.java,208,,"    resource.createUser(req, AUTHORIZER_NAME, ""druid2"");"
70304,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authorization/CoordinatorBasicAuthorizerResourceTest.java,209,,"    resource.createUser(req, AUTHORIZER_NAME, ""druid3"");"
70305,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authorization/CoordinatorBasicAuthorizerResourceTest.java,210,,"    resource.createGroupMapping(req, AUTHORIZER_NAME, ""druidGroupMapping"", new BasicAuthorizerGroupMapping(""druidGroupMapping"", """", new HashSet<>()));"
70306,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authorization/CoordinatorBasicAuthorizerResourceTest.java,211,,"    resource.createGroupMapping(req, AUTHORIZER_NAME, ""druid2GroupMapping"", new BasicAuthorizerGroupMapping(""druid2GroupMapping"", """", new HashSet<>()));"
70307,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authorization/CoordinatorBasicAuthorizerResourceTest.java,212,,"    resource.createGroupMapping(req, AUTHORIZER_NAME, ""druid3GroupMapping"", new BasicAuthorizerGroupMapping(""druid3GroupMapping"", """", new HashSet<>()));"
70308,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authorization/CoordinatorBasicAuthorizerResourceTest.java,413,,"    Response response = resource.createRole(req, AUTHORIZER_NAME, ""druidRole"");"
70309,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authorization/CoordinatorBasicAuthorizerResourceTest.java,686,,"    response = resource.createRole(req, AUTHORIZER_NAME, ""druidRole2"");"
70310,./TargetProjects/druid/extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authorization/CoordinatorBasicAuthorizerResourceTest.java,950,,"      String roleName = ""druidRole-"" + i;"
70311,./TargetProjects/druid/extensions-core/druid-bloom-filter/src/main/java/org/apache/druid/query/aggregation/bloom/BloomFilterSerde.java,49,,"    throw new UnsupportedOperationException(""Bloom filter aggregators are query-time only"");"
70312,./TargetProjects/druid/extensions-core/druid-bloom-filter/src/test/java/org/apache/druid/query/aggregation/bloom/BloomFilterAggregatorFactoryTest.java,47,,"                  new BloomFilterAggregatorFactory(""bloom"", DefaultDimensionSpec.of(""col""), 1024),"
70313,./TargetProjects/druid/extensions-core/druid-bloom-filter/src/test/java/org/apache/druid/query/aggregation/bloom/BloomFilterAggregatorFactoryTest.java,48,,"                  new BloomFilterMergeAggregatorFactory(""bloomMerge"", ""bloom"", 1024)"
70314,./TargetProjects/druid/extensions-core/druid-bloom-filter/src/test/java/org/apache/druid/query/aggregation/bloom/BloomFilterAggregatorTest.java,234,,"        ""billy"","
70315,./TargetProjects/druid/extensions-core/druid-bloom-filter/src/test/java/org/apache/druid/query/aggregation/bloom/BloomFilterGroupByQueryTest.java,103,,"                   + ""\""queryType\"": \""groupBy\"","""
70316,./TargetProjects/druid/extensions-core/druid-bloom-filter/src/test/java/org/apache/druid/query/aggregation/bloom/BloomFilterGroupByQueryTest.java,104,,"                   + ""\""dataSource\"": \""test_datasource\"","""
70317,./TargetProjects/druid/extensions-core/druid-bloom-filter/src/test/java/org/apache/druid/query/aggregation/bloom/BloomFilterGroupByQueryTest.java,105,,"                   + ""\""granularity\"": \""ALL\"","""
70318,./TargetProjects/druid/extensions-core/druid-bloom-filter/src/test/java/org/apache/druid/query/aggregation/bloom/BloomFilterGroupByQueryTest.java,106,,"                   + ""\""dimensions\"": [],"""
70319,./TargetProjects/druid/extensions-core/druid-bloom-filter/src/test/java/org/apache/druid/query/aggregation/bloom/BloomFilterGroupByQueryTest.java,108,,"                   + ""\""aggregations\"": ["""
70320,./TargetProjects/druid/extensions-core/druid-bloom-filter/src/test/java/org/apache/druid/query/aggregation/bloom/BloomFilterGroupByQueryTest.java,111,,"                   + ""\""intervals\"": [ \""1970/2050\"" ]"""
70321,./TargetProjects/druid/extensions-core/druid-bloom-filter/src/test/java/org/apache/druid/query/aggregation/bloom/sql/BloomFilterSqlAggregatorTest.java,88,,"                             .addAll(DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim1"", ""dim2"", ""dim3"")))"
70322,./TargetProjects/druid/extensions-core/druid-bloom-filter/src/test/java/org/apache/druid/query/aggregation/bloom/sql/BloomFilterSqlAggregatorTest.java,88,,"                             .addAll(DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim1"", ""dim2"", ""dim3"")))"
70323,./TargetProjects/druid/extensions-core/druid-bloom-filter/src/test/java/org/apache/druid/query/aggregation/bloom/sql/BloomFilterSqlAggregatorTest.java,149,,"        ""SELECT\n"""
70324,./TargetProjects/druid/extensions-core/druid-bloom-filter/src/test/java/org/apache/druid/query/aggregation/bloom/sql/BloomFilterSqlAggregatorTest.java,151,,"        + ""FROM numfoo"","
70325,./TargetProjects/druid/extensions-core/druid-bloom-filter/src/test/java/org/apache/druid/query/aggregation/bloom/sql/BloomFilterSqlAggregatorTest.java,160,,"                              ""a0:agg"","
70326,./TargetProjects/druid/extensions-core/druid-bloom-filter/src/test/java/org/apache/druid/query/aggregation/bloom/sql/BloomFilterSqlAggregatorTest.java,161,,"                              new DefaultDimensionSpec(""dim1"", ""a0:dim1""),"
70327,./TargetProjects/druid/extensions-core/druid-bloom-filter/src/test/java/org/apache/druid/query/filter/BloomDimFilterTest.java,66,,"              DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim0"", ""dim1"", ""dim2"", ""dim3"", ""dim6"")),"
70328,./TargetProjects/druid/extensions-core/druid-bloom-filter/src/test/java/org/apache/druid/query/filter/BloomDimFilterTest.java,66,,"              DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim0"", ""dim1"", ""dim2"", ""dim3"", ""dim6"")),"
70329,./TargetProjects/druid/extensions-core/druid-bloom-filter/src/test/java/org/apache/druid/query/filter/BloomDimFilterTest.java,66,,"              DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim0"", ""dim1"", ""dim2"", ""dim3"", ""dim6"")),"
70330,./TargetProjects/druid/extensions-core/druid-bloom-filter/src/test/java/org/apache/druid/query/filter/BloomDimFilterTest.java,66,,"              DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim0"", ""dim1"", ""dim2"", ""dim3"", ""dim6"")),"
70331,./TargetProjects/druid/extensions-core/druid-bloom-filter/src/test/java/org/apache/druid/query/filter/BloomDimFilterTest.java,66,,"              DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim0"", ""dim1"", ""dim2"", ""dim3"", ""dim6"")),"
70332,./TargetProjects/druid/extensions-core/druid-bloom-filter/src/test/java/org/apache/druid/query/filter/BloomDimFilterTest.java,90,,"      PARSER.parseBatch(ImmutableMap.of(""dim0"", ""5"", ""dim1"", ""abc"")).get(0)"
70333,./TargetProjects/druid/extensions-core/druid-bloom-filter/src/test/java/org/apache/druid/query/filter/BloomDimFilterTest.java,132,,"    bloomFilter.addString(""myTestString"");"
70334,./TargetProjects/druid/extensions-core/druid-bloom-filter/src/test/java/org/apache/druid/query/filter/BloomDimFilterTest.java,137,,"        new TimeDimExtractionFn(""yyyy-MM-dd"", ""yyyy-MM"", true)"
70335,./TargetProjects/druid/extensions-core/druid-bloom-filter/src/test/java/org/apache/druid/query/filter/BloomDimFilterTest.java,137,,"        new TimeDimExtractionFn(""yyyy-MM-dd"", ""yyyy-MM"", true)"
70336,./TargetProjects/druid/extensions-core/druid-bloom-filter/src/test/java/org/apache/druid/query/filter/BloomDimFilterTest.java,237,,"        new BloomDimFilter(""dim4"", bloomKFilter(1000, (String) null), null),"
70337,./TargetProjects/druid/extensions-core/druid-bloom-filter/src/test/java/org/apache/druid/query/filter/BloomDimFilterTest.java,273,,"        ""1"", ""HELLO"","
70338,./TargetProjects/druid/extensions-core/druid-bloom-filter/src/test/java/org/apache/druid/query/filter/BloomDimFilterTest.java,276,,"        ""abc"", ""UNKNOWN"""
70339,./TargetProjects/druid/extensions-core/druid-bloom-filter/src/test/java/org/apache/druid/query/filter/sql/BloomDimFilterSqlTest.java,80,,"    filter.addString(""def"");"
70340,./TargetProjects/druid/extensions-core/druid-bloom-filter/src/test/java/org/apache/druid/query/filter/sql/BloomDimFilterSqlTest.java,92,,"                      new BloomDimFilter(""dim1"", BloomKFilterHolder.fromBloomKFilter(filter), null)"
70341,./TargetProjects/druid/extensions-core/druid-kerberos/src/main/java/org/apache/druid/security/kerberos/KerberosAuthenticator.java,461,,"        options.put(""useKeyTab"", ""true"");"
70342,./TargetProjects/druid/extensions-core/google-extensions/src/test/java/org/apache/druid/data/input/google/GoogleCloudStorageInputSourceTest.java,228,,"        new TimestampSpec(""time"", ""auto"", null),"
70343,./TargetProjects/druid/extensions-core/google-extensions/src/test/java/org/apache/druid/data/input/google/GoogleCloudStorageInputSourceTest.java,229,,"        new DimensionsSpec(DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim1"", ""dim2""))),"
70344,./TargetProjects/druid/extensions-core/google-extensions/src/test/java/org/apache/druid/data/input/google/GoogleCloudStorageInputSourceTest.java,229,,"        new DimensionsSpec(DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim1"", ""dim2""))),"
70345,./TargetProjects/druid/extensions-core/google-extensions/src/test/java/org/apache/druid/storage/google/GoogleDataSegmentPusherTest.java,119,,"    Assert.assertEquals(""/path"", pusher.buildPath(""/path""));"
70346,./TargetProjects/druid/extensions-core/google-extensions/src/test/java/org/apache/druid/storage/google/GoogleTimestampVersionedDataFinderTest.java,53,,"    URI latest = finder.getLatestVersion(URI.create(StringUtils.format(""gs://%s/%s"", bucket, keyPrefix)), pattern);"
70347,./TargetProjects/druid/extensions-core/google-extensions/src/test/java/org/apache/druid/storage/google/GoogleUtilsTest.java,38,,"                new HttpResponseException.Builder(429, ""ignored"", new HttpHeaders()),"
70348,./TargetProjects/druid/extensions-core/google-extensions/src/test/java/org/apache/druid/storage/google/ObjectStorageIteratorTest.java,60,,"        ImmutableList.of(""gs://b/foo/baz""),"
70349,./TargetProjects/druid/extensions-core/google-extensions/src/test/java/org/apache/druid/storage/google/ObjectStorageIteratorTest.java,70,,"        ImmutableList.of(""gs://b/foo/bar1"", ""gs://b/foo/bar2"", ""gs://b/foo/bar3"", ""gs://b/foo/bar4"", ""gs://b/foo/baz""),"
70350,./TargetProjects/druid/extensions-core/google-extensions/src/test/java/org/apache/druid/storage/google/ObjectStorageIteratorTest.java,70,,"        ImmutableList.of(""gs://b/foo/bar1"", ""gs://b/foo/bar2"", ""gs://b/foo/bar3"", ""gs://b/foo/bar4"", ""gs://b/foo/baz""),"
70351,./TargetProjects/druid/extensions-core/google-extensions/src/test/java/org/apache/druid/storage/google/ObjectStorageIteratorTest.java,70,,"        ImmutableList.of(""gs://b/foo/bar1"", ""gs://b/foo/bar2"", ""gs://b/foo/bar3"", ""gs://b/foo/bar4"", ""gs://b/foo/baz""),"
70352,./TargetProjects/druid/extensions-core/google-extensions/src/test/java/org/apache/druid/storage/google/ObjectStorageIteratorTest.java,70,,"        ImmutableList.of(""gs://b/foo/bar1"", ""gs://b/foo/bar2"", ""gs://b/foo/bar3"", ""gs://b/foo/bar4"", ""gs://b/foo/baz""),"
70353,./TargetProjects/druid/extensions-core/hdfs-storage/src/test/java/org/apache/druid/indexing/common/tasklogs/HdfsTaskLogsTest.java,53,,"    Files.write(""blah"", logFile, StandardCharsets.UTF_8);"
70354,./TargetProjects/druid/extensions-core/hdfs-storage/src/test/java/org/apache/druid/indexing/common/tasklogs/HdfsTaskLogsTest.java,55,,"    taskLogs.pushTaskLog(""foo"", logFile);"
70355,./TargetProjects/druid/extensions-core/hdfs-storage/src/test/java/org/apache/druid/indexing/common/tasklogs/HdfsTaskLogsTest.java,94,,"    taskLogs.pushTaskLog(""log1"", logFile);"
70356,./TargetProjects/druid/extensions-core/hdfs-storage/src/test/java/org/apache/druid/indexing/common/tasklogs/HdfsTaskLogsTest.java,105,,"    taskLogs.pushTaskLog(""log2"", logFile);"
70357,./TargetProjects/druid/extensions-core/hdfs-storage/src/test/java/org/apache/druid/segment/loading/HdfsFileTimestampVersionFinderTest.java,108,,"    final Path oldPath = new Path(perTestPath, ""555test.txt"");"
70358,./TargetProjects/druid/extensions-core/hdfs-storage/src/test/java/org/apache/druid/storage/hdfs/HdfsDataSegmentKillerTest.java,56,,"            return ""/tmp"";"
70359,./TargetProjects/druid/extensions-core/hdfs-storage/src/test/java/org/apache/druid/storage/hdfs/HdfsDataSegmentKillerTest.java,90,,"    killer.kill(getSegmentWithPath(new Path(partition011Dir, ""index.zip"").toString()));"
70360,./TargetProjects/druid/extensions-core/hdfs-storage/src/test/java/org/apache/druid/storage/hdfs/HdfsDataSegmentPusherTest.java,168,,"        segment.getLoadSpec().get(""path"").toString(),"
70361,./TargetProjects/druid/extensions-core/hdfs-storage/src/test/java/org/apache/druid/storage/hdfs/HdfsDataSegmentPusherTest.java,214,,"          ""%s/%s/%d_index.zip"","
70362,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/ApproximateHistogramAggregatorTest.java,57,,"        ""billy"", ""billy"", resolution, numBuckets, Float.NEGATIVE_INFINITY, Float.POSITIVE_INFINITY, false"
70363,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/ApproximateHistogramAggregatorTest.java,134,,"                  new ApproximateHistogramAggregatorFactory(""approxHisto"", ""col"", null, null, null, null, false),"
70364,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/ApproximateHistogramAggregatorTest.java,135,,"                  new ApproximateHistogramAggregatorFactory(""approxHistoBin"", ""col"", null, null, null, null, true)"
70365,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/ApproximateHistogramGroupByQueryTest.java,176,,"            ""marketalias"""
70366,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/ApproximateHistogramGroupByQueryTest.java,187,,"                new QuantilePostAggregator(""quantile"", ""apphisto"", 0.5f)"
70367,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/ApproximateHistogramPostAggregatorTest.java,81,,"              .aggregators(new ApproximateHistogramAggregatorFactory(""approxHisto"", ""col"", null, null, null, null, false))"
70368,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/ApproximateHistogramTest.java,84,,"        ""final bin positions match expected positions"","
70369,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/ApproximateHistogramTest.java,350,,"        ""expected quantiles match actual quantiles"","
70370,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/ApproximateHistogramTest.java,543,,"        ""expected breaks match actual breaks"","
70371,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/ApproximateHistogramTopNQueryTest.java,110,,"        ""apphisto"","
70372,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/ApproximateHistogramTopNQueryTest.java,111,,"        ""index"","
70373,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/ApproximateHistogramTopNQueryTest.java,131,,"                        new DoubleMaxAggregatorFactory(""maxIndex"", ""index""),"
70374,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/ApproximateHistogramTopNQueryTest.java,132,,"                        new DoubleMinAggregatorFactory(""minIndex"", ""index""),"
70375,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/ApproximateHistogramTopNQueryTest.java,141,,"            new QuantilePostAggregator(""quantile"", ""apphisto"", 0.5f)"
70376,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/ApproximateHistogramVectorAggregatorTest.java,67,,"    expect(vectorColumnSelectorFactory.getColumnCapabilities(""field_2"")).andReturn(columnCapabilities).anyTimes();"
70377,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/FixedBucketsHistogramBufferAggregatorTest.java,54,,"        ""billy"","
70378,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/FixedBucketsHistogramBufferAggregatorTest.java,155,,"                  new FixedBucketsHistogramAggregatorFactory(""fixedHisto"", ""col"", null, 0, 100, null, false),"
70379,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/FixedBucketsHistogramBufferAggregatorTest.java,156,,"                  new FixedBucketsHistogramAggregatorFactory(""fixedHistoBin"", ""col"", null, 0, 100, null, true)"
70380,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/FixedBucketsHistogramGroupByQueryTest.java,164,,"        ""histo"","
70381,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/FixedBucketsHistogramGroupByQueryTest.java,177,,"            ""marketalias"""
70382,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/FixedBucketsHistogramGroupByQueryTest.java,188,,"                new QuantilePostAggregator(""quantile"", ""histo"", 0.5f)"
70383,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/FixedBucketsHistogramTopNQueryTest.java,110,,"        ""histo"","
70384,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/FixedBucketsHistogramTopNQueryTest.java,111,,"        ""index"","
70385,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/FixedBucketsHistogramTopNQueryTest.java,131,,"                        new DoubleMaxAggregatorFactory(""maxIndex"", ""index""),"
70386,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/FixedBucketsHistogramTopNQueryTest.java,132,,"                        new DoubleMinAggregatorFactory(""minIndex"", ""index""),"
70387,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/FixedBucketsHistogramTopNQueryTest.java,141,,"            new QuantilePostAggregator(""quantile"", ""histo"", 0.5f)"
70388,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/FixedBucketsHistogramVectorAggregatorTest.java,66,,"    expect(vectorColumnSelectorFactory.getColumnCapabilities(""field_2"")).andReturn(columnCapabilities).anyTimes();"
70389,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/sql/FixedBucketsHistogramQuantileSqlAggregatorTest.java,89,,"                                                             ""fbhist_m1"","
70390,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/sql/FixedBucketsHistogramQuantileSqlAggregatorTest.java,141,,"        ""SELECT\n"""
70391,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/sql/FixedBucketsHistogramQuantileSqlAggregatorTest.java,167,,"                          ""a0:agg"","
70392,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/sql/FixedBucketsHistogramQuantileSqlAggregatorTest.java,176,,"                          ""a4:agg"","
70393,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/sql/FixedBucketsHistogramQuantileSqlAggregatorTest.java,186,,"                              ""a5:agg"","
70394,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/sql/FixedBucketsHistogramQuantileSqlAggregatorTest.java,194,,"                          new SelectorDimFilter(""dim1"", ""abc"", null)"
70395,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/sql/FixedBucketsHistogramQuantileSqlAggregatorTest.java,194,,"                          new SelectorDimFilter(""dim1"", ""abc"", null)"
70396,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/sql/FixedBucketsHistogramQuantileSqlAggregatorTest.java,198,,"                              ""a6:agg"","
70397,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/sql/FixedBucketsHistogramQuantileSqlAggregatorTest.java,538,,"                          ""a1:agg"","
70398,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/sql/QuantileSqlAggregatorTest.java,88,,"                                                             ""hist_m1"","
70399,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/sql/QuantileSqlAggregatorTest.java,125,,"        ""SELECT\n"""
70400,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/sql/QuantileSqlAggregatorTest.java,150,,"                      new ApproximateHistogramAggregatorFactory(""a0:agg"", ""m1"", null, null, null, null, false),"
70401,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/sql/QuantileSqlAggregatorTest.java,151,,"                      new ApproximateHistogramAggregatorFactory(""a2:agg"", ""m1"", 200, null, null, null, false),"
70402,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/sql/QuantileSqlAggregatorTest.java,152,,"                      new ApproximateHistogramAggregatorFactory(""a4:agg"", ""v0"", null, null, null, null, false),"
70403,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/sql/QuantileSqlAggregatorTest.java,154,,"                          new ApproximateHistogramAggregatorFactory(""a5:agg"", ""m1"", null, null, null, null, false),"
70404,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/sql/QuantileSqlAggregatorTest.java,155,,"                          new SelectorDimFilter(""dim1"", ""abc"", null)"
70405,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/sql/QuantileSqlAggregatorTest.java,155,,"                          new SelectorDimFilter(""dim1"", ""abc"", null)"
70406,./TargetProjects/druid/extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/sql/QuantileSqlAggregatorTest.java,386,,"                      new ApproximateHistogramAggregatorFactory(""a1:agg"", ""m1"", null, null, null, null, false)"
70407,./TargetProjects/druid/extensions-core/kafka-extraction-namespace/src/test/java/org/apache/druid/query/lookup/KafkaLookupExtractorFactoryTest.java,289,,"        ImmutableMap.of(""bootstrap.servers"", ""localhost""),"
70408,./TargetProjects/druid/extensions-core/kafka-extraction-namespace/src/test/java/org/apache/druid/query/lookup/KafkaLookupExtractorFactoryTest.java,289,,"        ImmutableMap.of(""bootstrap.servers"", ""localhost""),"
70409,./TargetProjects/druid/extensions-core/kafka-extraction-namespace/src/test/java/org/apache/druid/query/lookup/TestKafkaExtractionCluster.java,222,,"      assertUpdated(null, ""foo"");"
70410,./TargetProjects/druid/extensions-core/kafka-extraction-namespace/src/test/java/org/apache/druid/query/lookup/TestKafkaExtractionCluster.java,241,,"      assertUpdated(null, ""baz"");"
70411,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/main/java/org/apache/druid/indexing/kafka/KafkaIndexTaskModule.java,45,,"                new NamedType(KafkaDataSourceMetadata.class, ""kafka""),"
70412,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaCheckpointDataSourceMetadataSerdeTest.java,80,,"                           + ""\t\t\t\t\""0\"": 10,\n"""
70413,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaCheckpointDataSourceMetadataSerdeTest.java,81,,"                           + ""\t\t\t\t\""1\"": 20,\n"""
70414,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaCheckpointDataSourceMetadataSerdeTest.java,82,,"                           + ""\t\t\t\t\""2\"": 30\n"""
70415,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaCheckpointDataSourceMetadataSerdeTest.java,83,,"                           + ""\t\t\t},\n"""
70416,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIOConfigTest.java,63,,"    String jsonStr = ""{\n"""
70417,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIOConfigTest.java,64,,"                     + ""  \""type\"": \""kafka\"",\n"""
70418,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIOConfigTest.java,65,,"                     + ""  \""taskGroupId\"": 0,\n"""
70419,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIOConfigTest.java,66,,"                     + ""  \""baseSequenceName\"": \""my-sequence-name\"",\n"""
70420,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIOConfigTest.java,67,,"                     + ""  \""startPartitions\"": {\""topic\"":\""mytopic\"", \""partitionOffsetMap\"" : {\""0\"":1, \""1\"":10}},\n"""
70421,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIOConfigTest.java,68,,"                     + ""  \""endPartitions\"": {\""topic\"":\""mytopic\"", \""partitionOffsetMap\"" : {\""0\"":15, \""1\"":200}},\n"""
70422,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIOConfigTest.java,82,,"    Assert.assertEquals(""mytopic"", config.getStartSequenceNumbers().getStream());"
70423,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIOConfigTest.java,135,,"                     + ""  \""consumerProperties\"": {\""bootstrap.servers\"":\""localhost:9092\""},\n"""
70424,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIOConfigTest.java,136,,"                     + ""  \""useTransaction\"": false,\n"""
70425,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIOConfigTest.java,137,,"                     + ""  \""minimumMessageTime\"": \""2016-05-31T12:00Z\"",\n"""
70426,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIOConfigTest.java,138,,"                     + ""  \""maximumMessageTime\"": \""2016-05-31T14:00Z\""\n"""
70427,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIOConfigTest.java,313,,"        new SeekableStreamStartSequenceNumbers<>(""stream"", ImmutableMap.of(1, 10L, 2, 5L), null),"
70428,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIndexTaskClientTest.java,76,,"  private static final String TEST_ID = ""test-id"";"
70429,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIndexTaskClientTest.java,236,,"    EasyMock.expect(headers.get(""X-Druid-Task-Id"")).andReturn(""a-different-task-id"");"
70430,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIndexTaskClientTest.java,259,,"    EasyMock.expect(responseHolder.getContent()).andReturn(""{\""0\"":1, \""1\"":10}"");"
70431,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIndexTaskClientTest.java,715,,"      Assert.assertTrue(""unexpectedURL"", expectedUrls.contains(requests.get(i).getUrl()));"
70432,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIndexTaskTest.java,250,,"        new ProducerRecord<byte[], byte[]>(topic, 0, null, jbb(""2008"", ""a"", ""y"", ""10"", ""20.0"", ""1.0""), SAMPLE_HEADERS),"
70433,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIndexTaskTest.java,250,,"        new ProducerRecord<byte[], byte[]>(topic, 0, null, jbb(""2008"", ""a"", ""y"", ""10"", ""20.0"", ""1.0""), SAMPLE_HEADERS),"
70434,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIndexTaskTest.java,251,,"        new ProducerRecord<byte[], byte[]>(topic, 0, null, jbb(""2009"", ""b"", ""y"", ""10"", ""20.0"", ""1.0""), SAMPLE_HEADERS),"
70435,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIndexTaskTest.java,252,,"        new ProducerRecord<byte[], byte[]>(topic, 0, null, jbb(""2010"", ""c"", ""y"", ""10"", ""20.0"", ""1.0""), SAMPLE_HEADERS),"
70436,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIndexTaskTest.java,253,,"        new ProducerRecord<byte[], byte[]>(topic, 0, null, jbb(""2011"", ""d"", ""y"", ""10"", ""20.0"", ""1.0""), SAMPLE_HEADERS),"
70437,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIndexTaskTest.java,260,,"        new ProducerRecord<>(topic, 0, null, jbb(""2049"", ""f"", ""y"", ""notanumber"", ""20.0"", ""1.0"")),"
70438,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIndexTaskTest.java,388,,"            ""sequence0"","
70439,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIndexTaskTest.java,415,,"            sdd(""2010/P1D"", 0, ImmutableList.of(""c"")),"
70440,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIndexTaskTest.java,416,,"            sdd(""2011/P1D"", 0, ImmutableList.of(""d"", ""e""))"
70441,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIndexTaskTest.java,588,,"    consumerProps.put(""max.poll.records"", ""1"");"
70442,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIndexTaskTest.java,654,,"            sdd(""2008/P1D"", 0, ImmutableList.of(""a"")),"
70443,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIndexTaskTest.java,655,,"            sdd(""2009/P1D"", 0, ImmutableList.of(""b"")),"
70444,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIndexTaskTest.java,659,,"            sdd(""2012/P1D"", 0, ImmutableList.of(""g"")),"
70445,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIndexTaskTest.java,660,,"            sdd(""2013/P1D"", 0, ImmutableList.of(""f""))"
70446,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIndexTaskTuningConfigTest.java,105,,"    Assert.assertEquals(new File(""/tmp/xxx""), config.getBasePersistDirectory());"
70447,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIndexTaskTuningConfigTest.java,129,,"        new Period(""PT3S""),"
70448,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaRecordSupplierTest.java,74,,"        new ProducerRecord<>(topic, 0, null, jb(""2008"", ""a"", ""y"", ""10"", ""20.0"", ""1.0"")),"
70449,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaRecordSupplierTest.java,74,,"        new ProducerRecord<>(topic, 0, null, jb(""2008"", ""a"", ""y"", ""10"", ""20.0"", ""1.0"")),"
70450,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaSamplerSpecTest.java,66,,"      new TimestampSpec(""timestamp"", ""iso"", null),"
70451,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaSamplerSpecTest.java,69,,"              new StringDimensionSchema(""dim1""),"
70452,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaSamplerSpecTest.java,70,,"              new StringDimensionSchema(""dim1t""),"
70453,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaSamplerSpecTest.java,71,,"              new StringDimensionSchema(""dim2""),"
70454,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaSamplerSpecTest.java,72,,"              new LongDimensionSchema(""dimLong""),"
70455,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaSamplerSpecTest.java,73,,"              new FloatDimensionSchema(""dimFloat"")"
70456,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaSamplerSpecTest.java,79,,"          new DoubleSumAggregatorFactory(""met1sum"", ""met1""),"
70457,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaSamplerSpecTest.java,79,,"          new DoubleSumAggregatorFactory(""met1sum"", ""met1""),"
70458,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaSamplerSpecTest.java,80,,"          new CountAggregatorFactory(""rows"")"
70459,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaSamplerSpecTest.java,92,,"        new ProducerRecord<>(topic, 0, null, jb(""2008"", ""a"", ""y"", ""10"", ""20.0"", ""1.0"")),"
70460,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaSamplerSpecTest.java,92,,"        new ProducerRecord<>(topic, 0, null, jb(""2008"", ""a"", ""y"", ""10"", ""20.0"", ""1.0"")),"
70461,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorIOConfigTest.java,55,,"    String jsonStr = ""{\n"""
70462,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorIOConfigTest.java,56,,"                     + ""  \""type\"": \""kafka\"",\n"""
70463,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorIOConfigTest.java,57,,"                     + ""  \""topic\"": \""my-topic\"",\n"""
70464,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorIOConfigTest.java,70,,"    Assert.assertEquals(""my-topic"", config.getTopic());"
70465,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorIOConfigTest.java,74,,"    Assert.assertEquals(ImmutableMap.of(""bootstrap.servers"", ""localhost:9092""), config.getConsumerProperties());"
70466,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorIOConfigTest.java,74,,"    Assert.assertEquals(ImmutableMap.of(""bootstrap.servers"", ""localhost:9092""), config.getConsumerProperties());"
70467,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,69,,"    String json = ""{\n"""
70468,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,70,,"                  + ""  \""type\"": \""kafka\"",\n"""
70469,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,71,,"                  + ""  \""dataSchema\"": {\n"""
70470,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,72,,"                  + ""    \""dataSource\"": \""metrics-kafka\"",\n"""
70471,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,88,,"                  + ""      }\n"""
70472,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,89,,"                  + ""    },\n"""
70473,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,90,,"                  + ""    \""metricsSpec\"": [\n"""
70474,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,91,,"                  + ""      {\n"""
70475,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,92,,"                  + ""        \""name\"": \""count\"",\n"""
70476,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,93,,"                  + ""        \""type\"": \""count\""\n"""
70477,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,94,,"                  + ""      },\n"""
70478,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,96,,"                  + ""        \""name\"": \""value_sum\"",\n"""
70479,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,97,,"                  + ""        \""fieldName\"": \""value\"",\n"""
70480,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,98,,"                  + ""        \""type\"": \""doubleSum\""\n"""
70481,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,101,,"                  + ""        \""name\"": \""value_min\"",\n"""
70482,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,103,,"                  + ""        \""type\"": \""doubleMin\""\n"""
70483,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,106,,"                  + ""        \""name\"": \""value_max\"",\n"""
70484,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,108,,"                  + ""        \""type\"": \""doubleMax\""\n"""
70485,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,110,,"                  + ""    ],\n"""
70486,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,111,,"                  + ""    \""granularitySpec\"": {\n"""
70487,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,112,,"                  + ""      \""type\"": \""uniform\"",\n"""
70488,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,113,,"                  + ""      \""segmentGranularity\"": \""HOUR\"",\n"""
70489,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,114,,"                  + ""      \""queryGranularity\"": \""NONE\""\n"""
70490,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,115,,"                  + ""    }\n"""
70491,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,116,,"                  + ""  },\n"""
70492,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,117,,"                  + ""  \""ioConfig\"": {\n"""
70493,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,118,,"                  + ""    \""topic\"": \""metrics\"",\n"""
70494,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,119,,"                  + ""    \""consumerProperties\"": {\n"""
70495,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,120,,"                  + ""      \""bootstrap.servers\"": \""localhost:9092\""\n"""
70496,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,122,,"                  + ""    \""taskCount\"": 1\n"""
70497,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,123,,"                  + ""  }\n"""
70498,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,131,,"    Assert.assertEquals(""metrics"", spec.getIoConfig().getTopic());"
70499,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,138,,"    Assert.assertTrue(serialized.contains(""\""tuningConfig\"":{""));"
70500,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,139,,"    Assert.assertTrue(serialized.contains(""\""indexSpec\"":{""));"
70501,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorSpecTest.java,140,,"    Assert.assertTrue(serialized.contains(""\""suspended\"":false""));"
70502,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java,281,,"    consumerProperties.put(""myCustomKey"", ""myCustomValue"");"
70503,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java,281,,"    consumerProperties.put(""myCustomKey"", ""myCustomValue"");"
70504,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java,282,,"    consumerProperties.put(""bootstrap.servers"", kafkaHost);"
70505,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java,289,,"            new Period(""PT1H""),"
70506,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java,293,,"            new Period(""P1D""),"
70507,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java,294,,"            new Period(""PT30S""),"
70508,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java,296,,"            new Period(""PT30M""),"
70509,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java,309,,"            new Period(""P1Y""),"
70510,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java,310,,"            new File(""/test""),"
70511,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java,402,,"    Assert.assertEquals(""sequenceName-0"", taskConfig.getBaseSequenceName());"
70512,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java,403,,"    Assert.assertTrue(""isUseTransaction"", taskConfig.isUseTransaction());"
70513,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java,404,,"    Assert.assertFalse(""minimumMessageTime"", taskConfig.getMinimumMessageTime().isPresent());"
70514,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java,405,,"    Assert.assertFalse(""maximumMessageTime"", taskConfig.getMaximumMessageTime().isPresent());"
70515,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java,965,,"        ""id2"","
70516,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java,1012,,"        ""id1"","
70517,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java,1015,,"        new SeekableStreamStartSequenceNumbers<>(""topic"", ImmutableMap.of(0, 0L, 2, 0L), ImmutableSet.of()),"
70518,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java,1032,,"        ""id3"","
70519,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java,1045,,"        ""id4"","
70520,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java,1055,,"        ""id5"","
70521,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java,1149,,"    EasyMock.expect(taskClient.getCheckpointsAsync(EasyMock.contains(""sequenceName-1""), EasyMock.anyBoolean()))"
70522,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java,1414,,"    final TaskLocation location = new TaskLocation(""testHost"", 1234, -1);"
70523,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java,1739,,"    final TaskLocation location2 = new TaskLocation(""testHost2"", 145, -1);"
70524,./TargetProjects/druid/extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java,2477,,"    taskQueue.shutdown(""id2"", ""DataSourceMetadata is not found while reset"");"
70525,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/main/java/org/apache/druid/indexing/kinesis/KinesisIndexingServiceModule.java,41,,"  public static final String AWS_SCOPE = ""kinesis"";"
70526,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIOConfigTest.java,64,,"    String jsonStr = ""{\n"""
70527,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIOConfigTest.java,65,,"                     + ""  \""type\"": \""kinesis\"",\n"""
70528,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIOConfigTest.java,66,,"                     + ""  \""baseSequenceName\"": \""my-sequence-name\"",\n"""
70529,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIOConfigTest.java,67,,"                     + ""  \""endpoint\"": \""kinesis.us-east-1.amazonaws.com\"",\n"""
70530,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIOConfigTest.java,68,,"                     + ""  \""startSequenceNumbers\"": {\""type\"":\""start\"", \""stream\"":\""mystream\"", \""partitionSequenceNumberMap\"" : {\""0\"":\""1\"", \""1\"":\""10\""}},\n"""
70531,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIOConfigTest.java,69,,"                     + ""  \""endSequenceNumbers\"": {\""type\"":\""end\"", \""stream\"":\""mystream\"", \""partitionSequenceNumberMap\"" : {\""0\"":\""15\"", \""1\"":\""200\""}}\n"""
70532,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIOConfigTest.java,83,,"    Assert.assertEquals(""mystream"", config.getStartSequenceNumbers().getStream());"
70533,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIOConfigTest.java,171,,"    exception.expectMessage(CoreMatchers.containsString(""baseSequenceName""));"
70534,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIOConfigTest.java,253,,"    exception.expectMessage(CoreMatchers.containsString(""endpoint""));"
70535,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIOConfigTest.java,264,,"            ""stream"","
70536,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIndexTaskClientTest.java,77,,"  private static final String TEST_ID = ""test-id"";"
70537,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIndexTaskClientTest.java,237,,"    EasyMock.expect(headers.get(""X-Druid-Task-Id"")).andReturn(""a-different-task-id"");"
70538,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIndexTaskClientTest.java,260,,"    EasyMock.expect(responseHolder.getContent()).andReturn(""{\""0\"":1, \""1\"":10}"");"
70539,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIndexTaskClientTest.java,715,,"      Assert.assertTrue(""unexpectedURL"", expectedUrls.contains(requests.get(i).getUrl()));"
70540,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIndexTaskTest.java,272,,"        new OrderedPartitionableRecord<>(stream, ""1"", ""0"", jbl(""2008"", ""a"", ""y"", ""10"", ""20.0"", ""1.0"")),"
70541,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIndexTaskTest.java,272,,"        new OrderedPartitionableRecord<>(stream, ""1"", ""0"", jbl(""2008"", ""a"", ""y"", ""10"", ""20.0"", ""1.0"")),"
70542,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIndexTaskTest.java,274,,"        new OrderedPartitionableRecord<>(stream, ""1"", ""2"", jbl(""2010"", ""c"", ""y"", ""10"", ""20.0"", ""1.0"")),"
70543,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIndexTaskTest.java,275,,"        new OrderedPartitionableRecord<>(stream, ""1"", ""3"", jbl(""2011"", ""d"", ""y"", ""10"", ""20.0"", ""1.0"")),"
70544,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIndexTaskTest.java,348,,"            ""sequence0"","
70545,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIndexTaskTest.java,355,,"            ""awsEndpoint"","
70546,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIndexTaskTest.java,380,,"            sdd(""2010/P1D"", 0, ImmutableList.of(""c"")),"
70547,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIndexTaskTest.java,381,,"            sdd(""2011/P1D"", 0, ImmutableList.of(""d"", ""e""))"
70548,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIndexTaskTest.java,523,,"            sdd(""2012/P1D"", 0, ImmutableList.of(""g""))"
70549,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIndexTaskTest.java,626,,"            sdd(""2008/P1D"", 0, ImmutableList.of(""a"")),"
70550,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIndexTaskTest.java,627,,"            sdd(""2009/P1D"", 0, ImmutableList.of(""b"")),"
70551,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIndexTaskTest.java,632,,"            sdd(""2013/P1D"", 0, ImmutableList.of(""f""))"
70552,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIndexTaskTest.java,1585,,"            ""sequence1"","
70553,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIndexTaskTest.java,1917,,"        ""task1"","
70554,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIndexTaskTuningConfigTest.java,120,,"    Assert.assertEquals(new File(""/tmp/xxx""), config.getBasePersistDirectory());"
70555,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIndexTaskTuningConfigTest.java,147,,"        new Period(""PT3S""),"
70556,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisRecordSupplierTest.java,82,,"      new Record().withData(jb(""2008"", ""a"", ""y"", ""10"", ""20.0"", ""1.0"")).withSequenceNumber(""0""),"
70557,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisRecordSupplierTest.java,82,,"      new Record().withData(jb(""2008"", ""a"", ""y"", ""10"", ""20.0"", ""1.0"")).withSequenceNumber(""0""),"
70558,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisRecordSupplierTest.java,364,,"    AmazonServiceException getException = new AmazonServiceException(""InternalFailure"");"
70559,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisRecordSupplierTest.java,925,,"            EasyMock.or(EasyMock.matches(""\\d+""), EasyMock.isNull())"
70560,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisSamplerSpecTest.java,67,,"      new TimestampSpec(""timestamp"", ""iso"", null),"
70561,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisSamplerSpecTest.java,70,,"              new StringDimensionSchema(""dim1""),"
70562,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisSamplerSpecTest.java,71,,"              new StringDimensionSchema(""dim1t""),"
70563,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisSamplerSpecTest.java,72,,"              new StringDimensionSchema(""dim2""),"
70564,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisSamplerSpecTest.java,73,,"              new LongDimensionSchema(""dimLong""),"
70565,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisSamplerSpecTest.java,74,,"              new FloatDimensionSchema(""dimFloat"")"
70566,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisSamplerSpecTest.java,80,,"          new DoubleSumAggregatorFactory(""met1sum"", ""met1""),"
70567,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisSamplerSpecTest.java,80,,"          new DoubleSumAggregatorFactory(""met1sum"", ""met1""),"
70568,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisSamplerSpecTest.java,81,,"          new CountAggregatorFactory(""rows"")"
70569,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisSamplerSpecTest.java,96,,"        new OrderedPartitionableRecord<>(stream, ""1"", ""0"", jb(""2008"", ""a"", ""y"", ""10"", ""20.0"", ""1.0"")),"
70570,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisSamplerSpecTest.java,96,,"        new OrderedPartitionableRecord<>(stream, ""1"", ""0"", jb(""2008"", ""a"", ""y"", ""10"", ""20.0"", ""1.0"")),"
70571,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java,127,,"  private static final String STREAM = ""stream"";"
70572,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java,222,,"    supervisor = getTestableSupervisor(1, 1, true, ""PT1H"", null, null);"
70573,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java,260,,"    Assert.assertEquals(""sequenceName-0"", taskConfig.getBaseSequenceName());"
70574,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java,261,,"    Assert.assertTrue(""isUseTransaction"", taskConfig.isUseTransaction());"
70575,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java,292,,"        ""awsEndpoint"","
70576,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java,296,,"        new Period(""PT30M""),"
70577,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java,297,,"        new Period(""P1D""),"
70578,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java,298,,"        new Period(""PT30S""),"
70579,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java,677,,"    EasyMock.expect(supervisorRecordSupplier.getLatestSequenceNumber(EasyMock.anyObject())).andReturn(""100"").anyTimes();"
70580,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java,780,,"        ""id2"","
70581,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java,845,,"        ""id1"","
70582,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java,863,,"        ""id3"","
70583,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java,875,,"        ""id4"","
70584,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java,990,,"    EasyMock.expect(taskClient.getCheckpointsAsync(EasyMock.contains(""sequenceName-1""), EasyMock.anyBoolean()))"
70585,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java,1310,,"    final TaskLocation location = new TaskLocation(""testHost"", 1234, -1);"
70586,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java,1752,,"    final TaskLocation location2 = new TaskLocation(""testHost2"", 145, -1);"
70587,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java,2620,,"                new SeekableStreamEndSequenceNumbers<>(STREAM, ImmutableMap.of(SHARD_ID1, ""100"", SHARD_ID2, ""200""))"
70588,./TargetProjects/druid/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java,2827,,"    taskQueue.shutdown(""id2"", ""DataSourceMetadata is not found while reset"");"
70589,./TargetProjects/druid/extensions-core/kubernetes-extensions/src/test/java/org/apache/druid/k8s/discovery/K8sDruidNodeAnnouncerTest.java,77,,"            ""op"", ""add"","
70590,./TargetProjects/druid/extensions-core/kubernetes-extensions/src/test/java/org/apache/druid/k8s/discovery/K8sDruidNodeAnnouncerTest.java,78,,"            ""path"", ""/metadata/labels/druidDiscoveryAnnouncement-router"","
70591,./TargetProjects/druid/extensions-core/kubernetes-extensions/src/test/java/org/apache/druid/k8s/discovery/K8sDruidNodeAnnouncerTest.java,79,,"            ""value"", ""true"""
70592,./TargetProjects/druid/extensions-core/kubernetes-extensions/src/test/java/org/apache/druid/k8s/discovery/K8sDruidNodeAnnouncerTest.java,125,,"            ""op"", ""remove"","
70593,./TargetProjects/druid/extensions-core/kubernetes-extensions/src/test/java/org/apache/druid/k8s/discovery/K8sDruidNodeDiscoveryProviderTest.java,47,,"      new DruidNode(""druid/router"", ""test-host1"", true, 80, null, true, false),"
70594,./TargetProjects/druid/extensions-core/lookups-cached-global/src/main/java/org/apache/druid/query/lookup/namespace/UriExtractionNamespace.java,293,,"          ""Column [%s] not found int columns: %s"","
70595,./TargetProjects/druid/extensions-core/lookups-cached-global/src/test/java/org/apache/druid/query/lookup/NamespaceLookupExtractorFactoryTest.java,304,,"    Assert.assertNull(extractor.apply(""foo""));"
70596,./TargetProjects/druid/extensions-core/lookups-cached-global/src/test/java/org/apache/druid/query/lookup/namespace/JSONFlatDataParserTest.java,56,,"      ImmutableMap.of(""key"", ""foo1"", ""val"", ""bar"", ""otherVal"", 3, ""canBeEmpty"", """"),"
70597,./TargetProjects/druid/extensions-core/lookups-cached-global/src/test/java/org/apache/druid/query/lookup/namespace/JSONFlatDataParserTest.java,56,,"      ImmutableMap.of(""key"", ""foo1"", ""val"", ""bar"", ""otherVal"", 3, ""canBeEmpty"", """"),"
70598,./TargetProjects/druid/extensions-core/lookups-cached-global/src/test/java/org/apache/druid/query/lookup/namespace/JdbcExtractionNamespaceUrlCheckTest.java,63,,"          ""some filter"","
70599,./TargetProjects/druid/extensions-core/lookups-cached-global/src/test/java/org/apache/druid/query/lookup/namespace/JdbcExtractionNamespaceUrlCheckTest.java,70,,"              return ImmutableSet.of(""valid_key1"", ""valid_key2"");"
70600,./TargetProjects/druid/extensions-core/lookups-cached-global/src/test/java/org/apache/druid/query/lookup/namespace/JdbcExtractionNamespaceUrlCheckTest.java,70,,"              return ImmutableSet.of(""valid_key1"", ""valid_key2"");"
70601,./TargetProjects/druid/extensions-core/lookups-cached-global/src/test/java/org/apache/druid/query/lookup/namespace/UriExtractionNamespaceTest.java,92,,"            ""col1"","
70602,./TargetProjects/druid/extensions-core/lookups-cached-global/src/test/java/org/apache/druid/query/lookup/namespace/UriExtractionNamespaceTest.java,93,,"            ""col2"","
70603,./TargetProjects/druid/extensions-core/lookups-cached-global/src/test/java/org/apache/druid/query/lookup/namespace/UriExtractionNamespaceTest.java,94,,"            ""col3"""
70604,./TargetProjects/druid/extensions-core/lookups-cached-global/src/test/java/org/apache/druid/query/lookup/namespace/UriExtractionNamespaceTest.java,97,,"    Assert.assertEquals(ImmutableMap.of(""B"", ""C""), parser.getParser().parseToMap(""A,B,C""));"
70605,./TargetProjects/druid/extensions-core/lookups-cached-global/src/test/java/org/apache/druid/query/lookup/namespace/UriExtractionNamespaceTest.java,218,,"    final String keyField = ""keyField"";"
70606,./TargetProjects/druid/extensions-core/lookups-cached-global/src/test/java/org/apache/druid/query/lookup/namespace/UriExtractionNamespaceTest.java,219,,"    final String valueField = ""valueField"";"
70607,./TargetProjects/druid/extensions-core/lookups-cached-global/src/test/java/org/apache/druid/query/lookup/namespace/UriExtractionNamespaceTest.java,254,,"                      ""{\""%sDFSDFDS\"":\""B\"", \""%s\"":\""C\"", \""FOO\"":\""BAR\""}"","
70608,./TargetProjects/druid/extensions-core/lookups-cached-global/src/test/java/org/apache/druid/server/lookup/namespace/NamespacedExtractorModuleTest.java,96,,"      out.write(MAPPER.writeValueAsString(ImmutableMap.of(""foo"", ""bar"")));"
70609,./TargetProjects/druid/extensions-core/lookups-cached-global/src/test/java/org/apache/druid/server/lookup/namespace/NamespacedExtractorModuleTest.java,96,,"      out.write(MAPPER.writeValueAsString(ImmutableMap.of(""foo"", ""bar"")));"
70610,./TargetProjects/druid/extensions-core/lookups-cached-global/src/test/java/org/apache/druid/server/lookup/namespace/UriCacheGeneratorTest.java,280,,"          ""bar"","
70611,./TargetProjects/druid/extensions-core/lookups-cached-global/src/test/java/org/apache/druid/server/lookup/namespace/UriCacheGeneratorTest.java,281,,"          ""foo"","
70612,./TargetProjects/druid/extensions-core/lookups-cached-global/src/test/java/org/apache/druid/server/lookup/namespace/UriCacheGeneratorTest.java,315,,"    Assert.assertEquals(null, map.get(""baz""));"
70613,./TargetProjects/druid/extensions-core/lookups-cached-global/src/test/java/org/apache/druid/server/lookup/namespace/cache/JdbcExtractionNamespaceTest.java,87,,"      ""foo"", new String[]{""bar"", ""1""},"
70614,./TargetProjects/druid/extensions-core/lookups-cached-global/src/test/java/org/apache/druid/server/lookup/namespace/cache/JdbcExtractionNamespaceTest.java,87,,"      ""foo"", new String[]{""bar"", ""1""},"
70615,./TargetProjects/druid/extensions-core/lookups-cached-global/src/test/java/org/apache/druid/server/lookup/namespace/cache/JdbcExtractionNamespaceTest.java,400,,"      Assert.assertEquals(""null check"", null, map.get(""baz""));"
70616,./TargetProjects/druid/extensions-core/lookups-cached-single/src/test/java/org/apache/druid/server/lookup/LoadingLookupTest.java,77,,"    EasyMock.expect(lookupCache.get(EasyMock.eq(""key""), EasyMock.anyObject(Callable.class))).andReturn(""value"").once();"
70617,./TargetProjects/druid/extensions-core/lookups-cached-single/src/test/java/org/apache/druid/server/lookup/LoadingLookupTest.java,77,,"    EasyMock.expect(lookupCache.get(EasyMock.eq(""key""), EasyMock.anyObject(Callable.class))).andReturn(""value"").once();"
70618,./TargetProjects/druid/extensions-core/lookups-cached-single/src/test/java/org/apache/druid/server/lookup/PollingLookupTest.java,54,,"      ""foo"", ""bar"","
70619,./TargetProjects/druid/extensions-core/lookups-cached-single/src/test/java/org/apache/druid/server/lookup/cache/loading/LoadingCacheTest.java,89,,"    loadingCache.get(""key2"", new Callable()"
70620,./TargetProjects/druid/extensions-core/lookups-cached-single/src/test/java/org/apache/druid/server/lookup/cache/loading/LoadingCacheTest.java,94,,"        return ""value2"";"
70621,./TargetProjects/druid/extensions-core/lookups-cached-single/src/test/java/org/apache/druid/server/lookup/jdbc/JdbcDataFetcherTest.java,65,,"        ""foo"", ""bar"","
70622,./TargetProjects/druid/extensions-core/lookups-cached-single/src/test/java/org/apache/druid/server/lookup/jdbc/JdbcDataFetcherUrlCheckTest.java,66,,"              return ImmutableSet.of(""valid_key1"", ""valid_key2"");"
70623,./TargetProjects/druid/extensions-core/lookups-cached-single/src/test/java/org/apache/druid/server/lookup/jdbc/JdbcDataFetcherUrlCheckTest.java,66,,"              return ImmutableSet.of(""valid_key1"", ""valid_key2"");"
70624,./TargetProjects/druid/extensions-core/mysql-metadata-storage/src/test/java/org/apache/druid/firehose/sql/MySQLFirehoseDatabaseConnectorTest.java,124,,"    JdbcAccessSecurityConfig securityConfig = newSecurityConfigEnforcingAllowList(ImmutableSet.of(""user""));"
70625,./TargetProjects/druid/extensions-core/mysql-metadata-storage/src/test/java/org/apache/druid/firehose/sql/MySQLFirehoseDatabaseConnectorTest.java,141,,"        return ""jdbc:mysql://localhost:3306/test?user=maytas&password=secret&keyonly"";"
70626,./TargetProjects/druid/extensions-core/mysql-metadata-storage/src/test/java/org/apache/druid/firehose/sql/MySQLFirehoseDatabaseConnectorTest.java,147,,"    expectedException.expectMessage(""The property [password] is not in the allowed list"");"
70627,./TargetProjects/druid/extensions-core/mysql-metadata-storage/src/test/java/org/apache/druid/firehose/sql/MySQLFirehoseDatabaseConnectorTest.java,217,,"    JdbcAccessSecurityConfig securityConfig = newSecurityConfigEnforcingAllowList(ImmutableSet.of(""none"", ""nonenone""));"
70628,./TargetProjects/druid/extensions-core/mysql-metadata-storage/src/test/java/org/apache/druid/metadata/storage/mysql/MySQLMetadataStorageModuleTest.java,55,,"    properties.setProperty(propertyPrefix + "".trustCertificateKeyStoreUrl"", ""url"");"
70629,./TargetProjects/druid/extensions-core/mysql-metadata-storage/src/test/java/org/apache/druid/metadata/storage/mysql/MySQLMetadataStorageModuleTest.java,56,,"    properties.setProperty(propertyPrefix + "".trustCertificateKeyStoreType"", ""type"");"
70630,./TargetProjects/druid/extensions-core/mysql-metadata-storage/src/test/java/org/apache/druid/metadata/storage/mysql/MySQLMetadataStorageModuleTest.java,57,,"    properties.setProperty(propertyPrefix + "".trustCertificateKeyStorePassword"", ""secret"");"
70631,./TargetProjects/druid/extensions-core/orc-extensions/src/main/java/org/apache/druid/data/input/orc/OrcStructJsonProvider.java,170,,"    throw new UnsupportedOperationException(""Unused"");"
70632,./TargetProjects/druid/extensions-core/orc-extensions/src/test/java/org/apache/druid/data/input/orc/OrcHadoopInputRowParserTest.java,66,,"    String s1 = rows.get(0).getDimension(""col2"").get(0);"
70633,./TargetProjects/druid/extensions-core/orc-extensions/src/test/java/org/apache/druid/data/input/orc/OrcReaderTest.java,123,,"        new TimestampSpec(""ts"", ""millis"", null),"
70634,./TargetProjects/druid/extensions-core/orc-extensions/src/test/java/org/apache/druid/data/input/orc/OrcReaderTest.java,209,,"        new TimestampSpec(""time"", ""millis"", null),"
70635,./TargetProjects/druid/extensions-core/orc-extensions/src/test/java/org/apache/druid/data/input/orc/OrcStructConverterTest.java,366,,"    structType.addField(""int"", TypeDescription.createInt());"
70636,./TargetProjects/druid/extensions-core/orc-extensions/src/test/java/org/apache/druid/data/input/orc/OrcStructConverterTest.java,367,,"    structType.addField(""float"", TypeDescription.createFloat());"
70637,./TargetProjects/druid/extensions-core/parquet-extensions/src/main/java/org/apache/druid/data/input/parquet/simple/ParquetGroupJsonProvider.java,176,,"    throw new UnsupportedOperationException(""Unused"");"
70638,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/CompatParquetInputTest.java,88,,"    Assert.assertEquals(""2018-09-01T00:00:00.000Z"", rows.get(0).getTimestamp().toString());"
70639,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/CompatParquetReaderTest.java,50,,"        new TimestampSpec(""ts"", ""auto"", null),"
70640,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/CompatParquetReaderTest.java,93,,"    final String expectedJson = ""{\n"""
70641,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/CompatParquetReaderTest.java,115,,"        new TimestampSpec(""timestamp"", ""auto"", DateTimes.of(""2018-09-01T00:00:00.000Z"")),"
70642,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/CompatParquetReaderTest.java,115,,"        new TimestampSpec(""timestamp"", ""auto"", DateTimes.of(""2018-09-01T00:00:00.000Z"")),"
70643,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/CompatParquetReaderTest.java,120,,"        new JSONPathFieldSpec(JSONPathFieldType.ROOT, ""col"", ""col""),"
70644,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/CompatParquetReaderTest.java,279,,"                                + ""    }, {\n"""
70645,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/CompatParquetReaderTest.java,317,,"        new DimensionsSpec(DimensionsSpec.getDefaultSchemas(ImmutableList.of(""repeatedInt""))),"
70646,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/DecimalParquetReaderTest.java,51,,"        new TimestampSpec(""timestamp"", ""auto"", DateTimes.of(""2018-09-01T00:00:00.000Z"")),"
70647,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/DecimalParquetReaderTest.java,52,,"        new DimensionsSpec(DimensionsSpec.getDefaultSchemas(ImmutableList.of(""fixed_len_dec""))),"
70648,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/DecimalParquetReaderTest.java,57,,"        new JSONPathFieldSpec(JSONPathFieldType.PATH, ""metric1"", ""$.fixed_len_dec"")"
70649,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/DecimalParquetReaderTest.java,89,,"        new DimensionsSpec(DimensionsSpec.getDefaultSchemas(ImmutableList.of(""i32_dec""))),"
70650,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/FlattenSpecParquetInputTest.java,72,,"    Assert.assertEquals(""d1v1"", rows.get(0).getDimension(""dim1"").get(0));"
70651,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/FlattenSpecParquetInputTest.java,72,,"    Assert.assertEquals(""d1v1"", rows.get(0).getDimension(""dim1"").get(0));"
70652,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/FlattenSpecParquetInputTest.java,73,,"    Assert.assertEquals(""d2v1"", rows.get(0).getDimension(""dim2"").get(0));"
70653,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/FlattenSpecParquetInputTest.java,73,,"    Assert.assertEquals(""d2v1"", rows.get(0).getDimension(""dim2"").get(0));"
70654,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/FlattenSpecParquetInputTest.java,74,,"    Assert.assertEquals(""1"", rows.get(0).getDimension(""dim3"").get(0));"
70655,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/FlattenSpecParquetInputTest.java,75,,"    Assert.assertEquals(""listDim1v1"", rows.get(0).getDimension(""listDim"").get(0));"
70656,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/FlattenSpecParquetInputTest.java,75,,"    Assert.assertEquals(""listDim1v1"", rows.get(0).getDimension(""listDim"").get(0));"
70657,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/FlattenSpecParquetInputTest.java,76,,"    Assert.assertEquals(""listDim1v2"", rows.get(0).getDimension(""listDim"").get(1));"
70658,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/FlattenSpecParquetInputTest.java,77,,"    Assert.assertEquals(1, rows.get(0).getMetric(""metric1"").longValue());"
70659,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/FlattenSpecParquetReaderTest.java,68,,"    final String file = ""example/flattening/test_flat_1.parquet"";"
70660,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/FlattenSpecParquetReaderTest.java,70,,"        new TimestampSpec(""timestamp"", ""auto"", null),"
70661,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/FlattenSpecParquetReaderTest.java,70,,"        new TimestampSpec(""timestamp"", ""auto"", null),"
70662,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/FlattenSpecParquetReaderTest.java,71,,"        new DimensionsSpec(DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim1"", ""dim2"", ""dim3"", ""listDim""))),"
70663,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/FlattenSpecParquetReaderTest.java,71,,"        new DimensionsSpec(DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim1"", ""dim2"", ""dim3"", ""listDim""))),"
70664,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/FlattenSpecParquetReaderTest.java,71,,"        new DimensionsSpec(DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim1"", ""dim2"", ""dim3"", ""listDim""))),"
70665,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/FlattenSpecParquetReaderTest.java,71,,"        new DimensionsSpec(DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim1"", ""dim2"", ""dim3"", ""listDim""))),"
70666,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/FlattenSpecParquetReaderTest.java,83,,"    Assert.assertEquals(""d1v1"", rows.get(0).getDimension(""dim1"").get(0));"
70667,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/FlattenSpecParquetReaderTest.java,84,,"    Assert.assertEquals(""d2v1"", rows.get(0).getDimension(""dim2"").get(0));"
70668,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/FlattenSpecParquetReaderTest.java,86,,"    Assert.assertEquals(""listDim1v1"", rows.get(0).getDimension(""listDim"").get(0));"
70669,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/FlattenSpecParquetReaderTest.java,87,,"    Assert.assertEquals(""listDim1v2"", rows.get(0).getDimension(""listDim"").get(1));"
70670,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/FlattenSpecParquetReaderTest.java,88,,"    Assert.assertEquals(1, rows.get(0).getMetric(""metric1"").longValue());"
70671,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/FlattenSpecParquetReaderTest.java,138,,"        new DimensionsSpec(DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim1"", ""dim2"", ""dim3"", ""list""))),"
70672,./TargetProjects/druid/extensions-core/parquet-extensions/src/test/java/org/apache/druid/data/input/parquet/FlattenSpecParquetReaderTest.java,216,,"    final String file = ""example/flattening/test_nested_1.parquet"";"
70673,./TargetProjects/druid/extensions-core/postgresql-metadata-storage/src/test/java/org/apache/druid/firehose/PostgresqlFirehoseDatabaseConnectorTest.java,116,,"    JdbcAccessSecurityConfig securityConfig = newSecurityConfigEnforcingAllowList(ImmutableSet.of(""user""));"
70674,./TargetProjects/druid/extensions-core/postgresql-metadata-storage/src/test/java/org/apache/druid/firehose/PostgresqlFirehoseDatabaseConnectorTest.java,132,,"        return ""jdbc:postgresql://localhost:3306/test?user=maytas&password=secret&keyonly"";"
70675,./TargetProjects/druid/extensions-core/protobuf-extensions/src/test/java/org/apache/druid/data/input/protobuf/FileBasedProtobufBytesDecoderTest.java,36,,"    @SuppressWarnings(""unused"") // expected to create parser without exception"
70676,./TargetProjects/druid/extensions-core/protobuf-extensions/src/test/java/org/apache/druid/data/input/protobuf/FileBasedProtobufBytesDecoderTest.java,37,,"    FileBasedProtobufBytesDecoder decoder = new FileBasedProtobufBytesDecoder(""prototest.desc"", ""ProtoTestEvent"");"
70677,./TargetProjects/druid/extensions-core/protobuf-extensions/src/test/java/org/apache/druid/data/input/protobuf/ProtobufInputRowParserTest.java,68,,"            new StringDimensionSchema(""someOtherId""),"
70678,./TargetProjects/druid/extensions-core/protobuf-extensions/src/test/java/org/apache/druid/data/input/protobuf/ProtobufInputRowParserTest.java,69,,"            new StringDimensionSchema(""isValid"")"
70679,./TargetProjects/druid/extensions-core/protobuf-extensions/src/test/java/org/apache/druid/data/input/protobuf/ProtobufInputRowParserTest.java,76,,"                new JSONPathFieldSpec(JSONPathFieldType.PATH, ""bar0"", ""$.bar[0].bar"")"
70680,./TargetProjects/druid/extensions-core/protobuf-extensions/src/test/java/org/apache/druid/data/input/protobuf/ProtobufInputRowParserTest.java,208,,"        .setDescription(""description"")"
70681,./TargetProjects/druid/extensions-core/s3-extensions/src/main/java/org/apache/druid/storage/s3/S3DataSegmentMover.java,69,,"      String s3Bucket = MapUtils.getString(loadSpec, ""bucket"");"
70682,./TargetProjects/druid/extensions-core/s3-extensions/src/main/java/org/apache/druid/storage/s3/S3StorageDruidModule.java,158,,"    JsonConfigProvider.bind(binder, ""druid.storage"", S3InputDataConfig.class);"
70683,./TargetProjects/druid/extensions-core/s3-extensions/src/test/java/org/apache/druid/data/input/s3/S3InputSourceTest.java,515,,"        new TimestampSpec(""time"", ""auto"", null),"
70684,./TargetProjects/druid/extensions-core/s3-extensions/src/test/java/org/apache/druid/data/input/s3/S3InputSourceTest.java,516,,"        new DimensionsSpec(DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim1"", ""dim2""))),"
70685,./TargetProjects/druid/extensions-core/s3-extensions/src/test/java/org/apache/druid/data/input/s3/S3InputSourceTest.java,516,,"        new DimensionsSpec(DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim1"", ""dim2""))),"
70686,./TargetProjects/druid/extensions-core/s3-extensions/src/test/java/org/apache/druid/storage/s3/ObjectSummaryIteratorTest.java,55,,"        ImmutableList.of(""s3://b/foo/baz""),"
70687,./TargetProjects/druid/extensions-core/s3-extensions/src/test/java/org/apache/druid/storage/s3/ObjectSummaryIteratorTest.java,65,,"        ImmutableList.of(""s3://b/foo/bar1"", ""s3://b/foo/bar2"", ""s3://b/foo/bar3"", ""s3://b/foo/bar4"", ""s3://b/foo/baz""),"
70688,./TargetProjects/druid/extensions-core/s3-extensions/src/test/java/org/apache/druid/storage/s3/ObjectSummaryIteratorTest.java,65,,"        ImmutableList.of(""s3://b/foo/bar1"", ""s3://b/foo/bar2"", ""s3://b/foo/bar3"", ""s3://b/foo/bar4"", ""s3://b/foo/baz""),"
70689,./TargetProjects/druid/extensions-core/s3-extensions/src/test/java/org/apache/druid/storage/s3/ObjectSummaryIteratorTest.java,65,,"        ImmutableList.of(""s3://b/foo/bar1"", ""s3://b/foo/bar2"", ""s3://b/foo/bar3"", ""s3://b/foo/bar4"", ""s3://b/foo/baz""),"
70690,./TargetProjects/druid/extensions-core/s3-extensions/src/test/java/org/apache/druid/storage/s3/ObjectSummaryIteratorTest.java,65,,"        ImmutableList.of(""s3://b/foo/bar1"", ""s3://b/foo/bar2"", ""s3://b/foo/bar3"", ""s3://b/foo/bar4"", ""s3://b/foo/baz""),"
70691,./TargetProjects/druid/extensions-core/s3-extensions/src/test/java/org/apache/druid/storage/s3/S3DataSegmentMoverTest.java,59,,"          ""key"","
70692,./TargetProjects/druid/extensions-core/s3-extensions/src/test/java/org/apache/druid/storage/s3/S3DataSegmentMoverTest.java,60,,"          ""baseKey/test/2013-01-01T00:00:00.000Z_2013-01-02T00:00:00.000Z/1/0/index.zip"","
70693,./TargetProjects/druid/extensions-core/s3-extensions/src/test/java/org/apache/druid/storage/s3/S3DataSegmentMoverTest.java,61,,"          ""bucket"","
70694,./TargetProjects/druid/extensions-core/s3-extensions/src/test/java/org/apache/druid/storage/s3/S3DataSegmentMoverTest.java,64,,"      ImmutableList.of(""dim1"", ""dim1""),"
70695,./TargetProjects/druid/extensions-core/s3-extensions/src/test/java/org/apache/druid/storage/s3/S3DataSegmentMoverTest.java,84,,"        ImmutableMap.of(""baseKey"", ""targetBaseKey"", ""bucket"", ""archive"")"
70696,./TargetProjects/druid/extensions-core/s3-extensions/src/test/java/org/apache/druid/storage/s3/S3DataSegmentMoverTest.java,84,,"        ImmutableMap.of(""baseKey"", ""targetBaseKey"", ""bucket"", ""archive"")"
70697,./TargetProjects/druid/extensions-core/s3-extensions/src/test/java/org/apache/druid/storage/s3/S3DataSegmentMoverTest.java,147,,"            ""DOES NOT EXIST"""
70698,./TargetProjects/druid/extensions-core/s3-extensions/src/test/java/org/apache/druid/storage/s3/S3DataSegmentPullerTest.java,64,,"    objectSummary.setKey(keyPrefix + ""/renames-0.gz"");"
70699,./TargetProjects/druid/extensions-core/s3-extensions/src/test/java/org/apache/druid/storage/s3/S3DataSegmentPusherTest.java,84,,"    EasyMock.expect(s3Client.getBucketAcl(EasyMock.eq(""bucket""))).andReturn(acl).once();"
70700,./TargetProjects/druid/extensions-core/s3-extensions/src/test/java/org/apache/druid/storage/s3/S3TaskLogsTest.java,78,,"    String ownerId = ""test_owner"";"
70701,./TargetProjects/druid/extensions-core/s3-extensions/src/test/java/org/apache/druid/storage/s3/S3TimestampVersionedDataFinderTest.java,40,,"    String bucket = ""bucket"";"
70702,./TargetProjects/druid/extensions-core/s3-extensions/src/test/java/org/apache/druid/storage/s3/S3TimestampVersionedDataFinderTest.java,41,,"    String keyPrefix = ""prefix/dir/0"";"
70703,./TargetProjects/druid/extensions-core/s3-extensions/src/test/java/org/apache/druid/storage/s3/S3TimestampVersionedDataFinderTest.java,72,,"    URI latest = finder.getLatestVersion(URI.create(StringUtils.format(""s3://%s/%s"", bucket, keyPrefix)), pattern);"
70704,./TargetProjects/druid/extensions-core/stats/src/main/java/org/apache/druid/query/aggregation/variance/VarianceBufferAggregator.java,150,,"      inspector.visit(""selector"", selector);"
70705,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceAggregatorFactoryTest.java,48,,"                  new VarianceAggregatorFactory(""variance"", ""col""),"
70706,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceAggregatorFactoryTest.java,49,,"                  new VarianceFoldingAggregatorFactory(""varianceFold"", ""col"", null)"
70707,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceAggregatorFactoryTest.java,77,,"    VarianceAggregatorFactory target = new VarianceAggregatorFactory(""test"", ""test"", null, null);"
70708,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceGroupByQueryTest.java,106,,"        .setDimensions(new DefaultDimensionSpec(""quality"", ""alias""))"
70709,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceGroupByQueryTest.java,106,,"        .setDimensions(new DefaultDimensionSpec(""quality"", ""alias""))"
70710,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceGroupByQueryTest.java,113,,"        new VarianceTestHelper.RowBuilder(new String[]{""alias"", ""index_stddev"", ""index_var""});"
70711,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceGroupByQueryTest.java,113,,"        new VarianceTestHelper.RowBuilder(new String[]{""alias"", ""index_stddev"", ""index_var""});"
70712,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceGroupByQueryTest.java,116,,"        .add(""2011-04-01"", ""automotive"", 0d, 0d)"
70713,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceGroupByQueryTest.java,116,,"        .add(""2011-04-01"", ""automotive"", 0d, 0d)"
70714,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceGroupByQueryTest.java,117,,"        .add(""2011-04-01"", ""business"", 0d, 0d)"
70715,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceGroupByQueryTest.java,118,,"        .add(""2011-04-01"", ""entertainment"", 0d, 0d)"
70716,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceGroupByQueryTest.java,119,,"        .add(""2011-04-01"", ""health"", 0d, 0d)"
70717,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceGroupByQueryTest.java,120,,"        .add(""2011-04-01"", ""mezzanine"", 737.0179286322613d, 543195.4271253889d)"
70718,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceGroupByQueryTest.java,121,,"        .add(""2011-04-01"", ""news"", 0d, 0d)"
70719,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceGroupByQueryTest.java,122,,"        .add(""2011-04-01"", ""premium"", 726.6322593583996d, 527994.4403402924d)"
70720,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceGroupByQueryTest.java,123,,"        .add(""2011-04-01"", ""technology"", 0d, 0d)"
70721,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceGroupByQueryTest.java,124,,"        .add(""2011-04-01"", ""travel"", 0d, 0d)"
70722,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceGroupByQueryTest.java,126,,"        .add(""2011-04-02"", ""automotive"", 0d, 0d)"
70723,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceGroupByQueryTest.java,151,,"            new LongSumAggregatorFactory(""idx"", ""index"")"
70724,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceGroupByQueryTest.java,151,,"            new LongSumAggregatorFactory(""idx"", ""index"")"
70725,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceGroupByQueryTest.java,158,,"        new VarianceTestHelper.RowBuilder(new String[]{""alias"", ""rows"", ""idx"", ""index_stddev"", ""index_var""});"
70726,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceTimeseriesQueryTest.java,99,,"                    ""index"", 6626.151596069336,"
70727,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceTopNQueryTest.java,83,,"                        new DoubleMaxAggregatorFactory(""maxIndex"", ""index""),"
70728,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceTopNQueryTest.java,83,,"                        new DoubleMaxAggregatorFactory(""maxIndex"", ""index""),"
70729,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceTopNQueryTest.java,84,,"                        new DoubleMinAggregatorFactory(""minIndex"", ""index"")"
70730,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/sql/VarianceSqlAggregatorTest.java,91,,"                                                 .addAll(DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim1"", ""dim2"", ""dim3"")))"
70731,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/sql/VarianceSqlAggregatorTest.java,91,,"                                                 .addAll(DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim1"", ""dim2"", ""dim3"")))"
70732,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/sql/VarianceSqlAggregatorTest.java,179,,"        ""SELECT\n"""
70733,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/sql/VarianceSqlAggregatorTest.java,183,,"        + ""FROM numfoo"","
70734,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/sql/VarianceSqlAggregatorTest.java,191,,"                          new VarianceAggregatorFactory(""a0:agg"", ""d1"", ""population"", ""double""),"
70735,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/sql/VarianceSqlAggregatorTest.java,191,,"                          new VarianceAggregatorFactory(""a0:agg"", ""d1"", ""population"", ""double""),"
70736,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/sql/VarianceSqlAggregatorTest.java,191,,"                          new VarianceAggregatorFactory(""a0:agg"", ""d1"", ""population"", ""double""),"
70737,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/sql/VarianceSqlAggregatorTest.java,192,,"                          new VarianceAggregatorFactory(""a1:agg"", ""f1"", ""population"", ""float""),"
70738,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/sql/VarianceSqlAggregatorTest.java,192,,"                          new VarianceAggregatorFactory(""a1:agg"", ""f1"", ""population"", ""float""),"
70739,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/sql/VarianceSqlAggregatorTest.java,193,,"                          new VarianceAggregatorFactory(""a2:agg"", ""l1"", ""population"", ""long"")"
70740,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/sql/VarianceSqlAggregatorTest.java,193,,"                          new VarianceAggregatorFactory(""a2:agg"", ""l1"", ""population"", ""long"")"
70741,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/sql/VarianceSqlAggregatorTest.java,238,,"                          new VarianceAggregatorFactory(""a0:agg"", ""d1"", ""sample"", ""double""),"
70742,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/sql/VarianceSqlAggregatorTest.java,527,,"                      new VarianceAggregatorFactory(""a4:agg"", ""l1"", ""population"", ""long""),"
70743,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/sql/VarianceSqlAggregatorTest.java,528,,"                      new VarianceAggregatorFactory(""a5:agg"", ""l1"", ""sample"", ""long""),"
70744,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/sql/VarianceSqlAggregatorTest.java,529,,"                      new VarianceAggregatorFactory(""a6:agg"", ""l1"", ""sample"", ""long""),"
70745,./TargetProjects/druid/extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/sql/VarianceSqlAggregatorTest.java,579,,"                                    selector(""dim1"", ""nonexistent"", null)"
70746,./TargetProjects/druid/indexing-hadoop/src/main/java/org/apache/druid/indexer/hadoop/DatasourceInputFormat.java,263,,"    final String specString = conf.get(StringUtils.format(""%s.%s"", CONF_SCHEMA, dataSource));"
70747,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/BatchDeltaIngestionTest.java,99,,"                  ""type"","
70748,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/BatchDeltaIngestionTest.java,119,,"            ""dataSource"","
70749,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/BatchDeltaIngestionTest.java,120,,"            ""ingestionSpec"","
70750,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/BatchDeltaIngestionTest.java,123,,"                ""testds"","
70751,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/BatchDeltaIngestionTest.java,124,,"                ""interval"","
70752,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/BatchDeltaIngestionTest.java,127,,"            ""segments"","
70753,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/BatchDeltaIngestionTest.java,135,,"            ""time"", DateTimes.of(""2014-10-22T00:00:00.000Z""),"
70754,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/BatchDeltaIngestionTest.java,135,,"            ""time"", DateTimes.of(""2014-10-22T00:00:00.000Z""),"
70755,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/BatchDeltaIngestionTest.java,136,,"            ""host"", ImmutableList.of(""a.example.com""),"
70756,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/BatchDeltaIngestionTest.java,136,,"            ""host"", ImmutableList.of(""a.example.com""),"
70757,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/BatchDeltaIngestionTest.java,137,,"            ""visited_sum"", 100L,"
70758,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/BatchDeltaIngestionTest.java,138,,"            ""unique_hosts"", 1.0d"
70759,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/BatchDeltaIngestionTest.java,141,,"            ""time"", DateTimes.of(""2014-10-22T01:00:00.000Z""),"
70760,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/BatchDeltaIngestionTest.java,142,,"            ""host"", ImmutableList.of(""b.example.com""),"
70761,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/BatchDeltaIngestionTest.java,174,,"        new LongSumAggregatorFactory(""visited_sum2"", ""visited_sum""),"
70762,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/BatchDeltaIngestionTest.java,175,,"        new HyperUniquesAggregatorFactory(""unique_hosts2"", ""unique_hosts"")"
70763,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/DataSegmentAndIndexZipFilePathTest.java,63,,"    String tmpPath = ""tmpPath"";"
70764,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/DataSegmentAndIndexZipFilePathTest.java,64,,"    String finalPath = ""finalPath"";"
70765,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/DetermineHashedPartitionsJobTest.java,78,,"                DetermineHashedPartitionsJobTest.class.getResource(""/druid.test.data.with.duplicate.rows.tsv"").getPath(),"
70766,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/DeterminePartitionsJobTest.java,88,,"                        {null, ""c.example.com""},"
70767,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/DeterminePartitionsJobTest.java,89,,"                        {""c.example.com"", ""e.example.com""},"
70768,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/DeterminePartitionsJobTest.java,90,,"                        {""e.example.com"", ""g.example.com""},"
70769,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/DeterminePartitionsJobTest.java,91,,"                        {""g.example.com"", ""i.example.com""},"
70770,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/DeterminePartitionsJobTest.java,96,,"                    ""2014102200,a.example.com,CN,100"","
70771,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/DeterminePartitionsJobTest.java,99,,"                    ""2014102200,d.example.com,US,250"","
70772,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/DeterminePartitionsJobTest.java,100,,"                    ""2014102200,e.example.com,US,123"","
70773,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/DeterminePartitionsJobTest.java,101,,"                    ""2014102200,f.example.com,US,567"","
70774,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/DeterminePartitionsJobTest.java,102,,"                    ""2014102200,g.example.com,US,11"","
70775,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/DeterminePartitionsJobTest.java,103,,"                    ""2014102200,h.example.com,US,251"","
70776,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/DeterminePartitionsJobTest.java,104,,"                    ""2014102200,i.example.com,US,963"","
70777,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/DeterminePartitionsJobTest.java,105,,"                    ""2014102200,j.example.com,US,333"""
70778,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/DeterminePartitionsJobTest.java,185,,"                        {null, ""f.example.com""},"
70779,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/HadoopDruidIndexerMapperTest.java,68,,"                      DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim1"", ""dim1t"", ""dim2"")),"
70780,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/HadoopDruidIndexerMapperTest.java,68,,"                      DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim1"", ""dim1t"", ""dim2"")),"
70781,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/HadoopDruidIndexerMapperTest.java,68,,"                      DimensionsSpec.getDefaultSchemas(ImmutableList.of(""dim1"", ""dim1t"", ""dim2"")),"
70782,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/HadoopDruidIndexerMapperTest.java,116,,"        ImmutableMap.of(""t"", ""2000-01-01T00:00:00.000Z"", ""dim1"", ""x"", ""m1"", 1.0),"
70783,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/HadoopDruidIndexerMapperTest.java,132,,"                    new SelectorDimFilter(""dim1"", ""foo"", null),"
70784,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/HadoopIngestionSpecTest.java,58,,"          ""{\n"""
70785,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/HadoopIngestionSpecTest.java,66,,"          + ""        }\n"""
70786,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/HadoopIngestionSpecTest.java,67,,"          + ""    }\n"""
70787,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/IndexGeneratorCombinerTest.java,73,,"                            new DimensionsSpec(DimensionsSpec.getDefaultSchemas(ImmutableList.of(""host"", ""keywords"")), null, null)"
70788,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/IndexGeneratorCombinerTest.java,73,,"                            new DimensionsSpec(DimensionsSpec.getDefaultSchemas(ImmutableList.of(""host"", ""keywords"")), null, null)"
70789,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/IndexGeneratorCombinerTest.java,80,,"                    new LongSumAggregatorFactory(""visited_sum"", ""visited""),"
70790,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/IndexGeneratorCombinerTest.java,80,,"                    new LongSumAggregatorFactory(""visited_sum"", ""visited""),"
70791,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/IndexGeneratorCombinerTest.java,81,,"                    new HyperUniquesAggregatorFactory(""unique_hosts"", ""host"")"
70792,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/IndexGeneratorCombinerTest.java,166,,"            ""keywords"", Arrays.asList(""foo"", ""bar""),"
70793,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/IndexGeneratorCombinerTest.java,166,,"            ""keywords"", Arrays.asList(""foo"", ""bar""),"
70794,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/IndexGeneratorJobTest.java,88,,"      new LongSumAggregatorFactory(""visited_num"", ""visited_num""),"
70795,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/IndexGeneratorJobTest.java,89,,"      new HyperUniquesAggregatorFactory(""unique_hosts"", ""host"")"
70796,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/IndexGeneratorJobTest.java,104,,"            ""single"","
70797,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/IndexGeneratorJobTest.java,108,,"                    {null, ""c.example.com""},"
70798,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/IndexGeneratorJobTest.java,109,,"                    {""c.example.com"", ""e.example.com""},"
70799,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/IndexGeneratorJobTest.java,110,,"                    {""e.example.com"", ""g.example.com""},"
70800,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/IndexGeneratorJobTest.java,111,,"                    {""g.example.com"", ""i.example.com""},"
70801,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/IndexGeneratorJobTest.java,123,,"                ""2014102200,a.example.com,100"","
70802,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/IndexGeneratorJobTest.java,147,,"                    new TimestampSpec(""timestamp"", ""yyyyMMddHH"", null),"
70803,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/IndexGeneratorJobTest.java,147,,"                    new TimestampSpec(""timestamp"", ""yyyyMMddHH"", null),"
70804,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/IndexGeneratorJobTest.java,159,,"            ""website"""
70805,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/IndexGeneratorJobTest.java,163,,"            ""hashed"","
70806,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/IndexGeneratorJobTest.java,164,,"            ""2014-10-22T00:00:00Z/P1D"","
70807,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/InputRowSerdeTest.java,126,,"        new LongSumAggregatorFactory(""m2out"", ""m2""),"
70808,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/SortableBytesTest.java,38,,"    SortableBytes thingie1 = new SortableBytes(toBytes(""test1""), toBytes(""a""));"
70809,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/hadoop/DatasourceIngestionSpecTest.java,47,,"        ""test"","
70810,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/hadoop/DatasourceInputFormatTest.java,81,,"                ""test1"","
70811,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/hadoop/DatasourceInputFormatTest.java,83,,"                ""ver"","
70812,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/hadoop/DatasourceInputFormatTest.java,85,,"                    ""type"", ""local"","
70813,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/hadoop/DatasourceInputFormatTest.java,86,,"                    ""path"", ""/tmp/index1.zip"""
70814,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/hadoop/DatasourceInputFormatTest.java,88,,"                ImmutableList.of(""host""),"
70815,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/hadoop/DatasourceInputFormatTest.java,89,,"                ImmutableList.of(""visited_sum"", ""unique_hosts""),"
70816,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/hadoop/DatasourceInputFormatTest.java,89,,"                ImmutableList.of(""visited_sum"", ""unique_hosts""),"
70817,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/hadoop/DatasourceRecordReaderTest.java,59,,"        ImmutableList.of(""host""),"
70818,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/hadoop/DatasourceRecordReaderTest.java,60,,"        ImmutableList.of(""visited_sum"", ""unique_hosts""),"
70819,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/hadoop/DatasourceRecordReaderTest.java,60,,"        ImmutableList.of(""visited_sum"", ""unique_hosts""),"
70820,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/hadoop/DatasourceRecordReaderTest.java,109,,"            ""time"", DateTimes.of(""2014-10-22T00:00:00.000Z""),"
70821,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/partitions/HashedPartitionsSpecTest.java,65,,"        ""getMaxRowsPerSegment"","
70822,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/partitions/HashedPartitionsSpecTest.java,131,,"                    + ""\""type\"":\""hashed\"""""
70823,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/path/DatasourcePathSpecTest.java,77,,"        Intervals.of(""2000/3000""),"
70824,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/path/DatasourcePathSpecTest.java,104,,"                ""ver"","
70825,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/path/DatasourcePathSpecTest.java,106,,"                    ""type"", ""local"","
70826,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/path/DatasourcePathSpecTest.java,110,,"                ImmutableList.of(""visited_sum"", ""unique_hosts""),"
70827,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/path/GranularityPathSpecTest.java,151,,"    UserGroupInformation.setLoginUser(UserGroupInformation.createUserForTesting(""test"", new String[]{""testGroup""}));"
70828,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/path/GranularityPathSpecTest.java,281,,"    sb.append(""\"","");"
70829,./TargetProjects/druid/indexing-hadoop/src/test/java/org/apache/druid/indexer/path/HadoopGlobPathSplitterTest.java,36,,"    String path = ""/a/b/c"";"
70830,./TargetProjects/druid/indexing-service/src/main/java/org/apache/druid/indexing/common/task/HadoopIndexTask.java,345,,"          ""runTask"","
70831,./TargetProjects/druid/indexing-service/src/main/java/org/apache/druid/indexing/common/task/HadoopIndexTask.java,749,,"  @SuppressWarnings(""unused"")"
70832,./TargetProjects/druid/indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTask.java,1127,,"      return Response.status(Response.Status.SERVICE_UNAVAILABLE).entity(""task is not running yet"").build();"
70833,./TargetProjects/druid/indexing-service/src/main/java/org/apache/druid/indexing/overlord/HeapMemoryTaskStorage.java,97,,"    Preconditions.checkNotNull(taskid, ""taskid"");"
70834,./TargetProjects/druid/indexing-service/src/main/java/org/apache/druid/indexing/overlord/RemoteTaskRunner.java,514,,"    return Preconditions.checkNotNull(worker, ""worker"").isRunningTask(taskId);"
70835,./TargetProjects/druid/indexing-service/src/main/java/org/apache/druid/indexing/overlord/TaskLockbox.java,145,,"        final Task task = Preconditions.checkNotNull(taskAndLock.lhs, ""task"");"
70836,./TargetProjects/druid/indexing-service/src/main/java/org/apache/druid/indexing/overlord/TaskQueue.java,373,,"      Preconditions.checkNotNull(task, ""task"");"
70837,./TargetProjects/druid/indexing-service/src/main/java/org/apache/druid/indexing/overlord/hrtr/HttpRemoteTaskRunner.java,348,,"  @SuppressWarnings(""GuardedBy"") // Read on workersWithUnacknowledgedTask is safe"
70838,./TargetProjects/druid/indexing-service/src/main/java/org/apache/druid/indexing/overlord/hrtr/HttpRemoteTaskRunnerResource.java,59,,"      return Response.status(Response.Status.FORBIDDEN).entity(""HttpRemoteTaskRunner is NULL."").build();"
70839,./TargetProjects/druid/indexing-service/src/main/java/org/apache/druid/indexing/overlord/http/OverlordResource.java,127,,"  private static final List API_TASK_STATES = ImmutableList.of(""pending"", ""waiting"", ""running"", ""complete"");"
70840,./TargetProjects/druid/indexing-service/src/main/java/org/apache/druid/indexing/overlord/http/OverlordResource.java,193,,"                                     ""error"","
70841,./TargetProjects/druid/indexing-service/src/main/java/org/apache/druid/indexing/overlord/http/OverlordResource.java,248,,"  public Response getTaskPayload(@PathParam(""taskid"") String taskid)"
70842,./TargetProjects/druid/indexing-service/src/main/java/org/apache/druid/indexing/overlord/supervisor/SupervisorManager.java,85,,"    Preconditions.checkState(started, ""SupervisorManager not started"");"
70843,./TargetProjects/druid/indexing-service/src/main/java/org/apache/druid/indexing/overlord/supervisor/SupervisorResource.java,203,,"                           .entity(ImmutableMap.of(""error"", StringUtils.format(""[%s] does not exist"", id)))"
70844,./TargetProjects/druid/indexing-service/src/main/java/org/apache/druid/indexing/overlord/supervisor/SupervisorResource.java,203,,"                           .entity(ImmutableMap.of(""error"", StringUtils.format(""[%s] does not exist"", id)))"
70845,./TargetProjects/druid/indexing-service/src/main/java/org/apache/druid/indexing/seekablestream/supervisor/SeekableStreamSupervisor.java,1331,,"      @SuppressWarnings(""unchecked"")"
70846,./TargetProjects/druid/indexing-service/src/main/java/org/apache/druid/indexing/worker/WorkerTaskManager.java,270,,"    Preconditions.checkState(lifecycleLock.awaitStarted(1, TimeUnit.SECONDS), ""not started"");"
70847,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/appenderator/ActionBasedUsedSegmentCheckerTest.java,47,,"            new RetrieveUsedSegmentsAction(""bar"", Intervals.of(""2002/P1D""), null, Segments.ONLY_VISIBLE)"
70848,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/appenderator/ActionBasedUsedSegmentCheckerTest.java,47,,"            new RetrieveUsedSegmentsAction(""bar"", Intervals.of(""2002/P1D""), null, Segments.ONLY_VISIBLE)"
70849,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/appenderator/ActionBasedUsedSegmentCheckerTest.java,70,,"                ""foo"","
70850,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/appenderator/ActionBasedUsedSegmentCheckerTest.java,72,,"                ImmutableList.of(Intervals.of(""2000/P1D""), Intervals.of(""2001/P1D"")),"
70851,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/TaskLockTest.java,44,,"        ""groupId"","
70852,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/TaskLockTest.java,45,,"        ""dataSource"","
70853,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/TaskLockTest.java,46,,"        Intervals.of(""2019/2020""),"
70854,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/TaskLockTest.java,47,,"        ""version"","
70855,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/actions/SegmentAllocateActionTest.java,886,,"                           new HashBasedNumberedShardSpec(0, 2, 0, 2, ImmutableList.of(""dim1""), null, objectMapper)"
70856,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/actions/TaskLocksTest.java,75,,"            .interval(Intervals.of(""2017-01-01/2017-01-02""))"
70857,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/actions/TaskLocksTest.java,82,,"            .interval(Intervals.of(""2017-01-02/2017-01-03""))"
70858,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/actions/TimeChunkLockAcquireActionTest.java,47,,"        Intervals.of(""2017-01-01/2017-01-02""),"
70859,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/actions/TimeChunkLockTryAcquireActionTest.java,47,,"        Intervals.of(""2017-01-01/2017-01-02"")"
70860,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/AppenderatorDriverRealtimeIndexTaskTest.java,317,,"            ImmutableMap.of(""t"", now.getMillis(), ""dim1"", ""foo"", ""met1"", ""1"")"
70861,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/AppenderatorDriverRealtimeIndexTaskTest.java,317,,"            ImmutableMap.of(""t"", now.getMillis(), ""dim1"", ""foo"", ""met1"", ""1"")"
70862,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/AppenderatorDriverRealtimeIndexTaskTest.java,317,,"            ImmutableMap.of(""t"", now.getMillis(), ""dim1"", ""foo"", ""met1"", ""1"")"
70863,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/AppenderatorDriverRealtimeIndexTaskTest.java,348,,"            ImmutableMap.of(""t"", now.getMillis(), ""dim2"", ""bar"", ""met1"", 2.0)"
70864,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/AppenderatorDriverRealtimeIndexTaskTest.java,348,,"            ImmutableMap.of(""t"", now.getMillis(), ""dim2"", ""bar"", ""met1"", 2.0)"
70865,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/AppenderatorDriverRealtimeIndexTaskTest.java,364,,"    Assert.assertEquals(2, sumMetric(task, null, ""rows"").longValue());"
70866,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/AppenderatorDriverRealtimeIndexTaskTest.java,378,,"          publishedSegment + "" missing from handoff callbacks: "" + handOffCallbacks,"
70867,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/AppenderatorDriverRealtimeIndexTaskTest.java,594,,"            new ExpressionTransform(""dim1t"", ""concat(dim1,dim1)"", ExprMacroTable.nil())"
70868,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/AppenderatorDriverRealtimeIndexTaskTest.java,832,,"                ""notnumber"","
70869,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/CompactionTaskParallelRunTest.java,230,,"        .tuningConfig(newTuningConfig(new SingleDimensionPartitionsSpec(7, null, ""dim"", false), 2, true))"
70870,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/CompactionTaskRunTest.java,130,,"      new DimensionsSpec(DimensionsSpec.getDefaultSchemas(Arrays.asList(""ts"", ""dim""))),"
70871,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/CompactionTaskRunTest.java,132,,"      Arrays.asList(""ts"", ""dim"", ""val""),"
70872,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/CompactionTaskRunTest.java,238,,"        .interval(Intervals.of(""2014-01-01/2014-01-02""))"
70873,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/CompactionTaskRunTest.java,250,,"          Intervals.of(""2014-01-01T0%d:00:00/2014-01-01T0%d:00:00"", i, i + 1),"
70874,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/CompactionTaskTest.java,159,,"  private static final String MIXED_TYPE_COLUMN = ""string_to_double"";"
70875,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/CompactionTaskTest.java,606,,"    mapper.registerSubtypes(new NamedType(OldCompactionTaskWithAnyTuningConfigType.class, ""compact""));"
70876,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/FilteringCloseableInputRowIteratorTest.java,69,,"        newRow(DateTimes.of(""2020-01-01""), 10, 200),"
70877,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/IndexIngestionSpecTest.java,52,,"            ""dataSource"","
70878,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/IndexTaskTest.java,137,,"  private static final TimestampSpec DEFAULT_TIMESTAMP_SPEC = new TimestampSpec(""ts"", ""auto"", null);"
70879,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/IndexTaskTest.java,139,,"      DimensionsSpec.getDefaultSchemas(Arrays.asList(""ts"", ""dim""))"
70880,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/IndexTaskTest.java,145,,"      Arrays.asList(""ts"", ""dim"", ""val""),"
70881,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/IndexTaskTest.java,214,,"    File tmpFile = File.createTempFile(""druid"", ""index"", tmpDir);"
70882,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/IndexTaskTest.java,214,,"    File tmpFile = File.createTempFile(""druid"", ""index"", tmpDir);"
70883,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/IndexTaskTest.java,217,,"      writer.write(""2014-01-01T00:00:10Z,a,1\n"");"
70884,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/IndexTaskTest.java,218,,"      writer.write(""2014-01-01T01:00:20Z,b,1\n"");"
70885,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/IndexTaskTest.java,219,,"      writer.write(""2014-01-01T02:00:30Z,c,1\n"");"
70886,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/IndexTaskTest.java,244,,"    Assert.assertEquals(Intervals.of(""2014/P1D""), segments.get(0).getInterval());"
70887,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/IndexTaskTest.java,284,,"                ""dimt"","
70888,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/IndexTaskTest.java,285,,"                ""dimtarray1"","
70889,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/IndexTaskTest.java,286,,"                ""dimtarray2"","
70890,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/IndexTaskTest.java,287,,"                ""dimtnum_array"""
70891,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/IndexTaskTest.java,424,,"                Collections.singletonList(Intervals.of(""2014-01-01/2014-01-02""))"
70892,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/IndexTaskTest.java,736,,"      writer.write(""time,d,val\n"");"
70893,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/IndexTaskTest.java,740,,"    final TimestampSpec timestampSpec = new TimestampSpec(""time"", ""auto"", null);"
70894,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/IndexTaskTest.java,1080,,"    EasyMock.expect(mockDataSegment1.getVersion()).andReturn(""dummyString"").once();"
70895,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/IndexTaskTest.java,1087,,"    EasyMock.expect(mockDataSegment1.getDataSource()).andReturn(""MockDataSource"").once();"
70896,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/IndexTaskTest.java,1356,,"            new LongDimensionSchema(""dimLong""),"
70897,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/IndexTaskTest.java,1357,,"            new FloatDimensionSchema(""dimFloat"")"
70898,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/IndexTaskTest.java,1423,,"            ""Timestamp[99999999999-01-01T00:00:10Z] is unparseable! Event: {time=99999999999-01-01T00:00:10Z, dim=b, dimLong=2, dimFloat=3.0, val=1}"","
70899,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/IndexTaskTest.java,1425,,"            ""Timestamp[unparseable] is unparseable! Event: {time=unparseable, dim=a, dimLong=2, dimFloat=3.0, val=1}"""
70900,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/RealtimeIndexTaskTest.java,218,,"            ImmutableMap.of(""t"", now.getMillis(), ""dim1"", ""foo"", ""met1"", ""1"")"
70901,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/RealtimeIndexTaskTest.java,218,,"            ImmutableMap.of(""t"", now.getMillis(), ""dim1"", ""foo"", ""met1"", ""1"")"
70902,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/RealtimeIndexTaskTest.java,218,,"            ImmutableMap.of(""t"", now.getMillis(), ""dim1"", ""foo"", ""met1"", ""1"")"
70903,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/RealtimeIndexTaskTest.java,258,,"            ImmutableMap.of(""t"", now.getMillis(), ""dim2"", ""bar"", ""met1"", 2.0)"
70904,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/RealtimeIndexTaskTest.java,258,,"            ImmutableMap.of(""t"", now.getMillis(), ""dim2"", ""bar"", ""met1"", 2.0)"
70905,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/RealtimeIndexTaskTest.java,278,,"    Assert.assertEquals(2, sumMetric(task, null, ""rows"").longValue());"
70906,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/RealtimeIndexTaskTest.java,308,,"            new ExpressionTransform(""dim1t"", ""concat(dim1,dim1)"", ExprMacroTable.nil())"
70907,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/ShardSpecsTest.java,60,,"    shardSpecMap.put(Intervals.of(""2014-01-01T00:00:00.000Z/2014-01-02T00:00:00.000Z""), ImmutableList.of(spec1, spec2));"
70908,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/TaskSerdeTest.java,237,,"                ""foo"","
70909,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/TaskSerdeTest.java,240,,"                new AggregatorFactory[]{new DoubleSumAggregatorFactory(""met"", ""met"")},"
70910,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/TaskSerdeTest.java,248,,"            new IndexIOConfig(null, new LocalInputSource(new File(""lol""), ""rofl""), new NoopInputFormat(), true, false),"
70911,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/TaskSerdeTest.java,477,,"        Intervals.of(""2010-01-01/P1D""),"
70912,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/AbstractMultiPhaseParallelIndexingTest.java,217,,"              new AggregatorFactory[]{new LongSumAggregatorFactory(""val"", ""val"")},"
70913,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/DimensionCardinalityReportTest.java,118,,"            Intervals.of(""1970-01-01/P1D""),"
70914,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/DimensionCardinalityReportTest.java,120,,"            Intervals.of(""1970-01-02/P1D""),"
70915,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/HashPartitionAdjustingCorePartitionSizeTest.java,57,,"      DimensionsSpec.getDefaultSchemas(Arrays.asList(""ts"", ""dim1"", ""dim2""))"
70916,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/HashPartitionMultiPhaseParallelIndexingTest.java,71,,"      DimensionsSpec.getDefaultSchemas(Arrays.asList(""ts"", ""dim1"", ""dim2""))"
70917,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/HashPartitionMultiPhaseParallelIndexingTest.java,71,,"      DimensionsSpec.getDefaultSchemas(Arrays.asList(""ts"", ""dim1"", ""dim2""))"
70918,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/PartialDimensionCardinalityTaskTest.java,273,,"          ParallelIndexTestingFactory.createRowFromMap(0, ImmutableMap.of(""dim1"", ""a"", ""dim2"", ""1"")) + ""\n"" +"
70919,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/PartialDimensionCardinalityTaskTest.java,273,,"          ParallelIndexTestingFactory.createRowFromMap(0, ImmutableMap.of(""dim1"", ""a"", ""dim2"", ""1"")) + ""\n"" +"
70920,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/RangePartitionAdjustingCorePartitionSizeTest.java,56,,"      DimensionsSpec.getDefaultSchemas(Arrays.asList(""ts"", ""dim1"", ""dim2""))"
70921,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/SinglePhaseParallelIndexingTest.java,83,,"  private static final Interval INTERVAL_TO_INDEX = Intervals.of(""2017-12/P1M"");"
70922,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/SinglePhaseParallelIndexingTest.java,193,,"        ? getStorageCoordinator().retrieveAllUsedSegments(""dataSource"", Segments.ONLY_VISIBLE)"
70923,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/SinglePhaseParallelIndexingTest.java,461,,"                  new LongSumAggregatorFactory(""val"", ""val"")"
70924,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/TaskMonitorTest.java,85,,"            new TestTaskSpec(""specId"" + i, ""groupId"", ""supervisorId"", null, new IntegerInputSplit(i), 100L, 0, false)"
70925,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/TaskMonitorTest.java,85,,"            new TestTaskSpec(""specId"" + i, ""groupId"", ""supervisorId"", null, new IntegerInputSplit(i), 100L, 0, false)"
70926,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/TaskMonitorTest.java,85,,"            new TestTaskSpec(""specId"" + i, ""groupId"", ""supervisorId"", null, new IntegerInputSplit(i), 100L, 0, false)"
70927,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/common/tasklogs/FileTaskLogsTest.java,56,,"      Files.write(""blah"", logFile, StandardCharsets.UTF_8);"
70928,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/firehose/IngestSegmentFirehoseFactoryTimelineTest.java,286,,"            ""2000/2000T02"", 3, 7,"
70929,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/firehose/IngestSegmentFirehoseFactoryTimelineTest.java,287,,"            ds(""2000/2000T01"", ""v1"", 0, ir(""2000"", 1), ir(""2000T00:01"", 2)),"
70930,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/firehose/IngestSegmentFirehoseFactoryTimelineTest.java,287,,"            ds(""2000/2000T01"", ""v1"", 0, ir(""2000"", 1), ir(""2000T00:01"", 2)),"
70931,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/firehose/IngestSegmentFirehoseFactoryTimelineTest.java,288,,"            ds(""2000T01/2000T02"", ""v1"", 0, ir(""2000T01"", 4))"
70932,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/firehose/IngestSegmentFirehoseFactoryTimelineTest.java,288,,"            ds(""2000T01/2000T02"", ""v1"", 0, ir(""2000T01"", 4))"
70933,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/input/DruidInputSourceTest.java,75,,"                        + ""\""type\"":\""druid\"","""
70934,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/input/DruidInputSourceTest.java,76,,"                        + ""\""dataSource\"":\""foo\"","""
70935,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/input/DruidSegmentReaderTest.java,96,,"                                new CountAggregatorFactory(""cnt""),"
70936,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/input/DruidSegmentReaderTest.java,97,,"                                new HyperUniquesAggregatorFactory(""met_s"", ""s"")"
70937,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/input/DruidSegmentReaderTest.java,105,,"                                DateTimes.of(""2000""),"
70938,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/input/DruidSegmentReaderTest.java,108,,"                                    .put(""s"", ""foo"")"
70939,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/input/DruidSegmentReaderTest.java,113,,"                                DateTimes.of(""2000T01""),"
70940,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/input/DruidSegmentReaderTest.java,116,,"                                    .put(""s"", ""bar"")"
70941,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/input/DruidSegmentReaderTest.java,145,,"        makeInputEntity(Intervals.of(""2000/P1D"")),"
70942,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/input/DruidSegmentReaderTest.java,147,,"        new TimestampSpec(""__time"", ""millis"", DateTimes.of(""1971"")),"
70943,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/input/DruidSegmentReaderTest.java,147,,"        new TimestampSpec(""__time"", ""millis"", DateTimes.of(""1971"")),"
70944,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/input/DruidSegmentReaderTest.java,147,,"        new TimestampSpec(""__time"", ""millis"", DateTimes.of(""1971"")),"
70945,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/input/DruidSegmentReaderTest.java,165,,"                    .put(""__time"", DateTimes.of(""2000T"").getMillis())"
70946,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/input/GeneratorInputSourceTest.java,49,,"        ""basic"","
70947,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/input/InputRowSchemasTest.java,46,,"            ImmutableList.of(StringDimensionSchema.create(""foo"")),"
70948,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/input/InputRowSchemasTest.java,51,,"            new SelectorDimFilter(""bar"", ""x"", null),"
70949,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/input/InputRowSchemasTest.java,57,,"            new LongSumAggregatorFactory(""billy"", ""bob"")"
70950,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/ImmutableWorkerInfoTest.java,39,,"            ""http"", ""testWorker"", ""192.0.0.1"", 10, ""v1"", WorkerConfig.DEFAULT_CATEGORY"
70951,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/ImmutableWorkerInfoTest.java,39,,"            ""http"", ""testWorker"", ""192.0.0.1"", 10, ""v1"", WorkerConfig.DEFAULT_CATEGORY"
70952,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/ImmutableWorkerInfoTest.java,39,,"            ""http"", ""testWorker"", ""192.0.0.1"", 10, ""v1"", WorkerConfig.DEFAULT_CATEGORY"
70953,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/ImmutableWorkerInfoTest.java,42,,"        ImmutableSet.of(""grp1"", ""grp2""),"
70954,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/ImmutableWorkerInfoTest.java,42,,"        ImmutableSet.of(""grp1"", ""grp2""),"
70955,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/ImmutableWorkerInfoTest.java,43,,"        ImmutableSet.of(""task1"", ""task2""),"
70956,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/ImmutableWorkerInfoTest.java,43,,"        ImmutableSet.of(""task1"", ""task2""),"
70957,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/ImmutableWorkerInfoTest.java,44,,"        DateTimes.of(""2015-01-01T01:01:01Z"")"
70958,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/ImmutableWorkerInfoTest.java,98,,"            ""http"", ""testWorker1"", ""192.0.0.1"", 10, ""v1"", WorkerConfig.DEFAULT_CATEGORY"
70959,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/ImmutableWorkerInfoTest.java,106,,"            ""http"", ""testWorker2"", ""192.0.0.1"", 10, ""v1"", WorkerConfig.DEFAULT_CATEGORY"
70960,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/IndexerMetadataStorageAdapterTest.java,65,,"            ""id1"","
70961,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/IndexerMetadataStorageAdapterTest.java,68,,"            ""dataSource"","
70962,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/IndexerMetadataStorageAdapterTest.java,74,,"            TaskStatus.running(""id2""),"
70963,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/RemoteTaskRunnerRunPendingTasksConcurrencyTest.java,61,,"    rtrTestUtils.makeWorker(""worker0"", 3);"
70964,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/RemoteTaskRunnerRunPendingTasksConcurrencyTest.java,62,,"    rtrTestUtils.makeWorker(""worker1"", 3);"
70965,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/RemoteTaskRunnerTest.java,70,,"  private static final String WORKER_HOST = ""worker"";"
70966,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/RemoteTaskRunnerTest.java,219,,"        ""rt1"","
70967,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/RemoteTaskRunnerTest.java,221,,"        ""foo"","
70968,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/RemoteTaskRunnerTest.java,230,,"        ""rt2"","
70969,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/RemoteTaskRunnerTest.java,239,,"        ""rt3"","
70970,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/RemoteTaskRunnerTest.java,375,,"        ""first"","
70971,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/RemoteTaskRunnerTest.java,385,,"        ""second"","
70972,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/RemoteTaskRunnerTest.java,781,,"        ""realtime1"","
70973,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/RemoteTaskRunnerTest.java,799,,"        ""realtime2"","
70974,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/RemoteTaskRunnerTest.java,834,,"        ""realtime3"","
70975,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/RemoteTaskRunnerTest.java,862,,"    rtrTestUtils.makeWorker(""worker2"", 10);"
70976,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/TaskLifecycleTest.java,276,,"        ImmutableList.of(""dim1"", ""dim2""),"
70977,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/TaskLifecycleTest.java,276,,"        ImmutableList.of(""dim1"", ""dim2""),"
70978,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/TaskLifecycleTest.java,280,,"            ""met"", met"
70979,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/TaskLifecycleTest.java,737,,"                ""foo"","
70980,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/TaskLifecycleTest.java,787,,"    Assert.assertEquals(""statusCode"", TaskState.SUCCESS, status.getStatusCode());"
70981,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/TaskLifecycleTest.java,791,,"    Assert.assertEquals(""num segments published"", 2, mdc.getPublished().size());"
70982,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/TaskLifecycleTest.java,792,,"    Assert.assertEquals(""num segments nuked"", 0, mdc.getNuked().size());"
70983,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/TaskLifecycleTest.java,997,,"        ""id1"","
70984,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/TaskLifecycleTest.java,1001,,"        Intervals.of(""2012-01-01/P1D""),"
70985,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/TaskLockboxTest.java,150,,"    Assert.assertNotNull(acquireTimeChunkLock(TaskLockType.EXCLUSIVE, task, Intervals.of(""2015-01-01/2015-01-02"")));"
70986,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/TaskLockboxTest.java,197,,"    final Interval interval1 = Intervals.of(""2017-01-01/2017-01-02"");"
70987,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/TaskLockboxTest.java,297,,"                  Intervals.of(StringUtils.format(""2017-01-0%d/2017-01-0%d"", (i + 1), (i + 2))),"
70988,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/TaskLockboxTest.java,328,,"        new IntervalLockWithoutPriority(task.getGroupId(), task.getDataSource(), Intervals.of(""2017/2018""), ""v1"")"
70989,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/TaskLockboxTest.java,449,,"    final Task task1 = NoopTask.create(""task1"", 10);"
70990,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/TaskLockboxTest.java,1059,,"    final Task task1 = NoopTask.withGroupId(""groupId"");"
70991,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/TaskQueueTest.java,176,,"    final Task task = new TestTask(""t1"", Intervals.of(""2021-01-01/P1D""));"
70992,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/autoscaling/PendingTaskBasedProvisioningStrategyTest.java,153,,"        new AutoScalingData(Collections.singletonList(""aNode""))"
70993,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/autoscaling/PendingTaskBasedProvisioningStrategyTest.java,312,,"            new TestZkWorker(testTask, ""http"", ""h1"", ""n1"", INVALID_VERSION).toImmutable() // Invalid version node"
70994,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/autoscaling/PendingTaskBasedProvisioningStrategyTest.java,339,,"        new AutoScalingData(Collections.singletonList(""fake""))"
70995,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/hrtr/HttpRemoteTaskRunnerTest.java,154,,"        new DruidNode(""service"", ""host1"", false, 8080, null, true, false),"
70996,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/hrtr/HttpRemoteTaskRunnerTest.java,154,,"        new DruidNode(""service"", ""host1"", false, 8080, null, true, false),"
70997,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/hrtr/HttpRemoteTaskRunnerTest.java,157,,"            WorkerNodeService.DISCOVERY_SERVICE_KEY, new WorkerNodeService(""ip1"", 2, ""0"", WorkerConfig.DEFAULT_CATEGORY)"
70998,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/hrtr/HttpRemoteTaskRunnerTest.java,165,,"            WorkerNodeService.DISCOVERY_SERVICE_KEY, new WorkerNodeService(""ip2"", 2, ""0"", WorkerConfig.DEFAULT_CATEGORY)"
70999,./TargetProjects/druid/indexing-service/src/test/java/org/apache/druid/indexing/overlord/hrtr/HttpRemoteTaskRunnerTest.java,198,,"    Task task1 = NoopTask.create(""task-id-1"", 0);"
