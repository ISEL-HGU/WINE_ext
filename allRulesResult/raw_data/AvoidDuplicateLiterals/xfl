141000,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/DigesterDefaultCollectionConverterImplTest.java,96,,"            assertNotNull(""a.collection is null"", a.getCollection());"
141001,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/DigesterDefaultCollectionConverterImplTest.java,98,,"            assertTrue(""Incorrect a.collection"", ((C) a.getCollection().iterator().next()).getId().equals(""first""));"
141002,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/DigesterHashMapTest.java,56,,"            main.setPath(""/test"");"
141003,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/DigesterHashMapTest.java,57,,"            main.setText(""Main text"");"
141004,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/DigesterMultiValueCollectionConverterImplTest.java,57,,"            values.add(""Value1"");"
141005,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/DigesterNTCollectionConverterImplTest.java,58,,"            page.setPath(""/test"");"
141006,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/DigesterNTCollectionConverterImplTest.java,59,,"            page.setTitle(""Page Title"");"
141007,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/DigesterNTCollectionConverterImplTest.java,76,,"            paragraphs.add(new Paragraph(""Para 1""));"
141008,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/DigesterPersonListTest.java,47,,"        	aPerson.setPath(""/person"");"
141009,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/DigesterResidualNodesCollectionConverterImplTest.java,55,,"            residual.setPath(""/test"");"
141010,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/DigesterResidualNodesCollectionConverterImplTest.java,74,,"            map.put(""value2"", new Paragraph(""Value2""));"
141011,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/DigesterResidualPropertiesCollectionConverterImplTest.java,57,,"            residual.setPath(""/test"");"
141012,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/DigesterResidualPropertiesCollectionConverterImplTest.java,81,,"            map.put(""value5"", Arrays.asList(new String[]{ ""Value5-1"", ""Value5-2"" }));"
141013,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/collectionconverter/DigesterResidualPropertiesCollectionConverterImplTest.java,108,,"            map.put(""value16"", Arrays.asList(new String[]{ ""Value16-1"", ""Value16-2"" }));"
141014,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/inheritance/AnnotationInheritanceConcreteClassTest.java,64,,"            document.setPath(""/document1"");"
141015,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/inheritance/AnnotationInheritanceConcreteClassTest.java,66,,"            document.setContentType(""plain/text"");"
141016,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/inheritance/AnnotationInheritanceConcreteClassTest.java,68,,"            documentStream.setEncoding(""utf-8"");"
141017,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/inheritance/AnnotationInheritanceConcreteClassTest.java,69,,"            documentStream.setContent(""Test Content"".getBytes());"
141018,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/inheritance/AnnotationInheritanceConcreteClassTest.java,81,,"			assertEquals(""Document path is invalid"", document.getPath(), ""/document1"");"
141019,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/inheritance/AnnotationInheritanceConcreteClassTest.java,82,,"			assertEquals(""Content type  is invalid"", document.getContentType(), ""plain/text"");"
141020,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/inheritance/AnnotationInheritanceConcreteClassTest.java,83,,"			assertNotNull(""document stream is null"", document.getDocumentStream());"
141021,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/inheritance/AnnotationInheritanceConcreteClassTest.java,134,,"        document.setPath(""/document2"");"
141022,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/inheritance/AnnotationInheritanceConcreteClassTest.java,154,,"        folder.setPath(""/folder1"");"
141023,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/inheritance/AnnotationInheritanceConcreteClassTest.java,171,,"        folder.setPath(""/folder2"");"
141024,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/inheritance/AnnotationInheritanceConcreteClassTest.java,194,,"		assertTrue(""Invalid item in the collection"", this.contains(result, ""/folder1"",FolderImpl.class));"
141025,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/inheritance/AnnotationInheritanceHierarchyTest.java,57,,"			descendant.setDescendantField(""descendantValue"");"
141026,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/inheritance/AnnotationInheritanceHierarchyTest.java,60,,"			descendant.setPath(""/test"");"
141027,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/inheritance/AnnotationInheritanceHierarchyTest.java,121,,"		descendant.setPath(""/descendant2"");"
141028,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/inheritance/AnnotationInheritanceHierarchyTest.java,127,,"		subDescendant.setPath(""/subdescendant"");"
141029,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/inheritance/AnnotationInheritanceHierarchyTest.java,174,,"		assertTrue(""Invalid item in the collection"", this.contains(result, ""/descendant1"", Descendant.class));"
141030,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/inheritance/DigesterInheritanceConcreteClassTest.java,65,,"            document.setPath(""/document1"");"
141031,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/inheritance/DigesterInheritanceConcreteClassTest.java,67,,"            document.setContentType(""plain/text"");"
141032,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/inheritance/DigesterInheritanceConcreteClassTest.java,69,,"            documentStream.setEncoding(""utf-8"");"
141033,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/inheritance/DigesterInheritanceConcreteClassTest.java,70,,"            documentStream.setContent(""Test Content"".getBytes());"
141034,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/inheritance/DigesterInheritanceConcreteClassTest.java,82,,"			assertEquals(""Document path is invalid"", document.getPath(), ""/document1"");"
141035,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/inheritance/DigesterInheritanceConcreteClassTest.java,83,,"			assertEquals(""Content type  is invalid"", document.getContentType(), ""plain/text"");"
141036,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/inheritance/DigesterInheritanceConcreteClassTest.java,84,,"			assertNotNull(""document stream is null"", document.getDocumentStream());"
141037,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/inheritance/DigesterInheritanceConcreteClassTest.java,135,,"        document.setPath(""/document2"");"
141038,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/inheritance/DigesterInheritanceConcreteClassTest.java,155,,"        folder.setPath(""/folder1"");"
141039,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/inheritance/DigesterInheritanceConcreteClassTest.java,172,,"        folder.setPath(""/folder2"");"
141040,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/inheritance/DigesterInheritanceConcreteClassTest.java,195,,"		assertTrue(""Invalid item in the collection"", this.contains(result, ""/folder1"",FolderImpl.class));"
141041,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/inheritance/DigesterInheritanceHierarchyTest.java,56,,"			descendant.setDescendantField(""descendantValue"");"
141042,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/inheritance/DigesterInheritanceHierarchyTest.java,59,,"			descendant.setPath(""/test"");"
141043,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/inheritance/DigesterInheritanceHierarchyTest.java,120,,"		descendant.setPath(""/descendant2"");"
141044,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/inheritance/DigesterInheritanceHierarchyTest.java,126,,"		subDescendant.setPath(""/subdescendant"");"
141045,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/inheritance/DigesterInheritanceHierarchyTest.java,173,,"		assertTrue(""Invalid item in the collection"", this.contains(result, ""/descendant1"", Descendant.class));"
141046,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/interfaces/AnnotationConcreteClassTest.java,66,,"            documentImpl.setPath(""/document1"");"
141047,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/interfaces/AnnotationConcreteClassTest.java,68,,"            documentImpl.setContentType(""plain/text"");"
141048,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/interfaces/AnnotationConcreteClassTest.java,70,,"            documentStream.setEncoding(""utf-8"");"
141049,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/interfaces/AnnotationConcreteClassTest.java,71,,"            documentStream.setContent(""Test Content"".getBytes());"
141050,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/interfaces/AnnotationConcreteClassTest.java,135,,"    document.setPath(""/document2"");"
141051,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/interfaces/AnnotationConcreteClassTest.java,155,,"    folder.setPath(""/folder1"");"
141052,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/interfaces/AnnotationConcreteClassTest.java,172,,"    folder.setPath(""/folder2"");"
141053,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/interfaces/AnnotationConcreteClassTest.java,195,,"	assertTrue(""Invalid item in the collection"", this.contains(result, ""/folder1"",FolderImpl.class));"
141054,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/interfaces/AnnotationConcreteClassTest.java,220,,"	assertTrue(""Invalid item in the collection"", this.contains(folder2.getChildren(), ""/folder2/document4"", DocumentImpl.class));"
141055,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/interfaces/AnnotationConcreteClassTest.java,221,,"	assertTrue(""Invalid item in the collection"", this.contains(folder2.getChildren(), ""/folder2/subfolder"", FolderImpl.class));"
141056,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/interfaces/AnnotationInterfaceHierarchyTest.java,58,,"			anotherDescendant.setAnotherDescendantField(""anotherDescendantValue"");"
141057,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/interfaces/AnnotationInterfaceHierarchyTest.java,153,,"		assertTrue(""Invalid item in the collection"", this.contains(result, ""/anotherdescendant1"", AnotherDescendant.class));"
141058,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/interfaces/DigesterConcreteClassTest.java,62,,"            documentImpl.setPath(""/document1"");"
141059,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/interfaces/DigesterConcreteClassTest.java,64,,"            documentImpl.setContentType(""plain/text"");"
141060,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/interfaces/DigesterConcreteClassTest.java,66,,"            documentStream.setEncoding(""utf-8"");"
141061,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/interfaces/DigesterConcreteClassTest.java,67,,"            documentStream.setContent(""Test Content"".getBytes());"
141062,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/interfaces/DigesterConcreteClassTest.java,131,,"    document.setPath(""/document2"");"
141063,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/interfaces/DigesterConcreteClassTest.java,151,,"    folder.setPath(""/folder1"");"
141064,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/interfaces/DigesterConcreteClassTest.java,168,,"    folder.setPath(""/folder2"");"
141065,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/interfaces/DigesterConcreteClassTest.java,191,,"	assertTrue(""Invalid item in the collection"", this.contains(result, ""/folder1"",FolderImpl.class));"
141066,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/interfaces/DigesterConcreteClassTest.java,216,,"	assertTrue(""Invalid item in the collection"", this.contains(folder2.getChildren(), ""/folder2/document4"", DocumentImpl.class));"
141067,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/interfaces/DigesterConcreteClassTest.java,217,,"	assertTrue(""Invalid item in the collection"", this.contains(folder2.getChildren(), ""/folder2/subfolder"", FolderImpl.class));"
141068,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/interfaces/DigesterInterfaceHierarchyTest.java,59,,"			anotherDescendant.setAnotherDescendantField(""anotherDescendantValue"");"
141069,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/interfaces/DigesterInterfaceHierarchyTest.java,154,,"		assertTrue(""Invalid item in the collection"", this.contains(result, ""/anotherdescendant1"", AnotherDescendant.class));"
141070,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/jcrnodetype/AnnotationJcrPropertyTest.java,53,,"            ocmTestProperty.setPath(""/test"");"
141071,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/jcrnodetype/DigesterJcrPropertyTest.java,53,,"            ocmTestProperty.setPath(""/test"");"
141072,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/lock/AnnotationLockTest.java,59,,"            a.setPath(""/test"");"
141073,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/lock/AnnotationLockTest.java,99,,"            assertFalse(""the object is locked"", ocm.isLocked(""/test""));"
141074,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/lock/DigesterLockTest.java,59,,"            a.setPath(""/test"");"
141075,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/lock/DigesterLockTest.java,99,,"            assertFalse(""the object is locked"", ocm.isLocked(""/test""));"
141076,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/proxy/AnnotationProxyTest.java,58,,"			main.setPath(""/test"");"
141077,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/proxy/AnnotationProxyTest.java,152,,"            assertEquals(""Invalide size"", result.size(), 100);"
141078,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/proxy/DigesterProxyTest.java,57,,"			main.setPath(""/test"");"
141079,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/proxy/DigesterProxyTest.java,151,,"            assertEquals(""Invalide size"", result.size(), 100);"
141080,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/query/AnnotationMultiValueQueryTest.java,66,,"	      filter.addEqualTo(""multiValues"", ""Value1"");"
141081,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/query/AnnotationScopeQueryTest.java,102,,"    	      filter.addEqualTo(""text"", ""Para 1"");"
141082,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/query/AnnotationSimpleQueryTest.java,72,,"    	      filter.addEqualTo(""text"", ""Para 1"");    	          	"
141083,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/query/AnnotationSimpleQueryTest.java,72,,"    	      filter.addEqualTo(""text"", ""Para 1"");    	          	"
141084,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/query/AnnotationSimpleQueryTest.java,80,,"    	      assertTrue(""Invalid paragraph found"" , paragraph.getText().equals(""Para 1""));"
141085,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/query/AnnotationSimpleQueryTest.java,86,,"            fail(""Exception occurs during the unit test : "" + e);"
141086,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/query/AnnotationSimpleQueryTest.java,105,,"    	      filter.setScope(""/test/"");"
141087,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/query/AnnotationSimpleQueryTest.java,147,,"    	      assertTrue(""Invalid paragraph found"", this.containsText(paragraphs,""Para 2""));"
141088,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/query/DigesterMultiValueQueryTest.java,67,,"	      filter.addEqualTo(""multiValues"", ""Value1"");"
141089,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/query/DigesterScopeQueryTest.java,102,,"    	      filter.addEqualTo(""text"", ""Para 1"");"
141090,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/query/DigesterSimpleQueryTest.java,71,,"            filter.addEqualTo(""text"", ""Para 1"");"
141091,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/query/DigesterSimpleQueryTest.java,71,,"            filter.addEqualTo(""text"", ""Para 1"");"
141092,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/query/DigesterSimpleQueryTest.java,76,,"            assertTrue(""Invalid paragraph found"", paragraph.getText().equals(""Para 1""));"
141093,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/query/DigesterSimpleQueryTest.java,80,,"            fail(""Exception occurs during the unit test : "" + e);"
141094,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/query/DigesterSimpleQueryTest.java,98,,"            filter.setScope(""/test/"");"
141095,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/query/DigesterSimpleQueryTest.java,125,,"            filter.addLike(""text"", ""Para%"");"
141096,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/query/DigesterSimpleQueryTest.java,131,,"            assertEquals(""Invalid number of objects - should be = 3"", 3, result.size());"
141097,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/query/DigesterSimpleQueryTest.java,135,,"            assertTrue(""Invalid paragraph found"", this.containsText(paragraphs,""Para 2""));"
141098,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/query/DigesterSimpleQueryTest.java,136,,"            assertTrue(""Invalid paragraph found"", this.containsText(paragraphs,""Para 3""));"
141099,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/query/DigesterSimpleQueryTest.java,349,,"            assertTrue(""Invalid Page found"", pages[0].getTitle().equals(""Page Title""));"
141100,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/query/DigesterSimpleQueryTest.java,351,,"            result = ocm.getObjects(Page.class, ""/folder/test"");"
141101,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/uuid/AnnotationUuidTest.java,58,,"            a1.setPath(""/a1"");"
141102,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/uuid/AnnotationUuidTest.java,66,,"            b.setPath(""/testB2"");"
141103,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/uuid/AnnotationUuidTest.java,91,,"            assertNotNull(""a is not null"", b.getMultiReferences());"
141104,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/uuid/AnnotationUuidTest.java,98,,"            fail(""Exception occurs during the unit test : "" + e);"
141105,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/uuid/AnnotationUuidTest.java,119,,"            a.setPath(""/test"");"
141106,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/uuid/AnnotationUuidTest.java,120,,"            a.setStringData(""testdata"");"
141107,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/uuid/AnnotationUuidTest.java,123,,"            assertNotNull(""uuid is null"", uuidA);"
141108,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/uuid/AnnotationUuidTest.java,130,,"            assertNotNull(""a is null"", a);"
141109,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/uuid/AnnotationUuidTest.java,133,,"            log.info(""UUID : "" + uuidA);"
141110,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/uuid/AnnotationUuidTest.java,138,,"            a.setStringData(""testdata2"");"
141111,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/uuid/AnnotationUuidTest.java,215,,"            b.setPath(""/testB"");"
141112,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/uuid/AnnotationUuidTest.java,345,,"            a2.setPath(""/a2"");"
141113,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/uuid/DigesterUuidTest.java,68,,"            a.setPath(""/test"");"
141114,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/uuid/DigesterUuidTest.java,69,,"            a.setStringData(""testdata"");"
141115,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/uuid/DigesterUuidTest.java,72,,"            assertNotNull(""uuid is null"", uuidA);"
141116,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/uuid/DigesterUuidTest.java,79,,"            assertNotNull(""a is null"", a);"
141117,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/uuid/DigesterUuidTest.java,82,,"            log.info(""UUID : "" + uuidA);"
141118,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/uuid/DigesterUuidTest.java,87,,"            a.setStringData(""testdata2"");"
141119,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/uuid/DigesterUuidTest.java,124,,"            fail(""Exception occurs during the unit test : "" + e);"
141120,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/uuid/DigesterUuidTest.java,163,,"            b.setPath(""/testB"");"
141121,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/uuid/DigesterUuidTest.java,236,,"            b.setPath(""/testB2"");"
141122,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/uuid/DigesterUuidTest.java,288,,"            a1.setPath(""/a1"");"
141123,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/uuid/DigesterUuidTest.java,293,,"            a2.setPath(""/a2"");"
141124,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/version/AnnotationBasicVersionningTest.java,62,,"            	 page.setPath(""/page"");"
141125,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/version/AnnotationBasicVersionningTest.java,70,,"            	 page.setTitle(""Page Title 2"");"
141126,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/version/AnnotationBasicVersionningTest.java,77,,"            	 page.setTitle(""Page Title 3"");"
141127,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/version/AnnotationBasicVersionningTest.java,90,,"            		 log.info(""version found : ""+ version.getName() + "" - "" + version.getPath() + "" - "" +  version.getCreated().getTime());"
141128,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/version/AnnotationBasicVersionningTest.java,101,,"            			assertEquals(""Invalid title for version "" + version.getName(),page.getTitle(), ""Page Title 2"");"
141129,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/version/AnnotationBasicVersionningTest.java,104,,"            		 if (version.getName().equals(""1.1""))"
141130,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/version/AnnotationBasicVersionningTest.java,264,,"			pressRelease.setPath(""/pressrelease1"");"
141131,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/manager/version/DigesterBasicVersionningTest.java,54,,"        	 page.setPath(""/page"");"
141132,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/mapper/AnnotationMapperImplTest.java,79,,"			assertNotNull(""Mapper is null"", mapper);"
141133,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/mapper/AnnotationMapperImplTest.java,82,,"			assertNotNull(""ClassDescriptor is null"", classDescriptor);"
141134,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/mapper/AnnotationMapperImplTest.java,83,,"			assertTrue(""Invalid classname"", classDescriptor.getClassName().equals(A.class.getName()));"
141135,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/mapper/AnnotationMapperImplTest.java,84,,"			assertTrue(""Invalid path field"", classDescriptor.getPathFieldDescriptor().getFieldName().equals(""path""));"
141136,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/mapper/AnnotationMapperImplTest.java,102,,"			fail(""Impossible to retrieve the converter "" + e);"
141137,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/mapper/AnnotationMapperImplTest.java,174,,"			assertEquals(b1Field.getJcrOnParentVersion(), ""IGNORE"");"
141138,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/mapper/AnnotationMapperImplTest.java,243,,"			assertNotNull(""Classdescriptor is null"", classDescriptor);"
141139,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/mapper/AnnotationMapperImplTest.java,244,,"			assertEquals(""Incorrect path field"", classDescriptor"
141140,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/mapper/AnnotationMapperImplTest.java,261,,"			assertEquals(""Invalid number of descendants"", descendandDescriptors"
141141,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/mapper/AnnotationMapperImplTest.java,401,,"			assertTrue(""Invalid extend strategy"", classDescriptor.usesNodeTypePerHierarchyStrategy());"
141142,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/mapper/AnnotationMapperImplTest.java,408,,"			assertEquals(""Invalid number of implemented interface"", classDescriptor.getImplements().size(), 1);"
141143,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/mapper/DigesterMapperImplTest.java,75,,"			assertNotNull(""Mapper is null"", mapper);"
141144,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/mapper/DigesterMapperImplTest.java,78,,"			assertNotNull(""ClassDescriptor is null"", classDescriptor);"
141145,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/mapper/DigesterMapperImplTest.java,79,,"			assertTrue(""Invalid classname"", classDescriptor.getClassName().equals(A.class.getName()));"
141146,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/mapper/DigesterMapperImplTest.java,80,,"			assertTrue(""Invalid path field"", classDescriptor.getPathFieldDescriptor().getFieldName().equals(""path""));"
141147,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/mapper/DigesterMapperImplTest.java,98,,"			fail(""Impossible to retrieve the converter "" + e);"
141148,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/mapper/DigesterMapperImplTest.java,174,,"			assertEquals(b1Field.getJcrOnParentVersion(), ""IGNORE"");"
141149,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/mapper/DigesterMapperImplTest.java,240,,"					""./src/test/test-config/jcrmapping-inheritance.xml"" };			"
141150,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/mapper/DigesterMapperImplTest.java,248,,"			assertNotNull(""Classdescriptor is null"", classDescriptor);"
141151,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/mapper/DigesterMapperImplTest.java,249,,"			assertEquals(""Incorrect path field"", classDescriptor"
141152,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/mapper/DigesterMapperImplTest.java,266,,"			assertEquals(""Invalid number of descendants"", descendandDescriptors"
141153,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/mapper/DigesterMapperImplTest.java,414,,"			assertTrue(""Invalid extend strategy"", classDescriptor.usesNodeTypePerHierarchyStrategy());"
141154,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/nodemanagement/impl/NodeTypeManagerImplTest.java,87,,"                ""ocmtest"", ""http://www.test.com/test-uri"");"
141155,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/nodemanagement/impl/NodeTypeManagerImplTest.java,87,,"                ""ocmtest"", ""http://www.test.com/test-uri"");"
141156,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/nodemanagement/impl/NodeTypeManagerImplTest.java,110,,"        classDescriptor.setJcrType(""ocm:test2"");"
141157,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/nodemanagement/impl/NodeTypeManagerImplTest.java,111,,"        classDescriptor.setJcrSuperTypes(""nt:base"");"
141158,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/nodemanagement/impl/NodeTypeManagerImplTest.java,115,,"        field1.setJcrName(""ocm:a"");"
141159,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/nodemanagement/impl/NodeTypeManagerImplTest.java,116,,"        field1.setJcrType(""String"");"
141160,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/nodemanagement/impl/NodeTypeManagerImplTest.java,124,,"        field2.setJcrName(""ocm:b"");"
141161,./TargetProjects/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/nodemanagement/impl/NodeTypeManagerImplTest.java,367,,"        collection1.setJcrType(""nt:unstructured"");"
141162,./TargetProjects/james-hupa/client/src/main/java/org/apache/hupa/client/activity/ComposeActivity.java,195,,"        String ret = ""<br>"";"
141163,./TargetProjects/james-hupa/client/src/test/java/org/apache/hupa/client/storage/HupaStorageTest.java,49,,"        cache.setExpires(""fld"", 0);"
141164,./TargetProjects/james-hupa/mock/src/main/java/org/apache/hupa/server/guice/AbstractGuiceTestModule.java,82,,"        public TestUser(@Named(""Username"") String username,"
141165,./TargetProjects/james-hupa/mock/src/main/java/org/apache/hupa/server/guice/AbstractGuiceTestModule.java,83,,"                        @Named(""Password"") String password,"
141166,./TargetProjects/james-hupa/mock/src/main/java/org/apache/hupa/server/guice/AbstractGuiceTestModule.java,106,,"            put(""IMAPS"", ""false"");"
141167,./TargetProjects/james-hupa/mock/src/main/java/org/apache/hupa/server/guice/AbstractGuiceTestModule.java,116,,"            put(""SMTPAuth"", ""true"");"
141168,./TargetProjects/james-hupa/server/src/main/java/org/apache/hupa/server/InMemoryIMAPStoreCache.java,227,,"                props.setProperty(""mail.smtp.starttls.enable"", ""true"");"
141169,./TargetProjects/james-hupa/server/src/main/java/org/apache/hupa/server/service/SendMessageBaseServiceImpl.java,141,,"        String ip = ""unknown"";"
141170,./TargetProjects/james-hupa/server/src/main/java/org/apache/hupa/server/utils/ConfigurationProperties.java,42,,"    IMAPS(""IMAPS"", false, ""false""),"
141171,./TargetProjects/james-hupa/server/src/main/java/org/apache/hupa/server/utils/MessageUtils.java,104,,"                String[] contentId = bodyPart.getHeader(""Content-ID"");"
141172,./TargetProjects/james-hupa/server/src/main/java/org/apache/hupa/server/utils/SettingsDiscoverer.java,64,,"            s.setInboxFolderName(""INBOX"");"
141173,./TargetProjects/james-hupa/server/src/test/java/org/apache/hupa/server/service/GetMessageDetailServiceTest.java,44,,"        String res = getMessageDetailsService.txtDocumentToHtml(msg, ""aFolder"", 9999l);"
141174,./TargetProjects/james-hupa/widgets/src/main/java/org/apache/hupa/widgets/editor/FontPicker.java,56,,"            DOM.setStyleAttribute(getElement(), ""backgroundColor"", ""#D8ECFD"");"
141175,./TargetProjects/james-jdkim/main/src/main/java/org/apache/james/jdkim/DKIMVerifier.java,263,,"                            throw new PermFailException(""Signature date is more than """
141176,./TargetProjects/james-jdkim/main/src/test/java/org/apache/james/jdkim/DNSPublicKeyRetrieverTest.java,64,,"        pkr.getRecords(""dns/txt"", ""lima"", ""yahoogroups.com"");"
141177,./TargetProjects/james-jdkim/main/src/test/java/org/apache/james/jdkim/DNSPublicKeyRetrieverTest.java,76,,"                        ""dummy"", ""dummy"").getRecords(""dns/txt"", ""dummy"","
141178,./TargetProjects/james-jdkim/main/src/test/java/org/apache/james/jdkim/MultiplexingPublicKeyRecordRetrieverTest.java,54,,"            pkrr.getRecords(""method"", ""selector"", ""token"");"
141179,./TargetProjects/james-jdkim/main/src/test/java/org/apache/james/jdkim/MultiplexingPublicKeyRecordRetrieverTest.java,54,,"            pkrr.getRecords(""method"", ""selector"", ""token"");"
141180,./TargetProjects/james-jdkim/main/src/test/java/org/apache/james/jdkim/MultiplexingPublicKeyRecordRetrieverTest.java,64,,"                ""mymethod"", myMethodRetriever);"
141181,./TargetProjects/james-jdkim/main/src/test/java/org/apache/james/jdkim/PublicKeyRecordTest.java,47,,"        pkr = new PublicKeyRecordImpl(""k=rsa; p=XXXXXXXX=;"");"
141182,./TargetProjects/james-jdkim/main/src/test/java/org/apache/james/jdkim/PublicKeyRecordTest.java,79,,"        pkr = new PublicKeyRecordImpl(""k=rsa; h=sha1:sha256; p=XXXXXXXX=;"");"
141183,./TargetProjects/james-jdkim/main/src/test/java/org/apache/james/jdkim/PublicKeyRecordTest.java,182,,"                ""k=rsa; t=y; p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDIhyR3oItOy22ZOaBrIVe9m/iME3RqOJeasANSpg2YTHTYV+Xtp4xwf5gTjCmHQEMOs0qYu0FYiNQPQogJ2t0Mfx9zNu06rfRBDjiIU9tpx2T+NGlWZ8qhbiLo5By8apJavLyqTLavyPSrvsx0B3YzC63T4Age2CDqZYA+OwSMWQIDAQAB"");"
141184,./TargetProjects/james-jdkim/main/src/test/java/org/apache/james/jdkim/SignatureRecordImplTest.java,55,,"            fail(""invalid sequence parsed."");"
141185,./TargetProjects/james-jdkim/main/src/test/java/org/apache/james/jdkim/SignatureRecordImplTest.java,122,,"            fail(""expected failure"");"
141186,./TargetProjects/james-jdkim/main/src/test/java/org/apache/james/jdkim/SignatureRecordTest.java,32,,"                ""v=1; a=rsa-sha256; c=relaxed/relaxed;\r\n"""
141187,./TargetProjects/james-jdkim/main/src/test/java/org/apache/james/jdkim/SignatureRecordTest.java,33,,"                        + ""        d=gmail.com; s=beta;\r\n"""
141188,./TargetProjects/james-jdkim/main/src/test/java/org/apache/james/jdkim/SignatureRecordTest.java,34,,"                        + ""        h=domainkey-signature:received:received:message-id:date:from:to:subject:mime-version:content-type;\r\n"""
141189,./TargetProjects/james-jdkim/main/src/test/java/org/apache/james/jdkim/SignatureRecordTest.java,35,,"                        + ""        bh=9sd6eO/xnGLInYGPFN86r9q27iClGpwfkl4PBc5XEuQ=;\r\n"""
141190,./TargetProjects/james-jdkim/main/src/test/java/org/apache/james/jdkim/SignatureRecordTest.java,36,,"                        + ""        b=tGQtBQg1sO+JKopOylApWLngylEqeMcXwCEUQN+S2PSpi9c1G9Nm5df9pMShus3iFaQb0PPvTfpw++cAC8/N0p3Gi/lVLc+Yh7xWEIPZ3Nxd3xqTQy7grIkBpV0q6559dEhhfFoEyLS0OK/IrqFIUVDRIMnsMjimXV7u+Sgoi7Q="");"
141191,./TargetProjects/james-jdkim/main/src/test/java/org/apache/james/jdkim/canon/DigestOutputStreamTest.java,38,,"        MessageDigest md = MessageDigest.getInstance(""sha-256"");"
141192,./TargetProjects/james-jdkim/main/src/test/java/org/apache/james/jdkim/tagvalue/TagValueTest.java,118,,"                ""p=ciao;s=cips;v=DKIM1;""));"
141193,./TargetProjects/james-jsieve/core/src/main/java/org/apache/jsieve/SieveParserVisitorImpl.java,89,,"    @SuppressWarnings(""unchecked"")"
141194,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/AddressParseTest.java,56,,"        assertTrue(address.match(mail, "":all"", ""i;ascii-casemap"", "":is"","
141195,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/AddressParseTest.java,56,,"        assertTrue(address.match(mail, "":all"", ""i;ascii-casemap"", "":is"","
141196,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/AddressParseTest.java,56,,"        assertTrue(address.match(mail, "":all"", ""i;ascii-casemap"", "":is"","
141197,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/AddressParseTest.java,57,,"                ""from"", ""coyote@desert.example.org"", context));"
141198,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/AddressTest.java,43,,"            mail.getMessage().addHeader(""From"", ""user@domain"");"
141199,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/AddressTest.java,43,,"            mail.getMessage().addHeader(""From"", ""user@domain"");"
141200,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/AddressTest.java,77,,"            mail.getMessage().addHeader(""From "", ""user@domain"");"
141201,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/AddressTest.java,177,,"        String script = ""if address :all :is [\""From\"", \""To\""] [\""user@domain\"", \""tweety@pie\""] {throwTestException;}"";"
141202,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/AddressTest.java,199,,"            mail.getMessage().addHeader(""To"", ""tweety@pie"");"
141203,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/AddressTest.java,525,,"            mail.getMessage().addHeader(""From"", ""bugs@bunny"");"
141204,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/BodyTest.java,97,,"        List<String> containedText = Collections.singletonList(""Wibble"");"
141205,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/BodyTest.java,108,,"        List<String> containedText = Arrays.asList(""Wibble"", ""other"");"
141206,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/BodyTest.java,232,,"        List<String> contentTypes = Collections.singletonList(""text/plain"");"
141207,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/EnvelopeTest.java,44,,"            mail.setEnvelopeFrom(""user@domain"");"
141208,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/EnvelopeTest.java,175,,"        String script = ""if envelope :all :is [\""From\"", \""To\""] [\""user@domain\"", \""tweety@pie\""] {throwTestException;}"";"
141209,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/EnvelopeTest.java,199,,"            mail.setEnvelopeTo(""tweety@pie"");"
141210,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/EnvelopeTest.java,410,,"            mail.setEnvelopeFrom(""bugs@bunny"");"
141211,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/ExistsTest.java,48,,"            mail.getMessage().addHeader(""From"", ""tweety@pie"");"
141212,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/HeaderTest.java,43,,"        String script = ""if header :is \""X-Caffeine\"" \""C8H10N4O2\"" {throwTestException;}"";"
141213,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/HeaderTest.java,46,,"            mail.getMessage().addHeader(""X-Caffeine"", ""C8H10N4O2"");"
141214,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/HeaderTest.java,46,,"            mail.getMessage().addHeader(""X-Caffeine"", ""C8H10N4O2"");"
141215,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/MultilineTextTest.java,42,,"        String script = ""reject text:\r\n"" + message + ""\r\n.\r\n;"";"
141216,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/MultilineTextTest.java,42,,"        String script = ""reject text:\r\n"" + message + ""\r\n.\r\n;"";"
141217,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/SieveParserVisitorImplQuoteTest.java,62,,"        Assert.assertEquals(""Data value added after quotes stripped"", 1, data.size());"
141218,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/SizeTest.java,48,,"            mail.getMessage().setText(""Hi!"");"
141219,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/SizeTest.java,59,,"                + "" {throwTestException;}"";"
141220,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/VacationTest.java,116,,"        verify(sieveMailAdapter).addAction(ActionVacation.builder().reason(""reason"").build());"
141221,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/parser/SieveNodeCommentTest.java,54,,"        Assert.assertEquals(""A Line Comment"", comments.get(1));"
141222,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/util/check/ScriptCheckMailAdapterActionsTest.java,45,,"        Assert.assertEquals(""Running total updated"", 1, adapter.getActions().size());"
141223,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/util/check/ScriptCheckMailAdapterActionsTest.java,49,,"        Assert.assertEquals(""Order preserved"", 2, adapter.getActions().size());"
141224,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/util/check/ScriptCheckMailAdapterActionsTest.java,57,,"        Assert.assertEquals(""No actions executed"", 0, adapter.getExecutedActions()"
141225,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/util/check/ScriptCheckMailAdapterActionsTest.java,65,,"        Assert.assertEquals(""One action executed"", 1, adapter.getExecutedActions()"
141226,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/util/check/ScriptCheckMailAdapterActionsTest.java,111,,"        Assert.assertEquals(""Two actions executed"", 2, adapter.getExecutedActions()"
141227,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/util/check/ScriptCheckMailAdapterHeadersTest.java,86,,"        Assert.assertEquals(""Case and whitespace sensitive"", 1, headers.size());"
141228,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/util/check/ScriptCheckMailAdapterHeadersTest.java,103,,"        Assert.assertEquals(""All headers set returned"", 6, headers.size());"
141229,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/util/check/ScriptCheckMailAdapterHeadersTest.java,123,,"                ""Matches ignoring whitespace and capitalisation headers set returned"","
141230,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/util/check/ScriptCheckerTestActionsTest.java,63,,"        Assert.assertTrue(""Check for file into action with right destination"", result"
141231,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/util/check/ScriptCheckerTestActionsTest.java,95,,"        Assert.assertFalse(""Check for redirect action with right message"", result"
141232,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/util/check/ScriptCheckerTestActionsTest.java,127,,"        Assert.assertFalse(""Check for reject action with right message"", result"
141233,./TargetProjects/james-jsieve/core/src/test/java/org/apache/jsieve/util/check/ScriptCheckerTestActionsTest.java,159,,"        Assert.assertFalse(""Check for keep action "", result.isActionKeep(0));"
141234,./TargetProjects/james-jsieve/util/src/test/java/org/apache/jsieve/util/SieveToXmlTest.java,42,,"        mockOut.expects(once()).method(""openElement"").with(eq(elementName), "
141235,./TargetProjects/james-jsieve/util/src/test/java/org/apache/jsieve/util/SieveToXmlTest.java,46,,"        mockOut.expects(once()).method(""closeElement"").after(""2"");"
141236,./TargetProjects/james-jsieve/util/src/test/java/org/apache/jsieve/util/SimpleNodeTraverserTest.java,52,,"        mock.expects(once()).method(""start"").id(""1"");"
141237,./TargetProjects/james-jsieve/util/src/test/java/org/apache/jsieve/util/SimpleNodeTraverserTest.java,57,,"        mock.expects(once()).method(""end"").with(isA(ASTarguments.class)).after(""5"").id(""6"");"
141238,./TargetProjects/james-jsieve/util/src/test/java/org/apache/jsieve/util/ToSieveHandlerFactoryTest.java,113,,"        String commandName = ""SomeCommand"";"
141239,./TargetProjects/james-jsieve/util/src/test/java/org/apache/jsieve/util/ToSieveHandlerFactoryTest.java,217,,"        String prefix = ""A Prefix"";"
141240,./TargetProjects/james-jsieve/util/src/test/java/org/apache/jsieve/util/ToSieveHandlerFactoryTest.java,218,,"        String suffix = ""A Suffix"";"
141241,./TargetProjects/james-jspf/resolver/src/test/java/org/apache/james/jspf/AbstractYamlTest.java,257,,"        if (currentTest.get(""result"") instanceof String) {"
141242,./TargetProjects/james-jspf/resolver/src/test/java/org/apache/james/jspf/AbstractYamlTest.java,269,,"        if (currentTest.get(""explanation"") != null) {"
141243,./TargetProjects/james-jspf/resolver/src/test/java/org/apache/james/jspf/DNSServiceXBillImplTest.java,68,,"        Record[] rr = new Record[] { TXTRecord.fromString(Name.fromString(""test.local.""), Type.TXT, DClass.IN, 0, ""\""string \"" \""concatenated\"""", Name.fromString(""local."")) };"
141244,./TargetProjects/james-jspf/resolver/src/test/java/org/apache/james/jspf/DNSServiceXBillImplTest.java,68,,"        Record[] rr = new Record[] { TXTRecord.fromString(Name.fromString(""test.local.""), Type.TXT, DClass.IN, 0, ""\""string \"" \""concatenated\"""", Name.fromString(""local."")) };"
141245,./TargetProjects/james-jspf/resolver/src/test/java/org/apache/james/jspf/SPF1ParserTest.java,81,,"                    + ""no errors"" + "">"", data.errMsg, ""no errors"");"
141246,./TargetProjects/james-jspf/resolver/src/test/java/org/apache/james/jspf/core/IPAddrTest.java,30,,"        assertEquals(""in-addr"", IPAddr.getInAddress(""123.212.255.213""));"
141247,./TargetProjects/james-jspf/resolver/src/test/java/org/apache/james/jspf/core/IPAddrTest.java,36,,"        assertEquals(""ip6"", IPAddr.getInAddress(""0:0:0:0:0:0:13.1.68.3""));"
141248,./TargetProjects/james-jspf/resolver/src/test/java/org/apache/james/jspf/core/MacroExpandTest.java,55,,"            return ""email.example.com"";"
141249,./TargetProjects/james-mime4j/core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java,245,,"            monitor(monitor, mimeCharset, encoding, encodedText, ""leaving word encoded"","
141250,./TargetProjects/james-mime4j/core/src/main/java/org/apache/james/mime4j/io/InputStreams.java,40,,"            throw new IllegalArgumentException(""Byte array may not be null"");"
141251,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/ExampleMail.java,31,,"            ""Content-Transfer-Encoding: base64\r\n"" +"
141252,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/ExampleMail.java,32,,"            ""MIME-Version: 1.0\r\n"" +"
141253,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/ExampleMail.java,35,,"            ""\r\n"" +"
141254,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/ExampleMail.java,41,,"            ""From: Timothy Tayler <timothy@example.org>\r\n"" +"
141255,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/ExampleMail.java,75,,"            ""To: Samual Smith <samual@example.org>\r\n"" +"
141256,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/ExampleMail.java,76,,"            ""Date: Thu, 14 Feb 2008 12:00:00 +0000 (GMT)\r\n"" +"
141257,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/ExampleMail.java,82,,"            ""--42\r\n"" +"
141258,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/ExampleMail.java,83,,"            ""Content-Type: text/plain; charset=US-ASCII\r\n"" +"
141259,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/ExampleMail.java,94,,"    public static final String MIME_MULTIPART_EMBEDDED_MESSAGES_BODY = ""Start with a preamble\r\n"" +"
141260,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/ExampleMail.java,96,,"            ""--1729\r\n"" +"
141261,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/ExampleMail.java,99,,"            ""Rhubarb!\r\n"" +"
141262,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/ExampleMail.java,140,,"                    ""\r\n--1729\r\n"" +"
141263,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/ExampleMail.java,146,,"                    ""<html><head><title>Rhubarb</title></head><body>Rhubarb!</body></html>\r\n"" +"
141264,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/ExampleMail.java,219,,"    public static final String MULTIPART_WITH_BINARY_ATTACHMENTS_BODY = ""--=-tIdGYVstQJghyEDATnJ+\r\n"" +"
141265,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/ExampleMail.java,221,,"            ""Content-Transfer-Encoding: 7bit\r\n"" +"
141266,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/ExampleMail.java,274,,"            ""Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhu=\r\n"" +"
141267,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/ExampleMail.java,275,,"            ""barb Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhubar=\r\n"" +"
141268,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/ExampleMail.java,276,,"            ""b Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb R=\r\n"" +"
141269,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/ExampleMail.java,277,,"            ""hubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhub=\r\n"" +"
141270,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/ExampleMail.java,278,,"            ""arb Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb=\r\n"" +"
141271,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/ExampleMail.java,279,,"            "" Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb Rh=\r\n"" +"
141272,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/ExampleMail.java,280,,"            ""ubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhuba=\r\n"" +"
141273,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/ExampleMail.java,281,,"            ""rb Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb Rhubarb =\r\n"" +"
141274,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/ExampleMail.java,360,,"            ""Message-ID: <f470f68e0803061002n22bc4124he14015a4b6d6327f@mail.gmail.com>\r\n"" +"
141275,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/ExampleMail.java,361,,"                    ""Date: Thu, 6 Mar 2008 18:02:03 +0000\r\n"" +"
141276,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/ExampleMail.java,362,,"                    ""From: \""Robert Burrell Donkin\"" <robertburrelldonkin@gmail.com>\r\n"" +"
141277,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/ExampleMail.java,363,,"                    ""To: \""James Developers List\"" <server-dev@james.apache.org>\r\n"" +"
141278,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/ExampleMail.java,364,,"                    ""Subject: [Mime4J] getReader\r\n"" +"
141279,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/ExampleMail.java,370,,"                    ""Delivered-To: robertburrelldonkin@gmail.com\r\n"" +"
141280,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/ExampleMail.java,377,,"    public static final String ONE_PART_MIME_ASCII = ""Received: by 10.114.126.16 with HTTP; Thu, 6 Mar 2008 10:02:03 -0800 (PST)\r\n"" +"
141281,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/ExampleMail.java,386,,"            ""Content-Disposition: inline\r\n"" +"
141282,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/MimeExceptionTest.java,29,,"        MimeException e = new MimeException(""message"");"
141283,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java,63,,"        decoder = create(""VGhpcyBpcyB0aGUgcGxhaW4gdGV4dCBtZXNzYWdlIQ=="");"
141284,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java,118,,"        String actual = new String(b.toByteArray(), ""US-ASCII"");"
141285,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java,98,,"                .encodeEncodedWord(""only ascii"", Usage.TEXT_TOKEN).startsWith("
141286,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java,85,,"        checkRoundtrip(""Thisisaverysimplemessage.Thisisaverysimplemessage.Thisisaverysimplemessage."" +"
141287,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java,85,,"        checkRoundtrip(""Thisisaverysimplemessage.Thisisaverysimplemessage.Thisisaverysimplemessage."" +"
141288,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java,49,,"            Assert.fail(""IndexOutOfBoundsException should have been thrown"");"
141289,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java,104,,"        String text = ""bla bla yada yada haha haha"";"
141290,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java,32,,"        testConvertBoth(""Line 1\r\nLine 2\r\n"", ""Line 1\r\nLine 2\r\n"");"
141291,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java,40,,"        testConvertBoth(""Line 1\nLine 2\n"", ""Line 1\r\nLine 2\r\n"");"
141292,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java,44,,"        testConvertBoth(""Line 1\rLine 2\r"", ""Line 1\r\nLine 2\r\n"");"
141293,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java,48,,"        testConvertBoth(""\r\n"", ""\r\n"");"
141294,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java,47,,"        MimeBoundaryInputStream mime1 = new MimeBoundaryInputStream(buffer, ""boundary"");"
141295,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java,48,,"        Assert.assertEquals(""Line 1\r\nLine 2"", read(mime1, 5));"
141296,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/io/TextInputStreamTest.java,111,,"        InputStream r = new TextInputStream(""test"", Charsets.UTF_8, 1024);"
141297,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java,42,,"        sb.append(""\r\n"");"
141298,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java,89,,"        expected.add(""Subject: A subject"");"
141299,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java,174,,"                + ""<field>\r\n"""
141300,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java,176,,"                + ""</field>\r\n"""
141301,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java,199,,"        expected.add(""From: some@one.com"");"
141302,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/DefaultFieldBuilderTest.java,32,,"        byte[] b = line.getBytes(""US-ASCII"");"
141303,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilderTest.java,31,,"        builder.addField(new RawField(""Content-Type "", ""text/plain; charset=ISO-8859-1""));"
141304,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilderTest.java,33,,"        assertEquals(""text/plain"", bd.getMimeType());"
141305,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilderTest.java,77,,"        parent.addField(new RawField(""Content-Type"", ""mutlipart/alternative; boundary=foo""));"
141306,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilderTest.java,103,,"        assertEquals(""us-ascii"", bd.getCharset());"
141307,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java,40,,"            ""To: Road Runner <runner@example.org>\r\n"" +"
141308,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java,41,,"            ""From: Wile E. Cayote <wile@example.org>\r\n"" +"
141309,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java,42,,"            ""Date: Tue, 12 Feb 2008 17:34:09 +0000 (GMT)\r\n"" +"
141310,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java,43,,"            ""Subject: Mail\r\n"" +"
141311,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java,44,,"            ""Content-Type: text/plain\r\n"" +"
141312,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java,45,,"            ""\r\n"" +"
141313,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java,46,,"            ""a very important message"";"
141314,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java,47,,"        byte[] raw = message.getBytes(""US-ASCII"");"
141315,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java,63,,"        assertEquals(""Road Runner <runner@example.org>"", entity.getField().getBody());"
141316,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java,66,,"        assertEquals(""From"", entity.getField().getName());"
141317,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java,67,,"        assertEquals(""Wile E. Cayote <wile@example.org>"", entity.getField().getBody());"
141318,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java,70,,"        assertEquals(""Date"", entity.getField().getName());"
141319,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java,71,,"        assertEquals(""Tue, 12 Feb 2008 17:34:09 +0000 (GMT)"", entity.getField().getBody());"
141320,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java,74,,"        assertEquals(""Subject"", entity.getField().getName());"
141321,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java,75,,"        assertEquals(""Mail"", entity.getField().getBody());"
141322,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java,78,,"        assertEquals(""Content-Type"", entity.getField().getName());"
141323,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java,84,,"            fail(""IllegalStateException should have been thrown"");"
141324,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java,197,,"            ""--1729\r\n"" +"
141325,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java,198,,"            ""Content-Type: text/plain; charset=US-ASCII\r\n"" +"
141326,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java,206,,"            ""Goodbye!"";"
141327,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java,447,,"            ""DoS: xxxxxxxxxxxxxxxxxxxxx\r\n"" +"
141328,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java,448,,"            ""    xxxxxxxxxxxxxxxxxxxxx\r\n"" +"
141329,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java,602,,"            ""DoS DoS DoS DoS DoS DoS DoS DoS DoS DoS DoS DoS DoS DoS DoS\r\n"" +"
141330,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/MultipartTokensTest.java,62,,"            ""\r\n"" +"
141331,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java,56,,"        Assert.assertEquals(""raw"", strbuf1.toString());"
141332,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java,203,,"        Assert.assertEquals(""stuff"", field.getBody());"
141333,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java,245,,"        String s = ""test"";"
141334,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java,407,,"        org.junit.Assert.assertEquals(""boundary"", params.get(1).getName());"
141335,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/RawFieldTest.java,33,,"        RawField field = new RawField(raw, 3, ""raw"", null);"
141336,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java,44,,"        parser.parse(new ByteArrayInputStream(HEADER_ONLY.getBytes(""US-ASCII"")));"
141337,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/util/ByteArrayBufferTest.java,101,,"            Assert.fail(""IndexOutOfBoundsException should have been thrown"");"
141338,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/util/ByteArrayBufferTest.java,175,,"        byte tmp[] = ""--+++-"".getBytes(""US-ASCII"");"
141339,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/util/MimeUtilTest.java,29,,"        Assert.assertEquals(""this is\r\n a test"", MimeUtil.fold(""this is a test"", 68));"
141340,./TargetProjects/james-mime4j/core/src/test/java/org/apache/james/mime4j/util/MimeUtilTest.java,29,,"        Assert.assertEquals(""this is\r\n a test"", MimeUtil.fold(""this is a test"", 68));"
141341,./TargetProjects/james-mime4j/dom/src/main/java/org/apache/james/mime4j/field/address/AddressFormatter.java,95,,"            throw new IllegalArgumentException(""StringBuilder may not be null"");"
141342,./TargetProjects/james-mime4j/dom/src/main/java/org/apache/james/mime4j/message/MessageServiceFactoryImpl.java,67,,"            } else throw new IllegalArgumentException(""Unsupported attribute value type for ""+name+"", expected a BodyFactory"");"
141343,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/dom/LargeMessageParsingTest.java,38,,"        outputStream.write(""\r\n"".getBytes());"
141344,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/dom/MessageHeadlessParserTest.java,42,,"                + ""\r\n"""
141345,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java,53,,"        builder.setBody(""stuff"", ""stuff"", Charsets.UTF_8);"
141346,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java,56,,"        ContentTypeField ct1 = builder.getField(""Content-Type"", ContentTypeField.class);"
141347,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java,58,,"        Assert.assertEquals(""UTF-8"", ct1.getCharset());"
141348,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java,75,,"        Assert.assertEquals(""text/plain"", ct3.getMimeType());"
141349,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java,166,,"        Assert.assertEquals(""john.doe@example.net"", builder.getSender().getAddress());"
141350,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java,195,,"        Mailbox mailbox2 = DefaultAddressParser.DEFAULT.parseMailbox(""jane.doe@example.net"");"
141351,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java,198,,"        Assert.assertEquals(""john.doe@example.net"", builder.getField(""From"")"
141352,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java,230,,"        Group group = new Group(""Does"", mailbox1, mailbox2);"
141353,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java,231,,"        Mailbox mailbox3 = DefaultAddressParser.DEFAULT.parseMailbox(""Mary Smith <mary@example.net>"");"
141354,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java,234,,"        Assert.assertEquals(""Does: john.doe@example.net, jane.doe@example.net;"","
141355,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java,238,,"        Assert.assertEquals(""Does: john.doe@example.net, jane.doe@example.net;, """
141356,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java,311,,"                builder.getField(""Bcc"").getBody());"
141357,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java,349,,"                builder.getField(""Reply-To"").getBody());"
141358,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java,369,,"                .setSubject(""testing ..."")"
141359,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java,381,,"                new Mailbox("""", ""batman"", ""localhost""),"
141360,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java,47,,"        ContentDispositionField f = parse(""Content-Disposition: attachment"");"
141361,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java,110,,"        ContentDispositionField f = parse(""Content-Disposition: inline; """
141362,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java,136,,"        ContentDispositionField field = Fields.contentDisposition(""attachment"","
141363,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java,160,,"                ""some file.dat"");"
141364,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java,262,,"                .parseMailbox(""JD <john.doe@acme.org>""));"
141365,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java,269,,"        Mailbox mailbox2 = DefaultAddressParser.DEFAULT.parseMailbox(""Mary Smith <mary@example.net>"");"
141366,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java,286,,"        Mailbox mailbox2 = DefaultAddressParser.DEFAULT.parseMailbox(""jane.doe@example.org"");"
141367,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java,288,,"        Group group = new Group(""The Does"", mailbox1, mailbox2);"
141368,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java,292,,"                + ""jane.doe@example.org;"", decode(field));"
141369,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java,296,,"                + ""jane.doe@example.org;, Mary Smith\r\n <mary@example.net>"","
141370,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/field/LenientContentDispositionFieldTest.java,49,,"        ContentDispositionField f = parse(""Content-Disposition: attachment"");"
141371,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/field/LenientContentDispositionFieldTest.java,116,,"        ContentDispositionField f = parse(""Content-Disposition: inline; """
141372,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/field/LenientContentTypeFieldTest.java,42,,"        Assert.assertEquals(""text/html"", f.getMimeType());"
141373,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java,48,,"            Assert.fail(""Expected index out of bound exception!"");"
141374,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java,138,,"        Mailbox m1 = new Mailbox(""john.doe"", ""acme.org"");"
141375,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java,138,,"        Mailbox m1 = new Mailbox(""john.doe"", ""acme.org"");"
141376,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java,52,,"        Assert.assertEquals(""Mary Smith"", mailbox2.getName());"
141377,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java,54,,"        Assert.assertEquals(""example.net"", mailbox2.getDomain());"
141378,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java,56,,"        Mailbox mailbox3 = parser.parseMailbox(""john.doe@acme.org"");"
141379,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java,62,,"        Assert.assertEquals(""mary@example.net"", mailbox4.getAddress());"
141380,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressFormatterTest.java,46,,"        al.add(new Mailbox(""test"", ""example.com""));"
141381,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressFormatterTest.java,60,,"        Mailbox m1 = new Mailbox(""john.doe"", ""acme.org"");"
141382,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java,191,,"        Assert.assertEquals(""Mary Smith"", mailbox2.getName());"
141383,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java,193,,"        Assert.assertEquals(""example.net"", mailbox2.getDomain());"
141384,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java,195,,"        Mailbox mailbox3 = parser.parseMailbox(""john.doe@acme.org"");"
141385,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java,201,,"        Assert.assertEquals(""mary@example.net"", mailbox4.getAddress());"
141386,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/field/contenttype/ContentTypeTest.java,40,,"        test(""one/two; three          =  four"", ""one"", ""two"");"
141387,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/field/contenttype/ContentTypeTest.java,40,,"        test(""one/two; three          =  four"", ""one"", ""two"");"
141388,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java,32,,"        final String string = ""Field Value"";"
141389,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/AbstractEntityBuilderTest.java,54,,"        Assert.assertTrue(builder.containsField(""Content-Type""));"
141390,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/AbstractEntityBuilderTest.java,55,,"        Assert.assertTrue(builder.containsField(""CONTENT-TYPE""));"
141391,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/AbstractEntityBuilderTest.java,72,,"        List<Field> fields3 = builder.getFields(""Content-Transfer-Encoding"");"
141392,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/AbstractEntityBuilderTest.java,118,,"        builder.setContentType(""text/plain"");"
141393,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/AbstractEntityBuilderTest.java,156,,"        builder.setContentDisposition(""attachment"");"
141394,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/AbstractEntityBuilderTest.java,164,,"        Assert.assertTrue(builder.containsField(""Content-Disposition""));"
141395,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/AbstractEntityBuilderTest.java,176,,"        builder.setContentDisposition(""attachment"", ""some-other-file.txt"", 1234L);"
141396,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/HeaderImplTest.java,81,,"        header.addField(DefaultFieldParser.parse(""Received: from foo by bar for james""));"
141397,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/HeaderImplTest.java,82,,"        header.addField(DefaultFieldParser.parse(""Content-type: text/plain; charset=US-ASCII""));"
141398,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/HeaderImplTest.java,83,,"        header.addField(DefaultFieldParser.parse(""ReCeIvEd: from bar by foo for james""));"
141399,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/HeaderImplTest.java,86,,"        Assert.assertEquals(2, header.getFields(""received"").size());"
141400,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java,55,,"        builder.addField(new RawField(""Content-Type "", ""text/plain; charset=ISO-8859-1""));"
141401,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java,57,,"        Assert.assertEquals(""text/plain"", bd.getMimeType());"
141402,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java,102,,"        parent.addField(new RawField(""Content-Type"", ""mutlipart/alternative; boundary=foo""));"
141403,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java,129,,"        Assert.assertEquals(""us-ascii"", bd.getCharset());"
141404,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java,55,,"        builder.setBody(""stuff"", ""stuff"", Charsets.UTF_8);"
141405,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java,58,,"        ContentTypeField ct1 = builder.getField(""Content-Type"", ContentTypeField.class);"
141406,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java,60,,"        Assert.assertEquals(""UTF-8"", ct1.getCharset());"
141407,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java,77,,"        Assert.assertEquals(""text/plain"", ct3.getMimeType());"
141408,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java,168,,"        Assert.assertEquals(""john.doe@example.net"", builder.getSender().getAddress());"
141409,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java,197,,"        Mailbox mailbox2 = DefaultAddressParser.DEFAULT.parseMailbox(""jane.doe@example.net"");"
141410,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java,200,,"        Assert.assertEquals(""john.doe@example.net"", builder.getField(""From"")"
141411,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java,232,,"        Group group = new Group(""Does"", mailbox1, mailbox2);"
141412,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java,233,,"        Mailbox mailbox3 = DefaultAddressParser.DEFAULT.parseMailbox(""Mary Smith <mary@example.net>"");"
141413,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java,236,,"        Assert.assertEquals(""Does: john.doe@example.net, jane.doe@example.net;"","
141414,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java,240,,"        Assert.assertEquals(""Does: john.doe@example.net, jane.doe@example.net;, """
141415,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java,313,,"                builder.getField(""Bcc"").getBody());"
141416,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java,351,,"                builder.getField(""Reply-To"").getBody());"
141417,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java,371,,"                .setSubject(""testing ..."")"
141418,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java,383,,"                new Mailbox("""", ""batman"", ""localhost""),"
141419,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/MessageImplTest.java,85,,"        Assert.assertEquals(""multipart/digest, empty"", ""message/rfc822"","
141420,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/MessageImplTest.java,88,,"        Assert.assertEquals(""multipart/digest, text/plain"", ""text/plain"","
141421,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/MessageImplTest.java,241,,"        Assert.assertEquals(""john.doe@example.net"", m.getSender().getAddress());"
141422,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/MultipartBuilderTest.java,53,,"        MultipartBuilder builder = MultipartBuilder.create(""stuff"");"
141423,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/MultipartBuilderTest.java,54,,"        builder.setPreamble(""Hello"");"
141424,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/MultipartBuilderTest.java,55,,"        builder.setEpilogue(""Bye"");"
141425,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/MultipartBuilderTest.java,104,,"        builder.addBinaryPart(new byte[]{1, 2, 3}, ""some/stuff"");"
141426,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/MultipartBuilderTest.java,114,,"        ContentTypeField ct1 = entity1.getHeader().getField(""Content-Type"", ContentTypeField.class);"
141427,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/MultipartBuilderTest.java,115,,"        Assert.assertEquals(""text/plain"", ct1.getMimeType());"
141428,./TargetProjects/james-mime4j/dom/src/test/java/org/apache/james/mime4j/message/MultipartBuilderTest.java,117,,"        ContentTransferEncodingField te1 = entity1.getHeader().getField(""Content-Transfer-Encoding"", ContentTransferEncodingField.class);"
141429,./TargetProjects/james-mime4j/james-utils/src/test/java/org/apache/james/mime4j/utils/search/MessageMatcherTest.java,32,,"            .searchContents(Lists.<CharSequence>newArrayList(""as attachment !""))"
141430,./TargetProjects/james-mime4j/james-utils/src/test/java/org/apache/james/mime4j/utils/search/MessageMatcherTest.java,36,,"        assertThat(messageMatcher.messageMatches(getResourceStream(""sampleMail.msg""))).isTrue();"
141431,./TargetProjects/james-mime4j/james-utils/src/test/java/org/apache/james/mime4j/utils/search/MessageMatcherTest.java,65,,"            .contentTypes(Lists.newArrayList(""invalid""))"
141432,./TargetProjects/james-mime4j/james-utils/src/test/java/org/apache/james/mime4j/utils/search/MessageMatcherTest.java,76,,"            .contentTypes(Lists.newArrayList(""text/plain""))"
141433,./TargetProjects/james-mime4j/storage/src/test/java/org/apache/james/mime4j/storage/SingleBodyCopyTest.java,36,,"                .store(new ByteArrayInputStream(""test"".getBytes()));"
141434,./TargetProjects/james-postage/src/main/java/org/apache/james/postage/configuration/ConfigurationLoader.java,86,,"                    scenarioTestserver + "".pop3"", ""port"")));"
141435,./TargetProjects/james-postage/src/main/java/org/apache/james/postage/result/PostageRunnerResultImpl.java,147,,"        outputStreamWriter.write(""start,"" + this.TimestampFirstResult + "","" + new Date(this.TimestampFirstResult) + ""\r\n"");"
141436,./TargetProjects/james-postage/src/main/java/org/apache/james/postage/smtpserver/SMTPMailSink.java,113,,"                throw new UnsupportedOperationException(""Not implemented"");"
141437,./TargetProjects/james-postage/src/main/java/org/apache/james/postage/smtpserver/SimpleSMTPServerConfiguration.java,82,,"            addProperty(""handlerchain.handler.[@class]"", DNSRBLHandler.class.getName());"
141438,./TargetProjects/jclouds/apis/atmos/src/main/java/org/jclouds/atmos/AtmosClient.java,126,,"   @Path(""/{path}"")"
141439,./TargetProjects/jclouds/apis/atmos/src/main/java/org/jclouds/atmos/AtmosClient.java,128,,"   AtmosObject readFile(@PathParam(""path"") String path, GetOptions... options);"
141440,./TargetProjects/jclouds/apis/atmos/src/main/java/org/jclouds/atmos/blobstore/AtmosBlobRequestSigner.java,96,,"      checkNotNull(container, ""container"");"
141441,./TargetProjects/jclouds/apis/atmos/src/main/java/org/jclouds/atmos/blobstore/AtmosBlobStore.java,256,,"         throw new UnsupportedOperationException(""Atmos does not support multipart uploads"");"
141442,./TargetProjects/jclouds/apis/atmos/src/test/java/org/jclouds/atmos/AtmosClientLiveTest.java,152,,"      createOrReplaceObject(""object2"", data, hashCode, ""meta-value1"");"
141443,./TargetProjects/jclouds/apis/atmos/src/test/java/org/jclouds/atmos/AtmosClientLiveTest.java,170,,"      createOrReplaceObject(""object"", data1, Hashing.md5().hashString(data1, UTF_8), ""meta-value1"");"
141444,./TargetProjects/jclouds/apis/atmos/src/test/java/org/jclouds/atmos/AtmosClientLiveTest.java,181,,"         System.err.printf(""upload/delete/create type %s%n"", stream ? ""stream"" : ""string"");"
141445,./TargetProjects/jclouds/apis/atmos/src/test/java/org/jclouds/atmos/AtmosClientLiveTest.java,181,,"         System.err.printf(""upload/delete/create type %s%n"", stream ? ""stream"" : ""string"");"
141446,./TargetProjects/jclouds/apis/atmos/src/test/java/org/jclouds/atmos/AtmosClientTest.java,127,,"      GeneratedHttpRequest request = processor.createRequest(method, ImmutableList.<Object> of(""dir""));"
141447,./TargetProjects/jclouds/apis/atmos/src/test/java/org/jclouds/atmos/AtmosClientTest.java,130,,"      assertNonPayloadHeadersEqual(request, HttpHeaders.ACCEPT + "": */*\n"");"
141448,./TargetProjects/jclouds/apis/atmos/src/test/java/org/jclouds/atmos/AtmosClientTest.java,164,,"      assertPayloadEquals(request, ""hello"", ""text/plain"", false);"
141449,./TargetProjects/jclouds/apis/atmos/src/test/java/org/jclouds/atmos/AtmosClientTest.java,164,,"      assertPayloadEquals(request, ""hello"", ""text/plain"", false);"
141450,./TargetProjects/jclouds/apis/atmos/src/test/java/org/jclouds/atmos/AtmosClientTest.java,228,,"      GeneratedHttpRequest request = processor.createRequest(method, ImmutableList.<Object> of(""dir/file""));"
141451,./TargetProjects/jclouds/apis/atmos/src/test/java/org/jclouds/atmos/binders/BindMetadataToHeadersTest.java,46,,"      HttpRequest request = HttpRequest.builder().method(""GET"").endpoint(""http://localhost"").build();"
141452,./TargetProjects/jclouds/apis/atmos/src/test/java/org/jclouds/atmos/binders/BindMetadataToHeadersTest.java,46,,"      HttpRequest request = HttpRequest.builder().method(""GET"").endpoint(""http://localhost"").build();"
141453,./TargetProjects/jclouds/apis/atmos/src/test/java/org/jclouds/atmos/binders/BindUserMetadataToHeadersTest.java,40,,"      metadata.getMetadata().put(""apple"", ""bear"");"
141454,./TargetProjects/jclouds/apis/atmos/src/test/java/org/jclouds/atmos/binders/BindUserMetadataToHeadersTest.java,41,,"      metadata.getMetadata().put(""sushi"", ""king"");"
141455,./TargetProjects/jclouds/apis/atmos/src/test/java/org/jclouds/atmos/binders/BindUserMetadataToHeadersTest.java,42,,"      HttpRequest request = HttpRequest.builder().method(""GET"").endpoint(""http://localhost"").build();"
141456,./TargetProjects/jclouds/apis/atmos/src/test/java/org/jclouds/atmos/binders/BindUserMetadataToHeadersTest.java,42,,"      HttpRequest request = HttpRequest.builder().method(""GET"").endpoint(""http://localhost"").build();"
141457,./TargetProjects/jclouds/apis/atmos/src/test/java/org/jclouds/atmos/blobstore/integration/AtmosIntegrationLiveTest.java,38,,"@Test(groups = { ""integration"", ""live"" })"
141458,./TargetProjects/jclouds/apis/atmos/src/test/java/org/jclouds/atmos/blobstore/integration/AtmosIntegrationLiveTest.java,38,,"@Test(groups = { ""integration"", ""live"" })"
141459,./TargetProjects/jclouds/apis/atmos/src/test/java/org/jclouds/atmos/blobstore/integration/AtmosIntegrationLiveTest.java,96,,"      throw new SkipException(""Atmos does not support multipart uploads"");"
141460,./TargetProjects/jclouds/apis/atmos/src/test/java/org/jclouds/atmos/filters/SignRequestTest.java,83,,"      HttpRequest request = newRequest(inputHeaders().put(AtmosHeaders.SIGNATURE, ""foo"")"
141461,./TargetProjects/jclouds/apis/atmos/src/test/java/org/jclouds/atmos/functions/AtmosObjectNameTest.java,40,,"      blob.getContentMetadata().setName(""foo"");"
141462,./TargetProjects/jclouds/apis/byon/src/test/java/org/jclouds/byon/config/CacheNodeStoreModuleTest.java,49,,"      return new Object[][] { { ""instance1"", ""bear"" }, { ""instance2"", ""apple"" }, { ""instance2"", ""francis"" },"
141463,./TargetProjects/jclouds/apis/byon/src/test/java/org/jclouds/byon/config/CacheNodeStoreModuleTest.java,56,,"      map.put(""test"", Node.builder().id(""instance1"").name(""instancename"").build());"
141464,./TargetProjects/jclouds/apis/byon/src/test/java/org/jclouds/byon/config/CacheNodeStoreModuleTest.java,56,,"      map.put(""test"", Node.builder().id(""instance1"").name(""instancename"").build());"
141465,./TargetProjects/jclouds/apis/byon/src/test/java/org/jclouds/byon/config/YamlNodeStoreModuleTest.java,50,,"      return new Object[][] { { ""instance1"", ""bear"" }, { ""instance2"", ""apple"" }, { ""instance2"", ""francis"" },"
141466,./TargetProjects/jclouds/apis/byon/src/test/java/org/jclouds/byon/config/YamlNodeStoreModuleTest.java,65,,"      map.put(""test"", ByteSource.wrap(""id: instance1\nname: instancename\n"".getBytes()));"
141467,./TargetProjects/jclouds/apis/byon/src/test/java/org/jclouds/byon/config/YamlNodeStoreModuleTest.java,66,,"      checkConsistent(map, getStore(createInjectorWithProvidedMap(map)), ""test"", ""instance1"", ""instancename"");"
141468,./TargetProjects/jclouds/apis/byon/src/test/java/org/jclouds/byon/functions/NodeToNodeMetadataTest.java,77,,"            .ids(""cluster-"" + id)"
141469,./TargetProjects/jclouds/apis/byon/src/test/java/org/jclouds/byon/functions/NodesFromYamlTest.java,36,,"   public static final Node TEST1 = new Node(""cluster-1"", ""cluster-1"", ""accounting analytics cluster"","
141470,./TargetProjects/jclouds/apis/byon/src/test/java/org/jclouds/byon/suppliers/SupplyFromProviderURIOrNodesPropertyTest.java,33,,"      String path = getClass().getResource(""/test1.yaml"").getPath();"
141471,./TargetProjects/jclouds/apis/chef/src/main/java/org/jclouds/chef/ChefApi.java,150,,"   Client createClient(@PayloadParam(""name"") String clientName);"
141472,./TargetProjects/jclouds/apis/chef/src/main/java/org/jclouds/chef/ChefApi.java,213,,"   @SinceApiVersion(""0.10.0"")"
141473,./TargetProjects/jclouds/apis/chef/src/main/java/org/jclouds/chef/ChefApi.java,219,,"   Set<CookbookDefinition> listCookbooksInEnvironment(@PathParam(""environmentname"") String environmentName);"
141474,./TargetProjects/jclouds/apis/chef/src/main/java/org/jclouds/chef/ChefApi.java,252,,"   Set<String> listVersionsOfCookbook(@PathParam(""cookbookname"") String cookbookName);"
141475,./TargetProjects/jclouds/apis/chef/src/main/java/org/jclouds/chef/ChefApi.java,401,,"   DatabagItem getDatabagItem(@PathParam(""databagName"") String databagName,"
141476,./TargetProjects/jclouds/apis/chef/src/main/java/org/jclouds/chef/domain/CookbookDefinition.java,49,,"         this.url = checkNotNull(url, ""url"");"
141477,./TargetProjects/jclouds/apis/chef/src/main/java/org/jclouds/chef/domain/CookbookVersion.java,54,,"         this.version = checkNotNull(version, ""version"");"
141478,./TargetProjects/jclouds/apis/chef/src/main/java/org/jclouds/chef/domain/Metadata.java,68,,"         this.suggestions.put(checkNotNull(key, ""key""), checkNotNull(value, ""value""));"
141479,./TargetProjects/jclouds/apis/chef/src/main/java/org/jclouds/chef/domain/Metadata.java,68,,"         this.suggestions.put(checkNotNull(key, ""key""), checkNotNull(value, ""value""));"
141480,./TargetProjects/jclouds/apis/chef/src/main/java/org/jclouds/chef/domain/Node.java,56,,"         this.normalAttributes.put(checkNotNull(key, ""key""), checkNotNull(value, ""value""));"
141481,./TargetProjects/jclouds/apis/chef/src/main/java/org/jclouds/chef/domain/Node.java,56,,"         this.normalAttributes.put(checkNotNull(key, ""key""), checkNotNull(value, ""value""));"
141482,./TargetProjects/jclouds/apis/chef/src/main/java/org/jclouds/chef/domain/Role.java,57,,"         this.name = checkNotNull(name, ""name"");"
141483,./TargetProjects/jclouds/apis/chef/src/main/java/org/jclouds/chef/features/OrganizationApi.java,68,,"   User getUser(@PathParam(""name"") String name);"
141484,./TargetProjects/jclouds/apis/chef/src/main/java/org/jclouds/ohai/config/OhaiModule.java,79,,"   @Named(""systemProperties"")"
141485,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/ChefApiExpectTest.java,56,,"            signed(getHttpRequestBuilder(""GET"", ""/clients"").build()),"
141486,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/ChefApiExpectTest.java,99,,"      Set<String> recipes = api.listRecipesInEnvironment(""dev"");"
141487,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/ChefApiExpectTest.java,178,,"            signed(getHttpRequestBuilder(""GET"", ""/search/role"").build()),"
141488,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/ChefApiLiveTest.java,95,,"            .version(""0.0.0"") //"
141489,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/ChefApiLiveTest.java,290,,"   @Test(dependsOnMethods = ""testCreateDatabagItem"")"
141490,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/ChefApiLiveTest.java,348,,"   @Test(dependsOnMethods = { ""testListSearchIndexes"", ""testCreateNode"" })"
141491,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/ChefApiLiveTest.java,366,,"      SearchOptions options = SearchOptions.Builder.query(""name:"" + PREFIX);"
141492,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/ChefApiLiveTest.java,470,,"   @Test(dependsOnMethods = ""testCreateEnvironment"")"
141493,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/ChefApiTest.java,83,,"      assertNonPayloadHeadersEqual(httpRequest, ""Accept: application/json\nX-Chef-Version: "" + ChefApiMetadata.DEFAULT_API_VERSION"
141494,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/ChefApiTest.java,84,,"            + ""-test\n"");"
141495,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/ChefApiTest.java,85,,"      assertPayloadEquals(httpRequest, ""{\""is_completed\"":true}"", ""application/json"", false);"
141496,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/ChefApiTest.java,135,,"            ImmutableList.<Object> of(""cookbook"", ""1.0.0"")));"
141497,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/ChefApiTest.java,299,,"            ImmutableList.<Object> of(Node.builder().name(""testnode"").runListElement(""recipe[java]"")"
141498,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/ChefApiTest.java,361,,"            .envRunListElement(""erl.one"", ""erl.one.alpha"")"
141499,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/ChefApiTest.java,363,,"            .envRunListElement(""erl.two"", ""erl.two.alpha"")"
141500,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/ChefApiTest.java,426,,"      GeneratedHttpRequest httpRequest = processor.apply(Invocation.create(method, ImmutableList.<Object> of(""name"")));"
141501,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/ChefApiTest.java,460,,"      Invokable<?, ?> method = method(ChefApi.class, ""createDatabagItem"", String.class, DatabagItem.class);"
141502,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/ChefApiTest.java,464,,"      assertRequestLineEquals(httpRequest, ""POST http://localhost:4000/data/name HTTP/1.1"");"
141503,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/binders/BindGroupToUpdateRequestJsonPayloadTest.java,54,,"      HttpRequest request = HttpRequest.builder().method(""POST"").endpoint(URI.create(""http://localhost"")).build();"
141504,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/binders/BindGroupToUpdateRequestJsonPayloadTest.java,54,,"      HttpRequest request = HttpRequest.builder().method(""POST"").endpoint(URI.create(""http://localhost"")).build();"
141505,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/config/ChefParserModuleTest.java,79,,"      assertEquals(noNulls, ImmutableMap.of(""value"", ""a test string!""));"
141506,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/config/ChefParserModuleTest.java,88,,"            ImmutableMap.of(""i-foo"", new KeyValue(""i-foo"", ""foo""), ""i-bar"", new KeyValue(""i-bar"", ""bar"")));"
141507,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/config/ChefParserModuleTest.java,88,,"            ImmutableMap.of(""i-foo"", new KeyValue(""i-foo"", ""foo""), ""i-bar"", new KeyValue(""i-bar"", ""bar"")));"
141508,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/domain/RoleTest.java,43,,"      Role.builder().envRunList(""does.not.matter"", (List<String>) null);"
141509,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/domain/RoleTest.java,74,,"      String env = ""env"";"
141510,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/features/OrganizationApiExpectTest.java,54,,"                  .method(""GET"") //"
141511,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/features/OrganizationApiExpectTest.java,56,,"                  .addHeader(""X-Chef-Version"", ChefApiMetadata.DEFAULT_API_VERSION) //"
141512,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/features/OrganizationApiExpectTest.java,57,,"                  .addHeader(""Accept"", MediaType.APPLICATION_JSON).build()), //"
141513,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/features/OrganizationApiExpectTest.java,62,,"      User user = api.organizationApi().get().getUser(""nacx"");"
141514,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/features/OrganizationApiExpectTest.java,76,,"      assertNull(api.organizationApi().get().getUser(""foo""));"
141515,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/features/OrganizationApiExpectTest.java,92,,"      assertTrue(groups.contains(""admins""));"
141516,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/filters/SignedHeaderAuthTest.java,131,,"      HttpRequest request = HttpRequest.builder().method(HttpMethod.POST).endpoint(""http://localhost/"" + PATH)"
141517,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/functions/BootstrapConfigForGroupTest.java,56,,"      BootstrapConfigForGroup fn = new BootstrapConfigForGroup(""jclouds"", chefApi, json);"
141518,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/functions/BootstrapConfigForGroupTest.java,58,,"      expect(chefApi.getDatabagItem(""jclouds"", ""foo"")).andReturn(null);"
141519,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/functions/ClientForGroupTest.java,45,,"      expect(chefApi.createClient(""foo-client-00"")).andReturn(client);"
141520,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/functions/ClientForGroupTest.java,68,,"            ImmutableSet.<String> of(""foo-client-00"", ""foo-client-01"", ""foo-client-02""));"
141521,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/functions/GroupToBootScriptTest.java,75,,"            bind(String.class).annotatedWith(Names.named(CHEF_UPDATE_GEM_SYSTEM)).toInstance(""true"");"
141522,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/functions/GroupToBootScriptTest.java,99,,"      GroupToBootScript fn = new GroupToBootScript(Suppliers.ofInstance(URI.create(""http://localhost:4000"")),"
141523,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/functions/GroupToBootScriptTest.java,100,,"            CacheLoader.from(Functions.forMap(ImmutableMap.of(""foo"", BootstrapConfig.builder().build()))),"
141524,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/functions/GroupToBootScriptTest.java,133,,"      BootstrapConfig config = BootstrapConfig.builder().attributes(new JsonBall(""{\""tomcat6\"":{\""ssl_port\"":8433}}""))"
141525,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/functions/GroupToBootScriptTest.java,134,,"            .runList(new RunListBuilder().addRecipe(""apache2"").addRole(""webserver"").build()).build();"
141526,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/functions/GroupToBootScriptTest.java,134,,"            .runList(new RunListBuilder().addRecipe(""apache2"").addRole(""webserver"").build()).build();"
141527,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/functions/GroupToBootScriptTest.java,154,,"            .environment(""env"").runList(new RunListBuilder().addRecipe(""apache2"").addRole(""webserver"").build()).build();"
141528,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/functions/GroupToBootScriptTest.java,183,,"            ""setupPublicCurl || exit 1\ncurl -q -s -S -L --connect-timeout 10 --max-time 600 --retry 20 """
141529,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/functions/GroupToBootScriptTest.java,184,,"                  + ""-X GET  https://www.opscode.com/chef/install.sh |(bash)\n"" + readContent(""bootstrap.sh""));"
141530,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/functions/ParseClientFromJsonTest.java,93,,"      Client user = Client.builder().certificate(certificate).orgname(""jclouds"").clientname(""adriancole-jcloudstest"")"
141531,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/internal/BaseChefServiceTest.java,63,,"      List<String> runlist = new RunListBuilder().addRecipe(""apache2"").addRole(""webserver"").build();"
141532,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/internal/BaseChefServiceTest.java,63,,"      List<String> runlist = new RunListBuilder().addRecipe(""apache2"").addRole(""webserver"").build();"
141533,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/strategy/internal/ListCookbookVersionsInEnvironmentImplLiveTest.java,77,,"      api.deleteCookbook(PREFIX, ""0.0.0"");"
141534,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/strategy/internal/ListCookbookVersionsInEnvironmentImplLiveTest.java,78,,"      api.deleteCookbook(PREFIX, ""1.0.0"");"
141535,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/strategy/internal/ListCookbookVersionsInEnvironmentImplLiveTest.java,90,,"      assertTrue(size(strategy.execute(""_default"")) > 0, ""Expected one or more elements"");"
141536,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/strategy/internal/ListCookbookVersionsInEnvironmentImplLiveTest.java,90,,"      assertTrue(size(strategy.execute(""_default"")) > 0, ""Expected one or more elements"");"
141537,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/strategy/internal/UpdateAutomaticAttributesOnNodeImplTest.java,48,,"      Node node = Node.builder().name(""name"").environment(""_default"").build();"
141538,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/chef/util/RunListBuilderTest.java,40,,"      options.addRecipe(""test"");"
141539,./TargetProjects/jclouds/apis/chef/src/test/java/org/jclouds/ohai/functions/NestSlashKeysTest.java,63,,"            json.toJson(converter.apply(ImmutableListMultimap.<String, Supplier<JsonBall>> of(""java"","
141540,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/domain/NetworkService.java,95,,"            ""name"", ""value"""
141541,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/domain/Project.java,47,,"            return valueOf(CaseFormat.LOWER_HYPHEN.to(CaseFormat.UPPER_UNDERSCORE, checkNotNull(state, ""state"")));"
141542,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/domain/StoragePool.java,54,,"            return valueOf(CaseFormat.UPPER_CAMEL.to(CaseFormat.UPPER_UNDERSCORE, checkNotNull(type, ""type"")));"
141543,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/AccountApi.java,54,,"   @Named(""listAccounts"")"
141544,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/AddressApi.java,60,,"   @Named(""listPublicIpAddresses"")"
141545,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/AddressApi.java,62,,"   @QueryParams(keys = { ""command"", ""listAll"" }, values = { ""listPublicIpAddresses"", ""true"" })"
141546,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/DomainDomainApi.java,59,,"   @Named(""listDomains"")"
141547,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/FirewallApi.java,58,,"   @Named(""listFirewallRules"")"
141548,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/FirewallApi.java,60,,"   @QueryParams(keys = { ""command"", ""listAll"" }, values = { ""listFirewallRules"", ""true"" })"
141549,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/FirewallApi.java,60,,"   @QueryParams(keys = { ""command"", ""listAll"" }, values = { ""listFirewallRules"", ""true"" })"
141550,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/FirewallApi.java,60,,"   @QueryParams(keys = { ""command"", ""listAll"" }, values = { ""listFirewallRules"", ""true"" })"
141551,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/FirewallApi.java,61,,"   @SelectJson(""firewallrule"")"
141552,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/FirewallApi.java,81,,"   @Named(""createFirewallRule"")"
141553,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/FirewallApi.java,87,,"         @QueryParam(""protocol"") FirewallRule.Protocol protocol, CreateFirewallRuleOptions... options);"
141554,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/FirewallApi.java,115,,"   @Named(""listEgressFirewallRules"")"
141555,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/FirewallApi.java,138,,"   @Named(""createEgressFirewallRule"")"
141556,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/FirewallApi.java,173,,"   @Named(""listPortForwardingRules"")"
141557,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/GlobalDomainApi.java,60,,"   @QueryParams(keys = ""command"", values = ""createDomain"")"
141558,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/GlobalDomainApi.java,90,,"   @Named(""deleteDomain"")"
141559,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/GlobalHostApi.java,64,,"   @QueryParams(keys = { ""command"", ""listAll"" }, values = { ""listHosts"", ""true"" })"
141560,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/GlobalHostApi.java,65,,"   @SelectJson(""host"")"
141561,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/GlobalHostApi.java,109,,"   @Named(""updateHostPassword"")"
141562,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/GlobalHostApi.java,186,,"   @SelectJson(""cluster"")"
141563,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/GlobalOfferingApi.java,70,,"   @QueryParams(keys = ""command"", values = ""createServiceOffering"")"
141564,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/GlobalPodApi.java,60,,"   @Named(""listPods"")"
141565,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/GlobalPodApi.java,62,,"   @QueryParams(keys = { ""command"", ""listAll"" }, values = { ""listPods"", ""true"" })"
141566,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/GlobalPodApi.java,63,,"   @SelectJson(""pod"")"
141567,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/GlobalPodApi.java,96,,"   @Named(""createPod"")"
141568,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/GlobalUserApi.java,65,,"   @QueryParams(keys = ""command"", values = ""createUser"")"
141569,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/GlobalVlanApi.java,55,,"   @Named(""listVlanIpRanges"")"
141570,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/GlobalVlanApi.java,57,,"   @QueryParams(keys = { ""command"", ""listAll"" }, values = { ""listVlanIpRanges"", ""true"" })"
141571,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/GuestOSApi.java,59,,"   @Named(""listOsTypes"")"
141572,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/GuestOSApi.java,61,,"   @QueryParams(keys = { ""command"", ""listAll"" }, values = { ""listOsTypes"", ""true"" })"
141573,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/GuestOSApi.java,61,,"   @QueryParams(keys = { ""command"", ""listAll"" }, values = { ""listOsTypes"", ""true"" })"
141574,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/GuestOSApi.java,61,,"   @QueryParams(keys = { ""command"", ""listAll"" }, values = { ""listOsTypes"", ""true"" })"
141575,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/GuestOSApi.java,89,,"   @Named(""listOsCategories"")"
141576,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/HypervisorApi.java,46,,"   @Named(""listHypervisors"")"
141577,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/ISOApi.java,68,,"   @QueryParams(keys = ""command"", values = ""attachIso"")"
141578,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/ISOApi.java,91,,"   @Named(""listIsos"")"
141579,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/LoadBalancerApi.java,62,,"   @Named(""listLoadBalancerRules"")"
141580,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/LoadBalancerApi.java,64,,"   @QueryParams(keys = { ""command"", ""listAll"" }, values = { ""listLoadBalancerRules"", ""true"" })"
141581,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/LoadBalancerApi.java,108,,"   @SelectJson(""jobid"")"
141582,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/LoadBalancerApi.java,161,,"   @Named(""assignToLoadBalancerRule"")"
141583,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/LoadBalancerApi.java,168,,"         @QueryParam(""virtualmachineids"") @ParamParser(JoinOnComma.class) Iterable<String> virtualMachineIds);"
141584,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/LoadBalancerApi.java,201,,"   @Named(""removeFromLoadBalancerRule"")"
141585,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/NATApi.java,61,,"   @Named(""listIpForwardingRules"")"
141586,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/NATApi.java,63,,"   @QueryParams(keys = { ""command"", ""listAll"" }, values = { ""listIpForwardingRules"", ""true"" })"
141587,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/NATApi.java,63,,"   @QueryParams(keys = { ""command"", ""listAll"" }, values = { ""listIpForwardingRules"", ""true"" })"
141588,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/NATApi.java,63,,"   @QueryParams(keys = { ""command"", ""listAll"" }, values = { ""listIpForwardingRules"", ""true"" })"
141589,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/NATApi.java,64,,"   @SelectJson(""ipforwardingrule"")"
141590,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/NATApi.java,97,,"   Set<IPForwardingRule> getIPForwardingRulesForIPAddress(@QueryParam(""ipaddressid"") String id);"
141591,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/NetworkApi.java,56,,"   @Named(""listNetworks"")"
141592,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/NetworkApi.java,58,,"   @QueryParams(keys = { ""command"", ""listAll"" }, values = { ""listNetworks"", ""true"" })"
141593,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/OfferingApi.java,60,,"   @Named(""listServiceOfferings"")"
141594,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/OfferingApi.java,62,,"   @QueryParams(keys = { ""command"", ""listAll"" }, values = { ""listServiceOfferings"", ""true"" })"
141595,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/OfferingApi.java,62,,"   @QueryParams(keys = { ""command"", ""listAll"" }, values = { ""listServiceOfferings"", ""true"" })"
141596,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/OfferingApi.java,62,,"   @QueryParams(keys = { ""command"", ""listAll"" }, values = { ""listServiceOfferings"", ""true"" })"
141597,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/OfferingApi.java,92,,"   @Named(""listDiskOfferings"")"
141598,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/OfferingApi.java,124,,"   @Named(""listNetworkOfferings"")"
141599,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/ProjectApi.java,53,,"   @Named(""listProjects"")"
141600,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/SSHKeyPairApi.java,56,,"   @Named(""listSSHKeyPairs"")"
141601,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/SSHKeyPairApi.java,58,,"   @QueryParams(keys = { ""command"", ""listAll"" }, values = { ""listSSHKeyPairs"", ""true"" })"
141602,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/SSHKeyPairApi.java,76,,"   SshKeyPair registerSSHKeyPair(@QueryParam(""name"") String name, @QueryParam(""publickey"") String publicKey);"
141603,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/SecurityGroupApi.java,62,,"   @Named(""listSecurityGroups"")"
141604,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/SecurityGroupApi.java,64,,"   @QueryParams(keys = { ""command"", ""listAll"" }, values = { ""listSecurityGroups"", ""true"" })"
141605,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/SecurityGroupApi.java,65,,"   @SelectJson(""securitygroup"")"
141606,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/SecurityGroupApi.java,131,,"   @Named(""authorizeSecurityGroupIngress"")"
141607,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/SecurityGroupApi.java,134,,"   @SelectJson(""jobid"")"
141608,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/SecurityGroupApi.java,136,,"   String authorizeIngressPortsToCIDRs(@QueryParam(""securitygroupid"") String securityGroupId,"
141609,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/SecurityGroupApi.java,137,,"         @QueryParam(""protocol"") String protocol, @QueryParam(""startport"") int startPort,"
141610,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/SnapshotApi.java,68,,"   @QueryParams(keys = ""command"", values = ""createSnapshot"")"
141611,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/SnapshotApi.java,78,,"   @Named(""listSnapshots"")"
141612,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/SnapshotApi.java,137,,"   @Named(""deleteSnapshotPolicies"")"
141613,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/TemplateApi.java,80,,"   @QueryParams(keys = ""command"", values = ""createTemplate"")"
141614,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/TemplateApi.java,111,,"   @SelectJson(""template"")"
141615,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/TemplateApi.java,185,,"   @Named(""listTemplates"")"
141616,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/TemplateApi.java,187,,"   @QueryParams(keys = { ""command"", ""listAll"", ""templatefilter"" }, values = { ""listTemplates"", ""true"", ""executable"" })"
141617,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/TemplateApi.java,187,,"   @QueryParams(keys = { ""command"", ""listAll"", ""templatefilter"" }, values = { ""listTemplates"", ""true"", ""executable"" })"
141618,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/VMGroupApi.java,56,,"   @Named(""listInstanceGroups"")"
141619,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/VMGroupApi.java,58,,"   @QueryParams(keys = { ""command"", ""listAll"" }, values = { ""listInstanceGroups"", ""true"" })"
141620,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/VMGroupApi.java,59,,"   @SelectJson(""instancegroup"")"
141621,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/VirtualMachineApi.java,61,,"   @Named(""listVirtualMachines"")"
141622,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/VirtualMachineApi.java,63,,"   @QueryParams(keys = { ""command"", ""listAll"" }, values = { ""listVirtualMachines"", ""true"" })"
141623,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/VirtualMachineApi.java,117,,"   @SelectJson(""jobid"")"
141624,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/VolumeApi.java,55,,"   @Named(""listVolumes"")"
141625,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/VolumeApi.java,57,,"   @QueryParams(keys = { ""command"", ""listAll"" }, values = { ""listVolumes"", ""true"" })"
141626,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/VolumeApi.java,87,,"   @Named(""createVolume"")"
141627,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/features/ZoneApi.java,55,,"   @Named(""listZones"")"
141628,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/options/AssignVirtualMachineOptions.java,41,,"      this.queryParameters.replaceValues(""networkids"", ImmutableSet.of(networkId + """"));"
141629,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/options/DeployVirtualMachineOptions.java,141,,"      this.queryParameters.replaceValues(""networkids"", ImmutableSet.of(networkId + """"));"
141630,./TargetProjects/jclouds/apis/cloudstack/src/main/java/org/jclouds/cloudstack/predicates/NetworkPredicates.java,36,,"         return Iterables.any(checkNotNull(arg0, ""network"").getServices(), supportsStaticNAT);"
141631,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/CloudStackComputeServiceAdapterExpectTest.java,53,,"   HttpRequest queryAsyncJobResult = HttpRequest.builder().method(""GET"")"
141632,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/CloudStackComputeServiceAdapterExpectTest.java,54,,"        .endpoint(""http://localhost:8080/client/api"")"
141633,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/CloudStackComputeServiceAdapterExpectTest.java,55,,"        .addQueryParam(""response"", ""json"")"
141634,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/CloudStackComputeServiceAdapterExpectTest.java,55,,"        .addQueryParam(""response"", ""json"")"
141635,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/CloudStackComputeServiceAdapterExpectTest.java,56,,"        .addQueryParam(""command"", ""queryAsyncJobResult"")"
141636,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/CloudStackComputeServiceAdapterExpectTest.java,58,,"        .addQueryParam(""apiKey"", ""APIKEY"")"
141637,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/CloudStackComputeServiceAdapterExpectTest.java,58,,"        .addQueryParam(""apiKey"", ""APIKEY"")"
141638,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/CloudStackComputeServiceAdapterExpectTest.java,59,,"        .addQueryParam(""signature"", ""v8BWKMxd+IzHIuTaZ9sNSzCWqFI="")"
141639,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/CloudStackComputeServiceAdapterExpectTest.java,60,,"        .addHeader(""Accept"", ""application/json"")"
141640,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/CloudStackComputeServiceAdapterExpectTest.java,60,,"        .addHeader(""Accept"", ""application/json"")"
141641,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/CloudStackComputeServiceAdapterExpectTest.java,98,,"              .addQueryParam(""command"", ""deployVirtualMachine"")"
141642,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/CloudStackComputeServiceAdapterExpectTest.java,99,,"              .addQueryParam(""zoneid"", ""1"")"
141643,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/CloudStackComputeServiceAdapterExpectTest.java,100,,"              .addQueryParam(""serviceofferingid"", ""1"")"
141644,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/CloudStackComputeServiceAdapterExpectTest.java,101,,"              .addQueryParam(""templateid"", ""4"")"
141645,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/CloudStackComputeServiceAdapterExpectTest.java,102,,"              .addQueryParam(""displayname"", ""test-e92"")"
141646,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/CloudStackComputeServiceAdapterExpectTest.java,102,,"              .addQueryParam(""displayname"", ""test-e92"")"
141647,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/CloudStackComputeServiceAdapterExpectTest.java,103,,"              .addQueryParam(""name"", ""test-e92"")"
141648,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/CloudStackComputeServiceAdapterExpectTest.java,104,,"              .addQueryParam(""networkids"", ""204"")"
141649,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/CloudStackComputeServiceAdapterExpectTest.java,104,,"              .addQueryParam(""networkids"", ""204"")"
141650,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/CloudStackComputeServiceAdapterExpectTest.java,105,,"              .addQueryParam(""group"", ""test"")"
141651,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/CloudStackComputeServiceAdapterExpectTest.java,105,,"              .addQueryParam(""group"", ""test"")"
141652,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/CloudStackComputeServiceAdapterExpectTest.java,150,,"              .addQueryParam(""keypair"", ""mykeypair"")"
141653,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/CloudStackComputeServiceAdapterExpectTest.java,150,,"              .addQueryParam(""keypair"", ""mykeypair"")"
141654,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/CloudStackComputeServiceAdapterExpectTest.java,172,,"      String privKey = Strings2.toStringAndClose(getClass().getResourceAsStream(""/test""));"
141655,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackImageExtensionExpectTest.java,50,,"      HttpRequest listVM = HttpRequest.builder().method(""GET"")"
141656,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackImageExtensionExpectTest.java,51,,"         .endpoint(""http://localhost:8080/client/api"")"
141657,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackImageExtensionExpectTest.java,52,,"         .addQueryParam(""response"", ""json"")"
141658,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackImageExtensionExpectTest.java,52,,"         .addQueryParam(""response"", ""json"")"
141659,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackImageExtensionExpectTest.java,53,,"         .addQueryParam(""command"", ""listVirtualMachines"")"
141660,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackImageExtensionExpectTest.java,55,,"         .addQueryParam(""id"", ""3239ade9-fd25-405c-8eda-59f0313a3fb0"")"
141661,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackImageExtensionExpectTest.java,56,,"         .addQueryParam(""apiKey"", ""APIKEY"")"
141662,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackImageExtensionExpectTest.java,56,,"         .addQueryParam(""apiKey"", ""APIKEY"")"
141663,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackImageExtensionExpectTest.java,57,,"         .addQueryParam(""signature"", ""Qq7Br3qNsyr5ifWZHIrLAslhwm0="")"
141664,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackImageExtensionExpectTest.java,58,,"         .addHeader(""Accept"", ""application/json"")"
141665,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackImageExtensionExpectTest.java,58,,"         .addHeader(""Accept"", ""application/json"")"
141666,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackSecurityGroupExtensionExpectTest.java,64,,"   protected final HttpRequest queryAsyncJobResultAuthorizeIngress = HttpRequest.builder().method(""GET"")"
141667,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackSecurityGroupExtensionExpectTest.java,65,,"           .endpoint(""http://localhost:8080/client/api"")"
141668,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackSecurityGroupExtensionExpectTest.java,66,,"           .addQueryParam(""response"", ""json"")"
141669,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackSecurityGroupExtensionExpectTest.java,66,,"           .addQueryParam(""response"", ""json"")"
141670,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackSecurityGroupExtensionExpectTest.java,67,,"           .addQueryParam(""command"", ""queryAsyncJobResult"")"
141671,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackSecurityGroupExtensionExpectTest.java,69,,"           .addQueryParam(""apiKey"", ""APIKEY"")"
141672,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackSecurityGroupExtensionExpectTest.java,69,,"           .addQueryParam(""apiKey"", ""APIKEY"")"
141673,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackSecurityGroupExtensionExpectTest.java,70,,"           .addQueryParam(""signature"", ""y4gk3ckWAMPDNZM26LUK0gAhfiE="")"
141674,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackSecurityGroupExtensionExpectTest.java,71,,"           .addHeader(""Accept"", ""application/json"")"
141675,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackSecurityGroupExtensionExpectTest.java,71,,"           .addHeader(""Accept"", ""application/json"")"
141676,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackSecurityGroupExtensionExpectTest.java,81,,"           .addQueryParam(""command"", ""listSecurityGroups"")"
141677,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackSecurityGroupExtensionExpectTest.java,82,,"           .addQueryParam(""listAll"", ""true"")"
141678,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackSecurityGroupExtensionExpectTest.java,82,,"           .addQueryParam(""listAll"", ""true"")"
141679,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackSecurityGroupExtensionExpectTest.java,360,,"              .addQueryParam(""command"", ""authorizeSecurityGroupIngress"")"
141680,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackSecurityGroupExtensionExpectTest.java,361,,"              .addQueryParam(""securitygroupid"", ""13"")"
141681,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackSecurityGroupExtensionExpectTest.java,362,,"              .addQueryParam(""protocol"", ""UDP"")"
141682,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackSecurityGroupExtensionExpectTest.java,363,,"              .addQueryParam(""startport"", ""11"")"
141683,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackSecurityGroupExtensionExpectTest.java,364,,"              .addQueryParam(""endport"", ""11"")"
141684,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackSecurityGroupExtensionExpectTest.java,365,,"              .addQueryParam(""cidrlist"", ""1.1.1.1/24"")"
141685,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackSecurityGroupExtensionExpectTest.java,372,,"              .payload(payloadFromResource(""/getsecuritygroupresponse_extension_byid_with_cidr.json""))"
141686,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackSecurityGroupExtensionExpectTest.java,455,,"              .addQueryParam(""usersecuritygrouplist[0].account"", ""adrian"")"
141687,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackSecurityGroupExtensionExpectTest.java,456,,"              .addQueryParam(""usersecuritygrouplist[0].group"", ""adriancole"")"
141688,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackSecurityGroupExtensionExpectTest.java,464,,"              .payload(payloadFromResource(""/getsecuritygroupresponse_extension_byid_with_group.json""))"
141689,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/extensions/CloudStackSecurityGroupExtensionExpectTest.java,549,,"              .addQueryParam(""command"", ""revokeSecurityGroupIngress"")"
141690,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/functions/TemplateToOperatingSystemTest.java,63,,"   static OperatingSystem one = OperatingSystem.builder().name(""CentOS"").family(OsFamily.CENTOS).is64Bit(false)"
141691,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/functions/VirtualMachineToNodeMetadataTest.java,80,,"            new NodeMetadataBuilder().id(""54"").providerId(""54"").name(""i-3-54-VM"").group(""i-3-54"")"
141692,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/functions/VirtualMachineToNodeMetadataTest.java,83,,"                  .hardware(addHypervisor(ServiceOfferingToHardwareTest.one, ""XenServer""))"
141693,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/loaders/FindSecurityGroupOrCreateTest.java,83,,"      expect(zoneClient.getZone(""zone-1"")).andReturn(zone);"
141694,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/loaders/FindSecurityGroupOrCreateTest.java,84,,"      expect(secClient.getSecurityGroupByName(""group-1"")).andReturn(null);"
141695,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/options/CloudStackTemplateOptionsTest.java,111,,"      TemplateOptions options = new CloudStackTemplateOptions().ipOnDefaultNetwork(""10.0.0.1"");"
141696,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/compute/options/CloudStackTemplateOptionsTest.java,185,,"      TemplateOptions options = keyPair(""test"");"
141697,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/AddressApiTest.java,53,,"      assertNonPayloadHeadersEqual(httpRequest, ""Accept: application/json\n"");"
141698,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/DomainDomainApiExpectTest.java,43,,"            .method(""GET"")"
141699,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/DomainDomainApiExpectTest.java,45,,"               URI.create(""http://localhost:8080/client/api?response=json&"" +"
141700,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/DomainDomainApiExpectTest.java,47,,"            .addHeader(""Accept"", ""application/json"")"
141701,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/DomainDomainApiExpectTest.java,47,,"            .addHeader(""Accept"", ""application/json"")"
141702,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/DomainDomainApiExpectTest.java,56,,"            Domain.builder().id(""1"").name(""ROOT"").level(0).hasChild(true).build(),"
141703,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/FirewallApiExpectTest.java,44,,"                  .method(""GET"")"
141704,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/FirewallApiExpectTest.java,45,,"                  .endpoint(""http://localhost:8080/client/api"")"
141705,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/FirewallApiExpectTest.java,46,,"                  .addQueryParam(""response"", ""json"")"
141706,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/FirewallApiExpectTest.java,46,,"                  .addQueryParam(""response"", ""json"")"
141707,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/FirewallApiExpectTest.java,47,,"                  .addQueryParam(""command"", ""listFirewallRules"")"
141708,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/FirewallApiExpectTest.java,47,,"                  .addQueryParam(""command"", ""listFirewallRules"")"
141709,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/FirewallApiExpectTest.java,48,,"                  .addQueryParam(""listAll"", ""true"")"
141710,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/FirewallApiExpectTest.java,48,,"                  .addQueryParam(""listAll"", ""true"")"
141711,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/FirewallApiExpectTest.java,49,,"                  .addQueryParam(""apiKey"", ""identity"")"
141712,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/FirewallApiExpectTest.java,49,,"                  .addQueryParam(""apiKey"", ""identity"")"
141713,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/FirewallApiExpectTest.java,50,,"                  .addQueryParam(""signature"", ""9+tdTXe2uYLzAexPNgrMy5Tq8hE="")"
141714,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/FirewallApiExpectTest.java,51,,"                  .addHeader(""Accept"", ""application/json"")"
141715,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/FirewallApiExpectTest.java,51,,"                  .addHeader(""Accept"", ""application/json"")"
141716,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/FirewallApiExpectTest.java,58,,"      Set<String> CIDRs  = ImmutableSet.of(""0.0.0.0/0"");"
141717,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/FirewallApiExpectTest.java,61,,"            FirewallRule.builder().id(""2017"").protocol(FirewallRule.Protocol.TCP).startPort(30)"
141718,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/FirewallApiExpectTest.java,62,,"               .endPort(35).ipAddressId(""2"").ipAddress(""10.27.27.51"").state(FirewallRule.State.ACTIVE)"
141719,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/FirewallApiExpectTest.java,69,,"               .CIDRs(CIDRs).tags(Tag.builder().account(""1"").domain(""ROOT"").domainId(""1"").key(""some-tag"").resourceId(""10"")"
141720,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/FirewallApiExpectTest.java,69,,"               .CIDRs(CIDRs).tags(Tag.builder().account(""1"").domain(""ROOT"").domainId(""1"").key(""some-tag"").resourceId(""10"")"
141721,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/FirewallApiExpectTest.java,70,,"                  .resourceType(Tag.ResourceType.FIREWALL_RULE).value(""some-value"").build()).build()"
141722,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/FirewallApiExpectTest.java,168,,"               .addQueryParam(""id"", ""2015"")"
141723,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/FirewallApiExpectTest.java,186,,"               .addQueryParam(""command"", ""listPortForwardingRules"")"
141724,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/FirewallApiExpectTest.java,329,,"                    .addQueryParam(""command"", ""listEgressFirewallRules"")"
141725,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalConfigurationApiExpectTest.java,43,,"            .method(""GET"")"
141726,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalConfigurationApiExpectTest.java,45,,"               URI.create(""http://localhost:8080/client/api?response=json&"" +"
141727,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalConfigurationApiExpectTest.java,47,,"            .addHeader(""Accept"", ""application/json"")"
141728,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalConfigurationApiExpectTest.java,47,,"            .addHeader(""Accept"", ""application/json"")"
141729,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalConfigurationApiLiveTest.java,65,,"      long expungeDelay = Long.parseLong(getValueByName(entries, ""expunge.delay""));"
141730,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalDomainApiExpectTest.java,41,,"            .method(""GET"")"
141731,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalDomainApiExpectTest.java,45,,"            .addHeader(""Accept"", ""application/json"")"
141732,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalDomainApiExpectTest.java,45,,"            .addHeader(""Accept"", ""application/json"")"
141733,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalDomainApiExpectTest.java,78,,"               URI.create(""http://localhost:8080/client/api?response=json&"" +"
141734,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalHostApiExpectTest.java,52,,"         .method(""GET"")"
141735,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalHostApiExpectTest.java,54,,"         .addHeader(""Accept"", ""application/json"").build();"
141736,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalHostApiExpectTest.java,54,,"         .addHeader(""Accept"", ""application/json"").build();"
141737,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalHostApiExpectTest.java,61,,"      Date lastPinged = makeDate(1970, Calendar.JANUARY, 16, 0, 54, 43, ""GMT+02:00"");"
141738,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalHostApiExpectTest.java,63,,"      Host host1 = Host.builder().id(""1"").name(""cs2-xevsrv.alucloud.local"").state(Host.State.UP).type(Host.Type.ROUTING).ipAddress(""10.26.26.107"").zoneId(""1"").zoneName(""Dev Zone 1"").podId(""1"").podName(""Dev Pod 1"").version(""2.2.12.20110928142833"").hypervisor(""XenServer"").cpuNumber(24).cpuSpeed(2266).cpuAllocated(""2.76%"").cpuUsed(""0.1%"").cpuWithOverProvisioning(54384.0F).networkKbsRead(4443).networkKbsWrite(15048).memoryTotal(100549733760L).memoryAllocated(3623878656L).memoryUsed(3623878656L).capabilities(""xen-3.0-x86_64 , xen-3.0-x86_32p , hvm-3.0-x86_32 , hvm-3.0-x86_32p , hvm-3.0-x86_64"").lastPinged(lastPinged).managementServerId(""223098941760041"").clusterId(""1"").clusterName(""Xen Clust 1"").clusterType(Host.ClusterType.CLOUD_MANAGED).localStorageActive(false).created(created).events(""PrepareUnmanaged; HypervisorVersionChanged; ManagementServerDown; PingTimeout; AgentDisconnected; MaintenanceRequested; HostDown; AgentConnected; StartAgentRebalance; ShutdownRequested; Ping"").hasEnoughCapacity(false).allocationState(AllocationState.ENABLED).build();"
141739,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalHostApiExpectTest.java,63,,"      Host host1 = Host.builder().id(""1"").name(""cs2-xevsrv.alucloud.local"").state(Host.State.UP).type(Host.Type.ROUTING).ipAddress(""10.26.26.107"").zoneId(""1"").zoneName(""Dev Zone 1"").podId(""1"").podName(""Dev Pod 1"").version(""2.2.12.20110928142833"").hypervisor(""XenServer"").cpuNumber(24).cpuSpeed(2266).cpuAllocated(""2.76%"").cpuUsed(""0.1%"").cpuWithOverProvisioning(54384.0F).networkKbsRead(4443).networkKbsWrite(15048).memoryTotal(100549733760L).memoryAllocated(3623878656L).memoryUsed(3623878656L).capabilities(""xen-3.0-x86_64 , xen-3.0-x86_32p , hvm-3.0-x86_32 , hvm-3.0-x86_32p , hvm-3.0-x86_64"").lastPinged(lastPinged).managementServerId(""223098941760041"").clusterId(""1"").clusterName(""Xen Clust 1"").clusterType(Host.ClusterType.CLOUD_MANAGED).localStorageActive(false).created(created).events(""PrepareUnmanaged; HypervisorVersionChanged; ManagementServerDown; PingTimeout; AgentDisconnected; MaintenanceRequested; HostDown; AgentConnected; StartAgentRebalance; ShutdownRequested; Ping"").hasEnoughCapacity(false).allocationState(AllocationState.ENABLED).build();"
141740,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalHostApiExpectTest.java,63,,"      Host host1 = Host.builder().id(""1"").name(""cs2-xevsrv.alucloud.local"").state(Host.State.UP).type(Host.Type.ROUTING).ipAddress(""10.26.26.107"").zoneId(""1"").zoneName(""Dev Zone 1"").podId(""1"").podName(""Dev Pod 1"").version(""2.2.12.20110928142833"").hypervisor(""XenServer"").cpuNumber(24).cpuSpeed(2266).cpuAllocated(""2.76%"").cpuUsed(""0.1%"").cpuWithOverProvisioning(54384.0F).networkKbsRead(4443).networkKbsWrite(15048).memoryTotal(100549733760L).memoryAllocated(3623878656L).memoryUsed(3623878656L).capabilities(""xen-3.0-x86_64 , xen-3.0-x86_32p , hvm-3.0-x86_32 , hvm-3.0-x86_32p , hvm-3.0-x86_64"").lastPinged(lastPinged).managementServerId(""223098941760041"").clusterId(""1"").clusterName(""Xen Clust 1"").clusterType(Host.ClusterType.CLOUD_MANAGED).localStorageActive(false).created(created).events(""PrepareUnmanaged; HypervisorVersionChanged; ManagementServerDown; PingTimeout; AgentDisconnected; MaintenanceRequested; HostDown; AgentConnected; StartAgentRebalance; ShutdownRequested; Ping"").hasEnoughCapacity(false).allocationState(AllocationState.ENABLED).build();"
141741,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalHostApiExpectTest.java,63,,"      Host host1 = Host.builder().id(""1"").name(""cs2-xevsrv.alucloud.local"").state(Host.State.UP).type(Host.Type.ROUTING).ipAddress(""10.26.26.107"").zoneId(""1"").zoneName(""Dev Zone 1"").podId(""1"").podName(""Dev Pod 1"").version(""2.2.12.20110928142833"").hypervisor(""XenServer"").cpuNumber(24).cpuSpeed(2266).cpuAllocated(""2.76%"").cpuUsed(""0.1%"").cpuWithOverProvisioning(54384.0F).networkKbsRead(4443).networkKbsWrite(15048).memoryTotal(100549733760L).memoryAllocated(3623878656L).memoryUsed(3623878656L).capabilities(""xen-3.0-x86_64 , xen-3.0-x86_32p , hvm-3.0-x86_32 , hvm-3.0-x86_32p , hvm-3.0-x86_64"").lastPinged(lastPinged).managementServerId(""223098941760041"").clusterId(""1"").clusterName(""Xen Clust 1"").clusterType(Host.ClusterType.CLOUD_MANAGED).localStorageActive(false).created(created).events(""PrepareUnmanaged; HypervisorVersionChanged; ManagementServerDown; PingTimeout; AgentDisconnected; MaintenanceRequested; HostDown; AgentConnected; StartAgentRebalance; ShutdownRequested; Ping"").hasEnoughCapacity(false).allocationState(AllocationState.ENABLED).build();"
141742,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalHostApiExpectTest.java,63,,"      Host host1 = Host.builder().id(""1"").name(""cs2-xevsrv.alucloud.local"").state(Host.State.UP).type(Host.Type.ROUTING).ipAddress(""10.26.26.107"").zoneId(""1"").zoneName(""Dev Zone 1"").podId(""1"").podName(""Dev Pod 1"").version(""2.2.12.20110928142833"").hypervisor(""XenServer"").cpuNumber(24).cpuSpeed(2266).cpuAllocated(""2.76%"").cpuUsed(""0.1%"").cpuWithOverProvisioning(54384.0F).networkKbsRead(4443).networkKbsWrite(15048).memoryTotal(100549733760L).memoryAllocated(3623878656L).memoryUsed(3623878656L).capabilities(""xen-3.0-x86_64 , xen-3.0-x86_32p , hvm-3.0-x86_32 , hvm-3.0-x86_32p , hvm-3.0-x86_64"").lastPinged(lastPinged).managementServerId(""223098941760041"").clusterId(""1"").clusterName(""Xen Clust 1"").clusterType(Host.ClusterType.CLOUD_MANAGED).localStorageActive(false).created(created).events(""PrepareUnmanaged; HypervisorVersionChanged; ManagementServerDown; PingTimeout; AgentDisconnected; MaintenanceRequested; HostDown; AgentConnected; StartAgentRebalance; ShutdownRequested; Ping"").hasEnoughCapacity(false).allocationState(AllocationState.ENABLED).build();"
141743,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalHostApiExpectTest.java,63,,"      Host host1 = Host.builder().id(""1"").name(""cs2-xevsrv.alucloud.local"").state(Host.State.UP).type(Host.Type.ROUTING).ipAddress(""10.26.26.107"").zoneId(""1"").zoneName(""Dev Zone 1"").podId(""1"").podName(""Dev Pod 1"").version(""2.2.12.20110928142833"").hypervisor(""XenServer"").cpuNumber(24).cpuSpeed(2266).cpuAllocated(""2.76%"").cpuUsed(""0.1%"").cpuWithOverProvisioning(54384.0F).networkKbsRead(4443).networkKbsWrite(15048).memoryTotal(100549733760L).memoryAllocated(3623878656L).memoryUsed(3623878656L).capabilities(""xen-3.0-x86_64 , xen-3.0-x86_32p , hvm-3.0-x86_32 , hvm-3.0-x86_32p , hvm-3.0-x86_64"").lastPinged(lastPinged).managementServerId(""223098941760041"").clusterId(""1"").clusterName(""Xen Clust 1"").clusterType(Host.ClusterType.CLOUD_MANAGED).localStorageActive(false).created(created).events(""PrepareUnmanaged; HypervisorVersionChanged; ManagementServerDown; PingTimeout; AgentDisconnected; MaintenanceRequested; HostDown; AgentConnected; StartAgentRebalance; ShutdownRequested; Ping"").hasEnoughCapacity(false).allocationState(AllocationState.ENABLED).build();"
141744,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalHostApiExpectTest.java,63,,"      Host host1 = Host.builder().id(""1"").name(""cs2-xevsrv.alucloud.local"").state(Host.State.UP).type(Host.Type.ROUTING).ipAddress(""10.26.26.107"").zoneId(""1"").zoneName(""Dev Zone 1"").podId(""1"").podName(""Dev Pod 1"").version(""2.2.12.20110928142833"").hypervisor(""XenServer"").cpuNumber(24).cpuSpeed(2266).cpuAllocated(""2.76%"").cpuUsed(""0.1%"").cpuWithOverProvisioning(54384.0F).networkKbsRead(4443).networkKbsWrite(15048).memoryTotal(100549733760L).memoryAllocated(3623878656L).memoryUsed(3623878656L).capabilities(""xen-3.0-x86_64 , xen-3.0-x86_32p , hvm-3.0-x86_32 , hvm-3.0-x86_32p , hvm-3.0-x86_64"").lastPinged(lastPinged).managementServerId(""223098941760041"").clusterId(""1"").clusterName(""Xen Clust 1"").clusterType(Host.ClusterType.CLOUD_MANAGED).localStorageActive(false).created(created).events(""PrepareUnmanaged; HypervisorVersionChanged; ManagementServerDown; PingTimeout; AgentDisconnected; MaintenanceRequested; HostDown; AgentConnected; StartAgentRebalance; ShutdownRequested; Ping"").hasEnoughCapacity(false).allocationState(AllocationState.ENABLED).build();"
141745,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalHostApiExpectTest.java,96,,"                                    .endpoint(""http://localhost:8080/client/api"")"
141746,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalHostApiExpectTest.java,97,,"                                    .addQueryParam(""response"", ""json"")"
141747,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalHostApiExpectTest.java,97,,"                                    .addQueryParam(""response"", ""json"")"
141748,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalHostApiExpectTest.java,98,,"                                    .addQueryParam(""command"", ""addHost"")"
141749,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalHostApiExpectTest.java,102,,"                                    .addQueryParam(""username"", ""fred"")"
141750,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalHostApiExpectTest.java,102,,"                                    .addQueryParam(""username"", ""fred"")"
141751,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalHostApiExpectTest.java,103,,"                                    .addQueryParam(""password"", ""sekrit"")"
141752,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalHostApiExpectTest.java,103,,"                                    .addQueryParam(""password"", ""sekrit"")"
141753,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalHostApiExpectTest.java,109,,"                                    .addQueryParam(""apiKey"", ""identity"")"
141754,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalHostApiExpectTest.java,109,,"                                    .addQueryParam(""apiKey"", ""identity"")"
141755,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalHostApiExpectTest.java,110,,"                                    .addQueryParam(""signature"", ""ExGaljKKQIlVbWk5hd0BnnjmBzs="")"
141756,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalOfferingApiLiveTest.java,45,,"@Test(groups = ""live"", singleThreaded = true, testName = ""GlobalOfferingApiLiveTest"")"
141757,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalOfferingApiTest.java,46,,"                                                  .addQueryParam(""name"", ""name"")"
141758,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalOfferingApiTest.java,58,,"      assertNonPayloadHeadersEqual(httpRequest, ""Accept: application/json\n"");"
141759,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalPodApiExpectTest.java,45,,"            .method(""GET"")"
141760,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalPodApiExpectTest.java,51,,"                  .put(""Accept"", ""application/json"")"
141761,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalPodApiExpectTest.java,51,,"                  .put(""Accept"", ""application/json"")"
141762,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalPodApiExpectTest.java,65,,"         .netmask(""255.255.255.0"")"
141763,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalUsageApiTest.java,55,,"      assertNonPayloadHeadersEqual(httpRequest, ""Accept: application/json\n"");"
141764,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalVlanApiExpectTest.java,42,,"            .method(""GET"")"
141765,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalVlanApiExpectTest.java,44,,"               URI.create(""http://localhost:8080/client/api?response=json&"" +"
141766,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalVlanApiExpectTest.java,46,,"            .addHeader(""Accept"", ""application/json"")"
141767,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalVlanApiExpectTest.java,46,,"            .addHeader(""Accept"", ""application/json"")"
141768,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalVlanApiExpectTest.java,58,,"         .account(""system"")"
141769,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalVlanApiExpectTest.java,62,,"         .netmask(""255.255.255.0"")"
141770,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalZoneApiExpectTest.java,45,,"                                       .addQueryParam(""name"", ""test-zone"")"
141771,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalZoneApiExpectTest.java,47,,"                                       .addQueryParam(""dns1"", ""8.8.8.8"")"
141772,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/GlobalZoneApiExpectTest.java,48,,"                                       .addQueryParam(""internaldns1"", ""10.10.10.10"")"
141773,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/ISOApiExpectTest.java,42,,"                                      .id(""018e0928-8205-4d8e-9329-f731a9ccd488"")"
141774,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/ISOApiExpectTest.java,73,,"   HttpRequest listIsos = HttpRequest.builder().method(""GET"")"
141775,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/ISOApiExpectTest.java,74,,"                                     .endpoint(""http://localhost:8080/client/api"")"
141776,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/ISOApiExpectTest.java,75,,"                                     .addQueryParam(""response"", ""json"")"
141777,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/ISOApiExpectTest.java,75,,"                                     .addQueryParam(""response"", ""json"")"
141778,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/ISOApiExpectTest.java,76,,"                                     .addQueryParam(""command"", ""listIsos"")"
141779,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/ISOApiExpectTest.java,77,,"                                     .addQueryParam(""listAll"", ""true"")"
141780,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/ISOApiExpectTest.java,78,,"                                     .addQueryParam(""apiKey"", ""identity"")"
141781,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/ISOApiExpectTest.java,78,,"                                     .addQueryParam(""apiKey"", ""identity"")"
141782,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/ISOApiExpectTest.java,79,,"                                     .addQueryParam(""signature"", ""qUUF6hCDc57Bc/nHriS9umbZBKA="")"
141783,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/ISOApiExpectTest.java,80,,"                                     .addHeader(""Accept"", ""application/json"")"
141784,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/ISOApiExpectTest.java,80,,"                                     .addHeader(""Accept"", ""application/json"")"
141785,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/ISOApiExpectTest.java,167,,"                                        .addQueryParam(""name"", ""ubuntu10.10"")"
141786,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/ISOApiExpectTest.java,168,,"                                        .addQueryParam(""displaytext"", ""ubuntu 10.10 (32 bit)"")"
141787,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/ISOApiTest.java,54,,"      assertNonPayloadHeadersEqual(httpRequest, ""Accept: application/json\n"");"
141788,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/LoadBalancerApiTest.java,52,,"      assertNonPayloadHeadersEqual(httpRequest, ""Accept: application/json\n"");"
141789,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/NATApiTest.java,51,,"      assertNonPayloadHeadersEqual(httpRequest, ""Accept: application/json\n"");"
141790,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/NATApiTest.java,101,,"                                                             .addQueryParam(""protocol"", ""tcp"")"
141791,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/NetworkApiTest.java,52,,"      assertNonPayloadHeadersEqual(httpRequest, ""Accept: application/json\n"");"
141792,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/NetworkApiTest.java,105,,"                                          .addQueryParam(""name"", ""named"")"
141793,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/NetworkApiTest.java,106,,"                                          .addQueryParam(""displaytext"", ""lovely"").build();"
141794,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/OfferingApiTest.java,51,,"      assertNonPayloadHeadersEqual(httpRequest, ""Accept: application/json\n"");"
141795,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/SSHKeyPairApiExpectTest.java,51,,"         .method(""GET"")"
141796,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/SSHKeyPairApiExpectTest.java,55,,"            .addHeader(""Accept"", ""application/json"")"
141797,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/SSHKeyPairApiExpectTest.java,55,,"            .addHeader(""Accept"", ""application/json"")"
141798,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/SSHKeyPairApiExpectTest.java,59,,"         SshKeyPair.builder().name(""jclouds-keypair"")"
141799,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/SSHKeyPairApiTest.java,54,,"      assertNonPayloadHeadersEqual(httpRequest, ""Accept: application/json\n"");"
141800,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/SecurityGroupApiTest.java,57,,"      assertNonPayloadHeadersEqual(httpRequest, ""Accept: application/json\n"");"
141801,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/SecurityGroupApiTest.java,140,,"   HttpRequest authorizeSecurityGroupIngress3 = HttpRequest.builder().method(""GET"")"
141802,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/SecurityGroupApiTest.java,141,,"                                                           .endpoint(""http://localhost:8080/client/api"")"
141803,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/SecurityGroupApiTest.java,142,,"                                                           .addQueryParam(""response"", ""json"")"
141804,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/SecurityGroupApiTest.java,142,,"                                                           .addQueryParam(""response"", ""json"")"
141805,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/SecurityGroupApiTest.java,143,,"                                                           .addQueryParam(""command"", ""authorizeSecurityGroupIngress"")"
141806,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/SecurityGroupApiTest.java,143,,"                                                           .addQueryParam(""command"", ""authorizeSecurityGroupIngress"")"
141807,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/SecurityGroupApiTest.java,144,,"                                                           .addQueryParam(""securitygroupid"", ""2"")"
141808,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/SecurityGroupApiTest.java,145,,"                                                           .addQueryParam(""protocol"", ""tcp"")"
141809,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/SecurityGroupApiTest.java,145,,"                                                           .addQueryParam(""protocol"", ""tcp"")"
141810,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/SecurityGroupApiTest.java,176,,"                                                           .addQueryParam(""usersecuritygrouplist[0].account"", ""adrian"")"
141811,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/SecurityGroupApiTest.java,177,,"                                                           .addQueryParam(""usersecuritygrouplist[0].group"", ""group1"")"
141812,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/SecurityGroupApiTest.java,179,,"                                                           .addQueryParam(""usersecuritygrouplist[1].group"", ""group2"")"
141813,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/SecurityGroupApiTest.java,180,,"                                                           .addQueryParam(""usersecuritygrouplist[2].account"", ""bob"")"
141814,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/SessionApiExpectTest.java,47,,"                                  .addQueryParam(""username"", ""jclouds"")"
141815,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/SnapshotApiTest.java,60,,"      assertNonPayloadHeadersEqual(httpRequest, ""Accept: application/json\n"");"
141816,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/TagApiExpectTest.java,43,,"            HttpRequest.builder().method(""GET"")"
141817,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/TagApiExpectTest.java,44,,"                  .endpoint(""http://localhost:8080/client/api"")"
141818,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/TagApiExpectTest.java,45,,"                  .addQueryParam(""response"", ""json"")"
141819,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/TagApiExpectTest.java,45,,"                  .addQueryParam(""response"", ""json"")"
141820,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/TagApiExpectTest.java,46,,"                  .addQueryParam(""command"", ""listTags"")"
141821,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/TagApiExpectTest.java,48,,"                  .addQueryParam(""apiKey"", ""identity"")"
141822,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/TagApiExpectTest.java,48,,"                  .addQueryParam(""apiKey"", ""identity"")"
141823,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/TagApiExpectTest.java,49,,"                  .addQueryParam(""signature"", ""amvtC2a0VHzzDF5SUAIOZpXHd0A="")"
141824,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/TagApiExpectTest.java,50,,"                  .addHeader(""Accept"", ""application/json"")"
141825,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/TagApiExpectTest.java,50,,"                  .addHeader(""Accept"", ""application/json"")"
141826,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/TagApiExpectTest.java,97,,"                  .addQueryParam(""resourcetype"", ""Template"")"
141827,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/TagApiExpectTest.java,98,,"                  .addQueryParam(""resourceids"", ""52d89d5d-6070-4fd4-8131-c6c9ca4b062e"")"
141828,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/TagApiExpectTest.java,99,,"                  .addQueryParam(""tags[0].key"", ""some-tag"")"
141829,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/TagApiExpectTest.java,100,,"                  .addQueryParam(""tags[0].value"", ""some-value"")"
141830,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/TagApiLiveTest.java,70,,"                  prefix + ""-second-tag"", ""second-tag-value"")));"
141831,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/TagApiTest.java,52,,"      assertNonPayloadHeadersEqual(httpRequest, ""Accept: application/json\n"");"
141832,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/TemplateApiTest.java,61,,"      GeneratedHttpRequest httpRequest = processor.createRequest(method, ImmutableList.<Object> of(TemplateMetadata.builder().name(""thename"").osTypeId(""10"").displayText(""description"").build()));"
141833,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/TemplateApiTest.java,61,,"      GeneratedHttpRequest httpRequest = processor.createRequest(method, ImmutableList.<Object> of(TemplateMetadata.builder().name(""thename"").osTypeId(""10"").displayText(""description"").build()));"
141834,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/TemplateApiTest.java,64,,"      assertNonPayloadHeadersEqual(httpRequest, ""Accept: application/json\n"");"
141835,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/TemplateApiTest.java,89,,"   HttpRequest registerTemplate = HttpRequest.builder().method(""GET"")"
141836,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/TemplateApiTest.java,90,,"                                             .endpoint(""http://localhost:8080/client/api"")"
141837,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/TemplateApiTest.java,91,,"                                             .addQueryParam(""response"", ""json"")"
141838,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/TemplateApiTest.java,91,,"                                             .addQueryParam(""response"", ""json"")"
141839,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/TemplateApiTest.java,92,,"                                             .addQueryParam(""command"", ""registerTemplate"")"
141840,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/TemplateApiTest.java,92,,"                                             .addQueryParam(""command"", ""registerTemplate"")"
141841,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/TemplateApiTest.java,94,,"                                             .addQueryParam(""hypervisor"", ""xen"")"
141842,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/TemplateApiTest.java,95,,"                                             .addQueryParam(""url"", ""http://example.com/"")"
141843,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/TemplateApiTest.java,96,,"                                             .addQueryParam(""zoneid"", ""20"")"
141844,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/TemplateApiTest.java,128,,"                                                    .addQueryParam(""isextractable"", ""true"")"
141845,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/TemplateApiTest.java,357,,"                                            .addQueryParam(""command"", ""extractTemplate"")"
141846,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/VMGroupApiTest.java,54,,"      assertNonPayloadHeadersEqual(httpRequest, ""Accept: application/json\n"");"
141847,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/VirtualMachineApiTest.java,56,,"      assertNonPayloadHeadersEqual(httpRequest, ""Accept: application/json\n"");"
141848,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/VolumeApiTest.java,48,,"      assertNonPayloadHeadersEqual(httpRequest, ""Accept: application/json\n"");"
141849,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/VolumeApiTest.java,78,,"                                                     .addQueryParam(""name"", ""jclouds-volume"")"
141850,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/features/ZoneApiTest.java,49,,"      assertNonPayloadHeadersEqual(httpRequest, ""Accept: application/json\n"");"
141851,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/filters/QuerySignerTest.java,54,,"            filter.createStringToSign(HttpRequest.builder().method(""GET"")"
141852,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/functions/BlockUntilJobCompletesAndReturnResultTest.java,50,,"      expect(jobClient.getAsyncJob(jobId)).andReturn(AsyncJob.builder().id(jobId).result(""foo"").build()).atLeastOnce();"
141853,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/functions/CreateSecurityGroupIfNeededTest.java,80,,"      expect(secClient.createSecurityGroup(""group-1"")).andReturn(group);"
141854,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/functions/ParseAsyncJobFromHttpResponseTest.java,60,,"         .id(""860"")"
141855,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/functions/ParseAsyncJobFromHttpResponseTest.java,66,,"      @SuppressWarnings(""unchecked"")"
141856,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/functions/ParseAsyncJobFromHttpResponseTest.java,81,,"         .resultType(""object"")"
141857,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/handlers/CloudStackErrorHandlerTest.java,43,,"      assertCodeMakes(""GET"", URI.create(""https://cloudstack.com/foo""), 400, """", ""Bad Request"","
141858,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/handlers/CloudStackErrorHandlerTest.java,43,,"      assertCodeMakes(""GET"", URI.create(""https://cloudstack.com/foo""), 400, """", ""Bad Request"","
141859,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/internal/BaseCloudStackComputeServiceContextExpectTest.java,31,,"      identity = ""APIKEY"";"
141860,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/internal/BaseCloudStackComputeServiceContextExpectTest.java,34,,"   protected final HttpRequest listTemplates = HttpRequest.builder().method(""GET"")"
141861,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/internal/BaseCloudStackComputeServiceContextExpectTest.java,35,,"      .endpoint(""http://localhost:8080/client/api"")"
141862,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/internal/BaseCloudStackComputeServiceContextExpectTest.java,36,,"      .addQueryParam(""response"", ""json"")"
141863,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/internal/BaseCloudStackComputeServiceContextExpectTest.java,36,,"      .addQueryParam(""response"", ""json"")"
141864,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/internal/BaseCloudStackComputeServiceContextExpectTest.java,37,,"      .addQueryParam(""command"", ""listTemplates"")"
141865,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/internal/BaseCloudStackComputeServiceContextExpectTest.java,38,,"      .addQueryParam(""listAll"", ""true"")"
141866,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/internal/BaseCloudStackComputeServiceContextExpectTest.java,38,,"      .addQueryParam(""listAll"", ""true"")"
141867,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/internal/BaseCloudStackComputeServiceContextExpectTest.java,40,,"      .addQueryParam(""apiKey"", ""APIKEY"")"
141868,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/internal/BaseCloudStackComputeServiceContextExpectTest.java,41,,"      .addQueryParam(""signature"", ""Xk6lF/v3SbhrxTKqaC2IWoBPKHo="")"
141869,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/internal/BaseCloudStackComputeServiceContextExpectTest.java,42,,"      .addHeader(""Accept"", ""application/json"")"
141870,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/internal/BaseCloudStackComputeServiceContextExpectTest.java,42,,"      .addHeader(""Accept"", ""application/json"")"
141871,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/loaders/LoginWithPasswordCredentialsTest.java,42,,"      expect(client.loginUserInDomainWithHashOfPassword(eq(""User""), eq(""Test/Domain""), (String) anyObject())).andReturn(response);"
141872,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/AddClusterOptionsTest.java,48,,"      AddClusterOptions options = new AddClusterOptions().password(""sekrit"");"
141873,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/AddClusterOptionsTest.java,68,,"      AddClusterOptions options = new AddClusterOptions().url(""http://example.com"");"
141874,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/AddClusterOptionsTest.java,78,,"      AddClusterOptions options = new AddClusterOptions().username(""fred"");"
141875,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/AddHostOptionsTest.java,59,,"      AddHostOptions options = new AddHostOptions().clusterName(""Cluster Name"");"
141876,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/AssociateIPAddressOptionsTest.java,34,,"      AssociateIPAddressOptions options = new AssociateIPAddressOptions().accountInDomain(""adrian"", ""6"");"
141877,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/CreateAccountOptionsTest.java,35,,"      CreateAccountOptions options = new CreateAccountOptions().networkDomain(""net"");"
141878,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/CreateAccountOptionsTest.java,45,,"      CreateAccountOptions options = new CreateAccountOptions().account(""accountName"");"
141879,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/CreateDiskOfferingOptionsTest.java,36,,"         new CreateDiskOfferingOptions().tags(ImmutableSet.<String>of(""tag1"", ""tag2""));"
141880,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/CreateDiskOfferingOptionsTest.java,36,,"         new CreateDiskOfferingOptions().tags(ImmutableSet.<String>of(""tag1"", ""tag2""));"
141881,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/CreateNetworkOptionsTest.java,41,,"      CreateNetworkOptions options = new CreateNetworkOptions().accountInDomain(""adrian"", ""6"");"
141882,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/CreateNetworkOptionsTest.java,54,,"      assertEquals(ImmutableList.of(""true""), options.buildQueryParameters().get(""isdefault""));"
141883,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/CreateNetworkOptionsTest.java,73,,"      CreateNetworkOptions options = new CreateNetworkOptions().startIP(""1.1.1.1"");"
141884,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/CreateNetworkOptionsTest.java,113,,"      CreateNetworkOptions options = new CreateNetworkOptions().networkDomain(""network.com"");"
141885,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/CreateNetworkOptionsTest.java,123,,"      CreateNetworkOptions options = new CreateNetworkOptions().vlan(""tag"");"
141886,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/CreateServiceOfferingOptionsTest.java,43,,"         new CreateServiceOfferingOptions().hostTags(ImmutableSet.of(""tag1"", ""tag2""));"
141887,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/CreateServiceOfferingOptionsTest.java,43,,"         new CreateServiceOfferingOptions().hostTags(ImmutableSet.of(""tag1"", ""tag2""));"
141888,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/CreateServiceOfferingOptionsTest.java,54,,"      assertEquals(ImmutableSet.of(""true""), options.buildQueryParameters().get(""issystem""));"
141889,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/CreateTagsOptionsTest.java,38,,"      CreateTagsOptions options = new CreateTagsOptions().customer(""some-customer"");"
141890,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/CreateTagsOptionsTest.java,49,,"      assertEquals(ImmutableList.of(""1,2,3""), options.buildQueryParameters().get(""resourceids""));"
141891,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/CreateTagsOptionsTest.java,49,,"      assertEquals(ImmutableList.of(""1,2,3""), options.buildQueryParameters().get(""resourceids""));"
141892,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/CreateTagsOptionsTest.java,69,,"      assertEquals(ImmutableList.of(""Template""), options.buildQueryParameters().get(""resourcetype""));"
141893,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/CreateTagsOptionsTest.java,69,,"      assertEquals(ImmutableList.of(""Template""), options.buildQueryParameters().get(""resourcetype""));"
141894,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/CreateTagsOptionsTest.java,88,,"      CreateTagsOptions options = new CreateTagsOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141895,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/CreateTagsOptionsTest.java,88,,"      CreateTagsOptions options = new CreateTagsOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141896,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/CreateTagsOptionsTest.java,88,,"      CreateTagsOptions options = new CreateTagsOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141897,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/CreateTagsOptionsTest.java,88,,"      CreateTagsOptions options = new CreateTagsOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141898,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/CreateUserOptionsTest.java,44,,"      CreateUserOptions options = new CreateUserOptions().timezone(""something"");"
141899,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/CreateVlanIPRangeOptionsTest.java,41,,"      CreateVlanIPRangeOptions options = new CreateVlanIPRangeOptions().accountInDomain(""fred"", ""6"");"
141900,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/CreateVlanIPRangeOptionsTest.java,43,,"      assertEquals(ImmutableSet.of(""6""), options.buildQueryParameters().get(""domainid""));"
141901,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/CreateVlanIPRangeOptionsTest.java,73,,"      CreateVlanIPRangeOptions options = new CreateVlanIPRangeOptions().gateway(""192.168.42.24"");"
141902,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/CreateVlanIPRangeOptionsTest.java,83,,"      CreateVlanIPRangeOptions options = new CreateVlanIPRangeOptions().netmask(""255.255.255.240"");"
141903,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/DeleteHostOptionsTest.java,35,,"      assertEquals(ImmutableList.of(""true""), options.buildQueryParameters().get(""forced""));"
141904,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/DeleteTagsOptionsTest.java,38,,"      assertEquals(ImmutableList.of(""1,2,3""), options.buildQueryParameters().get(""resourceids""));"
141905,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/DeleteTagsOptionsTest.java,38,,"      assertEquals(ImmutableList.of(""1,2,3""), options.buildQueryParameters().get(""resourceids""));"
141906,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/DeleteTagsOptionsTest.java,58,,"      assertEquals(ImmutableList.of(""Template""), options.buildQueryParameters().get(""resourcetype""));"
141907,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/DeleteTagsOptionsTest.java,58,,"      assertEquals(ImmutableList.of(""Template""), options.buildQueryParameters().get(""resourcetype""));"
141908,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/DeleteTagsOptionsTest.java,77,,"      DeleteTagsOptions options = new DeleteTagsOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141909,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/DeleteTagsOptionsTest.java,77,,"      DeleteTagsOptions options = new DeleteTagsOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141910,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/DeleteTagsOptionsTest.java,77,,"      DeleteTagsOptions options = new DeleteTagsOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141911,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/DeleteTagsOptionsTest.java,77,,"      DeleteTagsOptions options = new DeleteTagsOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141912,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListAccountsOptionsTest.java,38,,"      ListAccountsOptions options = new ListAccountsOptions().accountInDomain(""adrian"", ""6"");"
141913,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListAccountsOptionsTest.java,40,,"      assertEquals(ImmutableList.of(""6""), options.buildQueryParameters().get(""domainid""));"
141914,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListAccountsOptionsTest.java,61,,"      assertEquals(ImmutableList.of(""true""), options.buildQueryParameters().get(""isrecursive""));"
141915,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListAccountsOptionsTest.java,70,,"      ListAccountsOptions options = new ListAccountsOptions().state(""state"");"
141916,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListAlertsOptionsTest.java,45,,"      ListAlertsOptions options = new ListAlertsOptions().keyword(""fred"");"
141917,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListAsyncJobsOptionsTest.java,36,,"      ListAsyncJobsOptions options = new ListAsyncJobsOptions().accountInDomain(""adrian"", ""6"");"
141918,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListAsyncJobsOptionsTest.java,38,,"      assertEquals(ImmutableList.of(""6""), options.buildQueryParameters().get(""domainid""));"
141919,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListCapacityOptionsTest.java,48,,"      ListCapacityOptions options = new ListCapacityOptions().keyword(""fred"");"
141920,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListClustersOptionsTest.java,45,,"      assertEquals(ImmutableList.of(""Enabled""), options.buildQueryParameters().get(""allocationstate""));"
141921,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListClustersOptionsTest.java,64,,"      ListClustersOptions options = new ListClustersOptions().hypervisor(""XenServer"");"
141922,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListClustersOptionsTest.java,104,,"      ListClustersOptions options = new ListClustersOptions().name(""Host Name"");"
141923,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListDiskOfferingsOptionsTest.java,45,,"      ListDiskOfferingsOptions options = new ListDiskOfferingsOptions().name(""foo"");"
141924,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListHostsOptionsTest.java,57,,"      assertEquals(ImmutableList.of(""Enabled""), options.buildQueryParameters().get(""allocationstate""));"
141925,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListHostsOptionsTest.java,86,,"      ListHostsOptions options = new ListHostsOptions().name(""Host Name"");"
141926,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListIPForwardingRulesOptionsTest.java,49,,"      ListIPForwardingRulesOptions options = new ListIPForwardingRulesOptions().accountInDomain(""account"", ""6"");"
141927,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListIPForwardingRulesOptionsTest.java,51,,"      assertEquals(ImmutableList.of(""6""), options.buildQueryParameters().get(""domainid""));"
141928,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListIPForwardingRulesOptionsTest.java,91,,"      ListIPForwardingRulesOptions options = new ListIPForwardingRulesOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141929,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListIPForwardingRulesOptionsTest.java,91,,"      ListIPForwardingRulesOptions options = new ListIPForwardingRulesOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141930,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListIPForwardingRulesOptionsTest.java,91,,"      ListIPForwardingRulesOptions options = new ListIPForwardingRulesOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141931,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListIPForwardingRulesOptionsTest.java,91,,"      ListIPForwardingRulesOptions options = new ListIPForwardingRulesOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141932,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListISOsOptionsTest.java,53,,"      assertEquals(options.buildQueryParameters().get(""bootable""), TRUE);"
141933,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListISOsOptionsTest.java,72,,"      ListISOsOptions options = new ListISOsOptions().hypervisor(""KVM"");"
141934,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListISOsOptionsTest.java,103,,"      assertEquals(options.buildQueryParameters().get(""ispublic""), TRUE);"
141935,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListISOsOptionsTest.java,123,,"      assertEquals(options.buildQueryParameters().get(""isready""), TRUE);"
141936,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListISOsOptionsTest.java,142,,"      ListISOsOptions options = new ListISOsOptions().keyword(""text"");"
141937,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListISOsOptionsTest.java,172,,"      ListISOsOptions options = new ListISOsOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141938,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListISOsOptionsTest.java,172,,"      ListISOsOptions options = new ListISOsOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141939,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListISOsOptionsTest.java,172,,"      ListISOsOptions options = new ListISOsOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141940,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListISOsOptionsTest.java,172,,"      ListISOsOptions options = new ListISOsOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141941,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListLoadBalancerRulesOptionsTest.java,51,,"      ListLoadBalancerRulesOptions options = new ListLoadBalancerRulesOptions().accountInDomain(""account"", ""6"");"
141942,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListLoadBalancerRulesOptionsTest.java,53,,"      assertEquals(ImmutableList.of(""6""), options.buildQueryParameters().get(""domainid""));"
141943,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListLoadBalancerRulesOptionsTest.java,63,,"      ListLoadBalancerRulesOptions options = new ListLoadBalancerRulesOptions().name(""name"");"
141944,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListNetworkOfferingsOptionsTest.java,43,,"      assertEquals(ImmutableList.of(""true""), options.buildQueryParameters().get(""isdefault""));"
141945,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListNetworkOfferingsOptionsTest.java,123,,"      ListNetworkOfferingsOptions options = new ListNetworkOfferingsOptions().displayText(""text"");"
141946,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListNetworksOptionsTest.java,46,,"      assertEquals(ImmutableList.of(""true""), options.buildQueryParameters().get(""isdefault""));"
141947,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListNetworksOptionsTest.java,86,,"      assertEquals(ImmutableList.of(""6""), options.buildQueryParameters().get(""domainid""));"
141948,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListNetworksOptionsTest.java,146,,"      ListNetworksOptions options = new ListNetworksOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141949,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListNetworksOptionsTest.java,146,,"      ListNetworksOptions options = new ListNetworksOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141950,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListNetworksOptionsTest.java,146,,"      ListNetworksOptions options = new ListNetworksOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141951,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListNetworksOptionsTest.java,146,,"      ListNetworksOptions options = new ListNetworksOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141952,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListPodsOptionsTest.java,58,,"      ListPodsOptions options = new ListPodsOptions().keyword(""fred"");"
141953,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListPodsOptionsTest.java,68,,"      ListPodsOptions options = new ListPodsOptions().name(""bob"");"
141954,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListPortForwardingRulesOptionsTest.java,37,,"      ListPortForwardingRulesOptions options = new ListPortForwardingRulesOptions().accountInDomain(""account"", ""6"");"
141955,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListPortForwardingRulesOptionsTest.java,39,,"      assertEquals(ImmutableList.of(""6""), options.buildQueryParameters().get(""domainid""));"
141956,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListPortForwardingRulesOptionsTest.java,69,,"      ListPortForwardingRulesOptions options = new ListPortForwardingRulesOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141957,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListPortForwardingRulesOptionsTest.java,69,,"      ListPortForwardingRulesOptions options = new ListPortForwardingRulesOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141958,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListPortForwardingRulesOptionsTest.java,69,,"      ListPortForwardingRulesOptions options = new ListPortForwardingRulesOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141959,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListPortForwardingRulesOptionsTest.java,69,,"      ListPortForwardingRulesOptions options = new ListPortForwardingRulesOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141960,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListProjectsOptionsTest.java,54,,"      ListProjectsOptions options = new ListProjectsOptions().keyword(""Enabled"");"
141961,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListProjectsOptionsTest.java,64,,"      ListProjectsOptions options = new ListProjectsOptions().name(""Project Name"");"
141962,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListProjectsOptionsTest.java,104,,"      ListProjectsOptions options = new ListProjectsOptions().displayText(""My Project"");"
141963,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListProjectsOptionsTest.java,114,,"      ListProjectsOptions options = new ListProjectsOptions().domainId(""111-111-111"");"
141964,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListPublicIPAddressesOptionsTest.java,44,,"      assertEquals(ImmutableList.of(""true""), options.buildQueryParameters().get(""allocatedonly""));"
141965,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListPublicIPAddressesOptionsTest.java,73,,"      ListPublicIPAddressesOptions options = new ListPublicIPAddressesOptions().IPAddress(""10.1.1.1"");"
141966,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListPublicIPAddressesOptionsTest.java,83,,"      ListPublicIPAddressesOptions options = new ListPublicIPAddressesOptions().accountInDomain(""adrian"", ""6"");"
141967,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListPublicIPAddressesOptionsTest.java,85,,"      assertEquals(ImmutableList.of(""6""), options.buildQueryParameters().get(""domainid""));"
141968,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListPublicIPAddressesOptionsTest.java,135,,"      ListPublicIPAddressesOptions options = new ListPublicIPAddressesOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141969,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListPublicIPAddressesOptionsTest.java,135,,"      ListPublicIPAddressesOptions options = new ListPublicIPAddressesOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141970,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListPublicIPAddressesOptionsTest.java,135,,"      ListPublicIPAddressesOptions options = new ListPublicIPAddressesOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141971,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListPublicIPAddressesOptionsTest.java,135,,"      ListPublicIPAddressesOptions options = new ListPublicIPAddressesOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141972,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListSecurityGroupsOptionsTest.java,49,,"      ListSecurityGroupsOptions options = new ListSecurityGroupsOptions().accountInDomain(""account"", ""1"");"
141973,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListSecurityGroupsOptionsTest.java,59,,"      ListSecurityGroupsOptions options = new ListSecurityGroupsOptions().named(""securityGroupName"");"
141974,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListSecurityGroupsOptionsTest.java,89,,"      ListSecurityGroupsOptions options = new ListSecurityGroupsOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141975,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListSecurityGroupsOptionsTest.java,89,,"      ListSecurityGroupsOptions options = new ListSecurityGroupsOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141976,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListSecurityGroupsOptionsTest.java,89,,"      ListSecurityGroupsOptions options = new ListSecurityGroupsOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141977,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListSecurityGroupsOptionsTest.java,89,,"      ListSecurityGroupsOptions options = new ListSecurityGroupsOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141978,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListServiceOfferingsOptionsTest.java,46,,"      ListServiceOfferingsOptions options = new ListServiceOfferingsOptions().name(""name"");"
141979,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListStoragePoolsOptionsTest.java,60,,"      ListStoragePoolsOptions options = new ListStoragePoolsOptions().ipAddress(""192.168.42.42"");"
141980,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListStoragePoolsOptionsTest.java,70,,"      ListStoragePoolsOptions options = new ListStoragePoolsOptions().keyword(""fred"");"
141981,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListStoragePoolsOptionsTest.java,80,,"      ListStoragePoolsOptions options = new ListStoragePoolsOptions().name(""bob"");"
141982,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListStoragePoolsOptionsTest.java,90,,"      ListStoragePoolsOptions options = new ListStoragePoolsOptions().path(""/foo/bar"");"
141983,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListTagsOptionsTest.java,53,,"      assertEquals(ImmutableList.of(""6""), options.buildQueryParameters().get(""domainid""));"
141984,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListTagsOptionsTest.java,62,,"      ListTagsOptions options = new ListTagsOptions().accountInDomain(""adrian"", ""6"");"
141985,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListTagsOptionsTest.java,125,,"      assertEquals(ImmutableList.of(""Template""), options.buildQueryParameters().get(""resourcetype""));"
141986,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListTagsOptionsTest.java,125,,"      assertEquals(ImmutableList.of(""Template""), options.buildQueryParameters().get(""resourcetype""));"
141987,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListTagsOptionsTest.java,144,,"      ListTagsOptions options = new ListTagsOptions().value(""some-value"");"
141988,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListTemplatesOptionsTest.java,52,,"      assertEquals(ImmutableList.of(""6""), options.buildQueryParameters().get(""domainid""));"
141989,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListTemplatesOptionsTest.java,61,,"      ListTemplatesOptions options = new ListTemplatesOptions().accountInDomain(""adrian"", ""6"");"
141990,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListTemplatesOptionsTest.java,73,,"      ListTemplatesOptions options = new ListTemplatesOptions().hypervisor(""KVM"");"
141991,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListTemplatesOptionsTest.java,118,,"      ListTemplatesOptions options = new ListTemplatesOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141992,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListTemplatesOptionsTest.java,118,,"      ListTemplatesOptions options = new ListTemplatesOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141993,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListTemplatesOptionsTest.java,118,,"      ListTemplatesOptions options = new ListTemplatesOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141994,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListTemplatesOptionsTest.java,118,,"      ListTemplatesOptions options = new ListTemplatesOptions().tags(ImmutableMap.of(""tag1"", ""val1"", ""tag2"", ""val2""));"
141995,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListUsageRecordsOptionsTest.java,40,,"      ListUsageRecordsOptions options = new ListUsageRecordsOptions().accountInDomain(""fred"", ""42"");"
141996,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListUsageRecordsOptionsTest.java,42,,"      assertEquals(ImmutableSet.of(""42""), options.buildQueryParameters().get(""domainid""));"
141997,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListUsageRecordsOptionsTest.java,72,,"      ListUsageRecordsOptions options = new ListUsageRecordsOptions().keyword(""bob"");"
141998,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListUsersOptionsTest.java,54,,"      ListUsersOptions options = new ListUsersOptions().userName(""andrei"");"
141999,./TargetProjects/jclouds/apis/cloudstack/src/test/java/org/jclouds/cloudstack/options/ListUsersOptionsTest.java,74,,"      ListUsersOptions options = new ListUsersOptions().accountType(""user"");"
