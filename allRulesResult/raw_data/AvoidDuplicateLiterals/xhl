193000,./TargetProjects/nifi/nifi-nar-bundles/nifi-rethinkdb-bundle/nifi-rethinkdb-processors/src/test/java/org/apache/nifi/processors/rethinkdb/TestGetRethinkDB.java,134,,"        runner.setProperty(GetRethinkDB.MAX_DOCUMENTS_SIZE, ""1 B"");"
193001,./TargetProjects/nifi/nifi-nar-bundles/nifi-rethinkdb-bundle/nifi-rethinkdb-processors/src/test/java/org/apache/nifi/processors/rethinkdb/TestGetRethinkDB.java,140,,"        props.put(""rethinkdb.id"", DOCUMENT_ID);"
193002,./TargetProjects/nifi/nifi-nar-bundles/nifi-rethinkdb-bundle/nifi-rethinkdb-processors/src/test/java/org/apache/nifi/processors/rethinkdb/TestPutRethinkDB.java,68,,"        runner.setProperty(PutRethinkDB.CHARSET, ""UTF-8"");"
193003,./TargetProjects/nifi/nifi-nar-bundles/nifi-rethinkdb-bundle/nifi-rethinkdb-processors/src/test/java/org/apache/nifi/processors/rethinkdb/TestPutRethinkDB.java,166,,"        message.put(""hello"", ""rethinkdb"");"
193004,./TargetProjects/nifi/nifi-nar-bundles/nifi-rethinkdb-bundle/nifi-rethinkdb-processors/src/test/java/org/apache/nifi/processors/rethinkdb/TestPutRethinkDB.java,166,,"        message.put(""hello"", ""rethinkdb"");"
193005,./TargetProjects/nifi/nifi-nar-bundles/nifi-rethinkdb-bundle/nifi-rethinkdb-processors/src/test/java/org/apache/nifi/processors/rethinkdb/TestPutRethinkDB.java,182,,"        assertEquals(flowFiles.get(0).getAttribute(PutRethinkDB.RETHINKDB_INSERT_RESULT_FIRST_ERROR_KEY),""null"");"
193006,./TargetProjects/nifi/nifi-nar-bundles/nifi-riemann-bundle/nifi-riemann-processors/src/test/java/org/apache/nifi/processors/riemann/TestPutRiemann.java,109,,"    attributes.put(""riemann.metric"", ""42"");"
193007,./TargetProjects/nifi/nifi-nar-bundles/nifi-rules-action-handler-bundle/nifi-rules-action-handler-service/src/test/java/org/apache/nifi/rules/handlers/TestAlertHandler.java,90,,"        attributes.put(""logLevel"", ""INFO"");"
193008,./TargetProjects/nifi/nifi-nar-bundles/nifi-rules-action-handler-bundle/nifi-rules-action-handler-service/src/test/java/org/apache/nifi/rules/handlers/TestAlertHandler.java,91,,"        attributes.put(""message"", ""This should be not sent as an alert!"");"
193009,./TargetProjects/nifi/nifi-nar-bundles/nifi-rules-action-handler-bundle/nifi-rules-action-handler-service/src/test/java/org/apache/nifi/rules/handlers/TestAlertHandler.java,92,,"        metrics.put(""jvmHeap"", ""1000000"");"
193010,./TargetProjects/nifi/nifi-nar-bundles/nifi-rules-action-handler-bundle/nifi-rules-action-handler-service/src/test/java/org/apache/nifi/rules/handlers/TestAlertHandler.java,92,,"        metrics.put(""jvmHeap"", ""1000000"");"
193011,./TargetProjects/nifi/nifi-nar-bundles/nifi-rules-action-handler-bundle/nifi-rules-action-handler-service/src/test/java/org/apache/nifi/rules/handlers/TestAlertHandler.java,93,,"        metrics.put(""cpu"", ""90"");"
193012,./TargetProjects/nifi/nifi-nar-bundles/nifi-rules-action-handler-bundle/nifi-rules-action-handler-service/src/test/java/org/apache/nifi/rules/handlers/TestAlertHandler.java,96,,"        action.setType(""ALERT"");"
193013,./TargetProjects/nifi/nifi-nar-bundles/nifi-rules-action-handler-bundle/nifi-rules-action-handler-service/src/test/java/org/apache/nifi/rules/handlers/TestAlertHandler.java,112,,"        final String category = ""Rules Alert"";"
193014,./TargetProjects/nifi/nifi-nar-bundles/nifi-rules-action-handler-bundle/nifi-rules-action-handler-service/src/test/java/org/apache/nifi/rules/handlers/TestAlertHandler.java,113,,"        final String message = ""This should be sent as an alert!"";"
193015,./TargetProjects/nifi/nifi-nar-bundles/nifi-rules-action-handler-bundle/nifi-rules-action-handler-service/src/test/java/org/apache/nifi/rules/handlers/TestAlertHandler.java,115,,"        attributes.put(""category"", category);"
193016,./TargetProjects/nifi/nifi-nar-bundles/nifi-rules-action-handler-bundle/nifi-rules-action-handler-service/src/test/java/org/apache/nifi/rules/handlers/TestAlertHandler.java,117,,"        attributes.put(""severity"", severity);"
193017,./TargetProjects/nifi/nifi-nar-bundles/nifi-rules-action-handler-bundle/nifi-rules-action-handler-service/src/test/java/org/apache/nifi/rules/handlers/TestExpressionHandler.java,69,,"        attributes.put(""type"",""MVEL"");"
193018,./TargetProjects/nifi/nifi-nar-bundles/nifi-rules-action-handler-bundle/nifi-rules-action-handler-service/src/test/java/org/apache/nifi/rules/handlers/TestExpressionHandler.java,70,,"        metrics.put(""jvmHeap"",""1000000"");"
193019,./TargetProjects/nifi/nifi-nar-bundles/nifi-rules-action-handler-bundle/nifi-rules-action-handler-service/src/test/java/org/apache/nifi/rules/handlers/TestExpressionHandler.java,70,,"        metrics.put(""jvmHeap"",""1000000"");"
193020,./TargetProjects/nifi/nifi-nar-bundles/nifi-rules-action-handler-bundle/nifi-rules-action-handler-service/src/test/java/org/apache/nifi/rules/handlers/TestExpressionHandler.java,71,,"        metrics.put(""cpu"",""90"");"
193021,./TargetProjects/nifi/nifi-nar-bundles/nifi-rules-action-handler-bundle/nifi-rules-action-handler-service/src/test/java/org/apache/nifi/rules/handlers/TestExpressionHandler.java,74,,"        action.setType(""EXPRESSION"");"
193022,./TargetProjects/nifi/nifi-nar-bundles/nifi-rules-action-handler-bundle/nifi-rules-action-handler-service/src/test/java/org/apache/nifi/rules/handlers/TestExpressionHandler.java,109,,"        attributes.put(""type"",""FAKE"");"
193023,./TargetProjects/nifi/nifi-nar-bundles/nifi-rules-action-handler-bundle/nifi-rules-action-handler-service/src/test/java/org/apache/nifi/rules/handlers/TestLogHandler.java,68,,"        final String expectedMessage = ""--------------------------------------------------\n"" +"
193024,./TargetProjects/nifi/nifi-nar-bundles/nifi-rules-action-handler-bundle/nifi-rules-action-handler-service/src/test/java/org/apache/nifi/rules/handlers/TestLogHandler.java,70,,"                ""Log Facts:\n"" +"
193025,./TargetProjects/nifi/nifi-nar-bundles/nifi-rules-action-handler-bundle/nifi-rules-action-handler-service/src/test/java/org/apache/nifi/rules/handlers/TestLogHandler.java,71,,"                ""Field: cpu, Value: 90\n"" +"
193026,./TargetProjects/nifi/nifi-nar-bundles/nifi-rules-action-handler-bundle/nifi-rules-action-handler-service/src/test/java/org/apache/nifi/rules/handlers/TestLogHandler.java,72,,"                ""Field: jvmHeap, Value: 1000000"";"
193027,./TargetProjects/nifi/nifi-nar-bundles/nifi-rules-action-handler-bundle/nifi-rules-action-handler-service/src/test/java/org/apache/nifi/rules/handlers/TestLogHandler.java,75,,"        attributes.put(""logLevel"", ""warn"");"
193028,./TargetProjects/nifi/nifi-nar-bundles/nifi-rules-action-handler-bundle/nifi-rules-action-handler-service/src/test/java/org/apache/nifi/rules/handlers/TestLogHandler.java,77,,"        metrics.put(""jvmHeap"", ""1000000"");"
193029,./TargetProjects/nifi/nifi-nar-bundles/nifi-rules-action-handler-bundle/nifi-rules-action-handler-service/src/test/java/org/apache/nifi/rules/handlers/TestLogHandler.java,77,,"        metrics.put(""jvmHeap"", ""1000000"");"
193030,./TargetProjects/nifi/nifi-nar-bundles/nifi-rules-action-handler-bundle/nifi-rules-action-handler-service/src/test/java/org/apache/nifi/rules/handlers/TestLogHandler.java,78,,"        metrics.put(""cpu"", ""90"");"
193031,./TargetProjects/nifi/nifi-nar-bundles/nifi-rules-action-handler-bundle/nifi-rules-action-handler-service/src/test/java/org/apache/nifi/rules/handlers/TestLogHandler.java,80,,"        action.setType(""LOG"");"
193032,./TargetProjects/nifi/nifi-nar-bundles/nifi-rules-action-handler-bundle/nifi-rules-action-handler-service/src/test/java/org/apache/nifi/rules/handlers/TestLogHandler.java,94,,"                ""Log Message: Rules Action Triggered Log.\n"" +"
193033,./TargetProjects/nifi/nifi-nar-bundles/nifi-rules-action-handler-bundle/nifi-rules-action-handler-service/src/test/java/org/apache/nifi/rules/handlers/TestLogHandler.java,117,,"        attributes.put(""logLevel"", ""FAKE"");"
193034,./TargetProjects/nifi/nifi-nar-bundles/nifi-scripting-bundle/nifi-scripting-processors/src/test/java/org/apache/nifi/processors/script/TestExecuteClojure.java,50,,"        runner.setProperty(scriptingComponent.getScriptingComponentHelper().SCRIPT_ENGINE, ""Clojure"");"
193035,./TargetProjects/nifi/nifi-nar-bundles/nifi-scripting-bundle/nifi-scripting-processors/src/test/java/org/apache/nifi/processors/script/TestExecuteGroovy.java,53,,"        runner.setProperty(scriptingComponent.getScriptingComponentHelper().SCRIPT_ENGINE, ""Groovy"");"
193036,./TargetProjects/nifi/nifi-nar-bundles/nifi-scripting-bundle/nifi-scripting-processors/src/test/java/org/apache/nifi/processors/script/TestExecuteGroovy.java,58,,"        runner.enqueue(""test content"".getBytes(StandardCharsets.UTF_8));"
193037,./TargetProjects/nifi/nifi-nar-bundles/nifi-scripting-bundle/nifi-scripting-processors/src/test/java/org/apache/nifi/processors/script/TestExecuteGroovy.java,63,,"        result.get(0).assertAttributeEquals(""from-content"", ""test content"");"
193038,./TargetProjects/nifi/nifi-nar-bundles/nifi-scripting-bundle/nifi-scripting-processors/src/test/java/org/apache/nifi/processors/script/TestExecuteJython.java,54,,"        runner.enqueue(""test content"".getBytes(StandardCharsets.UTF_8));"
193039,./TargetProjects/nifi/nifi-nar-bundles/nifi-scripting-bundle/nifi-scripting-processors/src/test/java/org/apache/nifi/processors/script/TestInvokeGroovy.java,60,,"        runner.setProperty(scriptingComponent.getScriptingComponentHelper().SCRIPT_ENGINE, ""Groovy"");"
193040,./TargetProjects/nifi/nifi-nar-bundles/nifi-scripting-bundle/nifi-scripting-processors/src/test/java/org/apache/nifi/processors/script/TestInvokeGroovy.java,61,,"        runner.setProperty(ScriptingComponentUtils.SCRIPT_FILE, ""target/test/resources/groovy/test_reader.groovy"");"
193041,./TargetProjects/nifi/nifi-nar-bundles/nifi-scripting-bundle/nifi-scripting-processors/src/test/java/org/apache/nifi/processors/script/TestInvokeGroovy.java,62,,"        runner.setProperty(ScriptingComponentUtils.MODULES, ""target/test/resources/groovy"");"
193042,./TargetProjects/nifi/nifi-nar-bundles/nifi-scripting-bundle/nifi-scripting-processors/src/test/java/org/apache/nifi/processors/script/TestInvokeGroovy.java,65,,"        runner.enqueue(""test content"".getBytes(StandardCharsets.UTF_8));"
193043,./TargetProjects/nifi/nifi-nar-bundles/nifi-scripting-bundle/nifi-scripting-processors/src/test/java/org/apache/nifi/processors/script/TestInvokeGroovy.java,68,,"        runner.assertAllFlowFilesTransferred(""test"", 1);"
193044,./TargetProjects/nifi/nifi-nar-bundles/nifi-scripting-bundle/nifi-scripting-processors/src/test/java/org/apache/nifi/processors/script/TestInvokeGroovy.java,207,,"        runner.assertAllFlowFilesTransferred(""success"", 1);"
193045,./TargetProjects/nifi/nifi-nar-bundles/nifi-scripting-bundle/nifi-scripting-processors/src/test/java/org/apache/nifi/processors/script/TestInvokeJavascript.java,55,,"        runner.setProperty(scriptingComponent.getScriptingComponentHelper().SCRIPT_ENGINE, ""ECMAScript"");"
193046,./TargetProjects/nifi/nifi-nar-bundles/nifi-scripting-bundle/nifi-scripting-processors/src/test/java/org/apache/nifi/processors/script/TestInvokeJavascript.java,60,,"        runner.enqueue(""test content"".getBytes(StandardCharsets.UTF_8));"
193047,./TargetProjects/nifi/nifi-nar-bundles/nifi-scripting-bundle/nifi-scripting-processors/src/test/java/org/apache/nifi/processors/script/TestInvokeJython.java,56,,"        runner.setProperty(scriptingComponent.getScriptingComponentHelper().SCRIPT_ENGINE, ""python"");"
193048,./TargetProjects/nifi/nifi-nar-bundles/nifi-scripting-bundle/nifi-scripting-processors/src/test/java/org/apache/nifi/processors/script/TestInvokeJython.java,81,,"        runner.setProperty(""for-attributes"", ""value-1"");"
193049,./TargetProjects/nifi/nifi-nar-bundles/nifi-scripting-bundle/nifi-scripting-processors/src/test/java/org/apache/nifi/processors/script/TestInvokeJython.java,114,,"        runner.assertAllFlowFilesTransferred(""success"", 1);"
193050,./TargetProjects/nifi/nifi-nar-bundles/nifi-scripting-bundle/nifi-scripting-processors/src/test/java/org/apache/nifi/processors/script/TestInvokeJython.java,139,,"        runner.enqueue(""test content"".getBytes(StandardCharsets.UTF_8));"
193051,./TargetProjects/nifi/nifi-nar-bundles/nifi-scripting-bundle/nifi-scripting-processors/src/test/java/org/apache/nifi/processors/script/TestScriptedTransformRecord.java,76,,"        recordReader.addRecord(new MapRecord(schema, Collections.singletonMap(""num"", 1)));"
193052,./TargetProjects/nifi/nifi-nar-bundles/nifi-scripting-bundle/nifi-scripting-processors/src/test/java/org/apache/nifi/processors/script/TestScriptedTransformRecord.java,86,,"        out.assertAttributeEquals(""record.count"", ""3"");"
193053,./TargetProjects/nifi/nifi-nar-bundles/nifi-scripting-bundle/nifi-scripting-processors/src/test/java/org/apache/nifi/processors/script/TestScriptedTransformRecord.java,87,,"        assertEquals(3, testRunner.getCounterValue(""Records Transformed"").intValue());"
193054,./TargetProjects/nifi/nifi-nar-bundles/nifi-scripting-bundle/nifi-scripting-processors/src/test/java/org/apache/nifi/processors/script/TestScriptedTransformRecord.java,88,,"        assertEquals(0, testRunner.getCounterValue(""Records Dropped"").intValue());"
193055,./TargetProjects/nifi/nifi-nar-bundles/nifi-scripting-bundle/nifi-scripting-processors/src/test/java/org/apache/nifi/processors/script/TestScriptedTransformRecord.java,381,,"        bookFields.add(new RecordField(""author"", RecordFieldType.STRING.getDataType()));"
193056,./TargetProjects/nifi/nifi-nar-bundles/nifi-scripting-bundle/nifi-scripting-processors/src/test/java/org/apache/nifi/processors/script/TestScriptedTransformRecord.java,386,,"        fields.add(new RecordField(""book"", RecordFieldType.RECORD.getRecordDataType(bookSchema)));"
193057,./TargetProjects/nifi/nifi-nar-bundles/nifi-scripting-bundle/nifi-scripting-processors/src/test/java/org/apache/nifi/rules/handlers/script/ScriptedActionHandlerTest.java,78,,"        List<Action> actions = Arrays.asList(new Action(""LOG"", attrs), new Action(""ALERT"", attrs));"
193058,./TargetProjects/nifi/nifi-nar-bundles/nifi-site-to-site-reporting-bundle/nifi-site-to-site-reporting-task/src/main/java/org/apache/nifi/reporting/SiteToSiteStatusReportingTask.java,267,,"            addField(builder, ""componentId"", status.getId(), allowNullValues);"
193059,./TargetProjects/nifi/nifi-nar-bundles/nifi-site-to-site-reporting-bundle/nifi-site-to-site-reporting-task/src/main/java/org/apache/nifi/reporting/SiteToSiteStatusReportingTask.java,277,,"            addField(builder, ""inputCount"", status.getInputCount(), allowNullValues);"
193060,./TargetProjects/nifi/nifi-nar-bundles/nifi-site-to-site-reporting-bundle/nifi-site-to-site-reporting-task/src/main/java/org/apache/nifi/reporting/SiteToSiteStatusReportingTask.java,279,,"            addField(builder, ""outputCount"", status.getOutputCount(), allowNullValues);"
193061,./TargetProjects/nifi/nifi-nar-bundles/nifi-site-to-site-reporting-bundle/nifi-site-to-site-reporting-task/src/main/java/org/apache/nifi/reporting/SiteToSiteStatusReportingTask.java,281,,"            addField(builder, ""activeThreadCount"", status.getActiveThreadCount(), allowNullValues);"
193062,./TargetProjects/nifi/nifi-nar-bundles/nifi-site-to-site-reporting-bundle/nifi-site-to-site-reporting-task/src/test/java/org/apache/nifi/reporting/TestSiteToSiteBulletinReportingTask.java,69,,"        assertTrue(new NiFiUrlValidator().validate(""url"", ""http://localhost:8080/nifi"", context).isValid());"
193063,./TargetProjects/nifi/nifi-nar-bundles/nifi-site-to-site-reporting-bundle/nifi-site-to-site-reporting-task/src/test/java/org/apache/nifi/reporting/TestSiteToSiteMetricsReportingTask.java,239,,"        JsonArray array = jsonReader.readObject().getJsonArray(""metrics"");"
193064,./TargetProjects/nifi/nifi-nar-bundles/nifi-site-to-site-reporting-bundle/nifi-site-to-site-reporting-task/src/test/java/org/apache/nifi/reporting/TestSiteToSiteProvenanceReportingTask.java,133,,"        pgB2.setId(""pgB2"");"
193065,./TargetProjects/nifi/nifi-nar-bundles/nifi-site-to-site-reporting-bundle/nifi-site-to-site-reporting-task/src/test/java/org/apache/nifi/reporting/TestSiteToSiteProvenanceReportingTask.java,148,,"        prcA.setId(""A001"");"
193066,./TargetProjects/nifi/nifi-nar-bundles/nifi-site-to-site-reporting-bundle/nifi-site-to-site-reporting-task/src/test/java/org/apache/nifi/reporting/TestSiteToSiteProvenanceReportingTask.java,158,,"        prcB2.setId(""B201"");"
193067,./TargetProjects/nifi/nifi-nar-bundles/nifi-site-to-site-reporting-bundle/nifi-site-to-site-reporting-task/src/test/java/org/apache/nifi/reporting/TestSiteToSiteProvenanceReportingTask.java,163,,"        prcB3.setId(""B301"");"
193068,./TargetProjects/nifi/nifi-nar-bundles/nifi-site-to-site-reporting-bundle/nifi-site-to-site-reporting-task/src/test/java/org/apache/nifi/reporting/TestSiteToSiteProvenanceReportingTask.java,206,,"        properties.put(SiteToSiteUtils.BATCH_SIZE, ""1000"");"
193069,./TargetProjects/nifi/nifi-nar-bundles/nifi-site-to-site-reporting-bundle/nifi-site-to-site-reporting-task/src/test/java/org/apache/nifi/reporting/TestSiteToSiteProvenanceReportingTask.java,222,,"        assertEquals(msgArray.getString(""abc""), event.getAttributes().get(""abc""));"
193070,./TargetProjects/nifi/nifi-nar-bundles/nifi-site-to-site-reporting-bundle/nifi-site-to-site-reporting-task/src/test/java/org/apache/nifi/reporting/TestSiteToSiteProvenanceReportingTask.java,296,,"        properties.put(SiteToSiteProvenanceReportingTask.FILTER_COMPONENT_TYPE, ""dummy.*"");"
193071,./TargetProjects/nifi/nifi-nar-bundles/nifi-site-to-site-reporting-bundle/nifi-site-to-site-reporting-task/src/test/java/org/apache/nifi/reporting/TestSiteToSiteProvenanceReportingTask.java,319,,"        ProvenanceEventRecord event = createProvenanceEventRecord(""A001"", ""dummy"");"
193072,./TargetProjects/nifi/nifi-nar-bundles/nifi-site-to-site-reporting-bundle/nifi-site-to-site-reporting-task/src/test/java/org/apache/nifi/reporting/TestSiteToSiteProvenanceReportingTask.java,327,,"        assertEquals(""A001"", reportedEvent.get(""componentId"").asText());"
193073,./TargetProjects/nifi/nifi-nar-bundles/nifi-site-to-site-reporting-bundle/nifi-site-to-site-reporting-task/src/test/java/org/apache/nifi/reporting/TestSiteToSiteProvenanceReportingTask.java,328,,"        assertEquals(""Processor in PGA"", reportedEvent.get(""componentName"").asText());"
193074,./TargetProjects/nifi/nifi-nar-bundles/nifi-site-to-site-reporting-bundle/nifi-site-to-site-reporting-task/src/test/java/org/apache/nifi/reporting/TestSiteToSiteStatusReportingTask.java,109,,"        final ProcessGroupStatus pgStatus = generateProcessGroupStatus(""root"", ""Awesome"", 1, 0);"
193075,./TargetProjects/nifi/nifi-nar-bundles/nifi-site-to-site-reporting-bundle/nifi-site-to-site-reporting-task/src/test/java/org/apache/nifi/reporting/TestSiteToSiteStatusReportingTask.java,109,,"        final ProcessGroupStatus pgStatus = generateProcessGroupStatus(""root"", ""Awesome"", 1, 0);"
193076,./TargetProjects/nifi/nifi-nar-bundles/nifi-site-to-site-reporting-bundle/nifi-site-to-site-reporting-task/src/test/java/org/apache/nifi/reporting/TestSiteToSiteStatusReportingTask.java,113,,"        properties.put(SiteToSiteStatusReportingTask.COMPONENT_NAME_FILTER_REGEX, ""Awesome.*"");"
193077,./TargetProjects/nifi/nifi-nar-bundles/nifi-site-to-site-reporting-bundle/nifi-site-to-site-reporting-task/src/test/java/org/apache/nifi/reporting/TestSiteToSiteStatusReportingTask.java,123,,"        JsonString componentId = firstElement.getJsonString(""componentId"");"
193078,./TargetProjects/nifi/nifi-nar-bundles/nifi-site-to-site-reporting-bundle/nifi-site-to-site-reporting-task/src/test/java/org/apache/nifi/reporting/TestSiteToSiteStatusReportingTask.java,167,,"        assertEquals(""true"", backpressure.getString());"
193079,./TargetProjects/nifi/nifi-nar-bundles/nifi-site-to-site-reporting-bundle/nifi-site-to-site-reporting-task/src/test/java/org/apache/nifi/reporting/sink/TestSiteToSiteReportingRecordSink.java,70,,"                new RecordField(""field1"", RecordFieldType.INT.getDataType()),"
193080,./TargetProjects/nifi/nifi-nar-bundles/nifi-site-to-site-reporting-bundle/nifi-site-to-site-reporting-task/src/test/java/org/apache/nifi/reporting/sink/TestSiteToSiteReportingRecordSink.java,71,,"                new RecordField(""field2"", RecordFieldType.STRING.getDataType())"
193081,./TargetProjects/nifi/nifi-nar-bundles/nifi-slack-bundle/nifi-slack-processors/src/test/java/org/apache/nifi/processors/slack/PostSlackConfigValidationTest.java,35,,"        testRunner.setProperty(PostSlack.ACCESS_TOKEN, ""my-access-token"");"
193082,./TargetProjects/nifi/nifi-nar-bundles/nifi-slack-bundle/nifi-slack-processors/src/test/java/org/apache/nifi/processors/slack/PostSlackConfigValidationTest.java,36,,"        testRunner.setProperty(PostSlack.CHANNEL, ""my-channel"");"
193083,./TargetProjects/nifi/nifi-nar-bundles/nifi-slack-bundle/nifi-slack-processors/src/test/java/org/apache/nifi/processors/slack/PostSlackConfigValidationTest.java,37,,"        testRunner.setProperty(PostSlack.TEXT, ""my-text"");"
193084,./TargetProjects/nifi/nifi-nar-bundles/nifi-slack-bundle/nifi-slack-processors/src/test/java/org/apache/nifi/processors/slack/PostSlackFileMessageTest.java,65,,"        testRunner.setProperty(PostSlack.ACCESS_TOKEN, ""my-access-token"");"
193085,./TargetProjects/nifi/nifi-nar-bundles/nifi-slack-bundle/nifi-slack-processors/src/test/java/org/apache/nifi/processors/slack/PostSlackFileMessageTest.java,66,,"        testRunner.setProperty(PostSlack.CHANNEL, ""my-channel"");"
193086,./TargetProjects/nifi/nifi-nar-bundles/nifi-slack-bundle/nifi-slack-processors/src/test/java/org/apache/nifi/processors/slack/PostSlackFileMessageTest.java,70,,"        flowFileAttributes.put(CoreAttributes.FILENAME.key(), ""my-file-name"");"
193087,./TargetProjects/nifi/nifi-nar-bundles/nifi-slack-bundle/nifi-slack-processors/src/test/java/org/apache/nifi/processors/slack/PostSlackFileMessageTest.java,71,,"        flowFileAttributes.put(CoreAttributes.MIME_TYPE.key(), ""image/png"");"
193088,./TargetProjects/nifi/nifi-nar-bundles/nifi-slack-bundle/nifi-slack-processors/src/test/java/org/apache/nifi/processors/slack/PostSlackFileMessageTest.java,74,,"        testRunner.enqueue(""my-data"", flowFileAttributes);"
193089,./TargetProjects/nifi/nifi-nar-bundles/nifi-slack-bundle/nifi-slack-processors/src/test/java/org/apache/nifi/processors/slack/PostSlackFileMessageTest.java,82,,"        assertEquals(""slack-file-url"", flowFileOut.getAttribute(""slack.file.url""));"
193090,./TargetProjects/nifi/nifi-nar-bundles/nifi-slack-bundle/nifi-slack-processors/src/test/java/org/apache/nifi/processors/slack/PostSlackFileMessageTest.java,82,,"        assertEquals(""slack-file-url"", flowFileOut.getAttribute(""slack.file.url""));"
193091,./TargetProjects/nifi/nifi-nar-bundles/nifi-slack-bundle/nifi-slack-processors/src/test/java/org/apache/nifi/processors/slack/PostSlackFileMessageTest.java,190,,"        testRunner.setProperty(PostSlack.TEXT, ""Iñtërnâtiônàližætiøn"");"
193092,./TargetProjects/nifi/nifi-nar-bundles/nifi-slack-bundle/nifi-slack-processors/src/test/java/org/apache/nifi/processors/slack/PostSlackFileMessageTest.java,227,,"        assertNotNull(""'filename' parameter not found in the POST request body"", parts.get(""filename""));"
193093,./TargetProjects/nifi/nifi-nar-bundles/nifi-slack-bundle/nifi-slack-processors/src/test/java/org/apache/nifi/processors/slack/PostSlackTextMessageTest.java,66,,"        testRunner.setProperty(PostSlack.ACCESS_TOKEN, ""my-access-token"");"
193094,./TargetProjects/nifi/nifi-nar-bundles/nifi-slack-bundle/nifi-slack-processors/src/test/java/org/apache/nifi/processors/slack/PostSlackTextMessageTest.java,67,,"        testRunner.setProperty(PostSlack.CHANNEL, ""my-channel"");"
193095,./TargetProjects/nifi/nifi-nar-bundles/nifi-slack-bundle/nifi-slack-processors/src/test/java/org/apache/nifi/processors/slack/PostSlackTextMessageTest.java,68,,"        testRunner.setProperty(PostSlack.TEXT, ""my-text"");"
193096,./TargetProjects/nifi/nifi-nar-bundles/nifi-slack-bundle/nifi-slack-processors/src/test/java/org/apache/nifi/processors/slack/PostSlackTextMessageTest.java,86,,"        testRunner.setProperty(""attachment_01"", ""{\""my-attachment-key\"": \""my-attachment-value\""}"");"
193097,./TargetProjects/nifi/nifi-nar-bundles/nifi-slack-bundle/nifi-slack-processors/src/test/java/org/apache/nifi/processors/slack/PostSlackTextMessageTest.java,86,,"        testRunner.setProperty(""attachment_01"", ""{\""my-attachment-key\"": \""my-attachment-value\""}"");"
193098,./TargetProjects/nifi/nifi-nar-bundles/nifi-slack-bundle/nifi-slack-processors/src/test/java/org/apache/nifi/processors/slack/PostSlackTextMessageTest.java,96,,"        assertEquals(""[{\""my-attachment-key\"":\""my-attachment-value\""}]"", requestBodyJson.getJsonArray(""attachments"").toString());"
193099,./TargetProjects/nifi/nifi-nar-bundles/nifi-slack-bundle/nifi-slack-processors/src/test/java/org/apache/nifi/processors/slack/PostSlackTextMessageTest.java,96,,"        assertEquals(""[{\""my-attachment-key\"":\""my-attachment-value\""}]"", requestBodyJson.getJsonArray(""attachments"").toString());"
193100,./TargetProjects/nifi/nifi-nar-bundles/nifi-slack-bundle/nifi-slack-processors/src/test/java/org/apache/nifi/processors/slack/PutSlackTest.java,116,,"                .name(""foo"")"
193101,./TargetProjects/nifi/nifi-nar-bundles/nifi-smb-bundle/nifi-smb-processors/src/main/java/org/apache/nifi/processors/smb/GetSmbFile.java,158,,"            .allowableValues(""true"", ""false"")"
193102,./TargetProjects/nifi/nifi-nar-bundles/nifi-smb-bundle/nifi-smb-processors/src/main/java/org/apache/nifi/processors/smb/GetSmbFile.java,158,,"            .allowableValues(""true"", ""false"")"
193103,./TargetProjects/nifi/nifi-nar-bundles/nifi-smb-bundle/nifi-smb-processors/src/test/java/org/apache/nifi/processors/smb/GetSmbFileTest.java,171,,"        FileIdBothDirectoryInformation file1 = mockFile(DIRECTORY, ""file1.txt"", ""abc"");"
193104,./TargetProjects/nifi/nifi-nar-bundles/nifi-smb-bundle/nifi-smb-processors/src/test/java/org/apache/nifi/processors/smb/GetSmbFileTest.java,171,,"        FileIdBothDirectoryInformation file1 = mockFile(DIRECTORY, ""file1.txt"", ""abc"");"
193105,./TargetProjects/nifi/nifi-nar-bundles/nifi-smb-bundle/nifi-smb-processors/src/test/java/org/apache/nifi/processors/smb/GetSmbFileTest.java,177,,"        verifyOpenFile(DIRECTORY, ""file2.txt"", 0);"
193106,./TargetProjects/nifi/nifi-nar-bundles/nifi-smb-bundle/nifi-smb-processors/src/test/java/org/apache/nifi/processors/smb/GetSmbFileTest.java,217,,"                add(mockFile(subdir, ""file3.txt"", ""abc""));"
193107,./TargetProjects/nifi/nifi-nar-bundles/nifi-smb-bundle/nifi-smb-processors/src/test/java/org/apache/nifi/processors/smb/PutSmbFileTest.java,111,,"        testRunner.enqueue(""data"");"
193108,./TargetProjects/nifi/nifi-nar-bundles/nifi-snmp-bundle/nifi-snmp-processors/src/test/java/org/apache/nifi/snmp/operations/SNMPV3RequestTest.java,51,,"                ""SHA"", ""SHAAuthPassword"");"
193109,./TargetProjects/nifi/nifi-nar-bundles/nifi-snmp-bundle/nifi-snmp-processors/src/test/java/org/apache/nifi/snmp/operations/SNMPV3RequestTest.java,51,,"                ""SHA"", ""SHAAuthPassword"");"
193110,./TargetProjects/nifi/nifi-nar-bundles/nifi-snmp-bundle/nifi-snmp-processors/src/test/java/org/apache/nifi/snmp/testagents/TestSNMPV3Agent.java,81,,"                new OctetString(""v3group""),"
193111,./TargetProjects/nifi/nifi-nar-bundles/nifi-social-media-bundle/nifi-twitter-processors/src/test/java/org/apache/nifi/processors/twitter/TestGetTwitter.java,30,,"        runner.setProperty(GetTwitter.CONSUMER_KEY, ""consumerKey"");"
193112,./TargetProjects/nifi/nifi-nar-bundles/nifi-social-media-bundle/nifi-twitter-processors/src/test/java/org/apache/nifi/processors/twitter/TestGetTwitter.java,31,,"        runner.setProperty(GetTwitter.CONSUMER_SECRET, ""consumerSecret"");"
193113,./TargetProjects/nifi/nifi-nar-bundles/nifi-social-media-bundle/nifi-twitter-processors/src/test/java/org/apache/nifi/processors/twitter/TestGetTwitter.java,32,,"        runner.setProperty(GetTwitter.ACCESS_TOKEN, ""accessToken"");"
193114,./TargetProjects/nifi/nifi-nar-bundles/nifi-social-media-bundle/nifi-twitter-processors/src/test/java/org/apache/nifi/processors/twitter/TestGetTwitter.java,33,,"        runner.setProperty(GetTwitter.ACCESS_TOKEN_SECRET, ""accessTokenSecret"");"
193115,./TargetProjects/nifi/nifi-nar-bundles/nifi-solr-bundle/nifi-solr-processors/src/main/java/org/apache/nifi/processors/solr/QuerySolr.java,547,,"            writer.name(""count"").value(fsi.getCount());"
193116,./TargetProjects/nifi/nifi-nar-bundles/nifi-solr-bundle/nifi-solr-processors/src/main/java/org/apache/nifi/processors/solr/QuerySolr.java,565,,"            writer.name(""facet"").value(facetQuery.getKey());"
193117,./TargetProjects/nifi/nifi-nar-bundles/nifi-solr-bundle/nifi-solr-processors/src/main/java/org/apache/nifi/processors/solr/SolrUtils.java,186,,"            .defaultValue(""10 seconds"")"
193118,./TargetProjects/nifi/nifi-nar-bundles/nifi-solr-bundle/nifi-solr-processors/src/test/java/org/apache/nifi/processors/solr/QuerySolrIT.java,108,,"            doc.addField(""integer_single"", i);"
193119,./TargetProjects/nifi/nifi-nar-bundles/nifi-solr-bundle/nifi-solr-processors/src/test/java/org/apache/nifi/processors/solr/QuerySolrIT.java,109,,"            doc.addField(""integer_multi"", 1);"
193120,./TargetProjects/nifi/nifi-nar-bundles/nifi-solr-bundle/nifi-solr-processors/src/test/java/org/apache/nifi/processors/solr/QuerySolrIT.java,158,,"        runner.setProperty(""facet"", ""true"");"
193121,./TargetProjects/nifi/nifi-nar-bundles/nifi-solr-bundle/nifi-solr-processors/src/test/java/org/apache/nifi/processors/solr/QuerySolrIT.java,158,,"        runner.setProperty(""facet"", ""true"");"
193122,./TargetProjects/nifi/nifi-nar-bundles/nifi-solr-bundle/nifi-solr-processors/src/test/java/org/apache/nifi/processors/solr/QuerySolrIT.java,228,,"        runner.setProperty(""stats"", ""true"");"
193123,./TargetProjects/nifi/nifi-nar-bundles/nifi-solr-bundle/nifi-solr-processors/src/test/java/org/apache/nifi/processors/solr/QuerySolrIT.java,418,,"        runner.setProperty(QuerySolr.SOLR_PARAM_SORT, ""id asc"");"
193124,./TargetProjects/nifi/nifi-nar-bundles/nifi-solr-bundle/nifi-solr-processors/src/test/java/org/apache/nifi/processors/solr/TestGetSolr.java,81,,"            doc.addField(""created"", date);"
193125,./TargetProjects/nifi/nifi-nar-bundles/nifi-solr-bundle/nifi-solr-processors/src/test/java/org/apache/nifi/processors/solr/TestPutSolrContentStream.java,99,,"        runner.setProperty(SolrUtils.SOLR_LOCATION, ""http://localhost:8443/solr"");"
193126,./TargetProjects/nifi/nifi-nar-bundles/nifi-solr-bundle/nifi-solr-processors/src/test/java/org/apache/nifi/processors/solr/TestPutSolrContentStream.java,378,,"        Mockito.when(sslContextService.getIdentifier()).thenReturn(""ssl-context"");"
193127,./TargetProjects/nifi/nifi-nar-bundles/nifi-solr-bundle/nifi-solr-processors/src/test/java/org/apache/nifi/processors/solr/TestPutSolrContentStream.java,442,,"        final String principal = ""nifi@FOO.COM"";"
193128,./TargetProjects/nifi/nifi-nar-bundles/nifi-solr-bundle/nifi-solr-processors/src/test/java/org/apache/nifi/processors/solr/TestPutSolrContentStream.java,445,,"        runner.addControllerService(""kerb-credentials"", kerberosCredentialsService);"
193129,./TargetProjects/nifi/nifi-nar-bundles/nifi-solr-bundle/nifi-solr-processors/src/test/java/org/apache/nifi/processors/solr/TestPutSolrRecord.java,75,,"        runner.addControllerService(""parser"", recordParser);"
193130,./TargetProjects/nifi/nifi-nar-bundles/nifi-solr-bundle/nifi-solr-processors/src/test/java/org/apache/nifi/processors/solr/TestPutSolrRecord.java,80,,"        runner.setProperty(PutSolrRecord.UPDATE_PATH, ""/update"");"
193131,./TargetProjects/nifi/nifi-nar-bundles/nifi-solr-bundle/nifi-solr-processors/src/test/java/org/apache/nifi/processors/solr/TestPutSolrRecord.java,83,,"        recordParser.addSchemaField(""first"", RecordFieldType.STRING);"
193132,./TargetProjects/nifi/nifi-nar-bundles/nifi-solr-bundle/nifi-solr-processors/src/test/java/org/apache/nifi/processors/solr/TestPutSolrRecord.java,84,,"        recordParser.addSchemaField(""last"", RecordFieldType.STRING);"
193133,./TargetProjects/nifi/nifi-nar-bundles/nifi-solr-bundle/nifi-solr-processors/src/test/java/org/apache/nifi/processors/solr/TestPutSolrRecord.java,85,,"        recordParser.addSchemaField(""grade"", RecordFieldType.INT);"
193134,./TargetProjects/nifi/nifi-nar-bundles/nifi-solr-bundle/nifi-solr-processors/src/test/java/org/apache/nifi/processors/solr/TestPutSolrRecord.java,86,,"        recordParser.addSchemaField(""subject"", RecordFieldType.STRING);"
193135,./TargetProjects/nifi/nifi-nar-bundles/nifi-solr-bundle/nifi-solr-processors/src/test/java/org/apache/nifi/processors/solr/TestPutSolrRecord.java,87,,"        recordParser.addSchemaField(""test"", RecordFieldType.STRING);"
193136,./TargetProjects/nifi/nifi-nar-bundles/nifi-solr-bundle/nifi-solr-processors/src/test/java/org/apache/nifi/processors/solr/TestPutSolrRecord.java,88,,"        recordParser.addSchemaField(""marks"", RecordFieldType.INT);"
193137,./TargetProjects/nifi/nifi-nar-bundles/nifi-solr-bundle/nifi-solr-processors/src/test/java/org/apache/nifi/processors/solr/TestPutSolrRecord.java,92,,"        solrDocument.put(""first"",""Abhinav"");"
193138,./TargetProjects/nifi/nifi-nar-bundles/nifi-solr-bundle/nifi-solr-processors/src/test/java/org/apache/nifi/processors/solr/TestPutSolrRecord.java,95,,"        solrDocument.put(""subject"",""Chemistry"");"
193139,./TargetProjects/nifi/nifi-nar-bundles/nifi-solr-bundle/nifi-solr-processors/src/test/java/org/apache/nifi/processors/solr/TestPutSolrRecord.java,96,,"        solrDocument.put(""test"",""term1"");"
193140,./TargetProjects/nifi/nifi-nar-bundles/nifi-solr-bundle/nifi-solr-processors/src/test/java/org/apache/nifi/processors/solr/TestPutSolrRecord.java,510,,"        runner.setProperty(SolrUtils.SOLR_LOCATION, ""http://localhost:8443/solr"");"
193141,./TargetProjects/nifi/nifi-nar-bundles/nifi-solr-bundle/nifi-solr-processors/src/test/java/org/apache/nifi/processors/solr/TestPutSolrRecord.java,545,,"        Mockito.when(sslContextService.getIdentifier()).thenReturn(""ssl-context"");"
193142,./TargetProjects/nifi/nifi-nar-bundles/nifi-solr-bundle/nifi-solr-processors/src/test/java/org/apache/nifi/processors/solr/TestQuerySolr.java,82,,"            doc.addField(""integer_single"", i);"
193143,./TargetProjects/nifi/nifi-nar-bundles/nifi-solr-bundle/nifi-solr-processors/src/test/java/org/apache/nifi/processors/solr/TestQuerySolr.java,83,,"            doc.addField(""integer_multi"", 1);"
193144,./TargetProjects/nifi/nifi-nar-bundles/nifi-solr-bundle/nifi-solr-processors/src/test/java/org/apache/nifi/processors/solr/TestQuerySolr.java,156,,"        runner.setProperty(""facet"", ""true"");"
193145,./TargetProjects/nifi/nifi-nar-bundles/nifi-solr-bundle/nifi-solr-processors/src/test/java/org/apache/nifi/processors/solr/TestQuerySolr.java,156,,"        runner.setProperty(""facet"", ""true"");"
193146,./TargetProjects/nifi/nifi-nar-bundles/nifi-solr-bundle/nifi-solr-processors/src/test/java/org/apache/nifi/processors/solr/TestQuerySolr.java,177,,"                .mapToInt(node -> node.get(""count"").asInt())"
193147,./TargetProjects/nifi/nifi-nar-bundles/nifi-solr-bundle/nifi-solr-processors/src/test/java/org/apache/nifi/processors/solr/TestQuerySolr.java,202,,"        runner.setProperty(""stats"", ""true"");"
193148,./TargetProjects/nifi/nifi-nar-bundles/nifi-solr-bundle/nifi-solr-processors/src/test/java/org/apache/nifi/processors/solr/TestQuerySolr.java,354,,"        runner.setProperty(QuerySolr.SOLR_PARAM_SORT, ""id asc"");"
193149,./TargetProjects/nifi/nifi-nar-bundles/nifi-splunk-bundle/nifi-splunk-processors/src/test/java/org/apache/nifi/processors/splunk/TestGetSplunk.java,68,,"        final String query = ""search tcp:7879"";"
193150,./TargetProjects/nifi/nifi-nar-bundles/nifi-splunk-bundle/nifi-splunk-processors/src/test/java/org/apache/nifi/processors/splunk/TestGetSplunk.java,104,,"        final String resultContent = ""fake results"";"
193151,./TargetProjects/nifi/nifi-nar-bundles/nifi-splunk-bundle/nifi-splunk-processors/src/test/java/org/apache/nifi/processors/splunk/TestGetSplunk.java,179,,"        Assert.assertNull(actualArgs1.get(""earliest_time""));"
193152,./TargetProjects/nifi/nifi-nar-bundles/nifi-splunk-bundle/nifi-splunk-processors/src/test/java/org/apache/nifi/processors/splunk/TestGetSplunk.java,180,,"        Assert.assertNotNull(actualArgs1.get(""latest_time""));"
193153,./TargetProjects/nifi/nifi-nar-bundles/nifi-splunk-bundle/nifi-splunk-processors/src/test/java/org/apache/nifi/processors/splunk/TestGetSplunk.java,186,,"        format.setTimeZone(TimeZone.getTimeZone(""UTC""));"
193154,./TargetProjects/nifi/nifi-nar-bundles/nifi-splunk-bundle/nifi-splunk-processors/src/test/java/org/apache/nifi/processors/splunk/TestPutSplunk.java,77,,"        final String message = ""This is one message, should send the whole FlowFile"";"
193155,./TargetProjects/nifi/nifi-nar-bundles/nifi-splunk-bundle/nifi-splunk-processors/src/test/java/org/apache/nifi/processors/splunk/TestPutSplunk.java,151,,"        checkReceivedAllData(""This is message 1"", ""This is message 2"", ""This is message 3"");"
193156,./TargetProjects/nifi/nifi-nar-bundles/nifi-splunk-bundle/nifi-splunk-processors/src/test/java/org/apache/nifi/processors/splunk/TestPutSplunk.java,151,,"        checkReceivedAllData(""This is message 1"", ""This is message 2"", ""This is message 3"");"
193157,./TargetProjects/nifi/nifi-nar-bundles/nifi-splunk-bundle/nifi-splunk-processors/src/test/java/org/apache/nifi/processors/splunk/TestPutSplunk.java,151,,"        checkReceivedAllData(""This is message 1"", ""This is message 2"", ""This is message 3"");"
193158,./TargetProjects/nifi/nifi-nar-bundles/nifi-splunk-bundle/nifi-splunk-processors/src/test/java/org/apache/nifi/processors/splunk/TestPutSplunkHTTP.java,180,,"        result.setData(EVENT.getBytes(""UTF-8""));"
193159,./TargetProjects/nifi/nifi-nar-bundles/nifi-spring-bundle/nifi-spring-processors/src/test/java/org/apache/nifi/spring/SpringContextFactoryTests.java,40,,"            delegate.send(""hello"", new HashMap<String, Object>(), 1000L);"
193160,./TargetProjects/nifi/nifi-nar-bundles/nifi-spring-bundle/nifi-spring-processors/src/test/java/org/apache/nifi/spring/SpringContextProcessorTest.java,118,,"        headers.put(""foo"", ""foo"");"
193161,./TargetProjects/nifi/nifi-nar-bundles/nifi-sql-reporting-bundle/nifi-sql-reporting-tasks/src/test/java/org/apache/nifi/reporting/sql/TestQueryNiFiReportingTask.java,160,,"        properties.put(QueryMetricsUtil.RECORD_SINK, ""mock-record-sink"");"
193162,./TargetProjects/nifi/nifi-nar-bundles/nifi-sql-reporting-bundle/nifi-sql-reporting-tasks/src/test/java/org/apache/nifi/reporting/sql/TestQueryNiFiReportingTask.java,173,,"        assertEquals(1001, row.get(""queuedCount""));"
193163,./TargetProjects/nifi/nifi-nar-bundles/nifi-sql-reporting-bundle/nifi-sql-reporting-tasks/src/test/java/org/apache/nifi/reporting/sql/TestQueryNiFiReportingTask.java,234,,"        assertEquals(1L, row.get(""bytesRead""));"
193164,./TargetProjects/nifi/nifi-nar-bundles/nifi-sql-reporting-bundle/nifi-sql-reporting-tasks/src/test/java/org/apache/nifi/reporting/sql/TestQueryNiFiReportingTask.java,281,,"        assertEquals(""A"", previousAttributes.get(""test.value""));"
193165,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-jolt-transform-json-ui/src/test/java/org/apache/nifi/web/standard/api/transformjson/TestTransformJSONResource.java,86,,"        properties.put(""jolt-transform"",""jolt-transform-chain"");"
193166,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-jolt-transform-json-ui/src/test/java/org/apache/nifi/web/standard/api/transformjson/TestTransformJSONResource.java,93,,"                .path(""/standard/transformjson/validate"")"
193167,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-jolt-transform-json-ui/src/test/java/org/apache/nifi/web/standard/api/transformjson/TestTransformJSONResource.java,104,,"        JoltSpecificationDTO joltSpecificationDTO = new JoltSpecificationDTO(""jolt-transform-remove"",""{\""rating\"": {\""quality\"": \""\""} }"");"
193168,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-jolt-transform-json-ui/src/test/java/org/apache/nifi/web/standard/api/transformjson/TestTransformJSONResource.java,167,,"        properties.put(""jolt-transform"",""jolt-transform-custom"");"
193169,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-jolt-transform-json-ui/src/test/java/org/apache/nifi/web/standard/api/transformjson/TestTransformJSONResource.java,172,,"        JoltSpecificationDTO joltSpecificationDTO = new JoltSpecificationDTO(""jolt-transform-custom"",""[{ \""operation\"": \""default\"", \""spec\"":{ \""custom-id\"" :4 }}]"");"
193170,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-jolt-transform-json-ui/src/test/java/org/apache/nifi/web/standard/api/transformjson/TestTransformJSONResource.java,173,,"        joltSpecificationDTO.setCustomClass(""TestCustomJoltTransform"");"
193171,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-jolt-transform-json-ui/src/test/java/org/apache/nifi/web/standard/api/transformjson/TestTransformJSONResource.java,230,,"        String inputJson = ""{\""rating\"":{\""quality\"":2,\""count\"":1}}"";"
193172,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-jolt-transform-json-ui/src/test/java/org/apache/nifi/web/standard/api/transformjson/TestTransformJSONResource.java,235,,"                .path(""/standard/transformjson/execute"")"
193173,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/AttributesToCSV.java,128,,"            .allowableValues(""true"", ""false"")"
193174,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/AttributesToCSV.java,128,,"            .allowableValues(""true"", ""false"")"
193175,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/ConvertJSONToSQL.java,168,,"            .allowableValues(""true"", ""false"")"
193176,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/ConvertJSONToSQL.java,168,,"            .allowableValues(""true"", ""false"")"
193177,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/ConvertJSONToSQL.java,502,,"                attributes.put(attributePrefix + "".args."" + fieldCount + "".type"", String.valueOf(sqlType));"
193178,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/ConvertJSONToSQL.java,502,,"                attributes.put(attributePrefix + "".args."" + fieldCount + "".type"", String.valueOf(sqlType));"
193179,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/ConvertJSONToSQL.java,508,,"                    attributes.put(attributePrefix + "".args."" + fieldCount + "".value"", fieldValue);"
193180,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/CountText.java,98,,"            .allowableValues(""true"", ""false"")"
193181,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/CountText.java,98,,"            .allowableValues(""true"", ""false"")"
193182,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/DebugFlow.java,173,,"        .defaultValue(""0 sec"")"
193183,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/DebugFlow.java,180,,"        .allowableValues(""true"", ""false"")"
193184,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/DebugFlow.java,180,,"        .allowableValues(""true"", ""false"")"
193185,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/ExtractText.java,135,,"            .allowableValues(""true"", ""false"")"
193186,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/ExtractText.java,135,,"            .allowableValues(""true"", ""false"")"
193187,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/GetFile.java,122,,"            .allowableValues(""true"", ""false"")"
193188,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/GetFile.java,122,,"            .allowableValues(""true"", ""false"")"
193189,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/HandleHttpRequest.java,210,,"            .allowableValues(""true"", ""false"")"
193190,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/HandleHttpRequest.java,210,,"            .allowableValues(""true"", ""false"")"
193191,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/InvokeHTTP.java,227,,"            .defaultValue(""True"")"
193192,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/InvokeHTTP.java,228,,"            .allowableValues(""True"", ""False"")"
193193,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/InvokeHTTP.java,326,,"            .defaultValue(""true"")"
193194,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/InvokeHTTP.java,327,,"            .allowableValues(""true"", ""false"")"
193195,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/ListFile.java,148,,"            .allowableValues(""true"", ""false"")"
193196,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/ListFile.java,148,,"            .allowableValues(""true"", ""false"")"
193197,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/LogAttribute.java,198,,"        message.append(String.format(""\nKey: '%1$s'\n\tValue: '%2$s'"", ""entryDate"", new Date(flowFile.getEntryDate())));"
193198,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/MonitorActivity.java,97,,"            .allowableValues(""true"", ""false"")"
193199,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/PostHTTP.java,170,,"            .allowableValues(""true"", ""false"")"
193200,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/PutDatabaseRecord.java,245,,"            .allowableValues(""true"", ""false"")"
193201,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/PutDatabaseRecord.java,245,,"            .allowableValues(""true"", ""false"")"
193202,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/PutDatabaseRecord.java,713,,"                                throw new SQLDataException(""Cannot map field '"" + fieldName + ""' to any column in the database\n"""
193203,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/PutDatabaseRecord.java,713,,"                                throw new SQLDataException(""Cannot map field '"" + fieldName + ""' to any column in the database\n"""
193204,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/PutDatabaseRecord.java,714,,"                                        + (settings.translateFieldNames ? ""Normalized "" : """") + ""Columns: "" + String.join("","", columns.keySet()));"
193205,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/PutDatabaseRecord.java,714,,"                                        + (settings.translateFieldNames ? ""Normalized "" : """") + ""Columns: "" + String.join("","", columns.keySet()));"
193206,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/PutDatabaseRecord.java,1023,,"                    getLogger().debug(""Did not map field '"" + fieldName + ""' to any column in the database\n"""
193207,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/PutEmail.java,131,,"            .defaultValue(""false"")"
193208,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/PutEmail.java,169,,"                    + ""Comma separated sequence of addresses following RFC822 syntax."")"
193209,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/PutEmail.java,477,,"        message.append(String.format(""\n\t%1$s = '%2$s'"", ""id"", flowFile.getAttribute(CoreAttributes.UUID.key())));"
193210,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/PutSQL.java,147,,"            .allowableValues(""true"", ""false"")"
193211,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/PutSQL.java,147,,"            .allowableValues(""true"", ""false"")"
193212,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/QueryRecord.java,157,,"        .allowableValues(""true"", ""false"")"
193213,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/QueryRecord.java,508,,"        rootSchema.add(""RPATH"", ScalarFunctionImpl.create(ObjectRecordPath.class, ""eval""));"
193214,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/QueryRecord.java,611,,"        private static final RecordField ROOT_RECORD_FIELD = new RecordField(""root"", RecordFieldType.MAP.getMapDataType(RecordFieldType.STRING.getDataType()));"
193215,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/QueryRecord.java,633,,"            throw new RuntimeException(""Cannot evaluate RecordPath "" + recordPath + "" against given argument because the argument is of type "" + record.getClass() + "" instead of Record"");"
193216,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/QueryRecord.java,716,,"                    + "" because the value returned is of type "" + val.getClass());"
193217,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/QueryRecord.java,832,,"            return evalResults(result.getSelectedFields(), transform, () -> ""RecordPath "" + recordPath + "" resulted in more than one return value. The RecordPath must be further constrained."");"
193218,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/QueryRecord.java,832,,"            return evalResults(result.getSelectedFields(), transform, () -> ""RecordPath "" + recordPath + "" resulted in more than one return value. The RecordPath must be further constrained."");"
193219,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/TailFile.java,100,,"@WritesAttribute(attribute = ""tailfile.original.path"", description = ""Path of the original file the flow file comes from."")"
193220,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/TailFile.java,213,,"            .allowableValues(""true"", ""false"")"
193221,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/TransformXml.java,130,,"            .defaultValue(""true"")"
193222,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/ValidateCsv.java,95,,"    @WritesAttribute(attribute=""count.total.lines"", description=""If line by line validation, total number of lines in the source data""),"
193223,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/ValidateCsv.java,96,,"    @WritesAttribute(attribute=""validation.error.message"", description=""For flow files routed to invalid, message of the first validation error"")"
193224,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/ValidateRecord.java,168,,"        .allowableValues(""true"", ""false"")"
193225,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/ValidateRecord.java,168,,"        .allowableValues(""true"", ""false"")"
193226,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/ValidateRecord.java,400,,"                        errorBuilder.append(""The following "").append(missingFields.size()).append("" fields were missing: "").append(missingFields.toString());"
193227,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/ftp/commands/FtpCommandSTOR.java,101,,"            throw new DetailedFtpCommandException(FtpReply.REPLY_501_SYNTAX_ERROR_IN_PARAMETERS_OR_ARGUMENTS, ""STOR"", null, null);"
193228,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/util/FTPTransfer.java,444,,"            throw new IOException(""Failed to store file "" + tempFilename + "" to "" + fullPath + "" due to: "" + client.getReplyString());"
193229,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/util/FTPUtils.java,200,,"                logger.debug(processor + "" changed working directory to '"" + forwardPaths + ""' from '"" + currentWorkingDirectory + ""'"");"
193230,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/util/FileTransfer.java,120,,"        .allowableValues(""true"", ""false"")"
193231,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/util/FileTransfer.java,120,,"        .allowableValues(""true"", ""false"")"
193232,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/util/JmsProperties.java,101,,"            .allowableValues(""true"", ""false"")"
193233,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/util/JmsProperties.java,101,,"            .allowableValues(""true"", ""false"")"
193234,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/util/SFTPTransfer.java,153,,"        .allowableValues(""true"", ""false"")"
193235,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/util/SFTPTransfer.java,153,,"        .allowableValues(""true"", ""false"")"
193236,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/util/SFTPTransfer.java,537,,"                    throw new IOException(""Failed to determine if remote directory exists at "" + remoteDirectory + "" due to "" + getMessage(e), e);"
193237,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/ITGetHTTP.java,90,,"            controller.setProperty(org.apache.nifi.processors.standard.GetHTTP.CONNECTION_TIMEOUT, ""5 secs"");"
193238,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/ITGetHTTP.java,92,,"            controller.setProperty(org.apache.nifi.processors.standard.GetHTTP.FILENAME, ""testFile"");"
193239,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/ITGetHTTP.java,93,,"            controller.setProperty(org.apache.nifi.processors.standard.GetHTTP.ACCEPT_CONTENT_TYPE, ""application/json"");"
193240,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/ITGetHTTP.java,101,,"            controller.getStateManager().assertStateNotEquals(org.apache.nifi.processors.standard.GetHTTP.LAST_MODIFIED+"":""+destination, ""Thu, 01 Jan 1970 00:00:00 GMT"", Scope.LOCAL);"
193241,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/ITGetHTTP.java,254,,"            controller.setProperty(org.apache.nifi.processors.standard.GetHTTP.USER_AGENT, ""testUserAgent"");"
193242,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/ITGetHTTP.java,413,,"            mff.assertContentEquals(""Hello, World!"");"
193243,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/ITPostHTTP.java,155,,"        attrs.put(""abc"", ""cba"");"
193244,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/ITPostHTTP.java,155,,"        attrs.put(""abc"", ""cba"");"
193245,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/ITPostHTTP.java,159,,"        attrs.put(""filename"", ""xyz.txt"");"
193246,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/ITPostHTTP.java,159,,"        attrs.put(""filename"", ""xyz.txt"");"
193247,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/ITPostHTTP.java,160,,"        runner.enqueue(""World"".getBytes(), attrs);"
193248,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/ITPostHTTP.java,186,,"        Assert.assertNull(receivedAttrs.get(""Content-Length""));"
193249,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/ITPostHTTP.java,236,,"        final String suppliedMimeType = ""text/plain"";"
193250,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/ITPostHTTP.java,296,,"        runner.enqueue(StringUtils.repeat(""Lines of sample text."", 100).getBytes(), attrs);"
193251,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/ITPostHTTP.java,462,,"            final String urlAttr = mff.getAttribute(""url"");"
193252,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/ITestHandleHttpRequest.java,119,,"        runner.addControllerService(""http-context-map"", contextMap);"
193253,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/ITestHandleHttpRequest.java,134,,"                    connection.setRequestProperty(""header1"", ""value1"");"
193254,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/ITestHandleHttpRequest.java,136,,"                    connection.setRequestProperty(""header3"", ""apple=orange"");"
193255,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/ITestHandleHttpRequest.java,189,,"                            .addFormDataPart(""file1"", ""my-file-text.txt"","
193256,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/ITestHandleHttpRequest.java,189,,"                            .addFormDataPart(""file1"", ""my-file-text.txt"","
193257,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/ITestHandleHttpRequest.java,191,,"                            .addFormDataPart(""file2"", ""my-file-data.json"","
193258,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/ITestHandleHttpRequest.java,193,,"                            .addFormDataPart(""file3"", ""my-file-binary.bin"","
193259,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/ITestHandleHttpRequest.java,224,,"        MockFlowFile mff = findFlowFile(flowFilesForRelationship, ""http.multipart.name"", ""p1"");"
193260,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/ITestHandleHttpRequest.java,227,,"        mff.assertAttributeExists(""http.multipart.size"");"
193261,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/ITestHandleHttpRequest.java,228,,"        mff.assertAttributeEquals(""http.multipart.fragments.sequence.number"", ""1"");"
193262,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/ITestHandleHttpRequest.java,229,,"        mff.assertAttributeEquals(""http.multipart.fragments.total.number"", ""5"");"
193263,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/ITestHandleHttpRequest.java,230,,"        mff.assertAttributeExists(""http.headers.multipart.content-disposition"");"
193264,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/PutDatabaseRecordTest.java,101,,"        runner.addControllerService(""dbcp"", dbcp, dbcpProperties);"
193265,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/PutDatabaseRecordTest.java,137,,"        parser.addRecord(1, ""rec1"", ""test"", nifiDate1);"
193266,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableRecordTest.java,118,,"        runner.addControllerService(""dbcp"", dbcp, dbcpProperties);"
193267,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableRecordTest.java,141,,"        String query = processor.getQuery(dbAdapter, ""myTable"", null, null, null, null);"
193268,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableRecordTest.java,153,,"        processor.putColumnType(AbstractDatabaseFetchProcessor.getStateKey(""mytable"", ""id"", dbAdapter), Types.INTEGER);"
193269,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableRecordTest.java,157,,"        maxValues.put(""date_created"", ""2016-03-07 12:34:56"");"
193270,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableRecordTest.java,157,,"        maxValues.put(""date_created"", ""2016-03-07 12:34:56"");"
193271,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableRecordTest.java,160,,"        query = processor.getQuery(dbAdapter, ""myTable"", null, Arrays.asList(""id"", ""DATE_CREATED""), null, stateManager.getState(Scope.CLUSTER).toMap());"
193272,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableRecordTest.java,184,,"        query = processor.getQuery(dbAdapter, ""myTable"", null, Arrays.asList(""id"", ""DATE_CREATED""), ""type = \""CUSTOMER\"""", stateManager.getState(Scope.CLUSTER).toMap());"
193273,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableRecordTest.java,188,,"        processor.putColumnType(""mytable"" + AbstractDatabaseFetchProcessor.NAMESPACE_DELIMITER + ""time_created"", Types.TIME);"
193274,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableRecordTest.java,196,,"        query = processor.getQuery(dbAdapter, ""myTable"", null, Arrays.asList(""id"", ""DATE_CREATED"", ""TIME_CREATED""), ""type = \""CUSTOMER\"""", stateManager.getState(Scope.CLUSTER).toMap());"
193275,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableRecordTest.java,238,,"            stmt.execute(""drop table TEST_QUERY_DB_TABLE"");"
193276,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableRecordTest.java,243,,"        stmt.execute(""create table TEST_QUERY_DB_TABLE (id integer not null, name varchar(100), scale float, created_on timestamp, bignum bigint default 0)"");"
193277,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableRecordTest.java,248,,"        runner.setProperty(QueryDatabaseTableRecord.TABLE_NAME, ""TEST_QUERY_DB_TABLE"");"
193278,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableRecordTest.java,258,,"        assertEquals(flowFile.getAttribute(""maxvalue.id""), ""2"");"
193279,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableRecordTest.java,260,,"        flowFile.assertAttributeEquals(""record.count"", ""2"");"
193280,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableRecordTest.java,520,,"        runner.setProperty(QueryDatabaseTableRecord.MAX_VALUE_COLUMN_NAMES, ""created_on"");"
193281,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableRecordTest.java,651,,"            stmt.execute(""insert into TEST_QUERY_DB_TABLE (id, name, scale, created_on) VALUES ("" + rowCount + "", 'Joe Smith', 1.0, '1962-09-23 03:23:34.234')"");"
193282,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableRecordTest.java,651,,"            stmt.execute(""insert into TEST_QUERY_DB_TABLE (id, name, scale, created_on) VALUES ("" + rowCount + "", 'Joe Smith', 1.0, '1962-09-23 03:23:34.234')"");"
193283,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableRecordTest.java,671,,"            mff.assertAttributeExists(""fragment.identifier"");"
193284,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableRecordTest.java,672,,"            assertEquals(Integer.toString(ff), mff.getAttribute(""fragment.index""));"
193285,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableRecordTest.java,674,,"            assertNull(mff.getAttribute(""fragment.count""));"
193286,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableRecordTest.java,845,,"        Calendar cal = Calendar.getInstance(TimeZone.getTimeZone(""UTC""));"
193287,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableRecordTest.java,873,,"        runner.getStateManager().assertStateEquals(""test_query_db_table"" + AbstractDatabaseFetchProcessor.NAMESPACE_DELIMITER + ""created_on"", ""1970-01-01 00:09:00.0"", Scope.CLUSTER);"
193288,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableRecordTest.java,873,,"        runner.getStateManager().assertStateEquals(""test_query_db_table"" + AbstractDatabaseFetchProcessor.NAMESPACE_DELIMITER + ""created_on"", ""1970-01-01 00:09:00.0"", Scope.CLUSTER);"
193289,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableTest.java,123,,"        runner.addControllerService(""dbcp"", dbcp, dbcpProperties);"
193290,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableTest.java,140,,"        String query = processor.getQuery(dbAdapter, ""myTable"", null, null, null, null);"
193291,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableTest.java,152,,"        processor.putColumnType(processor.getStateKey(""mytable"", ""id"", dbAdapter), Types.INTEGER);"
193292,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableTest.java,156,,"        maxValues.put(""date_created"", ""2016-03-07 12:34:56"");"
193293,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableTest.java,156,,"        maxValues.put(""date_created"", ""2016-03-07 12:34:56"");"
193294,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableTest.java,159,,"        query = processor.getQuery(dbAdapter, ""myTable"", null, Arrays.asList(""id"", ""DATE_CREATED""), null, stateManager.getState(Scope.CLUSTER).toMap());"
193295,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableTest.java,183,,"        query = processor.getQuery(dbAdapter, ""myTable"", null, Arrays.asList(""id"", ""DATE_CREATED""), ""type = \""CUSTOMER\"""", stateManager.getState(Scope.CLUSTER).toMap());"
193296,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableTest.java,187,,"        processor.putColumnType(""mytable"" + AbstractDatabaseFetchProcessor.NAMESPACE_DELIMITER + ""time_created"", Types.TIME);"
193297,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableTest.java,195,,"        query = processor.getQuery(dbAdapter, ""myTable"", null, Arrays.asList(""id"", ""DATE_CREATED"", ""TIME_CREATED""), ""type = \""CUSTOMER\"""", stateManager.getState(Scope.CLUSTER).toMap());"
193298,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableTest.java,237,,"            stmt.execute(""drop table TEST_QUERY_DB_TABLE"");"
193299,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableTest.java,242,,"        stmt.execute(""create table TEST_QUERY_DB_TABLE (id integer not null, name varchar(100), scale float, created_on timestamp, bignum bigint default 0)"");"
193300,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableTest.java,247,,"        runner.setProperty(QueryDatabaseTable.TABLE_NAME, ""TEST_QUERY_DB_TABLE"");"
193301,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableTest.java,257,,"        assertEquals(flowFile.getAttribute(""maxvalue.id""), ""2"");"
193302,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableTest.java,529,,"        runner.setProperty(QueryDatabaseTable.MAX_VALUE_COLUMN_NAMES, ""created_on"");"
193303,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableTest.java,661,,"            stmt.execute(""insert into TEST_QUERY_DB_TABLE (id, name, scale, created_on) VALUES ("" + rowCount + "", 'Joe Smith', 1.0, '1962-09-23 03:23:34.234')"");"
193304,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableTest.java,661,,"            stmt.execute(""insert into TEST_QUERY_DB_TABLE (id, name, scale, created_on) VALUES ("" + rowCount + "", 'Joe Smith', 1.0, '1962-09-23 03:23:34.234')"");"
193305,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableTest.java,682,,"            mff.assertAttributeExists(""fragment.identifier"");"
193306,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableTest.java,683,,"            assertEquals(Integer.toString(ff), mff.getAttribute(""fragment.index""));"
193307,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableTest.java,685,,"            assertNull(mff.getAttribute(""fragment.count""));"
193308,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableTest.java,864,,"        Calendar cal = Calendar.getInstance(TimeZone.getTimeZone(""UTC""));"
193309,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableTest.java,892,,"        runner.getStateManager().assertStateEquals(""test_query_db_table"" + AbstractDatabaseFetchProcessor.NAMESPACE_DELIMITER + ""created_on"", ""1970-01-01 00:09:00.0"", Scope.CLUSTER);"
193310,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/QueryDatabaseTableTest.java,892,,"        runner.getStateManager().assertStateEquals(""test_query_db_table"" + AbstractDatabaseFetchProcessor.NAMESPACE_DELIMITER + ""created_on"", ""1970-01-01 00:09:00.0"", Scope.CLUSTER);"
193311,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestAttributesToCSV.java,43,,"    private static final String OUTPUT_ATTRIBUTE_NAME = ""CSVData"";"
193312,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestAttributesToCSV.java,53,,"        testRunner.setProperty(AttributesToCSV.INCLUDE_CORE_ATTRIBUTES, ""false"");"
193313,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestAttributesToCSV.java,119,,"        testRunner.setProperty(AttributesToCSV.NULL_VALUE_FOR_EMPTY_STRING, ""true"");"
193314,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestAttributesToCSV.java,181,,"            put(""beach-name"", ""Malibu Beach"");"
193315,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestAttributesToCSV.java,181,,"            put(""beach-name"", ""Malibu Beach"");"
193316,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestAttributesToCSV.java,182,,"            put(""beach-location"", ""California, US"");"
193317,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestAttributesToCSV.java,182,,"            put(""beach-location"", ""California, US"");"
193318,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestAttributesToCSV.java,183,,"            put(""beach-endorsement"", ""This is our family's favorite beach. We highly recommend it. \n\nThanks, Jim"");"
193319,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestAttributesToCSV.java,183,,"            put(""beach-endorsement"", ""This is our family's favorite beach. We highly recommend it. \n\nThanks, Jim"");"
193320,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestAttributesToCSV.java,200,,"        final String contentDataString = new String(contentData, ""UTF-8"");"
193321,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestAttributesToCSV.java,207,,"        assertTrue(contentValues.contains(""\""California, US\""""));"
193322,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestAttributesToCSV.java,208,,"        assertTrue(contentValues.contains(""\""This is our family's favorite beach. We highly recommend it. \n\nThanks, Jim\""""));"
193323,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestAttributesToCSV.java,209,,"        assertTrue(contentValues.contains(flowFile.getAttribute(""filename"")));"
193324,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestAttributesToCSV.java,210,,"        assertTrue(contentValues.contains(flowFile.getAttribute(""path"")));"
193325,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestAttributesToCSV.java,211,,"        assertTrue(contentValues.contains(flowFile.getAttribute(""uuid"")));"
193326,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestAttributesToCSV.java,297,,"        testRunner.setProperty(AttributesToCSV.ATTRIBUTES_LIST, ""beach-name,beach-location,beach-endorsement"");"
193327,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestAttributesToCSV.java,304,,"            put(""attribute-should-be-eliminated"", ""This should not be in CSVAttribute!"");"
193328,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestAttributesToCSV.java,343,,"            put(""attribute-should-be-eliminated"", ""This should not be in CSVData!"");"
193329,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestAttributesToCSV.java,603,,"            put(""myRegEx"", ""beach-.*"");"
193330,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestAttributesToCSV.java,704,,"                .assertAttributeExists(""CSVSchema"");"
193331,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestAttributesToJSON.java,111,,"        testRunner.setProperty(AttributesToJSON.NULL_VALUE_FOR_EMPTY_STRING, ""false"");"
193332,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestCompressContent.java,39,,"        runner.setProperty(CompressContent.UPDATE_FILENAME, ""true"");"
193333,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestCompressContent.java,41,,"        runner.enqueue(Paths.get(""src/test/resources/CompressedData/SampleFile.txt""));"
193334,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestCompressContent.java,47,,"        flowFile.assertAttributeEquals(""filename"", ""SampleFile.txt.snappy"");"
193335,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestCompressContent.java,63,,"        flowFile.assertAttributeEquals(""filename"", ""SampleFile.txt"");"
193336,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestCompressContent.java,127,,"        runner.setProperty(CompressContent.MODE, ""decompress"");"
193337,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestControlRate.java,43,,"        runner.setProperty(ControlRate.GROUPING_ATTRIBUTE_NAME, ""group"");"
193338,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestControlRate.java,69,,"        runner.setProperty(ControlRate.TIME_PERIOD, ""1 sec"");"
193339,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestControlRate.java,101,,"        createFlowFileWithGroup(runner, ""one"");"
193340,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestControlRate.java,158,,"        runner.setProperty(ControlRate.RATE_CONTROL_ATTRIBUTE_NAME, ""count"");"
193341,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestConvertCharacterSet.java,38,,"        runner.setProperty(ConvertCharacterSet.OUTPUT_CHARSET, ""UTF-32"");"
193342,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestConvertCharacterSet.java,40,,"        runner.enqueue(Paths.get(""src/test/resources/CharacterSetConversionSamples/Original.txt""));"
193343,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestConvertJSONToSQL.java,83,,"        runner.addControllerService(""dbcp"", service);"
193344,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestConvertJSONToSQL.java,86,,"        runner.setProperty(ConvertJSONToSQL.TABLE_NAME, ""PERSONS"");"
193345,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestConvertJSONToSQL.java,87,,"        runner.setProperty(ConvertJSONToSQL.STATEMENT_TYPE, ""INSERT"");"
193346,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestConvertJSONToSQL.java,88,,"        runner.enqueue(Paths.get(""src/test/resources/TestConvertJSONToSQL/person-1.json""));"
193347,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestConvertJSONToSQL.java,95,,"        out.assertAttributeEquals(""sql.args.1.type"", String.valueOf(java.sql.Types.INTEGER));"
193348,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestConvertJSONToSQL.java,96,,"        out.assertAttributeEquals(""sql.args.1.value"", ""1"");"
193349,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestConvertJSONToSQL.java,97,,"        out.assertAttributeEquals(""sql.args.2.type"", String.valueOf(java.sql.Types.VARCHAR));"
193350,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestConvertJSONToSQL.java,98,,"        out.assertAttributeEquals(""sql.args.2.value"", ""Mark"");"
193351,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestConvertJSONToSQL.java,98,,"        out.assertAttributeEquals(""sql.args.2.value"", ""Mark"");"
193352,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestConvertJSONToSQL.java,99,,"        out.assertAttributeEquals(""sql.args.3.type"", String.valueOf(java.sql.Types.INTEGER));"
193353,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestConvertJSONToSQL.java,100,,"        out.assertAttributeEquals(""sql.args.3.value"", ""48"");"
193354,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestConvertJSONToSQL.java,102,,"        out.assertContentEquals(""INSERT INTO PERSONS (ID, NAME, CODE) VALUES (?, ?, ?)"");"
193355,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestConvertJSONToSQL.java,142,,"        runner.setProperty(ConvertJSONToSQL.QUOTED_IDENTIFIERS, ""true"");"
193356,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestConvertJSONToSQL.java,198,,"        runner.enqueue(Paths.get(""src/test/resources/TestConvertJSONToSQL/person-with-null-code.json""));"
193357,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestConvertJSONToSQL.java,250,,"        runner.setProperty(ConvertJSONToSQL.STATEMENT_TYPE, ""UPDATE"");"
193358,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestConvertJSONToSQL.java,317,,"                mff.assertAttributeExists(""sql.args."" + i + "".type"");"
193359,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestConvertJSONToSQL.java,494,,"        runner.setProperty(ConvertJSONToSQL.UPDATE_KEY, ""name,  code"");"
193360,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestConvertJSONToSQL.java,804,,"        runner.setProperty(ConvertJSONToSQL.STATEMENT_TYPE, ""DELETE"");"
193361,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestConvertRecord.java,68,,"        final MockRecordWriter writerService = new MockRecordWriter(""header"", false);"
193362,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestConvertRecord.java,71,,"        runner.addControllerService(""reader"", readerService);"
193363,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestConvertRecord.java,73,,"        runner.addControllerService(""writer"", writerService);"
193364,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestConvertRecord.java,79,,"        readerService.addSchemaField(""name"", RecordFieldType.STRING);"
193365,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestConvertRecord.java,80,,"        readerService.addSchemaField(""age"", RecordFieldType.INT);"
193366,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestConvertRecord.java,82,,"        readerService.addRecord(""John Doe"", 48);"
193367,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestConvertRecord.java,83,,"        readerService.addRecord(""Jane Doe"", 47);"
193368,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestConvertRecord.java,84,,"        readerService.addRecord(""Jimmy Doe"", 14);"
193369,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestConvertRecord.java,205,,"        final String inputSchemaText = new String(Files.readAllBytes(Paths.get(""src/test/resources/TestConvertRecord/schema/person.avsc"")));"
193370,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestDebugFlow.java,210,,"        exception.expectMessage(CoreMatchers.containsString(""forced by org.apache.nifi.processors.standard.DebugFlow""));"
193371,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestDetectDuplicate.java,55,,"        clientProperties.put(DistributedMapCacheClientService.HOSTNAME.getName(), ""localhost"");"
193372,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestDetectDuplicate.java,56,,"        runner.addControllerService(""client"", client, clientProperties);"
193373,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestDetectDuplicate.java,58,,"        runner.setProperty(DetectDuplicate.FLOWFILE_DESCRIPTION, ""The original flow file"");"
193374,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestDetectDuplicate.java,61,,"        props.put(""hash.value"", ""1000"");"
193375,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestDetectDuplicate.java,61,,"        props.put(""hash.value"", ""1000"");"
193376,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestDistributeLoad.java,42,,"        testRunner.setProperty(DistributeLoad.NUM_RELATIONSHIPS, ""100"");"
193377,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEncodeContent.java,38,,"        testRunner.enqueue(Paths.get(""src/test/resources/hello.txt""));"
193378,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEncryptContent.java,136,,"        pgpAlgorithms.add(""PGP"");"
193379,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEncryptContent.java,351,,"        String message = ""'"" + vr.toString() + ""' contains '"" + expectedResult + ""'"";"
193380,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEncryptContent.java,535,,"        runner.setProperty(EncryptContent.PRIVATE_KEYRING_PASSPHRASE, ""PASSWORD"");"
193381,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEnforceOrder.java,43,,"        runner.setProperty(EnforceOrder.ORDER_ATTRIBUTE, ""index"");"
193382,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEnforceOrder.java,102,,"        runner.setProperty(EnforceOrder.GROUP_IDENTIFIER, ""${group}"");"
193383,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEnforceOrder.java,116,,"        succeeded.get(1).assertContentEquals(""a.1"");"
193384,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEnforceOrder.java,140,,"        succeeded.get(1).assertContentEquals(""a.2"");"
193385,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEnforceOrder.java,141,,"        succeeded.get(2).assertContentEquals(""a.3"");"
193386,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEnforceOrder.java,142,,"        succeeded.get(3).assertContentEquals(""b.1"");"
193387,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEnforceOrder.java,215,,"        runner.enqueue(""b.0"", Ordered.i(""b"", 0).put(""index.start"", ""0"").put(""index.max"", ""99"").map());"
193388,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEnforceOrder.java,242,,"        stateManager.assertStateEquals(""a.target"", ""102"", Scope.LOCAL);"
193389,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEnforceOrder.java,244,,"        stateManager.assertStateEquals(""b.target"", ""2"", Scope.LOCAL);"
193390,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEnforceOrder.java,260,,"        runner.enqueue(""b.1"", Ordered.i(1).put(""fragment.identifier"", ""b"").put(""fragment.count"", ""3"").map());"
193391,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEnforceOrder.java,260,,"        runner.enqueue(""b.1"", Ordered.i(1).put(""fragment.identifier"", ""b"").put(""fragment.count"", ""3"").map());"
193392,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEnforceOrder.java,320,,"        waiting.get(0).assertAttributeExists(""EnforceOrder.startedAt"");"
193393,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEvaluateJsonPath.java,60,,"            testRunner.setProperty(""DefinitelyNotJsonPath"", bad);"
193394,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEvaluateJsonPath.java,108,,"        testRunner.setProperty(""JsonPath1"", ""$[0]._id"");"
193395,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEvaluateJsonPath.java,155,,"        Assert.assertEquals(""Transferred flow file did not have the correct result"", ""54df94072d5dbf7dc6340cc5"", out.getAttribute(jsonPathAttrKey));"
193396,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEvaluateJsonPath.java,177,,"        Assert.assertEquals(""Transferred flow file did not have the correct result for id attribute"", ""54df94072d5dbf7dc6340cc5"", out.getAttribute(jsonPathIdAttrKey));"
193397,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEvaluateJsonPath.java,314,,"        testRunner.setProperty(""stringField"", ""$.stringField"");"
193398,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEvaluateJsonPath.java,315,,"        testRunner.setProperty(""missingField"", ""$.missingField"");"
193399,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEvaluateJsonPath.java,316,,"        testRunner.setProperty(""nullField"", ""$.nullField"");"
193400,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEvaluateXPath.java,43,,"        testRunner.setProperty(""xpath.result1"", ""/"");"
193401,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEvaluateXPath.java,51,,"        out.assertAttributeEquals(""xpath.result2"", ""Hello"");"
193402,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEvaluateXPath.java,102,,"        testRunner.setProperty(""some.property"", ""/*:bundle/node/subNode[1]"");"
193403,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEvaluateXPath.java,110,,"        final String outXml = new String(outData, ""UTF-8"");"
193404,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEvaluateXPath.java,132,,"        testRunner.setProperty(""some.property"", ""/*:bundle/node/subNode[1]/value/text()"");"
193405,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEvaluateXQuery.java,49,,"    private static final String[] fruitNames = {""apple"", ""apple"", ""banana"", ""orange"", ""blueberry"", ""raspberry"", ""none""};"
193406,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEvaluateXQuery.java,49,,"    private static final String[] fruitNames = {""apple"", ""apple"", ""banana"", ""orange"", ""blueberry"", ""raspberry"", ""none""};"
193407,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEvaluateXQuery.java,103,,"                    + ""    <name>apple</name>\n"""
193408,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEvaluateXQuery.java,104,,"                    + ""    <color>red</color>\n"""
193409,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEvaluateXQuery.java,169,,"        runnerProps.put(""xquery"", xQuery);"
193410,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEvaluateXQuery.java,175,,"            final String outXml = new String(outData, ""UTF-8"");"
193411,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEvaluateXQuery.java,199,,"        doXqueryTest(XML_SNIPPET, ""boolean(//fruit[100])"", Arrays.asList(""false""));"
193412,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEvaluateXQuery.java,331,,"                final String actual = out.getAttribute(key).replaceAll("">\\s+<"", ""><"");"
193413,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEvaluateXQuery.java,400,,"        testRunner.setProperty(""xquery.result.exist.2"", ""boolean(/*:fruitbasket/fruit[100])"");"
193414,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEvaluateXQuery.java,464,,"        testRunner.setProperty(""some.property"", ""//fruit/name/text()"");"
193415,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestEvaluateXQuery.java,662,,"        testRunner.setProperty(""some.property"", ""/*:bundle/node/subNode[1]/value/text()"");"
193416,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteSQL.java,116,,"        runner.addControllerService(""dbcp"", dbcp, dbcpProperties);"
193417,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteSQL.java,189,,"            stmt.execute(""drop table TEST_NULL_INT"");"
193418,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteSQL.java,193,,"        stmt.execute(""create table TEST_NULL_INT (id integer not null, val1 integer, val2 integer, constraint my_pk primary key (id))"");"
193419,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteSQL.java,199,,"        runner.setProperty(ExecuteSQL.SQL_SELECT_QUERY, ""SELECT * FROM TEST_NULL_INT"");"
193420,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteSQL.java,431,,"        runner.setProperty(ExecuteSQL.SQL_SELECT_QUERY, ""select * from TEST_NULL_INT"");"
193421,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteSQL.java,631,,"        runner.enqueue(""test"".getBytes());"
193422,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteSQLRecord.java,122,,"        runner.addControllerService(""dbcp"", dbcp, dbcpProperties);"
193423,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteSQLRecord.java,132,,"        runner.addControllerService(""writer"", recordWriter);"
193424,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteSQLRecord.java,183,,"            stmt.execute(""drop table TEST_NULL_INT"");"
193425,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteSQLRecord.java,187,,"        stmt.execute(""create table TEST_NULL_INT (id integer not null, val1 integer, val2 integer, constraint my_pk primary key (id))"");"
193426,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteSQLRecord.java,434,,"        runner.setProperty(AbstractExecuteSQL.SQL_SELECT_QUERY, ""select * from TEST_NULL_INT"");"
193427,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteSQLRecord.java,647,,"        runner.enqueue(""test"".getBytes());"
193428,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,56,,"        System.setProperty(""org.slf4j.simpleLogger.showDateTime"", ""true"");"
193429,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,63,,"        File exJar = new File(""src/test/resources/ExecuteCommand/TestSuccess.jar"");"
193430,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,64,,"        File dummy = new File(""src/test/resources/ExecuteCommand/1000bytes.txt"");"
193431,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,69,,"        controller.setProperty(ExecuteStreamCommand.EXECUTION_COMMAND, ""java"");"
193432,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,70,,"        controller.setProperty(ExecuteStreamCommand.EXECUTION_ARGUMENTS, ""-jar;"" + jarPath);"
193433,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,79,,"        assertTrue(Pattern.compile(""Test was a success\r?\n"").matcher(result).find());"
193434,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,80,,"        assertEquals(""0"", outputFlowFile.getAttribute(""execution.status""));"
193435,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,81,,"        assertEquals(""java"", outputFlowFile.getAttribute(""execution.command""));"
193436,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,82,,"        assertEquals(""-jar;"", outputFlowFile.getAttribute(""execution.command.args"").substring(0, 5));"
193437,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,84,,"        String expected = ""src"" + File.separator + ""test"" + File.separator + ""resources"" + File.separator + ""ExecuteCommand"" + File.separator + ""TestSuccess.jar"";"
193438,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,84,,"        String expected = ""src"" + File.separator + ""test"" + File.separator + ""resources"" + File.separator + ""ExecuteCommand"" + File.separator + ""TestSuccess.jar"";"
193439,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,84,,"        String expected = ""src"" + File.separator + ""test"" + File.separator + ""resources"" + File.separator + ""ExecuteCommand"" + File.separator + ""TestSuccess.jar"";"
193440,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,84,,"        String expected = ""src"" + File.separator + ""test"" + File.separator + ""resources"" + File.separator + ""ExecuteCommand"" + File.separator + ""TestSuccess.jar"";"
193441,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,84,,"        String expected = ""src"" + File.separator + ""test"" + File.separator + ""resources"" + File.separator + ""ExecuteCommand"" + File.separator + ""TestSuccess.jar"";"
193442,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,105,,"            .name(""command.argument.1"")"
193443,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,108,,"        controller.setProperty(dynamicProp1, ""-jar"");"
193444,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,111,,"            .name(""command.argument.2"")"
193445,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,140,,"        File exJar = new File(""src/test/resources/ExecuteCommand/noSuchFile.jar"");"
193446,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,155,,"        assertEquals(""Error: Unable to access jarfile"", flowFile.getAttribute(""execution.error"").substring(0, 31));"
193447,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,194,,"        File exJar = new File(""src/test/resources/ExecuteCommand/TestIngestAndUpdate.jar"");"
193448,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,196,,"        File dummy10MBytes = new File(""target/10MB.txt"");"
193449,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,217,,"        assertTrue(Pattern.compile(""nifi-standard-processors:ModifiedResult\r?\n"").matcher(result).find());"
193450,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,320,,"        controller.setProperty(ExecuteStreamCommand.WORKING_DIR, ""target"");"
193451,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,331,,"        assertTrue(Pattern.compile(quotedSeparator + ""nifi-standard-processors"" + quotedSeparator + ""target:ModifiedResult\r?\n"").matcher(result).find());"
193452,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,331,,"        assertTrue(Pattern.compile(quotedSeparator + ""nifi-standard-processors"" + quotedSeparator + ""target:ModifiedResult\r?\n"").matcher(result).find());"
193453,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,386,,"        assertTrue(""TestIngestAndUpdate.jar should not have received anything to modify"","
193454,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,451,,"        File exJar = new File(""src/test/resources/ExecuteCommand/TestDynamicEnvironment.jar"");"
193455,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,456,,"        controller.setProperty(""NIFI_TEST_1"", ""testvalue1"");"
193456,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,456,,"        controller.setProperty(""NIFI_TEST_1"", ""testvalue1"");"
193457,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,457,,"        controller.setProperty(""NIFI_TEST_2"", ""testvalue2"");"
193458,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,457,,"        controller.setProperty(""NIFI_TEST_2"", ""testvalue2"");"
193459,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,468,,"        Set<String> dynamicEnvironmentVariables = new HashSet<>(Arrays.asList(result.split(""\r?\n"")));"
193460,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,469,,"        assertFalse(""Should contain at least two environment variables starting with NIFI"", dynamicEnvironmentVariables.size() < 2);"
193461,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,470,,"        assertTrue(""NIFI_TEST_1 environment variable is missing"", dynamicEnvironmentVariables.contains(""NIFI_TEST_1=testvalue1""));"
193462,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,470,,"        assertTrue(""NIFI_TEST_1 environment variable is missing"", dynamicEnvironmentVariables.contains(""NIFI_TEST_1=testvalue1""));"
193463,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,471,,"        assertTrue(""NIFI_TEST_2 environment variable is missing"", dynamicEnvironmentVariables.contains(""NIFI_TEST_2=testvalue2""));"
193464,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,471,,"        assertTrue(""NIFI_TEST_2 environment variable is missing"", dynamicEnvironmentVariables.contains(""NIFI_TEST_2=testvalue2""));"
193465,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,519,,"            controller.setProperty(ExecuteStreamCommand.EXECUTION_COMMAND, ""cmd.exe"");"
193466,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,523,,"            controller.setProperty(ExecuteStreamCommand.EXECUTION_COMMAND, ""echo"");"
193467,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,524,,"            controller.setProperty(ExecuteStreamCommand.EXECUTION_ARGUMENTS, ""Hello"");"
193468,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,527,,"        controller.setProperty(ExecuteStreamCommand.PUT_OUTPUT_IN_ATTRIBUTE, ""executeStreamCommand.output"");"
193469,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,718,,"        controller.enqueue(""small test"".getBytes());"
193470,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,722,,"        controller.setProperty(ExecuteStreamCommand.PUT_OUTPUT_IN_ATTRIBUTE, ""outputDest"");"
193471,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExecuteStreamCommand.java,946,,"        controller.setProperty(ExecuteStreamCommand.PUT_OUTPUT_IN_ATTRIBUTE, ""streamOutput"");"
193472,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExtractGrok.java,52,,"        testRunner.setProperty(ExtractGrok.GROK_PATTERN_FILE, ""src/test/resources/TestExtractGrok/patterns"");"
193473,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExtractText.java,41,,"        testRunner.setProperty(""regex.result1"", ""(?s)(.*)"");"
193474,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExtractText.java,42,,"        testRunner.setProperty(""regex.result2"", ""(?s).*(bar1).*"");"
193475,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExtractText.java,43,,"        testRunner.setProperty(""regex.result3"", ""(?s).*?(bar\\d).*""); // reluctant gets first"
193476,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExtractText.java,44,,"        testRunner.setProperty(""regex.result4"", ""(?s).*?(?:bar\\d).*?(bar\\d).*?(bar3).*""); // reluctant w/ repeated pattern gets second"
193477,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExtractText.java,45,,"        testRunner.setProperty(""regex.result5"", ""(?s).*(bar\\d).*""); // greedy gets last"
193478,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExtractText.java,46,,"        testRunner.setProperty(""regex.result6"", ""(?s)^(.*)$"");"
193479,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExtractText.java,47,,"        testRunner.setProperty(""regex.result7"", ""(?s)(XXX)"");"
193480,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExtractText.java,55,,"        out.assertAttributeEquals(""regex.result2"", ""bar1"");"
193481,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExtractText.java,57,,"        out.assertAttributeEquals(""regex.result4"", ""bar2"");"
193482,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExtractText.java,60,,"        out.assertAttributeEquals(""regex.result4.2"", ""bar3"");"
193483,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExtractText.java,93,,"        testRunner.setProperty(ExtractText.DOTALL, ""true"");"
193484,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExtractText.java,97,,"        testRunner.setProperty(""regex.result3"", "".*?(bar\\d).*""); // reluctant gets first"
193485,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExtractText.java,98,,"        testRunner.setProperty(""regex.result4"", "".*?(?:bar\\d).*?(bar\\d).*""); // reluctant w/ repeated pattern gets second"
193486,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExtractText.java,99,,"        testRunner.setProperty(""regex.result5"", "".*(bar\\d).*""); // greedy gets last"
193487,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExtractText.java,101,,"        testRunner.setProperty(""regex.result7"", ""^(XXX)$"");"
193488,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExtractText.java,129,,"        testRunner.setProperty(""regex.result4b"", ""bar\\d\\r\\n(bar\\d)"");"
193489,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExtractText.java,131,,"        testRunner.setProperty(""regex.result5b"", ""(?:bar\\d\\r?\\n)*(bar\\d)"");"
193490,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExtractText.java,140,,"        out.assertAttributeEquals(""regex.result1"", ""foo""); // matches everything on the first line"
193491,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExtractText.java,329,,"        final String attributeKey = ""regex.result"";"
193492,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExtractTextNamedGroups.java,38,,"        testRunner.setProperty(ENABLE_NAMED_GROUPS, ""true"");"
193493,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExtractTextNamedGroups.java,39,,"        testRunner.setProperty(""regex.result1"", ""(?s)(?<ALL>.*)"");"
193494,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExtractTextNamedGroups.java,40,,"        testRunner.setProperty(""regex.result2"", ""(?s).*(?<BAR1>bar1).*"");"
193495,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExtractTextNamedGroups.java,41,,"        testRunner.setProperty(""regex.result3"", ""(?s).*?(?<BAR1>bar\\d).*"");"
193496,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExtractTextNamedGroups.java,42,,"        testRunner.setProperty(""regex.result4"", ""(?s).*?(?:bar\\d).*?(?<BAR2>bar\\d).*?(?<BAR3>bar3).*"");"
193497,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExtractTextNamedGroups.java,43,,"        testRunner.setProperty(""regex.result5"", ""(?s).*(?<BAR3>bar\\d).*"");"
193498,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExtractTextNamedGroups.java,44,,"        testRunner.setProperty(""regex.result6"", ""(?s)^(?<ALL>.*)$"");"
193499,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExtractTextNamedGroups.java,45,,"        testRunner.setProperty(""regex.result7"", ""(?s)(?<MISS>XXX)"");"
193500,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExtractTextNamedGroups.java,53,,"        out.assertAttributeEquals(""regex.result2.BAR1"", ""bar1"");"
193501,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExtractTextNamedGroups.java,53,,"        out.assertAttributeEquals(""regex.result2.BAR1"", ""bar1"");"
193502,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExtractTextNamedGroups.java,54,,"        out.assertAttributeEquals(""regex.result3.BAR1"", ""bar1"");"
193503,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExtractTextNamedGroups.java,55,,"        out.assertAttributeEquals(""regex.result4.BAR2"", ""bar2"");"
193504,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExtractTextNamedGroups.java,56,,"        out.assertAttributeEquals(""regex.result4.BAR3"", ""bar3"");"
193505,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestExtractTextNamedGroups.java,253,,"        final String attributeKey = ""regex.result"";"
193506,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestFTP.java,130,,"        runner.setProperty(FTPTransfer.HOSTNAME, ""localhost"");"
193507,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestFTP.java,203,,"        FileEntry sampleFile = new FileEntry(""c:\\data\\randombytes-2"");"
193508,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestFTP.java,204,,"        sampleFile.setContents(""Just some random test test test chocolate"");"
193509,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestFetchDistributedMapCache.java,58,,"        runner.setProperty(FetchDistributedMapCache.PROP_CACHE_ENTRY_IDENTIFIER, ""${cacheKeyAttribute}"");"
193510,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestFetchDistributedMapCache.java,61,,"        props.put(""cacheKeyAttribute"", ""1"");"
193511,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestFetchDistributedMapCache.java,104,,"        service.put(""key"",""value"", new FetchDistributedMapCache.StringSerializer(), new FetchDistributedMapCache.StringSerializer());"
193512,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestFetchDistributedMapCache.java,104,,"        service.put(""key"",""value"", new FetchDistributedMapCache.StringSerializer(), new FetchDistributedMapCache.StringSerializer());"
193513,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestFetchDistributedMapCache.java,127,,"        runner.setProperty(FetchDistributedMapCache.PROP_PUT_CACHE_VALUE_IN_ATTRIBUTE, ""test"");"
193514,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestFetchDistributedMapCache.java,169,,"        service.put(""key1"",""value1"", new FetchDistributedMapCache.StringSerializer(), new FetchDistributedMapCache.StringSerializer());"
193515,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestFetchFTP.java,90,,"        addFileAndEnqueue(""hello.txt"");"
193516,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestFetchFTP.java,267,,"                        throw new PermissionDeniedException(""test permission denied"");"
193517,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestFetchFile.java,47,,"        final File targetDir = new File(""target/move-target"");"
193518,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestFetchFile.java,75,,"        final File sourceFile = new File(""target/1.txt"");"
193519,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestFetchFile.java,76,,"        final byte[] content = ""Hello, World!"".getBytes();"
193520,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestFetchFile.java,250,,"        Files.write(destFile.toPath(), ""Good-bye"".getBytes(), StandardOpenOption.CREATE);"
193521,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestForkRecord.java,76,,"        accountFields.add(new RecordField(""balance"", RecordFieldType.DOUBLE.getDataType()));"
193522,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestForkRecord.java,95,,"        transactionFields.add(new RecordField(""amount"", RecordFieldType.DOUBLE.getDataType()));"
193523,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestForkRecord.java,113,,"        fields.add(new RecordField(""accounts"", accountsType));"
193524,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestForkRecord.java,117,,"        final MockRecordWriter writerService = new CustomRecordWriter(""header"", false, getAccountSchema());"
193525,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestForkRecord.java,119,,"        runner.addControllerService(""reader"", readerService);"
193526,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestForkRecord.java,121,,"        runner.addControllerService(""writer"", writerService);"
193527,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestForkRecord.java,127,,"        runner.setProperty(""my-path"", ""/accounts"");"
193528,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestForkRecord.java,135,,"        mff.assertAttributeEquals(""record.count"", ""2"");"
193529,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestForkRecord.java,165,,"        runner.setProperty(ForkRecord.INCLUDE_PARENT_FIELDS, ""true"");"
193530,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestForkRecord.java,381,,"        runner.addControllerService(""record-reader"", jsonReader);"
193531,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestForkRecord.java,392,,"        runner.addControllerService(""record-writer"", jsonWriter);"
193532,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGenerateTableFetch.java,118,,"        runner.addControllerService(""dbcp"", dbcp, dbcpProperties);"
193533,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGenerateTableFetch.java,132,,"            stmt.execute(""drop table TEST_QUERY_DB_TABLE"");"
193534,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGenerateTableFetch.java,137,,"        stmt.execute(""create table TEST_QUERY_DB_TABLE (id integer not null, name varchar(100), scale float, created_on timestamp, bignum bigint default 0)"");"
193535,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGenerateTableFetch.java,138,,"        stmt.execute(""insert into TEST_QUERY_DB_TABLE (id, name, scale, created_on) VALUES (0, 'Joe Smith', 1.0, '1962-09-23 03:23:34.234')"");"
193536,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGenerateTableFetch.java,139,,"        stmt.execute(""insert into TEST_QUERY_DB_TABLE (id, name, scale, created_on) VALUES (1, 'Carrie Jones', 5.0, '2000-01-01 03:23:34.234')"");"
193537,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGenerateTableFetch.java,140,,"        stmt.execute(""insert into TEST_QUERY_DB_TABLE (id, name, scale, created_on) VALUES (2, NULL, 2.0, '2010-01-01 00:00:00')"");"
193538,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGenerateTableFetch.java,142,,"        runner.setProperty(GenerateTableFetch.TABLE_NAME, ""TEST_QUERY_DB_TABLE"");"
193539,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGenerateTableFetch.java,176,,"        stmt.execute(""insert into TEST_QUERY_DB_TABLE (id, name, scale, created_on) VALUES (3, 'Mary West', 15.0, '2000-01-01 03:23:34.234')"");"
193540,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGenerateTableFetch.java,177,,"        stmt.execute(""insert into TEST_QUERY_DB_TABLE (id, name, scale, created_on) VALUES (4, 'Marty Johnson', 15.0, '2011-01-01 03:23:34.234')"");"
193541,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGenerateTableFetch.java,178,,"        stmt.execute(""insert into TEST_QUERY_DB_TABLE (id, name, scale, created_on) VALUES (5, 'Marty Johnson', 15.0, '2011-01-01 03:23:34.234')"");"
193542,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGenerateTableFetch.java,227,,"        runner.setProperty(GenerateTableFetch.MAX_VALUE_COLUMN_NAMES, ""name"");"
193543,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGenerateTableFetch.java,239,,"        assertEquals(""TEST_QUERY_DB_TABLE"", flowFile.getAttribute(""generatetablefetch.tableName""));"
193544,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGenerateTableFetch.java,240,,"        assertEquals(""id, name, scale, created_on"", flowFile.getAttribute(""generatetablefetch.columnNames""));"
193545,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGenerateTableFetch.java,241,,"        assertEquals(""name <= 'Mr. NiFi'"", flowFile.getAttribute(""generatetablefetch.whereClause""));"
193546,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGenerateTableFetch.java,242,,"        assertEquals(""name"", flowFile.getAttribute(""generatetablefetch.maxColumnNames""));"
193547,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGenerateTableFetch.java,243,,"        assertEquals(""2"", flowFile.getAttribute(""generatetablefetch.limit""));"
193548,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGenerateTableFetch.java,244,,"        assertEquals(""6"", flowFile.getAttribute(""generatetablefetch.offset""));"
193549,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGenerateTableFetch.java,263,,"            stmt.execute(""drop table TEST_QUERY_DB_TABLE2"");"
193550,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGenerateTableFetch.java,301,,"        runner.setProperty(GenerateTableFetch.TABLE_NAME, ""TEST_QUERY_DB_TABLE2"");"
193551,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGenerateTableFetch.java,542,,"        stmt.execute(""create table TEST_QUERY_DB_TABLE (id integer not null, bucket integer not null)"");"
193552,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGenerateTableFetch.java,543,,"        stmt.execute(""insert into TEST_QUERY_DB_TABLE (id, bucket) VALUES (0, 0)"");"
193553,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGenerateTableFetch.java,544,,"        stmt.execute(""insert into TEST_QUERY_DB_TABLE (id, bucket) VALUES (1, 0)"");"
193554,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGenerateTableFetch.java,545,,"        stmt.execute(""insert into TEST_QUERY_DB_TABLE (id, bucket) VALUES (2, 0)"");"
193555,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGenerateTableFetch.java,681,,"        runner.setProperty(GenerateTableFetch.TABLE_NAME, ""${tableName}"");"
193556,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGenerateTableFetch.java,686,,"            put(""tableName"", ""TEST_QUERY_DB_TABLE1"");"
193557,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGenerateTableFetch.java,747,,"        runner.setProperty(GenerateTableFetch.MAX_VALUE_COLUMN_NAMES, ""${maxValueCol}"");"
193558,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGenerateTableFetch.java,749,,"            put(""maxValueCol"", ""id"");"
193559,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGenerateTableFetch.java,806,,"        assertEquals(""SELECT * FROM TEST_QUERY_DB_TABLE WHERE id <= 1 ORDER BY id FETCH NEXT 10000 ROWS ONLY"", new String(flowFile.toByteArray()));"
193560,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGenerateTableFetch.java,990,,"        runner.setProperty(""initial.maxvalue.ID"", ""1"");"
193561,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGenerateTableFetch.java,996,,"        assertEquals(""SELECT * FROM TEST_QUERY_DB_TABLE WHERE ID > 1 AND ID <= 2 ORDER BY ID FETCH NEXT 10000 ROWS ONLY"", query);"
193562,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGenerateTableFetch.java,1347,,"        assertEquals(""SELECT id, type, name, scale, created_on FROM TEST_QUERY_DB_TABLE WHERE (type = 'male' OR type IS NULL)"""
193563,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGetFile.java,44,,"        final File directory = new File(""target/test/data/in"");"
193564,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGetFile.java,46,,"        assertTrue(""Unable to create test data directory "" + directory.getAbsolutePath(), directory.exists() || directory.mkdirs());"
193565,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGetFile.java,48,,"        final File inFile = new File(""src/test/resources/hello.txt"");"
193566,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGetJMSQueue.java,47,,"        putRunner.setProperty(JmsProperties.URL, ""vm://localhost?broker.persistent=false"");"
193567,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGetJMSQueue.java,49,,"        putRunner.setProperty(JmsProperties.DESTINATION_NAME, ""queue.testing"");"
193568,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestGetSFTP.java,93,,"            Assert.assertTrue(""File not deleted."", !file1.toAbsolutePath().toFile().exists());"
193569,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestHandleHttpResponse.java,71,,"        runner.setProperty(HandleHttpResponse.STATUS_CODE, ""${status.code}"");"
193570,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestHandleHttpResponse.java,72,,"        runner.setProperty(""my-attr"", ""${my-attr}"");"
193571,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestHandleHttpResponse.java,72,,"        runner.setProperty(""my-attr"", ""${my-attr}"");"
193572,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestHandleHttpResponse.java,73,,"        runner.setProperty(""no-valid-attr"", ""${no-valid-attr}"");"
193573,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestHandleHttpResponse.java,73,,"        runner.setProperty(""no-valid-attr"", ""${no-valid-attr}"");"
193574,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestHandleHttpResponse.java,82,,"        attributes.put(""my-attr"", ""hello"");"
193575,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestHandleHttpResponse.java,83,,"        attributes.put(""status.code"", Integer.toString(HTTP_STATUS_CREATED));"
193576,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestHashAttribute.java,37,,"        runner.setProperty(""MDKey1"", "".*"");"
193577,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestHashAttribute.java,38,,"        runner.setProperty(""MDKey2"", ""(.).*"");"
193578,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestIdentifyMimeType.java,60,,"        expectedMimeTypes.put(""1.7z"", ""application/x-7z-compressed"");"
193579,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestIdentifyMimeType.java,61,,"        expectedMimeTypes.put(""1.mdb"", ""application/x-msaccess"");"
193580,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestIdentifyMimeType.java,62,,"        expectedMimeTypes.put(""1.txt"", ""text/plain"");"
193581,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestIdentifyMimeType.java,62,,"        expectedMimeTypes.put(""1.txt"", ""text/plain"");"
193582,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestIdentifyMimeType.java,63,,"        expectedMimeTypes.put(""1.csv"", ""text/csv"");"
193583,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestIdentifyMimeType.java,64,,"        expectedMimeTypes.put(""1.txt.bz2"", ""application/x-bzip2"");"
193584,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestIdentifyMimeType.java,65,,"        expectedMimeTypes.put(""1.txt.gz"", ""application/gzip"");"
193585,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestIdentifyMimeType.java,66,,"        expectedMimeTypes.put(""1.zip"", ""application/zip"");"
193586,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestIdentifyMimeType.java,67,,"        expectedMimeTypes.put(""bgBannerFoot.png"", ""image/png"");"
193587,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestIdentifyMimeType.java,68,,"        expectedMimeTypes.put(""blueBtnBg.jpg"", ""image/jpeg"");"
193588,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestIdentifyMimeType.java,69,,"        expectedMimeTypes.put(""1.pdf"", ""application/pdf"");"
193589,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestIdentifyMimeType.java,70,,"        expectedMimeTypes.put(""grid.gif"", ""image/gif"");"
193590,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestIdentifyMimeType.java,71,,"        expectedMimeTypes.put(""1.tar"", ""application/x-tar"");"
193591,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestIdentifyMimeType.java,72,,"        expectedMimeTypes.put(""1.tar.gz"", ""application/gzip"");"
193592,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestIdentifyMimeType.java,73,,"        expectedMimeTypes.put(""1.jar"", ""application/java-archive"");"
193593,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestIdentifyMimeType.java,74,,"        expectedMimeTypes.put(""1.xml"", ""application/xml"");"
193594,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestIdentifyMimeType.java,75,,"        expectedMimeTypes.put(""flowfilev3"", StandardFlowFileMediaType.VERSION_3.getMediaType());"
193595,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestIdentifyMimeType.java,76,,"        expectedMimeTypes.put(""flowfilev1.tar"", StandardFlowFileMediaType.VERSION_1.getMediaType());"
193596,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestIdentifyMimeType.java,77,,"        expectedMimeTypes.put(""fake.csv"", ""text/csv"");"
193597,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestIdentifyMimeType.java,78,,"        expectedMimeTypes.put(""2.custom"", ""text/plain"");"
193598,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestIdentifyMimeType.java,107,,"            final String extension = file.getAttribute(""mime.extension"");"
193599,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestIdentifyMimeType.java,110,,"            assertEquals(""Expected "" + file + "" to have MIME Type "" + expected + "", but it was "" + mimeType, expected, mimeType);"
193600,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestIdentifyMimeType.java,110,,"            assertEquals(""Expected "" + file + "" to have MIME Type "" + expected + "", but it was "" + mimeType, expected, mimeType);"
193601,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestIdentifyMimeType.java,173,,"        expectedMimeTypes.put(""1.7z"", ""application/octet-stream"");"
193602,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestJoltTransformJSON.java,51,,"        final String spec = new String(Files.readAllBytes(Paths.get(""src/test/resources/TestJoltTransformJson/chainrSpec.json"")));"
193603,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestJoltTransformJSON.java,125,,"        runner.setProperty(JoltTransformJSON.CUSTOM_CLASS, ""TestCustomJoltTransform"");"
193604,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestJoltTransformJSON.java,135,,"        final String customJarPath = ""src/test/resources/TestJoltTransformJson/TestCustomJoltTransform.jar"";"
193605,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestJoltTransformJSON.java,180,,"        transformed.assertAttributeEquals(CoreAttributes.MIME_TYPE.key(),""application/json"");"
193606,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestJoltTransformJSON.java,182,,"        Object compareJson = JsonUtils.jsonToObject(Files.newInputStream(Paths.get(""src/test/resources/TestJoltTransformJson/chainrOutput.json"")));"
193607,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestListDatabaseTables.java,93,,"        runner.addControllerService(""dbcp"", dbcp, dbcpProperties);"
193608,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestListDatabaseTables.java,106,,"            stmt.execute(""drop table TEST_TABLE1"");"
193609,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestListDatabaseTables.java,107,,"            stmt.execute(""drop table TEST_TABLE2"");"
193610,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestListDatabaseTables.java,112,,"        stmt.execute(""create table TEST_TABLE1 (id integer not null, val1 integer, val2 integer, constraint my_pk1 primary key (id))"");"
193611,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestListDatabaseTables.java,113,,"        stmt.execute(""create table TEST_TABLE2 (id integer not null, val1 integer, val2 integer, constraint my_pk2 primary key (id))"");"
193612,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestListDatabaseTables.java,125,,"        runner.setProperty(ListDatabaseTables.INCLUDE_COUNT, ""true"");"
193613,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestListDatabaseTables.java,139,,"        stmt.execute(""insert into TEST_TABLE1 (id, val1, val2) VALUES (0, NULL, 1)"");"
193614,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestListDatabaseTables.java,140,,"        stmt.execute(""insert into TEST_TABLE1 (id, val1, val2) VALUES (1, 1, 1)"");"
193615,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestListFile.java,197,,"        runner.setProperty(ListFile.TRACK_PERFORMANCE, ""true"");"
193616,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestListFile.java,324,,"        assertEquals(file2.getName(), successFiles2.get(0).getAttribute(""filename""));"
193617,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestListFile.java,594,,"        final File file1 = new File(TESTDIR + ""/file1.txt"");"
193618,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestListFile.java,862,,"        age0 = Long.toString(age0millis) + "" millis"";"
193619,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestListenHTTP.java,90,,"    private static final String MULTIPART_ATTRIBUTE = ""http.multipart.name"";"
193620,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestListenHTTP.java,655,,"        mff.assertAttributeExists(""http.multipart.size"");"
193621,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestListenHTTP.java,656,,"        mff.assertAttributeEquals(""http.multipart.fragments.sequence.number"", ""1"");"
193622,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestListenHTTP.java,657,,"        mff.assertAttributeEquals(""http.multipart.fragments.total.number"", ""5"");"
193623,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestListenHTTP.java,658,,"        mff.assertAttributeExists(""http.headers.multipart.content-disposition"");"
193624,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestListenTCP.java,81,,"        messages.add(""This is message 1\n"");"
193625,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestListenTCP.java,82,,"        messages.add(""This is message 2\n"");"
193626,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestListenTCP.java,83,,"        messages.add(""This is message 3\n"");"
193627,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestListenTCP.java,84,,"        messages.add(""This is message 4\n"");"
193628,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestListenTCP.java,85,,"        messages.add(""This is message 5\n"");"
193629,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestListenTCPRecord.java,135,,"            Assert.assertTrue(content.contains(""This is a test "" + (i + 1)));"
193630,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestListenUDPRecord.java,98,,"        final String sender = ""foo"";"
193631,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLogAttribute.java,48,,"        attrs.put(""foo"", ""foo-value"");"
193632,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLogAttribute.java,48,,"        attrs.put(""foo"", ""foo-value"");"
193633,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLogAttribute.java,49,,"        attrs.put(""bar"", ""bar-value"");"
193634,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLogAttribute.java,49,,"        attrs.put(""bar"", ""bar-value"");"
193635,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLogAttribute.java,50,,"        attrs.put(""foobaz"", ""foobaz-value"");"
193636,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLogAttribute.java,50,,"        attrs.put(""foobaz"", ""foobaz-value"");"
193637,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLogAttribute.java,52,,"        final MockFlowFile flowFile = runner.enqueue(""content"", attrs);"
193638,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLogAttribute.java,68,,"        runner.setProperty(LogAttribute.ATTRIBUTES_TO_LOG_REGEX, ""foo.*"");"
193639,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLookupAttribute.java,48,,"        runner.addControllerService(""simple-key-value-lookup-service"", service);"
193640,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLookupAttribute.java,49,,"        runner.setProperty(service, ""key1"", ""value1"");"
193641,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLookupAttribute.java,50,,"        runner.setProperty(service, ""key2"", ""value2"");"
193642,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLookupAttribute.java,52,,"        runner.setProperty(service, ""key4"", ""  "");"
193643,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLookupAttribute.java,57,,"        runner.setProperty(""foo"", ""key1"");"
193644,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLookupAttribute.java,59,,"        runner.setProperty(""baz"", ""${attr1}"");"
193645,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLookupAttribute.java,65,,"        attributes.put(""attr1"", ""key3"");"
193646,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLookupRecord.java,70,,"        runner.addControllerService(""reader"", recordReader);"
193647,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLookupRecord.java,72,,"        runner.addControllerService(""writer"", recordWriter);"
193648,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLookupRecord.java,74,,"        runner.addControllerService(""lookup"", lookupService);"
193649,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLookupRecord.java,80,,"        runner.setProperty(""lookup"", ""/name"");"
193650,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLookupRecord.java,84,,"        recordReader.addSchemaField(""name"", RecordFieldType.STRING);"
193651,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLookupRecord.java,85,,"        recordReader.addSchemaField(""age"", RecordFieldType.INT);"
193652,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLookupRecord.java,88,,"        recordReader.addRecord(""John Doe"", 48, null);"
193653,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLookupRecord.java,89,,"        recordReader.addRecord(""Jane Doe"", 47, null);"
193654,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLookupRecord.java,90,,"        recordReader.addRecord(""Jimmy Doe"", 14, null);"
193655,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLookupRecord.java,104,,"        lookupService.addValue(""John Doe"", ""Soccer"");"
193656,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLookupRecord.java,105,,"        lookupService.addValue(""Jane Doe"", ""Basketball"");"
193657,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLookupRecord.java,106,,"        lookupService.addValue(""Jimmy Doe"", ""Football"");"
193658,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLookupRecord.java,114,,"        out.assertAttributeEquals(""record.count"", ""3"");"
193659,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLookupRecord.java,115,,"        out.assertAttributeEquals(""mime.type"", ""text/plain"");"
193660,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLookupRecord.java,115,,"        out.assertAttributeEquals(""mime.type"", ""text/plain"");"
193661,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLookupRecord.java,146,,"        out.assertContentEquals(""John Doe,48,\nJane Doe,47,\nJimmy Doe,14,\n"");"
193662,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLookupRecord.java,280,,"        fields.add(new RecordField(""favorite"", RecordFieldType.STRING.getDataType()));"
193663,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLookupRecord.java,281,,"        fields.add(new RecordField(""least"", RecordFieldType.STRING.getDataType()));"
193664,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLookupRecord.java,285,,"        sports.setValue(""favorite"", ""basketball"");"
193665,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestLookupRecord.java,286,,"        sports.setValue(""least"", ""soccer"");"
193666,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeContent.java,108,,"        final Schema schema = new Schema.Parser().parse(new File(""src/test/resources/TestMergeContent/user.avsc""));"
193667,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeContent.java,111,,"        user1.put(""name"", ""Alyssa"");"
193668,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeContent.java,111,,"        user1.put(""name"", ""Alyssa"");"
193669,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeContent.java,112,,"        user1.put(""favorite_number"", 256);"
193670,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeContent.java,115,,"        user2.put(""name"", ""Ben"");"
193671,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeContent.java,117,,"        user2.put(""favorite_color"", ""red"");"
193672,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeContent.java,117,,"        user2.put(""favorite_color"", ""red"");"
193673,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeContent.java,120,,"        user3.put(""name"", ""John"");"
193674,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeContent.java,122,,"        user3.put(""favorite_color"", ""blue"");"
193675,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeContent.java,140,,"        bundle.assertAttributeEquals(CoreAttributes.MIME_TYPE.key(), ""application/avro-binary"");"
193676,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeContent.java,219,,"            put(""test_metadata1"", ""Test 1"");"
193677,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeContent.java,219,,"            put(""test_metadata1"", ""Test 1"");"
193678,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeContent.java,227,,"            put(""test_metadata1"", ""Test 2""); // Test non-matching values"
193679,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeContent.java,236,,"            put(""test_metadata2"", ""Test""); // Test unique"
193680,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeContent.java,236,,"            put(""test_metadata2"", ""Test""); // Test unique"
193681,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeContent.java,484,,"        runner.setProperty(MergeContent.MAX_BIN_AGE, ""1 sec"");"
193682,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeContent.java,496,,"        bundle.assertContentEquals(""Hello, World!"".getBytes(""UTF-8""));"
193683,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeContent.java,496,,"        bundle.assertContentEquals(""Hello, World!"".getBytes(""UTF-8""));"
193684,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeContent.java,497,,"        bundle.assertAttributeEquals(CoreAttributes.MIME_TYPE.key(), ""application/plain-text"");"
193685,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeContent.java,584,,"        runner.enqueue(""Hello"".getBytes(""UTF-8""), attributes);"
193686,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeContent.java,586,,"        runner.enqueue(""World!"".getBytes(""UTF-8""), attributes);"
193687,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeContent.java,850,,"        runner.setProperty(MergeContent.MAX_BIN_AGE, ""1 min"");"
193688,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeContent.java,857,,"        runner.enqueue(""A Man "".getBytes(""UTF-8""), attributes);"
193689,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeContent.java,859,,"        runner.enqueue(""A Plan "".getBytes(""UTF-8""), attributes);"
193690,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeContent.java,861,,"        runner.enqueue(""A Canal "".getBytes(""UTF-8""), attributes);"
193691,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeContent.java,863,,"        runner.enqueue(""Panama"".getBytes(""UTF-8""), attributes);"
193692,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeContent.java,869,,"        assembled.assertContentEquals(""A Man A Plan A Canal Panama"".getBytes(""UTF-8""));"
193693,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeContent.java,1043,,"        attributes.put(""segment.index"", ""1"");"
193694,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeContent.java,1096,,"        runner.setProperty(MergeContent.CORRELATION_ATTRIBUTE_NAME, ""attr"");"
193695,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeContent.java,1163,,"        runner.setProperty(MergeContent.MAX_SIZE, ""2 B"");"
193696,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeContent.java,1167,,"        attr1.put(""abc"", ""xyz"");"
193697,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeContent.java,1167,,"        attr1.put(""abc"", ""xyz"");"
193698,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeContent.java,1169,,"        attr1.put(""hello"", ""good-bye"");"
193699,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeContent.java,1174,,"        attr2.put(""world"", ""aaa"");"
193700,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeRecord.java,72,,"        mff.assertAttributeEquals(""record.count"", ""2"");"
193701,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeRecord.java,73,,"        mff.assertContentEquals(""header\nJohn,35\nJane,34\n"");"
193702,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeRecord.java,84,,"        runner.enqueue(""Name, Age\nJohn, 35"");"
193703,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeRecord.java,85,,"        runner.enqueue(""Name, Age\nJane, 34"");"
193704,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeRecord.java,532,,"        runner.setVariable(""min_records"", ""3"");"
193705,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeRecord.java,533,,"        runner.setVariable(""max_records"", ""3"");"
193706,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeRecord.java,537,,"        runner.setProperty(MergeRecord.MIN_RECORDS, ""${min_records}"");"
193707,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMergeRecord.java,555,,"        runner.setProperty(MergeRecord.MAX_RECORDS, ""${max_records}"");"
193708,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestModifyBytes.java,65,,"        out.assertContentEquals("""".getBytes(""UTF-8""));"
193709,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestModifyBytes.java,71,,"        runner.setProperty(ModifyBytes.START_OFFSET, ""0 MB"");"
193710,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestModifyBytes.java,85,,"        runner.setProperty(ModifyBytes.START_OFFSET, ""12 B""); //REMOVE - '<<<HEADER>>>'"
193711,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestModifyBytes.java,120,,"        runner.setProperty(ModifyBytes.END_OFFSET, ""0 B"");"
193712,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestModifyBytes.java,242,,"        runner.setProperty(ModifyBytes.START_OFFSET, ""10 B"");"
193713,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMonitorActivity.java,47,,"        runner.setProperty(MonitorActivity.CONTINUALLY_SEND_MESSAGES, ""false"");"
193714,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMonitorActivity.java,71,,"        attributes.put(""key"", ""value"");"
193715,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMonitorActivity.java,71,,"        attributes.put(""key"", ""value"");"
193716,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMonitorActivity.java,72,,"        attributes.put(""key1"", ""value1"");"
193717,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMonitorActivity.java,72,,"        attributes.put(""key1"", ""value1"");"
193718,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMonitorActivity.java,82,,"        Assert.assertTrue(Pattern.matches(""Activity restored at time: (.*) after being inactive for 0 minutes"", flowFileContent));"
193719,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMonitorActivity.java,87,,"        runner.setProperty(MonitorActivity.CONTINUALLY_SEND_MESSAGES, ""true"");"
193720,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMonitorActivity.java,128,,"        runner.enqueue(""lorem ipsum"");"
193721,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMonitorActivity.java,472,,"        runner.setProperty(MonitorActivity.THRESHOLD, ""1 ms"");"
193722,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMonitorActivity.java,474,,"        runner.enqueue(""Incoming data"");"
193723,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMonitorActivity.java,481,,"        assertNotNull(""Latest timestamp should be persisted"", updatedState.get(MonitorActivity.STATE_KEY_LATEST_SUCCESS_TRANSFER));"
193724,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMonitorActivity.java,484,,"        assertNull(updatedState.get(""key2""));"
193725,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMonitorActivity.java,524,,"        existingState.put(""key2"", ""value2"");"
193726,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestMonitorActivity.java,606,,"        runner.setProperty(MonitorActivity.THRESHOLD, ""3 mins"");"
193727,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestNotify.java,64,,"        runner.setProperty(Notify.RELEASE_SIGNAL_IDENTIFIER, ""${releaseSignalAttribute}"");"
193728,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestNotify.java,68,,"        props.put(""releaseSignalAttribute"", ""1"");"
193729,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestNotify.java,69,,"        props.put(""key"", ""value"");"
193730,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestNotify.java,69,,"        props.put(""key"", ""value"");"
193731,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestNotify.java,75,,"        runner.getFlowFilesForRelationship(Notify.REL_SUCCESS).get(0).assertAttributeEquals(Notify.NOTIFIED_ATTRIBUTE_NAME, ""true"");"
193732,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestNotify.java,88,,"        runner.setProperty(Notify.SIGNAL_COUNTER_NAME, ""${status}"");"
193733,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestNotify.java,91,,"        props1.put(""releaseSignalAttribute"", ""someDataProcessing"");"
193734,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestNotify.java,92,,"        props1.put(""key"", ""data1"");"
193735,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestNotify.java,93,,"        props1.put(""status"", ""success"");"
193736,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestNotify.java,93,,"        props1.put(""status"", ""success"");"
193737,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestNotify.java,98,,"        props2.put(""key"", ""data2"");"
193738,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestNotify.java,104,,"        props3.put(""key"", ""data3"");"
193739,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestNotify.java,105,,"        props3.put(""status"", ""failure"");"
193740,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestNotify.java,116,,"        assertEquals(""Same attribute key will be overwritten by the latest signal"", ""data3"", cachedAttributes.get(""key""));"
193741,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestNotify.java,188,,"        props1.put(""record.count"", ""1024"");"
193742,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestParseCEF.java,88,,"        mff.assertAttributeEquals(""cef.extension.rt"", sdf.format(new Date(1423441663000L)));"
193743,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPartitionRecord.java,57,,"        readerService.addSchemaField(""name"", RecordFieldType.STRING);"
193744,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPartitionRecord.java,58,,"        readerService.addSchemaField(""age"", RecordFieldType.INT);"
193745,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPartitionRecord.java,59,,"        readerService.addSchemaField(""sports"", RecordFieldType.ARRAY);"
193746,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPartitionRecord.java,66,,"        readerService.addRecord(""John"", 28, null);"
193747,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPartitionRecord.java,67,,"        readerService.addRecord(""Jake"", 49, null);"
193748,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPartitionRecord.java,68,,"        readerService.addRecord(""Mark"", 19, null);"
193749,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPartitionRecord.java,69,,"        readerService.addRecord(""Jane"", 20, null);"
193750,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPartitionRecord.java,82,,"        assertEquals(3L, out.stream().filter(ff -> ff.getAttribute(""record.count"").equals(""1"")).count());"
193751,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPartitionRecord.java,206,,"        readerService.addRecord(""John"", 30, new String[] {""baseball""});"
193752,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutDistributedMapCache.java,60,,"        runner.setProperty(PutDistributedMapCache.CACHE_ENTRY_IDENTIFIER, ""${cacheKeyAttribute}"");"
193753,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutDistributedMapCache.java,76,,"        props.put(""cacheKeyAttribute"", ""1"");"
193754,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutDistributedMapCache.java,79,,"        runner.enqueue(flowFileContent.getBytes(""UTF-8""), props);"
193755,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutDistributedMapCache.java,89,,"        outputFlowFile.assertAttributeEquals(""cached"", ""true"");"
193756,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutDistributedMapCache.java,89,,"        outputFlowFile.assertAttributeEquals(""cached"", ""true"");"
193757,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutDistributedMapCache.java,143,,"        props.put(""cacheKeyAttribute"", ""replaceme"");"
193758,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutEmail.java,95,,"        runner.setProperty(PutEmail.FROM, ""test@apache.org"");"
193759,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutEmail.java,97,,"        runner.setProperty(PutEmail.MESSAGE, ""Message Body"");"
193760,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutEmail.java,102,,"        runner.enqueue(""Some Text"".getBytes(), attributes);"
193761,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutEmail.java,114,,"        runner.setProperty(PutEmail.SMTP_HOSTNAME, ""smtp-host"");"
193762,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutEmail.java,115,,"        runner.setProperty(PutEmail.HEADER_XMAILER, ""TestingNiFi"");"
193763,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutEmail.java,118,,"        runner.setProperty(PutEmail.TO, ""recipient@apache.org"");"
193764,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutEmail.java,128,,"        assertEquals(""Expected a single message to be sent"", 1, processor.getMessages().size());"
193765,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutEmail.java,131,,"        assertEquals(""X-Mailer Header"", ""TestingNiFi"", message.getHeader(""X-Mailer"")[0]);"
193766,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutEmail.java,131,,"        assertEquals(""X-Mailer Header"", ""TestingNiFi"", message.getHeader(""X-Mailer"")[0]);"
193767,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutFile.java,86,,"        attributes.put(CoreAttributes.FILENAME.key(), ""targetFile.txt"");"
193768,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutFile.java,87,,"        runner.enqueue(""Hello world!!"".getBytes(), attributes);"
193769,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutFile.java,107,,"        Path targetPath = Paths.get(newDir + ""/targetFile.txt"");"
193770,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutFile.java,146,,"        runner.enqueue(""Another file"".getBytes(), attributes);"
193771,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutJMS.java,152,,"        runnerPut.setProperty(JmsProperties.ATTRIBUTES_TO_JMS_PROPS, ""true"");"
193772,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutJMS.java,157,,"        attributes.put(""filename"", ""file1.txt"");"
193773,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutJMS.java,157,,"        attributes.put(""filename"", ""file1.txt"");"
193774,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutJMS.java,179,,"        runnerPut.enqueue(""putGetMessage"".getBytes(), attributes);"
193775,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutJMS.java,240,,"        runnerPutText.enqueue(""putGetTextMessage"", attributes);"
193776,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutRecord.java,41,,"        testRunner.setProperty(PutRecord.RECORD_READER, ""reader"");"
193777,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutRecord.java,43,,"        testRunner.setProperty(PutRecord.RECORD_SINK, ""MockRecordSinkService"");"
193778,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutRecord.java,54,,"        recordReader.addSchemaField(""name"", RecordFieldType.STRING);"
193779,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutRecord.java,55,,"        recordReader.addSchemaField(""age"", RecordFieldType.INT);"
193780,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutRecord.java,56,,"        recordReader.addSchemaField(""sport"", RecordFieldType.STRING);"
193781,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutSFTP.java,84,,"        attributes.put(""filename"", ""testfile.txt"");"
193782,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutSFTP.java,84,,"        attributes.put(""filename"", ""testfile.txt"");"
193783,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutSFTP.java,108,,"        attributes.put(""filename"", ""testfile1.txt"");"
193784,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutSQL.java,103,,"        recreateTable(""PERSONS"", createPersons);"
193785,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutSQL.java,112,,"                final ResultSet rs = stmt.executeQuery(""SELECT * FROM PERSONS"");"
193786,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutSQL.java,115,,"                assertEquals(""Mark"", rs.getString(2));"
193787,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutSQL.java,129,,"                assertEquals(""George"", rs.getString(2));"
193788,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutSQL.java,139,,"        runner.setProperty(PutSQL.AUTO_COMMIT, ""false"");"
193789,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutSQL.java,163,,"        runner.setProperty(PutSQL.OBTAIN_GENERATED_KEYS, ""true"");"
193790,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutSQL.java,175,,"                final ResultSet rs = stmt.executeQuery(""SELECT * FROM PERSONS_AI"");"
193791,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutSQL.java,271,,"            attributes.put(""sql.args.1.type"", String.valueOf(Types.INTEGER));"
193792,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutSQL.java,272,,"            attributes.put(""sql.args.1.value"", String.valueOf(id));"
193793,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutSQL.java,343,,"            fail(""ProcessException should be thrown"");"
193794,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutSQL.java,383,,"        final byte[] data = ""INSERT INTO PERSONS_AI (NAME, CODE) VALUES ('Mark', ?)"".getBytes();"
193795,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutSQL.java,566,,"        attributes.put(""sql.args.2.type"", String.valueOf(Types.TIMESTAMP));"
193796,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutSQL.java,567,,"        attributes.put(""sql.args.2.value"", art3TS);"
193797,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutSQL.java,610,,"        attributes.put(""sql.args.2.format"", ""yyyy-MM-dd'T'HH:mm:ss.SSSSSSSSS"");"
193798,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutSQL.java,935,,"        attributes.put(""sql.args.3.type"", String.valueOf(Types.VARBINARY));"
193799,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutSQL.java,936,,"        attributes.put(""sql.args.3.value"", art3VARBIN);"
193800,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutSQL.java,937,,"        attributes.put(""sql.args.4.type"", String.valueOf(Types.LONGVARBINARY));"
193801,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutSQL.java,938,,"        attributes.put(""sql.args.4.value"", art4LongBin);"
193802,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutSQL.java,1009,,"                assertTrue(Arrays.equals(arg2BIN.getBytes(""ASCII""), rs.getBytes(2)));"
193803,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutSQL.java,1055,,"        runner.enqueue(""INSERT INTO PERSONS (ID, NAME, CODE) VALUES (?, ?, ?)"".getBytes(), attributes);"
193804,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutSQL.java,1103,,"        final String sql = ""INSERT INTO PERSONS (ID, NAME, CODE) VALUES (?, ?, ?); "" +"
193805,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutSQL.java,1104,,"                ""UPDATE PERSONS SET NAME='George' WHERE ID=?; "";"
193806,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutSQL.java,1278,,"        runner.addControllerService(""dbcp"", service);"
193807,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutSQL.java,1359,,"        attributes.put(""fragment.identifier"", ""1"");"
193808,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutSQL.java,1360,,"        attributes.put(""fragment.count"", ""2"");"
193809,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestPutSQL.java,1361,,"        attributes.put(""fragment.index"", ""0"");"
193810,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestQueryRecord.java,96,,"        runner.addControllerService(""reader"", recordReader);"
193811,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestQueryRecord.java,98,,"        runner.addControllerService(""writer"", writer);"
193812,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestQueryRecord.java,126,,"        assertEquals(""John Doe"", output.getValue(""name""));"
193813,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestQueryRecord.java,126,,"        assertEquals(""John Doe"", output.getValue(""name""));"
193814,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestQueryRecord.java,128,,"        assertEquals(30, output.getValue(""age""));"
193815,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestQueryRecord.java,201,,"            ""SELECT title, name"" +"
193816,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestQueryRecord.java,202,,"            ""    FROM FLOWFILE"" +"
193817,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestQueryRecord.java,217,,"        assertEquals(""Software Engineer"", output.getValue(""title""));"
193818,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestQueryRecord.java,217,,"        assertEquals(""Software Engineer"", output.getValue(""title""));"
193819,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestQueryRecord.java,259,,"        record2.setValue(""height"", 30);"
193820,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestQueryRecord.java,412,,"        assertArrayEquals(new Object[]{""a"", ""d"", ""g""}, (Object[]) output0.getValue(""tags""));"
193821,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestQueryRecord.java,480,,"            address.setValue(""state"", ""NY"");"
193822,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestQueryRecord.java,815,,"        parser.addRecord(""Tom"", 49);"
193823,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestQueryRecord.java,817,,"        final MockRecordWriter writer = new MockRecordWriter(""\""name\"",\""points\"""");"
193824,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestQueryRecord.java,820,,"        runner.addControllerService(""parser"", parser);"
193825,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestQueryRecord.java,1007,,"        parser.addRecord(""Jerry"", ""red"", null);"
193826,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestQueryRecord.java,1035,,"        parser.addSchemaField(""points"", RecordFieldType.INT);"
193827,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestReplaceText.java,60,,"        runner.enqueue(""Me, you, and the other"", Collections.singletonMap(""search.value"", ""you, and""));"
193828,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestReplaceText.java,121,,"        runner.enqueue(Paths.get(""src/test/resources/hello.txt""));"
193829,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestReplaceText.java,162,,"        runner.setProperty(ReplaceText.SEARCH_VALUE, ""ell"");"
193830,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestReplaceText.java,170,,"        out.assertContentEquals(""Hlleo, World!"".getBytes(""UTF-8""));"
193831,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestReplaceText.java,176,,"        runner.setProperty(ReplaceText.SEARCH_VALUE, ""(?s:^.*$)"");"
193832,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestReplaceText.java,204,,"        runner.setProperty(ReplaceText.REPLACEMENT_VALUE, ""TEST"");"
193833,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestReplaceText.java,222,,"        runner.enqueue(""hello\nthere\nmadam"".getBytes());"
193834,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestReplaceText.java,316,,"        runner.enqueue(""hello\rthere\rsir"".getBytes());"
193835,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestReplaceText.java,411,,"        runner.enqueue(""hello\r\nthere\r\nsir"".getBytes());"
193836,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestReplaceText.java,506,,"        runner.setProperty(ReplaceText.REPLACEMENT_VALUE, ""[$1]"");"
193837,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestReplaceText.java,531,,"        out.assertContentEquals(""Hello, World!"");"
193838,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestReplaceText.java,539,,"        runner.setProperty(ReplaceText.SEARCH_VALUE, ""(ell)"");"
193839,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestReplaceText.java,558,,"        attributes.put(""abc"", ""notSupported"");"
193840,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestReplaceText.java,587,,"        runner.setProperty(ReplaceText.SEARCH_VALUE, ""${replaceKey}"");"
193841,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestReplaceText.java,591,,"        attributes.put(""replaceKey"", ""H.*o"");"
193842,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestReplaceText.java,591,,"        attributes.put(""replaceKey"", ""H.*o"");"
193843,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestReplaceText.java,622,,"        runner.setProperty(ReplaceText.REPLACEMENT_VALUE, ""${replaceValue}"");"
193844,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestReplaceText.java,626,,"        attributes.put(""replaceValue"", ""Good-bye"");"
193845,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestReplaceText.java,626,,"        attributes.put(""replaceValue"", ""Good-bye"");"
193846,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestReplaceText.java,658,,"        runner.setProperty(ReplaceText.REPLACEMENT_VALUE, ""$1$2"");"
193847,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestReplaceText.java,754,,"        runner.setProperty(ReplaceText.REPLACEMENT_VALUE, ""${abc}"");"
193848,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestReplaceText.java,757,,"        attributes.put(""abc"", ""Good"");"
193849,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestReplaceText.java,809,,"        attributes.put(""filename"", ""abc.txt"");"
193850,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestReplaceText.java,809,,"        attributes.put(""filename"", ""abc.txt"");"
193851,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestReplaceText.java,905,,"        runner.enqueue(translateNewLines(Paths.get(""src/test/resources/TestReplaceTextLineByLine/testFile.txt"")));"
193852,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestReplaceText.java,1646,,"        testSubstituteVariables(""Line1: ${var1}\nLine2: ${var2}"", ""Line1: foo\nLine2: bar"", ReplaceText.ENTIRE_TEXT, createAttributesMap());"
193853,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestReplaceTextWithMapping.java,51,,"        final String mappingFile = Paths.get(""src/test/resources/TestReplaceTextWithMapping/color-fruit-mapping.txt"").toFile().getAbsolutePath();"
193854,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestReplaceTextWithMapping.java,54,,"        runner.enqueue(Paths.get(""src/test/resources/TestReplaceTextWithMapping/colors-without-dashes.txt""));"
193855,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestReplaceTextWithMapping.java,63,,"                + ""I'm not good at writing poems"";"
193856,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestReplaceTextWithMapping.java,128,,"        runner.setProperty(ReplaceTextWithMapping.REGEX, ""-(.*?)-"");"
193857,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestReplaceTextWithMapping.java,132,,"        runner.enqueue(Paths.get(""src/test/resources/TestReplaceTextWithMapping/colors.txt""));"
193858,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestRetryFlowFile.java,53,,"            mff.assertAttributeExists(""flowfile.retries"");"
193859,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestRetryFlowFile.java,54,,"            mff.assertAttributeExists(""flowfile.retries.uuid"");"
193860,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestRetryFlowFile.java,73,,"            Assert.assertTrue(""FlowFile was not penalized!"", mff.isPenalized());"
193861,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestRouteOnAttribute.java,42,,"        final ValidationResult validationResult = ctx.setProperty(""RouteA"", ""${a:equals('b')""); // Missing closing brace"
193862,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestRouteText.java,45,,"        runner.setProperty(""simple"", ""start"");"
193863,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestRouteText.java,45,,"        runner.setProperty(""simple"", ""start"");"
193864,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestRouteText.java,50,,"        Set<String> expectedRelationships = new HashSet<>(Arrays.asList(""matched"", ""unmatched"", ""original""));"
193865,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestRouteText.java,50,,"        Set<String> expectedRelationships = new HashSet<>(Arrays.asList(""matched"", ""unmatched"", ""original""));"
193866,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestRouteText.java,50,,"        Set<String> expectedRelationships = new HashSet<>(Arrays.asList(""matched"", ""unmatched"", ""original""));"
193867,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestRouteText.java,108,,"        runner.enqueue(""start middle end\nnot match"".getBytes(""UTF-8""));"
193868,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestRouteText.java,108,,"        runner.enqueue(""start middle end\nnot match"".getBytes(""UTF-8""));"
193869,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestRouteText.java,131,,"        outMatched.assertContentEquals(""start middle end\n"".getBytes(""UTF-8""));"
193870,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestRouteText.java,133,,"        outUnmatched.assertContentEquals(""not match"".getBytes(""UTF-8""));"
193871,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestRouteText.java,150,,"        outMatched.assertContentEquals(""start middle end"".getBytes(""UTF-8""));"
193872,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestRouteText.java,441,,"        runner.setProperty(""no"", ""no match"");"
193873,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestRouteText.java,543,,"        runner.setProperty(""second"", ""star"");"
193874,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestRouteText.java,677,,"        runner.setProperty(""empty"", ""${incomplete expression"");"
193875,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestSampleRecord.java,47,,"        final MockRecordWriter writerService = new MockRecordWriter(""header"", false);"
193876,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestSampleRecord.java,50,,"        runner.addControllerService(""reader"", readerService);"
193877,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestSampleRecord.java,52,,"        runner.addControllerService(""writer"", writerService);"
193878,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestSampleRecord.java,61,,"        readerService.addSchemaField(""name"", RecordFieldType.STRING);"
193879,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestSampleRecord.java,62,,"        readerService.addSchemaField(""age"", RecordFieldType.INT);"
193880,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestSampleRecord.java,73,,"        out.assertAttributeEquals(""record.count"", ""25"");"
193881,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestScanAttribute.java,35,,"        attributes.put(""abc"", ""world"");"
193882,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestScanAttribute.java,35,,"        attributes.put(""abc"", ""world"");"
193883,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestSplitContent.java,40,,"        runner.setProperty(SplitContent.KEEP_SEQUENCE, ""true"");"
193884,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestSplitContent.java,82,,"        runner.setProperty(SplitContent.KEEP_SEQUENCE, ""false"");"
193885,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestSplitContent.java,210,,"        runner.setProperty(SplitContent.BYTE_SEQUENCE.getName(), ""05050505"");"
193886,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestSplitRecord.java,40,,"        final MockRecordWriter writerService = new MockRecordWriter(""header"", false);"
193887,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestSplitRecord.java,43,,"        runner.addControllerService(""reader"", readerService);"
193888,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestSplitRecord.java,45,,"        runner.addControllerService(""writer"", writerService);"
193889,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestSplitRecord.java,52,,"        readerService.addSchemaField(""name"", RecordFieldType.STRING);"
193890,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestSplitRecord.java,53,,"        readerService.addSchemaField(""age"", RecordFieldType.INT);"
193891,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestSplitRecord.java,55,,"        readerService.addRecord(""John Doe"", 48);"
193892,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestSplitRecord.java,56,,"        readerService.addRecord(""Jane Doe"", 47);"
193893,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestSplitRecord.java,57,,"        readerService.addRecord(""Jimmy Doe"", 14);"
193894,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestSplitText.java,64,,"        runner.setProperty(SplitText.FRAGMENT_MAX_SIZE, ""50 B"");"
193895,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestSplitText.java,79,,"        runner.setProperty(SplitText.REMOVE_TRAILING_NEWLINES, ""false"");"
193896,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestSplitText.java,86,,"        runner.getFlowFilesForRelationship(SplitText.REL_ORIGINAL).get(0).assertAttributeEquals(""fragment.count"", ""2"");"
193897,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestSplitText.java,444,,"        splits.get(0).assertContentEquals(""HeaderLine1"");"
193898,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestSplitText.java,497,,"        splits.get(3).assertContentEquals(""\n\n\n\n\n"");"
193899,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestSplitText.java,524,,"        splits.get(3).assertContentEquals(""HeaderLine1\n\n\n\n\n\n"");"
193900,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestSplitText.java,538,,"        runner.setProperty(SplitText.REMOVE_TRAILING_NEWLINES, ""true"");"
193901,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestSplitXml.java,61,,"        runner.enqueue(Paths.get(""src/test/resources/TestXml/xml-bundle-1""));"
193902,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestTailFile.java,77,,"        file = new File(""target/log.txt"");"
193903,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestTailFile.java,81,,"        existingFile = new File(""target/existing-log.txt"");"
193904,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestTailFile.java,146,,"        String content1 = ""first_line_with_nul\0\n"";"
193905,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestTailFile.java,176,,"        runner.setProperty(TailFile.REREAD_ON_NUL, ""true"");"
193906,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestTailFile.java,212,,"        runner.setProperty(TailFile.ROLLING_FILENAME_PATTERN, ""log.txt*"");"
193907,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestTailFile.java,239,,"        raf.write(""d\n"".getBytes());"
193908,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestTailFile.java,256,,"        raf.write(""1\n"".getBytes());"
193909,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestTailFile.java,263,,"        raf.write(""2\n"".getBytes());"
193910,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestTailFile.java,265,,"        raf.write(""3\n"".getBytes());"
193911,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestTailFile.java,320,,"        runner.setProperty(TailFile.ROLLING_FILENAME_PATTERN, ""log.*"");"
193912,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestTailFile.java,340,,"        final File rolledFile = new File(""target/log.1"");"
193913,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestTailFile.java,349,,"        newFile.write(""new file\n"".getBytes()); // This should not get consumed until the old file's last modified date indicates it's complete"
193914,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestTailFile.java,418,,"        raf.write(""hello\n"".getBytes());"
193915,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestTailFile.java,438,,"        raf.write(""HELLO\n"".getBytes());"
193916,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestTailFile.java,539,,"        raf.write(""world"".getBytes());"
193917,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestTailFile.java,671,,"        file.renameTo(new File(""target/log.2""));"
193918,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestTailFile.java,676,,"        raf.write(""abc\n"".getBytes());"
193919,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestTailFile.java,908,,"        runner.setProperty(TailFile.BASE_DIRECTORY, ""target"");"
193920,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestTailFile.java,932,,"        thirdFileRaf.write(""hey\n"".getBytes());"
193921,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestTailFile.java,940,,"                .stream().filter(mockFlowFile -> mockFlowFile.isAttributeEqual(""tailfile.original.path"", thirdFile.getPath())).findFirst();"
193922,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestTransformXml.java,48,,"        runner.setProperty(TransformXml.XSLT_FILE_NAME, ""src/test/resources/TestTransformXml/math.xsl"");"
193923,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestTransformXml.java,63,,"        runner.setProperty(""header"", ""Test for mod"");"
193924,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestTransformXml.java,63,,"        runner.setProperty(""header"", ""Test for mod"");"
193925,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestTransformXml.java,67,,"        runner.enqueue(Paths.get(""src/test/resources/TestTransformXml/math.xml""), attributes);"
193926,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestTransformXml.java,72,,"        final String expectedContent = new String(Files.readAllBytes(Paths.get(""src/test/resources/TestTransformXml/math.html""))).trim();"
193927,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestTransformXml.java,152,,"        runner.addControllerService(""simple-key-value-lookup-service"", service);"
193928,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestTransformXml.java,188,,"        runner.setProperty(service, ""math"", ""<xsl:stylesheet version=\""2.0\"" xmlns:xsl=\""http://www.w3.org/1999/XSL/Transform\"" xmlns:xs=\""http://www.w3.org/2001/XMLSchema\"">"""
193929,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestUnpackContent.java,59,,"        unpackRunner.enqueue(dataPath.resolve(""data.tar""));"
193930,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestUnpackContent.java,63,,"        attributes.put(""mime.type"", UnpackContent.PackageFormat.TAR_FORMAT.getMimeType());"
193931,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestUnpackContent.java,166,,"        unpackRunner.enqueue(dataPath.resolve(""data.zip""));"
193932,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestUnpackContent.java,203,,"        unpackRunner.enqueue(dataPath.resolve(""invalid_data.zip""));"
193933,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestUpdateRecord.java,64,,"        runner.addControllerService(""reader"", readerService);"
193934,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestUpdateRecord.java,66,,"        runner.addControllerService(""writer"", writerService);"
193935,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestUpdateRecord.java,72,,"        readerService.addSchemaField(""name"", RecordFieldType.STRING);"
193936,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestUpdateRecord.java,79,,"        runner.setProperty(""/name"", ""Jane Doe"");"
193937,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestUpdateRecord.java,82,,"        readerService.addRecord(""John Doe"", 35);"
193938,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestUpdateRecord.java,222,,"        runner.setProperty(jsonWriter, ""Pretty Print JSON"", ""true"");"
193939,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestUpdateRecord.java,222,,"        runner.setProperty(jsonWriter, ""Pretty Print JSON"", ""true"");"
193940,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestUpdateRecord.java,223,,"        runner.setProperty(jsonWriter, ""Schema Write Strategy"", ""full-schema-attribute"");"
193941,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestUpdateRecord.java,223,,"        runner.setProperty(jsonWriter, ""Schema Write Strategy"", ""full-schema-attribute"");"
193942,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestUpdateRecord.java,241,,"        final String inputSchemaText = new String(Files.readAllBytes(Paths.get(""src/test/resources/TestUpdateRecord/schema/person-with-name-record.avsc"")));"
193943,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestUpdateRecord.java,256,,"        runner.enqueue(Paths.get(""src/test/resources/TestUpdateRecord/input/person.json""));"
193944,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestUpdateRecord.java,271,,"        final String inputSchemaText = new String(Files.readAllBytes(Paths.get(""src/test/resources/TestUpdateRecord/schema/person-with-address.avsc"")));"
193945,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestUpdateRecord.java,287,,"        runner.setProperty(""/address[*]/city"", ""newCity"");"
193946,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestUpdateRecord.java,393,,"        final String outputSchemaText = new String(Files.readAllBytes(Paths.get(""src/test/resources/TestUpdateRecord/schema/name-fields-only.avsc"")));"
193947,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestUpdateRecord.java,413,,"        final String expectedOutput = new String(Files.readAllBytes(Paths.get(""src/test/resources/TestUpdateRecord/output/name-fields-only.json"")));"
193948,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestUpdateRecord.java,543,,"        final String inputSchemaText = new String(Files.readAllBytes(Paths.get(""src/test/resources/TestUpdateRecord/schema/multi-arrays.avsc"")));"
193949,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestUpdateRecord.java,559,,"        runner.enqueue(Paths.get(""src/test/resources/TestUpdateRecord/input/multi-arrays.json""));"
193950,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestUpdateRecord.java,560,,"        runner.setProperty(""/numbers[*]"", ""8"");"
193951,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestUpdateRecord.java,564,,"        expectedOutput = expectedOutput.replaceFirst(""1, null, 4"", ""8, 8, 8"");"
193952,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestUpdateRecord.java,650,,"        runner.setProperty(""/peoples[*]"", ""/peoples[3]"");"
193953,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestUpdateRecord.java,654,,"        int count = StringUtils.countMatches(content, ""Mary Doe"");"
193954,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestValidateCsv.java,31,,"        runner.setProperty(ValidateCsv.HEADER, ""true"");"
193955,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestValidateCsv.java,86,,"        runner.setProperty(ValidateCsv.END_OF_LINE_CHARACTER, ""\r\n"");"
193956,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestValidateCsv.java,88,,"        runner.setProperty(ValidateCsv.HEADER, ""false"");"
193957,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestValidateRecord.java,72,,"        runner.addControllerService(""reader"", csvReader);"
193958,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestValidateRecord.java,73,,"        runner.setProperty(csvReader, CSVUtils.FIRST_LINE_IS_HEADER, ""true"");"
193959,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestValidateRecord.java,75,,"        runner.setProperty(csvReader, CSVUtils.TRAILING_DELIMITER, ""false"");"
193960,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestValidateRecord.java,79,,"        runner.addControllerService(""writer"", csvWriter);"
193961,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestValidateRecord.java,80,,"        runner.setProperty(csvWriter, ""Schema Write Strategy"", ""full-schema-attribute"");"
193962,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestValidateRecord.java,80,,"        runner.setProperty(csvWriter, ""Schema Write Strategy"", ""full-schema-attribute"");"
193963,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestValidateRecord.java,118,,"        final String schema = new String(Files.readAllBytes(Paths.get(""src/test/resources/TestUpdateRecord/schema/person-with-name-string.avsc"")), ""UTF-8"");"
193964,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestValidateRecord.java,133,,"        final MockRecordWriter invalidWriter = new MockRecordWriter(""invalid"", true);"
193965,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestValidateRecord.java,134,,"        runner.addControllerService(""invalid-writer"", invalidWriter);"
193966,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestValidateRecord.java,154,,"        validFlowFile.assertAttributeEquals(""record.count"", ""2"");"
193967,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestValidateRecord.java,378,,"        runner.setProperty(jsonReader, SchemaAccessUtils.SCHEMA_ACCESS_STRATEGY, ""schema-text-property"");"
193968,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestValidateRecord.java,518,,"        runner.enqueue(Paths.get(""src/test/resources/TestValidateRecord/timestamp.json""));"
193969,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestValidateRecord.java,622,,"        runner.setProperty(ValidateRecord.VALIDATION_DETAILS_ATTRIBUTE_NAME, ""valDetails"");"
193970,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestWait.java,62,,"        runner.setProperty(Wait.RELEASE_SIGNAL_IDENTIFIER, ""${releaseSignalAttribute}"");"
193971,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestWait.java,65,,"        props.put(""releaseSignalAttribute"", ""1"");"
193972,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestWait.java,143,,"        protocol.notify(""notification-id"", ""counter-B"", 2, signalAttributes);"
193973,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestWait.java,248,,"        cachedAttributes.put(""both"", ""notifyValue"");"
193974,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestWait.java,248,,"        cachedAttributes.put(""both"", ""notifyValue"");"
193975,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestWait.java,249,,"        cachedAttributes.put(""uuid"", ""notifyUuid"");"
193976,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestWait.java,249,,"        cachedAttributes.put(""uuid"", ""notifyUuid"");"
193977,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestWait.java,250,,"        cachedAttributes.put(""notify.only"", ""notifyValue"");"
193978,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestWait.java,254,,"        protocol.notify(""key"", ""default"", 1, cachedAttributes);"
193979,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestWait.java,261,,"        waitAttributes.put(""wait.only"", ""waitValue"");"
193980,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestWait.java,261,,"        waitAttributes.put(""wait.only"", ""waitValue"");"
193981,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestWait.java,263,,"        String flowFileContent = ""content"";"
193982,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestWait.java,264,,"        runner.enqueue(flowFileContent.getBytes(""UTF-8""), waitAttributes);"
193983,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestWait.java,341,,"        runner.setProperty(Wait.TARGET_SIGNAL_COUNT, ""${targetSignalCount}"");"
193984,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestWait.java,345,,"        waitAttributes.put(""targetSignalCount"", ""3"");"
193985,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestWait.java,428,,"        runner.setProperty(Wait.SIGNAL_COUNTER_NAME, ""${signalCounterName}"");"
193986,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestWait.java,433,,"        waitAttributes.put(""signalCounterName"", ""counter-B"");"
193987,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestWait.java,522,,"        protocol.notify(""key"", ""counter"", 1, cachedAttributes);"
193988,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestWaitNotifyProtocol.java,83,,"        final String signalId = ""signal-id"";"
193989,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestWaitNotifyProtocol.java,201,,"        protocol.notify(signalId, ""success"", 1, null);"
193990,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/TestWaitNotifyProtocol.java,212,,"        protocol.notify(signalId, ""failure"", 1, null);"
193991,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/db/impl/TestMSSQL2008DatabaseAdapter.java,28,,"        String sql = db.getSelectStatement(""database.tablename"", ""some(set),of(columns),that,might,contain,methods,a.*"", """", """", null, null);"
193992,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/db/impl/TestMSSQL2008DatabaseAdapter.java,28,,"        String sql = db.getSelectStatement(""database.tablename"", ""some(set),of(columns),that,might,contain,methods,a.*"", """", """", null, null);"
193993,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/db/impl/TestMSSQL2008DatabaseAdapter.java,32,,"        sql = db.getSelectStatement(""database.tablename"", ""some(set),of(columns),that,might,contain,methods,a.*"", ""that=\'some\""\' value\'"", """", null, null);"
193994,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/db/impl/TestMSSQL2008DatabaseAdapter.java,56,,"        sql = db.getSelectStatement(""database.tablename"", ""some(set),of(columns),that,might,contain,methods,a.*"", """", ""contain"", 100L, null);"
193995,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/db/impl/TestMSSQLDatabaseAdapter.java,28,,"        String sql1 = db.getSelectStatement(""database.tablename"", ""some(set),of(columns),that,might,contain,methods,a.*"","""","""",null,null);"
193996,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/db/impl/TestMSSQLDatabaseAdapter.java,28,,"        String sql1 = db.getSelectStatement(""database.tablename"", ""some(set),of(columns),that,might,contain,methods,a.*"","""","""",null,null);"
193997,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/db/impl/TestMSSQLDatabaseAdapter.java,32,,"        String sql2 = db.getSelectStatement(""database.tablename"", ""some(set),of(columns),that,might,contain,methods,a.*"",""that=\'some\""\' value\'"","""",null,null);"
193998,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/db/impl/TestMSSQLDatabaseAdapter.java,61,,"        String sql2 = db.getSelectStatement(""database.tablename"", ""some(set),of(columns),that,might,contain,methods,a.*"","""",""contain"",100L,null);"
193999,./TargetProjects/nifi/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/test/java/org/apache/nifi/processors/standard/db/impl/TestMySQLDatabaseAdapter.java,47,,"        testGetUpsertStatement(null, Collections.singletonList(""notEmpty""), Collections.singletonList(""notEmpty""), new IllegalArgumentException(""Table name cannot be null or blank""));"
