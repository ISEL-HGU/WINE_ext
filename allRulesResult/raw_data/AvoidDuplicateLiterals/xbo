40000,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,6382,,"                    @YamlProperty(name = ""parameters"", type = ""object""),"
40001,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,6382,,"                    @YamlProperty(name = ""parameters"", type = ""object""),"
40002,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,6437,,"                        throw new IllegalStateException(""url must not be set when using Endpoint DSL"");"
40003,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,6522,,"                    @YamlProperty(name = ""urn"", type = ""string"", required = true),"
40004,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,6885,,"                    @YamlProperty(name = ""context-path"", type = ""string"", required = true),"
40005,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,6894,,"                    @YamlProperty(name = ""namespace-prefix-ref"", type = ""string""),"
40006,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,6900,,"                    @YamlProperty(name = ""schema"", type = ""string""),"
40007,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,7036,,"                    @YamlProperty(name = ""pre-compile"", type = ""boolean""),"
40008,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,7175,,"                    @YamlProperty(name = ""permissions"", type = ""string""),"
40009,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,7329,,"                    @YamlProperty(name = ""header-name"", type = ""string""),"
40010,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,7331,,"                    @YamlProperty(name = ""option"", type = ""string""),"
40011,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,7442,,"                    @YamlProperty(name = ""namespace"", type = ""string""),"
40012,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,7449,,"                    @YamlProperty(name = ""username"", type = ""string"")"
40013,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,7822,,"                    @YamlProperty(name = ""message"", type = ""string"", required = true)"
40014,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,7899,,"                    @YamlProperty(name = ""copy"", type = ""boolean""),"
40015,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,8430,,"                    @YamlProperty(name = ""on-prepare-ref"", type = ""string""),"
40016,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,8431,,"                    @YamlProperty(name = ""parallel-aggregate"", type = ""boolean""),"
40017,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,8435,,"                    @YamlProperty(name = ""stop-on-aggregate-exception"", type = ""boolean""),"
40018,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,8436,,"                    @YamlProperty(name = ""stop-on-exception"", type = ""boolean""),"
40019,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,8440,,"                    @YamlProperty(name = ""streaming"", type = ""boolean""),"
40020,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,8701,,"                    @YamlProperty(name = ""mode"", type = ""string""),"
40021,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,10053,,"                    @YamlProperty(name = ""content-type-format"", type = ""string""),"
40022,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,10059,,"                    @YamlProperty(name = ""instance-class"", type = ""string""),"
40023,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,10798,,"                    @YamlProperty(name = ""name"", type = ""string"")"
40024,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,10859,,"                    @YamlProperty(name = ""exclude-pattern"", type = ""string""),"
40025,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,11233,,"                    @YamlProperty(name = ""component"", type = ""string""),"
40026,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,11330,,"                    @YamlProperty(name = ""api-property"", type = ""array:org.apache.camel.model.rest.RestPropertyDefinition""),"
40027,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,11566,,"                    @YamlProperty(name = ""security-definitions"", type = ""object:org.apache.camel.model.rest.RestSecuritiesDefinition""),"
40028,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,11730,,"                    @YamlProperty(name = ""array-type"", type = ""string""),"
40029,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,11731,,"                    @YamlProperty(name = ""collection-format"", type = ""enum:csv,multi,pipes,ssv,tsv""),"
40030,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,11732,,"                    @YamlProperty(name = ""data-format"", type = ""string""),"
40031,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,11733,,"                    @YamlProperty(name = ""data-type"", type = ""string""),"
40032,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,11734,,"                    @YamlProperty(name = ""default-value"", type = ""string""),"
40033,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,11736,,"                    @YamlProperty(name = ""examples"", type = ""array:org.apache.camel.model.rest.RestPropertyDefinition""),"
40034,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,11738,,"                    @YamlProperty(name = ""required"", type = ""boolean""),"
40035,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,12336,,"                    @YamlProperty(name = ""scopes"", type = ""array:org.apache.camel.model.rest.RestPropertyDefinition""),"
40036,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,12490,,"            nodes = ""ribbon-load-balancer"","
40037,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,13399,,"                    @YamlProperty(name = ""expression-ref"", type = ""string""),"
40038,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,13403,,"                    @YamlProperty(name = ""load-balancer-ref"", type = ""string""),"
40039,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,13407,,"                    @YamlProperty(name = ""service-chooser-ref"", type = ""string""),"
40040,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,13408,,"                    @YamlProperty(name = ""service-discovery-ref"", type = ""string""),"
40041,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,13409,,"                    @YamlProperty(name = ""service-filter-ref"", type = ""string""),"
40042,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,13412,,"                    @YamlProperty(name = ""zookeeper-service-discovery"", type = ""object:org.apache.camel.model.cloud.ZooKeeperServiceCallServiceDiscoveryConfiguration"")"
40043,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,14425,,"                    @YamlProperty(name = ""comparator-ref"", type = ""string""),"
40044,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,14976,,"                    @YamlProperty(name = ""allow-empty-directory"", type = ""boolean""),"
40045,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,14978,,"                    @YamlProperty(name = ""max-decompressed-size"", type = ""number""),"
40046,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,14979,,"                    @YamlProperty(name = ""preserve-path-elements"", type = ""boolean""),"
40047,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,15035,,"                    @YamlProperty(name = ""allow-core-thread-time-out"", type = ""boolean""),"
40048,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,15038,,"                    @YamlProperty(name = ""max-pool-size"", type = ""number""),"
40049,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,15040,,"                    @YamlProperty(name = ""pool-size"", type = ""number""),"
40050,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,15041,,"                    @YamlProperty(name = ""rejected-policy"", type = ""string""),"
40051,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,15042,,"                    @YamlProperty(name = ""time-unit"", type = ""string"")"
40052,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,15575,,"                    @YamlProperty(name = ""auto-start-components"", type = ""boolean""),"
40053,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,15677,,"                    @YamlProperty(name = ""group"", type = ""string""),"
40054,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,16075,,"                    @YamlProperty(name = ""as-map"", type = ""boolean""),"
40055,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,16076,,"                    @YamlProperty(name = ""comment"", type = ""string""),"
40056,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,16078,,"                    @YamlProperty(name = ""empty-value"", type = ""string""),"
40057,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,16079,,"                    @YamlProperty(name = ""header-extraction-enabled"", type = ""boolean""),"
40058,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,16080,,"                    @YamlProperty(name = ""headers-disabled"", type = ""boolean""),"
40059,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,16082,,"                    @YamlProperty(name = ""ignore-leading-whitespaces"", type = ""boolean""),"
40060,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,16083,,"                    @YamlProperty(name = ""ignore-trailing-whitespaces"", type = ""boolean""),"
40061,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,16086,,"                    @YamlProperty(name = ""normalized-line-separator"", type = ""string""),"
40062,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,16087,,"                    @YamlProperty(name = ""null-value"", type = ""string""),"
40063,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,16088,,"                    @YamlProperty(name = ""number-of-records-to-read"", type = ""number""),"
40064,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,16092,,"                    @YamlProperty(name = ""skip-empty-lines"", type = ""boolean""),"
40065,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-deserializers/src/generated/java/org/apache/camel/dsl/yaml/deserializers/ModelDeserializers.java,16093,,"                    @YamlProperty(name = ""univocity-header"", type = ""array:org.apache.camel.model.dataformat.UniVocityHeader"")"
40066,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-maven-plugin/src/main/java/org/apache/camel/maven/dsl/yaml/GenerateYamlDeserializersMojo.java,132,,"            .addParameter(Node.class, ""node"")"
40067,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-maven-plugin/src/main/java/org/apache/camel/maven/dsl/yaml/GenerateYamlDeserializersMojo.java,138,,"                    .addStatement(""return null"")"
40068,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-maven-plugin/src/main/java/org/apache/camel/maven/dsl/yaml/GenerateYamlDeserializersMojo.java,155,,"                    cb.beginControlFlow(""case $S:"", e.getKey());"
40069,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-maven-plugin/src/main/java/org/apache/camel/maven/dsl/yaml/GenerateYamlDeserializersMojo.java,200,,"                        ""properties"","
40070,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-maven-plugin/src/main/java/org/apache/camel/maven/dsl/yaml/GenerateYamlDeserializersMojo.java,204,,"                            ""object"","
40071,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-maven-plugin/src/main/java/org/apache/camel/maven/dsl/yaml/GenerateYamlDeserializersMojo.java,321,,"                    if (holder.attributes.containsKey(""type"")) {"
40072,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-maven-plugin/src/main/java/org/apache/camel/maven/dsl/yaml/GenerateYamlDeserializersMojo.java,534,,"            setProperty.addStatement(""String val = asText(node)"");"
40073,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-maven-plugin/src/main/java/org/apache/camel/maven/dsl/yaml/GenerateYamlDeserializersMojo.java,536,,"            setProperty.addStatement(""break"");"
40074,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-maven-plugin/src/main/java/org/apache/camel/maven/dsl/yaml/GenerateYamlDeserializersMojo.java,648,,"        annotationValue(info, XML_ROOT_ELEMENT_ANNOTATION_CLASS, ""name"")"
40075,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-maven-plugin/src/main/java/org/apache/camel/maven/dsl/yaml/GenerateYamlDeserializersMojo.java,709,,"                        cb.addStatement(""$L val = asType(node, $L.class)"", type.asString(), type.asString());"
40076,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-maven-plugin/src/main/java/org/apache/camel/maven/dsl/yaml/GenerateYamlDeserializersMojo.java,738,,"                        cb.addStatement(""target.set$L(val)"", StringHelper.capitalize(field.name()));"
40077,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-maven-plugin/src/main/java/org/apache/camel/maven/dsl/yaml/GenerateYamlDeserializersMojo.java,793,,"                                ""array"","
40078,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-maven-plugin/src/main/java/org/apache/camel/maven/dsl/yaml/GenerateYamlDeserializersMojo.java,837,,"                                yamlPropertyWithSubtype(fieldName, ""array"", ""string"", isRequired(field))"
40079,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-maven-plugin/src/main/java/org/apache/camel/maven/dsl/yaml/GenerateYamlDeserializersMojo.java,930,,"                case ""boolean"":"
40080,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-maven-plugin/src/main/java/org/apache/camel/maven/dsl/yaml/GenerateYamlDeserializersMojo.java,941,,"                    annotations.add(yamlProperty(fieldName, ""number"", isRequired(field)));"
40081,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-maven-plugin/src/main/java/org/apache/camel/maven/dsl/yaml/GenerateYamlDeserializersMojo.java,1061,,"                    cb.addStatement(""target.$L(val)"", method.name());"
40082,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-maven-plugin/src/main/java/org/apache/camel/maven/dsl/yaml/GenerateYamlSchemaMojo.java,70,,"        root.put(""type"", ""array"");"
40083,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-maven-plugin/src/main/java/org/apache/camel/maven/dsl/yaml/GenerateYamlSchemaMojo.java,70,,"        root.put(""type"", ""array"");"
40084,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-maven-plugin/src/main/java/org/apache/camel/maven/dsl/yaml/GenerateYamlSchemaMojo.java,72,,"        items = root.putObject(""items"");"
40085,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-maven-plugin/src/main/java/org/apache/camel/maven/dsl/yaml/GenerateYamlSchemaMojo.java,102,,"                    items.with(""properties"")"
40086,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-maven-plugin/src/main/java/org/apache/camel/maven/dsl/yaml/GenerateYamlSchemaMojo.java,104,,"                        .put(""$ref"", ""#/items/definitions/"" + entry.getKey());"
40087,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-maven-plugin/src/main/java/org/apache/camel/maven/dsl/yaml/GenerateYamlSchemaMojo.java,104,,"                        .put(""$ref"", ""#/items/definitions/"" + entry.getKey());"
40088,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-maven-plugin/src/main/java/org/apache/camel/maven/dsl/yaml/GenerateYamlSchemaMojo.java,151,,"                Comparator.comparing(property -> annotationValue(property, ""name"").map(AnnotationValue::asString).orElse("""")));"
40089,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-maven-plugin/src/main/java/org/apache/camel/maven/dsl/yaml/GenerateYamlSupportMojo.java,119,,"            = ClassName.get(""org.apache.camel.dsl.yaml.common"", ""YamlDeserializerResolver"");"
40090,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-maven-plugin/src/main/java/org/apache/camel/maven/dsl/yaml/GenerateYamlSupportMojo.java,139,,"            = ClassName.get(""org.snakeyaml.engine.v2.nodes"", ""Node"");"
40091,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-maven-plugin/src/main/java/org/apache/camel/maven/dsl/yaml/GenerateYamlSupportMojo.java,269,,"        builder.addMember(""name"", ""$S"", name);"
40092,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-maven-plugin/src/main/java/org/apache/camel/maven/dsl/yaml/GenerateYamlSupportMojo.java,272,,"            builder.addMember(""required"", ""$L"", required);"
40093,./TargetProjects/camel/dsl/camel-yaml-dsl/camel-yaml-dsl-maven-plugin/src/main/java/org/apache/camel/maven/dsl/yaml/GenerateYamlSupportMojo.java,574,,"                        .filter(value -> !""##default"".equals(value)),"
40094,./TargetProjects/camel/test-infra/camel-test-infra-ignite/src/test/java/org/apache/camel/test/infra/ignite/services/IgniteEmbeddedService.java,62,,"        System.setProperty(""IGNITE_QUIET"", ""true"");"
40095,./TargetProjects/camel/tests/camel-itest-jms2/src/test/java/org/apache/camel/itest/jms2/Jms2DeliveryDelayTest.java,30,,"        mock.expectedBodiesReceived(""Hello World"");"
40096,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/greeter/RecipientListCxf2Test.java,66,,"        headers.put(""foo"", ""cxf:bean:clientEndpoint?address=http://localhost:"" + port1 + ""/SoapContext/SoapPort"");"
40097,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/greeter/RecipientListCxf2Test.java,66,,"        headers.put(""foo"", ""cxf:bean:clientEndpoint?address=http://localhost:"" + port1 + ""/SoapContext/SoapPort"");"
40098,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/greeter/RecipientListCxf2Test.java,66,,"        headers.put(""foo"", ""cxf:bean:clientEndpoint?address=http://localhost:"" + port1 + ""/SoapContext/SoapPort"");"
40099,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/greeter/RecipientListCxf2Test.java,69,,"        Object out = template.requestBodyAndHeaders(""direct:start"", ""Willem"", headers, String.class);"
40100,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/greeter/RecipientListCxfTest.java,66,,"        headers.put(""foo"", ""cxf:bean:serviceEndpoint"");"
40101,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/greeter/RecipientListCxfTest.java,69,,"        Object out = template.requestBodyAndHeaders(""direct:start"", ""Willem"", headers, String.class);"
40102,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/idempotent/IdempotentConsumerTest.java,35,,"        template.sendBodyAndHeader(""direct:start"", ""one"", ""messageId"", 1);"
40103,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/idempotent/IdempotentConsumerTest.java,35,,"        template.sendBodyAndHeader(""direct:start"", ""one"", ""messageId"", 1);"
40104,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/issues/AdviceWithWeaveFirstLastTest.java,44,,"                weaveAddFirst().to(""mock:a"").transform(constant(""Bye World""));"
40105,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/issues/AdviceWithWeaveFirstLastTest.java,44,,"                weaveAddFirst().to(""mock:a"").transform(constant(""Bye World""));"
40106,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/issues/AdviceWithWeaveFirstLastTest.java,51,,"        getMockEndpoint(""mock:a"").expectedBodiesReceived(""Hello World"");"
40107,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/issues/IntercepFromAndStrategyTest.java,36,,"    @Produce(""direct:start"")"
40108,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/issues/JettyHttpFileCacheTest.java,42,,"        context.getStreamCachingStrategy().setSpoolDirectory(""target/cachedir"");"
40109,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/issues/JettyHttpTest.java,35,,"        MockEndpoint mock = getMockEndpoint(""mock:result"");"
40110,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/jetty/JettyBridgeHostHeaderIssueTest.java,49,,"        Exchange reply = template.request(""http:localhost:"" + port + ""/myapp"", new Processor() {"
40111,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/jetty/JettyBridgeHostHeaderIssueTest.java,49,,"        Exchange reply = template.request(""http:localhost:"" + port + ""/myapp"", new Processor() {"
40112,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/jetty/JettyBridgeHostHeaderIssueTest.java,58,,"        assertEquals(""localhost:"" + port, receivedHostHeaderEndpoint1);"
40113,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/jetty/JettyBridgeHostHeaderIssueTest.java,112,,"                from(""jetty:http://localhost:"" + port + ""/myapp?matchOnUriPrefix=true"")"
40114,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/jetty/JettyBridgeHostHeaderIssueTest.java,114,,"                        .to(""http://localhost:"" + port2"
40115,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/jetty/JettyBridgeHostHeaderIssueTest.java,125,,"                                receivedHostHeaderEndpoint1 = exchange.getIn().getHeader(""Host"", String.class);"
40116,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/jetty/JettyFailoverRoundRobinTest.java,34,,"    private String bad = ""jetty:http://localhost:"" + port1 + ""/bad"";"
40117,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/jetty/JettyFailoverRoundRobinTest.java,38,,"    private String hbad = ""http://localhost:"" + port1 + ""/bad"";"
40118,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/jetty/JettySimulateFailoverRoundRobinTest.java,41,,"    private String bad = ""jetty:http://localhost:"" + port1 + ""/bad"";"
40119,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/jetty/JettySimulateFailoverRoundRobinTest.java,45,,"    private String hbad = ""http://localhost:"" + port1 + ""/bad"";"
40120,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/jms/AdviceWithTransactionIssueTest.java,48,,"                weaveById(""mock-b*"").after().to(""mock:last"");"
40121,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/jms/AdviceWithTransactionIssueTest.java,54,,"        mockLast.expectedBodiesReceived(""bar"");"
40122,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/jms/JmsHttpJmsTest.java,49,,"        mock.expectedBodiesReceived(""Bye World"");"
40123,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/jms/JmsJaxbTest.java,44,,"        template.sendBody(""jms:queue:in"", ""<purchaseOrder name='Wine' amount='123.45' price='2.22'/>"");"
40124,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/jms/JmsResequencerTest.java,45,,"    private ReusableBean b1 = new ReusableBean(""myBean1"");"
40125,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/jms/JmsResequencerTest.java,46,,"    private ReusableBean b2 = new ReusableBean(""myBean2"");"
40126,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/jms/JmsResequencerTest.java,47,,"    private ReusableBean b3 = new ReusableBean(""myBean3"");"
40127,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/jms/JmsResequencerTest.java,77,,"        sendBodyAndHeader(endpointUri, ""msg4"", ""seqnum"", 4L);"
40128,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/netty/NettyAsyncRequestReplyTest.java,57,,"        String out = template.requestBody(""netty:tcp://localhost:"" + port + ""?textline=true&sync=true"", ""World"", String.class);"
40129,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/sql/FromJmsToJdbcIdempotentConsumerToJmsTest.java,66,,"        getMockEndpoint(""mock:a"").setResultWaitTime(30000);"
40130,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/sql/FromJmsToJdbcIdempotentConsumerToJmsTest.java,67,,"        getMockEndpoint(""mock:b"").setResultWaitTime(30000);"
40131,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/sql/FromJmsToJdbcIdempotentConsumerToJmsTest.java,85,,"        template.sendBodyAndHeader(""activemq2:queue:inbox"", ""A"", ""uid"", 123);"
40132,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/sql/FromJmsToJdbcIdempotentConsumerToJmsTest.java,85,,"        template.sendBodyAndHeader(""activemq2:queue:inbox"", ""A"", ""uid"", 123);"
40133,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/sql/FromJmsToJdbcIdempotentConsumerToJmsTest.java,93,,"                jdbcTemplate.queryForObject(""select count(*) from CAMEL_MESSAGEPROCESSED"", Integer.class));"
40134,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/sql/FromJmsToJdbcIdempotentConsumerToJmsTest.java,94,,"        Object out = consumer.receiveBody(""activemq2:queue:outbox"", 3000);"
40135,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/tx/Jms2RequiresNewTest.java,67,,"                from(""direct:start"").transacted(""PROPAGATION_REQUIRES_NEW"").to(""activemq:queue:start"");"
40136,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/validator/ValidatorSchemaImportTest.java,44,,"                from(""direct:start"")"
40137,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/validator/ValidatorSchemaImportTest.java,47,,"                        .to(""mock:valid"")"
40138,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/validator/ValidatorSchemaImportTest.java,49,,"                        .to(""mock:invalid"")"
40139,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/validator/ValidatorSchemaImportTest.java,51,,"                        .to(""mock:finally"")"
40140,./TargetProjects/camel/tests/camel-itest/src/test/java/org/apache/camel/itest/validator/ValidatorSchemaImportTest.java,59,,"                ""<childuser xmlns='http://foo.com/bar'><user><id>1</id><username>Test User</username></user></childuser>"");"
40141,./TargetProjects/camel/tooling/camel-tooling-model/src/main/java/org/apache/camel/tooling/model/JsonMapper.java,93,,"        JsonObject mprp = (JsonObject) obj.get(""properties"");"
40142,./TargetProjects/camel/tooling/camel-tooling-model/src/main/java/org/apache/camel/tooling/model/JsonMapper.java,109,,"                am.setDescription(mp.getStringOrDefault(""description"", """"));"
40143,./TargetProjects/camel/tooling/camel-tooling-model/src/main/java/org/apache/camel/tooling/model/JsonMapper.java,110,,"                am.setConsumerOnly(mp.getBooleanOrDefault(""consumerOnly"", false));"
40144,./TargetProjects/camel/tooling/camel-tooling-model/src/main/java/org/apache/camel/tooling/model/JsonMapper.java,111,,"                am.setProducerOnly(mp.getBooleanOrDefault(""producerOnly"", false));"
40145,./TargetProjects/camel/tooling/camel-tooling-model/src/main/java/org/apache/camel/tooling/model/JsonMapper.java,234,,"        model.setModelName(mobj.getString(""modelName""));"
40146,./TargetProjects/camel/tooling/camel-tooling-model/src/main/java/org/apache/camel/tooling/model/JsonMapper.java,235,,"        model.setModelJavaType(mobj.getString(""modelJavaType""));"
40147,./TargetProjects/camel/tooling/camel-tooling-model/src/main/java/org/apache/camel/tooling/model/JsonMapper.java,373,,"        obj.put(""name"", model.getName());"
40148,./TargetProjects/camel/tooling/camel-tooling-model/src/main/java/org/apache/camel/tooling/model/JsonMapper.java,376,,"        obj.put(""deprecated"", model.isDeprecated());"
40149,./TargetProjects/camel/tooling/camel-tooling-model/src/main/java/org/apache/camel/tooling/model/JsonMapper.java,378,,"        obj.put(""deprecationNote"", model.getDeprecationNote());"
40150,./TargetProjects/camel/tooling/camel-tooling-model/src/main/java/org/apache/camel/tooling/model/JsonMapper.java,380,,"        obj.put(""label"", model.getLabel());"
40151,./TargetProjects/camel/tooling/camel-tooling-model/src/main/java/org/apache/camel/tooling/model/JsonMapper.java,381,,"        obj.put(""javaType"", model.getJavaType());"
40152,./TargetProjects/camel/tooling/camel-tooling-model/src/main/java/org/apache/camel/tooling/model/JsonMapper.java,432,,"        option.setDefaultValue(mp.get(""defaultValue""));"
40153,./TargetProjects/camel/tooling/camel-tooling-model/src/main/java/org/apache/camel/tooling/model/JsonMapper.java,444,,"        option.setSourceType(mp.getString(""sourceType""));"
40154,./TargetProjects/camel/tooling/camel-tooling-model/src/test/java/org/apache/camel/tooling/model/StringsTest.java,33,,"                arguments(""List"", ""List<String>""), arguments(""List"", ""java.util.List<String>""),"
40155,./TargetProjects/camel/tooling/camel-tooling-util/src/main/java/org/apache/camel/tooling/util/srcgen/GenericType.java,100,,"        if (type.startsWith(""? extends "")) {"
40156,./TargetProjects/camel/tooling/camel-tooling-util/src/main/java/org/apache/camel/tooling/util/srcgen/JavaClass.java,283,,"        sb.append(""package "").append(packageName).append("";\n"");"
40157,./TargetProjects/camel/tooling/camel-tooling-util/src/main/java/org/apache/camel/tooling/util/srcgen/JavaClass.java,302,,"                    .append(isPublic ? ""public "" : """")"
40158,./TargetProjects/camel/tooling/camel-tooling-util/src/main/java/org/apache/camel/tooling/util/srcgen/JavaClass.java,303,,"                    .append(isStatic ? ""static "" : """")"
40159,./TargetProjects/camel/tooling/camel-tooling-util/src/main/java/org/apache/camel/tooling/util/srcgen/JavaClass.java,306,,"                    .append(""    "")"
40160,./TargetProjects/camel/tooling/camel-tooling-util/src/test/java/org/apache/camel/tooling/util/CamelVersionHelperTest.java,29,,"        assertTrue(isGE(""2.15.0"", ""2.15.0""));"
40161,./TargetProjects/camel/tooling/camel-tooling-util/src/test/java/org/apache/camel/tooling/util/CamelVersionHelperTest.java,41,,"        assertTrue(isGE(""3.0.0"", ""3.0.0""));"
40162,./TargetProjects/camel/tooling/camel-tooling-util/src/test/java/org/apache/camel/tooling/util/CamelVersionHelperTest.java,45,,"        assertTrue(isGE(""3.4.0"", ""3.4.0-SNAPSHOT""));"
40163,./TargetProjects/camel/tooling/camel-tooling-util/src/test/java/org/apache/camel/tooling/util/JavadocHelperTest.java,28,,"                                          + ""     * <p/>\n"""
40164,./TargetProjects/camel/tooling/camel-util-json/src/main/java/org/apache/camel/util/json/DeserializationException.java,27,,"        @SuppressWarnings(""javadoc"")"
40165,./TargetProjects/camel/tooling/camel-util-json/src/main/java/org/apache/camel/util/json/JsonArray.java,67,,"    @SuppressWarnings(""unchecked"")"
40166,./TargetProjects/camel/tooling/camel-util-json/src/main/java/org/apache/camel/util/json/JsonObject.java,214,,"    @SuppressWarnings(""unchecked"")"
40167,./TargetProjects/camel/tooling/camel-util-json/src/main/java/org/apache/camel/util/json/Jsoner.java,750,,"            @SuppressWarnings(""rawtypes"")"
40168,./TargetProjects/camel/tooling/maven/camel-api-component-maven-plugin/src/test/java/org/apache/camel/component/test/TestProxy.java,59,,"        return ""Greetings "" + name;"
40169,./TargetProjects/camel/tooling/maven/camel-api-component-maven-plugin/src/test/java/org/apache/camel/maven/JavaSourceParserTest.java,40,,"        assertEquals(2, parser.getParameterDocs().get(""create"").size());"
40170,./TargetProjects/camel/tooling/maven/camel-api-component-maven-plugin/src/test/java/org/apache/camel/maven/JavaSourceParserTest.java,69,,"        assertEquals(3, parser.getParameterDocs().get(""addFileEvidence"").size());"
40171,./TargetProjects/camel/tooling/maven/camel-api-component-maven-plugin/src/test/resources/AddressGateway.java,51,,"        NodeWrapper node = http.post(configuration.getMerchantPath() + ""/customers/"" + customerId + ""/addresses"", request);"
40172,./TargetProjects/camel/tooling/maven/camel-api-component-maven-plugin/src/test/resources/CustomGateway.java,90,,"        http.delete(configuration.getMerchantPath() + ""/customers/"" + id);"
40173,./TargetProjects/camel/tooling/maven/camel-api-component-maven-plugin/src/test/resources/CustomerGateway.java,90,,"        http.delete(configuration.getMerchantPath() + ""/customers/"" + id);"
40174,./TargetProjects/camel/tooling/maven/camel-api-component-maven-plugin/src/test/resources/DisputeGateway.java,63,,"            NodeWrapper response = http.put(configuration.getMerchantPath() + ""/disputes/"" + id + ""/accept"");"
40175,./TargetProjects/camel/tooling/maven/camel-api-component-maven-plugin/src/test/resources/DisputeGateway.java,70,,"            throw new NotFoundException(""dispute with id \"""" + id + ""\"" not found"");"
40176,./TargetProjects/camel/tooling/maven/camel-api-component-maven-plugin/src/test/resources/DisputeGateway.java,70,,"            throw new NotFoundException(""dispute with id \"""" + id + ""\"" not found"");"
40177,./TargetProjects/camel/tooling/maven/camel-javadoc-plugin/src/main/java/org/apache/maven/plugins/javadoc/AbstractJavadocMojo.java,385,,"    @Parameter( property = ""debug"", defaultValue = ""false"" )"
40178,./TargetProjects/camel/tooling/maven/camel-javadoc-plugin/src/main/java/org/apache/maven/plugins/javadoc/AbstractJavadocMojo.java,423,,"    @Parameter( property = ""maven.javadoc.failOnError"", defaultValue = ""true"" )"
40179,./TargetProjects/camel/tooling/maven/camel-javadoc-plugin/src/main/java/org/apache/maven/plugins/javadoc/AbstractJavadocMojo.java,1326,,"    @Parameter( property = ""stylesheet"", defaultValue = ""java"" )"
40180,./TargetProjects/camel/tooling/maven/camel-javadoc-plugin/src/main/java/org/apache/maven/plugins/javadoc/AbstractJavadocMojo.java,1780,,"        if ( ""pom"".equals( p.getPackaging().toLowerCase() ) )"
40181,./TargetProjects/camel/tooling/maven/camel-javadoc-plugin/src/main/java/org/apache/maven/plugins/javadoc/AbstractJavadocMojo.java,1984,,"            throw new MavenReportException( ""IOException: "" + getOutputDirectory() + "" is not a directory."" );"
40182,./TargetProjects/camel/tooling/maven/camel-javadoc-plugin/src/main/java/org/apache/maven/plugins/javadoc/AbstractJavadocMojo.java,2206,,"                        && files.remove( ""module-info.java"" ) )"
40183,./TargetProjects/camel/tooling/maven/camel-javadoc-plugin/src/main/java/org/apache/maven/plugins/javadoc/AbstractJavadocMojo.java,2577,,"                        ""Failed to resolve javadoc bundles from dependencies: "" + e.getMessage(), e );"
40184,./TargetProjects/camel/tooling/maven/camel-javadoc-plugin/src/main/java/org/apache/maven/plugins/javadoc/AbstractJavadocMojo.java,3641,,"                        && ( !activeProxies.containsKey( ""http"" )"
40185,./TargetProjects/camel/tooling/maven/camel-javadoc-plugin/src/main/java/org/apache/maven/plugins/javadoc/AbstractJavadocMojo.java,3696,,"                javadocExecutable = tc.findTool( ""javadoc"" );"
40186,./TargetProjects/camel/tooling/maven/camel-javadoc-plugin/src/main/java/org/apache/maven/plugins/javadoc/AbstractJavadocMojo.java,4375,,"                if ( currentFile.contains( ""doc-files"" ) )"
40187,./TargetProjects/camel/tooling/maven/camel-javadoc-plugin/src/main/java/org/apache/maven/plugins/javadoc/AbstractJavadocMojo.java,4614,,"                    ""Unable to write '"" + optionsFile.getName() + ""' temporary file for command execution"", e );"
40188,./TargetProjects/camel/tooling/maven/camel-javadoc-plugin/src/main/java/org/apache/maven/plugins/javadoc/AbstractJavadocMojo.java,6470,,"                            + link + "" with /"" + PACKAGE_LIST + "" or / "" + ELEMENT_LIST + "". Ignored it."" );"
40189,./TargetProjects/camel/tooling/maven/camel-javadoc-plugin/src/main/java/org/apache/maven/plugins/javadoc/StaleHelper.java,71,,"                        state.add(p + "" = "" + lastmod(p));"
40190,./TargetProjects/camel/tooling/maven/camel-maven-plugin/src/main/java/org/apache/camel/maven/RunMojo.java,732,,"                               + "" to classpath"");"
40191,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/AbstractGenerateConfigurerMojo.java,206,,"                throw new MojoExecutionException(""Error processing class: "" + fqn, e);"
40192,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/EndpointDslMojo.java,292,,"            if (option.getLabel() != null && option.getLabel().contains(""advanced"")) {"
40193,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/EndpointDslMojo.java,308,,"            consumerClass.implementInterface(""EndpointConsumerBuilder"");"
40194,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/EndpointDslMojo.java,310,,"            consumerClass.getJavaDoc().setText(""Builder for endpoint consumers for the "" + model.getTitle() + "" component."");"
40195,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/EndpointDslMojo.java,320,,"                        .setBody(""return (Advanced"" + consumerName + "") this;"");"
40196,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/EndpointDslMojo.java,329,,"            producerClass.implementInterface(""EndpointProducerBuilder"");"
40197,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/EndpointDslMojo.java,394,,"        javaClass.addAnnotation(Generated.class).setStringValue(""value"", EndpointDslMojo.class.getName());"
40198,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/EndpointDslMojo.java,400,,"            if (""path"".equals(option.getKind())) {"
40199,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/EndpointDslMojo.java,457,,"                    baseDesc += ""@@REPLACE_ME@@"";"
40200,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/EndpointDslMojo.java,493,,"                                    ""return this;\n"");"
40201,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/EndpointDslMojo.java,501,,"                    text += ""\n@return the dsl builder\n"";"
40202,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/EndpointDslMojo.java,569,,"        Method method = javaClass.addMethod().setStatic().setName(""endpointBuilder"")"
40203,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/EndpointDslMojo.java,588,,"                    .setBodyF(""return %s.%s(%s);"", javaClass.getName(), ""endpointBuilder"","
40204,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/EndpointDslMojo.java,589,,"                            ""\"""" + model.getScheme() + ""\"", path"");"
40205,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/EndpointDslMojo.java,611,,"                    .setBodyF(""return %s.%s(%s);"", javaClass.getName(), ""endpointBuilder"", ""componentName, path"");"
40206,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/EndpointHelper.java,43,,"        String answer = ""common"";"
40207,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/EndpointSchemaGeneratorMojo.java,420,,"            pfqn = parentData.getJavaType() + ""Configurer"";"
40208,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/EndpointSchemaGeneratorMojo.java,1530,,"            return ""string"";"
40209,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/EndpointSchemaGeneratorMojo.java,1538,,"            return ""array"";"
40210,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/EndpointSchemaGeneratorMojo.java,1572,,"            return ""integer"";"
40211,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/EndpointUriFactoryGenerator.java,67,,"        w.write(""    }\n"");"
40212,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/EndpointUriFactoryGenerator.java,69,,"        w.write(""    @Override\n"");"
40213,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/ModelXmlParserGeneratorMojo.java,212,,"        parser.setName(""ModelParser"");"
40214,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/ModelXmlParserGeneratorMojo.java,269,,"                    if (""##default"".equals(an)) {"
40215,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/ModelXmlParserGeneratorMojo.java,272,,"                    String sn = member instanceof Method ? mn : ""set"" + uppercase(mn);"
40216,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/ModelXmlParserGeneratorMojo.java,273,,"                    cases.put(an, ""def."" + sn + ""("" + conversion(parser, type, ""val"", clazz.getName()) + "");"");"
40217,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/ModelXmlParserGeneratorMojo.java,278,,"                    attributes = "" (def, key, val) -> {\n"" + ""    if (\"""" + entry.getKey() + ""\"".equals(key)) {\n"" + ""        "" + entry.getValue() + ""\n"" + ""        return true;\n"""
40218,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/ModelXmlParserGeneratorMojo.java,278,,"                    attributes = "" (def, key, val) -> {\n"" + ""    if (\"""" + entry.getKey() + ""\"".equals(key)) {\n"" + ""        "" + entry.getValue() + ""\n"" + ""        return true;\n"""
40219,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/ModelXmlParserGeneratorMojo.java,279,,"                                 + ""    }\n"" + ""    return "" + defaultCase + "";\n"" + ""}"";"
40220,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/ModelXmlParserGeneratorMojo.java,321,,"                                                   ""    "" + root.getSimpleName() + "" v = doParse"" + root.getSimpleName() + ""Ref(key);\n"" + ""    if (v != null) { \n"" + ""        """
40221,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/ModelXmlParserGeneratorMojo.java,322,,"                                                                               + (list ? ""doAdd(v, def."" + gn + ""(), def::"" + sn + "");"" : ""def."" + sn + ""(v);"") + ""\n"""
40222,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PackageDataFormatMojo.java,358,,"            if (""objectMapper"".equals(option.getName()) && ""json-johnzon"".equals(name)) {"
40223,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PackageDataFormatMojo.java,362,,"            if (""objectMapper"".equals(option.getName()) && ""json-jsonb"".equals(name)) {"
40224,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PackageDataFormatMojo.java,368,,"                    case ""json-gson"":"
40225,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PackageDataFormatMojo.java,371,,"                    case ""json-jackson"":"
40226,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PackageDataFormatMojo.java,383,,"                    case ""json-xstream"":"
40227,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PrepareCamelMainDocMojo.java,131,,"            String existing = Strings.between(text, ""// "" + kind + "" options: START"", ""// "" + kind + "" options: END"");"
40228,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PrepareCamelMainDocMojo.java,131,,"            String existing = Strings.between(text, ""// "" + kind + "" options: START"", ""// "" + kind + "" options: END"");"
40229,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PrepareCamelMainMojo.java,135,,"        if (""boolean"".equals(type) || ""java.lang.Boolean"".equals(type)) {"
40230,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PrepareCamelMainMojo.java,208,,"                    prefix = ""camel.main."";"
40231,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PrepareCatalogMojo.java,215,,"        } else if (name.endsWith("".adoc"")) {"
40232,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PrepareCatalogMojo.java,271,,"        getLog().info(""================================================================================"");"
40233,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PrepareCatalogMojo.java,288,,"        getLog().info(""Found "" + jsonFiles.size() + "" model json files"");"
40234,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PrepareCatalogMojo.java,756,,"                getLog().warn(""\t\t"" + name);"
40235,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PrepareCatalogMojo.java,843,,"                getLog().info(""\tUsed labels: "" + usedLabels.size());"
40236,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PrepareCatalogMojo.java,847,,"                        getLog().info(""\t\t\t"" + name);"
40237,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PrepareComponentMojo.java,62,,"    @Parameter(defaultValue = ""${project.basedir}/src/generated/resources"")"
40238,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PrepareExampleMojo.java,59,,"    @Parameter(property = ""startingFolder"", required = true, readonly = true, defaultValue = ""examples"")"
40239,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PropertyConfigurerGenerator.java,98,,"            w.write(""    @Override\n"");"
40240,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PropertyConfigurerGenerator.java,102,,"                w.write(""        switch (ignoreCase ? name.toLowerCase() : name) {\n"");"
40241,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PropertyConfigurerGenerator.java,109,,"                        w.write(String.format(""        case \""%s\"":\n"", option.getName().toLowerCase()));"
40242,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PropertyConfigurerGenerator.java,118,,"                w.write(""        }\n"");"
40243,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PropertyConfigurerGenerator.java,120,,"            w.write(""    }\n"");"
40244,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/SchemaGeneratorMojo.java,186,,"        if (Strings.isNullOrEmpty(aName) || ""##default"".equals(aName)) {"
40245,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/SchemaGeneratorMojo.java,222,,"            eipModel.getOptions().removeIf(o -> ""outputs"".equals(o.getName()));"
40246,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/SchemaGeneratorMojo.java,431,,"        EipOptionModel ep = createOption(name, displayName, ""attribute"", fieldTypeName,"
40247,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/SchemaGeneratorMojo.java,448,,"            if (""expression"".equals(name)) {"
40248,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/SchemaGeneratorMojo.java,497,,"            String kind = ""element"";"
40249,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/SchemaGeneratorMojo.java,629,,"        EipOptionModel ep = createOption(""group"", ""Group"", ""attribute"", ""java.lang.String"", false, """", docComment, false, null,"
40250,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/SchemaGeneratorMojo.java,730,,"        oneOfTypes.remove(""route"");"
40251,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/SchemaGeneratorMojo.java,1207,,"            return ""string"";"
40252,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/SchemaGeneratorMojo.java,1215,,"            return ""array"";"
40253,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/SchemaGeneratorMojo.java,1249,,"            return ""integer"";"
40254,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/TypeConverterLoaderGeneratorMojo.java,183,,"        writer.append(""/* "").append(GENERATED_MSG).append("" */\n"");"
40255,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/TypeConverterLoaderGeneratorMojo.java,184,,"        writer.append(""package "").append(p).append("";\n"");"
40256,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/TypeConverterLoaderGeneratorMojo.java,208,,"        writer.append(""    "").append(""public "").append(c).append(""() {\n"");"
40257,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/TypeConverterLoaderGeneratorMojo.java,209,,"        writer.append(""    }\n"");"
40258,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/TypeConverterLoaderGeneratorMojo.java,212,,"        writer.append(""    @Override\n"");"
40259,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/TypeConverterLoaderGeneratorMojo.java,257,,"        writer.append(""        }\n"");"
40260,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/UpdateReadmeMojo.java,161,,"            getLog().debug(""Found "" + componentNames.size() + "" components"");"
40261,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/UpdateReadmeMojo.java,168,,"                    File file = new File(componentDocDir, componentName + ""-"" + kind + "".adoc"");"
40262,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/UpdateReadmeMojo.java,211,,"                        getLog().info(""Updated doc file: "" + file);"
40263,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/UpdateReadmeMojo.java,213,,"                        getLog().debug(""No changes to doc file: "" + file);"
40264,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/UpdateReadmeMojo.java,217,,"                            throw new MojoExecutionException(""Failed build due failFast=true"");"
40265,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/UpdateReadmeMojo.java,224,,"                            File rootFile = findCamelDirectory(project.getBasedir(), ""core/camel-core"");"
40266,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/UpdateReadmeMojo.java,230,,"                                                ""catalog/camel-catalog/src/generated/resources/org/apache/camel/catalog/docs""),"
40267,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/UpdateReadmeMojo.java,232,,"                                String rep = ""$1\n"""
40268,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/UpdateReadmeMojo.java,233,,"                                             + ""//THIS FILE IS COPIED: EDIT THE SOURCE FILE:\n"""
40269,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/UpdateReadmeMojo.java,234,,"                                             + "":page-source: "" + root.relativize(file.toPath());"
40270,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/UpdateReadmeMojo.java,235,,"                                text = Pattern.compile(""^(= .+)$"", Pattern.MULTILINE).matcher(text).replaceAll(rep);"
40271,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/UpdateReadmeMojo.java,239,,"                            throw new MojoExecutionException(""Error reading file "" + file + "" Reason: "" + e, e);"
40272,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/UpdateReadmeMojo.java,239,,"                            throw new MojoExecutionException(""Error reading file "" + file + "" Reason: "" + e, e);"
40273,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/UpdateReadmeMojo.java,333,,"                    if (""bindy"".equals(dataFormatName)) {"
40274,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/UpdateReadmeMojo.java,428,,"                        option.setDescription(""*Autowired* "" + option.getDescription());"
40275,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/UpdateReadmeMojo.java,432,,"                        String desc = ""*Deprecated* "" + option.getDescription();"
40276,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/UpdateReadmeMojo.java,438,,"                            desc += "" Deprecation note: "" + option.getDeprecationNote();"
40277,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/UpdateReadmeMojo.java,796,,"            String existing = Strings.between(text, ""// "" + kind + "" options: START"", ""// "" + kind + "" options: END"");"
40278,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/UpdateReadmeMojo.java,796,,"            String existing = Strings.between(text, ""// "" + kind + "" options: START"", ""// "" + kind + "" options: END"");"
40279,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/generics/GenericsUtil.java,112,,"            throw new IllegalArgumentException(""Unsupported type "" + requiredType.getClass());"
40280,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/test/java/org/apache/camel/maven/packaging/JavadocTest.java,40,,"            ""class Test {\n"" +"
40281,./TargetProjects/camel/tooling/maven/camel-package-maven-plugin/src/test/java/org/apache/camel/maven/packaging/MvelHelperTest.java,55,,"        return Stream.of(arguments(""http"", ""http""),"
40282,./TargetProjects/camel/tooling/maven/camel-restdsl-openapi-plugin/src/main/java/org/apache/camel/maven/generator/openapi/AbstractGenerateMojo.java,102,,"    @Parameter(defaultValue = ""false"")"
40283,./TargetProjects/camel/tooling/maven/camel-restdsl-swagger-plugin/src/main/java/org/apache/camel/maven/generator/swagger/AbstractGenerateMojo.java,91,,"    @Parameter(defaultValue = ""false"")"
40284,./TargetProjects/camel/tooling/openapi-rest-dsl-generator/src/main/java/org/apache/camel/generator/openapi/OperationVisitor.java,143,,"            emit(""required"", toUse.required);"
40285,./TargetProjects/camel/tooling/openapi-rest-dsl-generator/src/main/java/org/apache/camel/generator/openapi/OperationVisitor.java,147,,"        emit(""description"", toUse.description);"
40286,./TargetProjects/camel/tooling/openapi-rest-dsl-generator/src/main/java/org/apache/camel/generator/openapi/RestDslGenerator.java,69,,"        @SuppressWarnings(""unchecked"")"
40287,./TargetProjects/camel/tooling/openapi-rest-dsl-generator/src/main/java/org/apache/camel/generator/openapi/RestDslYamlGenerator.java,135,,"        JsonNode r = node.get(""rest"");"
40288,./TargetProjects/camel/tooling/openapi-rest-dsl-generator/src/test/java/org/apache/camel/generator/openapi/OperationVisitorTest.java,41,,"        final Builder method = MethodSpec.methodBuilder(""configure"");"
40289,./TargetProjects/camel/tooling/openapi-rest-dsl-generator/src/test/java/org/apache/camel/generator/openapi/OperationVisitorTest.java,45,,"        final Oas20Parameter parameter = new Oas20Parameter(""param"");"
40290,./TargetProjects/camel/tooling/openapi-rest-dsl-generator/src/test/java/org/apache/camel/generator/openapi/OperationVisitorTest.java,46,,"        parameter.in = ""query"";"
40291,./TargetProjects/camel/tooling/openapi-rest-dsl-generator/src/test/java/org/apache/camel/generator/openapi/OperationVisitorTest.java,50,,"        assertThat(method.build().toString()).isEqualTo(""void configure() {\n"""
40292,./TargetProjects/camel/tooling/openapi-rest-dsl-generator/src/test/java/org/apache/camel/generator/openapi/OperationVisitorTest.java,51,,"                                                        + ""      param()\n"""
40293,./TargetProjects/camel/tooling/openapi-rest-dsl-generator/src/test/java/org/apache/camel/generator/openapi/OperationVisitorTest.java,52,,"                                                        + ""        .name(\""param\"")\n"""
40294,./TargetProjects/camel/tooling/openapi-rest-dsl-generator/src/test/java/org/apache/camel/generator/openapi/OperationVisitorTest.java,53,,"                                                        + ""        .type(org.apache.camel.model.rest.RestParamType.query)\n"""
40295,./TargetProjects/camel/tooling/openapi-rest-dsl-generator/src/test/java/org/apache/camel/generator/openapi/OperationVisitorTest.java,54,,"                                                        + ""        .required(false)\n"""
40296,./TargetProjects/camel/tooling/openapi-rest-dsl-generator/src/test/java/org/apache/camel/generator/openapi/OperationVisitorTest.java,55,,"                                                        + ""      .endParam()}\n"");"
40297,./TargetProjects/camel/tooling/openapi-rest-dsl-generator/src/test/java/org/apache/camel/generator/openapi/OperationVisitorTest.java,63,,"                = new OperationVisitor<>(emitter, new OperationFilter(), ""/path/{param}"", new DefaultDestinationGenerator());"
40298,./TargetProjects/camel/tooling/openapi-rest-dsl-generator/src/test/java/org/apache/camel/generator/openapi/OperationVisitorTest.java,70,,"        parameter.in = ""path"";"
40299,./TargetProjects/camel/tooling/openapi-rest-dsl-generator/src/test/java/org/apache/camel/generator/openapi/OperationVisitorTest.java,79,,"                                                        + ""        .type(org.apache.camel.model.rest.RestParamType.path)\n"""
40300,./TargetProjects/camel/tooling/openapi-rest-dsl-generator/src/test/java/org/apache/camel/generator/openapi/RestDslGeneratorTest.java,85,,"        assertThat(RestDslGenerator.determineBasePathFrom(oas30Document)).isEqualTo(""/api/v3"");"
40301,./TargetProjects/camel/tooling/openapi-rest-dsl-generator/src/test/java/org/apache/camel/generator/openapi/RestDslSourceCodeGeneratorV3Test.java,31,,"        openapi.addServer(""http://api.example.org/"", ""test server url"");"
40302,./TargetProjects/camel/tooling/swagger-rest-dsl-generator/src/main/java/org/apache/camel/generator/swagger/RestDslGenerator.java,53,,"        @SuppressWarnings(""unchecked"")"
40303,./TargetProjects/camel-k-runtime/camel-k-core/api/src/generated/java/org/apache/camel/k/SourceDefinitionConfigurer.java,30,,"        case ""interceptors"":"
40304,./TargetProjects/camel-k-runtime/camel-k-core/api/src/generated/java/org/apache/camel/k/SourceDefinitionConfigurer.java,31,,"        case ""Interceptors"": target.setInterceptors(property(camelContext, java.util.List.class, value)); return true;"
40305,./TargetProjects/camel-k-runtime/camel-k-core/api/src/generated/java/org/apache/camel/k/SourceDefinitionConfigurer.java,40,,"        case ""propertynames"":"
40306,./TargetProjects/camel-k-runtime/camel-k-core/api/src/generated/java/org/apache/camel/k/SourceDefinitionConfigurer.java,41,,"        case ""PropertyNames"": target.setPropertyNames(property(camelContext, java.util.List.class, value)); return true;"
40307,./TargetProjects/camel-k-runtime/camel-k-core/api/src/main/java/org/apache/camel/k/SourceDefinition.java,155,,"            answer += ""name='"" + name + ""', "";"
40308,./TargetProjects/camel-k-runtime/camel-k-core/support/src/test/java/org/apache/camel/k/listener/SourceConfigurerTest.java,34,,"                ""camel.k.sources[0].name"", ""templateName"","
40309,./TargetProjects/camel-k-runtime/camel-k-core/support/src/test/java/org/apache/camel/k/listener/SourceConfigurerTest.java,37,,"                ""camel.k.sources[1].name"", ""src"","
40310,./TargetProjects/camel-k-runtime/camel-k-core/support/src/test/java/org/apache/camel/k/listener/SourceConfigurerTest.java,39,,"                ""camel.k.sources[2].name"", ""err"","
40311,./TargetProjects/camel-k-runtime/camel-k-core/support/src/test/java/org/apache/camel/k/listener/SourceConfigurerTest.java,41,,"                ""camel.k.sources[2].type"", ""errorHandler"""
40312,./TargetProjects/camel-k-runtime/camel-k-core/support/src/test/java/org/apache/camel/k/listener/SourceConfigurerTest.java,91,,"                ""camel.k.sources[2].type"", ""source"""
40313,./TargetProjects/camel-k-runtime/camel-k-core/support/src/test/java/org/apache/camel/k/support/PropertiesSupportTest.java,37,,"            ""camel.k.sources[0].name"", ""MyRoutesWithBeans"","
40314,./TargetProjects/camel-k-runtime/camel-k-core/support/src/test/java/org/apache/camel/k/support/PropertiesSupportTest.java,38,,"            ""camel.k.sources[0].location"", ""classpath:MyRoutesWithBeans.java"","
40315,./TargetProjects/camel-k-runtime/camel-k-core/support/src/test/java/org/apache/camel/k/support/PropertiesSupportTest.java,39,,"            ""camel.k.sources[1].name"", ""MyRoutesConfig"","
40316,./TargetProjects/camel-k-runtime/camel-k-core/support/src/test/java/org/apache/camel/k/support/PropertiesSupportTest.java,40,,"            ""camel.k.sources[1].location"", ""classpath:MyRoutesConfig.java"","
40317,./TargetProjects/camel-k-runtime/camel-k-core/support/src/test/java/org/apache/camel/k/support/RuntimeSupportTest.java,41,,"        NameCustomizer customizer = new NameCustomizer(""from-registry"");"
40318,./TargetProjects/camel-k-runtime/camel-k-core/support/src/test/java/org/apache/camel/k/support/RuntimeSupportTest.java,46,,"        assertThat(context.getName()).isNotEqualTo(""default"");"
40319,./TargetProjects/camel-k-runtime/camel-k-core/support/src/test/java/org/apache/camel/k/support/RuntimeSupportTest.java,50,,"        properties.setProperty(""camel.k.customizer.name.enabled"", ""true"");"
40320,./TargetProjects/camel-k-runtime/components/camel-cloudevents/src/main/java/org/apache/camel/component/cloudevents/CloudEvents.java,33,,"            Attribute.simple(CloudEvent.CAMEL_CLOUD_EVENT_SOURCE, ""CE-Source"", ""source""),"
40321,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-api/src/generated/java/org/apache/camel/component/knative/spi/KnativeEnvironmentConfigurer.java,24,,"        case ""resources"":"
40322,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-api/src/generated/java/org/apache/camel/component/knative/spi/KnativeEnvironmentConfigurer.java,25,,"        case ""Resources"": target.setResources(property(camelContext, java.util.List.class, value)); return true;"
40323,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-api/src/generated/java/org/apache/camel/component/knative/spi/KnativeResourceConfigurer.java,24,,"        case ""ceoverrides"":"
40324,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-api/src/generated/java/org/apache/camel/component/knative/spi/KnativeResourceConfigurer.java,25,,"        case ""CeOverrides"": target.setCeOverrides(property(camelContext, java.util.Map.class, value)); return true;"
40325,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-api/src/generated/java/org/apache/camel/component/knative/spi/KnativeResourceConfigurer.java,32,,"        case ""filters"":"
40326,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-api/src/generated/java/org/apache/camel/component/knative/spi/KnativeResourceConfigurer.java,33,,"        case ""Filters"": target.setFilters(property(camelContext, java.util.Map.class, value)); return true;"
40327,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-api/src/generated/java/org/apache/camel/component/knative/spi/KnativeResourceConfigurer.java,34,,"        case ""metadata"":"
40328,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-api/src/generated/java/org/apache/camel/component/knative/spi/KnativeResourceConfigurer.java,35,,"        case ""Metadata"": target.setMetadata(property(camelContext, java.util.Map.class, value)); return true;"
40329,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-api/src/test/java/org/apache/camel/component/knative/spi/KnativeEnvironmentTest.java,41,,"        List<KnativeResource> res = env.lookup(Knative.Type.endpoint, ""knative3"").collect(Collectors.toList());"
40330,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpServer.java,57,,"        this(context, ""localhost"", AvailablePortFinder.getNextAvailable(), ""/"", null);"
40331,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,126,,"                ""myEndpoint"","
40332,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,129,,"                    Knative.KNATIVE_CLOUD_EVENT_TYPE, ""org.apache.camel.event"","
40333,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,130,,"                    Knative.CONTENT_TYPE, ""text/plain"""
40334,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,139,,"            b.from(""knative:endpoint/myEndpoint"")"
40335,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,140,,"                .to(""mock:ce"");"
40336,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,148,,"        mock.expectedHeaderReceived(CloudEvent.CAMEL_CLOUD_EVENT_SOURCE, ""/somewhere"");"
40337,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,152,,"        mock.expectedBodiesReceived(""test"");"
40338,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,165,,"            .header(httpAttribute(ce, CloudEvent.CAMEL_CLOUD_EVENT_ID), ""myEventID"")"
40339,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,217,,"            b.from(""direct:source"")"
40340,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,218,,"                .routeId(""my-source"")"
40341,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,369,,"                        ""source"", ""/somewhere"","
40342,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,371,,"                        ""data"", ""test"""
40343,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,497,,"                ""ep1"","
40344,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,501,,"                    Knative.KNATIVE_FILTER_PREFIX + httpAttribute(ce, CloudEvent.CAMEL_CLOUD_EVENT_SOURCE), ""CE1"""
40345,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,504,,"                ""ep2"","
40346,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,508,,"                    Knative.KNATIVE_FILTER_PREFIX + httpAttribute(ce, CloudEvent.CAMEL_CLOUD_EVENT_SOURCE), ""CE2"""
40347,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,513,,"            b.from(""knative:endpoint/ep1"")"
40348,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,516,,"                .to(""mock:ce1"");"
40349,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,517,,"            b.from(""knative:endpoint/ep2"")"
40350,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,520,,"                .to(""mock:ce2"");"
40351,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,529,,"        mock1.expectedHeaderReceived(CloudEvent.CAMEL_CLOUD_EVENT_ID, ""myEventID1"");"
40352,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,538,,"        mock2.expectedHeaderReceived(CloudEvent.CAMEL_CLOUD_EVENT_ID, ""myEventID2"");"
40353,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,662,,"            sourceEvent(""default"")"
40354,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,741,,"                String.format(""http://%s:%d"", platformHttpHost, platformHttpPort),"
40355,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,752,,"                    .constant(""consumer"")"
40356,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,758,,"                .to(""mock:to"");"
40357,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,836,,"            b.from(""direct:start"")"
40358,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,904,,"                .setBody().simple(""${routeId}"");"
40359,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,1000,,"                .to(""knative:endpoint/ep"")"
40360,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,1051,,"        mock.expectedHeaderReceived(CloudEvent.CAMEL_CLOUD_EVENT_TYPE, ""myEvent"");"
40361,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,1085,,"                    .to(""knative:event"");"
40362,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,1130,,"                    Knative.KNATIVE_OBJECT_NAME, ""myName2"""
40363,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,1484,,"                .setHeader(""CamelDummyHeader"").constant(""test"")"
40364,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,1792,,"                ""event.sink"","
40365,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative-http/src/test/java/org/apache/camel/component/knative/http/KnativeHttpTest.java,1798,,"                ""event.source"","
40366,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative/src/generated/java/org/apache/camel/component/knative/KnativeComponentConfigurer.java,37,,"        case ""ceoverride"":"
40367,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative/src/generated/java/org/apache/camel/component/knative/KnativeComponentConfigurer.java,38,,"        case ""ceOverride"": getOrCreateConfiguration(target).setCeOverride(property(camelContext, java.util.Map.class, value)); return true;"
40368,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative/src/generated/java/org/apache/camel/component/knative/KnativeComponentConfigurer.java,49,,"        case ""filters"": getOrCreateConfiguration(target).setFilters(property(camelContext, java.util.Map.class, value)); return true;"
40369,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative/src/generated/java/org/apache/camel/component/knative/KnativeComponentConfigurer.java,59,,"        case ""transportoptions"":"
40370,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative/src/generated/java/org/apache/camel/component/knative/KnativeComponentConfigurer.java,60,,"        case ""transportOptions"": getOrCreateConfiguration(target).setTransportOptions(property(camelContext, java.util.Map.class, value)); return true;"
40371,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative/src/generated/java/org/apache/camel/component/knative/KnativeEndpointConfigurer.java,28,,"        case ""ceoverride"":"
40372,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative/src/generated/java/org/apache/camel/component/knative/KnativeEndpointConfigurer.java,29,,"        case ""ceOverride"": target.getConfiguration().setCeOverride(property(camelContext, java.util.Map.class, value)); return true;"
40373,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative/src/generated/java/org/apache/camel/component/knative/KnativeEndpointConfigurer.java,39,,"        case ""filters"": target.getConfiguration().setFilters(property(camelContext, java.util.Map.class, value)); return true;"
40374,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative/src/generated/java/org/apache/camel/component/knative/KnativeEndpointConfigurer.java,47,,"        case ""transportoptions"":"
40375,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative/src/generated/java/org/apache/camel/component/knative/KnativeEndpointConfigurer.java,48,,"        case ""transportOptions"": target.getConfiguration().setTransportOptions(property(camelContext, java.util.Map.class, value)); return true;"
40376,./TargetProjects/camel-k-runtime/components/camel-knative/camel-knative/src/main/java/org/apache/camel/component/knative/ce/CloudEventProcessors.java,42,,"            ifNotEmpty(content.remove(""data""), message::setBody);"
40377,./TargetProjects/camel-k-runtime/support/camel-k-maven-plugin/src/main/java/org/apache/camel/k/tooling/maven/GenerateCatalogMojo.java,118,,"                ""org.apache.camel.quarkus"", ""camel-quarkus-catalog"","
40378,./TargetProjects/camel-k-runtime/support/camel-k-maven-plugin/src/main/java/org/apache/camel/k/tooling/maven/GenerateYamlEndpointsSchema.java,62,,"        root.put(""type"", ""object"");"
40379,./TargetProjects/camel-k-runtime/support/camel-k-maven-plugin/src/main/java/org/apache/camel/k/tooling/maven/GenerateYamlEndpointsSchema.java,62,,"        root.put(""type"", ""object"");"
40380,./TargetProjects/camel-k-runtime/support/camel-k-maven-plugin/src/main/java/org/apache/camel/k/tooling/maven/GenerateYamlLoaderSupportClasses.java,189,,"                        mb.beginControlFlow(""case $S:"", id.asString());"
40381,./TargetProjects/camel-k-runtime/support/camel-k-maven-plugin/src/main/java/org/apache/camel/k/tooling/maven/GenerateYamlParserSupportClasses.java,62,,"            JavaFile.builder(""org.apache.camel.k.loader.yaml.parser"", generateHasExpression())"
40382,./TargetProjects/camel-k-runtime/support/camel-k-maven-plugin/src/main/java/org/apache/camel/k/tooling/maven/GenerateYamlParserSupportClasses.java,63,,"                .indent(""    "")"
40383,./TargetProjects/camel-k-runtime/support/camel-k-maven-plugin/src/main/java/org/apache/camel/k/tooling/maven/GenerateYamlParserSupportClasses.java,118,,"                        AnnotationSpec.builder(JsonAlias.class).addMember(""value"", ""$S"", k).build())"
40384,./TargetProjects/camel-k-runtime/support/camel-k-maven-plugin/src/main/java/org/apache/camel/k/tooling/maven/GenerateYamlSchema.java,76,,"        root.put(""type"", ""array"");"
40385,./TargetProjects/camel-k-runtime/support/camel-k-maven-plugin/src/main/java/org/apache/camel/k/tooling/maven/GenerateYamlSchema.java,76,,"        root.put(""type"", ""array"");"
40386,./TargetProjects/camel-k-runtime/support/camel-k-maven-plugin/src/main/java/org/apache/camel/k/tooling/maven/GenerateYamlSchema.java,79,,"        this.items = root.putObject(""items"");"
40387,./TargetProjects/camel-k-runtime/support/camel-k-maven-plugin/src/main/java/org/apache/camel/k/tooling/maven/GenerateYamlSchema.java,90,,"                    .put(""type"", ""object"")"
40388,./TargetProjects/camel-k-runtime/support/camel-k-maven-plugin/src/main/java/org/apache/camel/k/tooling/maven/GenerateYamlSchema.java,91,,"                    .with(""properties"")"
40389,./TargetProjects/camel-k-runtime/support/camel-k-maven-plugin/src/main/java/org/apache/camel/k/tooling/maven/GenerateYamlSchema.java,93,,"                        .put(""$ref"", ""#/items/definitions/"" + entry.getValue().name().toString());"
40390,./TargetProjects/camel-k-runtime/support/camel-k-maven-plugin/src/main/java/org/apache/camel/k/tooling/maven/GenerateYamlSchema.java,93,,"                        .put(""$ref"", ""#/items/definitions/"" + entry.getValue().name().toString());"
40391,./TargetProjects/camel-k-runtime/support/camel-k-maven-plugin/src/main/java/org/apache/camel/k/tooling/maven/GenerateYamlSchema.java,124,,"                            .put(""type"", ""string"");"
40392,./TargetProjects/camel-k-runtime/support/camel-k-maven-plugin/src/main/java/org/apache/camel/k/tooling/maven/GenerateYamlSchema.java,141,,"                        if (!mi.name().startsWith(""set"")) {"
40393,./TargetProjects/camel-k-runtime/support/camel-k-maven-plugin/src/main/java/org/apache/camel/k/tooling/maven/GenerateYamlSchema.java,211,,"                    AnnotationValue name = xmlRoot.value(""name"");"
40394,./TargetProjects/camel-k-runtime/support/camel-k-maven-plugin/src/main/java/org/apache/camel/k/tooling/maven/GenerateYamlSchema.java,318,,"            annotationValue(fi, METADATA_ANNOTATION, ""description"")"
40395,./TargetProjects/camel-k-runtime/support/camel-k-maven-plugin/src/main/java/org/apache/camel/k/tooling/maven/GenerateYamlSchema.java,327,,"                root.withArray(""required"").add(propertyName);"
40396,./TargetProjects/camel-k-runtime/support/camel-k-maven-plugin/src/main/java/org/apache/camel/k/tooling/maven/processors/CatalogProcessor3x.java,117,,"                .groupId(""org.apache.camel.k"")"
40397,./TargetProjects/camel-k-runtime/support/camel-k-maven-plugin/src/main/java/org/apache/camel/k/tooling/maven/processors/CatalogProcessor3x.java,155,,"            CamelLoader.fromArtifact(""org.apache.camel.quarkus"", ""camel-quarkus-yaml-dsl"")"
40398,./TargetProjects/camel-k-runtime/support/camel-k-maven-plugin/src/main/java/org/apache/camel/k/tooling/maven/processors/CatalogProcessor3x.java,157,,"                .putMetadata(""native"", ""true"")"
40399,./TargetProjects/camel-k-runtime/support/camel-k-maven-plugin/src/main/java/org/apache/camel/k/tooling/maven/processors/CatalogProcessor3x.java,164,,"                .putMetadata(""native"", ""false"")"
40400,./TargetProjects/camel-k-runtime/support/camel-k-maven-plugin/src/test/java/org/apache/camel/k/tooling/maven/processors/GenerateYamlSupportClassesTest.java,31,,"        final JavaFile file = JavaFile.builder(""org.apache.camel.k.loader.yaml.parser"", spec).build();"
40401,./TargetProjects/camel-karaf/components/camel-blueprint-main/src/main/java/org/apache/camel/blueprint/CamelBlueprintHelper.java,168,,"            if (""org.apache.felix.configadmin"".equals(bd.getHeaders().get(""Bundle-SymbolicName""))) {"
40402,./TargetProjects/camel-karaf/components/camel-blueprint/src/main/java/org/apache/camel/blueprint/CamelContextFactoryBean.java,125,,"    @Metadata(defaultValue = ""true"")"
40403,./TargetProjects/camel-karaf/components/camel-blueprint/src/main/java/org/apache/camel/blueprint/handler/CamelNamespaceHandler.java,258,,"            throw new ComponentDefinitionException(""Failed to create the JAXB binder : "" + e, e);"
40404,./TargetProjects/camel-karaf/components/camel-blueprint/src/main/java/org/apache/camel/blueprint/handler/CamelNamespaceHandler.java,262,,"            throw new ComponentDefinitionException(""Expected an instance of "" + CamelContextFactoryBean.class);"
40405,./TargetProjects/camel-karaf/components/camel-blueprint/src/main/java/org/apache/camel/blueprint/handler/CamelNamespaceHandler.java,269,,"        factory.setId("".camelBlueprint.passThrough."" + contextId);"
40406,./TargetProjects/camel-karaf/components/camel-blueprint/src/main/java/org/apache/camel/blueprint/handler/CamelNamespaceHandler.java,273,,"        factory2.setId("".camelBlueprint.factory."" + contextId);"
40407,./TargetProjects/camel-karaf/components/camel-blueprint/src/main/java/org/apache/camel/blueprint/handler/CamelNamespaceHandler.java,275,,"        factory2.setFactoryMethod(""call"");"
40408,./TargetProjects/camel-karaf/components/camel-blueprint/src/main/java/org/apache/camel/blueprint/handler/CamelNamespaceHandler.java,276,,"        factory2.setInitMethod(""afterPropertiesSet"");"
40409,./TargetProjects/camel-karaf/components/camel-blueprint/src/main/java/org/apache/camel/blueprint/handler/CamelNamespaceHandler.java,277,,"        factory2.setDestroyMethod(""destroy"");"
40410,./TargetProjects/camel-karaf/components/camel-blueprint/src/main/java/org/apache/camel/blueprint/handler/CamelNamespaceHandler.java,278,,"        factory2.addProperty(""blueprintContainer"", createRef(context, ""blueprintContainer""));"
40411,./TargetProjects/camel-karaf/components/camel-blueprint/src/main/java/org/apache/camel/blueprint/handler/CamelNamespaceHandler.java,518,,"        ctx.setFactoryMethod(""getObject"");"
40412,./TargetProjects/camel-karaf/components/camel-blueprint/src/test/java/org/apache/camel/blueprint/BlueprintComponentResolverTest.java,76,,"            throw new UnsupportedOperationException(""Should not be called"");"
40413,./TargetProjects/camel-karaf/components/camel-osgi-activator/src/test/java/org/apache/camel/component/osgi/activator/CamelOsgiActivatorIT.java,68,,"                                new VMOption(""--add-opens""),"
40414,./TargetProjects/camel-karaf/components/camel-test-blueprint/src/test/java/org/apache/camel/test/blueprint/xpath/XPathHeaderNameTest.java,33,,"        mock.expectedBodiesReceived(""<response>OK</response>"");"
40415,./TargetProjects/camel-karaf/components/camel-test-blueprint/src/test/java/org/apache/camel/test/blueprint/xpath/XPathHeaderNameTest.java,34,,"        mock.expectedHeaderReceived(""invoiceDetails"", ""<invoice orderType='premium'><person><name>Alan</name></person></invoice>"");"
40416,./TargetProjects/camel-karaf/components/camel-test-karaf/src/main/java/org/apache/camel/test/karaf/AbstractFeatureTest.java,158,,"        if (!mainFeature.startsWith(""camel-"")) {"
40417,./TargetProjects/camel-karaf/components/camel-test-karaf/src/main/java/org/apache/camel/test/karaf/AbstractFeatureTest.java,381,,"                    new VMOption(""--add-opens""),"
40418,./TargetProjects/camel-karaf/components/camel-zookeeper-master-osgi/src/main/java/org/apache/camel/component/zookeepermaster/osgi/OsgiManagedGroupFactory.java,64,,"        throw new IllegalStateException(""not supported"");"
40419,./TargetProjects/camel-karaf/core/camel-core-osgi/src/main/java/org/apache/camel/core/osgi/OsgiClassResolver.java,81,,"        StringHelper.notEmpty(uri, ""uri"");"
40420,./TargetProjects/camel-karaf/core/camel-core-osgi/src/main/java/org/apache/camel/core/osgi/impl/Activator.java,208,,"                LOG.debug(""Found entry: {} in bundle {}"", path, bundle.getSymbolicName());"
40421,./TargetProjects/camel-karaf/core/camel-core-osgi/src/test/java/org/apache/camel/core/osgi/OsgiComponentResolverTest.java,85,,"            throw new UnsupportedOperationException(""Should not be called"");"
40422,./TargetProjects/camel-karaf/core/camel-core-osgi/src/test/java/org/apache/camel/core/osgi/OsgiPackageScanClassResolverTest.java,36,,"        assertNotNull(""The BundleContext should not be null"", context);"
40423,./TargetProjects/camel-karaf/core/camel-core-osgi/src/test/java/org/apache/camel/core/osgi/OsgiPackageScanClassResolverTest.java,41,,"        assertEquals(""There should find a class"", classes.size(), 1);"
40424,./TargetProjects/camel-karaf/core/camel-core-osgi/src/test/java/org/apache/camel/core/osgi/OsgiPackageScanClassResolverTest.java,42,,"        assertTrue(""Find a wrong class"", classes.contains(MyTypeConverter.class));"
40425,./TargetProjects/camel-karaf/core/camel-core-osgi/src/test/java/org/apache/camel/core/osgi/ServiceRegistryTest.java,34,,"        assertNotNull(""MyService should not be null"", myService);"
40426,./TargetProjects/camel-karaf/platforms/commands/commands-core/src/main/java/org/apache/camel/commands/AbstractLocalCamelController.java,172,,"                String camelId = (String) mBeanServer.getAttribute(contextMBean, ""CamelId"");"
40427,./TargetProjects/camel-karaf/platforms/commands/commands-core/src/main/java/org/apache/camel/commands/AbstractLocalCamelController.java,174,,"                    String xml = (String) mBeanServer.invoke(contextMBean, ""dumpRoutesStatsAsXml"", new Object[]{fullStats, includeProcessors}, new String[]{""boolean"", ""boolean""});"
40428,./TargetProjects/camel-karaf/platforms/commands/commands-core/src/main/java/org/apache/camel/commands/AbstractLocalCamelController.java,209,,"                    Object routeId = data.get(""routeId"");"
40429,./TargetProjects/camel-karaf/platforms/commands/commands-core/src/main/java/org/apache/camel/commands/AbstractLocalCamelController.java,284,,"                        row.put(""camelContextName"", context.getName());"
40430,./TargetProjects/camel-karaf/platforms/commands/commands-core/src/main/java/org/apache/camel/commands/AbstractLocalCamelController.java,286,,"                        row.put(""state"", getRouteState(route));"
40431,./TargetProjects/camel-karaf/platforms/commands/commands-core/src/test/java/org/apache/camel/commands/AbstractLocalCamelControllerTest.java,46,,"        context.setNameStrategy(new ExplicitCamelContextNameStrategy(""context1""));"
40432,./TargetProjects/camel-karaf/platforms/commands/commands-core/src/test/java/org/apache/camel/commands/AbstractLocalCamelControllerTest.java,53,,"                    .fromType(""xml:foo"")"
40433,./TargetProjects/camel-karaf/platforms/commands/commands-core/src/test/java/org/apache/camel/commands/AbstractLocalCamelControllerTest.java,59,,"                from(""direct:start1"").id(""route1"").delay(100).to(""mock:result1"");"
40434,./TargetProjects/camel-karaf/platforms/commands/commands-core/src/test/java/org/apache/camel/commands/ContextListCommandTest.java,42,,"        context.setNameStrategy(new ExplicitCamelContextNameStrategy(""foobar""));"
40435,./TargetProjects/camel-karaf/tests/camel-blueprint-cxf-test/src/test/java/org/apache/camel/test/cxf/blueprint/CxfEndpointBeansTest.java,52,,"        extra.put(""router.address"", ""http://localhost:"" + CXFTestSupport.getPort1() + ""/CxfEndpointBeansRouterTest/router"");"
40436,./TargetProjects/camel-karaf/tests/camel-blueprint-cxf-test/src/test/java/org/apache/camel/test/cxf/blueprint/CxfPayloadProviderRouterTest.java,56,,"        String address = ""http://localhost:"" + CXFTestSupport.getPort1() + ""/CxfPayLoadProviderRouterTest/SoapContext/SoapPort"";"
40437,./TargetProjects/camel-karaf/tests/camel-itest-osgi/src/test/java/org/apache/camel/itest/CamelQuartzJmxUpdateTest.java,91,,"            new String[]{""java.lang.String"", ""java.lang.String""});"
40438,./TargetProjects/camel-karaf/tooling/camel-catalog-generator-karaf-maven-plugin/src/main/java/org/apache/camel/karaf/maven/PrepareCatalogKarafMojo.java,163,,"            getLog().info(""Copying "" + jsonFiles.size() + "" Camel component json descriptors"");"
40439,./TargetProjects/camel-karaf/tooling/camel-karaf-docs-maven-plugin/src/main/java/org/apache/camel/karaf/maven/UpdateDocComponentsListMojo.java,183,,"            File file = new File(docBaseDir, ""components.adoc"");"
40440,./TargetProjects/camel-karaf/tooling/camel-karaf-docs-maven-plugin/src/main/java/org/apache/camel/karaf/maven/UpdateDocComponentsListMojo.java,188,,"                getLog().info(""Updated components.adoc file: "" + file);"
40441,./TargetProjects/camel-karaf/tooling/camel-karaf-docs-maven-plugin/src/main/java/org/apache/camel/karaf/maven/UpdateDocComponentsListMojo.java,190,,"                getLog().debug(""No changes to components.adoc file: "" + file);"
40442,./TargetProjects/camel-karaf/tooling/camel-karaf-docs-maven-plugin/src/main/java/org/apache/camel/karaf/maven/UpdateDocComponentsListMojo.java,192,,"                getLog().warn(""No components.adoc file: "" + file);"
40443,./TargetProjects/camel-karaf/tooling/camel-karaf-docs-maven-plugin/src/main/java/org/apache/camel/karaf/maven/UpdateDocComponentsListMojo.java,197,,"            throw new MojoFailureException(""Error due "" + e.getMessage(), e);"
40444,./TargetProjects/camel-karaf/tooling/camel-karaf-docs-maven-plugin/src/main/java/org/apache/camel/karaf/maven/UpdateDocComponentsListMojo.java,380,,"            map.put(""numberOfArtifacts"", artifacts);"
40445,./TargetProjects/camel-karaf/tooling/camel-karaf-docs-maven-plugin/src/main/java/org/apache/camel/karaf/maven/UpdateDocComponentsListMojo.java,381,,"            map.put(""numberOfDeprecated"", deprecated);"
40446,./TargetProjects/camel-karaf/tooling/camel-karaf-docs-maven-plugin/src/main/java/org/apache/camel/karaf/maven/UpdateDocComponentsListMojo.java,383,,"                    Collections.singletonMap(""util"", new ExtMvelHelper(getComponentsStarterDocPath())));"
40447,./TargetProjects/camel-karaf/tooling/camel-karaf-docs-maven-plugin/src/main/java/org/apache/camel/karaf/maven/UpdateDocComponentsListMojo.java,386,,"            throw new MojoExecutionException(""Error processing mvel template. Reason: "" + e, e);"
40448,./TargetProjects/camel-karaf/tooling/camel-karaf-docs-maven-plugin/src/main/java/org/apache/camel/karaf/maven/UpdateDocComponentsListMojo.java,462,,"                getLog().warn(""Cannot find markers in file "" + file);"
40449,./TargetProjects/camel-karaf/tooling/camel-karaf-docs-maven-plugin/src/main/java/org/apache/camel/karaf/maven/UpdateDocComponentsListMojo.java,463,,"                getLog().warn(""Add the following markers"");"
40450,./TargetProjects/camel-karaf/tooling/camel-karaf-docs-maven-plugin/src/main/java/org/apache/camel/karaf/maven/UpdateDocComponentsListMojo.java,469,,"            throw new MojoExecutionException(""Error reading file "" + file + "" Reason: "" + e, e);"
40451,./TargetProjects/camel-karaf/tooling/camel-karaf-docs-maven-plugin/src/main/java/org/apache/camel/karaf/maven/UpdateDocComponentsListMojo.java,469,,"            throw new MojoExecutionException(""Error reading file "" + file + "" Reason: "" + e, e);"
40452,./TargetProjects/camel-karaf/tooling/camel-karaf-maven-plugin/src/main/java/org/apache/camel/maven/KarafRunMojo.java,660,,"                        + "" to classpath"");"
40453,./TargetProjects/camel-quarkus/extensions-core/core/deployment/src/test/java/org/apache/camel/quarkus/core/deployment/util/PathFilterTest.java,38,,"                ""org/acme/MyClass"","
40454,./TargetProjects/camel-quarkus/extensions-core/core/deployment/src/test/java/org/apache/camel/quarkus/core/deployment/util/PathFilterTest.java,39,,"                Arrays.asList(""org/**""),"
40455,./TargetProjects/camel-quarkus/extensions-core/core/deployment/src/test/java/org/apache/camel/quarkus/core/runtime/CamelRegistryTest.java,74,,"        assertThat(registry.lookupByName(""bean-1"")).isInstanceOfSatisfying(String.class, s -> assertThat(s).isEqualTo(""a""));"
40456,./TargetProjects/camel-quarkus/extensions-core/core/deployment/src/test/java/org/apache/camel/quarkus/core/runtime/CamelRegistryTest.java,75,,"        assertThat(registry.lookupByName(""bean-2"")).isInstanceOfSatisfying(String.class, s -> assertThat(s).isEqualTo(""b""));"
40457,./TargetProjects/camel-quarkus/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/CamelConfig.java,74,,"        @ConfigItem(defaultValue = ""true"")"
40458,./TargetProjects/camel-quarkus/extensions-jvm/atomix/integration-test/src/main/java/org/apache/camel/quarkus/component/atomix/it/AtomixResource.java,53,,"        LOG.warnf(""Could not load [%s] from the Camel context"", COMPONENT_ATOMIX_MAP);"
40459,./TargetProjects/camel-quarkus/extensions-jvm/atomix/integration-test/src/main/java/org/apache/camel/quarkus/component/atomix/it/AtomixResource.java,54,,"        return Response.status(500, COMPONENT_ATOMIX_MAP + "" could not be loaded from the Camel context"").build();"
40460,./TargetProjects/camel-quarkus/extensions-jvm/azure-storage-datalake/integration-test/src/main/java/org/apache/camel/quarkus/component/azure/storage/datalake/it/AzureStorageDatalakeResource.java,83,,"    public Response createFileSystem(@PathParam(""filesystem"") String filesystem) throws Exception {"
40461,./TargetProjects/camel-quarkus/extensions-jvm/azure-storage-datalake/integration-test/src/main/java/org/apache/camel/quarkus/component/azure/storage/datalake/it/AzureStorageDatalakeResource.java,92,,"            @PathParam(""filename"") String filename,"
40462,./TargetProjects/camel-quarkus/extensions-jvm/azure-storage-datalake/integration-test/src/test/java/org/apache/camel/quarkus/component/azure/storage/datalake/it/AzureStorageDatalakeTest.java,44,,"        RestAssured.get(""/azure-storage-datalake/filesystem/"" + filesystem)"
40463,./TargetProjects/camel-quarkus/extensions-jvm/azure-storage-datalake/integration-test/src/test/java/org/apache/camel/quarkus/component/azure/storage/datalake/it/AzureStorageDatalakeTest.java,72,,"                    .post(""/azure-storage-datalake/filesystem/"" + filesystem + ""/path/"" + filename)"
40464,./TargetProjects/camel-quarkus/extensions-jvm/coap/integration-test/src/main/java/org/apache/camel/quarkus/component/coap/it/CoapResource.java,51,,"        LOG.warnf(""Could not load [%s] from the Camel context"", COMPONENT_COAP);"
40465,./TargetProjects/camel-quarkus/extensions-jvm/coap/integration-test/src/main/java/org/apache/camel/quarkus/component/coap/it/CoapResource.java,52,,"        return Response.status(500, COMPONENT_COAP + "" could not be loaded from the Camel context"").build();"
40466,./TargetProjects/camel-quarkus/extensions-jvm/ignite/integration-test/src/main/java/org/apache/camel/quarkus/component/ignite/it/IgniteResource.java,54,,"        LOG.warnf(""Could not load [%s] from the Camel context"", COMPONENT_IGNITE_CACHE);"
40467,./TargetProjects/camel-quarkus/extensions-jvm/ignite/integration-test/src/main/java/org/apache/camel/quarkus/component/ignite/it/IgniteResource.java,55,,"        return Response.status(500, COMPONENT_IGNITE_CACHE + "" could not be loaded from the Camel context"").build();"
40468,./TargetProjects/camel-quarkus/extensions-jvm/redis/integration-test/src/test/java/org/apache/camel/quarkus/component/redis/it/RedisTest.java,37,,"        post(""/redis/aggregate/{message}/{correlationKey}"", ""A"", 1).then().statusCode(204);"
40469,./TargetProjects/camel-quarkus/extensions-support/spring/runtime/src/main/java/org/apache/camel/quarkus/support/spring/graal/SpringKotlinSubstitutions.java,60,,"        throw new UnsupportedOperationException(""Kotlin is not supported"");"
40470,./TargetProjects/camel-quarkus/extensions/atlasmap/deployment/src/main/java/org/apache/camel/quarkus/component/atlasmap/deployment/AtlasmapProcessor.java,83,,"        indexDependency.produce(new IndexDependencyBuildItem(""io.atlasmap"", ""atlas-model""));"
40471,./TargetProjects/camel-quarkus/extensions/fhir/runtime/src/main/java/org/apache/camel/quarkus/component/fhir/FhirConfig.java,29,,"    @ConfigItem(name = ""enable-dstu2"", defaultValue = ""true"")"
40472,./TargetProjects/camel-quarkus/extensions/microprofile-metrics/deployment/src/test/java/org/apache/camel/quarkus/component/microprofile/metrics/deployment/MicroProfileMetricsConfigOverrideTest.java,72,,"        props.setProperty(""quarkus.banner.enabled"", ""false"");"
40473,./TargetProjects/camel-quarkus/extensions/microprofile-metrics/runtime/src/main/java/org/apache/camel/quarkus/component/microprofile/metrics/runtime/CamelMicroProfileMetricsConfig.java,30,,"    @ConfigItem(defaultValue = ""true"")"
40474,./TargetProjects/camel-quarkus/extensions/qute/component/src/test/java/org/apache/camel/component/qute/QuteConcurrentTest.java,38,,"        getMockEndpoint(""mock:result"").expectedMessageCount(files);"
40475,./TargetProjects/camel-quarkus/extensions/qute/component/src/test/java/org/apache/camel/component/qute/QuteDynamicTemplateTest.java,29,,"        Exchange exchange = context.getEndpoint(""direct:a"").createExchange();"
40476,./TargetProjects/camel-quarkus/extensions/qute/component/src/test/java/org/apache/camel/component/qute/QuteSetTemplateViaHeaderTest.java,27,,"        Exchange exchange = context.getEndpoint(""direct:a"").createExchange();"
40477,./TargetProjects/camel-quarkus/extensions/ssh/runtime/src/main/java/org/apache/camel/quarkus/component/ssh/runtime/SubstituteSecurityUtils.java,37,,"        throw new UnsupportedOperationException(""EdDSA Signer not available"");"
40478,./TargetProjects/camel-quarkus/integration-test-groups/aws2/aws2-ddb/src/main/java/org/apache/camel/quarkus/component/aws2/ddb/it/Aws2DdbResource.java,58,,"    @Path(""/item/{key}"")"
40479,./TargetProjects/camel-quarkus/integration-test-groups/aws2/aws2-ddb/src/main/java/org/apache/camel/quarkus/component/aws2/ddb/it/Aws2DdbResource.java,62,,"    public Response post(String message, @PathParam(""key"") String key) throws Exception {"
40480,./TargetProjects/camel-quarkus/integration-test-groups/aws2/aws2-ddb/src/main/java/org/apache/camel/quarkus/component/aws2/ddb/it/Aws2DdbResource.java,67,,"                put(""value"", AttributeValue.builder()"
40481,./TargetProjects/camel-quarkus/integration-test-groups/aws2/aws2-ddb/src/test/java/org/apache/camel/quarkus/component/aws2/ddb/it/Aws2DdbTest.java,44,,"        final String key = ""key"" + UUID.randomUUID().toString().replace(""-"", """");"
40482,./TargetProjects/camel-quarkus/integration-test-groups/aws2/aws2-ddb/src/test/java/org/apache/camel/quarkus/component/aws2/ddb/it/Aws2DdbTest.java,48,,"        RestAssured.get(""/aws2-ddb/item/"" + key)"
40483,./TargetProjects/camel-quarkus/integration-test-groups/aws2/aws2-kinesis/src/test/java/org/apache/camel/quarkus/component/aws2/kinesis/it/Aws2KinesisTestEnvCustomizer.java,143,,"                                    + ""      \""Sid\"": \""sid"" + RandomStringUtils.randomAlphanumeric(16) + ""\"",\n"""
40484,./TargetProjects/camel-quarkus/integration-test-groups/aws2/aws2-s3/src/main/java/org/apache/camel/quarkus/component/aws2/Aws2S3Resource.java,58,,"    public Response post(String message, @PathParam(""key"") String key) throws Exception {"
40485,./TargetProjects/camel-quarkus/integration-test-groups/aws2/aws2-s3/src/test/java/org/apache/camel/quarkus/component/aws2/Aws2S3Test.java,55,,"                .post(""/aws2/s3/object/"" + oid)"
40486,./TargetProjects/camel-quarkus/integration-test-groups/aws2/aws2-ses/src/test/java/org/apache/camel/quarkus/component/aws2/ses/it/Aws2SesTest.java,73,,"                .header(""x-api-key"", mailSlurpApiKey)"
40487,./TargetProjects/camel-quarkus/integration-test-groups/foundation/bean/src/test/java/org/apache/camel/quarkus/component/bean/BeanTest.java,49,,"                .body(""Kermit"")"
40488,./TargetProjects/camel-quarkus/integration-test-groups/foundation/core-languages/src/main/java/org/apache/camel/quarkus/core/languages/it/CoreLanguagesResource.java,57,,"        return template.requestBodyAndHeader(""direct:"" + route, body, key, value, String.class);"
40489,./TargetProjects/camel-quarkus/integration-test-groups/foundation/core/src/main/java/org/apache/camel/quarkus/core/MySerializationObject.java,53,,"        _hashMap.put(1, ""one"");"
40490,./TargetProjects/camel-quarkus/integration-test-groups/foundation/core/src/test/java/org/apache/camel/quarkus/core/CoreTest.java,34,,"        RestAssured.when().get(""/core/registry/lookup-registry"").then().body(is(""true""));"
40491,./TargetProjects/camel-quarkus/integration-test-groups/foundation/eip/src/main/java/org/apache/camel/quarkus/eip/it/EipRoutes.java,34,,"                .to(""mock:claimCheckByHeader"")"
40492,./TargetProjects/camel-quarkus/integration-test-groups/foundation/eip/src/test/java/org/apache/camel/quarkus/eip/it/EipTest.java,127,,"                .body(Matchers.is(""a,b,c,d""));"
40493,./TargetProjects/camel-quarkus/integration-test-groups/foundation/eip/src/test/java/org/apache/camel/quarkus/eip/it/EipTest.java,174,,"                .body(""baz"")"
40494,./TargetProjects/camel-quarkus/integration-test-groups/foundation/type-converter/src/test/java/org/apache/camel/quarkus/core/converter/it/ConverterTest.java,35,,"        testConverter(""/converter/myRegistryPair"", ""a:b"", ""registry_a"", ""b"");"
40495,./TargetProjects/camel-quarkus/integration-tests-support/aws2/src/main/java/org/apache/camel/quarkus/test/support/aws2/Aws2TestEnvContext.java,65,,"                    properties.put(""camel.component.aws2-"" + s + "".access-key"", accessKey);"
40496,./TargetProjects/camel-quarkus/integration-tests/atlasmap/src/test/java/org/apache/camel/quarkus/component/atlasmap/it/AtlasmapTest.java,36,,"        Person person = new Person(""foo"", ""bar"", 35);"
40497,./TargetProjects/camel-quarkus/integration-tests/atlasmap/src/test/java/org/apache/camel/quarkus/component/atlasmap/it/AtlasmapTest.java,36,,"        Person person = new Person(""foo"", ""bar"", 35);"
40498,./TargetProjects/camel-quarkus/integration-tests/atlasmap/src/test/java/org/apache/camel/quarkus/component/atlasmap/it/AtlasmapTest.java,77,,"        String request = ""{\""id\"":\""101138\""}"";"
40499,./TargetProjects/camel-quarkus/integration-tests/atlasmap/src/test/java/org/apache/camel/quarkus/component/atlasmap/it/AtlasmapTest.java,184,,"        String experctedResult = ""firstName,lastName,age\r\n"" +"
40500,./TargetProjects/camel-quarkus/integration-tests/atlasmap/src/test/java/org/apache/camel/quarkus/component/atlasmap/it/AtlasmapTest.java,185,,"                ""foo,bar,35\r\n"";"
40501,./TargetProjects/camel-quarkus/integration-tests/avro-rpc/src/main/java/org/apache/camel/quarkus/component/avro/rpc/it/AvroRpcResource.java,74,,"    public void reflectionProducerSet(@QueryParam(""protocol"") ProtocolType protocol, String name) throws Exception {"
40502,./TargetProjects/camel-quarkus/integration-tests/avro-rpc/src/main/java/org/apache/camel/quarkus/component/avro/rpc/it/specific/generated/Key.java,118,,"    @SuppressWarnings(value = ""unchecked"")"
40503,./TargetProjects/camel-quarkus/integration-tests/avro-rpc/src/main/java/org/apache/camel/quarkus/component/avro/rpc/it/specific/generated/Value.java,118,,"    @SuppressWarnings(value = ""unchecked"")"
40504,./TargetProjects/camel-quarkus/integration-tests/avro-rpc/src/test/java/org/apache/camel/quarkus/component/avro/rpc/it/AvroRpcTestSupport.java,64,,"                .queryParam(""protocol"", protocol)"
40505,./TargetProjects/camel-quarkus/integration-tests/avro/src/main/java/org/apache/camel/quarkus/component/avro/it/AvroResource.java,44,,"    public String genericMarshalUnmarshalUsingBuildTimeAvroDataFormat(@PathParam(""value"") String value) {"
40506,./TargetProjects/camel-quarkus/integration-tests/avro/src/main/java/org/apache/camel/quarkus/component/avro/it/AvroResource.java,46,,"        input.put(""name"", value);"
40507,./TargetProjects/camel-quarkus/integration-tests/aws2/src/main/java/org/apache/camel/quarkus/component/aws2/CamelRoute.java,31,,"                .to(""log:sf?showAll=true"");"
40508,./TargetProjects/camel-quarkus/integration-tests/base64/src/main/java/org/apache/camel/quarkus/component/base64/it/Base64Resource.java,55,,"        LOG.warn(""de-de "" + String.format(Locale.GERMANY, ""%.8f,%.8f"", 0.1, 0.1));"
40509,./TargetProjects/camel-quarkus/integration-tests/couchdb/src/main/java/org/apache/camel/quarkus/component/couchdb/it/CouchdbTestDocument.java,24,,"    @JsonProperty(""_rev"")"
40510,./TargetProjects/camel-quarkus/integration-tests/couchdb/src/main/java/org/apache/camel/quarkus/component/couchdb/it/CouchdbTestDocument.java,26,,"    @JsonProperty(""_id"")"
40511,./TargetProjects/camel-quarkus/integration-tests/dataformats-json/src/main/java/org/apache/camel/quarkus/component/dataformats/jackson/json/JacksonJsonResource.java,79,,"        String json = ""{\""name\"":\""Camel\""}"";"
40512,./TargetProjects/camel-quarkus/integration-tests/dataformats-json/src/main/java/org/apache/camel/quarkus/component/dataformats/jackson/json/JacksonJsonResource.java,87,,"        assertEquals(""Camel"", pojo.getName());"
40513,./TargetProjects/camel-quarkus/integration-tests/dataformats-json/src/main/java/org/apache/camel/quarkus/component/dataformats/jackson/json/JacksonJsonResource.java,110,,"        assertEquals(""World"", pojo.getName());"
40514,./TargetProjects/camel-quarkus/integration-tests/dataformats-json/src/main/java/org/apache/camel/quarkus/component/dataformats/jackson/json/JacksonJsonResource.java,182,,"        in.put(""name"", ""Camel"");"
40515,./TargetProjects/camel-quarkus/integration-tests/dataformats-json/src/main/java/org/apache/camel/quarkus/component/dataformats/jackson/xml/JacksonXmlResource.java,99,,"        assertEquals(""Camel"", pojo.getName());"
40516,./TargetProjects/camel-quarkus/integration-tests/dataformats-json/src/main/java/org/apache/camel/quarkus/component/dataformats/jackson/xml/JacksonXmlResource.java,147,,"        in.put(""name"", ""Camel"");"
40517,./TargetProjects/camel-quarkus/integration-tests/dataformats-json/src/main/java/org/apache/camel/quarkus/component/dataformats/json/JsonDataformatsResource.java,52,,"    public String processOrder(@QueryParam(""json-component"") String jsonComponent, String statement) {"
40518,./TargetProjects/camel-quarkus/integration-tests/dataformats-json/src/main/java/org/apache/camel/quarkus/component/dataformats/json/JsonDataformatsResource.java,54,,"        return producerTemplate.requestBody(""direct:"" + jsonComponent + ""-in"", statement, String.class);"
40519,./TargetProjects/camel-quarkus/integration-tests/dataformats-json/src/test/java/org/apache/camel/quarkus/component/dataformats/json/JsonComponentsTest.java,46,,"                .queryParam(""json-component"", jsonComponent)"
40520,./TargetProjects/camel-quarkus/integration-tests/debezium/src/test/java/org/apache/camel/quarkus/component/debezium/common/it/mongodb/DebeziumMongodbTest.java,120,,"        doc.put(""name"", name);"
40521,./TargetProjects/camel-quarkus/integration-tests/digitalocean/src/main/java/org/apache/camel/quarkus/component/digitalocean/it/DigitaloceanResource.java,74,,"    public int createDroplet(@PathParam(""name"") String name) {"
40522,./TargetProjects/camel-quarkus/integration-tests/digitalocean/src/main/java/org/apache/camel/quarkus/component/digitalocean/it/DigitaloceanResource.java,77,,"        Droplet droplet = producerTemplate.requestBodyAndHeaders(""direct:droplet"", null, headers, Droplet.class);"
40523,./TargetProjects/camel-quarkus/integration-tests/digitalocean/src/main/java/org/apache/camel/quarkus/component/digitalocean/it/DigitaloceanResource.java,328,,"            FloatingIP floatingIP = producerTemplate.requestBodyAndHeaders(""direct:floatingIPs"", null, headers,"
40524,./TargetProjects/camel-quarkus/integration-tests/digitalocean/src/main/java/org/apache/camel/quarkus/component/digitalocean/it/DigitaloceanResource.java,408,,"        Volume volume = producerTemplate.requestBodyAndHeaders(""direct:blockStorages"", null, headers, Volume.class);"
40525,./TargetProjects/camel-quarkus/integration-tests/digitalocean/src/main/java/org/apache/camel/quarkus/component/digitalocean/it/DigitaloceanResource.java,475,,"        Key key = producerTemplate.requestBodyAndHeaders(""direct:keys"", null, headers, Key.class);"
40526,./TargetProjects/camel-quarkus/integration-tests/digitalocean/src/main/java/org/apache/camel/quarkus/component/digitalocean/it/DigitaloceanResource.java,525,,"        return producerTemplate.requestBodyAndHeaders(""direct:tags"", null, headers, Tag.class);"
40527,./TargetProjects/camel-quarkus/integration-tests/digitalocean/src/test/java/org/apache/camel/quarkus/component/digitalocean/it/DigitaloceanDropletTest.java,114,,"                .body(""resourceId"", equalTo(dropletId))"
40528,./TargetProjects/camel-quarkus/integration-tests/digitalocean/src/test/java/org/apache/camel/quarkus/component/digitalocean/it/DigitaloceanDropletTest.java,115,,"                .body(""type"", equalTo(""ENABLE_BACKUPS""));"
40529,./TargetProjects/camel-quarkus/integration-tests/digitalocean/src/test/java/org/apache/camel/quarkus/component/digitalocean/it/DigitaloceanTest.java,95,,"                .put(""/digitalocean/keys/"" + name)"
40530,./TargetProjects/camel-quarkus/integration-tests/digitalocean/src/test/java/org/apache/camel/quarkus/component/digitalocean/it/DigitaloceanTest.java,104,,"                .body(""name"", equalTo(name));"
40531,./TargetProjects/camel-quarkus/integration-tests/digitalocean/src/test/java/org/apache/camel/quarkus/component/digitalocean/it/DigitaloceanTest.java,139,,"                .post(""/digitalocean/tags/"" + name)"
40532,./TargetProjects/camel-quarkus/integration-tests/elasticsearch-rest/src/test/java/org/apache/camel/quarkus/component/elasticsearch/rest/it/ElasticsearchRestTest.java,48,,"                .queryParam(""indexId"", indexId)"
40533,./TargetProjects/camel-quarkus/integration-tests/fhir/src/test/java/org/apache/camel/quarkus/component/fhir/it/FhirClientTest.java,88,,"        patient.addName().addGiven(""Sherlock"").addFamily(""Holmes"");"
40534,./TargetProjects/camel-quarkus/integration-tests/fhir/src/test/java/org/apache/camel/quarkus/component/fhir/it/FhirClientTest.java,88,,"        patient.addName().addGiven(""Sherlock"").addFamily(""Holmes"");"
40535,./TargetProjects/camel-quarkus/integration-tests/fhir/src/test/java/org/apache/camel/quarkus/component/fhir/it/FhirClientTest.java,89,,"        patient.addAddress().addLine(""221b Baker St, Marylebone, London NW1 6XE, UK"");"
40536,./TargetProjects/camel-quarkus/integration-tests/fhir/src/test/java/org/apache/camel/quarkus/component/fhir/it/FhirDataformatTest.java,139,,"        patient.addName().addGiven(""Sherlock"").addFamily(""Holmes"");"
40537,./TargetProjects/camel-quarkus/integration-tests/fhir/src/test/java/org/apache/camel/quarkus/component/fhir/it/FhirDataformatTest.java,139,,"        patient.addName().addGiven(""Sherlock"").addFamily(""Holmes"");"
40538,./TargetProjects/camel-quarkus/integration-tests/fhir/src/test/java/org/apache/camel/quarkus/component/fhir/it/FhirDataformatTest.java,140,,"        patient.addAddress().addLine(""221b Baker St, Marylebone, London NW1 6XE, UK"");"
40539,./TargetProjects/camel-quarkus/integration-tests/file/src/main/java/org/apache/camel/quarkus/component/file/it/FileLanguageRoutes.java,35,,"        from(""file://target/"" + FILE_LANG_TXT_IN + ""?fileName=${file:onlyname.noext}.txt"")"
40540,./TargetProjects/camel-quarkus/integration-tests/file/src/test/java/org/apache/camel/quarkus/component/file/it/FileTest.java,109,,"        createFile(FILE_CONTENT_01, ""/file/create/"" + CONSUME_BATCH);"
40541,./TargetProjects/camel-quarkus/integration-tests/flatpack/src/main/java/org/apache/camel/quarkus/component/flatpack/it/FlatPackRoutes.java,55,,"        from(""direct:delimited"").to(""flatpack:delim:INVENTORY-Delimited.pzmap.xml"").bean(flatpackRowStore, ""flush"");"
40542,./TargetProjects/camel-quarkus/integration-tests/flatpack/src/main/java/org/apache/camel/quarkus/component/flatpack/it/FlatPackRoutes.java,56,,"        from(""flatpack:delim:INVENTORY-Delimited.pzmap.xml"").bean(flatpackRowStore, ""store"");"
40543,./TargetProjects/camel-quarkus/integration-tests/flatpack/src/test/java/org/apache/camel/quarkus/component/flatpack/it/FlatpackTest.java,53,,"        firstRow.put(""ITEM_DESC"", ""SOME VALVE"");"
40544,./TargetProjects/camel-quarkus/integration-tests/flatpack/src/test/java/org/apache/camel/quarkus/component/flatpack/it/FlatpackTest.java,81,,"        row.put(""FIRSTNAME"", ""JOHN"");"
40545,./TargetProjects/camel-quarkus/integration-tests/flatpack/src/test/java/org/apache/camel/quarkus/component/flatpack/it/FlatpackTest.java,94,,"    @SuppressWarnings(""unchecked"")"
40546,./TargetProjects/camel-quarkus/integration-tests/flatpack/src/test/java/org/apache/camel/quarkus/component/flatpack/it/FlatpackTest.java,171,,"        assertEquals(""James"", rows[0].get(""NAME""));"
40547,./TargetProjects/camel-quarkus/integration-tests/ftp/src/main/java/org/apache/camel/quarkus/component/ftp/it/FtpResource.java,53,,"    public String getFile(@PathParam(""fileName"") String fileName) {"
40548,./TargetProjects/camel-quarkus/integration-tests/ftp/src/main/java/org/apache/camel/quarkus/component/ftps/it/FtpsResource.java,53,,"    public String getFile(@PathParam(""fileName"") String fileName) {"
40549,./TargetProjects/camel-quarkus/integration-tests/ftp/src/main/java/org/apache/camel/quarkus/component/sftp/it/SftpResource.java,53,,"    public String getFile(@PathParam(""fileName"") String fileName) {"
40550,./TargetProjects/camel-quarkus/integration-tests/git/src/main/java/org/apache/camel/quarkus/component/git/it/GitResource.java,62,,"        producerTemplate.requestBody(""git:target/"" + repoName + ""?operation=init"", (Object) null);"
40551,./TargetProjects/camel-quarkus/integration-tests/google-bigquery/src/main/java/org/apache/camel/quarkus/component/google/bigquery/it/GoogleBigqueryResource.java,56,,"        producerTemplate.requestBody(""google-bigquery-sql:"" + getProjectId() + "":"" + sql, null,"
40552,./TargetProjects/camel-quarkus/integration-tests/google-storage/src/test/java/org/apache/camel/quarkus/component/google/storage/it/GoogleStorageTest.java,69,,"            putObject(""Sheldon"", TEST_BUCKET3, FILE_NAME_007);"
40553,./TargetProjects/camel-quarkus/integration-tests/google-storage/src/test/java/org/apache/camel/quarkus/component/google/storage/it/GoogleStorageTest.java,119,,"                        GoogleCloudStorageConstants.DESTINATION_OBJECT_NAME, FILE_NAME_007 + ""_copy""),"
40554,./TargetProjects/camel-quarkus/integration-tests/google/src/main/java/org/apache/camel/quarkus/component/google/it/GoogleCalendarResource.java,67,,"    public Response createCalendarEvent(@QueryParam(""calendarId"") String calendarId, String eventText) throws Exception {"
40555,./TargetProjects/camel-quarkus/integration-tests/google/src/main/java/org/apache/camel/quarkus/component/google/it/GoogleCalendarResource.java,69,,"        headers.put(""CamelGoogleCalendar.calendarId"", calendarId);"
40556,./TargetProjects/camel-quarkus/integration-tests/google/src/test/java/org/apache/camel/quarkus/component/google/it/GoogleComponentsTest.java,56,,"                .queryParam(""calendarId"", calendarId)"
40557,./TargetProjects/camel-quarkus/integration-tests/google/src/test/java/org/apache/camel/quarkus/component/google/it/GoogleComponentsTest.java,139,,"                .queryParam(""fileId"", fileId)"
40558,./TargetProjects/camel-quarkus/integration-tests/hazelcast/src/main/java/org/apache/camel/quarkus/component/hazelcast/it/HazelcastAtomicResource.java,51,,"                ""hazelcast-atomicvalue:foo-atomic"","
40559,./TargetProjects/camel-quarkus/integration-tests/hazelcast/src/main/java/org/apache/camel/quarkus/component/hazelcast/it/HazelcastRoutes.java,168,,"                .process(e -> LOG.info(""object...""))"
40560,./TargetProjects/camel-quarkus/integration-tests/hazelcast/src/main/java/org/apache/camel/quarkus/component/hazelcast/it/HazelcastRoutes.java,171,,"                .process(e -> LOG.info(""...added""))"
40561,./TargetProjects/camel-quarkus/integration-tests/hazelcast/src/main/java/org/apache/camel/quarkus/component/hazelcast/it/HazelcastRoutes.java,174,,"                .process(e -> LOG.info(""...removed""))"
40562,./TargetProjects/camel-quarkus/integration-tests/hazelcast/src/main/java/org/apache/camel/quarkus/component/hazelcast/it/HazelcastRoutes.java,177,,"                .process(e -> LOG.info(""fail!""));"
40563,./TargetProjects/camel-quarkus/integration-tests/hazelcast/src/test/java/org/apache/camel/quarkus/component/hazelcast/it/HazelcastListTest.java,71,,"                .body(Arrays.asList(""foo2"", ""foo3""))"
40564,./TargetProjects/camel-quarkus/integration-tests/hazelcast/src/test/java/org/apache/camel/quarkus/component/hazelcast/it/HazelcastListTest.java,71,,"                .body(Arrays.asList(""foo2"", ""foo3""))"
40565,./TargetProjects/camel-quarkus/integration-tests/hazelcast/src/test/java/org/apache/camel/quarkus/component/hazelcast/it/HazelcastMapTest.java,97,,"                .body(equalTo(""false""));"
40566,./TargetProjects/camel-quarkus/integration-tests/hazelcast/src/test/java/org/apache/camel/quarkus/component/hazelcast/it/HazelcastMultimapTest.java,46,,"        HazelcastMapRequest request = new HazelcastMapRequest().withVaLue(""val1.1"").withId(""1"");"
40567,./TargetProjects/camel-quarkus/integration-tests/hazelcast/src/test/java/org/apache/camel/quarkus/component/hazelcast/it/HazelcastSedaTest.java,41,,"                .body(""foo1"")"
40568,./TargetProjects/camel-quarkus/integration-tests/hazelcast/src/test/java/org/apache/camel/quarkus/component/hazelcast/it/HazelcastSetTest.java,44,,"                .body(""foo1"")"
40569,./TargetProjects/camel-quarkus/integration-tests/hazelcast/src/test/java/org/apache/camel/quarkus/component/hazelcast/it/HazelcastSetTest.java,71,,"                .body(Arrays.asList(""foo2"", ""foo3""))"
40570,./TargetProjects/camel-quarkus/integration-tests/hazelcast/src/test/java/org/apache/camel/quarkus/component/hazelcast/it/HazelcastSetTest.java,71,,"                .body(Arrays.asList(""foo2"", ""foo3""))"
40571,./TargetProjects/camel-quarkus/integration-tests/headersmap/src/test/java/org/apache/camel/quarkus/component/headersmap/it/HeadersmapTest.java,47,,"        assertNull(map.get(""foo""));"
40572,./TargetProjects/camel-quarkus/integration-tests/headersmap/src/test/java/org/apache/camel/quarkus/component/headersmap/it/HeadersmapTest.java,49,,"        map.put(""foo"", ""bar"");"
40573,./TargetProjects/camel-quarkus/integration-tests/headersmap/src/test/java/org/apache/camel/quarkus/component/headersmap/it/HeadersmapTest.java,52,,"        assertEquals(""bar"", map.get(""Foo""));"
40574,./TargetProjects/camel-quarkus/integration-tests/hl7/src/main/java/org/apache/camel/quarkus/component/hl7/it/Hl7Routes.java,43,,"                .unmarshal(""hl7DataFormat"");"
40575,./TargetProjects/camel-quarkus/integration-tests/hl7/src/test/java/org/apache/camel/quarkus/component/hl7/it/Hl7Test.java,56,,"                        ""first_name"", is(""JOHN""),"
40576,./TargetProjects/camel-quarkus/integration-tests/hl7/src/test/java/org/apache/camel/quarkus/component/hl7/it/Hl7Test.java,57,,"                        ""last_name"", is(""SMITH""),"
40577,./TargetProjects/camel-quarkus/integration-tests/hl7/src/test/java/org/apache/camel/quarkus/component/hl7/it/Hl7Test.java,70,,"                .post(""/hl7/marshalUnmarshal"")"
40578,./TargetProjects/camel-quarkus/integration-tests/http/src/main/java/org/apache/camel/quarkus/component/http/it/HttpResource.java,76,,"    public String get(@QueryParam(""test-port"") int port) {"
40579,./TargetProjects/camel-quarkus/integration-tests/http/src/main/java/org/apache/camel/quarkus/component/http/it/HttpResource.java,79,,"                .withHeader(Exchange.HTTP_METHOD, ""GET"")"
40580,./TargetProjects/camel-quarkus/integration-tests/http/src/main/java/org/apache/camel/quarkus/component/http/it/HttpResource.java,103,,"                .withHeader(Exchange.HTTP_METHOD, ""POST"")"
40581,./TargetProjects/camel-quarkus/integration-tests/http/src/main/java/org/apache/camel/quarkus/component/http/it/HttpResource.java,112,,"            @QueryParam(""username"") String username,"
40582,./TargetProjects/camel-quarkus/integration-tests/http/src/main/java/org/apache/camel/quarkus/component/http/it/HttpResource.java,113,,"            @QueryParam(""password"") String password) {"
40583,./TargetProjects/camel-quarkus/integration-tests/http/src/main/java/org/apache/camel/quarkus/component/http/it/HttpResource.java,143,,"                .withHeader(""Accept-Encoding"", ""gzip, deflate"")"
40584,./TargetProjects/camel-quarkus/integration-tests/http/src/main/java/org/apache/camel/quarkus/component/http/it/HttpResource.java,143,,"                .withHeader(""Accept-Encoding"", ""gzip, deflate"")"
40585,./TargetProjects/camel-quarkus/integration-tests/http/src/test/java/org/apache/camel/quarkus/component/http/it/HttpTest.java,44,,"    @MethodSource(""getHttpComponentNames"")"
40586,./TargetProjects/camel-quarkus/integration-tests/http/src/test/java/org/apache/camel/quarkus/component/http/it/HttpTest.java,48,,"                .queryParam(""test-port"", RestAssured.port)"
40587,./TargetProjects/camel-quarkus/integration-tests/jaxb/src/main/java/org/apache/camel/quarkus/component/jaxb/it/JaxbResource.java,52,,"                .created(new URI(""https://camel.apache.org/""))"
40588,./TargetProjects/camel-quarkus/integration-tests/jaxb/src/test/java/org/apache/camel/quarkus/component/jaxb/it/JaxbTest.java,32,,"                .body(getPersonXml(""Foo"", ""Bar"", 22))"
40589,./TargetProjects/camel-quarkus/integration-tests/jaxb/src/test/java/org/apache/camel/quarkus/component/jaxb/it/JaxbTest.java,32,,"                .body(getPersonXml(""Foo"", ""Bar"", 22))"
40590,./TargetProjects/camel-quarkus/integration-tests/jira/src/main/java/org/apache/camel/quarkus/component/jira/it/JiraResource.java,102,,"    public Response readIssueByKey(@PathParam(""key"") String key) {"
40591,./TargetProjects/camel-quarkus/integration-tests/jira/src/test/java/org/apache/camel/quarkus/component/jira/it/JiraTest.java,97,,"                .pathParam(""routeId"", ""jiraIssues"")"
40592,./TargetProjects/camel-quarkus/integration-tests/jira/src/test/java/org/apache/camel/quarkus/component/jira/it/JiraTest.java,98,,"                .pathParam(""action"", ""start"")"
40593,./TargetProjects/camel-quarkus/integration-tests/jira/src/test/java/org/apache/camel/quarkus/component/jira/it/JiraTest.java,99,,"                .post(""/jira/route/{routeId}/{action}"")"
40594,./TargetProjects/camel-quarkus/integration-tests/jira/src/test/java/org/apache/camel/quarkus/component/jira/it/JiraTest.java,106,,"                .queryParam(""summary"", ISSUE_SUMMARY)"
40595,./TargetProjects/camel-quarkus/integration-tests/jira/src/test/java/org/apache/camel/quarkus/component/jira/it/JiraTest.java,107,,"                .queryParam(""type"", ISSUE_TYPE)"
40596,./TargetProjects/camel-quarkus/integration-tests/jira/src/test/java/org/apache/camel/quarkus/component/jira/it/JiraTest.java,110,,"                .post(""/jira/issue"")"
40597,./TargetProjects/camel-quarkus/integration-tests/jira/src/test/java/org/apache/camel/quarkus/component/jira/it/JiraTest.java,114,,"                        ""description"", equalTo(ISSUE_DESCRIPTION),"
40598,./TargetProjects/camel-quarkus/integration-tests/jira/src/test/java/org/apache/camel/quarkus/component/jira/it/JiraTest.java,115,,"                        ""key"", matchesPattern(""[A-Z]+-[0-9]+""),"
40599,./TargetProjects/camel-quarkus/integration-tests/jira/src/test/java/org/apache/camel/quarkus/component/jira/it/JiraTest.java,115,,"                        ""key"", matchesPattern(""[A-Z]+-[0-9]+""),"
40600,./TargetProjects/camel-quarkus/integration-tests/jolt/src/main/java/org/apache/camel/quarkus/component/jolt/it/JoltResource.java,50,,"        inbody.put(""key"", value);"
40601,./TargetProjects/camel-quarkus/integration-tests/jpa/src/main/java/org/apache/camel/quarkus/component/jpa/it/JpaResource.java,54,,"    @SuppressWarnings(""unchecked"")"
40602,./TargetProjects/camel-quarkus/integration-tests/jpa/src/main/java/org/apache/camel/quarkus/component/jpa/it/JpaResource.java,56,,"        return consumerTemplate.receiveBodyNoWait(""jpa:"" + Fruit.class.getName(), List.class);"
40603,./TargetProjects/camel-quarkus/integration-tests/jpa/src/test/java/org/apache/camel/quarkus/component/jpa/it/JpaTest.java,35,,"        String[] fruits = new String[] { ""Orange"", ""Lemon"", ""Plum"" };"
40604,./TargetProjects/camel-quarkus/integration-tests/jpa/src/test/java/org/apache/camel/quarkus/component/jpa/it/JpaTest.java,51,,"                .body(""name"", contains(fruits));"
40605,./TargetProjects/camel-quarkus/integration-tests/jta/src/main/java/org/apache/camel/quarkus/component/jta/it/JtaRoutes.java,53,,"                .setHeader(""message"", body())"
40606,./TargetProjects/camel-quarkus/integration-tests/kafka-sasl-ssl/src/main/java/org/apache/camel/quarkus/kafka/sasl/KafkaSaslSslResource.java,61,,"    public JsonObject post(@PathParam(""topicName"") String topicName, String message) throws Exception {"
40607,./TargetProjects/camel-quarkus/integration-tests/kafka-sasl/src/main/java/org/apache/camel/quarkus/kafka/sasl/KafkaSaslResource.java,60,,"    public JsonObject post(@PathParam(""topicName"") String topicName, String message) throws Exception {"
40608,./TargetProjects/camel-quarkus/integration-tests/kafka-ssl/src/main/java/org/apache/camel/quarkus/kafka/ssl/KafkaSslResource.java,74,,"    public JsonObject post(@PathParam(""topicName"") String topicName, String message) throws Exception {"
40609,./TargetProjects/camel-quarkus/integration-tests/kafka/src/main/java/org/apache/camel/quarkus/component/kafka/CamelKafkaResource.java,82,,"    public JsonObject post(@PathParam(""topicName"") String topicName, String message) throws Exception {"
40610,./TargetProjects/camel-quarkus/integration-tests/kamelet/src/main/java/org/apache/camel/quarkus/component/kamelet/it/KameletRoutes.java,33,,"                .from(""kamelet:source"")"
40611,./TargetProjects/camel-quarkus/integration-tests/lra/src/test/java/org/apache/camel/quarkus/component/lra/it/LraTest.java,36,,"                .queryParam(""amount"", 20)"
40612,./TargetProjects/camel-quarkus/integration-tests/lra/src/test/java/org/apache/camel/quarkus/component/lra/it/LraTest.java,37,,"                .queryParam(""fail"", false)"
40613,./TargetProjects/camel-quarkus/integration-tests/lra/src/test/java/org/apache/camel/quarkus/component/lra/it/LraTest.java,38,,"                .post(""/lra/order"")"
40614,./TargetProjects/camel-quarkus/integration-tests/messaging/src/main/java/org/apache/camel/quarkus/component/messaging/it/JmsResource.java,74,,"    public String consumeJmsQueueMessage(@PathParam(""queueName"") String queueName) {"
40615,./TargetProjects/camel-quarkus/integration-tests/messaging/src/main/java/org/apache/camel/quarkus/component/messaging/it/JmsResource.java,83,,"        return Response.created(new URI(""https://camel.apache.org/"")).build();"
40616,./TargetProjects/camel-quarkus/integration-tests/messaging/src/main/java/org/apache/camel/quarkus/component/messaging/it/JmsResource.java,312,,"        return consumerTemplate.receiveBody(""paho:"" + queueName, 5000, String.class);"
40617,./TargetProjects/camel-quarkus/integration-tests/microprofile/src/test/java/org/apache/camel/quarkus/component/microprofile/it/health/MicroProfileHealthTest.java,38,,"        RestAssured.when().get(""/q/health"").then()"
40618,./TargetProjects/camel-quarkus/integration-tests/microprofile/src/test/java/org/apache/camel/quarkus/component/microprofile/it/health/MicroProfileHealthTest.java,40,,"                .header(""Content-Type"", containsString(""charset=UTF-8""))"
40619,./TargetProjects/camel-quarkus/integration-tests/microprofile/src/test/java/org/apache/camel/quarkus/component/microprofile/it/health/MicroProfileHealthTest.java,40,,"                .header(""Content-Type"", containsString(""charset=UTF-8""))"
40620,./TargetProjects/camel-quarkus/integration-tests/microprofile/src/test/java/org/apache/camel/quarkus/component/microprofile/it/health/MicroProfileHealthTest.java,41,,"                .body(""status"", is(""UP""),"
40621,./TargetProjects/camel-quarkus/integration-tests/microprofile/src/test/java/org/apache/camel/quarkus/component/microprofile/it/health/MicroProfileHealthTest.java,42,,"                        ""checks.status"", containsInAnyOrder(""UP"", ""UP""),"
40622,./TargetProjects/camel-quarkus/integration-tests/microprofile/src/test/java/org/apache/camel/quarkus/component/microprofile/it/health/MicroProfileHealthTest.java,43,,"                        ""checks.name"","
40623,./TargetProjects/camel-quarkus/integration-tests/microprofile/src/test/java/org/apache/camel/quarkus/component/microprofile/it/health/MicroProfileHealthTest.java,44,,"                        containsInAnyOrder(""camel-readiness-checks"", ""camel-liveness-checks""),"
40624,./TargetProjects/camel-quarkus/integration-tests/microprofile/src/test/java/org/apache/camel/quarkus/component/microprofile/it/health/MicroProfileHealthTest.java,44,,"                        containsInAnyOrder(""camel-readiness-checks"", ""camel-liveness-checks""),"
40625,./TargetProjects/camel-quarkus/integration-tests/microprofile/src/test/java/org/apache/camel/quarkus/component/microprofile/it/health/MicroProfileHealthTest.java,45,,"                        ""checks.data.context"", containsInAnyOrder(null, ""UP""),"
40626,./TargetProjects/camel-quarkus/integration-tests/microprofile/src/test/java/org/apache/camel/quarkus/component/microprofile/it/health/MicroProfileHealthTest.java,60,,"                    .body(""status"", is(""DOWN""),"
40627,./TargetProjects/camel-quarkus/integration-tests/minio/src/test/java/org/apache/camel/quarkus/component/minio/it/MinioTest.java,114,,"                .body(containsString(""Hi Sheldon""));"
40628,./TargetProjects/camel-quarkus/integration-tests/mongodb/src/main/java/org/apache/camel/quarkus/component/mongodb/it/MongoDbResource.java,74,,"    public Response writeToCollection(@PathParam(""collectionName"") String collectionName, String content,"
40629,./TargetProjects/camel-quarkus/integration-tests/mongodb/src/main/java/org/apache/camel/quarkus/component/mongodb/it/MongoDbResource.java,75,,"            @HeaderParam(""mongoClientName"") String mongoClientName)"
40630,./TargetProjects/camel-quarkus/integration-tests/mongodb/src/main/java/org/apache/camel/quarkus/component/mongodb/it/MongoDbResource.java,127,,"        return list.stream().map(d -> d.getString(""name"")).collect(Collectors.toList());"
40631,./TargetProjects/camel-quarkus/integration-tests/mongodb/src/test/java/org/apache/camel/quarkus/component/mongodb/it/MongoDbTest.java,97,,"                .header(""mongoClientName"", namedClient)"
40632,./TargetProjects/camel-quarkus/integration-tests/mongodb/src/test/java/org/apache/camel/quarkus/component/mongodb/it/MongoDbTest.java,153,,"            collection.insertOne(new Document(""increasing"", i).append(""string"", ""value"" + i));"
40633,./TargetProjects/camel-quarkus/integration-tests/mongodb/src/test/java/org/apache/camel/quarkus/component/mongodb/it/MongoDbTest.java,153,,"            collection.insertOne(new Document(""increasing"", i).append(""string"", ""value"" + i));"
40634,./TargetProjects/camel-quarkus/integration-tests/mongodb/src/test/java/org/apache/camel/quarkus/component/mongodb/it/MongoDbTest.java,153,,"            collection.insertOne(new Document(""increasing"", i).append(""string"", ""value"" + i));"
40635,./TargetProjects/camel-quarkus/integration-tests/mongodb/src/test/java/org/apache/camel/quarkus/component/mongodb/it/MongoDbTest.java,245,,"        collection.insertOne(new Document(""name"", ""Sheldon""));"
40636,./TargetProjects/camel-quarkus/integration-tests/mongodb/src/test/java/org/apache/camel/quarkus/component/mongodb/it/MongoDbTest.java,245,,"        collection.insertOne(new Document(""name"", ""Sheldon""));"
40637,./TargetProjects/camel-quarkus/integration-tests/mongodb/src/test/java/org/apache/camel/quarkus/component/mongodb/it/MongodbGridfsTest.java,43,,"                .header(""mongoClientName"", namedClient)"
40638,./TargetProjects/camel-quarkus/integration-tests/nats/src/main/java/org/apache/camel/quarkus/component/nats/it/NatsRoutes.java,47,,"        from(""natsBasicAuth:test"").routeId(""basic-auth"").bean(natsResource, ""storeMessage"");"
40639,./TargetProjects/camel-quarkus/integration-tests/nats/src/test/java/org/apache/camel/quarkus/component/nats/it/NatsTest.java,37,,"        Header header = new Header(""sendToEndpointUri"", ""natsBasicAuth:test"");"
40640,./TargetProjects/camel-quarkus/integration-tests/nats/src/test/java/org/apache/camel/quarkus/component/nats/it/NatsTest.java,38,,"        given().when().header(header).body(""basic-auth-msg"").post(""/nats/send"").then().statusCode(204);"
40641,./TargetProjects/camel-quarkus/integration-tests/nats/src/test/java/org/apache/camel/quarkus/component/nats/it/NatsTest.java,41,,"            return given().get(""/nats/messages/basic-auth"").path(""size()"").equals(1);"
40642,./TargetProjects/camel-quarkus/integration-tests/netty/src/main/java/org/apache/camel/quarkus/component/netty/tcp/NettyTcpResource.java,115,,"            String request = exchange.getMessage().getHeader(""request"", String.class);"
40643,./TargetProjects/camel-quarkus/integration-tests/netty/src/test/java/org/apache/camel/quarkus/component/netty/tcp/NettyTcpTest.java,35,,"                .body(""Camel Quarkus Netty"")"
40644,./TargetProjects/camel-quarkus/integration-tests/netty/src/test/java/org/apache/camel/quarkus/component/netty/udp/NettyUdpTest.java,46,,"                .body(""Camel Quarkus Netty"")"
40645,./TargetProjects/camel-quarkus/integration-tests/nitrite/src/main/java/org/apache/camel/quarkus/component/nitrite/it/NitriteResource.java,83,,"        LOG.debugf(""Sending to nitrite: {%s}"", object);"
40646,./TargetProjects/camel-quarkus/integration-tests/nitrite/src/test/java/org/apache/camel/quarkus/component/nitrite/it/NitriteTest.java,40,,"            ""Sheldon"","
40647,./TargetProjects/camel-quarkus/integration-tests/nitrite/src/test/java/org/apache/camel/quarkus/component/nitrite/it/NitriteTest.java,44,,"            ""Leonard"", ""Earth"");"
40648,./TargetProjects/camel-quarkus/integration-tests/nitrite/src/test/java/org/apache/camel/quarkus/component/nitrite/it/NitriteTest.java,47,,"            ""Irma"","
40649,./TargetProjects/camel-quarkus/integration-tests/nitrite/src/test/java/org/apache/camel/quarkus/component/nitrite/it/NitriteTest.java,75,,"        RestAssured.get(""/nitrite/getRepositoryClass?mappable="" + mappable)"
40650,./TargetProjects/camel-quarkus/integration-tests/nitrite/src/test/java/org/apache/camel/quarkus/component/nitrite/it/NitriteTest.java,82,,"                .queryParam(""mappable"", mappable)"
40651,./TargetProjects/camel-quarkus/integration-tests/nitrite/src/test/java/org/apache/camel/quarkus/component/nitrite/it/NitriteTest.java,87,,"                .body(""name"", is(""Sheldon""));"
40652,./TargetProjects/camel-quarkus/integration-tests/nitrite/src/test/java/org/apache/camel/quarkus/component/nitrite/it/NitriteTest.java,91,,"                .header(NitriteConstants.CHANGE_TYPE, ""INSERT"")"
40653,./TargetProjects/camel-quarkus/integration-tests/nitrite/src/test/java/org/apache/camel/quarkus/component/nitrite/it/NitriteTest.java,130,,"        updatedSheldon.setAddress(""Moon"");"
40654,./TargetProjects/camel-quarkus/integration-tests/nitrite/src/test/java/org/apache/camel/quarkus/component/nitrite/it/NitriteTest.java,138,,"                .post(""/nitrite/repositoryClassOperation"")"
40655,./TargetProjects/camel-quarkus/integration-tests/nitrite/src/test/java/org/apache/camel/quarkus/component/nitrite/it/NitriteTest.java,141,,"                        ""address"", is(""Moon""));"
40656,./TargetProjects/camel-quarkus/integration-tests/nitrite/src/test/java/org/apache/camel/quarkus/component/nitrite/it/NitriteTest.java,157,,"                .body(""size()"", is(1), // After the update, there is 1 employee from the Moon"
40657,./TargetProjects/camel-quarkus/integration-tests/nitrite/src/test/java/org/apache/camel/quarkus/component/nitrite/it/NitriteTest.java,199,,"        RestAssured.get(""/nitrite/collection"")"
40658,./TargetProjects/camel-quarkus/integration-tests/nitrite/src/test/java/org/apache/camel/quarkus/component/nitrite/it/NitriteTest.java,205,,"                .body(Document.createDocument(""key1"", ""value1""))"
40659,./TargetProjects/camel-quarkus/integration-tests/nitrite/src/test/java/org/apache/camel/quarkus/component/nitrite/it/NitriteTest.java,205,,"                .body(Document.createDocument(""key1"", ""value1""))"
40660,./TargetProjects/camel-quarkus/integration-tests/nitrite/src/test/java/org/apache/camel/quarkus/component/nitrite/it/NitriteTest.java,231,,"                .body(new Operation(Operation.Type.insert, null, null, Document.createDocument(""key1"", ""value_beforeUpdate"")))"
40661,./TargetProjects/camel-quarkus/integration-tests/nitrite/src/test/java/org/apache/camel/quarkus/component/nitrite/it/NitriteTest.java,232,,"                .post(""/nitrite/collectionOperation"")"
40662,./TargetProjects/camel-quarkus/integration-tests/nitrite/src/test/java/org/apache/camel/quarkus/component/nitrite/it/NitriteTest.java,245,,"                        Document.createDocument(""key1"", ""value_afterUpdate"")))"
40663,./TargetProjects/camel-quarkus/integration-tests/olingo4/src/main/java/org/apache/camel/quarkus/component/olingo4/it/Olingo4Resource.java,56,,"    public Response create(@QueryParam(""sessionId"") String sessionId, String json) throws Exception {"
40664,./TargetProjects/camel-quarkus/integration-tests/olingo4/src/test/java/org/apache/camel/quarkus/component/olingo4/it/Olingo4Test.java,61,,"                .queryParam(""sessionId"", sessionId)"
40665,./TargetProjects/camel-quarkus/integration-tests/opentracing/src/test/java/org/apache/camel/quarkus/component/opentracing/it/OpenTracingTest.java,80,,"        assertEquals(spans.get(0).get(""parentId""), spans.get(1).get(""spanId""));"
40666,./TargetProjects/camel-quarkus/integration-tests/optaplanner/src/main/java/org/apache/camel/quarkus/component/optaplanner/it/bootstrap/DataGenerator.java,67,,"        lessonList.add(new Lesson(""Math"", ""A. Turing"", ""9th grade""));"
40667,./TargetProjects/camel-quarkus/integration-tests/optaplanner/src/main/java/org/apache/camel/quarkus/component/optaplanner/it/bootstrap/DataGenerator.java,67,,"        lessonList.add(new Lesson(""Math"", ""A. Turing"", ""9th grade""));"
40668,./TargetProjects/camel-quarkus/integration-tests/optaplanner/src/main/java/org/apache/camel/quarkus/component/optaplanner/it/bootstrap/DataGenerator.java,67,,"        lessonList.add(new Lesson(""Math"", ""A. Turing"", ""9th grade""));"
40669,./TargetProjects/camel-quarkus/integration-tests/optaplanner/src/main/java/org/apache/camel/quarkus/component/optaplanner/it/bootstrap/DataGenerator.java,69,,"        lessonList.add(new Lesson(""Physics"", ""M. Curie"", ""9th grade""));"
40670,./TargetProjects/camel-quarkus/integration-tests/optaplanner/src/main/java/org/apache/camel/quarkus/component/optaplanner/it/bootstrap/DataGenerator.java,72,,"        lessonList.add(new Lesson(""History"", ""I. Jones"", ""9th grade""));"
40671,./TargetProjects/camel-quarkus/integration-tests/optaplanner/src/main/java/org/apache/camel/quarkus/component/optaplanner/it/bootstrap/DataGenerator.java,75,,"        lessonList.add(new Lesson(""Spanish"", ""P. Cruz"", ""9th grade""));"
40672,./TargetProjects/camel-quarkus/integration-tests/optaplanner/src/main/java/org/apache/camel/quarkus/component/optaplanner/it/bootstrap/DataGenerator.java,78,,"        lessonList.add(new Lesson(""Math"", ""A. Turing"", ""10th grade""));"
40673,./TargetProjects/camel-quarkus/integration-tests/pdf/src/test/java/org/apache/camel/quarkus/component/pdf/it/PdfTest.java,39,,"                .body(""content to be included in the created pdf document"").post(""/pdf/createFromText"").then().statusCode(201)"
40674,./TargetProjects/camel-quarkus/integration-tests/platform-http/src/main/java/org/apache/camel/quarkus/component/platform/http/it/PlatformHttpRouteBuilder.java,54,,"        from(""platform-http:/platform-http/get-post?httpMethodRestrict=GET,POST"").setBody(simple(""Hello ${body}""));"
40675,./TargetProjects/camel-quarkus/integration-tests/platform-http/src/test/java/org/apache/camel/quarkus/component/http/server/it/PlatformHttpTest.java,63,,"                .contentType(""text/plain"")"
40676,./TargetProjects/camel-quarkus/integration-tests/platform-http/src/test/java/org/apache/camel/quarkus/component/http/server/it/PlatformHttpTest.java,64,,"                .post(""/my-context/platform-http/rest-post"")"
40677,./TargetProjects/camel-quarkus/integration-tests/platform-http/src/test/java/org/apache/camel/quarkus/component/http/server/it/PlatformHttpTest.java,71,,"                .contentType(""application/json"")"
40678,./TargetProjects/camel-quarkus/integration-tests/pubnub/src/test/java/org/apache/camel/quarkus/component/pubnub/it/PubnubTest.java,46,,"                    .willReturn(aResponse().withStatus(200).withBody(""[1,\""Sent\"",\""14598111595318003\""]"")));"
40679,./TargetProjects/camel-quarkus/integration-tests/rest/src/main/java/org/apache/camel/quarkus/component/rest/it/RestRoutes.java,42,,"                .consumes(""text/plain"").produces(""text/plain"")"
40680,./TargetProjects/camel-quarkus/integration-tests/rest/src/test/java/org/apache/camel/quarkus/component/rest/it/RestTest.java,74,,"                .post(""/rest/validation"")"
40681,./TargetProjects/camel-quarkus/integration-tests/salesforce/src/main/java/org/apache/camel/quarkus/component/salesforce/generated/Account.java,42,,"@XStreamAlias(""Account"")"
40682,./TargetProjects/camel-quarkus/integration-tests/salesforce/src/main/java/org/apache/camel/quarkus/component/salesforce/generated/Account.java,370,,"    @JsonProperty(""Website"")"
40683,./TargetProjects/camel-quarkus/integration-tests/salesforce/src/main/java/org/apache/camel/quarkus/component/salesforce/generated/Account.java,407,,"    @JsonProperty(""Industry"")"
40684,./TargetProjects/camel-quarkus/integration-tests/salesforce/src/main/java/org/apache/camel/quarkus/component/salesforce/generated/Account.java,444,,"    @JsonProperty(""Ownership"")"
40685,./TargetProjects/camel-quarkus/integration-tests/salesforce/src/main/java/org/apache/camel/quarkus/component/salesforce/generated/Account.java,567,,"    @JsonProperty(""Tradestyle"")"
40686,./TargetProjects/camel-quarkus/integration-tests/salesforce/src/main/java/org/apache/camel/quarkus/component/salesforce/generated/Account.java,763,,"        final SObjectField sObjectField1 = createField(""Id"", ""Account ID"", ""id"", ""tns:ID"", 18, false, false, false, false,"
40687,./TargetProjects/camel-quarkus/integration-tests/salesforce/src/main/java/org/apache/camel/quarkus/component/salesforce/generated/Account.java,769,,"        final SObjectField sObjectField3 = createField(""MasterRecordId"", ""Master Record ID"", ""reference"", ""tns:ID"", 18, false,"
40688,./TargetProjects/camel-quarkus/integration-tests/salesforce/src/main/java/org/apache/camel/quarkus/component/salesforce/generated/Account.java,772,,"        final SObjectField sObjectField4 = createField(""Name"", ""Account Name"", ""string"", ""xsd:string"", 255, false, false, true,"
40689,./TargetProjects/camel-quarkus/integration-tests/salesforce/src/main/java/org/apache/camel/quarkus/component/salesforce/generated/Account.java,772,,"        final SObjectField sObjectField4 = createField(""Name"", ""Account Name"", ""string"", ""xsd:string"", 255, false, false, true,"
40690,./TargetProjects/camel-quarkus/integration-tests/salesforce/src/main/java/org/apache/camel/quarkus/component/salesforce/generated/Account.java,775,,"        final SObjectField sObjectField5 = createField(""Type"", ""Account Type"", ""picklist"", ""xsd:string"", 255, false, true,"
40691,./TargetProjects/camel-quarkus/integration-tests/salesforce/src/main/java/org/apache/camel/quarkus/component/salesforce/generated/Account.java,796,,"        final SObjectField sObjectField12 = createField(""BillingLatitude"", ""Billing Latitude"", ""double"", ""xsd:double"", 0, false,"
40692,./TargetProjects/camel-quarkus/integration-tests/salesforce/src/main/java/org/apache/camel/quarkus/component/salesforce/generated/Account.java,796,,"        final SObjectField sObjectField12 = createField(""BillingLatitude"", ""Billing Latitude"", ""double"", ""xsd:double"", 0, false,"
40693,./TargetProjects/camel-quarkus/integration-tests/salesforce/src/main/java/org/apache/camel/quarkus/component/salesforce/generated/Account.java,880,,"        final SObjectField sObjectField40 = createField(""CreatedDate"", ""Created Date"", ""datetime"", ""xsd:dateTime"", 0, false,"
40694,./TargetProjects/camel-quarkus/integration-tests/salesforce/src/main/java/org/apache/camel/quarkus/component/salesforce/generated/Account.java,880,,"        final SObjectField sObjectField40 = createField(""CreatedDate"", ""Created Date"", ""datetime"", ""xsd:dateTime"", 0, false,"
40695,./TargetProjects/camel-quarkus/integration-tests/shiro/src/test/java/org/apache/camel/quarkus/component/shiro/it/ShiroTest.java,54,,"        test(""headers"", SHELDON_TOKEN, AUTHORIZATION.none, true);"
40696,./TargetProjects/camel-quarkus/integration-tests/shiro/src/test/java/org/apache/camel/quarkus/component/shiro/it/ShiroTest.java,60,,"        test(""token"", IRMA_TOKEN, AUTHORIZATION.none, true);"
40697,./TargetProjects/camel-quarkus/integration-tests/soap/src/main/java/org/apache/camel/quarkus/component/soap/it/SoapResource.java,55,,"    public Response marshal(@PathParam(""soapVersion"") String soapVersion, String message) throws Exception {"
40698,./TargetProjects/camel-quarkus/integration-tests/soap/src/main/java/org/apache/camel/quarkus/component/soap/it/SoapResource.java,61,,"        final String response = fluentProducerTemplate.toF(""direct:marshal-%s"", ""soap"" + soapVersion)"
40699,./TargetProjects/camel-quarkus/integration-tests/soap/src/main/java/org/apache/camel/quarkus/component/soap/it/SoapResource.java,66,,"                .created(new URI(""https://camel.apache.org/""))"
40700,./TargetProjects/camel-quarkus/integration-tests/soap/src/main/java/org/apache/camel/quarkus/component/soap/it/SoapRoutes.java,43,,"                .marshal(""soapDataFormat"");"
40701,./TargetProjects/camel-quarkus/integration-tests/soap/src/main/java/org/apache/camel/quarkus/component/soap/it/multipart/MultiPartCustomerService.java,26,,"@WebService(targetNamespace = ""http://multipart.it.soap.component.quarkus.camel.apache.org/"", name = ""MultiPartCustomerService"")"
40702,./TargetProjects/camel-quarkus/integration-tests/soap/src/main/java/org/apache/camel/quarkus/component/soap/it/multipart/MultiPartCustomerService.java,34,,"            @WebParam(partName = ""parameters"", name = ""saveCustomerToo"", targetNamespace = ""http://multipart.it.soap.component.quarkus.camel.apache.org/"") SaveCustomer parameters,"
40703,./TargetProjects/camel-quarkus/integration-tests/soap/src/main/java/org/apache/camel/quarkus/component/soap/it/multipart/MultiPartCustomerService.java,35,,"            @WebParam(partName = ""product"", name = ""product"", targetNamespace = ""http://multipart.it.soap.component.quarkus.camel.apache.org/"", header = true) Product product,"
40704,./TargetProjects/camel-quarkus/integration-tests/soap/src/main/java/org/apache/camel/quarkus/component/soap/it/multipart/MultiPartCustomerService.java,36,,"            @WebParam(partName = ""company"", mode = WebParam.Mode.INOUT, name = ""company"", targetNamespace = ""http://multipart.it.soap.component.quarkus.camel.apache.org/"", header = true) javax.xml.ws.Holder<Company> company);"
40705,./TargetProjects/camel-quarkus/integration-tests/soap/src/main/java/org/apache/camel/quarkus/component/soap/it/multipart/ObjectFactory.java,28,,"            ""http://multipart.it.soap.component.quarkus.camel.apache.org/"", ""getCustomersByName"");"
40706,./TargetProjects/camel-quarkus/integration-tests/soap/src/main/java/org/apache/camel/quarkus/component/soap/it/service/CustomerService.java,26,,"@WebService(targetNamespace = ""http://service.it.soap.component.quarkus.camel.apache.org/"", name = ""CustomerService"")"
40707,./TargetProjects/camel-quarkus/integration-tests/soap/src/main/java/org/apache/camel/quarkus/component/soap/it/service/CustomerService.java,32,,"    @WebResult(name = ""getAllAmericanCustomersResponse"", targetNamespace = ""http://service.it.soap.component.quarkus.camel.apache.org/"", partName = ""parameters"")"
40708,./TargetProjects/camel-quarkus/integration-tests/soap/src/main/java/org/apache/camel/quarkus/component/soap/it/service/ObjectFactory.java,28,,"            ""http://service.it.soap.component.quarkus.camel.apache.org/"","
40709,./TargetProjects/camel-quarkus/integration-tests/soap/src/test/java/org/apache/camel/quarkus/component/soap/it/SoapTest.java,38,,"    @ValueSource(strings = { ""1.1"", ""1.2"" })"
40710,./TargetProjects/camel-quarkus/integration-tests/soap/src/test/java/org/apache/camel/quarkus/component/soap/it/SoapTest.java,38,,"    @ValueSource(strings = { ""1.1"", ""1.2"" })"
40711,./TargetProjects/camel-quarkus/integration-tests/soap/src/test/java/org/apache/camel/quarkus/component/soap/it/SoapTest.java,43,,"                .pathParam(""soapVersion"", soapVersion)"
40712,./TargetProjects/camel-quarkus/integration-tests/solr/src/test/java/org/apache/camel/quarkus/component/solr/it/SolrTest.java,50,,"    @MethodSource(""resources"")"
40713,./TargetProjects/camel-quarkus/integration-tests/splunk/src/test/java/org/apache/camel/quarkus/component/splunk/it/SplunkTest.java,57,,"        Assert.assertEquals(""Irma_normal"", result.get(0).get(""name""));"
40714,./TargetProjects/camel-quarkus/integration-tests/splunk/src/test/java/org/apache/camel/quarkus/component/splunk/it/SplunkTest.java,76,,"        write(""_realtime1"", SplunkTestResource.TEST_INDEX, ""submit"");"
40715,./TargetProjects/camel-quarkus/integration-tests/splunk/src/test/java/org/apache/camel/quarkus/component/splunk/it/SplunkTestResource.java,53,,"            container.execInContainer(""sudo"", ""sed"", ""-i"", ""s/allowRemoteLogin=requireSetPassword/allowRemoteLogin=always/"","
40716,./TargetProjects/camel-quarkus/integration-tests/sql/src/main/java/org/apache/camel/quarkus/component/sql/it/SqlResource.java,63,,"    public String getCamel(@PathParam(""species"") String species) throws Exception {"
40717,./TargetProjects/camel-quarkus/integration-tests/sql/src/test/java/org/apache/camel/quarkus/component/sql/it/SqlTest.java,129,,"        postMap(""/sql/toDirect/transacted"", CollectionHelper.mapOf(SqlConstants.SQL_QUERY,"
40718,./TargetProjects/camel-quarkus/integration-tests/sql/src/test/java/org/apache/camel/quarkus/component/sql/it/SqlTest.java,161,,"        postMapWithParam(""/sql/toDirect/idempotent"","
40719,./TargetProjects/camel-quarkus/integration-tests/sql/src/test/java/org/apache/camel/quarkus/component/sql/it/SqlTest.java,162,,"                ""body"", ""one"","
40720,./TargetProjects/camel-quarkus/integration-tests/sql/src/test/java/org/apache/camel/quarkus/component/sql/it/SqlTest.java,163,,"                CollectionHelper.mapOf(""messageId"", ""1""))"
40721,./TargetProjects/camel-quarkus/integration-tests/sql/src/test/java/org/apache/camel/quarkus/component/sql/it/SqlTest.java,192,,"        postMapWithParam(""/sql/toDirect/aggregation"", ""body"", ""A"", CollectionHelper.mapOf(""messageId"", ""123""))"
40722,./TargetProjects/camel-quarkus/integration-tests/sql/src/test/java/org/apache/camel/quarkus/component/sql/it/SqlTest.java,192,,"        postMapWithParam(""/sql/toDirect/aggregation"", ""body"", ""A"", CollectionHelper.mapOf(""messageId"", ""123""))"
40723,./TargetProjects/camel-quarkus/integration-tests/stringtemplate/src/test/java/org/apache/camel/quarkus/component/stringtemplate/it/StringtemplateTest.java,44,,"                put(""name"", ""Sheldon"");"
40724,./TargetProjects/camel-quarkus/integration-tests/stringtemplate/src/test/java/org/apache/camel/quarkus/component/stringtemplate/it/StringtemplateTest.java,44,,"                put(""name"", ""Sheldon"");"
40725,./TargetProjects/camel-quarkus/integration-tests/stringtemplate/src/test/java/org/apache/camel/quarkus/component/stringtemplate/it/StringtemplateTest.java,49,,"                .queryParam(""body"", ""PS: Next beer is on me!"")"
40726,./TargetProjects/camel-quarkus/integration-tests/stringtemplate/src/test/java/org/apache/camel/quarkus/component/stringtemplate/it/StringtemplateTest.java,50,,"                .queryParam(""template"", ""//template/letter.tm"")"
40727,./TargetProjects/camel-quarkus/integration-tests/stringtemplate/src/test/java/org/apache/camel/quarkus/component/stringtemplate/it/StringtemplateTest.java,53,,"                .post(""/stringtemplate/template"")"
40728,./TargetProjects/camel-quarkus/integration-tests/stringtemplate/src/test/java/org/apache/camel/quarkus/component/stringtemplate/it/StringtemplateTest.java,80,,"                .queryParam(""parameters"", ""allowTemplateFromHeader=true"")"
40729,./TargetProjects/camel-quarkus/integration-tests/telegram/src/main/java/org/apache/camel/quarkus/component/telegram/it/TelegramResource.java,72,,"        producerTemplate.requestBody(String.format(""telegram://bots?chatId=%s"", chatId), message);"
40730,./TargetProjects/camel-quarkus/integration-tests/telegram/src/main/java/org/apache/camel/quarkus/component/telegram/it/TelegramResource.java,73,,"        log.infof(""Sent a message to telegram %s"", message);"
40731,./TargetProjects/camel-quarkus/integration-tests/telegram/src/main/java/org/apache/camel/quarkus/component/telegram/it/TelegramResource.java,75,,"                .created(new URI(String.format(""https://telegram.org/"")))"
40732,./TargetProjects/camel-quarkus/integration-tests/telegram/src/test/java/org/apache/camel/quarkus/component/telegram/it/TelegramTest.java,107,,"                    .post(""/telegram/media"")"
40733,./TargetProjects/camel-quarkus/integration-tests/univocity-parsers/src/test/java/org/apache/camel/quarkus/component/univocity/parsers/it/UniVocityCsvDataFormatMarshalTest.java,39,,"                asMap(""A"", ""one"", ""B"", ""two"", ""C"", ""three""));"
40734,./TargetProjects/camel-quarkus/integration-tests/univocity-parsers/src/test/java/org/apache/camel/quarkus/component/univocity/parsers/it/UniVocityCsvDataFormatMarshalTest.java,39,,"                asMap(""A"", ""one"", ""B"", ""two"", ""C"", ""three""));"
40735,./TargetProjects/camel-quarkus/integration-tests/univocity-parsers/src/test/java/org/apache/camel/quarkus/component/univocity/parsers/it/UniVocityCsvDataFormatMarshalTest.java,39,,"                asMap(""A"", ""one"", ""B"", ""two"", ""C"", ""three""));"
40736,./TargetProjects/camel-quarkus/integration-tests/univocity-parsers/src/test/java/org/apache/camel/quarkus/component/univocity/parsers/it/UniVocityCsvDataFormatUnmarshalTest.java,35,,"        String content = join(""A,B,C"", ""1,2,3"", ""one,two,three"");"
40737,./TargetProjects/camel-quarkus/integration-tests/univocity-parsers/src/test/java/org/apache/camel/quarkus/component/univocity/parsers/it/UniVocityCsvDataFormatUnmarshalTest.java,35,,"        String content = join(""A,B,C"", ""1,2,3"", ""one,two,three"");"
40738,./TargetProjects/camel-quarkus/integration-tests/univocity-parsers/src/test/java/org/apache/camel/quarkus/component/univocity/parsers/it/UniVocityCsvDataFormatUnmarshalTest.java,41,,"        assertEquals(Arrays.asList(""one"", ""two"", ""three""), unmarshalleds.get(2));"
40739,./TargetProjects/camel-quarkus/integration-tests/univocity-parsers/src/test/java/org/apache/camel/quarkus/component/univocity/parsers/it/UniVocityCsvDataFormatUnmarshalTest.java,41,,"        assertEquals(Arrays.asList(""one"", ""two"", ""three""), unmarshalleds.get(2));"
40740,./TargetProjects/camel-quarkus/integration-tests/univocity-parsers/src/test/java/org/apache/camel/quarkus/component/univocity/parsers/it/UniVocityCsvDataFormatUnmarshalTest.java,41,,"        assertEquals(Arrays.asList(""one"", ""two"", ""three""), unmarshalleds.get(2));"
40741,./TargetProjects/camel-quarkus/integration-tests/univocity-parsers/src/test/java/org/apache/camel/quarkus/component/univocity/parsers/it/UniVocityFixedWidthDataFormatMarshalTest.java,39,,"                asMap(""A"", ""one"", ""B"", ""two"", ""C"", ""three""));"
40742,./TargetProjects/camel-quarkus/integration-tests/univocity-parsers/src/test/java/org/apache/camel/quarkus/component/univocity/parsers/it/UniVocityFixedWidthDataFormatMarshalTest.java,39,,"                asMap(""A"", ""one"", ""B"", ""two"", ""C"", ""three""));"
40743,./TargetProjects/camel-quarkus/integration-tests/univocity-parsers/src/test/java/org/apache/camel/quarkus/component/univocity/parsers/it/UniVocityFixedWidthDataFormatUnmarshalTest.java,35,,"        String content = join(""A  B  C    "", ""1  2  3    "", ""onetwothree"");"
40744,./TargetProjects/camel-quarkus/integration-tests/univocity-parsers/src/test/java/org/apache/camel/quarkus/component/univocity/parsers/it/UniVocityFixedWidthDataFormatUnmarshalTest.java,35,,"        String content = join(""A  B  C    "", ""1  2  3    "", ""onetwothree"");"
40745,./TargetProjects/camel-quarkus/integration-tests/univocity-parsers/src/test/java/org/apache/camel/quarkus/component/univocity/parsers/it/UniVocityFixedWidthDataFormatUnmarshalTest.java,41,,"        assertEquals(Arrays.asList(""one"", ""two"", ""three""), unmarshalleds.get(2));"
40746,./TargetProjects/camel-quarkus/integration-tests/univocity-parsers/src/test/java/org/apache/camel/quarkus/component/univocity/parsers/it/UniVocityFixedWidthDataFormatUnmarshalTest.java,41,,"        assertEquals(Arrays.asList(""one"", ""two"", ""three""), unmarshalleds.get(2));"
40747,./TargetProjects/camel-quarkus/integration-tests/univocity-parsers/src/test/java/org/apache/camel/quarkus/component/univocity/parsers/it/UniVocityFixedWidthDataFormatUnmarshalTest.java,41,,"        assertEquals(Arrays.asList(""one"", ""two"", ""three""), unmarshalleds.get(2));"
40748,./TargetProjects/camel-quarkus/integration-tests/univocity-parsers/src/test/java/org/apache/camel/quarkus/component/univocity/parsers/it/UniVocityTsvDataFormatMarshalTest.java,39,,"                asMap(""A"", ""one"", ""B"", ""two"", ""C"", ""three""));"
40749,./TargetProjects/camel-quarkus/integration-tests/univocity-parsers/src/test/java/org/apache/camel/quarkus/component/univocity/parsers/it/UniVocityTsvDataFormatMarshalTest.java,39,,"                asMap(""A"", ""one"", ""B"", ""two"", ""C"", ""three""));"
40750,./TargetProjects/camel-quarkus/integration-tests/univocity-parsers/src/test/java/org/apache/camel/quarkus/component/univocity/parsers/it/UniVocityTsvDataFormatMarshalTest.java,39,,"                asMap(""A"", ""one"", ""B"", ""two"", ""C"", ""three""));"
40751,./TargetProjects/camel-quarkus/integration-tests/univocity-parsers/src/test/java/org/apache/camel/quarkus/component/univocity/parsers/it/UniVocityTsvDataFormatUnmarshalTest.java,35,,"        String content = join(""A\tB\tC"", ""1\t2\t3"", ""one\ttwo\tthree"");"
40752,./TargetProjects/camel-quarkus/integration-tests/univocity-parsers/src/test/java/org/apache/camel/quarkus/component/univocity/parsers/it/UniVocityTsvDataFormatUnmarshalTest.java,35,,"        String content = join(""A\tB\tC"", ""1\t2\t3"", ""one\ttwo\tthree"");"
40753,./TargetProjects/camel-quarkus/integration-tests/univocity-parsers/src/test/java/org/apache/camel/quarkus/component/univocity/parsers/it/UniVocityTsvDataFormatUnmarshalTest.java,41,,"        assertEquals(Arrays.asList(""one"", ""two"", ""three""), unmarshalleds.get(2));"
40754,./TargetProjects/camel-quarkus/integration-tests/univocity-parsers/src/test/java/org/apache/camel/quarkus/component/univocity/parsers/it/UniVocityTsvDataFormatUnmarshalTest.java,41,,"        assertEquals(Arrays.asList(""one"", ""two"", ""three""), unmarshalleds.get(2));"
40755,./TargetProjects/camel-quarkus/integration-tests/univocity-parsers/src/test/java/org/apache/camel/quarkus/component/univocity/parsers/it/UniVocityTsvDataFormatUnmarshalTest.java,41,,"        assertEquals(Arrays.asList(""one"", ""two"", ""three""), unmarshalleds.get(2));"
40756,./TargetProjects/camel-quarkus/integration-tests/velocity/src/main/java/org/apache/camel/quarkus/component/velocity/it/VelocityResource.java,53,,"    public Response template(String message, @QueryParam(""item"") String item,"
40757,./TargetProjects/camel-quarkus/integration-tests/velocity/src/main/java/org/apache/camel/quarkus/component/velocity/it/VelocityResource.java,54,,"            @QueryParam(""name"") String name, @QueryParam(""template"") String template,"
40758,./TargetProjects/camel-quarkus/integration-tests/velocity/src/main/java/org/apache/camel/quarkus/component/velocity/it/VelocityResource.java,58,,"        LOG.infof(""Sending to velocity: %s"", message);"
40759,./TargetProjects/camel-quarkus/integration-tests/velocity/src/main/java/org/apache/camel/quarkus/component/velocity/it/VelocityResource.java,81,,"            LOG.infof(""Got response from velocity: %s"", response);"
40760,./TargetProjects/camel-quarkus/integration-tests/velocity/src/main/java/org/apache/camel/quarkus/component/velocity/it/VelocityResource.java,83,,"                    .created(new URI(""https://camel.apache.org/""))"
40761,./TargetProjects/camel-quarkus/integration-tests/velocity/src/test/java/org/apache/camel/quarkus/component/velocity/it/VelocityTest.java,47,,"            ""PS: Next beer is on me"";"
40762,./TargetProjects/camel-quarkus/integration-tests/velocity/src/test/java/org/apache/camel/quarkus/component/velocity/it/VelocityTest.java,53,,"                .queryParam(""name"", ""Sheldon"")"
40763,./TargetProjects/camel-quarkus/integration-tests/velocity/src/test/java/org/apache/camel/quarkus/component/velocity/it/VelocityTest.java,53,,"                .queryParam(""name"", ""Sheldon"")"
40764,./TargetProjects/camel-quarkus/integration-tests/velocity/src/test/java/org/apache/camel/quarkus/component/velocity/it/VelocityTest.java,54,,"                .queryParam(""item"", ""Camel in Action"")"
40765,./TargetProjects/camel-quarkus/integration-tests/velocity/src/test/java/org/apache/camel/quarkus/component/velocity/it/VelocityTest.java,54,,"                .queryParam(""item"", ""Camel in Action"")"
40766,./TargetProjects/camel-quarkus/integration-tests/velocity/src/test/java/org/apache/camel/quarkus/component/velocity/it/VelocityTest.java,55,,"                .queryParam(""template"", ""file:/"" + template.getPath())"
40767,./TargetProjects/camel-quarkus/integration-tests/velocity/src/test/java/org/apache/camel/quarkus/component/velocity/it/VelocityTest.java,58,,"                .post(""/velocity/template"")"
40768,./TargetProjects/camel-quarkus/integration-tests/velocity/src/test/java/org/apache/camel/quarkus/component/velocity/it/VelocityTest.java,98,,"                .queryParam(""body"", ""PS: Next beer is on me."")"
40769,./TargetProjects/camel-quarkus/integration-tests/weather/src/main/java/org/apache/camel/quarkus/component/weather/it/WeatherResource.java,56,,"                ""Hello World"", WeatherConstants.WEATHER_LOCATION, location, String.class);"
40770,./TargetProjects/camel-quarkus/integration-tests/weather/src/main/java/org/apache/camel/quarkus/component/weather/it/WeatherResource.java,57,,"        LOG.infof(""Got response from weather: %s"", response);"
40771,./TargetProjects/camel-quarkus/integration-tests/weather/src/test/java/org/apache/camel/quarkus/component/weather/it/WeatherTest.java,35,,"                .body(""name"", equalTo(""London""))"
40772,./TargetProjects/camel-quarkus/integration-tests/weather/src/test/java/org/apache/camel/quarkus/component/weather/it/WeatherTest.java,36,,"                .body(""sys.country"", equalTo(""GB""))"
40773,./TargetProjects/camel-quarkus/integration-tests/weather/src/test/java/org/apache/camel/quarkus/component/weather/it/WeatherTest.java,37,,"                .body(""main"", hasKey(""temp""));"
40774,./TargetProjects/camel-quarkus/integration-tests/weather/src/test/java/org/apache/camel/quarkus/component/weather/it/WeatherTest.java,37,,"                .body(""main"", hasKey(""temp""));"
40775,./TargetProjects/camel-quarkus/integration-tests/weather/src/test/java/org/apache/camel/quarkus/component/weather/it/WeatherTest.java,46,,"                .body(""name"", equalTo(""Paris""))"
40776,./TargetProjects/camel-quarkus/integration-tests/xmlsecurity/src/test/java/org/apache/camel/quarkus/component/xmlsecurity/it/XmlsecurityTest.java,39,,"                .body(readXMLFile(""/xml-test.xml""))"
40777,./TargetProjects/camel-quarkus/integration-tests/xmlsecurity/src/test/java/org/apache/camel/quarkus/component/xmlsecurity/it/XmlsecurityTest.java,47,,"        assertTrue(signedXml.contains(""ds:SignatureValue""));"
40778,./TargetProjects/camel-quarkus/integration-tests/zendesk/src/test/java/org/apache/camel/quarkus/component/zendesk/it/ZendeskTest.java,37,,"                .post(""/zendesk/ticket"")"
40779,./TargetProjects/camel-quarkus/tooling/maven-plugin/src/main/java/org/apache/camel/quarkus/maven/CqCatalog.java,144,,"        if (model.getKind().equals(""component"")) {"
40780,./TargetProjects/camel-quarkus/tooling/maven-plugin/src/main/java/org/apache/camel/quarkus/maven/CqUtils.java,115,,"        if (artifactId.startsWith(""camel-quarkus-"")) {"
40781,./TargetProjects/camel-quarkus/tooling/maven-plugin/src/main/java/org/apache/camel/quarkus/maven/UpdateExtensionDocPageMojo.java,122,,"            model.put(""pageAliases"", ""extensions/"" + ext.getRuntimeArtifactIdBase() + "".adoc"");"
40782,./TargetProjects/camel-spring-boot/components-starter/camel-atomix-starter/src/main/java/org/apache/camel/component/atomix/cluster/springboot/AtomixClusterServiceAutoConfiguration.java,49,,"    @ConditionalOnProperty(prefix = ""camel.cluster.atomix"", name = ""mode"", havingValue = ""node"")"
40783,./TargetProjects/camel-spring-boot/components-starter/camel-kubernetes-starter/src/test/java/org/apache/camel/component/kubernetes/springboot/test/cloud/KubernetesServiceDiscoveryAutoConfigurationTest.java,39,,"                ""spring.main.banner-mode=off"","
40784,./TargetProjects/camel-spring-boot/components-starter/camel-kubernetes-starter/src/test/java/org/apache/camel/component/kubernetes/springboot/test/cloud/KubernetesServiceDiscoveryAutoConfigurationTest.java,44,,"                    assertThat(context).getBeans(ServiceDiscovery.class).doesNotContainKeys(""kubernetes-service-discovery"");"
40785,./TargetProjects/camel-spring-boot/components-starter/camel-kubernetes-starter/src/test/java/org/apache/camel/component/kubernetes/springboot/test/cloud/KubernetesServiceDiscoveryAutoConfigurationTest.java,55,,"                ""camel.cloud.kubernetes.service-discovery.enabled=true"")"
40786,./TargetProjects/camel-spring-boot/core/camel-spring-boot/src/test/java/org/apache/camel/spring/boot/SupervisingRouteControllerRestartTest.java,70,,"            Assert.assertEquals(ServiceStatus.Started, context.getRouteController().getRouteStatus(""dummy""));"
40787,./TargetProjects/camel-spring-boot/core/camel-spring-boot/src/test/java/org/apache/camel/spring/boot/actuate/endpoint/CamelRoutesEndpointTest.java,62,,"        assertTrue(routes.stream().anyMatch(r -> ""foo-route"".equals(r.getId())));"
40788,./TargetProjects/camel-spring-boot/core/camel-spring-boot/src/test/java/org/apache/camel/spring/boot/util/CamelPropertiesHelperTest.java,54,,"        @Bean(name = ""myCoolOption"")"
40789,./TargetProjects/camel-spring-boot/core/camel-spring-boot/src/test/java/org/apache/camel/spring/boot/util/CamelPropertiesHelperTest.java,117,,"        map.put(""id"", ""123"");"
40790,./TargetProjects/camel-spring-boot/core/camel-spring-boot/src/test/java/org/apache/camel/spring/boot/util/CamelPropertiesHelperTest.java,118,,"        map.put(""name"", ""Donald Duck"");"
40791,./TargetProjects/camel-spring-boot/core/camel-spring-boot/src/test/java/org/apache/camel/spring/boot/util/CamelPropertiesHelperTest.java,118,,"        map.put(""name"", ""Donald Duck"");"
40792,./TargetProjects/camel-spring-boot/core/camel-spring-boot/src/test/java/org/apache/camel/spring/boot/util/CamelPropertiesHelperTest.java,119,,"        map.put(""option"", ""myCoolOption"");"
40793,./TargetProjects/camel-spring-boot/core/camel-spring-boot/src/test/java/org/apache/camel/spring/boot/util/CamelPropertiesHelperTest.java,123,,"        Assert.assertEquals(""Should configure all options"", 0, map.size());"
40794,./TargetProjects/camel-spring-boot/core/camel-spring-cloud/src/test/java/org/apache/camel/spring/cloud/CamelSpringCloudServiceRegistryTest.java,58,,"                ""spring.main.banner-mode=off"","
40795,./TargetProjects/camel-spring-boot/core/camel-spring-cloud/src/test/java/org/apache/camel/spring/cloud/CamelSpringCloudServiceRegistryTest.java,59,,"                ""ribbon.eureka.enabled=false"","
40796,./TargetProjects/camel-spring-boot/core/camel-spring-cloud/src/test/java/org/apache/camel/spring/cloud/CamelSpringCloudServiceRegistryTest.java,60,,"                ""ribbon.enabled=false"")"
40797,./TargetProjects/camel-spring-boot/tests/camel-itest-spring-boot/src/test/java/org/apache/camel/itest/springboot/util/ArquillianPackager.java,151,,"        commonExclusions.add(MavenDependencies.createExclusion(""log4j"", ""log4j""));"
40798,./TargetProjects/camel-spring-boot/tests/camel-itest-spring-boot/src/test/java/org/apache/camel/itest/springboot/util/ArquillianPackager.java,595,,"            if (dependencyXml.contains(""<version>"")) {"
40799,./TargetProjects/camel-spring-boot/tests/camel-itest-spring-boot/src/test/java/org/apache/camel/itest/springboot/util/BOMResolver.java,130,,"        RemoteRepository localRepoDist = new RemoteRepository.Builder(""org.apache.camel.itest.springboot"", ""default"", new File(LOCAL_REPO).toURI().toString()).build();"
40800,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-docs-maven-plugin/src/main/java/org/apache/camel/springboot/maven/UpdateDocComponentsListMojo.java,182,,"            File file = new File(readmeComponentsStarterDir, ""README.adoc"");"
40801,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-docs-maven-plugin/src/main/java/org/apache/camel/springboot/maven/UpdateDocComponentsListMojo.java,187,,"                getLog().info(""Updated readme.adoc file: "" + file);"
40802,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-docs-maven-plugin/src/main/java/org/apache/camel/springboot/maven/UpdateDocComponentsListMojo.java,189,,"                getLog().debug(""No changes to readme.adoc file: "" + file);"
40803,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-docs-maven-plugin/src/main/java/org/apache/camel/springboot/maven/UpdateDocComponentsListMojo.java,191,,"                getLog().warn(""No readme.adoc file: "" + file);"
40804,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-docs-maven-plugin/src/main/java/org/apache/camel/springboot/maven/UpdateDocComponentsListMojo.java,195,,"            throw new MojoFailureException(""Error due "" + e.getMessage(), e);"
40805,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-docs-maven-plugin/src/main/java/org/apache/camel/springboot/maven/UpdateDocComponentsListMojo.java,371,,"            map.put(""numberOfArtifacts"", artifacts);"
40806,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-docs-maven-plugin/src/main/java/org/apache/camel/springboot/maven/UpdateDocComponentsListMojo.java,372,,"            map.put(""numberOfDeprecated"", deprecated);"
40807,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-docs-maven-plugin/src/main/java/org/apache/camel/springboot/maven/UpdateDocComponentsListMojo.java,374,,"                    Collections.singletonMap(""util"", new ExtMvelHelper(getComponentsStarterDocPath())));"
40808,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-docs-maven-plugin/src/main/java/org/apache/camel/springboot/maven/UpdateDocComponentsListMojo.java,377,,"            throw new MojoExecutionException(""Error processing mvel template. Reason: "" + e, e);"
40809,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-docs-maven-plugin/src/main/java/org/apache/camel/springboot/maven/UpdateDocComponentsListMojo.java,453,,"                getLog().warn(""Cannot find markers in file "" + file);"
40810,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-docs-maven-plugin/src/main/java/org/apache/camel/springboot/maven/UpdateDocComponentsListMojo.java,454,,"                getLog().warn(""Add the following markers"");"
40811,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-docs-maven-plugin/src/main/java/org/apache/camel/springboot/maven/UpdateDocComponentsListMojo.java,460,,"            throw new MojoExecutionException(""Error reading file "" + file + "" Reason: "" + e, e);"
40812,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-docs-maven-plugin/src/main/java/org/apache/camel/springboot/maven/UpdateDocComponentsListMojo.java,460,,"            throw new MojoExecutionException(""Error reading file "" + file + "" Reason: "" + e, e);"
40813,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/AbstractSpringBootGenerator.java,122,,"                .filter(je -> je.getName().endsWith("".json""))"
40814,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/BomDependenciesGeneratorMojo.java,172,,"                    && !(dep.getGroupId().equals(""org.apache.camel.springboot"")"
40815,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/BomDependenciesGeneratorMojo.java,208,,"                    dep.setVersion(""${project.version}"");"
40816,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/BomGeneratorMojo.java,109,,"                    dep.setGroupId(""org.apache.camel.springboot"");"
40817,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/BomGeneratorMojo.java,111,,"                    dep.setVersion(""${project.version}"");"
40818,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/BomGeneratorMojo.java,159,,"        dep.setGroupId(""org.apache.camel"");"
40819,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/PrepareCatalogSpringBootMojo.java,88,,"                    json = json.replace(""\""groupId\"": \"""" + getMainDepGroupId() + ""\"""", ""\""groupId\"": \"""" + project.getGroupId() + ""\"""")"
40820,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/PrepareCatalogSpringBootMojo.java,89,,"                               .replace(""\""artifactId\"": \"""" + getMainDepArtifactId() + ""\"""", ""\""artifactId\"": \"""" + project.getArtifactId() + ""\"""")"
40821,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/PrepareCatalogSpringBootMojo.java,90,,"                               .replace(""\""version\"": \"""" + getMainDepVersion() + ""\"""", ""\""version\"": \"""" + project.getVersion() + ""\"""");"
40822,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/PrepareCatalogSpringBootMojo.java,92,,"                            ""src/main/resources/org/apache/camel/springboot/catalog/components/"" + componentName + "".json""));"
40823,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,109,,"        PRIMITIVEMAP.put(""boolean"", ""java.lang.Boolean"");"
40824,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,109,,"        PRIMITIVEMAP.put(""boolean"", ""java.lang.Boolean"");"
40825,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,111,,"        PRIMITIVEMAP.put(""long"", ""java.lang.Long"");"
40826,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,111,,"        PRIMITIVEMAP.put(""long"", ""java.lang.Long"");"
40827,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,112,,"        PRIMITIVEMAP.put(""int"", ""java.lang.Integer"");"
40828,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,113,,"        PRIMITIVEMAP.put(""integer"", ""java.lang.Integer"");"
40829,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,171,,"            String pkg = model.getJavaType().substring(0, pos) + "".springboot"";"
40830,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,266,,"        final String commonName = model.getJavaType().substring(pos + 1) + (generatedNestedConfig ? ""Common"" : ""Properties"");"
40831,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,274,,"        String doc = ""Generated by camel-package-maven-plugin - do not edit this file!"";"
40832,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,276,,"            doc = model.getDescription() + ""\n\n"" + doc;"
40833,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,279,,"        commonClass.addAnnotation(Generated.class).setStringValue(""value"", SpringBootAutoConfigurationMojo.class.getName());"
40834,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,285,,"            if (""id"".equalsIgnoreCase(name) || ""parent"".equalsIgnoreCase(name) || ""camelContext"".equalsIgnoreCase(name)) {"
40835,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,300,,"                if (""java.lang.String"".equals(type)) {"
40836,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,317,,"        writeSourceIfChanged(commonClass, packageName.replaceAll(""\\."", ""\\/"") + ""/"" + commonName + "".java"", true);"
40837,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,317,,"        writeSourceIfChanged(commonClass, packageName.replaceAll(""\\."", ""\\/"") + ""/"" + commonName + "".java"", true);"
40838,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,317,,"        writeSourceIfChanged(commonClass, packageName.replaceAll(""\\."", ""\\/"") + ""/"" + commonName + "".java"", true);"
40839,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,328,,"            configClass.addAnnotation(loadClass(""org.springframework.boot.context.properties.ConfigurationProperties"")).setStringValue(""prefix"", propertiesPrefix);"
40840,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,328,,"            configClass.addAnnotation(loadClass(""org.springframework.boot.context.properties.ConfigurationProperties"")).setStringValue(""prefix"", propertiesPrefix);"
40841,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,333,,"            configClass.addField().setName(""enabled"").setType(boolean.class).setPrivate().setLiteralInitializer(""true"").getJavaDoc().setFullText(""Enable the component"");"
40842,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,441,,"        javaClass.addAnnotation(Configuration.class).setLiteralValue(""proxyBeanMethods"", ""false"");"
40843,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,441,,"        javaClass.addAnnotation(Configuration.class).setLiteralValue(""proxyBeanMethods"", ""false"");"
40844,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,442,,"        javaClass.addAnnotation(ConditionalOnBean.class).setStringValue(""type"", ""org.apache.camel.spring.boot.CamelAutoConfiguration"");"
40845,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,447,,"        javaClass.addImport(""java.util.Map"");"
40846,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,451,,"        javaClass.addImport(""org.apache.camel.spring.boot.util.CamelPropertiesHelper"");"
40847,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,452,,"        javaClass.addImport(""org.apache.camel.CamelContext"");"
40848,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,463,,"        method.setName(""configure"" + model.getShortJavaType());"
40849,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,478,,"                + ""    definition.setApiProperties(new HashMap<>(CollectionHelper.flattenKeysInMap(config.getApiProperty(), \"".\"")));\n"" + ""}\n"""
40850,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,659,,"        name = name.replace(""Component"", ""ComponentConfiguration"");"
40851,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,774,,"        if (option.getJavaType().startsWith(""java.util.Map"") || option.getJavaType().startsWith(""java.util.List"") || option.getJavaType().startsWith(""java.util.Set"")) {"
40852,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,774,,"        if (option.getJavaType().startsWith(""java.util.Map"") || option.getJavaType().startsWith(""java.util.List"") || option.getJavaType().startsWith(""java.util.Set"")) {"
40853,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,778,,"        return ""object"".equals(option.getType()) || ""duration"".equals(option.getType());"
40854,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,1039,,"        name = name.replace(""DataFormat"", ""DataFormatConfiguration"");"
40855,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,1143,,"        name = name.replace(""Language"", ""LanguageConfiguration"");"
40856,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,1182,,"                        || ""headerName"".equals(option.getName()) || ""regex"".equals(option.getName()) || ""xml"".equals(option.getName()) || ""includeTokens"".equals(option.getName())"
40857,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,1269,,"        final String name = model.getJavaType().substring(model.getJavaType().lastIndexOf(""."") + 1).replace(""Component"", ""ComponentAutoConfiguration"");"
40858,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,1282,,"                .setLiteralValue(""{ComponentConfigurationProperties.class,"" + configurationName + "".class}"");"
40859,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,1307,,"        javaClass.addField().setPrivate().setName(""applicationContext"").setType(ApplicationContext.class).addAnnotation(Autowired.class);"
40860,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,1312,,"        ctr.setBody(""this.camelContext = camelContext;\n"");"
40861,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,1349,,"        javaClass.addImport(""org.springframework.core.convert.converter.GenericConverter"");"
40862,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,1358,,"        javaClass.addMethod().setName(""convert"").setPublic().setReturnType(""Object"")"
40863,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,1360,,"                .addParameter(""TypeDescriptor"", ""sourceType"")"
40864,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,1374,,"        sb.append(""    return null;\n"");"
40865,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,1697,,"                .append(""    @Override\n"")"
40866,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java,1700,,"                .append(""    }\n"")"
40867,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/StarterGeneratorMojo.java,75,,"        if (name.startsWith(""camel-""))"
40868,./TargetProjects/camel-spring-boot/tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/StarterGeneratorMojo.java,77,,"        if (name.endsWith(""-starter""))"
40869,./TargetProjects/camel-spring-boot-examples/load-balancer-eip/src/test/java/org/apache/camel/springboot/example/LoadBalancerEIPTest.java,53,,"		producerTemplate.sendBody(""direct:loadbalancer-round-robin"", ""A"");"
40870,./TargetProjects/camel-spring-boot-examples/load-balancer-eip/src/test/java/org/apache/camel/springboot/example/LoadBalancerEIPTest.java,82,,"		producerTemplate.sendBodyAndHeader(""direct:loadbalancer-sticky"", ""A"", ""correlation-key"",  ""vowel"");"
40871,./TargetProjects/camel-spring-boot-examples/load-balancer-eip/src/test/java/org/apache/camel/springboot/example/LoadBalancerEIPTest.java,82,,"		producerTemplate.sendBodyAndHeader(""direct:loadbalancer-sticky"", ""A"", ""correlation-key"",  ""vowel"");"
40872,./TargetProjects/camel-spring-boot-examples/load-balancer-eip/src/test/java/org/apache/camel/springboot/example/LoadBalancerEIPTest.java,99,,"		producerTemplate.sendBody(""direct:loadbalancer-topic"", ""A"");"
40873,./TargetProjects/camel-spring-boot-examples/load-balancer-eip/src/test/java/org/apache/camel/springboot/example/LoadBalancerEIPTest.java,116,,"		producerTemplate.sendBody(""direct:loadbalancer-failover"", ""A"");"
40874,./TargetProjects/camel-spring-boot-examples/load-balancer-eip/src/test/java/org/apache/camel/springboot/example/LoadBalancerEIPTest.java,137,,"		producerTemplate.sendBody(""direct:loadbalancer-failover-round-robin-no-error-handler"", ""A"");"
40875,./TargetProjects/camel-spring-boot-examples/load-balancer-eip/src/test/java/org/apache/camel/springboot/example/LoadBalancerEIPTest.java,154,,"		producerTemplate.sendBody(""direct:loadbalancer-weighted-round-robin"", ""A""); // W"
40876,./TargetProjects/camel-spring-boot-examples/load-balancer-eip/src/test/java/org/apache/camel/springboot/example/LoadBalancerEIPTest.java,176,,"		producerTemplate.sendBody(""direct:loadbalancer-custom"", ""A"");"
40877,./TargetProjects/camel-spring-boot-examples/servicecall/services/src/main/java/org/apache/camel/example/ServiceApplication.java,38,,"                .to(""log:org.apache.camel.example?level=INFO&showAll=true&multiline=true"")"
40878,./TargetProjects/camel-spring-boot-examples/servicecall/services/src/main/java/org/apache/camel/example/ServiceApplication.java,39,,"                .transform().simple(""Hi!, I'm {{spring.profiles.active}} on ${camelId}/${routeId}"");"
40879,./TargetProjects/camel-spring-boot-examples/unit-testing/src/main/java/org/apache/camel/example/spring/boot/UnitTestsRouter.java,92,,"				.transform(simple(""${body.toLowerCase()}"")).id(""node9"");"
40880,./TargetProjects/camel-spring-boot-examples/unit-testing/src/test/java/CamelSpringBootUnitTests.java,61,,"		mockA.message(0).header(""Counter"").isEqualTo(1);"
40881,./TargetProjects/camel-spring-boot-examples/unit-testing/src/test/java/CamelSpringBootUnitTests.java,325,,"		producerTemplate.sendBody(""direct:advice-producer-by-id-replace"", ""a,b,c"");"
40882,./TargetProjects/cassandra/src/java/org/apache/cassandra/auth/AuthKeyspace.java,59,,"              ""CREATE TABLE %s ("""
40883,./TargetProjects/cassandra/src/java/org/apache/cassandra/auth/AuthKeyspace.java,60,,"              + ""role text,"""
40884,./TargetProjects/cassandra/src/java/org/apache/cassandra/auth/CassandraRoleManager.java,88,,"            return new Role(row.getString(""role""),"
40885,./TargetProjects/cassandra/src/java/org/apache/cassandra/cache/SerializingCache.java,79,,"    @SuppressWarnings(""resource"")"
40886,./TargetProjects/cassandra/src/java/org/apache/cassandra/concurrent/Stage.java,52,,"    READ              (""ReadStage"",             ""request"",  DatabaseDescriptor::getConcurrentReaders,        DatabaseDescriptor::setConcurrentReaders,        Stage::multiThreadedLowSignalStage),"
40887,./TargetProjects/cassandra/src/java/org/apache/cassandra/concurrent/Stage.java,56,,"    GOSSIP            (""GossipStage"",           ""internal"", () -> 1,                                         null,                                            Stage::singleThreadedStage),"
40888,./TargetProjects/cassandra/src/java/org/apache/cassandra/config/DatabaseDescriptor.java,1730,,"            throw new IllegalArgumentException(""Concurrent reads must be non-negative"");"
40889,./TargetProjects/cassandra/src/java/org/apache/cassandra/cql3/CQL3Type.java,195,,"                return ""null"";"
40890,./TargetProjects/cassandra/src/java/org/apache/cassandra/cql3/CQL3Type.java,277,,"            StringBuilder sb = new StringBuilder(isFrozen ? ""frozen<"" : """");"
40891,./TargetProjects/cassandra/src/java/org/apache/cassandra/cql3/Duration.java,157,,"            throw invalidRequest(""Unable to convert '%s' to a duration"", source);"
40892,./TargetProjects/cassandra/src/java/org/apache/cassandra/cql3/QueryEvents.java,90,,"            noSpam1m.error(""Failed notifying listeners"", t);"
40893,./TargetProjects/cassandra/src/java/org/apache/cassandra/cql3/TokenRelation.java,89,,"        throw invalidRequest(""%s cannot be used with the token function"", operator());"
40894,./TargetProjects/cassandra/src/java/org/apache/cassandra/cql3/functions/AggregateFcts.java,129,,"            new NativeAggregateFunction(""sum"", DecimalType.instance, DecimalType.instance)"
40895,./TargetProjects/cassandra/src/java/org/apache/cassandra/cql3/functions/AggregateFcts.java,166,,"            new NativeAggregateFunction(""avg"", DecimalType.instance, DecimalType.instance)"
40896,./TargetProjects/cassandra/src/java/org/apache/cassandra/cql3/functions/CastFcts.java,65,,"        @SuppressWarnings(""unchecked"")"
40897,./TargetProjects/cassandra/src/java/org/apache/cassandra/cql3/functions/JavaBasedUDFunction.java,105,,"        udfByteCodeVerifier.addDisallowedMethodCall(""java/lang/Class"", ""forName"");"
40898,./TargetProjects/cassandra/src/java/org/apache/cassandra/cql3/functions/JavaBasedUDFunction.java,109,,"        udfByteCodeVerifier.addDisallowedMethodCall(""java/lang/ClassLoader"", ""clearAssertionStatus"");"
40899,./TargetProjects/cassandra/src/java/org/apache/cassandra/cql3/functions/types/AbstractAddressableByIndexData.java,42,,"    @SuppressWarnings(""unchecked"")"
40900,./TargetProjects/cassandra/src/java/org/apache/cassandra/cql3/functions/types/AbstractData.java,41,,"    @SuppressWarnings(""unchecked"")"
40901,./TargetProjects/cassandra/src/java/org/apache/cassandra/cql3/functions/types/AbstractGettableByIndexData.java,306,,"    @SuppressWarnings(""unchecked"")"
40902,./TargetProjects/cassandra/src/java/org/apache/cassandra/cql3/functions/types/CodecRegistry.java,586,,"    @SuppressWarnings(""unchecked"")"
40903,./TargetProjects/cassandra/src/java/org/apache/cassandra/cql3/functions/types/Duration.java,160,,"            String.format(""Unable to convert '%s' to a duration"", source));"
40904,./TargetProjects/cassandra/src/java/org/apache/cassandra/cql3/functions/types/TypeCodec.java,928,,"            if (value == null || value.isEmpty() || value.equalsIgnoreCase(""NULL"")) return null;"
40905,./TargetProjects/cassandra/src/java/org/apache/cassandra/cql3/restrictions/SingleColumnRestriction.java,165,,"            checkFalse(builder.containsUnset(), ""Invalid unset value for column %s"", columnDef.name);"
40906,./TargetProjects/cassandra/src/java/org/apache/cassandra/cql3/selection/Selectable.java,625,,"                    throw invalidRequest(""Cannot infer type for term %s in selection clause (try using a cast to force a type)"","
40907,./TargetProjects/cassandra/src/java/org/apache/cassandra/db/ColumnFamilyStore.java,116,,"                                                                                             ""internal"");"
40908,./TargetProjects/cassandra/src/java/org/apache/cassandra/db/Directories.java,825,,"                throw new IllegalStateException(""list() has already been called"");"
40909,./TargetProjects/cassandra/src/java/org/apache/cassandra/db/ReadCommand.java,374,,"    @SuppressWarnings(""resource"")"
40910,./TargetProjects/cassandra/src/java/org/apache/cassandra/db/SinglePartitionReadCommand.java,396,,"    @SuppressWarnings(""resource"") // we close the created iterator through closing the result of this method (and SingletonUnfilteredPartitionIterator ctor cannot fail)"
40911,./TargetProjects/cassandra/src/java/org/apache/cassandra/db/Slices.java,596,,"                        sb.append("" AND "");"
40912,./TargetProjects/cassandra/src/java/org/apache/cassandra/db/SystemKeyspace.java,134,,"              ""CREATE TABLE %s ("""
40913,./TargetProjects/cassandra/src/java/org/apache/cassandra/db/SystemKeyspace.java,202,,"                + ""peer inet,"""
40914,./TargetProjects/cassandra/src/java/org/apache/cassandra/db/SystemKeyspace.java,236,,"                + ""keyspace_name text,"""
40915,./TargetProjects/cassandra/src/java/org/apache/cassandra/db/SystemKeyspace.java,848,,"            InetAddress address = row.getInetAddress(""peer"");"
40916,./TargetProjects/cassandra/src/java/org/apache/cassandra/db/SystemKeyspace.java,849,,"            Integer port = row.getInt(""peer_port"");"
40917,./TargetProjects/cassandra/src/java/org/apache/cassandra/db/SystemKeyspace.java,851,,"            if (row.has(""tokens""))"
40918,./TargetProjects/cassandra/src/java/org/apache/cassandra/db/SystemKeyspace.java,870,,"            if (row.has(""host_id""))"
40919,./TargetProjects/cassandra/src/java/org/apache/cassandra/db/SystemKeyspace.java,907,,"            if (row.has(""data_center"") && row.has(""rack""))"
40920,./TargetProjects/cassandra/src/java/org/apache/cassandra/db/SystemKeyspace.java,907,,"            if (row.has(""data_center"") && row.has(""rack""))"
40921,./TargetProjects/cassandra/src/java/org/apache/cassandra/db/SystemKeyspace.java,935,,"            if (result != null && result.one().has(""release_version""))"
40922,./TargetProjects/cassandra/src/java/org/apache/cassandra/db/SystemKeyspaceMigrator40.java,47,,"    static final String legacyPeersName = String.format(""%s.%s"", SchemaConstants.SYSTEM_KEYSPACE_NAME, SystemKeyspace.LEGACY_PEERS);"
40923,./TargetProjects/cassandra/src/java/org/apache/cassandra/db/SystemKeyspaceMigrator40.java,79,,"        String query = String.format(""SELECT * FROM %s"","
40924,./TargetProjects/cassandra/src/java/org/apache/cassandra/db/SystemKeyspaceMigrator40.java,103,,"            logger.debug(""Transferring row {}"", transferred);"
40925,./TargetProjects/cassandra/src/java/org/apache/cassandra/db/SystemKeyspaceMigrator40.java,105,,"                                           row.has(""peer"") ? row.getInetAddress(""peer"") : null,"
40926,./TargetProjects/cassandra/src/java/org/apache/cassandra/db/SystemKeyspaceMigrator40.java,119,,"        logger.info(""Migrated {} rows from legacy {} to {}"", transferred, legacyPeersName, peersName);"
40927,./TargetProjects/cassandra/src/java/org/apache/cassandra/db/TypeSizes.java,79,,"    @SuppressWarnings(""unused"")"
40928,./TargetProjects/cassandra/src/java/org/apache/cassandra/db/compaction/CompactionLogger.java,183,,"        node.put(""strategyId"", getId(strategy));"
40929,./TargetProjects/cassandra/src/java/org/apache/cassandra/db/compaction/CompactionLogger.java,184,,"        node.put(""type"", strategy.getName());"
40930,./TargetProjects/cassandra/src/java/org/apache/cassandra/db/compaction/DateTieredCompactionStrategyOptions.java,102,,"            throw new ConfigurationException(String.format(""%s is not a parsable int (base10) for %s"", optionValue, MAX_SSTABLE_AGE_KEY), e);"
40931,./TargetProjects/cassandra/src/java/org/apache/cassandra/db/compaction/LeveledCompactionStrategy.java,128,,"    @SuppressWarnings(""resource"") // transaction is closed by AbstractCompactionTask::execute"
40932,./TargetProjects/cassandra/src/java/org/apache/cassandra/db/compaction/TimeWindowCompactionStrategyOptions.java,100,,"                    throw new ConfigurationException(String.format(""%s is not valid for %s"", optionValue, TIMESTAMP_RESOLUTION_KEY));"
40933,./TargetProjects/cassandra/src/java/org/apache/cassandra/db/marshal/TypeParser.java,168,,"        throw new SyntaxException(String.format(""Syntax error parsing '%s' at char %d: unexpected end of string"", str, idx));"
40934,./TargetProjects/cassandra/src/java/org/apache/cassandra/db/marshal/TypeParser.java,197,,"                SyntaxException ex = new SyntaxException(String.format(""Exception while parsing '%s' around char %d"", str, idx));"
40935,./TargetProjects/cassandra/src/java/org/apache/cassandra/db/monitoring/MonitoringTask.java,375,,"                                     operation.isCrossNode() ? ""msec/cross-node"" : ""msec"");"
40936,./TargetProjects/cassandra/src/java/org/apache/cassandra/db/monitoring/MonitoringTask.java,375,,"                                     operation.isCrossNode() ? ""msec/cross-node"" : ""msec"");"
40937,./TargetProjects/cassandra/src/java/org/apache/cassandra/db/partitions/UnfilteredPartitionIterators.java,54,,"    @SuppressWarnings(""resource"") // The created resources are returned right away"
40938,./TargetProjects/cassandra/src/java/org/apache/cassandra/dht/BootStrapper.java,101,,"                        fireProgressEvent(""bootstrap"", prepareProgress);"
40939,./TargetProjects/cassandra/src/java/org/apache/cassandra/dht/RangeStreamer.java,174,,"            return ""Filtered "" + replica + "" out because it was down"";"
40940,./TargetProjects/cassandra/src/java/org/apache/cassandra/dht/RangeStreamer.java,552,,"                         throw new IllegalStateException(""Unable to find sufficient sources for streaming range "" + toFetch + "" in keyspace "" + keyspace + "" with RF=1. "" +"
40941,./TargetProjects/cassandra/src/java/org/apache/cassandra/hadoop/HadoopCompat.java,103,,"                        Class.forName(PACKAGE+"".TaskAttemptContext"");"
40942,./TargetProjects/cassandra/src/java/org/apache/cassandra/index/sasi/utils/trie/PatriciaTrie.java,179,,"        throw new IllegalStateException(""invalid lookup: "" + key);"
40943,./TargetProjects/cassandra/src/java/org/apache/cassandra/io/util/FileUtils.java,226,,"                logger.trace(""Could not hardlink file "" + from + "" to "" + to, fse);"
40944,./TargetProjects/cassandra/src/java/org/apache/cassandra/locator/PropertyFileSnitch.java,160,,"            if (""default"".equals(key))"
40945,./TargetProjects/cassandra/src/java/org/apache/cassandra/metrics/CASClientWriteRequestMetrics.java,44,,"        conditionNotMet = Metrics.counter(factory.createMetricName(""ConditionNotMet""),"
40946,./TargetProjects/cassandra/src/java/org/apache/cassandra/metrics/LatencyMetrics.java,97,,"            latency = Metrics.register(factory.createMetricName(namePrefix + ""Latency""), timer);"
40947,./TargetProjects/cassandra/src/java/org/apache/cassandra/metrics/LatencyMetrics.java,98,,"            totalLatency = Metrics.register(factory.createMetricName(namePrefix + ""TotalLatency""), counter);"
40948,./TargetProjects/cassandra/src/java/org/apache/cassandra/net/OutboundConnectionSettings.java,43,,"@SuppressWarnings({ ""WeakerAccess"", ""unused"" })"
40949,./TargetProjects/cassandra/src/java/org/apache/cassandra/repair/RepairJob.java,403,,"        logger.info(""{} Validating {}"", session.previewKind.logPrefix(desc.sessionId), address);"
40950,./TargetProjects/cassandra/src/java/org/apache/cassandra/repair/RepairSession.java,215,,"        logger.info(""{} {}"", previewKind.logPrefix(getId()), message);"
40951,./TargetProjects/cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java,357,,"                logger.warn(""Unable to load malformed repair session {}, removing"", row.has(""parent_id"") ? row.getUUID(""parent_id"") : null);"
40952,./TargetProjects/cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java,784,,"        logger.trace(""received {} from {}"", request, from);"
40953,./TargetProjects/cassandra/src/java/org/apache/cassandra/schema/SchemaEvent.java,176,,"        ret.put(""name"", ksm.name);"
40954,./TargetProjects/cassandra/src/java/org/apache/cassandra/schema/SchemaEvent.java,177,,"        if (ksm.kind != null) ret.put(""kind"", ksm.kind.name());"
40955,./TargetProjects/cassandra/src/java/org/apache/cassandra/schema/SchemaKeyspace.java,111,,"              ""CREATE TABLE %s ("""
40956,./TargetProjects/cassandra/src/java/org/apache/cassandra/schema/SchemaKeyspace.java,112,,"              + ""keyspace_name text,"""
40957,./TargetProjects/cassandra/src/java/org/apache/cassandra/schema/SchemaKeyspace.java,122,,"              + ""table_name text,"""
40958,./TargetProjects/cassandra/src/java/org/apache/cassandra/schema/SchemaKeyspace.java,445,,"            if (!column.name.toString().equals(""cdc""))"
40959,./TargetProjects/cassandra/src/java/org/apache/cassandra/schema/SchemaKeyspace.java,697,,"               .add(""kind"", column.kind.toString().toLowerCase())"
40960,./TargetProjects/cassandra/src/java/org/apache/cassandra/schema/SchemaKeyspace.java,700,,"               .add(""type"", type.asCQL3Type().toString());"
40961,./TargetProjects/cassandra/src/java/org/apache/cassandra/schema/SchemaKeyspace.java,727,,"               .add(""options"", Collections.singletonMap(""class"", trigger.classOption));"
40962,./TargetProjects/cassandra/src/java/org/apache/cassandra/schema/SchemaKeyspace.java,812,,"               .add(""return_type"", function.returnType().asCQL3Type().toString())"
40963,./TargetProjects/cassandra/src/java/org/apache/cassandra/schema/SchemaKeyspace.java,869,,"            String keyspaceName = row.getString(""keyspace_name"");"
40964,./TargetProjects/cassandra/src/java/org/apache/cassandra/schema/SchemaKeyspace.java,888,,"        String query = format(""SELECT * FROM %s.%s WHERE keyspace_name = ?"", SchemaConstants.SCHEMA_KEYSPACE_NAME, KEYSPACES);"
40965,./TargetProjects/cassandra/src/java/org/apache/cassandra/schema/SchemaKeyspace.java,952,,"        String query = String.format(""SELECT * FROM %s.%s WHERE keyspace_name = ? AND table_name = ?"", SchemaConstants.SCHEMA_KEYSPACE_NAME, TABLES);"
40966,./TargetProjects/cassandra/src/java/org/apache/cassandra/security/SSLFactory.java,511,,"                                supportedProtocols == null ? ""system default"""
40967,./TargetProjects/cassandra/src/java/org/apache/cassandra/serializers/MapSerializer.java,105,,"            throw new MarshalException(""Not enough bytes to read a map"");"
40968,./TargetProjects/cassandra/src/java/org/apache/cassandra/serializers/SetSerializer.java,92,,"            throw new MarshalException(""Not enough bytes to read a set"");"
40969,./TargetProjects/cassandra/src/java/org/apache/cassandra/service/StorageService.java,279,,"    public static final boolean useStrictConsistency = Boolean.parseBoolean(System.getProperty(""cassandra.consistent.rangemovement"", ""true""));"
40970,./TargetProjects/cassandra/src/java/org/apache/cassandra/service/StorageService.java,1848,,"                            progressSupport.progress(""bootstrap"", ProgressEvent.createNotification(""Joining ring...""));"
40971,./TargetProjects/cassandra/src/java/org/apache/cassandra/service/pager/PagingState.java,128,,"    @SuppressWarnings({ ""resource"", ""RedundantSuppression"" })"
40972,./TargetProjects/cassandra/src/java/org/apache/cassandra/service/pager/PagingState.java,128,,"    @SuppressWarnings({ ""resource"", ""RedundantSuppression"" })"
40973,./TargetProjects/cassandra/src/java/org/apache/cassandra/service/reads/DataResolver.java,341,,"                                                           mergedDeletion == null ? ""null"" : mergedDeletion.toString(),"
40974,./TargetProjects/cassandra/src/java/org/apache/cassandra/tools/BulkLoader.java,240,,"            sb.append(String.format(""   %-24s: %-10s%n"", ""Total bytes transferred "", FBUtilities.prettyPrintMemory(lastProgress)));"
40975,./TargetProjects/cassandra/src/java/org/apache/cassandra/tools/NodeProbe.java,327,,"                out.println(""Aborted cleaning up at least one table in keyspace ""+keyspaceName+"", check server logs for more information."");"
40976,./TargetProjects/cassandra/src/java/org/apache/cassandra/tools/NodeProbe.java,331,,"                out.println(""Failed marking some sstables compacting in keyspace ""+keyspaceName+"", check server logs for more information"");"
40977,./TargetProjects/cassandra/src/java/org/apache/cassandra/tools/NodeProbe.java,331,,"                out.println(""Failed marking some sstables compacting in keyspace ""+keyspaceName+"", check server logs for more information"");"
40978,./TargetProjects/cassandra/src/java/org/apache/cassandra/tools/NodeProbe.java,1373,,"                            new ObjectName(""org.apache.cassandra.metrics:type=Cache,scope="" + cacheType + "",name="" + metricName),"
40979,./TargetProjects/cassandra/src/java/org/apache/cassandra/tools/nodetool/Info.java,50,,"        out.printf(""%-23s: %s%n"", ""ID"", probe.getLocalHostId());"
40980,./TargetProjects/cassandra/src/java/org/apache/cassandra/tools/nodetool/Info.java,91,,"                probe.getCacheMetric(""KeyCache"", ""Entries""),"
40981,./TargetProjects/cassandra/src/java/org/apache/cassandra/tools/nodetool/Info.java,91,,"                probe.getCacheMetric(""KeyCache"", ""Entries""),"
40982,./TargetProjects/cassandra/src/java/org/apache/cassandra/tools/nodetool/Info.java,92,,"                FileUtils.stringifyFileSize((long) probe.getCacheMetric(""KeyCache"", ""Size"")),"
40983,./TargetProjects/cassandra/src/java/org/apache/cassandra/tools/nodetool/Info.java,93,,"                FileUtils.stringifyFileSize((long) probe.getCacheMetric(""KeyCache"", ""Capacity"")),"
40984,./TargetProjects/cassandra/src/java/org/apache/cassandra/tools/nodetool/Info.java,95,,"                probe.getCacheMetric(""KeyCache"", ""Requests""),"
40985,./TargetProjects/cassandra/src/java/org/apache/cassandra/tools/nodetool/Info.java,96,,"                probe.getCacheMetric(""KeyCache"", ""HitRate""),"
40986,./TargetProjects/cassandra/src/java/org/apache/cassandra/tools/nodetool/Info.java,102,,"                probe.getCacheMetric(""RowCache"", ""Entries""),"
40987,./TargetProjects/cassandra/src/java/org/apache/cassandra/tools/nodetool/Info.java,113,,"                probe.getCacheMetric(""CounterCache"", ""Entries""),"
40988,./TargetProjects/cassandra/src/java/org/apache/cassandra/tools/nodetool/Info.java,126,,"                    probe.getCacheMetric(""ChunkCache"", ""Entries""),"
40989,./TargetProjects/cassandra/src/java/org/apache/cassandra/tools/nodetool/NetStats.java,137,,"                   printHumanReadable ? FileUtils.stringifyFileSize(totalBytesToReceive) : Long.toString(totalBytesToReceive) + "" bytes"","
40990,./TargetProjects/cassandra/src/java/org/apache/cassandra/tools/nodetool/ProxyHistograms.java,47,,"                """", ""(micros)"", ""(micros)"", ""(micros)"", ""(micros)"", ""(micros)"", ""(micros)""));"
40991,./TargetProjects/cassandra/src/java/org/apache/cassandra/tools/nodetool/RepairAdmin.java,54,,"        @Option(title = ""start_token"", name = {""-st"", ""--start-token""}, description = ""Use -st to specify a token at which the repair range starts"")"
40992,./TargetProjects/cassandra/src/java/org/apache/cassandra/tools/nodetool/RepairAdmin.java,54,,"        @Option(title = ""start_token"", name = {""-st"", ""--start-token""}, description = ""Use -st to specify a token at which the repair range starts"")"
40993,./TargetProjects/cassandra/src/java/org/apache/cassandra/tools/nodetool/RepairAdmin.java,54,,"        @Option(title = ""start_token"", name = {""-st"", ""--start-token""}, description = ""Use -st to specify a token at which the repair range starts"")"
40994,./TargetProjects/cassandra/src/java/org/apache/cassandra/tools/nodetool/RepairAdmin.java,54,,"        @Option(title = ""start_token"", name = {""-st"", ""--start-token""}, description = ""Use -st to specify a token at which the repair range starts"")"
40995,./TargetProjects/cassandra/src/java/org/apache/cassandra/tools/nodetool/RepairAdmin.java,57,,"        @Option(title = ""end_token"", name = {""-et"", ""--end-token""}, description = ""Use -et to specify a token at which repair range ends"")"
40996,./TargetProjects/cassandra/src/java/org/apache/cassandra/tools/nodetool/RepairAdmin.java,57,,"        @Option(title = ""end_token"", name = {""-et"", ""--end-token""}, description = ""Use -et to specify a token at which repair range ends"")"
40997,./TargetProjects/cassandra/src/java/org/apache/cassandra/tools/nodetool/RepairAdmin.java,57,,"        @Option(title = ""end_token"", name = {""-et"", ""--end-token""}, description = ""Use -et to specify a token at which repair range ends"")"
40998,./TargetProjects/cassandra/src/java/org/apache/cassandra/tools/nodetool/RepairAdmin.java,57,,"        @Option(title = ""end_token"", name = {""-et"", ""--end-token""}, description = ""Use -et to specify a token at which repair range ends"")"
40999,./TargetProjects/cassandra/src/java/org/apache/cassandra/tools/nodetool/Sjk.java,78,,"        wrapper.prepare(args != null ? args.toArray(new String[0]) : new String[]{""help""}, output.out, output.err);"
