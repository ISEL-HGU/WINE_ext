247000,./TargetProjects/tomcat80/test/org/apache/catalina/ssi/TestExpressionParseTree.java,76,,"        r.setVariableValue(""QUERY_STRING"", ""a"");"
247001,./TargetProjects/tomcat80/test/org/apache/catalina/startup/TestBootstrap.java,72,,"        doTest(""\""aaa\"""", ""aaa"");"
247002,./TargetProjects/tomcat80/test/org/apache/catalina/startup/TestBootstrap.java,117,,"        doTest(""\"""", ""ignored"");"
247003,./TargetProjects/tomcat80/test/org/apache/catalina/startup/TestContextConfig.java,58,,"                ""/test"", appDir.getAbsolutePath());"
247004,./TargetProjects/tomcat80/test/org/apache/catalina/startup/TestContextConfig.java,74,,"        File appDir =  new File(""test/webapp-fragments"");"
247005,./TargetProjects/tomcat80/test/org/apache/catalina/startup/TestContextConfig.java,112,,"        Tomcat.addServlet(context, ""TestServlet"","
247006,./TargetProjects/tomcat80/test/org/apache/catalina/startup/TestContextConfigAnnotation.java,56,,"                ""org/apache/catalina/startup/ParamServlet"");"
247007,./TargetProjects/tomcat80/test/org/apache/catalina/startup/TestContextConfigAnnotation.java,59,,"        ServletDef servletDef = webxml.getServlets().get(""param"");"
247008,./TargetProjects/tomcat80/test/org/apache/catalina/startup/TestContextConfigAnnotation.java,61,,"        Assert.assertEquals(""Hello"", servletDef.getParameterMap().get(""foo""));"
247009,./TargetProjects/tomcat80/test/org/apache/catalina/startup/TestContextConfigAnnotation.java,83,,"        servletDef.addInitParameter(""foo"", ""tomcat"");"
247010,./TargetProjects/tomcat80/test/org/apache/catalina/startup/TestContextConfigAnnotation.java,84,,"        servletDef.setDescription(""Description"");"
247011,./TargetProjects/tomcat80/test/org/apache/catalina/startup/TestContextConfigAnnotation.java,85,,"        servletDef.setDisplayName(""DisplayName"");"
247012,./TargetProjects/tomcat80/test/org/apache/catalina/startup/TestContextConfigAnnotation.java,86,,"        servletDef.setLargeIcon(""LargeIcon"");"
247013,./TargetProjects/tomcat80/test/org/apache/catalina/startup/TestContextConfigAnnotation.java,87,,"        servletDef.setSmallIcon(""SmallIcon"");"
247014,./TargetProjects/tomcat80/test/org/apache/catalina/startup/TestContextConfigAnnotation.java,92,,"        webxml.addServletMapping(""/param"", ""param"");"
247015,./TargetProjects/tomcat80/test/org/apache/catalina/startup/TestContextConfigAnnotation.java,125,,"        ServletDef servletDef = webxml.getServlets().get(""param1"");"
247016,./TargetProjects/tomcat80/test/org/apache/catalina/startup/TestContextConfigAnnotation.java,185,,"        FilterDef fdef = webxml.getFilters().get(""paramFilter"");"
247017,./TargetProjects/tomcat80/test/org/apache/catalina/startup/TestHostConfigAutomaticDeployment.java,609,,"                host.getConfigBaseFile(), APP_NAME.getBaseName() + "".xml"");"
247018,./TargetProjects/tomcat80/test/org/apache/catalina/startup/TestHostConfigAutomaticDeployment.java,614,,"                host.getAppBaseFile(), APP_NAME.getBaseName() + "".war"");"
247019,./TargetProjects/tomcat80/test/org/apache/catalina/startup/TestTomcat.java,63,,"            res.getWriter().write(""Hello world"");"
247020,./TargetProjects/tomcat80/test/org/apache/catalina/startup/TestTomcat.java,189,,"        Tomcat.addServlet(ctx, ""myServlet"", new HelloWorld());"
247021,./TargetProjects/tomcat80/test/org/apache/catalina/startup/TestTomcat.java,194,,"        ByteChunk res = getUrl(""http://localhost:"" + getPort() + ""/"");"
247022,./TargetProjects/tomcat80/test/org/apache/catalina/startup/TestTomcat.java,205,,"                null, ""/examples"", appDir.getAbsolutePath());"
247023,./TargetProjects/tomcat80/test/org/apache/catalina/startup/TestTomcat.java,279,,"        Tomcat.addServlet(ctx, ""jndiServlet"", new HelloWorldJndi());"
247024,./TargetProjects/tomcat80/test/org/apache/catalina/startup/TestTomcat.java,404,,"        Assert.assertNotNull(tomcat.getWebappConfigFile(""test/deployment/context.war"", """"));"
247025,./TargetProjects/tomcat80/test/org/apache/catalina/startup/TestTomcat.java,418,,"        StandardContext context = (StandardContext) tomcat.addWebapp(null, ""/test"","
247026,./TargetProjects/tomcat80/test/org/apache/catalina/startup/TestTomcatClassLoader.java,45,,"        Tomcat.addServlet(ctx, ""ClassLoaderReport"", new ClassLoaderReport(null));"
247027,./TargetProjects/tomcat80/test/org/apache/catalina/tribes/group/interceptors/TestTcpFailureDetector.java,47,,"        channel1.getMembershipService().setPayload(""Channel-1"".getBytes(""ASCII""));"
247028,./TargetProjects/tomcat80/test/org/apache/catalina/tribes/test/channel/TestDataIntegrity.java,87,,"        Assert.assertEquals(""Checking success messages."",msgCount*threadCount,listener1.count);"
247029,./TargetProjects/tomcat80/test/org/apache/catalina/tribes/test/channel/TestMulticastPackages.java,93,,"        Assert.assertEquals(""Checking success messages."",1,listener1.count.get());"
247030,./TargetProjects/tomcat80/test/org/apache/catalina/tribes/test/channel/TestUdpPackages.java,93,,"        Assert.assertEquals(""Checking success messages."",1,listener1.count.get());"
247031,./TargetProjects/tomcat80/test/org/apache/catalina/util/TestContextName.java,54,,"        cn4 = new ContextName(""/foo"", null);"
247032,./TargetProjects/tomcat80/test/org/apache/catalina/util/TestContextName.java,55,,"        cn5 = new ContextName(""/foo/bar"", null);"
247033,./TargetProjects/tomcat80/test/org/apache/catalina/util/TestContextName.java,61,,"        cn11 = new ContextName(""ROOT"", false);"
247034,./TargetProjects/tomcat80/test/org/apache/catalina/util/TestContextName.java,62,,"        cn12 = new ContextName(""foo"", false);"
247035,./TargetProjects/tomcat80/test/org/apache/catalina/util/TestContextName.java,64,,"        cn14 = new ContextName(""ROOT##A"", false);"
247036,./TargetProjects/tomcat80/test/org/apache/catalina/util/TestContextName.java,120,,"        Assert.assertEquals(""/ROOT/bar"", cn18.getPath());"
247037,./TargetProjects/tomcat80/test/org/apache/catalina/util/TestContextName.java,163,,"        Assert.assertEquals(""/foo##D"", cn9.getName());"
247038,./TargetProjects/tomcat80/test/org/apache/catalina/util/TestContextName.java,164,,"        Assert.assertEquals(""/foo/bar##E"", cn10.getName());"
247039,./TargetProjects/tomcat80/test/org/apache/catalina/util/TestParameterMap.java,47,,"        paramMap.put(""param1"", TEST_PARAM_VALUES_1);"
247040,./TargetProjects/tomcat80/test/org/apache/catalina/util/TestParameterMap.java,48,,"        paramMap.put(""param2"", TEST_PARAM_VALUES_2);"
247041,./TargetProjects/tomcat80/test/org/apache/catalina/util/TestParameterMap.java,49,,"        paramMap.put(""param3"", TEST_PARAM_VALUES_3);"
247042,./TargetProjects/tomcat80/test/org/apache/catalina/util/TestParameterMap.java,95,,"            Assert.fail(""ParameterMap is not locked."");"
247043,./TargetProjects/tomcat80/test/org/apache/catalina/util/TestParameterMap.java,101,,"            additionalParams.put(""param4"", new String[] { ""value4"" });"
247044,./TargetProjects/tomcat80/test/org/apache/catalina/util/TestParameterMap.java,101,,"            additionalParams.put(""param4"", new String[] { ""value4"" });"
247045,./TargetProjects/tomcat80/test/org/apache/catalina/util/TestURLEncoder.java,36,,"        Assert.assertNotEquals(original.encode(SPACE, ""UTF-8""), clone.encode(SPACE, ""UTF-8""));"
247046,./TargetProjects/tomcat80/test/org/apache/catalina/valves/Benchmarks.java,214,,"        private SimpleDateFormat yearFormatter = new SimpleDateFormat(""yyyy"");"
247047,./TargetProjects/tomcat80/test/org/apache/catalina/valves/Benchmarks.java,216,,"                ""hh:mm:ss"");"
247048,./TargetProjects/tomcat80/test/org/apache/catalina/valves/TestErrorReportValve.java,51,,"        ByteChunk res = getUrl(""http://localhost:"" + getPort());"
247049,./TargetProjects/tomcat80/test/org/apache/catalina/valves/TestErrorReportValve.java,79,,"        Tomcat.addServlet(ctx, ""bug54220"", new Bug54220Servlet(false));"
247050,./TargetProjects/tomcat80/test/org/apache/catalina/valves/TestRemoteIpValve.java,83,,"            this.forwardedFor = request.getHeader(""x-forwarded-for"");"
247051,./TargetProjects/tomcat80/test/org/apache/catalina/valves/TestRemoteIpValve.java,84,,"            this.forwardedBy = request.getHeader(""x-forwarded-by"");"
247052,./TargetProjects/tomcat80/test/org/apache/catalina/valves/TestRemoteIpValve.java,133,,"        request.setRemoteAddr(""192.168.0.10"");"
247053,./TargetProjects/tomcat80/test/org/apache/catalina/valves/TestRemoteIpValve.java,134,,"        request.setRemoteHost(""remote-host-original-value"");"
247054,./TargetProjects/tomcat80/test/org/apache/catalina/valves/TestRemoteIpValve.java,147,,"        Assert.assertEquals(""remoteAddr"", ""192.168.0.10"", actualRemoteAddr);"
247055,./TargetProjects/tomcat80/test/org/apache/catalina/valves/TestRemoteIpValve.java,150,,"        Assert.assertEquals(""remoteHost"", ""remote-host-original-value"", actualRemoteHost);"
247056,./TargetProjects/tomcat80/test/org/apache/catalina/valves/TestRemoteIpValve.java,153,,"        Assert.assertEquals(""postInvoke remoteAddr"", ""192.168.0.10"", actualPostInvokeRemoteAddr);"
247057,./TargetProjects/tomcat80/test/org/apache/catalina/valves/TestRemoteIpValve.java,165,,"        remoteIpValve.setInternalProxies(""192\\.168\\.0\\.10|192\\.168\\.0\\.11"");"
247058,./TargetProjects/tomcat80/test/org/apache/catalina/valves/TestRemoteIpValve.java,166,,"        remoteIpValve.setTrustedProxies(""proxy1|proxy2|proxy3"");"
247059,./TargetProjects/tomcat80/test/org/apache/catalina/valves/TestRemoteIpValve.java,176,,"        request.getCoyoteRequest().getMimeHeaders().addValue(""x-forwarded-for"").setString(""140.211.11.130, proxy1, proxy2"");"
247060,./TargetProjects/tomcat80/test/org/apache/catalina/valves/TestRemoteIpValve.java,183,,"        Assert.assertNull(""all proxies are trusted, x-forwarded-for must be null"", actualXForwardedFor);"
247061,./TargetProjects/tomcat80/test/org/apache/catalina/valves/TestRemoteIpValve.java,186,,"        Assert.assertEquals(""all proxies are trusted, they must appear in x-forwarded-by"", ""proxy1, proxy2"", actualXForwardedBy);"
247062,./TargetProjects/tomcat80/test/org/apache/catalina/valves/TestRemoteIpValve.java,189,,"        Assert.assertEquals(""remoteAddr"", ""140.211.11.130"", actualRemoteAddr);"
247063,./TargetProjects/tomcat80/test/org/apache/catalina/valves/TestRemoteIpValve.java,215,,"        request.setRemoteAddr(""proxy3"");"
247064,./TargetProjects/tomcat80/test/org/apache/catalina/valves/TestRemoteIpValve.java,415,,"        remoteIpValve.setProtocolHeader(""x-forwarded-proto"");"
247065,./TargetProjects/tomcat80/test/org/apache/catalina/valves/TestRemoteIpValve.java,423,,"        request.getCoyoteRequest().getMimeHeaders().addValue(""x-forwarded-for"").setString(""209.244.0.3"");"
247066,./TargetProjects/tomcat80/test/org/apache/catalina/valves/TestRemoteIpValve.java,424,,"        request.getCoyoteRequest().getMimeHeaders().addValue(""x-forwarded-proto"").setString(""https"");"
247067,./TargetProjects/tomcat80/test/org/apache/catalina/valves/TestRemoteIpValve.java,507,,"        request.getCoyoteRequest().scheme().setString(""http"");"
247068,./TargetProjects/tomcat80/test/org/apache/catalina/valves/TestRemoteIpValve.java,515,,"        Assert.assertNull(""no intermediate non-trusted proxy, x-forwarded-for must be null"", actualXForwardedFor);"
247069,./TargetProjects/tomcat80/test/org/apache/catalina/valves/TestRemoteIpValve.java,518,,"        Assert.assertNull(""no intermediate trusted proxy"", actualXForwardedBy);"
247070,./TargetProjects/tomcat80/test/org/apache/catalina/valves/TestRemoteIpValve.java,543,,"        Assert.assertFalse(""postInvoke secure"", actualPostInvokeSecure);"
247071,./TargetProjects/tomcat80/test/org/apache/catalina/valves/TestRemoteIpValve.java,546,,"        Assert.assertEquals(""postInvoke serverPort"", 8080, actualPostInvokeServerPort);"
247072,./TargetProjects/tomcat80/test/org/apache/catalina/valves/TestRemoteIpValve.java,549,,"        Assert.assertEquals(""postInvoke scheme"", ""http"", actualPostInvokeScheme);"
247073,./TargetProjects/tomcat80/test/org/apache/catalina/valves/TestRemoteIpValve.java,599,,"        Assert.assertEquals(""x-forwarded-proto is null"", ""http"", actualScheme);"
247074,./TargetProjects/tomcat80/test/org/apache/catalina/valves/TestSSLValve.java,109,,"        final String headerName = ""myheader"";"
247075,./TargetProjects/tomcat80/test/org/apache/catalina/valves/TestSSLValve.java,189,,"                ""org.apache.catalina.valves.SSLValve"");"
247076,./TargetProjects/tomcat80/test/org/apache/catalina/valves/TestStuckThreadDetectionValve.java,57,,"        servlet.addMapping(""/myservlet"");"
247077,./TargetProjects/tomcat80/test/org/apache/catalina/valves/rewrite/TestRewriteValve.java,48,,"        doTestRewrite("""", ""/a/%255A"", ""/a/%255A"");"
247078,./TargetProjects/tomcat80/test/org/apache/catalina/valves/rewrite/TestRewriteValve.java,81,,"                ""RewriteRule /b/(.*).html$ /c/${mapa:$1|dd}"", ""/b/x.html"", ""/c/dd"");"
247079,./TargetProjects/tomcat80/test/org/apache/catalina/valves/rewrite/TestRewriteValve.java,206,,"                ""/b/%C2%A1/id=%C2%A1?di=%C2%AE"", ""/c/%C2%A1%C2%A1"", ""id=%C2%A1"");"
247080,./TargetProjects/tomcat80/test/org/apache/catalina/valves/rewrite/TestRewriteValve.java,206,,"                ""/b/%C2%A1/id=%C2%A1?di=%C2%AE"", ""/c/%C2%A1%C2%A1"", ""id=%C2%A1"");"
247081,./TargetProjects/tomcat80/test/org/apache/catalina/valves/rewrite/TestRewriteValve.java,206,,"                ""/b/%C2%A1/id=%C2%A1?di=%C2%AE"", ""/c/%C2%A1%C2%A1"", ""id=%C2%A1"");"
247082,./TargetProjects/tomcat80/test/org/apache/catalina/valves/rewrite/TestRewriteValve.java,214,,"                ""/b/%C2%A1/id=%C2%A1?di=%C2%AE"", ""/c/%C2%A1%25C2%25A1"", ""id=%25C2%25A1"");"
247083,./TargetProjects/tomcat80/test/org/apache/catalina/valves/rewrite/TestRewriteValve.java,214,,"                ""/b/%C2%A1/id=%C2%A1?di=%C2%AE"", ""/c/%C2%A1%25C2%25A1"", ""id=%25C2%25A1"");"
247084,./TargetProjects/tomcat80/test/org/apache/catalina/valves/rewrite/TestRewriteValve.java,305,,"                ""/b/%C2%A1?id=%C2%A1"", ""/c/%C2%A1%C2%A1"", ""id=%C2%A1"");"
247085,./TargetProjects/tomcat80/test/org/apache/catalina/valves/rewrite/TestRewriteValve.java,357,,"                ""/b/%C2%A1/id=%C2%A1"", ""/c/%C2%A1%C2%A1"", ""id=%C2%A1"");"
247086,./TargetProjects/tomcat80/test/org/apache/catalina/valves/rewrite/TestRewriteValve.java,426,,"        doTestRewrite(""RewriteRule ^/b/(.*) /c/\u00A1$1"", ""/b/%C2%A1"", ""/c/%C2%A1%C2%A1"");"
247087,./TargetProjects/tomcat80/test/org/apache/catalina/valves/rewrite/TestRewriteValve.java,489,,"        doTestRedirect(""RewriteRule ^/from/a$ /to/b [R]"", ""/redirect/from/a"", ""/redirect/to/b"","
247088,./TargetProjects/tomcat80/test/org/apache/catalina/valves/rewrite/TestRewriteValve.java,489,,"        doTestRedirect(""RewriteRule ^/from/a$ /to/b [R]"", ""/redirect/from/a"", ""/redirect/to/b"","
247089,./TargetProjects/tomcat80/test/org/apache/catalina/webresources/AbstractTestResourceSet.java,101,,"        WebResource webResource = resourceRoot.getResource(getMount() + ""/d1"");"
247090,./TargetProjects/tomcat80/test/org/apache/catalina/webresources/AbstractTestResourceSet.java,104,,"        Assert.assertEquals(getMount() + ""/d1/"", webResource.getWebappPath());"
247091,./TargetProjects/tomcat80/test/org/apache/catalina/webresources/AbstractTestResourceSet.java,124,,"                resourceRoot.getResource(getMount() + ""/d1/d1-f1.txt"");"
247092,./TargetProjects/tomcat80/test/org/apache/catalina/webresources/AbstractTestResourceSet.java,375,,"            Assert.fail(""Unhandled condition in unit test"");"
247093,./TargetProjects/tomcat80/test/org/apache/catalina/webresources/AbstractTestResourceSet.java,419,,"        InputStream is = new ByteArrayInputStream(""test"".getBytes());"
247094,./TargetProjects/tomcat80/test/org/apache/coyote/ajp/TestAbstractAjpProcessor.java,91,,"        if (requestInfo.get(""REQUEST-QUERY-STRING"") != null &&"
247095,./TargetProjects/tomcat80/test/org/apache/coyote/ajp/TestAbstractAjpProcessor.java,104,,"                case ""REQUEST-METHOD"":"
247096,./TargetProjects/tomcat80/test/org/apache/coyote/ajp/TestAbstractAjpProcessor.java,110,,"                case ""REQUEST-URI"":"
247097,./TargetProjects/tomcat80/test/org/apache/coyote/ajp/TestAbstractAjpProcessor.java,131,,"                case ""REQUEST-LOCAL-ADDR"":"
247098,./TargetProjects/tomcat80/test/org/apache/coyote/ajp/TestAbstractAjpProcessor.java,134,,"                case ""REQUEST-REMOTE-PORT"":"
247099,./TargetProjects/tomcat80/test/org/apache/coyote/ajp/TestAbstractAjpProcessor.java,137,,"                case ""REQUEST-REMOTE-USER"":"
247100,./TargetProjects/tomcat80/test/org/apache/coyote/ajp/TestAbstractAjpProcessor.java,140,,"                case ""REQUEST-AUTH-TYPE"":"
247101,./TargetProjects/tomcat80/test/org/apache/coyote/ajp/TestAbstractAjpProcessor.java,147,,"                case ""REQUEST-BODY-SIZE"":"
247102,./TargetProjects/tomcat80/test/org/apache/coyote/ajp/TestAbstractAjpProcessor.java,501,,"        Tomcat.addServlet(ctx, ""helloWorld"", new HelloWorldServlet());"
247103,./TargetProjects/tomcat80/test/org/apache/coyote/ajp/TestAbstractAjpProcessor.java,621,,"        ajpClient.setMethod(""POST"");"
247104,./TargetProjects/tomcat80/test/org/apache/coyote/http11/TestAbstractHttp11Processor.java,84,,"                ""Host: any"" + SimpleHttpClient.CRLF +"
247105,./TargetProjects/tomcat80/test/org/apache/coyote/http11/TestAbstractHttp11Processor.java,124,,"            resp.setContentType(""text/plain"");"
247106,./TargetProjects/tomcat80/test/org/apache/coyote/http11/TestAbstractHttp11Processor.java,151,,"            ""POST /echo-params.jsp HTTP/1.1"" + SimpleHttpClient.CRLF +"
247107,./TargetProjects/tomcat80/test/org/apache/coyote/http11/TestAbstractHttp11Processor.java,173,,"            ""Content-Length: 9"" + SimpleHttpClient.CRLF +"
247108,./TargetProjects/tomcat80/test/org/apache/coyote/http11/TestAbstractHttp11Processor.java,174,,"            ""Content-Type: application/x-www-form-urlencoded"" +"
247109,./TargetProjects/tomcat80/test/org/apache/coyote/http11/TestAbstractHttp11Processor.java,177,,"            ""test=data"";"
247110,./TargetProjects/tomcat80/test/org/apache/coyote/http11/TestAbstractHttp11Processor.java,392,,"        ctx.addServletMappingDecoded(""/test"", ""NoContentLengthFlushingServlet"");"
247111,./TargetProjects/tomcat80/test/org/apache/coyote/http11/TestAbstractHttp11Processor.java,398,,"        int rc = getUrl(""http://localhost:"" + getPort() + ""/test"", responseBody,"
247112,./TargetProjects/tomcat80/test/org/apache/coyote/http11/TestAbstractHttp11Processor.java,431,,"        Assert.assertTrue(responseHeaders.containsKey(""Connection""));"
247113,./TargetProjects/tomcat80/test/org/apache/coyote/http11/TestAbstractHttp11Processor.java,499,,"                ""Host: localhost:"" + getPort() + ""\r\n"" +"
247114,./TargetProjects/tomcat80/test/org/apache/coyote/http11/TestAbstractHttp11Processor.java,864,,"        Wrapper w = Tomcat.addServlet(ctx, ""Test"", servlet);"
247115,./TargetProjects/tomcat80/test/org/apache/coyote/http11/TestInternalInputBuffer.java,66,,"            root.addServletMappingDecoded(""/test"", ""Bug48839"");"
247116,./TargetProjects/tomcat80/test/org/apache/coyote/http11/TestInternalInputBuffer.java,77,,"                    ""GET /test HTTP/1.1"" + CRLF +"
247117,./TargetProjects/tomcat80/test/org/apache/coyote/http11/TestInternalInputBuffer.java,78,,"                    ""host: localhost:8080"" + CRLF +"
247118,./TargetProjects/tomcat80/test/org/apache/coyote/http11/TestInternalInputBuffer.java,81,,"                    ""Connection: close"" + CRLF +"
247119,./TargetProjects/tomcat80/test/org/apache/coyote/http11/TestInternalInputBuffer.java,160,,"        Assert.assertEquals(""abcd"", client.getResponseBody());"
247120,./TargetProjects/tomcat80/test/org/apache/coyote/http11/filters/TestChunkedInputFilter.java,106,,"        Tomcat.addServlet(ctx, ""servlet"", servlet);"
247121,./TargetProjects/tomcat80/test/org/apache/coyote/http11/filters/TestChunkedInputFilter.java,112,,"            ""POST /echo-params.jsp HTTP/1.1"" + SimpleHttpClient.CRLF +"
247122,./TargetProjects/tomcat80/test/org/apache/coyote/http11/filters/TestChunkedInputFilter.java,113,,"            ""Host: any"" + SimpleHttpClient.CRLF +"
247123,./TargetProjects/tomcat80/test/org/apache/coyote/http11/filters/TestChunkedInputFilter.java,114,,"            ""Transfer-encoding: chunked"" + SimpleHttpClient.CRLF +"
247124,./TargetProjects/tomcat80/test/org/apache/coyote/http11/filters/TestChunkedInputFilter.java,115,,"            ""Content-Type: application/x-www-form-urlencoded"" +"
247125,./TargetProjects/tomcat80/test/org/apache/coyote/http11/filters/TestChunkedInputFilter.java,117,,"            ""Connection: close"" + SimpleHttpClient.CRLF +"
247126,./TargetProjects/tomcat80/test/org/apache/coyote/http11/filters/TestChunkedInputFilter.java,120,,"            ""a=0"" + (chunkUsesCRLF ? SimpleHttpClient.CRLF : LF) +"
247127,./TargetProjects/tomcat80/test/org/apache/coyote/http11/filters/TestChunkedInputFilter.java,122,,"            ""&b=1"" + SimpleHttpClient.CRLF +"
247128,./TargetProjects/tomcat80/test/org/apache/coyote/http11/filters/TestChunkedInputFilter.java,327,,"                + ""Hello World!"" + SimpleHttpClient.CRLF, 20, 12);"
247129,./TargetProjects/tomcat80/test/org/apache/el/TestELEvaluation.java,45,,"        Assert.assertEquals(""false"", evaluateExpression(""${false?true:false}""));"
247130,./TargetProjects/tomcat80/test/org/apache/el/TestELEvaluation.java,98,,"        Assert.assertEquals(""\\\\"", evaluateExpression(""\\\\""));"
247131,./TargetProjects/tomcat80/test/org/apache/el/TestELEvaluation.java,107,,"        Assert.assertEquals(""\\$"", evaluateExpression(""\\$""));"
247132,./TargetProjects/tomcat80/test/org/apache/el/TestELInJsp.java,46,,"        ByteChunk res = getUrl(""http://localhost:"" + getPort() + ""/test/bug36923.jsp"");"
247133,./TargetProjects/tomcat80/test/org/apache/el/TestMethodExpressionImpl.java,134,,"                ""${beanC.sayHello(beanA,beanB)}"", null , null);"
247134,./TargetProjects/tomcat80/test/org/apache/el/TestMethodExpressionImpl.java,136,,"        Assert.assertEquals(""AB: Hello A from B"", r2.toString());"
247135,./TargetProjects/tomcat80/test/org/apache/el/TestValueExpressionImpl.java,44,,"        beanB.setName(""Tomcat"");"
247136,./TargetProjects/tomcat80/test/org/apache/el/TesterBeanC.java,22,,"        return ""AB: Hello "" + a.getName() + "" from "" + b.getName();"
247137,./TargetProjects/tomcat80/test/org/apache/el/lang/TestELSupport.java,126,,"        Assert.assertNull(""Result: "" + result, result);"
247138,./TargetProjects/tomcat80/test/org/apache/el/lang/TestELSupport.java,217,,"                ""Foo"", TesterType.class);"
247139,./TargetProjects/tomcat80/test/org/apache/el/parser/TestAstAssign.java,33,,"        processor.defineBean(""bean01"", new TesterBeanB());"
247140,./TargetProjects/tomcat80/test/org/apache/el/parser/TestAstAssign.java,38,,"        Assert.assertEquals(""hello"", result);"
247141,./TargetProjects/tomcat80/test/org/apache/el/parser/TestELParser.java,107,,"        doTestBug56179(0, ""test == true"");"
247142,./TargetProjects/tomcat80/test/org/apache/el/parser/TestELParser.java,137,,"        doTestBug56179(0, ""(test) == true"");"
247143,./TargetProjects/tomcat80/test/org/apache/el/stream/TestCollectionOperations.java,91,,"        processor.defineBean(""beans"", beans);"
247144,./TargetProjects/tomcat80/test/org/apache/el/stream/TestCollectionOperations.java,507,,"        Assert.assertTrue(""Result: "" + average.toString(),"
247145,./TargetProjects/tomcat80/test/org/apache/el/util/Tester.java,23,,"    @SuppressWarnings(""unused"")"
247146,./TargetProjects/tomcat80/test/org/apache/jasper/compiler/TestAttributeParser.java,41,,"        Assert.assertEquals(""false"", evalAttr(""${false?true:false}"", '\""'));"
247147,./TargetProjects/tomcat80/test/org/apache/jasper/compiler/TestAttributeParser.java,84,,"        Assert.assertEquals(""hello 'world'"", evalAttr(""hello 'world'"", '\""'));"
247148,./TargetProjects/tomcat80/test/org/apache/jasper/compiler/TestAttributeParser.java,85,,"        Assert.assertEquals(""hello 'world"", evalAttr(""hello 'world"", '\""'));"
247149,./TargetProjects/tomcat80/test/org/apache/jasper/compiler/TestAttributeParser.java,86,,"        Assert.assertEquals(""hello world'"", evalAttr(""hello world'"", '\""'));"
247150,./TargetProjects/tomcat80/test/org/apache/jasper/compiler/TestAttributeParser.java,87,,"        Assert.assertEquals(""hello world'"", evalAttr(""hello world\\'"", '\""'));"
247151,./TargetProjects/tomcat80/test/org/apache/jasper/compiler/TestAttributeParser.java,88,,"        Assert.assertEquals(""hello world\"""", evalAttr(""hello world\\\"""", '\""'));"
247152,./TargetProjects/tomcat80/test/org/apache/jasper/compiler/TestAttributeParser.java,88,,"        Assert.assertEquals(""hello world\"""", evalAttr(""hello world\\\"""", '\""'));"
247153,./TargetProjects/tomcat80/test/org/apache/jasper/compiler/TestAttributeParser.java,89,,"        Assert.assertEquals(""hello \""world\"""", evalAttr(""hello \""world\"""", '\""'));"
247154,./TargetProjects/tomcat80/test/org/apache/jasper/compiler/TestAttributeParser.java,90,,"        Assert.assertEquals(""hello \""world"", evalAttr(""hello \""world"", '\""'));"
247155,./TargetProjects/tomcat80/test/org/apache/jasper/compiler/TestCompiler.java,42,,"        getUrl(""http://localhost:"" + getPort() + ""/test/bug49nnn/bug49726a.jsp"","
247156,./TargetProjects/tomcat80/test/org/apache/jasper/compiler/TestGenerator.java,46,,"        ByteChunk res = getUrl(""http://localhost:"" + getPort() +"
247157,./TargetProjects/tomcat80/test/org/apache/jasper/compiler/TestJspConfig.java,38,,"        tomcat.addWebapp(null, ""/test"", appDir.getAbsolutePath());"
247158,./TargetProjects/tomcat80/test/org/apache/jasper/compiler/TestJspConfig.java,42,,"        ByteChunk res = getUrl(""http://localhost:"" + getPort() +"
247159,./TargetProjects/tomcat80/test/org/apache/jasper/compiler/TestJspConfig.java,43,,"                ""/test/el-as-literal.jsp"");"
247160,./TargetProjects/tomcat80/test/org/apache/jasper/compiler/TestJspConfig.java,87,,"        Assert.assertTrue(result.indexOf(""<p>00-hello world</p>"") > 0);"
247161,./TargetProjects/tomcat80/test/org/apache/jasper/compiler/TestJspDocumentParser.java,42,,"        int rc = getUrl(""http://localhost:"" + getPort() +"
247162,./TargetProjects/tomcat80/test/org/apache/jasper/compiler/TestParser.java,38,,"        ByteChunk res = getUrl(""http://localhost:"" + getPort() +"
247163,./TargetProjects/tomcat80/test/org/apache/jasper/compiler/TestParserNoStrictWhitespace.java,47,,"        ByteChunk res = getUrl(""http://localhost:"" + getPort() +"
247164,./TargetProjects/tomcat80/test/org/apache/jasper/compiler/TestValidator.java,40,,"        int rc = getUrl(""http://localhost:"" + getPort() +"
247165,./TargetProjects/tomcat80/test/org/apache/jasper/compiler/TestValidator.java,53,,"        tomcat.addWebapp(null, ""/test"", appDir.getAbsolutePath());"
247166,./TargetProjects/tomcat80/test/org/apache/jasper/compiler/TestValidator.java,58,,"                ""/test/tld-versions.jsp"");"
247167,./TargetProjects/tomcat80/test/org/apache/jasper/compiler/TestValidator.java,63,,"        Assert.assertTrue(result.indexOf(""<p>#{'01-hello world'}</p>"") > 0);"
247168,./TargetProjects/tomcat80/test/org/apache/jasper/compiler/TestValidator.java,65,,"        Assert.assertTrue(result.indexOf(""<p>#{'03-hello world'}</p>"") > 0);"
247169,./TargetProjects/tomcat80/test/org/apache/jasper/compiler/TestValidator.java,67,,"        Assert.assertTrue(result.indexOf(""<p>#{'05-hello world'}</p>"") > 0);"
247170,./TargetProjects/tomcat80/test/org/apache/jasper/compiler/TestValidator.java,112,,"        Assert.assertTrue(result.indexOf(""<p>00-hello world</p>"") > 0);"
247171,./TargetProjects/tomcat80/test/org/apache/jasper/compiler/TestValidator.java,114,,"        Assert.assertTrue(result.indexOf(""<p>02-hello world</p>"") > 0);"
247172,./TargetProjects/tomcat80/test/org/apache/jasper/compiler/TestValidator.java,116,,"        Assert.assertTrue(result.indexOf(""<p>04-hello world</p>"") > 0);"
247173,./TargetProjects/tomcat80/test/org/apache/jasper/compiler/TestValidator.java,118,,"        Assert.assertTrue(result.indexOf(""<p>06-hello world</p>"") > 0);"
247174,./TargetProjects/tomcat80/test/org/apache/jasper/runtime/TestPageContextImpl.java,47,,"        int rc = getUrl(""http://localhost:"" + getPort() +"
247175,./TargetProjects/tomcat80/test/org/apache/naming/resources/TestNamingContext.java,66,,"        cr.setType(""org.apache.naming.resources.TesterObject"");"
247176,./TargetProjects/tomcat80/test/org/apache/naming/resources/TestNamingContext.java,78,,"        ByteChunk bc = getUrl(""http://localhost:"" + getPort() + ""/"");"
247177,./TargetProjects/tomcat80/test/org/apache/naming/resources/TestNamingContext.java,98,,"            resp.setContentType(""text/plain;UTF-8"");"
247178,./TargetProjects/tomcat80/test/org/apache/naming/resources/TestWarDirContext.java,60,,"        ByteChunk bc = getUrl(""http://localhost:"" + getPort() +"
247179,./TargetProjects/tomcat80/test/org/apache/tomcat/unittest/TesterServletContext.java,79,,"        throw new RuntimeException(""Not implemented"");"
247180,./TargetProjects/tomcat80/test/org/apache/tomcat/util/buf/TestByteChunk.java,38,,"        byte[] expected = string.getBytes(""ISO-8859-1"");"
247181,./TargetProjects/tomcat80/test/org/apache/tomcat/util/buf/TestByteChunk.java,55,,"        byte[] bytes = ""Hello\u00a0world"".getBytes(""ISO-8859-1"");"
247182,./TargetProjects/tomcat80/test/org/apache/tomcat/util/buf/TestUtf8.java,150,,"                ""A\uFFFDA""));"
247183,./TargetProjects/tomcat80/test/org/apache/tomcat/util/buf/TestUtf8.java,238,,"                ""a\uFFFD\uFFFDa"");"
247184,./TargetProjects/tomcat80/test/org/apache/tomcat/util/buf/TestUtf8.java,290,,"                ""a\uFFFD\uFFFD\uFFFDa"");"
247185,./TargetProjects/tomcat80/test/org/apache/tomcat/util/buf/TestUtf8.java,352,,"                ""a\uFFFD\uFFFD\uFFFD\uFFFDa"");"
247186,./TargetProjects/tomcat80/test/org/apache/tomcat/util/buf/TestUtf8.java,435,,"                ""a\uFFFD\uFFFD\uFFFD\uFFFD\uFFFDa"");"
247187,./TargetProjects/tomcat80/test/org/apache/tomcat/util/buf/TestUtf8.java,475,,"                ""a\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFDa"");"
247188,./TargetProjects/tomcat80/test/org/apache/tomcat/util/descriptor/TestLocalResolver.java,64,,"        Assert.assertNull(resolver.resolveEntity(""unknown"", null));"
247189,./TargetProjects/tomcat80/test/org/apache/tomcat/util/descriptor/tld/TestTldParser.java,45,,"        Assert.assertEquals(""1.0"", xml.getTlibVersion());"
247190,./TargetProjects/tomcat80/test/org/apache/tomcat/util/descriptor/web/TestSecurityConstraint.java,52,,"        scGetOnly.addMethod(""GET"");"
247191,./TargetProjects/tomcat80/test/org/apache/tomcat/util/descriptor/web/TestSecurityConstraint.java,60,,"        scPostOnly.addMethod(""POST"");"
247192,./TargetProjects/tomcat80/test/org/apache/tomcat/util/descriptor/web/TestWebXml.java,51,,"        webxml.setVersion(""2.5"");"
247193,./TargetProjects/tomcat80/test/org/apache/tomcat/util/descriptor/web/TestWebXml.java,228,,"        filterDef.setFilterName(""Dummy"");"
247194,./TargetProjects/tomcat80/test/org/apache/tomcat/util/descriptor/web/TestWebXml.java,241,,"        resourceEnvRef.setName(""dummy"");"
247195,./TargetProjects/tomcat80/test/org/apache/tomcat/util/descriptor/web/TestWebXml.java,434,,"        webxml.addServletMapping(""/foo"", ""a"");"
247196,./TargetProjects/tomcat80/test/org/apache/tomcat/util/http/CookiesBaseTest.java,74,,"        Tomcat.addServlet(ctx, ""invalid"", new CookieServlet(""na;me"", ""value""));"
247197,./TargetProjects/tomcat80/test/org/apache/tomcat/util/http/TestCookieProcessorGeneration.java,28,,"        doTest(new Cookie(""foo"", ""bar""), ""foo=bar"");"
247198,./TargetProjects/tomcat80/test/org/apache/tomcat/util/http/TestCookieProcessorGeneration.java,28,,"        doTest(new Cookie(""foo"", ""bar""), ""foo=bar"");"
247199,./TargetProjects/tomcat80/test/org/apache/tomcat/util/http/TestCookieProcessorGeneration.java,59,,"        doTestDefaults(cookie, ""foo=\""a=b\""; Version=1"", ""foo=a=b"");"
247200,./TargetProjects/tomcat80/test/org/apache/tomcat/util/http/TestCookies.java,322,,"        FOO.setDomain(""apache.org"");"
247201,./TargetProjects/tomcat80/test/org/apache/tomcat/util/http/TestCookiesDefaultSysProps.java,47,,"        ByteChunk res = getUrl(""http://localhost:"" + getPort() + ""/invalid"");"
247202,./TargetProjects/tomcat80/test/org/apache/tomcat/util/http/TestCookiesNoFwdStrictSysProps.java,48,,"        ByteChunk res = getUrl(""http://localhost:"" + getPort() + ""/invalid"");"
247203,./TargetProjects/tomcat80/test/org/apache/tomcat/util/http/TestCookiesNoFwdStrictSysProps.java,49,,"        Assert.assertEquals(""Cookie name fail"", res.toString());"
247204,./TargetProjects/tomcat80/test/org/apache/tomcat/util/http/TestCookiesNoStrictNamingSysProps.java,48,,"        ByteChunk res = getUrl(""http://localhost:"" + getPort() + ""/invalid"");"
247205,./TargetProjects/tomcat80/test/org/apache/tomcat/util/http/TestCookiesStrictSysProps.java,50,,"        ByteChunk res = getUrl(""http://localhost:"" + getPort() + ""/invalid"");"
247206,./TargetProjects/tomcat80/test/org/apache/tomcat/util/http/TestCookiesStrictSysProps.java,51,,"        Assert.assertEquals(""Cookie name fail"", res.toString());"
247207,./TargetProjects/tomcat80/test/org/apache/tomcat/util/http/TestParameters.java,29,,"        new Parameter(""foo1"", ""bar1"");"
247208,./TargetProjects/tomcat80/test/org/apache/tomcat/util/http/TestParameters.java,31,,"        new Parameter(""foo2"", ""bar1"", ""bar2"", ""hello world"", ""?%@"");"
247209,./TargetProjects/tomcat80/test/org/apache/tomcat/util/http/TestParameters.java,102,,"        p.setEncoding(""UTF-8"");"
247210,./TargetProjects/tomcat80/test/org/apache/tomcat/util/http/TestParameters.java,123,,"        String value = p.getParameter(""foo"");"
247211,./TargetProjects/tomcat80/test/org/apache/tomcat/util/http/TestParameters.java,145,,"        p.addParameter(""foo"", ""value1"");"
247212,./TargetProjects/tomcat80/test/org/apache/tomcat/util/http/TestParameters.java,146,,"        p.addParameter(""foo"", ""value2"");"
247213,./TargetProjects/tomcat80/test/org/apache/tomcat/util/http/parser/TestAuthorizationDigest.java,43,,"        Assert.assertEquals(""mthornton"", result.get(""username""));"
247214,./TargetProjects/tomcat80/test/org/apache/tomcat/util/http/parser/TestAuthorizationDigest.java,43,,"        Assert.assertEquals(""mthornton"", result.get(""username""));"
247215,./TargetProjects/tomcat80/test/org/apache/tomcat/util/http/parser/TestAuthorizationDigest.java,52,,"        Assert.assertEquals(""auth"", result.get(""qop""));"
247216,./TargetProjects/tomcat80/test/org/apache/tomcat/util/http/parser/TestAuthorizationDigest.java,52,,"        Assert.assertEquals(""auth"", result.get(""qop""));"
247217,./TargetProjects/tomcat80/test/org/apache/tomcat/util/http/parser/TestMediaType.java,46,,"    private static final String CHARSET = ""UTF-8"";"
247218,./TargetProjects/tomcat80/test/org/apache/tomcat/util/http/parser/TestMediaType.java,52,,"            new Parameter(""charset"", CHARSET);"
247219,./TargetProjects/tomcat80/test/org/apache/tomcat/util/net/TestClientCert.java,63,,"                getUrl(""https://localhost:"" + getPort() + ""/unprotected"");"
247220,./TargetProjects/tomcat80/test/org/apache/tomcat/util/net/TestClientCert.java,65,,"            Assert.assertEquals(""OK-"" + TesterSupport.ROLE, res.toString());"
247221,./TargetProjects/tomcat80/test/org/apache/tomcat/websocket/TestWebSocketFrameClient.java,55,,"        Tomcat.addServlet(ctx, ""default"", new DefaultServlet());"
247222,./TargetProjects/tomcat80/test/org/apache/tomcat/websocket/TestWebSocketFrameClientSSL.java,51,,"        Tomcat.addServlet(ctx, ""default"", new DefaultServlet());"
247223,./TargetProjects/tomcat80/test/org/apache/tomcat/websocket/TestWsSubprotocols.java,80,,"                        .create().preferredSubprotocols(Arrays.asList(""sp2""))"
247224,./TargetProjects/tomcat80/test/org/apache/tomcat/websocket/TestWsWebSocketContainer.java,92,,"        Tomcat.addServlet(ctx, ""default"", new DefaultServlet());"
247225,./TargetProjects/tomcat80/test/org/apache/tomcat/websocket/TestWsWebSocketContainer.java,105,,"                new URI(""ws://"" + getHostName() + "":"" + getPort() +"
247226,./TargetProjects/tomcat80/test/org/apache/tomcat/websocket/pojo/TestEncodingDecoding.java,74,,"        Tomcat.addServlet(ctx, ""default"", new DefaultServlet());"
247227,./TargetProjects/tomcat80/test/org/apache/tomcat/websocket/pojo/TestEncodingDecoding.java,82,,"        URI uri = new URI(""ws://localhost:"" + getPort() + PATH_PROGRAMMATIC_EP);"
247228,./TargetProjects/tomcat80/test/org/apache/tomcat/websocket/pojo/TestEncodingDecoding.java,160,,"        i = testEvent(MsgStringEncoder.class.getName()+"":init"", 0);"
247229,./TargetProjects/tomcat80/test/org/apache/tomcat/websocket/pojo/TestEncodingDecoding.java,164,,"        i = testEvent(MsgStringEncoder.class.getName()+"":destroy"", i);"
247230,./TargetProjects/tomcat80/test/org/apache/tomcat/websocket/pojo/TestPojoEndpointBase.java,58,,"        Tomcat.addServlet(ctx, ""default"", new DefaultServlet());"
247231,./TargetProjects/tomcat80/test/org/apache/tomcat/websocket/server/TestClose.java,128,,"        TesterWsCloseClient client = new TesterWsCloseClient(""localhost"", getPort());"
247232,./TargetProjects/tomcat80/test/org/apache/tomcat/websocket/server/TestClose.java,192,,"        client.sendMessage(""Test"");"
247233,./TargetProjects/tomcat80/test/org/apache/tomcat/websocket/server/TestClose.java,193,,"        awaitLatch(events.onMessageCalled, ""onMessage not called"");"
247234,./TargetProjects/tomcat80/test/org/apache/tomcat/websocket/server/TestUriTemplate.java,49,,"        @SuppressWarnings(""unused"")"
247235,./TargetProjects/tomcat80/test/org/apache/tomcat/websocket/server/TestUriTemplate.java,93,,"        UriTemplate t = new UriTemplate(""/a/b"");"
247236,./TargetProjects/tomcat80/test/org/apache/tomcat/websocket/server/TestUriTemplate.java,120,,"        UriTemplate t = new UriTemplate(""/a/{var}"");"
247237,./TargetProjects/tomcat80/test/org/apache/tomcat/websocket/server/TestWsServerContainer.java,54,,"        Tomcat.addServlet(ctx, ""default"", new DefaultServlet());"
247238,./TargetProjects/tomcat80/test/org/apache/tomcat/websocket/server/TestWsServerContainer.java,130,,"                Object.class, ""/a/b/c"").build();"
247239,./TargetProjects/tomcat80/webapps/examples/WEB-INF/classes/CookieExample.java,94,,"            out.println(RB.getString(""cookies.cookies"") + ""<br>"");"
247240,./TargetProjects/tomcat80/webapps/examples/WEB-INF/classes/RequestInfoExample.java,76,,"        out.println(""</td><td>"");"
247241,./TargetProjects/tomcat80/webapps/examples/WEB-INF/classes/RequestInfoExample.java,78,,"        out.println(""</td></tr><tr><td>"");"
247242,./TargetProjects/tomcat80/webapps/examples/WEB-INF/classes/RequestParamExample.java,77,,"        out.println(RB.getString(""requestparams.params-in-req"") + ""<br>"");"
247243,./TargetProjects/tomcat80/webapps/examples/WEB-INF/classes/SessionExample.java,81,,"        out.println(""<br>"");"
247244,./TargetProjects/tomcat80/webapps/examples/WEB-INF/classes/chat/ChatServlet.java,86,,"                    String nickname = request.getParameter(""nickname"");"
247245,./TargetProjects/tomcat80/webapps/examples/WEB-INF/classes/colors/ColorGameBean.java,36,,"            if (color1.equalsIgnoreCase(""black"") ||"
247246,./TargetProjects/tomcat80/webapps/examples/WEB-INF/classes/colors/ColorGameBean.java,37,,"                        color1.equalsIgnoreCase(""cyan"")) {"
247247,./TargetProjects/tomcat80/webapps/examples/WEB-INF/classes/compressionFilters/CompressionFilterTestServlet.java,58,,"        out.println(""**********  32 bytes  **********"");"
247248,./TargetProjects/tomcat80/webapps/examples/WEB-INF/classes/listeners/SessionListener.java,56,,"        log(""attributeAdded('"" + event.getSession().getId() + ""', '"""
247249,./TargetProjects/tomee/arquillian/arquillian-openejb-embedded/src/main/java/org/apache/openejb/arquillian/openejb/SWClassLoader.java,107,,"                    urls.add(new URL(null, ""archive:"" + i.getName() + (!name.startsWith(""/"") ? ""/"" : """") + name, new ArchiveStreamHandler()));"
247250,./TargetProjects/tomee/arquillian/arquillian-openejb-embedded/src/test/java/org/apache/openejb/arquillian/openejb/SessionDestroyTest.java,48,,"    @Deployment(name = ""app"", managed = false, testable = false)"
247251,./TargetProjects/tomee/arquillian/arquillian-tomee-common/src/main/java/org/apache/openejb/arquillian/common/Setup.java,82,,"        final File serverXml = Files.path(new File(tomeeHome.getAbsolutePath()), ""conf"", ""server.xml"");"
247252,./TargetProjects/tomee/arquillian/arquillian-tomee-common/src/main/java/org/apache/openejb/arquillian/common/Setup.java,308,,"        if (configuration.isUnsafeEjbd() && ""*"".equals(properties.getProperty(""tomee.serialization.class.blacklist"", ""-"").trim())) {"
247253,./TargetProjects/tomee/arquillian/arquillian-tomee-common/src/main/java/org/apache/openejb/arquillian/common/TomEEContainer.java,87,,"        if (this.configuration.isUnsafeEjbd() && ""-"".equals(System.getProperty(""tomee.serialization.class.blacklist""))) {"
247254,./TargetProjects/tomee/arquillian/arquillian-tomee-common/src/main/java/org/apache/openejb/arquillian/common/TomEEContainer.java,147,,"        if (archiveName.endsWith("".war"")) {"
247255,./TargetProjects/tomee/arquillian/arquillian-tomee-common/src/main/java/org/apache/openejb/arquillian/common/TomEEContainer.java,148,,"            httpContext.add(new Servlet(""ArquillianServletRunner"", ""/"" + getArchiveNameWithoutExtension(archive)));"
247256,./TargetProjects/tomee/arquillian/arquillian-tomee-common/src/test/java/org/apache/openejb/arquillian/common/ConfigurationOverridesTest.java,44,,"        String[] prefixes = { ""color"", ""color.orange"" };"
247257,./TargetProjects/tomee/arquillian/arquillian-tomee-common/src/test/java/org/apache/openejb/arquillian/common/ConfigurationOverridesTest.java,44,,"        String[] prefixes = { ""color"", ""color.orange"" };"
247258,./TargetProjects/tomee/arquillian/arquillian-tomee-common/src/test/java/org/apache/openejb/arquillian/common/ConfigurationOverridesTest.java,62,,"            assertEquals(""1.0"", color.alpha);"
247259,./TargetProjects/tomee/arquillian/arquillian-tomee-embedded/src/main/java/org/apache/openejb/arquillian/embedded/EmbeddedTomEEConfiguration.java,208,,"            ""*"".equals(properties.getProperty(""tomee.serialization.class.blacklist"", ""-"").trim())) {"
247260,./TargetProjects/tomee/arquillian/arquillian-tomee-embedded/src/test/java/org/apache/openejb/arquillian/embedded/AppContextStartedTest.java,50,,"                        .paramValue(""start"")"
247261,./TargetProjects/tomee/arquillian/arquillian-tomee-moviefun-example/src/main/java/org/superbiz/moviefun/MovieController.java,79,,"        return ""List"";"
247262,./TargetProjects/tomee/arquillian/arquillian-tomee-moviefun-example/src/main/java/org/superbiz/moviefun/MovieController.java,97,,"            JsfUtil.addSuccessMessage(ResourceBundle.getBundle(""/Bundle"").getString(""MovieCreated""));"
247263,./TargetProjects/tomee/arquillian/arquillian-tomee-moviefun-example/src/main/java/org/superbiz/moviefun/setup/ExampleDataProducer.java,32,,"        sampleMovies.add(new Movie(""Wedding Crashers"", ""David Dobkin"", ""Comedy"", 7, 2005));"
247264,./TargetProjects/tomee/arquillian/arquillian-tomee-moviefun-example/src/test/java/org/superbiz/moviefun/MoviesSeleniumTest.java,95,,"		driver.waitForPageToLoad(""30000"");"
247265,./TargetProjects/tomee/arquillian/arquillian-tomee-tests/arquillian-tomee-jaxrs-tests/src/test/java/org/apache/openejb/arquillian/tests/jaxrs/httpheaders/JAXRSHttpHeadersTest.java,115,,"        final Map<String, String> headers = headers(""Accept"", ""text/plain"");"
247266,./TargetProjects/tomee/arquillian/arquillian-tomee-tests/arquillian-tomee-jaxrs-tests/src/test/java/org/apache/openejb/arquillian/tests/jaxrs/httpheaders/JAXRSHttpHeadersTest.java,147,,"        post.setHeader(""Content-Type"", ""text/plain"");"
247267,./TargetProjects/tomee/arquillian/arquillian-tomee-tests/arquillian-tomee-jaxrs-tests/src/test/java/org/apache/openejb/arquillian/tests/jaxrs/httpheaders/JAXRSHttpHeadersTest.java,148,,"        post.setEntity(new StringEntity(""Hello world!"", ""UTF-8""));"
247268,./TargetProjects/tomee/arquillian/arquillian-tomee-tests/arquillian-tomee-jaxrs-tests/src/test/java/org/apache/openejb/arquillian/tests/jaxrs/httpheaders/JAXRSHttpHeadersTest.java,148,,"        post.setEntity(new StringEntity(""Hello world!"", ""UTF-8""));"
247269,./TargetProjects/tomee/arquillian/arquillian-tomee-tests/arquillian-tomee-jaxrs-tests/src/test/java/org/apache/openejb/arquillian/tests/jaxrs/httpheaders/JAXRSHttpHeadersTest.java,320,,"        HttpGet get = new HttpGet(uri(""context/httpheaders/?name=foo""));"
247270,./TargetProjects/tomee/arquillian/arquillian-tomee-tests/arquillian-tomee-jms-tests/src/test/java/org/apache/openejb/arquillian/tests/jms/EnvEntryTest.java,52,,"                .messageDestinationType(""javax.jms.Topic"")"
247271,./TargetProjects/tomee/arquillian/arquillian-tomee-tests/arquillian-tomee-webprofile-tests/src/test/java/org/apache/openejb/arquillian/tests/enventries/StratocasterTest.java,62,,"        addEnvEntry(descriptor, ""guitarStringGuages"", ""java.lang.String"", ""E1=0.052\nA=0.042\nD=0.030\nG=0.017\nB=0.013\nE=0.010"");"
247272,./TargetProjects/tomee/arquillian/arquillian-tomee-tests/arquillian-tomee-webprofile-tests/src/test/java/org/apache/openejb/arquillian/tests/realm/CdiEventRealmTest.java,65,,"        final GenericPrincipal gp = getGenericPrincipal(new CdiEventRealm().authenticate(""john"", ""secret""));"
247273,./TargetProjects/tomee/arquillian/ziplock/src/main/java/org/apache/ziplock/ResourceFinder.java,83,,"            if (url == null || isDirectory(url) || url.getProtocol().equals(""jar"")) {"
247274,./TargetProjects/tomee/arquillian/ziplock/src/test/java/org/apache/ziplock/maven/MvnTest.java,35,,"                return archivePath.get().startsWith(""/WEB-INF/lib"") && archivePath.get().contains(""javaee-api"");"
247275,./TargetProjects/tomee/container/openejb-api/src/main/java/org/apache/openejb/api/configuration/PersistenceUnitDefinition.java,30,,"    String provider() default ""auto"";"
247276,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/BeanContext.java,1253,,"                Method clientMethod = EJBHome.class.getDeclaredMethod(""remove"", Handle.class);"
247277,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/OpenEJB.java,90,,"            final Logger logger = Logger.getInstance(LogCategory.OPENEJB_STARTUP, ""org.apache.openejb.util.resources"");"
247278,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/OpenEjbContainer.java,630,,"            if (!first.startsWith(""java:"")) {"
247279,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/OpenEjbContainer.java,640,,"            if (""inject"".equals(name)) {"
247280,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/assembler/DeployerEjb.java,164,,"        if (""true"".equalsIgnoreCase(properties.getProperty(OPENEJB_USE_BINARIES, ""false""))) {"
247281,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/assembler/classic/Assembler.java,275,,"    private static final String GLOBAL_UNIQUE_ID = ""global"";"
247282,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/assembler/classic/Assembler.java,350,,"        skipLoaderIfPossible = ""true"".equalsIgnoreCase(SystemInstance.get().getProperty(""openejb.classloader.skip-app-loader-if-possible"", ""true""));"
247283,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/assembler/classic/Assembler.java,352,,"        threadStackOnTimeout = ""true"".equals(SystemInstance.get().getProperty(""openejb.resources.destroy.stack-on-timeout"", ""false""));"
247284,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/assembler/classic/Assembler.java,1185,,"                                            ""EJB "" + reference.getJndiName() + "" in "" + reference.getOwnerClass() + "" can't be cast to "" + reference.getResourceType());"
247285,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/assembler/classic/Assembler.java,1226,,"                                    ""Resource "" + reference.getJndiName() + "" in "" + reference.getOwnerClass() + "" can't be cast, instance is "" + lookup);"
247286,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/assembler/classic/Assembler.java,1753,,"                    .set(""name"", clazz.getSimpleName())"
247287,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/assembler/classic/Assembler.java,2123,,"                logger.info(""Stopping ResourceAdapter: "" + name);"
247288,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/assembler/classic/Assembler.java,2139,,"            removeResourceMBean(name, ""ResourceAdapter"");"
247289,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/assembler/classic/Assembler.java,2197,,"        jmxName.set(""J2EEServer"", ""openejb"");"
247290,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/assembler/classic/Assembler.java,2199,,"        jmxName.set(""j2eeType"", """");"
247291,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/assembler/classic/Assembler.java,2810,,"        logger.getChildLogger(""service"").info(""createService"", contextInfo.service, contextInfo.id, contextInfo.className);"
247292,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/assembler/classic/Assembler.java,2829,,"        logger.getChildLogger(""service"").debug(""createService.success"", contextInfo.service, contextInfo.id, contextInfo.className);"
247293,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/assembler/classic/Assembler.java,2837,,"        serviceRecipe.setProperty(""transactionManager"", props.get(TransactionManager.class.getName()));"
247294,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/assembler/classic/Assembler.java,2839,,"        serviceRecipe.setProperty(""properties"", new UnsetPropertiesRecipe());"
247295,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/assembler/classic/Assembler.java,3065,,"        if (""false"".equalsIgnoreCase(serviceInfo.properties.getProperty(""SkipImplicitAttributes"", ""false"")) && !properties) {"
247296,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/assembler/classic/Assembler.java,3121,,"            if (serviceInfo.properties.containsKey(""Definition"")) {"
247297,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/assembler/classic/EntityManagerFactoryCallable.java,95,,"            if (cdi && ""true"".equalsIgnoreCase(unitInfo.getProperties().getProperty(""tomee.jpa.cdi"", ""true""))"
247298,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/assembler/classic/JndiBuilder.java,426,,"                optionalBind(bindings, ref, ""openejb/Deployment/"" + format(id, beanClass.getName(), InterfaceType.LOCALBEAN));"
247299,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/assembler/classic/JndiBuilder.java,439,,"                bind(""openejb/local/"" + name, ref, bindings, beanInfo, beanClass);"
247300,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/assembler/classic/JndiBuilder.java,493,,"                bind(""openejb/remote/"" + name, ref, bindings, beanInfo, interfce);"
247301,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/assembler/classic/JndiEncBuilder.java,305,,"                    final String jndiName = ""openejb/Resource/"" + referenceInfo.resourceID;"
247302,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/assembler/classic/ValidatorBuilder.java,132,,"    @SuppressWarnings(""unchecked"")"
247303,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/assembler/classic/ValidatorBuilder.java,148,,"                logger.info(""Using "" + providerClassName + "" as validation provider."");"
247304,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/assembler/classic/ValidatorBuilder.java,199,,"                logger.warning(""Unable to set "" + messageInterpolatorClass + "" as message interpolator."", e);"
247305,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/assembler/classic/cmd/Info2Properties.java,161,,"        comment(out, cr, ""-------------------------------------------------"");"
247306,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/assembler/monitoring/JMXDeployer.java,45,,"            return ""ERR:"" + e.getMessage();"
247307,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/cdi/CdiScanner.java,92,,"        logDebug = ""true"".equals(SystemInstance.get().getProperty(""openejb.cdi.noclassdeffound.log"", ""false""));"
247308,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/cdi/ThreadSingletonServiceImpl.java,107,,"                    cachedApplicationScoped = ""true"".equalsIgnoreCase(SystemInstance.get().getProperty(""openejb.cdi.applicationScope.cached"", ""true"").trim());"
247309,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/ActivationConfigPropertyOverride.java,100,,"                    overrides.putAll(ConfigurationFactory.getOverrides(properties, ""mdb.container."" + mdbContainer.getContainerId() + "".activation"", ""EnterpriseBean""));"
247310,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/ActivationConfigPropertyOverride.java,100,,"                    overrides.putAll(ConfigurationFactory.getOverrides(properties, ""mdb.container."" + mdbContainer.getContainerId() + "".activation"", ""EnterpriseBean""));"
247311,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java,1140,,"                param.setParamValue(""true"");"
247312,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java,2208,,"            final String webXmlApplication = webApp.contextParamsAsMap().get(""javax.ws.rs.Application"");"
247313,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java,2699,,"                                    if (method.getName().startsWith(""create"")) {"
247314,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java,3241,,"                            interfaceNames.add(intrfce.getName() + "".class"");"
247315,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/AppInfoBuilder.java,835,,"                        logger.debug(""Adjusting PersistenceUnit(name="" + info.name + "") property to "" + key + ""="" + value);"
247316,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/AppInfoBuilder.java,835,,"                        logger.debug(""Adjusting PersistenceUnit(name="" + info.name + "") property to "" + key + ""="" + value);"
247317,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/AutoConfig.java,267,,"        if (ref.getMappedName() != null && ref.getMappedName().startsWith(""jndi:"")) {"
247318,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/AutoConfig.java,396,,"                    throw new OpenEJBException(""No ejb deployment found for ejb "" + bean.getEjbName());"
247319,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/AutoConfig.java,411,,"                    mdb.getActivationConfig().addProperty(""destination"", destination);"
247320,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/AutoConfig.java,441,,"                ResourceLink link = ejbDeployment.getResourceLink(""openejb/destination"");"
247321,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/AutoConfig.java,464,,"                                    ejbModule.getProperties().getProperty(""openejb.activemq.deploymentId-as-clientId"", ""true"")))"
247322,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/AutoConfig.java,465,,"                            && !properties.containsKey(""clientId"")) {"
247323,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/AutoConfig.java,468,,"                    if (!properties.containsKey(""subscriptionName"")) {"
247324,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/AutoConfig.java,1003,,"            if (shouldGenerateJdbcUrl && properties.get(""JdbcUrl"") == null) {"
247325,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/AutoConfig.java,1088,,"        if (jndi.startsWith(""java:"")) {"
247326,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/AutoConfig.java,1091,,"        if (jndi.startsWith(""comp/env/"")) {"
247327,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/AutoConfig.java,1167,,"        final String resourceAdapterId = containerInfo.properties.getProperty(""ResourceAdapter"");"
247328,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/AutoConfig.java,1409,,"                required.put(""JtaManaged"", ""true"");"
247329,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/AutoConfig.java,1410,,"                final List<String> managed = configFactory.getResourceIds(""DataSource"", required);"
247330,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/AutoConfig.java,1412,,"                required.put(""JtaManaged"", ""false"");"
247331,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/AutoConfig.java,2044,,"            ""' of type '"" +"
247332,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/AutoConfig.java,2046,,"            ""' for '"" +"
247333,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/ConfigurationDeployer.java,97,,"        if (!""auto"".equals(annotation.jtaDataSource())) {"
247334,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/ConfigurationFactory.java,871,,"            logger.warning(""configureApplication.loadFailed"", jarFile.getAbsolutePath(), e.getMessage()); // DO not include the stacktrace in the message"
247335,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/Deploy.java,269,,"            System.out.println(""    EjbJar(id="" + info.moduleName + "", path="" + info.path + "")"");"
247336,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java,104,,"    static final String META_INF = ""META-INF/"";"
247337,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java,115,,"    private static final Collection<String> KNOWN_DESCRIPTORS = Arrays.asList(""app-ctx.xml"", ""module.properties"", ""application.properties"", ""web.xml"", ""ejb-jar.xml"", ""openejb-jar.xml"", ""env-entries.properties"", ""beans.xml"", ""ra.xml"", ""application.xml"", ""application-client.xml"", ""persistence-fragment.xml"", ""persistence.xml"", ""validation.xml"", NewLoaderLogic.EXCLUSION_FILE);"
247338,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java,115,,"    private static final Collection<String> KNOWN_DESCRIPTORS = Arrays.asList(""app-ctx.xml"", ""module.properties"", ""application.properties"", ""web.xml"", ""ejb-jar.xml"", ""openejb-jar.xml"", ""env-entries.properties"", ""beans.xml"", ""ra.xml"", ""application.xml"", ""application-client.xml"", ""persistence-fragment.xml"", ""persistence.xml"", ""validation.xml"", NewLoaderLogic.EXCLUSION_FILE);"
247339,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java,115,,"    private static final Collection<String> KNOWN_DESCRIPTORS = Arrays.asList(""app-ctx.xml"", ""module.properties"", ""application.properties"", ""web.xml"", ""ejb-jar.xml"", ""openejb-jar.xml"", ""env-entries.properties"", ""beans.xml"", ""ra.xml"", ""application.xml"", ""application-client.xml"", ""persistence-fragment.xml"", ""persistence.xml"", ""validation.xml"", NewLoaderLogic.EXCLUSION_FILE);"
247340,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java,115,,"    private static final Collection<String> KNOWN_DESCRIPTORS = Arrays.asList(""app-ctx.xml"", ""module.properties"", ""application.properties"", ""web.xml"", ""ejb-jar.xml"", ""openejb-jar.xml"", ""env-entries.properties"", ""beans.xml"", ""ra.xml"", ""application.xml"", ""application-client.xml"", ""persistence-fragment.xml"", ""persistence.xml"", ""validation.xml"", NewLoaderLogic.EXCLUSION_FILE);"
247341,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java,115,,"    private static final Collection<String> KNOWN_DESCRIPTORS = Arrays.asList(""app-ctx.xml"", ""module.properties"", ""application.properties"", ""web.xml"", ""ejb-jar.xml"", ""openejb-jar.xml"", ""env-entries.properties"", ""beans.xml"", ""ra.xml"", ""application.xml"", ""application-client.xml"", ""persistence-fragment.xml"", ""persistence.xml"", ""validation.xml"", NewLoaderLogic.EXCLUSION_FILE);"
247342,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java,206,,"                    if (!""true"".equalsIgnoreCase(SystemInstance.get().getProperty(""openejb.connector."" + id + "".skip-default"", ""false""))) {"
247343,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java,307,,"                if (file.getName().endsWith("".rar"")) {"
247344,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java,322,,"                if (file.getName().endsWith("".jar"")) {"
247345,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java,354,,"    @SuppressWarnings(""unchecked"")"
247346,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java,579,,"                    LOGGER.error(""Unable to load EJBs from EAR: "" + appId + "", module: "" + stringURLEntry.getKey() + "". Exception: "" + e.getMessage(), e);"
247347,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java,579,,"                    LOGGER.error(""Unable to load EJBs from EAR: "" + appId + "", module: "" + stringURLEntry.getKey() + "". Exception: "" + e.getMessage(), e);"
247348,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java,771,,"        if (clientXmlUrl != null && ""file"".equals(clientXmlUrl.getProtocol())) {"
247349,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java,970,,"        final String externalRepos = systemInstance.getProperty(""tomee."" + warFile.getName().replace("".war"", """") + "".externalRepositories"");"
247350,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java,999,,"                            LOGGER.warning(""War path bad: "" + f.getAbsolutePath(), e);"
247351,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java,1022,,"        final ClassLoaderConfigurer configurer = QuickJarsTxtParser.parse(new File(warFile, ""WEB-INF/"" + QuickJarsTxtParser.FILE_NAME));"
247352,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java,1278,,"        final File webInfDir = new File(warFile, ""WEB-INF"");"
247353,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentsResolver.java,231,,"                        CLASSPATH_EXCLUDE + ""='"" + searchResult.exclude + ""', "" +"
247354,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentsResolver.java,288,,"                logger.debug(""Searched "" + urlSize + "" classpath urls in "" + time + "" milliseconds.  Average "" + time / urlSize + "" milliseconds per url."");"
247355,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentsResolver.java,288,,"                logger.debug(""Searched "" + urlSize + "" classpath urls in "" + time + "" milliseconds.  Average "" + time / urlSize + "" milliseconds per url."");"
247356,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentsResolver.java,288,,"                logger.debug(""Searched "" + urlSize + "" classpath urls in "" + time + "" milliseconds.  Average "" + time / urlSize + "" milliseconds per url."");"
247357,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/NewLoaderLogic.java,526,,"                logger.debug(""Searched "" + urls.size() + "" classpath urls in "" + time + "" milliseconds.  Average "" + time / urls.size() + "" milliseconds per url."");"
247358,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/NewLoaderLogic.java,526,,"                logger.debug(""Searched "" + urls.size() + "" classpath urls in "" + time + "" milliseconds.  Average "" + time / urls.size() + "" milliseconds per url."");"
247359,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/NewLoaderLogic.java,526,,"                logger.debug(""Searched "" + urls.size() + "" classpath urls in "" + time + "" milliseconds.  Average "" + time / urls.size() + "" milliseconds per url."");"
247360,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/OpenEJBDeploymentManager.java,135,,"            throw new IllegalStateException(""Deployment manager is disconnected"");"
247361,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/OutputGeneratedDescriptors.java,94,,"            final File tempFile = tempFile(""ra-"", connectorModule.getModuleId() + "".xml"");"
247362,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/ReadDescriptors.java,187,,"                    DeploymentLoader.LOGGER.error(""Unable to load Persistence Unit from EAR: "" + appModule.getJarLocation() + "", module: "" + moduleName + "". Exception: "" + e1.getMessage(), e1);"
247363,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/RemoteServer.java,257,,"                    argsList.addAll(parse(javaOpts.replace(""${openejb.base}"", home.getAbsolutePath())));"
247364,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/SystemAppInfo.java,62,,"        deployer.concurrencyType = ""CONTAINER"";"
247365,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/TldScanner.java,205,,"                    return name.endsWith("".tld"");"
247366,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/VmDeploymentManager.java,142,,"            throw new IllegalStateException(""Deployment manager is disconnected"");"
247367,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/rules/CheckCallbacks.java,93,,"                        checkCallback(ejbClass, ""PrePassivate"", callback, bean);"
247368,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/rules/CheckCallbacks.java,97,,"                        checkCallback(ejbClass, ""PostActivate"", callback, bean);"
247369,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/rules/CheckCallbacks.java,103,,"                        checkCallback(ejbClass, ""AfterBegin"", callback, bean);"
247370,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/rules/CheckCallbacks.java,107,,"                        checkCallback(ejbClass, ""BeforeCompletion"", callback, bean);"
247371,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/rules/CheckCallbacks.java,111,,"                        checkCallback(ejbClass, ""AfterCompletion"", callback, bean, boolean.class);"
247372,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/rules/CheckCallbacks.java,210,,"                checkAroundInvoke(interceptorClass, aroundInvoke, ""Interceptor"");"
247373,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/rules/CheckCallbacks.java,313,,"                        fail(bean.getEjbName(), ""callback.sessionbean.invalidusage"", type, callback.getMethodName(), ejbClass);"
247374,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/rules/CheckClasses.java,341,,"            fail(b, ""xml."" + tag + "".beanClass"", clazz.getName());"
247375,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/sys/SaxAppCtxConfig.java,97,,"                    throw new IllegalStateException(""Unsupported Element: "" + localName);"
247376,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/sys/StackHandler.java,190,,"            if (attributes.getValue(""properties-provider"") != null) {"
247377,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/typed/util/ProviderGenerator.java,104,,"                        ""builder"", builder,"
247378,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/typed/util/ProviderGenerator.java,127,,"                        ""key"", key,"
247379,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/typed/util/ProviderGenerator.java,128,,"                        ""value"", asValue(type, value),"
247380,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/typed/util/ProviderGenerator.java,129,,"                        ""type"", type"
247381,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/typed/util/ProviderGenerator.java,170,,"            out.println(""    }\n"");"
247382,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/config/typed/util/ProviderGenerator.java,198,,"                            ""Key"", ucFirstKey,"
247383,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/core/NoSuchObjectException.java,105,,"            err.println(""\tat "" + stackTraceElement);"
247384,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/core/SimpleTransactionSynchronizationRegistry.java,63,,"                throw new IllegalStateException(""No transaction active"", e);"
247385,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/core/cmp/CmpContainer.java,307,,"            throw new NullPointerException(""entityBean is null"");"
247386,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/core/cmp/cmp2/Cmp2Generator.java,295,,"        final MethodVisitor mv = cw.visitMethod(ACC_PUBLIC, ""<init>"", ""()V"", null, null);"
247387,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/core/cmp/cmp2/Cmp2Generator.java,295,,"        final MethodVisitor mv = cw.visitMethod(ACC_PUBLIC, ""<init>"", ""()V"", null, null);"
247388,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/core/cmp/cmp2/Cmp2Generator.java,377,,"        mv.visitTypeInsn(NEW, ""java/lang/IllegalArgumentException"");"
247389,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/core/cmp/cmp2/Cmp2Generator.java,379,,"        mv.visitTypeInsn(NEW, ""java/lang/StringBuilder"");"
247390,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/core/cmp/cmp2/Cmp2Generator.java,383,,"        mv.visitMethodInsn(INVOKEVIRTUAL, ""java/lang/StringBuilder"", ""append"", ""(Ljava/lang/String;)Ljava/lang/StringBuilder;"", false);"
247391,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/core/cmp/cmp2/Cmp2Generator.java,383,,"        mv.visitMethodInsn(INVOKEVIRTUAL, ""java/lang/StringBuilder"", ""append"", ""(Ljava/lang/String;)Ljava/lang/StringBuilder;"", false);"
247392,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/core/cmp/cmp2/Cmp2Generator.java,390,,"        mv.visitMethodInsn(INVOKEVIRTUAL, ""java/lang/Class"", ""getName"", ""()Ljava/lang/String;"", false);"
247393,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/core/cmp/cmp2/Cmp2Generator.java,662,,"            cmrField.getName() + ""Cmr"","
247394,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/core/cmp/cmp2/Cmp2Generator.java,846,,"        mv.visitMethodInsn(INVOKEVIRTUAL, ""java/lang/String"", ""equals"", ""(Ljava/lang/Object;)Z"", false);"
247395,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/core/cmp/cmp2/EjbSelect.java,100,,"            throw new FinderException(""Deployment is not connected to a CmpContainer "" + beanContext.getDeploymentID());"
247396,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/core/ivm/naming/NameNode.java,437,,"            "", lessTree="" + (lessTree != null ? lessTree.atomicName : ""null"") +"
247397,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/core/managed/ManagedContainer.java,147,,"                final Method method = legacyRemote.getMethod(""remove"");"
247398,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/core/managed/ManagedContainer.java,167,,"                if (method.getName().startsWith(""create"")) {"
247399,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/core/mdb/MdbContainer.java,195,,"            jmxName.set(""j2eeType"", """");"
247400,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/core/mdb/MdbInstanceManager.java,221,,"        jmxName.set(""j2eeType"", """");"
247401,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/core/security/jacc/BasicPolicyConfiguration.java,88,,"            throw new UnsupportedOperationException(""Not in an open state"");"
247402,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/core/stateful/StatefulContainer.java,169,,"                final Method method = legacyRemote.getMethod(""remove"");"
247403,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/core/stateful/StatefulContainer.java,189,,"                if (method.getName().startsWith(""create"")) {"
247404,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/core/timer/EjbTimerServiceImpl.java,172,,"                final boolean useTccl = ""true"".equalsIgnoreCase(properties.getProperty(OPENEJB_QUARTZ_USE_TCCL, ""false""));"
247405,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/core/timer/NullEjbTimerServiceImpl.java,46,,"        log.error(""Null ! TimerService operation not supported for a bean without an ejbTimeout method  or auto-started task"");"
247406,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/core/transaction/SimpleWorkManager.java,56,,"            throw new NullPointerException(""work is null"");"
247407,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/core/transaction/TransactionRolledbackException.java,116,,"            err.println(""\tat "" + stackTraceElement);"
247408,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/core/webservices/JaxWsUtils.java,163,,"        throw new IllegalArgumentException(""The "" + clazz.getName() + "" is not annotated"");"
247409,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/core/webservices/JaxWsUtils.java,163,,"        throw new IllegalArgumentException(""The "" + clazz.getName() + "" is not annotated"");"
247410,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/core/webservices/ProviderWrapper.java,170,,"    @SuppressWarnings({""unchecked""})"
247411,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/core/webservices/ProviderWrapper.java,551,,"            method = Provider.class.getMethod(""getPort"","
247412,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/core/webservices/ProviderWrapper.java,571,,"            method = ServiceDelegate.class.getMethod(""createDispatch"","
247413,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/core/webservices/UriResolver.java,67,,"        if (uriStr.startsWith(""classpath:"")) {"
247414,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/core/webservices/UriResolver.java,69,,"        } else if (baseUriStr != null && baseUriStr.startsWith(""jar:"")) {"
247415,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/dyni/DynamicSubclass.java,98,,"            final Field thisHandler = instance.getClass().getDeclaredField(""this$handler"");"
247416,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/math/util/MathUtils.java,1537,,"                ""cannot raise an integral value to a negative power ({0}^{1})"","
247417,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/monitoring/ManagedMBean.java,87,,"            excludeInfo = new MBeanParameterInfo(""excludeRegex"", ""java.lang.String"", ""\"""" + excludes.pattern() + ""\"""");"
247418,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/persistence/PersistenceBootstrap.java,117,,"        debug = args.getProperty(""debug"", ""false"").equalsIgnoreCase(""true"");"
247419,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/persistence/PersistenceBootstrap.java,117,,"        debug = args.getProperty(""debug"", ""false"").equalsIgnoreCase(""true"");"
247420,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/resource/activemq/ActiveMQ5Factory.java,78,,"        Logger.getInstance(LogCategory.OPENEJB_STARTUP, ActiveMQ5Factory.class).getChildLogger(""service"").info(""ActiveMQ5Factory creating broker"");"
247421,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/resource/activemq/ActiveMQ5Factory.java,89,,"            if (""true"".equals(params.remove(""usekahadb""))) {"
247422,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/resource/activemq/ActiveMQResourceAdapter.java,180,,"            Logger.getInstance(LogCategory.OPENEJB_STARTUP, ActiveMQResourceAdapter.class).getChildLogger(""service"").fatal(""Failed to start ActiveMQ"", e);"
247423,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/resource/activemq/jms2/TomEERAConnectionFactory.java,60,,"                throw new IllegalStateException(""transactionSupportLevel mode not supported:"" + transactionSupportLevel);"
247424,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/resource/jdbc/DataSourceFactory.java,109,,"            ""true"".equalsIgnoreCase((String) properties.remove(FLUSHABLE_PROPERTY)));"
247425,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/resource/jdbc/DataSourceFactory.java,128,,"        final String jdbcUrl = properties.getProperty(""JdbcUrl"");"
247426,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/resource/jdbc/SimpleDataSourceCreator.java,47,,"        throw new UnsupportedOperationException(""pooling not supported"");"
247427,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/resource/jdbc/dbcp/JMXBasicDataSource.java,116,,"        + "" being created when the evictor runs, or 0 to create none."")"
247428,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/resource/jdbc/managed/local/LocalXAResource.java,73,,"                throw new XAException(""Attempting to resume in different transaction: expected "" + currentXid + "", but was "" + xid);"
247429,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/resource/quartz/QuartzResourceAdapter.java,63,,"            Logger.getInstance(LogCategory.OPENEJB, ""org.apache.openejb.util.resources"").warning(""QuartzResourceAdapter is already starting"");"
247430,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/ri/sp/PseudoTransactionService.java,74,,"            throw new IllegalStateException(""No transaction active"");"
247431,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/testing/ApplicationComposers.java,407,,"            ejbModule.getProperties().setProperty(""openejb.cdi.activated"", ""false"");"
247432,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/testing/ApplicationComposers.java,811,,"        return ""true"".equalsIgnoreCase(SystemInstance.get().getProperty(""openejb.testing.start-cdi-contexts"", ""true""));"
247433,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/util/AnnotationFinder.java,218,,"                } else if (file.getName().endsWith("".class"")) {"
247434,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/util/IntrospectionSupport.java,46,,"            throw new IllegalArgumentException(""props was null."");"
247435,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/util/URISupport.java,178,,"                        final String name = URLDecoder.decode(parameter.substring(0, p), ""UTF-8"");"
247436,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/util/UpdateChecker.java,69,,"                originalProxyUser = JavaSecurityManagers.getSystemProperty(proxyProtocol + "".proxyUser"");"
247437,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/util/classloader/URLClassLoaderFirst.java,37,,"    private static final boolean SKIP_LOG4J = ""true"".equals(SystemInstance.get().getProperty(""openejb.skip.log4j"", ""true"")) && skipLib(""org.apache.log4j.Logger"");"
247438,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/util/proxy/LocalBeanProxyFactory.java,501,,"        throw new IllegalStateException(""Type: "" + type.getCanonicalName() + "" is not a primitive type"");"
247439,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/util/proxy/LocalBeanProxyFactory.java,501,,"        throw new IllegalStateException(""Type: "" + type.getCanonicalName() + "" is not a primitive type"");"
247440,./TargetProjects/tomee/container/openejb-core/src/main/java/org/apache/openejb/web/LightweightWebAppBuilder.java,295,,"                if (""true"".equalsIgnoreCase(appInfo.properties.getProperty(""openejb.jaxrs.on"", ""true""))) {"
247441,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/DependenceValidationTest.java,60,,"        assertNotDependentOn(""org.apache.tomee"", ""org.apache.openejb.assembler.classic"", ""org.apache.openejb.config.typed.util"", ""org.apache.openejb.assembler"", ""org.apache.openejb.assembler.classic.util"", ""org.apache.openejb.config"", ""org.apache.openejb.assembler.dynamic"", ""org.apache.openejb.assembler.classic.cmd"", ""org.apache.openejb.assembler.monitoring"", ""org.apache.openejb.cdi"", ""org.apache.openejb.junit"", ""org.apache.openejb.assembler.classic.event"", ""org.apache.openejb.web"", ""org.apache.openejb.testng"", ""org.apache.openejb.testing"");"
247442,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/DependenceValidationTest.java,60,,"        assertNotDependentOn(""org.apache.tomee"", ""org.apache.openejb.assembler.classic"", ""org.apache.openejb.config.typed.util"", ""org.apache.openejb.assembler"", ""org.apache.openejb.assembler.classic.util"", ""org.apache.openejb.config"", ""org.apache.openejb.assembler.dynamic"", ""org.apache.openejb.assembler.classic.cmd"", ""org.apache.openejb.assembler.monitoring"", ""org.apache.openejb.cdi"", ""org.apache.openejb.junit"", ""org.apache.openejb.assembler.classic.event"", ""org.apache.openejb.web"", ""org.apache.openejb.testng"", ""org.apache.openejb.testing"");"
247443,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/DeploymentContextOptionsTest.java,78,,"                deployment.getProperties().put(""color"", ""orange"");"
247444,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/DeploymentContextOptionsTest.java,78,,"                deployment.getProperties().put(""color"", ""orange"");"
247445,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/DeploymentContextOptionsTest.java,86,,"        final BeanContext beanContext = containerSystem.getBeanContext(""WidgetBean"");"
247446,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/DeploymentContextPropertiesTest.java,72,,"            deployment.getProperties().put(""color"", ""orange"");"
247447,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/DeploymentContextPropertiesTest.java,72,,"            deployment.getProperties().put(""color"", ""orange"");"
247448,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/activemq/ConnectionFactoryTxTest.java,51,,"        runTest(""none"", TransAttribute.MANDATORY, false);"
247449,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/activemq/ConnectionFactoryTxTest.java,123,,"        runTest(""local"", TransAttribute.MANDATORY, false);"
247450,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/activemq/JMS2AMQTest.java,92,,"                .p(""target"", ""new://Resource?type=Queue"")"
247451,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/activemq/MDBSpecTest.java,75,,"    @Resource(name = ""jms/input"")"
247452,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/assembler/DeployerEjbTest.java,71,,"        final File conf = base.getDirectory(""conf"", false);"
247453,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/assembler/classic/AccessTimeoutTest.java,75,,"        assertAttribute(2, TimeUnit.SECONDS, Color.class.getMethod(""color""));"
247454,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/assembler/classic/AccessTimeoutTest.java,89,,"        assertAttribute(1, TimeUnit.MINUTES, Red.class.getMethod(""red""));"
247455,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/assembler/classic/ConcurrentLockTypeTest.java,77,,"        declared.add(new ContainerConcurrency(ConcurrentLockType.READ, Color.class.getName(), ""Scarlet"", ""*""));"
247456,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/assembler/classic/ConcurrentLockTypeTest.java,78,,"        declared.add(new ContainerConcurrency(ConcurrentLockType.READ, Red.class.getName(), ""Scarlet"", ""red""));"
247457,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/assembler/classic/ConcurrentLockTypeTest.java,86,,"        assertAttribute(""Read"", Color.class.getMethod(""color""));"
247458,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/assembler/classic/ConcurrentLockTypeTest.java,86,,"        assertAttribute(""Read"", Color.class.getMethod(""color""));"
247459,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/assembler/classic/ConcurrentLockTypeTest.java,87,,"        assertAttribute(""Write"", Color.class.getMethod(""color"", Object.class));"
247460,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/assembler/classic/ConcurrentMethodTest.java,75,,"        assertAccessTimeoutAttribute(1, TimeUnit.SECONDS, Color.class.getMethod(""color"", Object.class));"
247461,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/assembler/classic/DataSourceDefinitionTest.java,63,,"        className = ""org.hsqldb.jdbc.JDBCDataSource"","
247462,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/assembler/classic/DescriptorDataSourceDefinitionTest.java,56,,"                .className(""org.hsqldb.jdbc.JDBCDataSource"")"
247463,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/assembler/classic/InterceptorBindingInfoComparatorTest.java,44,,"        info.ejbName = ""BeanOne"";"
247464,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/assembler/classic/MethodTransactionInfoComparatorTest.java,39,,"        info.transAttribute = ""Required"";"
247465,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/assembler/classic/ResourceInfoComparatorTest.java,44,,"        resources.get(1).properties.put(""foo"", ""Green"");"
247466,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/assembler/classic/ResourceInfoComparatorTest.java,75,,"        resources.get(0).id = ""My DataSource"";"
247467,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/assembler/classic/ResourceInfoComparatorTest.java,79,,"        resources.get(1).id = ""My Unmanaged DataSource"";"
247468,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/assembler/classic/ResourceInfoComparatorTest.java,83,,"        resources.get(2).id = ""My JMS Resource Adapter"";"
247469,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/assembler/classic/ResourceInfoComparatorTest.java,88,,"        resources.get(3).id = ""My JMS Connection Factory"";"
247470,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/assembler/classic/ResourceInfoComparatorTest.java,90,,"        resources.get(3).properties.put(""ResourceAdapter"", ""My JMS Resource Adapter"");"
247471,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/assembler/classic/ResourcePropertyLeakTest.java,56,,"        Assert.assertTrue(r1.properties.containsKey(""prop1""));"
247472,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/assembler/classic/ResourcePropertyLeakTest.java,57,,"        Assert.assertTrue(r1.properties.containsKey(""prop2""));"
247473,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/assembler/classic/ResourcePropertyLeakTest.java,61,,"        Assert.assertEquals(""value1"", r1.properties.get(""prop1""));"
247474,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/assembler/classic/ResourcePropertyLeakTest.java,62,,"        Assert.assertEquals(""value2"", r1.properties.get(""prop2""));"
247475,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/assembler/classic/TransactionAttributesTest.java,86,,"        declared.add(new ContainerTransaction(TransAttribute.SUPPORTS, Color.class.getName(), ""Scarlet"", ""*""));"
247476,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/assembler/classic/TransactionAttributesTest.java,87,,"        declared.add(new ContainerTransaction(TransAttribute.NEVER, Red.class.getName(), ""Scarlet"", ""red""));"
247477,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/assembler/classic/TransactionAttributesTest.java,97,,"        assertAttribute(""Never"", Color.class.getMethod(""color""));"
247478,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/assembler/classic/TransactionAttributesTest.java,97,,"        assertAttribute(""Never"", Color.class.getMethod(""color""));"
247479,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/assembler/classic/TransactionAttributesTest.java,98,,"        assertAttribute(""RequiresNew"", Color.class.getMethod(""color"", Object.class));"
247480,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/assembler/classic/TransactionAttributesTest.java,99,,"        assertAttribute(""Mandatory"", Color.class.getMethod(""color"", String.class));"
247481,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/assembler/classic/TransactionAttributesTest.java,106,,"        assertAttribute(""Required"", Red.class.getMethod(""color"", Object.class));"
247482,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/assembler/classic/TransactionAttributesTest.java,116,,"        assertAttribute(""Supports"", Crimson.class.getMethod(""color""));"
247483,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/assembler/classic/event/ResourceEventsTest.java,44,,"        @ContainerProperties.Property(name = ""base"", value = ""new://Resource?class-name=org.apache.openejb.assembler.classic.event.ResourceEventsTest$Base""),"
247484,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/assembler/classic/event/ResourceEventsTest.java,45,,"        @ContainerProperties.Property(name = ""base2"", value = ""new://Resource?class-name=org.apache.openejb.assembler.classic.event.ResourceEventsTest$Base""),"
247485,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/cdi/ApplicationScopedTest.java,108,,"        instance.setMessage(prefix + "": hello again application"");"
247486,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ActivationConfigPropertyOverrideTest.java,66,,"        properties.put(""ENTERPRISEBEAN.mdb.activation.destinationType"", ""something"");"
247487,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ActivationConfigPropertyOverrideTest.java,68,,"        assertNotNull(properties2.getProperty(""destinationType""));"
247488,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ActivationConfigPropertyOverrideTest.java,80,,"        System.setProperty(""ENTERPRISEBEAN.mdb.activation.destinationType"", ""testString"");"
247489,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ActivationConfigPropertyOverrideTest.java,159,,"        assertEquals(""7"", orange.activationProperties.get(""maxSessions""));"
247490,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ActivationConfigPropertyOverrideTest.java,160,,"        assertEquals(""4"", orange.activationProperties.get(""maxMessagesPerSessions""));"
247491,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ActivationConfigPropertyOverrideTest.java,161,,"        assertEquals(""javax.jms.Queue"", orange.activationProperties.get(""destinationType""));"
247492,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ActivationConfigPropertyOverrideTest.java,162,,"        assertEquals(""ORANGE.QUEUE"", orange.activationProperties.get(""destination""));"
247493,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ActivationConfigPropertyOverrideTest.java,162,,"        assertEquals(""ORANGE.QUEUE"", orange.activationProperties.get(""destination""));"
247494,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ActivationConfigPropertyOverrideTest.java,166,,"        assertEquals(""javax.jms.Topic"", yellow.activationProperties.get(""destinationType""));"
247495,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ActivationConfigPropertyOverrideTest.java,167,,"        assertEquals(""YELLOW.TOPIC"", yellow.activationProperties.get(""destination""));"
247496,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ActivationConfigPropertyOverrideTest.java,176,,"        properties.setProperty(""mdb.activation.maxMessagesPerSessions"", ""100"");"
247497,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ActivationConfigPropertyOverrideTest.java,178,,"        properties.setProperty(""mdb.activation.destination"", ""OVERRIDDEN.QUEUE"");"
247498,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AltDDPrefixTest.java,47,,"        SystemInstance.get().setProperty(""openejb.altdd.prefix"", ""test"");"
247499,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AnnotationDeployerTest.java,242,,"        Assert.assertEquals(""description"", connector.getDescription());"
247500,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AppInfoBuilderTest.java,44,,"        sessionBean.setEjbName(""MySessionBean"");"
247501,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AppInfoBuilderTest.java,58,,"        ejbDeployment.addProperty(""wss4j.in.action"", ""Timestamp"");"
247502,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AppInfoBuilderTest.java,58,,"        ejbDeployment.addProperty(""wss4j.in.action"", ""Timestamp"");"
247503,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AppInfoBuilderTest.java,59,,"        ejbDeployment.addProperty(""wss4j.out.action"", ""Timestamp"");"
247504,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ApplicationPropertiesTest.java,66,,"            map.put(""META-INF/application.properties"", ""color=orange"");"
247505,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ApplicationPropertiesTest.java,98,,"            moduleFiles.put(""META-INF/ejb-jar.xml"", ""<ejb-jar id=\""fooModule\""/>"");"
247506,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ApplicationPropertiesTest.java,98,,"            moduleFiles.put(""META-INF/ejb-jar.xml"", ""<ejb-jar id=\""fooModule\""/>"");"
247507,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ApplicationPropertiesTest.java,135,,"            SystemInstance.get().getProperties().put(""fooApp.color"", ""orange"");"
247508,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ApplicationPropertiesTest.java,135,,"            SystemInstance.get().getProperties().put(""fooApp.color"", ""orange"");"
247509,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ApplicationPropertiesTest.java,141,,"            final AppModule appModule = config.loadApplication(this.getClass().getClassLoader(), ""fooApp"", Arrays.asList(module));"
247510,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ApplicationPropertiesTest.java,254,,"            assertProperty(appContext.getProperties(), ""color"", ""orange"");"
247511,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ApplicationWideTest.java,59,,"            final org.apache.openejb.Container appContainer = containerSystem.getContainer(ejbModule.getModuleId() + ""/My Container"");"
247512,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigPersistenceUnitsTest.java,63,,"        System.setProperty(LocalMBeanServer.OPENEJB_JMX_ACTIVE, ""false"");"
247513,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigPersistenceUnitsTest.java,100,,"        final ResourceInfo jta = addDataSource(""Orange"", OrangeDriver.class, ""jdbc:orange:some:stuff"", true);"
247514,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigPersistenceUnitsTest.java,100,,"        final ResourceInfo jta = addDataSource(""Orange"", OrangeDriver.class, ""jdbc:orange:some:stuff"", true);"
247515,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigPersistenceUnitsTest.java,101,,"        final ResourceInfo nonJta = addDataSource(""OrangeUnmanaged"", OrangeDriver.class, ""jdbc:orange:some:stuff"", false);"
247516,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigPersistenceUnitsTest.java,106,,"        final PersistenceUnitInfo unitInfo = addPersistenceUnit(""orange-unit"", ""orange"", ""orangeUnmanaged"");"
247517,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigPersistenceUnitsTest.java,106,,"        final PersistenceUnitInfo unitInfo = addPersistenceUnit(""orange-unit"", ""orange"", ""orangeUnmanaged"");"
247518,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigPersistenceUnitsTest.java,139,,"        final ResourceInfo limeJta = addDataSource(""Lime"", LimeDriver.class, ""jdbc:lime:some:stuff"", true);"
247519,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigPersistenceUnitsTest.java,139,,"        final ResourceInfo limeJta = addDataSource(""Lime"", LimeDriver.class, ""jdbc:lime:some:stuff"", true);"
247520,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigPersistenceUnitsTest.java,156,,"        app.addPersistenceModule(new PersistenceModule(""root"", new Persistence(unit1, unit2)));"
247521,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigPersistenceUnitsTest.java,222,,"        assertEquals(supplied.id + ""NonJta"", generated.id);"
247522,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigPersistenceUnitsTest.java,225,,"        assertEquals(supplied.properties.get(""JdbcDriver""), generated.properties.get(""JdbcDriver""));"
247523,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigPersistenceUnitsTest.java,226,,"        assertEquals(supplied.properties.get(""JdbcUrl""), generated.properties.get(""JdbcUrl""));"
247524,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigPersistenceUnitsTest.java,227,,"        assertEquals(""false"", generated.properties.get(""JtaManaged""));"
247525,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigPersistenceUnitsTest.java,287,,"        assertEquals(supplied.id + ""Jta"", generated.id);"
247526,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigPersistenceUnitsTest.java,292,,"        assertEquals(""true"", generated.properties.get(""JtaManaged""));"
247527,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigPersistenceUnitsTest.java,310,,"        final ResourceInfo supplied = addDataSource(""orange-id"", OrangeDriver.class, ""jdbc:orange-web:some:stuff"", null);"
247528,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigPersistenceUnitsTest.java,310,,"        final ResourceInfo supplied = addDataSource(""orange-id"", OrangeDriver.class, ""jdbc:orange-web:some:stuff"", null);"
247529,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigPersistenceUnitsTest.java,316,,"        final AppModule app = new AppModule(cl, ""orange-app"");"
247530,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigPersistenceUnitsTest.java,320,,"        app.getWebModules().add(new WebModule(webApp, ""orange-web"", cl, null, ""orange-id""));"
247531,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigPersistenceUnitsTest.java,357,,"        app.getWebModules().add(new WebModule(webApp, ""orange-web"", cl, ""war"", ""orange-id""));"
247532,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigPersistenceUnitsTest.java,846,,"        final ResourceInfo jta = addDataSource(""OrangeOne"", OrangeDriver.class, ""jdbc:orange:some:stuff"", true);"
247533,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigPersistenceUnitsTest.java,847,,"        final ResourceInfo nonJta = addDataSource(""OrangeTwo"", OrangeDriver.class, ""jdbc:orange:some:stuff"", false);"
247534,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigPersistenceUnitsTest.java,852,,"        final PersistenceUnitInfo unitInfo = addPersistenceUnit(""orange-unit"", ""orangeOne"", ""orangeOne"");"
247535,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigPersistenceUnitsTest.java,890,,"        final PersistenceUnitInfo unitInfo = addPersistenceUnit(""orange-unit"", ""orangeTwo"", ""orangeTwo"");"
247536,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigPersistenceUnitsTest.java,989,,"            fail(""Configuration should be rejected"");"
247537,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigResourceRefsTest.java,52,,"        assembler.createResource(config.configureService(new org.apache.openejb.config.sys.Resource(""defaultDataSource"", ""DataSource"", null), ResourceInfo.class));"
247538,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigResourceRefsTest.java,53,,"        assembler.createResource(config.configureService(new org.apache.openejb.config.sys.Resource(""yellowDataSource"", ""DataSource"", null), ResourceInfo.class));"
247539,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigTest.java,32,,"            ""jdbc/appmgr-jta"","
247540,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigTest.java,34,,"            ""jdbc/erp_global-jta"","
247541,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigTest.java,36,,"            ""jdbc/catalog-jta"","
247542,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigTest.java,38,,"            ""jdbc/erp-jta"","
247543,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigTest.java,40,,"            ""jdbc/ghi-jta"","
247544,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigTest.java,42,,"            ""jdbc/usr-jta"","
247545,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigTest.java,44,,"            ""jdbc/email-jta"","
247546,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigTest.java,46,,"            ""jdbc/webcode-jta"","
247547,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigTest.java,48,,"            ""jdbc/webcode-download-jta"","
247548,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigTest.java,50,,"            ""jdbc/countrydata-jta"","
247549,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigTest.java,52,,"            ""jdbc/clipsafe-jta"","
247550,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigTest.java,54,,"            ""jdbc/hazmat-jta"","
247551,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigTest.java,56,,"            ""jdbc/waab-refapp-jta"","
247552,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoConfigTest.java,430,,"            appModule.getResources().add(new Resource(s, ""DataSource""));"
247553,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoDeployerTest.java,98,,"        final File apps = Files.mkdir(tmpdir, ""myapps"");"
247554,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoDeployerTest.java,99,,"        final File conf = Files.mkdir(tmpdir, ""conf"");"
247555,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoDeployerTest.java,104,,"        properties.setProperty(""openejb.deployments.classpath"", ""false"");"
247556,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoDeployerTest.java,104,,"        properties.setProperty(""openejb.deployments.classpath"", ""false"");"
247557,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoDeployerTest.java,106,,"        properties.setProperty(""openejb.home"", tmpdir.getAbsolutePath());"
247558,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoDeployerTest.java,107,,"        properties.setProperty(""openejb.base"", tmpdir.getAbsolutePath());"
247559,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoDeployerTest.java,113,,"            final File config = new File(conf, ""openejb.xml"");"
247560,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoDeployerTest.java,115,,"            SystemInstance.get().setProperty(""openejb.configuration"", config.getAbsolutePath());"
247561,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/AutoDeployerTest.java,137,,"        final File deployed = Files.path(apps, ""colors.ear"");"
247562,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/BeanPropertiesTest.java,65,,"            map.put(""META-INF/openejb-jar.xml"","
247563,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/BeanPropertiesTest.java,66,,"                ""<openejb-jar>\n"" +"
247564,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/BeanPropertiesTest.java,67,,"                    ""  <ejb-deployment ejb-name=\""WidgetBean\"">\n"" +"
247565,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/BeanPropertiesTest.java,68,,"                    ""    <properties>\n"" +"
247566,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/BeanPropertiesTest.java,70,,"                    ""    </properties>\n"" +"
247567,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/BeanPropertiesTest.java,71,,"                    ""  </ejb-deployment>\n"" +"
247568,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/BeanPropertiesTest.java,72,,"                    ""</openejb-jar>"");"
247569,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/BeanPropertiesTest.java,94,,"            SystemInstance.get().getProperties().put(""WidgetBean.color"", ""orange"");"
247570,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/BeanPropertiesTest.java,124,,"                    ""      color=white\n"" +"
247571,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/BeanPropertiesTest.java,242,,"            assertProperty(beanContext.getProperties(), ""color"", ""orange"");"
247572,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ConfigurationFactoryTest.java,62,,"        SystemInstance.get().setProperty(""openejb.environment.default"", ""false"");"
247573,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ConfigureServiceTest.java,61,,"        final Container container = new Container(""MyContainer"", ""STATELESS"", ""org.acme#CheddarContainer"");"
247574,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ConfigureServiceTest.java,61,,"        final Container container = new Container(""MyContainer"", ""STATELESS"", ""org.acme#CheddarContainer"");"
247575,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ConfigureServiceTest.java,66,,"        assertEquals(""org.acme.SuperContainer"", myStatelessContainer.className);"
247576,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ConfigureServiceTest.java,69,,"        assertNotNull(myStatelessContainer.properties.getProperty(""myProperty""));"
247577,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ConfigureServiceTest.java,70,,"        assertEquals(""Yummy Cheese"", myStatelessContainer.properties.getProperty(""myProperty""));"
247578,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ConfigureServiceTest.java,77,,"        container.getProperties().setProperty(""myProperty"", ""Cheese is good"");"
247579,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ConfigureServiceTest.java,94,,"        container.getProperties().setProperty(""anotherProperty"", ""Cheese is good"");"
247580,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/DeploymentLoaderTest.java,45,,"        original.put(""footest.ejb-jar.xml"", new File(""META-INF/footest.ejb-jar.xml"").toURI().toURL());"
247581,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/DeploymentLoaderTest.java,48,,"        original.put(""test.env-entry.properties"", new File(""META-INF/test.env-entry.properties"").toURI().toURL());"
247582,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/DeploymentsElementTest.java,68,,"        final File apps = server.deploymentsDir(""myapps"");"
247583,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/DeploymentsElementTest.java,72,,"        final File ear = new File(apps, appName + "".ear"");"
247584,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/DeploymentsElementTest.java,75,,"            contents.put(""foo.jar"", Archives.jarArchive(Orange.class));"
247585,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/DeploymentsElementTest.java,76,,"            contents.put(""META-INF/application.xml"", ""<application><module><ejb>foo.jar</ejb></module></application>"");"
247586,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/DeploymentsElementTest.java,76,,"            contents.put(""META-INF/application.xml"", ""<application><module><ejb>foo.jar</ejb></module></application>"");"
247587,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/DeploymentsElementTest.java,85,,"        assertEquals(""Orange"", configuration.containerSystem.applications.get(0).ejbJars.get(0).enterpriseBeans.get(0).ejbName);"
247588,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/DeploymentsElementTest.java,294,,"        assertEquals(""Yellow"", configuration.containerSystem.applications.get(0).ejbJars.get(0).enterpriseBeans.get(0).ejbName);"
247589,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/DeploymentsElementTest.java,539,,"        exceptions.expectMessage(""myapp.jar"");"
247590,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/EarModuleNamesTest.java,109,,"        contents.put(""green.jar"", ejbJar);"
247591,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/EjbModuleIdTest.java,44,,"        map.put(""META-INF/ejb-jar.xml"", ""<ejb-jar/>"");"
247592,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/EjbModuleIdTest.java,46,,"        final File file = Archives.jarArchive(map, ""test"", OrangeBean.class);"
247593,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/JMXDataSourceTest.java,69,,"        assertNotNull(map.get(""numActive""));"
247594,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/JndiEncInfoBuilderInsertTest.java,73,,"            getArray(""comp/env/MyCompReference"")"
247595,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/JndiEncInfoBuilderInsertTest.java,78,,"            getArray(""global/MyGlobalReference""),"
247596,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/JndiEncInfoBuilderInsertTest.java,87,,"            getArray(""app/MyAppReference""),"
247597,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/JndiNameFormatTest.java,75,,"        p.setProperty(Context.INITIAL_CONTEXT_FACTORY, ""org.apache.openejb.core.LocalInitialContextFactory"");"
247598,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/JndiNameFormatTest.java,80,,"        assertEquals(""Echoing: This is a test"", echo.echo(""This is a test""));"
247599,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/JndiNameFormatTest.java,80,,"        assertEquals(""Echoing: This is a test"", echo.echo(""This is a test""));"
247600,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/JndiNameTest.java,82,,"        ejbDeployment.getJndi().add(new Jndi(""thename"", ""Local""));"
247601,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/JndiNameTest.java,83,,"        ejbDeployment.getJndi().add(new Jndi(""anothername"", ""Remote""));"
247602,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/JndiNameTest.java,84,,"        ejbDeployment.getJndi().add(new Jndi(""loldstyle"", ""LocalHome""));"
247603,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/JndiNameTest.java,85,,"        ejbDeployment.getJndi().add(new Jndi(""roldstyle"", ""RemoteHome""));"
247604,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/MBeanDeployerTest.java,107,,"                assertTrue(cn.startsWith(""openejb.user.mbeans""));"
247605,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/MBeanDeployerTest.java,108,,"                assertTrue(cn.contains(""group=org.apache.openejb.mbeans""));"
247606,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/MBeanDeployerTest.java,109,,"                assertTrue(cn.contains(""application=mbeans"") || cn.contains(""application=EjbModule""));"
247607,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/MBeanDeployerTest.java,109,,"                assertTrue(cn.contains(""application=mbeans"") || cn.contains(""application=EjbModule""));"
247608,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/MBeanDeployerTest.java,117,,"                assertEquals(2, server.getAttribute(on, ""value""));"
247609,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/MappedNameBuilderTest.java,37,,"        final SessionBean sessionBean = new SessionBean(""SessionBean"", ""org.superbiz.SessionBean"", SessionType.STATELESS);"
247610,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/MappedNameBuilderTest.java,38,,"        sessionBean.setMappedName(""MappedName"");"
247611,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ModulePropertiesTest.java,66,,"            map.put(""META-INF/module.properties"", ""color=orange"");"
247612,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ModulePropertiesTest.java,88,,"            SystemInstance.get().getProperties().put(""fooModule.color"", ""orange"");"
247613,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ModulePropertiesTest.java,91,,"            map.put(""META-INF/ejb-jar.xml"", ""<ejb-jar id=\""fooModule\""/>"");"
247614,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ModulePropertiesTest.java,91,,"            map.put(""META-INF/ejb-jar.xml"", ""<ejb-jar id=\""fooModule\""/>"");"
247615,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ModulePropertiesTest.java,94,,"            final AppModule appModule = config.loadApplication(this.getClass().getClassLoader(), ""fooApp"", Arrays.asList(module));"
247616,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ModulePropertiesTest.java,197,,"            assertProperty(moduleContext.getProperties(), ""color"", ""orange"");"
247617,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/OutputGeneratedDescriptorsTest.java,50,,"		redBean.setRemote(""com.foo.Color"");"
247618,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ProviderManagerTest.java,47,,"            final ServiceProvider color = new ServiceProvider(Color.class, ""Color"", ""Resource"");"
247619,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ProviderManagerTest.java,47,,"            final ServiceProvider color = new ServiceProvider(Color.class, ""Color"", ""Resource"");"
247620,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ProviderManagerTest.java,48,,"            color.getProperties().setProperty(""red"", ""0"");"
247621,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ProviderManagerTest.java,49,,"            color.getProperties().setProperty(""green"", ""0"");"
247622,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ProviderManagerTest.java,50,,"            color.getProperties().setProperty(""blue"", ""0"");"
247623,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ProviderManagerTest.java,51,,"            manager.register(""default"", color);"
247624,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ProviderManagerTest.java,56,,"            final ServiceProvider provider = manager.get(""DeFaulT"", ""CoLoR"");"
247625,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ProviderManagerTest.java,56,,"            final ServiceProvider provider = manager.get(""DeFaulT"", ""CoLoR"");"
247626,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ProviderManagerTest.java,59,,"            assertEquals(""0"", provider.getProperties().getProperty(""rEd""));"
247627,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ProviderManagerTest.java,60,,"            assertEquals(""0"", provider.getProperties().get(""grEEn""));"
247628,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ProviderManagerTest.java,61,,"            assertEquals(""0"", provider.getProperties().get(""blUE""));"
247629,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ProviderManagerTest.java,66,,"            red.setId(""Red"");"
247630,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ProviderManagerTest.java,68,,"            red.getProperties().setProperty(""red"", ""255"");"
247631,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ProviderManagerTest.java,76,,"            final ServiceProvider provider = manager.get(""dEFaulT"", ""REd"");"
247632,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ProviderManagerTest.java,76,,"            final ServiceProvider provider = manager.get(""dEFaulT"", ""REd"");"
247633,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ProviderManagerTest.java,79,,"            assertEquals(""255"", provider.getProperties().getProperty(""rED""));"
247634,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ProviderManagerTest.java,80,,"            assertEquals(""0"", provider.getProperties().get(""grEEN""));"
247635,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ProviderManagerTest.java,81,,"            assertEquals(""0"", provider.getProperties().get(""bLUe""));"
247636,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ProviderManagerTest.java,87,,"            orange.setId(""Orange"");"
247637,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ProviderManagerTest.java,89,,"            orange.getProperties().setProperty(""green"", ""200"");"
247638,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ProviderManagerTest.java,97,,"            final ServiceProvider provider = manager.get(""dEFAUlT"", ""orAngE"");"
247639,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ProviderManagerTest.java,97,,"            final ServiceProvider provider = manager.get(""dEFAUlT"", ""orAngE"");"
247640,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ProviderManagerTest.java,100,,"            assertEquals(""255"", provider.getProperties().getProperty(""reD""));"
247641,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ProviderManagerTest.java,101,,"            assertEquals(""200"", provider.getProperties().get(""grEeN""));"
247642,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ProviderManagerTest.java,102,,"            assertEquals(""0"", provider.getProperties().get(""bLue""));"
247643,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ProviderManagerTest.java,111,,"                if (""color"".equalsIgnoreCase(id.getName())) {"
247644,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ProviderManagerTest.java,127,,"                if (""orange"".equalsIgnoreCase(id.getName())) {"
247645,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ProviderManagerTest.java,332,,"                    color.setFactoryName(""fooFactory"");"
247646,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ProviderManagerTest.java,335,,"                    color.setConstructor(""one, two, three"");"
247647,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ProviderManagerTest.java,336,,"                    color.setDescription(""the description"");"
247648,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ProviderManagerTest.java,337,,"                    color.setDisplayName(""the display name"");"
247649,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ReadDescriptorsTest.java,41,,"        Assert.assertEquals(""true"", res.getProperties().getProperty(""Lazy""));"
247650,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ReadDescriptorsTest.java,41,,"        Assert.assertEquals(""true"", res.getProperties().getProperty(""Lazy""));"
247651,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ReadDescriptorsTest.java,42,,"        Assert.assertEquals(""true"", res.getProperties().getProperty(""UseAppClassLoader""));"
247652,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ReadDescriptorsTest.java,43,,"        Assert.assertEquals(""true"", res.getProperties().getProperty(""InitializeAfterDeployment""));"
247653,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ServiceClasspathTest.java,76,,"        final String className = ""org.superbiz.foo.Orange"";"
247654,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ServiceClasspathTest.java,105,,"        final Color color = (Color) initialContext.lookup(""openejb:Resource/Orange"");"
247655,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ServiceClasspathTest.java,108,,"        assertEquals(""Orange.FF"", color.getRed());"
247656,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ServiceClasspathTest.java,109,,"        assertEquals(""Orange.99"", color.getGreen());"
247657,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/ServiceClasspathTest.java,110,,"        assertEquals(""Orange.00"", color.getBlue());"
247658,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/SunConversionTest.java,24,,"        assertEquals(""dir/file"", SunConversion.extractSerivceId(""file:repo1/dir"", ""META-INF/wsdl/file.wsdl""));"
247659,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/SunConversionTest.java,24,,"        assertEquals(""dir/file"", SunConversion.extractSerivceId(""file:repo1/dir"", ""META-INF/wsdl/file.wsdl""));"
247660,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/SunConversionTest.java,42,,"        assertEquals(""file"", SunConversion.extractServiceId(""http://server.com:port/file?WSDL""));"
247661,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/SunConversionTest.java,50,,"        assertEquals(""dir/file/"", SunConversion.extractServiceId(""http://server.com:port/dir/file/?WSDL""));"
247662,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/SunQueryFilterTest.java,27,,"        String ejbQl = sunConversion.convertToEjbQl(""item"", null, null);"
247663,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/XmlDataSourceTest.java,42,,"    @Resource(name = ""java:comp/env/foo"")"
247664,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/XmlOverridesTest.java,78,,"        bean.getEnvEntry().add(new EnvEntry(name(""doouble""), ""java.lang.String"", ""two""));"
247665,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/XmlOverridesTest.java,93,,"        bean.getPersistenceUnitRef().add(new PersistenceUnitRef(name(""emf""), ""yellow""));"
247666,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/rules/CheckMissingClassTest.java,41,,"        stateless.setHomeAndRemote(""WrongHome"", ""WrongRemote"");"
247667,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/rules/CheckMissingClassTest.java,41,,"        stateless.setHomeAndRemote(""WrongHome"", ""WrongRemote"");"
247668,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/rules/CheckMissingClassTest.java,42,,"        stateless.setLocal(""WrongLocal"");"
247669,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/rules/CheckMissingClassTest.java,43,,"        stateless.setLocalHome(""WrongLocalHome"");"
247670,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/rules/CheckPersistenceContextUsageTest.java,51,,"        final PersistenceUnit pu = new PersistenceUnit(""fooUnit"");"
247671,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/rules/CheckPersistenceUnitUsageTest.java,48,,"        final PersistenceUnit pu = new PersistenceUnit(""fooUnit"");"
247672,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/rules/InvalidInterfacesTest.java,86,,"        SystemInstance.get().setProperty(""openejb.strict.interface.declaration"", ""true"");"
247673,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/rules/InvalidInterfacesTest.java,86,,"        SystemInstance.get().setProperty(""openejb.strict.interface.declaration"", ""true"");"
247674,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/rules/ValidationKeysAuditorTest.java,147,,"            output.append(""| "").append(key).append("" | "");"
247675,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/rules/ValidationKeysAuditorTest.java,203,,"        output.append(""================================================================================================"").append(newLine);"
247676,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/sys/ServiceProviderInheritanceTest.java,64,,"                    color.getProperties().setProperty(""red"", ""0"");"
247677,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/config/sys/ServiceProviderInheritanceTest.java,81,,"                    orange.setId(""Orange"");"
247678,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/LegacyInterfaceTest.java,124,,"        cmp.getCmpField().add(new CmpField(""name""));"
247679,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/LegacyInterfaceTest.java,127,,"        query.setEjbQl(""SELECT OBJECT(DL) FROM License DL"");"
247680,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/LegacyInterfaceTest.java,140,,"        transactions.add(new ContainerTransaction(TransAttribute.SUPPORTS, null, ""MyCmpBean"", ""*""));"
247681,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/LegacyInterfaceTest.java,191,,"        entity.setClazz(""openejb.org.apache.openejb.core.MyCmpBean"");"
247682,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/OpenEJBInitialContextFactoryTest.java,50,,"                assertEquals(""ejb"", SomeEjb.class.cast(ctx.lookup(""java:global/openejb/SomeEjb"")).from());"
247683,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/asynch/AsynchInRoleTest.java,100,,"            Assert.assertEquals(""testA was never executed"", ""testA"", testBean.getLastInvokeMethod());"
247684,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/asynch/AsynchInRoleTest.java,104,,"            Assert.assertEquals(""testB was never executed"", ""testB"", testBean.getLastInvokeMethod());"
247685,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/asynch/AsynchInRoleTest.java,106,,"            Assert.assertEquals(""testC was never executed"", ""testC"", testBean.getLastInvokeMethod());"
247686,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/asynch/AsynchInRoleTest.java,108,,"            Assert.assertEquals(""testD was never executed"", ""testD"", testBean.getLastInvokeMethod());"
247687,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/asynch/AsynchInRoleTest.java,205,,"    @DeclareRoles({""committer""})"
247688,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/asynch/AsynchInRoleTest.java,221,,"            Assert.assertFalse(""testB should be executed in asynchronous mode"", Thread.currentThread().getId() == callerThreadId);"
247689,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/asynch/AsynchInRoleTest.java,228,,"            Assert.assertTrue(""testC should be executed in blocing mode"", Thread.currentThread().getId() == callerThreadId);"
247690,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/asynch/AsynchTest.java,97,,"            Assert.assertEquals(""testA was never executed"", ""testA"", testBean.getLastInvokeMethod());"
247691,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/asynch/AsynchTest.java,101,,"            Assert.assertEquals(""testB was never executed"", ""testB"", testBean.getLastInvokeMethod());"
247692,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/asynch/AsynchTest.java,103,,"            Assert.assertEquals(""testC was never executed"", ""testC"", testBean.getLastInvokeMethod());"
247693,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/asynch/AsynchTest.java,105,,"            Assert.assertEquals(""testD was never executed"", ""testD"", testBean.getLastInvokeMethod());"
247694,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/asynch/AsynchTest.java,201,,"            Assert.assertFalse(""testB should be executed in asynchronous mode"", Thread.currentThread().getId() == callerThreadId);"
247695,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/asynch/AsynchTest.java,208,,"            Assert.assertTrue(""testC should be executed in blocing mode"", Thread.currentThread().getId() == callerThreadId);"
247696,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/cmp/jpa/JpaTestObject.java,149,,"        dain.setName(""dain"");"
247697,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/cmp/jpa/UnenhancedTest.java,100,,"        runTest(""complexId"", PersistenceUnitTransactionType.JTA, true);"
247698,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/cmp/jpa/UnenhancedTest.java,116,,"        runTest(""complexIdSubclass"", PersistenceUnitTransactionType.JTA, true);"
247699,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/cmp/jpa/UnenhancedTest.java,134,,"        runTest(""generatedId"", PersistenceUnitTransactionType.JTA, true);"
247700,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/cmp/jpa/UnenhancedTest.java,152,,"        runTest(""generatedIdSubclass"", PersistenceUnitTransactionType.JTA, true);"
247701,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/cmp/jpa/UnenhancedTest.java,170,,"        runTest(""collection"", PersistenceUnitTransactionType.JTA, true);"
247702,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/ivm/naming/IvmContextTest.java,118,,"        context.bind(""one"", 1);"
247703,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/ivm/naming/IvmContextTest.java,119,,"        context.bind(""two"", 2);"
247704,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/ivm/naming/IvmContextTest.java,120,,"        context.bind(""three"", 3);"
247705,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/ivm/naming/IvmContextTest.java,130,,"            fail(""name should be unbound"");"
247706,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/ivm/naming/IvmContextTest.java,141,,"        assertFalse(""name should not appear in bindings list"", map.containsKey(""one""));"
247707,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/ivm/naming/IvmContextTest.java,175,,"        context.bind(""veggies/tomato/roma"", 33);"
247708,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/ivm/naming/IvmContextTest.java,176,,"        context.bind(""fruit/apple/grannysmith"", 22);"
247709,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/ivm/naming/IvmContextTest.java,231,,"        context.bind(""comp/env/rate/work/doc/lot/pop"", 1);"
247710,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/ivm/naming/JavaLookupScopesTest.java,59,,"            final EjbJar ejbJar = new EjbJar(""testmodule"");"
247711,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/ivm/naming/JavaLookupScopesTest.java,81,,"            assertTrue(context.lookup(""app/AppName"") instanceof String);"
247712,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/ivm/naming/JavaLookupScopesTest.java,96,,"            assertTrue(context.lookup(""module/ModuleName"") instanceof String);"
247713,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/ivm/naming/JavaLookupTest.java,49,,"        assertTrue(context.lookup(""java:comp/TransactionManager"") instanceof TransactionManager);"
247714,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/ivm/naming/ParsedNameTest.java,29,,"        assertEquals(""Name.getComponent()"", ""one"", name.getComponent());"
247715,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/ivm/naming/ParsedNameTest.java,30,,"        assertEquals(""Name.remaining().path()"", ""two/three/four"", name.remaining().path());"
247716,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/mdb/JmsProxyTest.java,44,,"        assertEquals(""foobar"", testInterface.echo(""bar""));"
247717,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/mdb/JmsProxyTest.java,44,,"        assertEquals(""foobar"", testInterface.echo(""bar""));"
247718,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/mdb/ResourceAdapterControlTest.java,100,,"        assertFalse(Mdb.awaiter.message, sendAndWait(""Will be received after"", 10, TimeUnit.SECONDS));"
247719,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/mdb/ResourceAdapterDeliveryActiveTest.java,88,,"        assertFalse(Mdb.awaiter.message, sendAndWait(""Will be received after"", 10, TimeUnit.SECONDS));"
247720,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/mdb/SimpleJmsTest.java,44,,"        assertEquals(""foobar"", testInterface.echo(""bar""));"
247721,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/mdb/SimpleJmsTest.java,44,,"        assertEquals(""foobar"", testInterface.echo(""bar""));"
247722,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/security/RunAsTest.java,42,,"        assertEquals(""foo"", bean.principal());"
247723,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/security/SQLLoginModuleTest.java,67,,"        st.setString(1, ""jonathan"");"
247724,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/security/SecurityTest.java,113,,"        assertTrue(""not in role committer"", foo.isCallerInRole(""committer""));"
247725,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/security/SecurityTest.java,114,,"        assertTrue(""not in role community"", foo.isCallerInRole(""community""));"
247726,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/security/SecurityTest.java,115,,"        assertFalse(""in role contributor"", foo.isCallerInRole(""contributor""));"
247727,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/security/SecurityTest.java,166,,"        assertTrue(""not in role guest"", foo.isCallerInRole(""guest""));"
247728,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/singleton/SingletonContainerTest.java,59,,"            assertNotNull(""lifecycle"", lifecycle);"
247729,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateful/EntityManagerPropogationTest.java,96,,"        Node node = (Node) ctx.lookup(""ExtendedLocalBean"");"
247730,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateful/EntityManagerPropogationTest.java,314,,"        addStatefulBean(ejbJar, ExtendedContextBean.class, ""Extendedx4"", ""Extendedx5"");"
247731,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateful/EntityManagerPropogationTest.java,348,,"        final PersistenceUnit unit = new PersistenceUnit(""testUnit"");"
247732,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateful/StatefulBeanManagedTest.java,80,,"        MyBean beanOne = (MyBean) new InitialContext().lookup(""MyBeanLocalBean"");"
247733,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateful/StatefulBeanManagedTest.java,82,,"        beanOne.one(""bob"");"
247734,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateful/StatefulContainerTest.java,102,,"            assertEquals(""test"", e.getMessage());"
247735,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateful/StatefulTransactionAttributesTest.java,80,,"        declared.add(new ContainerTransaction(TransAttribute.REQUIRED, ""*"", ""Crimson"", ""*""));"
247736,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateful/StatefulTransactionAttributesTest.java,98,,"            assertEquals(""Never"", color.color());"
247737,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateful/StatefulTransactionAttributesTest.java,99,,"            assertEquals(""RequiresNew"", color.color((Object) null));"
247738,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateful/StatefulTransactionAttributesTest.java,100,,"            assertEquals(""Supports"", color.color((String) null));"
247739,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateful/StatefulTransactionAttributesTest.java,147,,"            assertEquals(""Required"", red.color((Object) null));"
247740,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateful/StatefulTransactionAttributesTest.java,273,,"            assertEquals(""NotSupported"", scarlet.scarlet((String) null));"
247741,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateful/StatefulTransactionLockingTest.java,87,,"        final BlueStateless blueStateless = (BlueStateless) new InitialContext().lookup(""BlueStatelessBeanLocal"");"
247742,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateless/StatelessContainerTest.java,62,,"            assertNotNull(""lifecycle"", lifecycle);"
247743,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateless/StatelessInvocationStatsTest.java,185,,"        expectedAttributes.add(new MBeanAttributeInfo(""InvocationCount"", ""long"", """", true, false, false));"
247744,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateless/StatelessInvocationStatsTest.java,198,,"            expectedAttributes.add(new MBeanAttributeInfo(s + "".GeometricMean"", ""double"", """", true, false, false));"
247745,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateless/StatelessMetaAnnotationTest.java,73,,"            assertNotNull(""lifecycle"", lifecycle);"
247746,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateless/StatelessPoolStatsTest.java,88,,"        properties.setProperty(""MaxSize"", ""15"");"
247747,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateless/StatelessPoolStatsTest.java,89,,"        properties.setProperty(""SweepInterval"", ""10 ms"");"
247748,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateless/StatelessPoolStatsTest.java,90,,"        properties.setProperty(""MinSize"", ""3"");"
247749,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateless/StatelessPoolStatsTest.java,91,,"        properties.setProperty(""StrictPooling"", ""true"");"
247750,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateless/StatelessPoolStatsTest.java,91,,"        properties.setProperty(""StrictPooling"", ""true"");"
247751,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateless/StatelessPoolStatsTest.java,103,,"        expectedAttributes.add(new MBeanAttributeInfo(""AccessTimeouts"", ""long"", """", true, false, false));"
247752,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateless/StatelessPoolStatsTest.java,103,,"        expectedAttributes.add(new MBeanAttributeInfo(""AccessTimeouts"", ""long"", """", true, false, false));"
247753,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateless/StatelessPoolStatsTest.java,104,,"        expectedAttributes.add(new MBeanAttributeInfo(""AccessTimeouts.Latest"", ""java.lang.String"", """", true, false, false));"
247754,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateless/StatelessPoolStatsTest.java,106,,"        expectedAttributes.add(new MBeanAttributeInfo(""Aged"", ""long"", """", true, false, false));"
247755,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateless/StatelessPoolStatsTest.java,109,,"        expectedAttributes.add(new MBeanAttributeInfo(""AvailablePermits"", ""int"", """", true, false, false));"
247756,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateless/StatelessPoolStatsTest.java,109,,"        expectedAttributes.add(new MBeanAttributeInfo(""AvailablePermits"", ""int"", """", true, false, false));"
247757,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateless/StatelessPoolStatsTest.java,110,,"        expectedAttributes.add(new MBeanAttributeInfo(""Flushed"", ""long"", """", true, false, false));"
247758,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateless/StatelessPoolStatsTest.java,113,,"        expectedAttributes.add(new MBeanAttributeInfo(""Flushes"", ""long"", """", true, false, false));"
247759,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateless/StatelessPoolStatsTest.java,119,,"        expectedAttributes.add(new MBeanAttributeInfo(""GarbageCollection"", ""boolean"", """", true, false, false));"
247760,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateless/StatelessPoolStatsTest.java,119,,"        expectedAttributes.add(new MBeanAttributeInfo(""GarbageCollection"", ""boolean"", """", true, false, false));"
247761,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateless/StatelessPoolStatsTest.java,120,,"        expectedAttributes.add(new MBeanAttributeInfo(""IdleTimeout"", ""long"", """", true, false, false));"
247762,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateless/StatelessPoolStatsTest.java,121,,"        expectedAttributes.add(new MBeanAttributeInfo(""IdleTimeouts"", ""long"", """", true, false, false));"
247763,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateless/StatelessPoolStatsTest.java,124,,"        expectedAttributes.add(new MBeanAttributeInfo(""InstancesActive"", ""int"", """", true, false, false));"
247764,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateless/StatelessPoolStatsTest.java,125,,"        expectedAttributes.add(new MBeanAttributeInfo(""InstancesIdle"", ""int"", """", true, false, false));"
247765,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateless/StatelessPoolStatsTest.java,127,,"        expectedAttributes.add(new MBeanAttributeInfo(""InstancesPooled"", ""int"", """", true, false, false));"
247766,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateless/StatelessPoolStatsTest.java,128,,"        expectedAttributes.add(new MBeanAttributeInfo(""MaxAge"", ""long"", """", true, false, false));"
247767,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateless/StatelessPoolStatsTest.java,129,,"        expectedAttributes.add(new MBeanAttributeInfo(""MaxAgeOffset"", ""double"", """", true, false, false));"
247768,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateless/StatelessPoolStatsTest.java,132,,"        expectedAttributes.add(new MBeanAttributeInfo(""MinimumInstances"", ""int"", """", true, false, false));"
247769,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateless/StatelessPoolStatsTest.java,133,,"        expectedAttributes.add(new MBeanAttributeInfo(""Overdrafts"", ""long"", """", true, false, false));"
247770,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateless/StatelessPoolStatsTest.java,136,,"        expectedAttributes.add(new MBeanAttributeInfo(""PoolVersion"", ""int"", """", true, false, false));"
247771,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateless/StatelessPoolStatsTest.java,137,,"        expectedAttributes.add(new MBeanAttributeInfo(""ReplaceAged"", ""boolean"", """", true, false, false));"
247772,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateless/StatelessPoolStatsTest.java,138,,"        expectedAttributes.add(new MBeanAttributeInfo(""ReplaceFlushed"", ""boolean"", """", true, false, false));"
247773,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateless/StatelessPoolStatsTest.java,139,,"        expectedAttributes.add(new MBeanAttributeInfo(""Replaced"", ""long"", """", true, false, false));"
247774,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateless/StatelessPoolStatsTest.java,230,,"        properties.put(""GarbageCollection"", ""false"");"
247775,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/stateless/StatelessSessionBeanInterfaceTest.java,76,,"                ""businessMethod"", Join.join(""\n"", lifecycle));"
247776,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/core/webservices/HandlerResolverImplTest.java,68,,"        final QName serviceName1 = new QName(""http://java.sun.com/xml/ns/javaee"", ""Bar"");"
247777,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/dyni/DynamicSubclassTest.java,68,,"            assertEquals(""blue"", generatedClass.getAnnotation(Circle.class).value());"
247778,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/dyni/DynamicSubclassTest.java,92,,"            final Method method = Green.class.getDeclaredMethod(""green"", String.class);"
247779,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/dyni/DynamicSubclassTest.java,102,,"            final Method method = Red.class.getDeclaredMethod(""red"", URI.class);"
247780,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/ivm/naming/IvmContextTest.java,37,,"        root.rebind(""global/App.EAR/foo"", ""test"");"
247781,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/ivm/naming/IvmContextTest.java,37,,"        root.rebind(""global/App.EAR/foo"", ""test"");"
247782,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/ivm/naming/IvmContextTest.java,39,,"        last.rebind(""foo"", ""test"");"
247783,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/ivm/naming/IvmContextTest.java,52,,"        lastContext.rebind(""foo"", ""test2"");"
247784,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/ivm/naming/IvmContextTest.java,67,,"        context.bind(""global/foo/Bar"", ""Bar"");"
247785,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/ivm/naming/IvmContextTest.java,67,,"        context.bind(""global/foo/Bar"", ""Bar"");"
247786,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/ivm/naming/IvmContextTest.java,108,,"            ((Context) ((Context) context.lookup(""global"")).lookup(""foo""))"
247787,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/ivm/naming/IvmContextTest.java,186,,"        expected.put(""federated-prop-1"", ""federated-prop-1"");"
247788,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/ivm/naming/IvmContextTest.java,187,,"        expected.put(""federated-prop-2"", ""federated-prop-2"");"
247789,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/ivm/naming/IvmContextTest.java,188,,"        expected.put(""federated-prop-3"", ""federated-prop-3"");"
247790,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/ivm/naming/IvmContextTest.java,342,,"        root.bind(""a/b/object"", new Object());"
247791,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/ivm/naming/IvmContextTest.java,344,,"        IvmContext b = (IvmContext) root.lookup(""a/b"");"
247792,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/ivm/naming/IvmContextTest.java,346,,"        b.bind(""object"", new Object());"
247793,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/ivm/naming/IvmContextTest.java,373,,"        root.bind(""a/b/c"", null);"
247794,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/meta/MetaTest.java,110,,"                    final EjbJar expected = new EjbJar(""expected"");"
247795,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/meta/MetaTest.java,113,,"                    final EjbJar actual = new EjbJar(""actual"");"
247796,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/meta/ResourceMetaTest.java,37,,"        properties.put(""yellow"", ""new://Resource?type=DataSource"");"
247797,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/meta/ResourceMetaTest.java,38,,"        properties.put(""red"", ""new://Resource?type=DataSource"");"
247798,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/persistence/ReloadableEntityManagerFactoryTest.java,49,,"        unit.getProperties().setProperty(""openjpa.DataCache"", ""false"");"
247799,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/resource/AutoConnectionTrackerTest.java,172,,"            assertLogs(logCapture, 0, ""Detected abandoned connection"");"
247800,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/resource/AutoConnectionTrackerTest.java,306,,"            connection.sendMessage(""Test message"");"
247801,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/resource/ResourceLifecycleTest.java,42,,"        @ContainerProperties.Property(name = ""postConstructAndPreDestroy.myAttr"", value = ""done""),"
247802,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/resource/activemq/ActiveMQ5FactoryTest.java,37,,"        final URI brokerURI = new URI(""amq5factory:broker:(tcp://localhost:"" + getNextAvailablePort() + "")?"" +"
247803,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/resource/activemq/OpenEjbBrokerFactoryTest.java,53,,"        assertEquals(prefix + ""broker:(tcp://localhost:"" + brokerPort + "")?persistent=false"","
247804,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/resource/activemq/OpenEjbBrokerFactoryTest.java,55,,"        assertEquals(prefix + ""broker:(tcp://localhost:"" + brokerPort + "")?useJmx=false&persistent=false"","
247805,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/resource/activemq/OpenEjbBrokerFactoryTest.java,56,,"            getBrokerUri(""broker:(tcp://localhost:"" + brokerPort + "")?useJmx=false""));"
247806,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/resource/jdbc/CipheredPasswordDataSourceTest.java,72,,"        p.put(""managed.JtaManaged"", ""true"");"
247807,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/resource/jdbc/DataSourceFactoryTest.java,50,,"        assertTrue(Boolean.class.cast(mtd.invoke(null, new PropertiesBuilder().p(""openejb.datasource.pool"", ""true"").build())));"
247808,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/resource/jdbc/DbcpNPEXAConnectionTest.java,66,,"                .p(""txMgr.txRecovery"", ""true"")"
247809,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/resource/jdbc/FailOverRouterErrorHandlerTest.java,103,,"            assertTrue(errors.containsKey(""delegate1""));"
247810,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/resource/jdbc/FailOverRouterExceptionSelectorTest.java,104,,"            assertTrue(errors.containsKey(""delegate1""));"
247811,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/resource/jdbc/FailOverRouterExceptionSelectorTest.java,132,,"            assertTrue(errors.containsKey(""delegate2""));"
247812,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/resource/jdbc/JtaFailOverRouterTest.java,57,,"            .property(""fo1.JtaManaged"", ""true"")"
247813,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/resource/jdbc/XADataSourceTest.java,77,,"        p.put(""txMgr.txRecovery"", ""true"");"
247814,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/resource/jdbc/XADataSourceTest.java,94,,"        p.put(""xadb"", ""new://Resource?type=DataSource"");"
247815,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/resource/jdbc/XADataSourceTest.java,98,,"        p.put(""xadb2"", ""new://Resource?type=DataSource"");"
247816,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/resource/jdbc/XAPoolTest.java,64,,"            .p(""txMgr.txRecovery"", ""true"")"
247817,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/resource/jdbc/driver/AlternativeDriverTest.java,42,,"        assertSame(general, DriverManager.getDriver(orange.getUrl() + ""foo""));"
247818,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/timer/InitialIntervalTimerTest.java,167,,"                result += "" Got expected "" + e;"
247819,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/timer/ScheduleTest.java,187,,"            Assert.fail(""This method should not be invoked, we might confuse the auto-created timers and timeout timer"");"
247820,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/util/DynamicEJBImplTest.java,154,,"        final Collection<User> users = dao.findByName(""foo"");"
247821,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/util/DynamicEJBImplTest.java,181,,"        params.put(""name"", ""foo"");"
247822,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/util/DynamicEJBImplTest.java,183,,"        Collection<User> users = dao.namedQuery(""dynamic-ejb-impl-test.query"", params, 0, 100);"
247823,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/util/OptionsTest.java,46,,"        final String userValue = ""NONE"";"
247824,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/util/OptionsTest.java,48,,"        properties.setProperty(""colors"", userValue);"
247825,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/util/OptionsTest.java,54,,"        assertEquals(""size"", 0, colors.size());"
247826,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/util/OptionsTest.java,56,,"        assertEquals(""messages.size"", 1, log.messages.size());"
247827,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/util/OptionsTest.java,57,,"        assertEquals(""messages level"", Info.class, log.messages.get(0).getClass());"
247828,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/util/OptionsTest.java,58,,"        assertContains(log.messages.get(0).message, ""colors="" + userValue);"
247829,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/util/OptionsTest.java,63,,"        final String userValue = ""ALL"";"
247830,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/util/OptionsTest.java,110,,"        assertContains(message, ""Possible values"");"
247831,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/util/PropertiesTest.java,48,,"        assertNull(properties.get(""foo""));"
247832,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/util/PropertiesTest.java,53,,"        assertNull(properties.put(""foo"", ""bar""));"
247833,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/util/PropertyPlaceHolderTest.java,86,,"        final String foo = PropertyPlaceHolderHelper.simpleValue(""tiger...}"");"
247834,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/util/PropertyPlaceHolderTest.java,114,,"        SystemInstance.get().setProperty(""foo"", ""bar"");"
247835,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/util/PropertyPlaceHolderTest.java,114,,"        SystemInstance.get().setProperty(""foo"", ""bar"");"
247836,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/util/PropertyPlaceHolderTest.java,144,,"        SystemInstance.get().setProperty(""foo"", ""abc}"");"
247837,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/util/PropertyPlaceHolderTest.java,210,,"        final Object foo = PropertyPlaceHolderHelper.simpleValueAsStringOrCharArray(""${${foo}.bar}"");"
247838,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/util/PropertyPlaceHolderTest.java,223,,"        SystemInstance.get().setProperty(""bar.bar"", ""val"");"
247839,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/util/SuperPropertiesTest.java,33,,"        properties.setProperty(""foo"", ""bar"");"
247840,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/util/SuperPropertiesTest.java,33,,"        properties.setProperty(""foo"", ""bar"");"
247841,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/util/SuperPropertiesTest.java,34,,"        properties.setComment(""foo"", ""comment"");"
247842,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/util/SuperPropertiesTest.java,35,,"        properties.getAttributes(""foo"").put(""name"", ""value"");"
247843,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/util/SuperPropertiesTest.java,35,,"        properties.getAttributes(""foo"").put(""name"", ""value"");"
247844,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/util/SuperPropertiesTest.java,44,,"        assertFalse(properties.containsKey(""FOO""));"
247845,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/util/SuperPropertiesTest.java,51,,"        properties.setProperty(""FOO"", ""BAR"");"
247846,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/util/SuperPropertiesTest.java,52,,"        properties.setComment(""FOO"", ""COMMENT"");"
247847,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/util/SuperPropertiesTest.java,53,,"        properties.getAttributes(""FOO"").put(""NAME"", ""VALUE"");"
247848,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/util/URISupportTest.java,56,,"        parameters.put(""create"", ""false"");"
247849,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/util/URISupportTest.java,56,,"        parameters.put(""create"", ""false"");"
247850,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/util/proxy/LocalBeanProxyFactoryTest.java,266,,"        assertEquals(""add"", call.getMethodName());"
247851,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/util/proxy/LocalBeanProxyFactoryTest.java,514,,"        assertEquals(""reverse"", call.getMethodName());"
247852,./TargetProjects/tomee/container/openejb-core/src/test/java/org/apache/openejb/util/proxy/LocalReferenceSerializationTest.java,150,,"            throw new AssertionError(""Should never be called"");"
247853,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/AbsoluteOrdering$JAXB.java,42,,"        super(AbsoluteOrdering.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""absoluteOrderingType"".intern()), OrderingOthers$JAXB.class);"
247854,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/ActivationConfig$JAXB.java,45,,"        super(ActivationConfig.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""activation-configType"".intern()), Text$JAXB.class, ActivationConfigProperty$JAXB.class);"
247855,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/ActivationConfigProperty$JAXB.java,38,,"        super(ActivationConfigProperty.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""activation-config-propertyType"".intern()));"
247856,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/ActivationSpec$JAXB.java,45,,"        super(ActivationSpec.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""activationspecType"".intern()), RequiredConfigProperty$JAXB.class, ConfigProperty$JAXB.class);"
247857,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/Addressing$JAXB.java,40,,"        super(Addressing.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""addressingType"".intern()), AddressingResponses$JAXB.class);"
247858,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/AdminObject$JAXB.java,43,,"        super(AdminObject.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""adminobjectType"".intern()), ConfigProperty$JAXB.class);"
247859,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/Application$JAXB.java,71,,"        super(Application.class, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""application"".intern()), new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""applicationType"".intern()), Text$JAXB.class, Icon$JAXB.class, Module$JAXB.class, SecurityRole$JAXB.class, EnvEntry$JAXB.class, EjbRef$JAXB.class, EjbLocalRef$JAXB.class, ServiceRef$JAXB.class, ResourceRef$JAXB.class, ResourceEnvRef$JAXB.class, MessageDestinationRef$JAXB.class, PersistenceContextRef$JAXB.class, PersistenceUnitRef$JAXB.class, MessageDestination$JAXB.class, DataSource$JAXB.class);"
247860,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/Application$JAXB.java,131,,"            if ((""version"" == attribute.getLocalName()) && (("""" == attribute.getNamespace()) || (attribute.getNamespace() == null))) {"
247861,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/Application$JAXB.java,173,,"            } else if ((""icon"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247862,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/Application$JAXB.java,189,,"            } else if ((""module"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247863,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/ApplicationClient$JAXB.java,68,,"        super(ApplicationClient.class, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""application-client"".intern()), new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""application-clientType"".intern()), Text$JAXB.class, Icon$JAXB.class, EnvEntry$JAXB.class, EjbRef$JAXB.class, EjbLocalRef$JAXB.class, ServiceRef$JAXB.class, ResourceRef$JAXB.class, ResourceEnvRef$JAXB.class, MessageDestinationRef$JAXB.class, PersistenceContextRef$JAXB.class, PersistenceUnitRef$JAXB.class, LifecycleCallback$JAXB.class, MessageDestination$JAXB.class, DataSource$JAXB.class);"
247864,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/ApplicationClient$JAXB.java,137,,"            } else if ((""version"" == attribute.getLocalName()) && (("""" == attribute.getNamespace()) || (attribute.getNamespace() == null))) {"
247865,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/ApplicationClient$JAXB.java,174,,"            } else if ((""icon"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247866,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/ApplicationException$JAXB.java,38,,"        super(ApplicationException.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""application-exceptionType"".intern()));"
247867,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/AroundInvoke$JAXB.java,38,,"        super(AroundInvoke.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""around-invokeType"".intern()));"
247868,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/AroundTimeout$JAXB.java,38,,"        super(AroundTimeout.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""around-timeoutType"".intern()));"
247869,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/AssemblyDescriptor$JAXB.java,57,,"        super(AssemblyDescriptor.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""assembly-descriptorType"".intern()), SecurityRole$JAXB.class, MethodPermission$JAXB.class, ContainerTransaction$JAXB.class, ContainerConcurrency$JAXB.class, InterceptorBinding$JAXB.class, MessageDestination$JAXB.class, ExcludeList$JAXB.class, ApplicationException$JAXB.class);"
247870,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/AsyncMethod$JAXB.java,41,,"        super(AsyncMethod.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""async-methodType"".intern()), MethodParams$JAXB.class);"
247871,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/AuthConstraint$JAXB.java,43,,"        super(AuthConstraint.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""auth-constraintType"".intern()), Text$JAXB.class);"
247872,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/AuthenticationMechanism$JAXB.java,42,,"        super(AuthenticationMechanism.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""authentication-mechanismType"".intern()), Text$JAXB.class);"
247873,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/CmpField$JAXB.java,42,,"        super(CmpField.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""cmp-fieldType"".intern()), Text$JAXB.class);"
247874,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/CmrField$JAXB.java,44,,"        super(CmrField.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""cmr-fieldType"".intern()), Text$JAXB.class, CmrFieldType$JAXB.class);"
247875,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/ConcurrentMethod$JAXB.java,45,,"        super(ConcurrentMethod.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""concurrent-methodType"".intern()), NamedMethod$JAXB.class, ConcurrentLockType$JAXB.class, Timeout$JAXB.class);"
247876,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/ConcurrentMethod$JAXB.java,101,,"            if ((""method"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247877,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/ConfigProperty$JAXB.java,42,,"        super(ConfigProperty.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""config-propertyType"".intern()), Text$JAXB.class);"
247878,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/ConnectionDefinition$JAXB.java,43,,"        super(ConnectionDefinition.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""connection-definitionType"".intern()), ConfigProperty$JAXB.class);"
247879,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/Connector$JAXB.java,49,,"        super(Connector.class, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""connector"".intern()), new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""connectorType"".intern()), Text$JAXB.class, Icon$JAXB.class, License$JAXB.class, ResourceAdapter$JAXB.class);"
247880,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/Connector$JAXB.java,102,,"            } else if ((""version"" == attribute.getLocalName()) && (("""" == attribute.getNamespace()) || (attribute.getNamespace() == null))) {"
247881,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/Connector$JAXB.java,143,,"            } else if ((""icon"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247882,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/ConstructorParameterOrder$JAXB.java,40,,"        super(ConstructorParameterOrder.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""constructor-parameter-orderType"".intern()));"
247883,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/ContainerConcurrency$JAXB.java,47,,"        super(ContainerConcurrency.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""container-concurrencyType"".intern()), Text$JAXB.class, Method$JAXB.class, ConcurrentLockType$JAXB.class);"
247884,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/ContainerConcurrency$JAXB.java,112,,"            } else if ((""method"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247885,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/ContainerTransaction$JAXB.java,47,,"        super(ContainerTransaction.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""container-transactionType"".intern()), Text$JAXB.class, Method$JAXB.class, TransAttribute$JAXB.class);"
247886,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/ContainerTransaction$JAXB.java,112,,"            } else if ((""method"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247887,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/CookieConfig$JAXB.java,38,,"        super(CookieConfig.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""cookie-configType"".intern()));"
247888,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/CookieConfig$JAXB.java,94,,"            if ((""name"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247889,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/CookieConfig$JAXB.java,107,,"            } else if ((""domain"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247890,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/CookieConfig$JAXB.java,120,,"            } else if ((""path"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247891,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/CookieConfig$JAXB.java,133,,"            } else if ((""comment"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247892,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/DataSource$JAXB.java,47,,"        super(DataSource.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""data-sourceType"".intern()), Text$JAXB.class, Property$JAXB.class, IsolationLevel$JAXB.class);"
247893,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/DataSource$JAXB.java,112,,"            } else if ((""name"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247894,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/DataSource$JAXB.java,168,,"            } else if ((""url"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247895,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/DataSource$JAXB.java,181,,"            } else if ((""user"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247896,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/DataSource$JAXB.java,194,,"            } else if ((""password"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247897,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/EjbJar$JAXB.java,56,,"        super(EjbJar.class, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""ejb-jar"".intern()), new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""ejb-jarType"".intern()), Text$JAXB.class, Icon$JAXB.class, MessageDrivenBean$JAXB.class, SessionBean$JAXB.class, EntityBean$JAXB.class, Interceptors$JAXB.class, Relationships$JAXB.class, AssemblyDescriptor$JAXB.class);"
247898,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/EjbJar$JAXB.java,112,,"            } else if ((""version"" == attribute.getLocalName()) && (("""" == attribute.getNamespace()) || (attribute.getNamespace() == null))) {"
247899,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/EjbJar$JAXB.java,149,,"            } else if ((""icon"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247900,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/EjbLocalRef$JAXB.java,48,,"        super(EjbLocalRef.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""ejb-local-refType"".intern()), Text$JAXB.class, EjbRefType$JAXB.class, InjectionTarget$JAXB.class);"
247901,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/EjbLocalRef$JAXB.java,145,,"            } else if ((""local"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247902,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/EjbRef$JAXB.java,48,,"        super(EjbRef.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""ejb-refType"".intern()), Text$JAXB.class, EjbRefType$JAXB.class, InjectionTarget$JAXB.class);"
247903,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/EjbRef$JAXB.java,132,,"            } else if ((""home"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247904,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/EjbRef$JAXB.java,145,,"            } else if ((""remote"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247905,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/EjbRelation$JAXB.java,45,,"        super(EjbRelation.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""ejb-relationType"".intern()), Text$JAXB.class, EjbRelationshipRole$JAXB.class);"
247906,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/EjbRelationshipRole$JAXB.java,50,,"        super(EjbRelationshipRole.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""ejb-relationship-roleType"".intern()), Text$JAXB.class, Multiplicity$JAXB.class, Empty$JAXB.class, RelationshipRoleSource$JAXB.class, CmrField$JAXB.class);"
247907,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/EjbRelationshipRole$JAXB.java,127,,"            } else if ((""multiplicity"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247908,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/EntityBean$JAXB.java,78,,"        super(EntityBean.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""entity-beanType"".intern()), Text$JAXB.class, Icon$JAXB.class, PersistenceType$JAXB.class, CmpVersion$JAXB.class, CmpField$JAXB.class, EnvEntry$JAXB.class, EjbRef$JAXB.class, EjbLocalRef$JAXB.class, ServiceRef$JAXB.class, ResourceRef$JAXB.class, ResourceEnvRef$JAXB.class, MessageDestinationRef$JAXB.class, PersistenceContextRef$JAXB.class, PersistenceUnitRef$JAXB.class, LifecycleCallback$JAXB.class, DataSource$JAXB.class, SecurityRoleRef$JAXB.class, SecurityIdentity$JAXB.class, Query$JAXB.class);"
247909,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/EntityBean$JAXB.java,166,,"            } else if ((""icon"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247910,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/EntityBean$JAXB.java,204,,"            } else if ((""home"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247911,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/EntityBean$JAXB.java,217,,"            } else if ((""remote"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247912,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/EntityBean$JAXB.java,243,,"            } else if ((""local"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247913,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/EntityBean$JAXB.java,288,,"            } else if ((""reentrant"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247914,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/EntityBean$JAXB.java,505,,"            } else if ((""query"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247915,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/EnvEntry$JAXB.java,46,,"        super(EnvEntry.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""env-entryType"".intern()), Text$JAXB.class, InjectionTarget$JAXB.class);"
247916,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/ErrorPage$JAXB.java,39,,"        super(ErrorPage.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""error-pageType"".intern()));"
247917,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/ErrorPage$JAXB.java,112,,"            } else if ((""location"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247918,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/ExceptionMapping$JAXB.java,41,,"        super(ExceptionMapping.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""exception-mappingType"".intern()), ConstructorParameterOrder$JAXB.class);"
247919,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/ExcludeList$JAXB.java,45,,"        super(ExcludeList.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""exclude-listType"".intern()), Text$JAXB.class, Method$JAXB.class);"
247920,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/ExcludeList$JAXB.java,110,,"            } else if ((""method"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247921,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesAbsoluteOrdering$JAXB.java,42,,"        super(FacesAbsoluteOrdering.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""faces-config-absoluteOrderingType"".intern()), FacesOrderingOthers$JAXB.class);"
247922,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesApplication$JAXB.java,51,,"        super(FacesApplication.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""faces-config-applicationType"".intern()), FacesSystemEventListener$JAXB.class, FacesLocaleConfig$JAXB.class, FacesApplicationResourceBundle$JAXB.class, FacesApplicationExtension$JAXB.class, FacesValidator$JAXB.class);"
247923,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesApplicationResourceBundle$JAXB.java,44,,"        super(FacesApplicationResourceBundle.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""faces-config-application-resource-bundleType"".intern()), Text$JAXB.class, Icon$JAXB.class);"
247924,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesApplicationResourceBundle$JAXB.java,117,,"            } else if ((""icon"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247925,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesApplicationResourceBundle$JAXB.java,142,,"            } else if ((""var"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247926,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesAttribute$JAXB.java,47,,"        super(FacesAttribute.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""faces-config-attributeType"".intern()), Text$JAXB.class, Icon$JAXB.class, FacesAttributeExtension$JAXB.class);"
247927,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesAttribute$JAXB.java,121,,"            } else if ((""icon"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247928,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesBehavior$JAXB.java,51,,"        super(FacesBehavior.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""faces-config-behaviorType"".intern()), Text$JAXB.class, Icon$JAXB.class, FacesAttribute$JAXB.class, FacesProperty$JAXB.class, FacesBehaviorExtension$JAXB.class);"
247929,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesClientBehaviorRenderer$JAXB.java,38,,"        super(FacesClientBehaviorRenderer.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""faces-config-client-behavior-rendererType"".intern()));"
247930,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesComponent$JAXB.java,53,,"        super(FacesComponent.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""faces-config-componentType"".intern()), Text$JAXB.class, Icon$JAXB.class, FacesFacet$JAXB.class, FacesAttribute$JAXB.class, FacesProperty$JAXB.class, FacesComponentExtension$JAXB.class);"
247931,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesConfig$JAXB.java,69,,"        super(FacesConfig.class, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""faces-config"".intern()), new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""faces-configType"".intern()), FacesApplication$JAXB.class, FacesOrdering$JAXB.class, FacesAbsoluteOrdering$JAXB.class, FacesFactory$JAXB.class, FacesComponent$JAXB.class, FacesConverter$JAXB.class, FacesManagedBean$JAXB.class, FacesNavigationRule$JAXB.class, FacesReferencedBean$JAXB.class, FacesRenderKit$JAXB.class, FacesLifecycle$JAXB.class, FacesValidator$JAXB.class, FacesBehavior$JAXB.class, FacesExtension$JAXB.class);"
247932,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesConfig$JAXB.java,133,,"            } else if ((""version"" == attribute.getLocalName()) && (("""" == attribute.getNamespace()) || (attribute.getNamespace() == null))) {"
247933,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesConfig$JAXB.java,231,,"            } else if ((""name"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247934,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesConverter$JAXB.java,51,,"        super(FacesConverter.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""faces-config-converterType"".intern()), Text$JAXB.class, Icon$JAXB.class, FacesAttribute$JAXB.class, FacesProperty$JAXB.class, FacesConverterExtension$JAXB.class);"
247935,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesFacet$JAXB.java,47,,"        super(FacesFacet.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""faces-config-facetType"".intern()), Text$JAXB.class, Icon$JAXB.class, FacesFacetExtension$JAXB.class);"
247936,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesFacet$JAXB.java,121,,"            } else if ((""icon"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247937,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesFactory$JAXB.java,43,,"        super(FacesFactory.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""faces-config-factoryType"".intern()), FacesFactoryExtension$JAXB.class);"
247938,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesLifecycle$JAXB.java,43,,"        super(FacesLifecycle.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""faces-config-lifecycleType"".intern()), FacesLifecycleExtension$JAXB.class);"
247939,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesListEntries$JAXB.java,43,,"        super(FacesListEntries.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""faces-config-list-entriesType"".intern()), FacesNullValue$JAXB.class);"
247940,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesLocaleConfig$JAXB.java,45,,"        super(FacesLocaleConfig.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""faces-config-locale-configType"".intern()), FacesDefaultLocale$JAXB.class, FacesSupportedLocale$JAXB.class);"
247941,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesManagedBean$JAXB.java,53,,"        super(FacesManagedBean.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""faces-config-managed-beanType"".intern()), Text$JAXB.class, Icon$JAXB.class, FacesManagedProperty$JAXB.class, FacesMapEntries$JAXB.class, FacesListEntries$JAXB.class, FacesManagedBeanExtension$JAXB.class);"
247942,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesManagedBean$JAXB.java,128,,"            } else if ((""icon"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247943,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesManagedProperty$JAXB.java,50,,"        super(FacesManagedProperty.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""faces-config-managed-propertyType"".intern()), Text$JAXB.class, Icon$JAXB.class, FacesMapEntries$JAXB.class, FacesNullValue$JAXB.class, FacesListEntries$JAXB.class);"
247944,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesManagedProperty$JAXB.java,123,,"            } else if ((""icon"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247945,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesManagedProperty$JAXB.java,169,,"            } else if ((""value"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247946,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesMapEntries$JAXB.java,43,,"        super(FacesMapEntries.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""faces-config-map-entriesType"".intern()), FacesMapEntry$JAXB.class);"
247947,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesMapEntry$JAXB.java,41,,"        super(FacesMapEntry.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""faces-config-map-entryType"".intern()), FacesNullValue$JAXB.class);"
247948,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesMapEntry$JAXB.java,97,,"            if ((""key"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247949,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesMapEntry$JAXB.java,114,,"            } else if ((""value"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247950,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesNavigationCase$JAXB.java,48,,"        super(FacesNavigationCase.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""faces-config-navigation-caseType"".intern()), Text$JAXB.class, Icon$JAXB.class, FacesFromAction$JAXB.class, FacesRedirect$JAXB.class);"
247951,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesNavigationCase$JAXB.java,121,,"            } else if ((""icon"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247952,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesNavigationRule$JAXB.java,49,,"        super(FacesNavigationRule.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""faces-config-navigation-ruleType"".intern()), Text$JAXB.class, Icon$JAXB.class, FacesNavigationCase$JAXB.class, FacesNavigationRuleExtension$JAXB.class);"
247953,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesOrdering$JAXB.java,40,,"        super(FacesOrdering.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""faces-config-orderingType"".intern()), FacesOrderingOrdering$JAXB.class);"
247954,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesOrderingOrdering$JAXB.java,43,,"        super(FacesOrderingOrdering.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""faces-config-ordering-orderingType"".intern()), FacesOrderingOthers$JAXB.class);"
247955,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesOrderingOrdering$JAXB.java,95,,"            if ((""name"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247956,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesProperty$JAXB.java,47,,"        super(FacesProperty.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""faces-config-propertyType"".intern()), Text$JAXB.class, Icon$JAXB.class, FacesPropertyExtension$JAXB.class);"
247957,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesProperty$JAXB.java,121,,"            } else if ((""icon"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247958,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesRedirect$JAXB.java,43,,"        super(FacesRedirect.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""faces-config-redirectType"".intern()), FacesRedirectViewParam$JAXB.class);"
247959,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesRedirectViewParam$JAXB.java,38,,"        super(FacesRedirectViewParam.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""faces-config-redirect-viewParamType"".intern()));"
247960,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesRedirectViewParam$JAXB.java,94,,"            if ((""name"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247961,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesRedirectViewParam$JAXB.java,107,,"            } else if ((""value"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247962,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesReferencedBean$JAXB.java,44,,"        super(FacesReferencedBean.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""faces-config-referenced-beanType"".intern()), Text$JAXB.class, Icon$JAXB.class);"
247963,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesRenderKit$JAXB.java,51,,"        super(FacesRenderKit.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""faces-config-render-kitType"".intern()), Text$JAXB.class, Icon$JAXB.class, FacesRenderer$JAXB.class, FacesClientBehaviorRenderer$JAXB.class, FacesRenderKitExtension$JAXB.class);"
247964,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesRenderer$JAXB.java,51,,"        super(FacesRenderer.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""faces-config-rendererType"".intern()), Text$JAXB.class, Icon$JAXB.class, FacesFacet$JAXB.class, FacesAttribute$JAXB.class, FacesRendererExtension$JAXB.class);"
247965,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesRenderer$JAXB.java,127,,"            } else if ((""icon"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247966,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesSystemEventListener$JAXB.java,38,,"        super(FacesSystemEventListener.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""faces-config-system-event-listenerType"".intern()));"
247967,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FacesValidator$JAXB.java,51,,"        super(FacesValidator.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""faces-config-validatorType"".intern()), Text$JAXB.class, Icon$JAXB.class, FacesAttribute$JAXB.class, FacesProperty$JAXB.class, FacesValidatorExtension$JAXB.class);"
247968,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/Filter$JAXB.java,47,,"        super(Filter.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""filterType"".intern()), Text$JAXB.class, Icon$JAXB.class, ParamValue$JAXB.class);"
247969,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/Filter$JAXB.java,121,,"            } else if ((""icon"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247970,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FilterMapping$JAXB.java,43,,"        super(FilterMapping.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""filter-mappingType"".intern()), Dispatcher$JAXB.class);"
247971,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/FormLoginConfig$JAXB.java,38,,"        super(FormLoginConfig.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""form-login-configType"".intern()));"
247972,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/Function$JAXB.java,47,,"        super(Function.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""functionType"".intern()), Text$JAXB.class, Icon$JAXB.class, TldExtension$JAXB.class);"
247973,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/Function$JAXB.java,121,,"            } else if ((""icon"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247974,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/Function$JAXB.java,133,,"            } else if ((""name"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247975,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/Function$JAXB.java,172,,"            } else if ((""example"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247976,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/Handler$JAXB.java,47,,"        super(Handler.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""handlerType"".intern()), Text$JAXB.class, Icon$JAXB.class, ParamValue$JAXB.class);"
247977,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/HandlerChain$JAXB.java,43,,"        super(HandlerChain.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""handler-chainType"".intern()), Handler$JAXB.class);"
247978,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/HandlerChain$JAXB.java,149,,"            } else if ((""handler"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247979,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/HandlerChains$JAXB.java,42,,"        super(HandlerChains.class, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""handler-chains"".intern()), new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""handler-chainsType"".intern()), HandlerChain$JAXB.class);"
247980,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/Icon$JAXB.java,38,,"        super(Icon.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""iconType"".intern()));"
247981,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/Icon$JAXB.java,87,,"            } else if ((""lang"" == attribute.getLocalName()) && (""http://www.w3.org/XML/1998/namespace"" == attribute.getNamespace())) {"
247982,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/InboundResourceadapter$JAXB.java,41,,"        super(InboundResourceadapter.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""inbound-resourceadapterType"".intern()), MessageAdapter$JAXB.class);"
247983,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/InitMethod$JAXB.java,41,,"        super(InitMethod.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""init-methodType"".intern()), NamedMethod$JAXB.class);"
247984,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/InjectionTarget$JAXB.java,38,,"        super(InjectionTarget.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""injection-targetType"".intern()));"
247985,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/Interceptor$JAXB.java,68,,"        super(Interceptor.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""interceptorType"".intern()), Text$JAXB.class, AroundInvoke$JAXB.class, AroundTimeout$JAXB.class, EnvEntry$JAXB.class, EjbRef$JAXB.class, EjbLocalRef$JAXB.class, ServiceRef$JAXB.class, ResourceRef$JAXB.class, ResourceEnvRef$JAXB.class, MessageDestinationRef$JAXB.class, PersistenceContextRef$JAXB.class, PersistenceUnitRef$JAXB.class, LifecycleCallback$JAXB.class, DataSource$JAXB.class);"
247986,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/InterceptorBinding$JAXB.java,47,,"        super(InterceptorBinding.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""interceptor-bindingType"".intern()), Text$JAXB.class, InterceptorOrder$JAXB.class, NamedMethod$JAXB.class);"
247987,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/InterceptorOrder$JAXB.java,40,,"        super(InterceptorOrder.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""interceptor-orderType"".intern()));"
247988,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/Interceptors$JAXB.java,44,,"        super(Interceptors.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""interceptorsType"".intern()), Text$JAXB.class, Interceptor$JAXB.class);"
247989,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/Interceptors$JAXB.java,109,,"            } else if ((""interceptor"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247990,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/JMSConnectionFactory$JAXB.java,43,,"        super(JMSConnectionFactory.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""jms-connection-factoryType"".intern()), Text$JAXB.class, Property$JAXB.class);"
247991,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/JavaWsdlMapping$JAXB.java,51,,"        super(JavaWsdlMapping.class, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""java-wsdl-mapping"".intern()), new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""java-wsdl-mappingType"".intern()), PackageMapping$JAXB.class, JavaXmlTypeMapping$JAXB.class, ExceptionMapping$JAXB.class, ServiceInterfaceMapping$JAXB.class, ServiceEndpointInterfaceMapping$JAXB.class);"
247992,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/JavaWsdlMapping$JAXB.java,105,,"            } else if ((""version"" == attribute.getLocalName()) && (("""" == attribute.getNamespace()) || (attribute.getNamespace() == null))) {"
247993,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/JavaXmlTypeMapping$JAXB.java,43,,"        super(JavaXmlTypeMapping.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""java-xml-type-mappingType"".intern()), VariableMapping$JAXB.class);"
247994,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/JspConfig$JAXB.java,45,,"        super(JspConfig.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""jsp-configType"".intern()), Taglib$JAXB.class, JspPropertyGroup$JAXB.class);"
247995,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/JspPropertyGroup$JAXB.java,45,,"        super(JspPropertyGroup.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""jsp-property-groupType"".intern()), Text$JAXB.class, Icon$JAXB.class);"
247996,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/JspPropertyGroup$JAXB.java,121,,"            } else if ((""icon"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247997,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/JspPropertyGroup$JAXB.java,156,,"                final Boolean elIgnored = (""1"".equals(elementReader.getElementAsString()) || ""true"".equals(elementReader.getElementAsString()));"
247998,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/JspPropertyGroup$JAXB.java,242,,"            } else if ((""buffer"" == elementReader.getLocalName()) && (""http://java.sun.com/xml/ns/javaee"" == elementReader.getNamespaceURI())) {"
247999,./TargetProjects/tomee/container/openejb-jee-accessors/src/main/java/org/apache/openejb/jee/License$JAXB.java,42,,"        super(License.class, null, new QName(""http://java.sun.com/xml/ns/javaee"".intern(), ""licenseType"".intern()), Text$JAXB.class);"
