Pattern ID,Pattern,Context,"# of Eq list","# of Frq",complexity,Num of Warnings in Method,NCL
1,"private final Map<String, Map<String, List<SharePolicy>>> typeToSharePolicies = Collections.synchronizedMap(new HashMap<String, Map<String, List<SharePolicy>>>());","private final Map<String,Map<String,List<SharePolicy>>> typeToSharePolicies=Collections.synchronizedMap(new HashMap<String,Map<String,List<SharePolicy>>>());
",0,665937,17,1050997,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
2,private final int[][] _sequentialDocIds = new int[32][NUM_DOC_IDS];,"private final int[][] _sequentialDocIds=new int[32][NUM_DOC_IDS];
",0,178433,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
3,"private Iterator<Entry<KeyTuple, TupleMap<FunctionContext[]>>> iterator = null;","private Iterator<Entry<KeyTuple,TupleMap<FunctionContext[]>>> iterator=null;
",0,50781,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
4,"private final Callback<ConsumerRecord<byte[], byte[]>> consumedCallback = new Callback<ConsumerRecord<byte[], byte[]>>() {","private final Callback<ConsumerRecord<byte[],byte[]>> consumedCallback=new Callback<ConsumerRecord<byte[],byte[]>>(){
  @Override public void onCompletion(  Throwable error,  ConsumerRecord<byte[],byte[]> record){
    ByteBuffer key=record.key() != null ? ByteBuffer.wrap(record.key()) : null;
    ByteBuffer value=record.value() != null ? ByteBuffer.wrap(record.value()) : null;
    data.put(key,value);
  }
}
;
",0,2487,15,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
5,"private Collection<Entry<Predicate<AnnotatedType<?>>, BiConsumer<BeanManager, ProcessAnnotatedType<?>>>> forwardingObservers = new ArrayList<>();","private Collection<Entry<Predicate<AnnotatedType<?>>,BiConsumer<BeanManager,ProcessAnnotatedType<?>>>> forwardingObservers=new ArrayList<>();
",0,6582,12,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
6,"protected BinaryFunction<Map<K, V>, Object[], V> DEFAULT_ON_PUT = new BinaryFunction<Map<K, V>, Object[], V>() {","protected BinaryFunction<Map<K,V>,Object[],V> DEFAULT_ON_PUT=new BinaryFunction<Map<K,V>,Object[],V>(){
  public V evaluate(  Map<K,V> a,  Object[] b){
    Map<K,V> map=a;
    K key=(K)Array.get(b,0);
    V value=(V)Array.get(b,1);
    return map.put(key,value);
  }
}
;
",0,491,16,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
7,private final AtomicReference<CreateModable<ACLBackgroundPathAndBytesable<String>>> createMethod = new AtomicReference<CreateModable<ACLBackgroundPathAndBytesable<String>>>(null);,"private final AtomicReference<CreateModable<ACLBackgroundPathAndBytesable<String>>> createMethod=new AtomicReference<CreateModable<ACLBackgroundPathAndBytesable<String>>>(null);
",0,407,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
8,private String largeString = UUID.randomUUID().toString() + UUID.randomUUID().toString() +,"private String largeString=UUID.randomUUID().toString() + UUID.randomUUID().toString() + UUID.randomUUID().toString()+ UUID.randomUUID().toString()+ UUID.randomUUID().toString()+ UUID.randomUUID().toString()+ UUID.randomUUID().toString()+ UUID.randomUUID().toString();
",0,752,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
9,"private final Map<InetSocketAddress, ConnectivitySettings> lastKnownSettings = Collections.synchronizedMap(new HashMap<InetSocketAddress, ConnectivitySettings>(2));","private final Map<InetSocketAddress,ConnectivitySettings> lastKnownSettings=Collections.synchronizedMap(new HashMap<InetSocketAddress,ConnectivitySettings>(2));
",0,6314,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
10,private final Set<ObjectName> registeredMBeans = new ConcurrentHashMap<>().newKeySet();,"private final Set<ObjectName> registeredMBeans=new ConcurrentHashMap<>().newKeySet();
",0,129,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
11,"private ArgumentAcceptingOptionSpec<String> newPathArgu = parser().accepts(""path"", ""path of the new state storage"").withRequiredArg().ofType(String.class).describedAs(""path"");","private ArgumentAcceptingOptionSpec<String> newPathArgu=parser().accepts(""path"",""path of the new state storage"").withRequiredArg().ofType(String.class).describedAs(""path"");
",0,3393,13,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
12,"private List<Function<Path, Boolean>> hooks = Lists.newArrayList(Collections.singleton(loggingHook()));","private List<Function<Path,Boolean>> hooks=Lists.newArrayList(Collections.singleton(loggingHook()));
",0,18,11,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
13,"final BlockingQueue<AbstractMap.SimpleEntry<String, String>> messageQ = new ArrayBlockingQueue<AbstractMap.SimpleEntry<String, String>>(10);","final BlockingQueue<AbstractMap.SimpleEntry<String,String>> messageQ=new ArrayBlockingQueue<AbstractMap.SimpleEntry<String,String>>(10);
",0,9305,11,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
14,"private final BTreeNode.Marshaller<Key, Value> marshaller = new BTreeNode.Marshaller<Key, Value>(this);","private final BTreeNode.Marshaller<Key,Value> marshaller=new BTreeNode.Marshaller<Key,Value>(this);
",0,32,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
15,private volatile Predicate<ConstraintD<?>> groups = c -> true;,"private volatile Predicate<ConstraintD<?>> groups=c -> true;
",0,408,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
16,private long olderThanTimestamp = System.currentTimeMillis() - TimeUnit.DAYS.toMillis(3);,"private long olderThanTimestamp=System.currentTimeMillis() - TimeUnit.DAYS.toMillis(3);
",0,2880,8,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
17,"private Map<ScannerIterator,Long> iters = new LinkedHashMap<>(MAX_ENTRIES + 1, .75F, true) {","private Map<ScannerIterator,Long> iters=new LinkedHashMap<>(MAX_ENTRIES + 1,.75F,true){
  private static final long serialVersionUID=1L;
  @Override public boolean removeEldestEntry(  Map.Entry<ScannerIterator,Long> eldest){
    return size() > MAX_ENTRIES;
  }
}
;
",0,2234,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
18,"private Capture<Callback<ConsumerRecord<byte[], byte[]>>> capturedConsumedCallback = EasyMock.newCapture();","private Capture<Callback<ConsumerRecord<byte[],byte[]>>> capturedConsumedCallback=EasyMock.newCapture();
",0,504,11,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
19,"private final Map<String, Queryable<Tuple2<?, Partition<Tuple2<T, Long>>>>> allPartitionCache = new ConcurrentHashMap<>(4);","private final Map<String,Queryable<Tuple2<?,Partition<Tuple2<T,Long>>>>> allPartitionCache=new ConcurrentHashMap<>(4);
",0,144,14,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
20,"protected double[][] testData3x4 = { { 12, -51, 4, 1 }, { 6, 167, -68, 2 }, { -4, 24, -41, 3 } };","protected double[][] testData3x4={{12,-51,4,1},{6,167,-68,2},{-4,24,-41,3}};
",0,6019,17,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
21,"private long _pollIntervalForPolledRunnable = Long.getLong(""org.apache.ode.polledRunnable.pollInterval"", 10 * 60 * 1000);","private long _pollIntervalForPolledRunnable=Long.getLong(""org.apache.ode.polledRunnable.pollInterval"",10 * 60 * 1000);
",0,645,9,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-extendedOperands, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
22,"private Map<Map<String, Object>, TransformationStep> mapping = new TreeMap<>((map1, map2) -> {","private Map<Map<String,Object>,TransformationStep> mapping=new TreeMap<>((map1,map2) -> {
  Long value1=(Long)map1.getOrDefault(Constants.SERVICE_RANKING,(Long)0L);
  Long value2=(Long)map2.getOrDefault(Constants.SERVICE_RANKING,(Long)0L);
  if (value1 - value2 == 0) {
    value1=(Long)map1.get(Constants.SERVICE_ID);
    value2=(Long)map2.get(Constants.SERVICE_ID);
    return value2.compareTo(value1);
  }
  return value1.compareTo(value2);
}
);
",0,23,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
23,"private @Nullable Map<byte[], List<Long>> configKey4 = null;","private @Nullable Map<byte[],List<Long>> configKey4=null;
",0,4123,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
24,"private final Map<CacheClearPolicy, Map<Object, Object>> userCache = new EnumMap<CacheClearPolicy, Map<Object, Object>>(CacheClearPolicy.class);","private final Map<CacheClearPolicy,Map<Object,Object>> userCache=new EnumMap<CacheClearPolicy,Map<Object,Object>>(CacheClearPolicy.class);
",0,164,14,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
25,"CreditWindowFilter<Tuple2<Session<Delivery>, Delivery>> credit_window_filter = new CreditWindowFilter<Tuple2<Session<Delivery>, Delivery>>(consumer_sink.flatMap(Scala2Java.toScala(new Fn1<Tuple2<Session<Delivery>, Delivery>, Option<Request>>() {","CreditWindowFilter<Tuple2<Session<Delivery>,Delivery>> credit_window_filter=new CreditWindowFilter<Tuple2<Session<Delivery>,Delivery>>(consumer_sink.flatMap(Scala2Java.toScala(new Fn1<Tuple2<Session<Delivery>,Delivery>,Option<Request>>(){
  public Option<Request> apply(  Tuple2<Session<Delivery>,Delivery> event){
    queue.assertExecuting();
    Session<Delivery> session=event._1();
    final Delivery delivery=event._2();
    session_manager.delivered(session,delivery.size());
    SimpleAddress topic=delivery.sender().head().simple();
    QoS qos=addresses.get(topic);
    if (qos == null) {
      qos=Scala2Java.<QoS>head(wildcards.get(topic.path()));
    }
    if (qos == null) {
      acked(delivery,Consumed$.MODULE$);
      return Scala2Java.none();
    }
 else {
      PUBLISH publish=new PUBLISH();
      publish.topicName(new UTF8Buffer(destination_parser.encode_destination(delivery.sender().head())));
      if (delivery.redeliveries() > 0) {
        publish.dup(true);
      }
      if (delivery.message().codec() == RawMessageCodec$.MODULE$) {
        publish.payload(((RawMessage)delivery.message()).payload());
      }
 else {
        if (publish_body) {
          try {
            publish.payload(delivery.message().getBodyAs(Buffer.class));
          }
 catch (          FilterException e) {
            log.error(e,""Internal Server Error: Could not covert message body to a Buffer"");
          }
        }
 else {
          publish.payload(delivery.message().encoded());
        }
      }
      handler.messages_sent.incrementAndGet();
      UnitFn1<DeliveryResult> ack=new UnitFn1<DeliveryResult>(){
        @Override public void call(        DeliveryResult result){
          acked(delivery,result);
        }
      }
;
      if (delivery.ack() != null && (qos != QoS.AT_MOST_ONCE)) {
        publish.qos(qos);
        short id=to_message_id(clean_session ? get_next_seq_id() : delivery.seq());
        publish.messageId(id);
        Request request=new Request(id,publish,ack);
        Request prev=in_flight_publishes.put(id,request);
        if (prev != null) {
          if (prev.message == null) {
            in_flight_publishes.remove(id);
            acked(delivery,Consumed$.MODULE$);
          }
 else {
            handler.async_die(""Client not acking regularly."",null);
          }
        }
        return Scala2Java.some(request);
      }
 else {
        publish.qos(QoS.AT_MOST_ONCE);
        return Scala2Java.some(new Request((short)0,publish,ack));
      }
    }
  }
}
)),SessionDeliverySizer.INSTANCE);
",0,56,22,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-arguments, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
26,private final byte[] data = new byte[1024 * 1024 * 2 + 1];,"private final byte[] data=new byte[1024 * 1024 * 2 + 1];
",0,6,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, InfixExpression-leftOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, InfixExpression-leftOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-extendedOperands, InfixExpression-leftOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
27,final long[] columnTotals = new long[1 + endpoints.size() * 3];,"final long[] columnTotals=new long[1 + endpoints.size() * 3];
",0,447,10,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, InfixExpression-rightOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, InfixExpression-rightOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, InfixExpression-rightOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
28,"private final Iterator<Iterator<Map.Entry<Range<Token>, T>>> iterators;","private final Iterator<Iterator<Map.Entry<Range<Token>,T>>> iterators;
",0,106,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
29,"@SuppressWarnings({""rawtypes"",""unchecked""}) private FST.Arc<BytesRef>[] arcs = new FST.Arc[5];","@SuppressWarnings({""rawtypes"",""unchecked""}) private FST.Arc<BytesRef>[] arcs=new FST.Arc[5];
",0,345,11,,"SimpleName(SingleMemberAnnotation-typeName, FieldDeclaration-modifiers, ),
StringLiteral(ArrayInitializer-expressions, SingleMemberAnnotation-value, FieldDeclaration-modifiers, ),
StringLiteral(ArrayInitializer-expressions, SingleMemberAnnotation-value, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
30,"private final String APP_CLASS = Test.class.getPackage().getName() + "".""","private final String APP_CLASS=Test.class.getPackage().getName() + ""."" + APP;
",0,816,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
31,private EntryCache cache = when(mock(EntryCache.class).getEntries(anyString())).thenReturn(Iterators.singletonIterator(mock(PermissionEntry.class))).getMock();,"private EntryCache cache=when(mock(EntryCache.class).getEntries(anyString())).thenReturn(Iterators.singletonIterator(mock(PermissionEntry.class))).getMock();
",0,298,14,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
32,"final IteratorSetting setting = new IteratorSetting(100, ""slow"", SlowIterator.class.getName(),","final IteratorSetting setting=new IteratorSetting(100,""slow"",SlowIterator.class.getName(),Collections.singletonMap(""sleepTime"",""200""));
",0,84,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
33,"private final byte[] splitAt5 = (""1234"" + (char) 0x00 + ""56789"").getBytes();","private final byte[] splitAt5=(""1234"" + (char)0x00 + ""56789"").getBytes();
",0,144,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, ParenthesizedExpression-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, InfixExpression-rightOperand, ParenthesizedExpression-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(CastExpression-expression, InfixExpression-rightOperand, ParenthesizedExpression-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, ParenthesizedExpression-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
34,"private final byte[] routingKey = (""routing-key-"" + System.currentTimeMillis()).getBytes(UTF_8);","private final byte[] routingKey=(""routing-key-"" + System.currentTimeMillis()).getBytes(UTF_8);
",0,123,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, ParenthesizedExpression-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-rightOperand, ParenthesizedExpression-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, ParenthesizedExpression-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
35,"private HashMap<String, Pair<String, ConfigKey<?>>> _allKeys = new HashMap<String, Pair<String, ConfigKey<?>>>(1007);","private HashMap<String,Pair<String,ConfigKey<?>>> _allKeys=new HashMap<String,Pair<String,ConfigKey<?>>>(1007);
",0,227,15,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
36,"private final Materialized<Long, String, KeyValueStore<Bytes, byte[]>> materialized = Materialized.<Long, String, KeyValueStore<Bytes, byte[]>>as(storeName)","private final Materialized<Long,String,KeyValueStore<Bytes,byte[]>> materialized=Materialized.<Long,String,KeyValueStore<Bytes,byte[]>>as(storeName).withKeySerde(Serdes.Long()).withValueSerde(Serdes.String()).withCachingDisabled().withLoggingDisabled();
",0,95,19,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, MethodInvocation-typeArguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, MethodInvocation-typeArguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, MethodInvocation-typeArguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, MethodInvocation-typeArguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
37,"private Collection<Component> group1Components = Arrays.asList(new Component(""component1""), new Component(""component2""), new Component(""component3""));","private Collection<Component> group1Components=Arrays.asList(new Component(""component1""),new Component(""component2""),new Component(""component3""));
",0,62,12,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
38,"private SortedSetMultimap<K, Window.SessionWindow<K>> keyToWindows = Multimaps.newSortedSetMultimap(new HashMap<K, Collection<Window.SessionWindow<K>>>(), new Supplier<SortedSet<Window.SessionWindow<K>>>()","private SortedSetMultimap<K,Window.SessionWindow<K>> keyToWindows=Multimaps.newSortedSetMultimap(new HashMap<K,Collection<Window.SessionWindow<K>>>(),new Supplier<SortedSet<Window.SessionWindow<K>>>(){
  @Override public SortedSet<Window.SessionWindow<K>> get(){
    return new TreeSet<>();
  }
}
);
",0,439,17,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
39,"private Cache<Long,RequestDetails> auditlogRequestCache = CacheBuilder.newBuilder().expireAfterAccess(60, TimeUnit.MINUTES).concurrencyLevel(4).build();","/** 
 * Cache for auditlog. It stores a  {@link RequestDetails} object for every requests.{@link RequestDetails} contains the previous status of the request and a map for tasks.A task has a  {@link RequestDetails.Component} key and the value of that is the previous status of the task.{@link RequestDetails.Component} contains the component name and the host name
 */
private Cache<Long,RequestDetails> auditlogRequestCache=CacheBuilder.newBuilder().expireAfterAccess(60,TimeUnit.MINUTES).concurrencyLevel(4).build();
",0,69,13,,"Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
"
40,"private volatile Cache<String, TimelineMetric> metricsPostCache = CacheBuilder.newBuilder().expireAfterAccess(cacheExpireTimeMinutesDefault, TimeUnit.MINUTES).build();","private volatile Cache<String,TimelineMetric> metricsPostCache=CacheBuilder.newBuilder().expireAfterAccess(cacheExpireTimeMinutesDefault,TimeUnit.MINUTES).build();
",0,205,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
41,"private final SessionId recoveredDurableSubSessionId = new SessionId(new ConnectionId(""OFFLINE""), recoveredDurableSubIdGenerator.getNextSequenceId());","private final SessionId recoveredDurableSubSessionId=new SessionId(new ConnectionId(""OFFLINE""),recoveredDurableSubIdGenerator.getNextSequenceId());
",0,624,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
42,private final long[] _lastNotificationTimes = new long[NotificationCheck.values().length];,"private final long[] _lastNotificationTimes=new long[NotificationCheck.values().length];
",0,5,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, FieldAccess-expression, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, FieldAccess-expression, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(FieldAccess-name, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
43,"private final byte[] encodeBytes = new byte[] { 32, 104, -61, -87, 33, 32, -61, -96, -61, -88, -61, -76, 117, 32, 33, 33, 33 };","private final byte[] encodeBytes=new byte[]{32,104,-61,-87,33,32,-61,-96,-61,-88,-61,-76,117,32,33,33,33};
",0,256,24,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
44,"ThreadFactory tFactory = new ActiveMQThreadFactory(""SoakTest"" + System.identityHashCode(this), false, JournalCleanupCompactStressTest.class.getClassLoader());","ThreadFactory tFactory=new ActiveMQThreadFactory(""SoakTest"" + System.identityHashCode(this),false,JournalCleanupCompactStressTest.class.getClassLoader());
",0,1,10,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(MethodInvocation-arguments, InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
45,"private String[][] string2dArray = new String[][] {new String[] {""1"", ""2"", ""3""}, new String[] {""4"",""5"",""6""}};","private String[][] string2dArray=new String[][]{new String[]{""1"",""2"",""3""},new String[]{""4"",""5"",""6""}};
",0,784,18,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
46,private List<Class<? extends Annotation>> annotations = new ArrayList<>(singletonList(FiltersOn.class));,"private List<Class<? extends Annotation>> annotations=new ArrayList<>(singletonList(FiltersOn.class));
",0,46,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
47,protected final long _now = (System.currentTimeMillis() * 1000000) + (System.nanoTime() % 1000000);,"protected final long _now=(System.currentTimeMillis() * 1000000) + (System.nanoTime() % 1000000);
",0,12,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ParenthesizedExpression-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
48,private final TreeSet<SSTableReader> [] levels = new TreeSet[MAX_LEVEL_COUNT - 1];,"private final TreeSet<SSTableReader>[] levels=new TreeSet[MAX_LEVEL_COUNT - 1];
",0,1064,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
49,int port = DefaultConfiguration.getInstance().getPort(Property.TSERV_CLIENTPORT)[0];,"@Parameter(names=""--port"",description=""port number to use"") int port=DefaultConfiguration.getInstance().getPort(Property.TSERV_CLIENTPORT)[0];
",0,0,7,,"PrimitiveType(),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, ArrayAccess-array, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ArrayAccess-array, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, ArrayAccess-array, VariableDeclarationFragment-initializer, ),
QualifiedName(MethodInvocation-arguments, ArrayAccess-array, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayAccess-index, VariableDeclarationFragment-initializer, ),
"
50,"private NavigableMap<byte[], NavigableMap<byte[], NavigableMap<byte[], NavigableMap<Long, byte[]>>>> data = new TreeMap<>(","private NavigableMap<byte[],NavigableMap<byte[],NavigableMap<byte[],NavigableMap<Long,byte[]>>>> data=new TreeMap<>(Bytes.BYTES_COMPARATOR);
",0,110,16,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
51,"protected final Map<Class<? extends Name<?>>, Param<?>> freeParams = new MonotonicHashMap<>();","protected final Map<Class<? extends Name<?>>,Param<?>> freeParams=new MonotonicHashMap<>();
",0,23,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
52,"private final Class<?>[] COLUMN_TYPES = new Class<?>[] {Boolean.class, JsfComponentImplementation.class, JButton.class};","private final Class<?>[] COLUMN_TYPES=new Class<?>[]{Boolean.class,JsfComponentImplementation.class,JButton.class};
",0,87,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
WildcardType(ParameterizedType-typeArguments, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
53,"private final AtomicReference<Function<String, Predicate<CharSequence>>> regexFactory = new AtomicReference<>(this::newRegexFactory);","private final AtomicReference<Function<String,Predicate<CharSequence>>> regexFactory=new AtomicReference<>(this::newRegexFactory);
",0,32,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(ExpressionMethodReference-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ExpressionMethodReference-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
54,"private Descriptor m_range = new Descriptor(""tID"", 123, new SortedRangeSet(""1-3""));","private Descriptor m_range=new Descriptor(""tID"",123,new SortedRangeSet(""1-3""));
",0,199,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
55,"private final SimpleModule module = new SimpleModule(""MyModule"", new Version(1, 0, 0, null));","private final SimpleModule module=new SimpleModule(""MyModule"",new Version(1,0,0,null));
",0,79,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
56,private final double[] gradient = new double[(BSize+1)*8];,"private final double[] gradient=new double[(BSize + 1) * 8];
",0,9,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
57,"@NotNull private final HashMap<String, UsergridQuerySortOrder> orderClauses = new HashMap<>();","@NotNull private final HashMap<String,UsergridQuerySortOrder> orderClauses=new HashMap<>();
",0,2952,8,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
58,{ private Shape[][][] shapes = new Shape[10][10][];,"private Shape[][][] shapes=new Shape[10][10][];
",0,63,12,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
59,"private final TimeoutListSupplier illegalTimeoutsList = new TimeoutListSupplier(Arrays.asList(5, 2, -3, 6));","private final TimeoutListSupplier illegalTimeoutsList=new TimeoutListSupplier(Arrays.asList(5,2,-3,6));
",0,102,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
60,protected final BrokerId localBrokerPath[] = new BrokerId[]{null};,"protected final BrokerId localBrokerPath[]=new BrokerId[]{null};
",0,705,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
61,private SortedSet<File> _registeredFiles = new TreeSet<File>(Collections.reverseOrder(null));,"private SortedSet<File> _registeredFiles=new TreeSet<File>(Collections.reverseOrder(null));
",0,62,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
62,"private final Set<Option> OPTIONS = new HashSet<Option>(Arrays.asList(CATEGORY_ID, CATEGORY_NAME, CATEGORY_PROJECTS, CATEGORY_ROOT_DIR, CACHE_TARGET, INFO));","private final Set<Option> OPTIONS=new HashSet<Option>(Arrays.asList(CATEGORY_ID,CATEGORY_NAME,CATEGORY_PROJECTS,CATEGORY_ROOT_DIR,CACHE_TARGET,INFO));
",0,23,15,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
63,private Class<?>[] paramTypes = new Class<?>[]{};,"private Class<?>[] paramTypes=new Class<?>[]{};
",0,80,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
WildcardType(ParameterizedType-typeArguments, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ArrayInitializer(ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
64,"private Iterator<Entry<K, MapDifference.ValueDifference<T >>> iterator = null;","private Iterator<Entry<K,MapDifference.ValueDifference<T>>> iterator=null;
",0,811,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
65,"private Object[] argsArray = new Object[] {(byte)1, (char)'2', (short)3, (int)4, (long)5, (float)6.0, (double)7.0, true, ""mystring""};","private Object[] argsArray=new Object[]{(byte)1,(char)'2',(short)3,(int)4,(long)5,(float)6.0,(double)7.0,true,""mystring""};
",0,213,22,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(CastExpression-expression, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(CastExpression-expression, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(CastExpression-expression, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(CastExpression-expression, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(CastExpression-expression, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(CastExpression-expression, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(CastExpression-expression, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
66,"protected ProtocolConverter protocolConverter = new ProtocolConverter(this, null);","protected ProtocolConverter protocolConverter=new ProtocolConverter(this,null);
",0,0,6,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
67,"private final boolean cacheResources = ""true"".equals(SystemInstance.get().getProperty(""openejb.http.resource.cache"", ""false""));","private final boolean cacheResources=""true"".equals(SystemInstance.get().getProperty(""openejb.http.resource.cache"",""false""));
",0,32,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
68,DataByteArrayOutputStream buff = cachedBuffers[flip ^= 1];,"DataByteArrayOutputStream buff=cachedBuffers[flip^=1];
",0,0,5,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(ArrayAccess-array, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(Assignment-leftHandSide, ArrayAccess-index, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(Assignment-rightHandSide, ArrayAccess-index, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
69,"private byte[] chars = new byte[] {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'};","private byte[] chars=new byte[]{'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f'};
",0,157,22,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
70,"private final FilenameFilter inputConfigFileFilter = (dir, name) -> name.startsWith(""input.config-"") && name.endsWith("".json"");","private final FilenameFilter inputConfigFileFilter=(dir,name) -> name.startsWith(""input.config-"") && name.endsWith("".json"");
",0,120,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, InfixExpression-leftOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-rightOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, InfixExpression-rightOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
71,"private final ActiveMQQueue destination = new ActiveMQQueue(""queue-"" + QueueOptimizedDispatchExceptionTest.class.getSimpleName());","private final ActiveMQQueue destination=new ActiveMQQueue(""queue-"" + QueueOptimizedDispatchExceptionTest.class.getSimpleName());
",0,3,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
72,"private HostsType namenodeHosts = HostsType.highAvailability(""h1"", ""h2"", newLinkedHashSet(Arrays.asList(""h1"", ""h2"")));","private HostsType namenodeHosts=HostsType.highAvailability(""h1"",""h2"",newLinkedHashSet(Arrays.asList(""h1"",""h2"")));
",0,15,12,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
73,private final long expected = COUNT * (COUNT - 1) / 2L;,"private final long expected=COUNT * (COUNT - 1) / 2L;
",0,8,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-rightOperand, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ParenthesizedExpression-expression, InfixExpression-rightOperand, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
74,CountDownLatch redeliveryConsumerLatch = new CountDownLatch(((2 * numMessages) * numDurableSubs) - 1);,"CountDownLatch redeliveryConsumerLatch=new CountDownLatch(((2 * numMessages) * numDurableSubs) - 1);
",0,0,7,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
75,"ClassCache<List<Constructor<?>>> cache = new ConcurrentHashMapClassCache<List<Constructor<?>>>(new CacheEntryFactory<Class<?>, List<Constructor<?>>>( )","ClassCache<List<Constructor<?>>> cache=new ConcurrentHashMapClassCache<List<Constructor<?>>>(new CacheEntryFactory<Class<?>,List<Constructor<?>>>(){
  public List<Constructor<?>> create(  Class<?> key) throws CacheException {
    count++;
    return Arrays.<Constructor<?>>asList(key.getConstructors());
  }
}
);
",0,1,15,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
76,"private final Thread producer = new Thread(new Producer(), Thread.currentThread().getName() + "" - Producer Thread"");","private final Thread producer=new Thread(new Producer(),Thread.currentThread().getName() + "" - Producer Thread"");
",0,121,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
77,private Packet markPacket = new ByteArrayPacket(new byte[Location.SERIALIZED_SIZE]);,"private Packet markPacket=new ByteArrayPacket(new byte[Location.SERIALIZED_SIZE]);
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayCreation-dimensions, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
78,"private final AtomicReference<Data> children = new AtomicReference<Data>(new Data(Lists.<String>newArrayList(), 0));","private final AtomicReference<Data> children=new AtomicReference<Data>(new Data(Lists.<String>newArrayList(),0));
",0,47,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
79,"SessionSinkMux<Delivery> session_manager = new SessionSinkMux<Delivery>(credit_window_filter, queue, Delivery$.MODULE$, Integer.MAX_VALUE / 2, receive_buffer_size()) {","SessionSinkMux<Delivery> session_manager=new SessionSinkMux<Delivery>(credit_window_filter,queue,Delivery$.MODULE$,Integer.MAX_VALUE / 2,receive_buffer_size()){
  @Override public long time_stamp(){
    return host().broker().now();
  }
}
;
",0,0,11,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
80,"java.util.HashMap<UTF8Buffer, Tuple2<Topic, BindAddress>> subscriptions = new java.util.HashMap<UTF8Buffer, Tuple2<Topic, BindAddress>>();","java.util.HashMap<UTF8Buffer,Tuple2<Topic,BindAddress>> subscriptions=new java.util.HashMap<UTF8Buffer,Tuple2<Topic,BindAddress>>();
",0,0,11,,"QualifiedName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
81,private String            groupingExpr[] = new String[MAX_GROUPING_COLS+1];,"private String groupingExpr[]=new String[MAX_GROUPING_COLS + 1];
",0,160,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
82,private volatile PriorityHolder<E>[] priorityHolders = newPrioritySetArrayInstance(0);,"private volatile PriorityHolder<E>[] priorityHolders=newPrioritySetArrayInstance(0);
",0,9,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
83,"private final Map<String, org.apache.hadoop.mapred.RecordWriter<? super WritableComparable<?>, ? super Writable>> baseDynamicWriters;","private final Map<String,org.apache.hadoop.mapred.RecordWriter<? super WritableComparable<?>,? super Writable>> baseDynamicWriters;
",0,71,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
84,ThreadLocal<GregorianCalendar> calendarThreadLocal = ThreadLocal.withInitial(() -> new GregorianCalendar());,"ThreadLocal<GregorianCalendar> calendarThreadLocal=ThreadLocal.withInitial(() -> new GregorianCalendar());
",0,0,6,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, LambdaExpression-body, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
85,Configuration customConfiguration = new ConfigurationImpl().setPersistenceEnabled(false).setSecurityEnabled(true).addQueueConfiguration(queueConfiguration);,"Configuration customConfiguration=new ConfigurationImpl().setPersistenceEnabled(false).setSecurityEnabled(true).addQueueConfiguration(queueConfiguration);
",0,4,9,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
86,private List<Reference<?>> refList = new ArrayList<Reference<?>>(NUM_OBJECTS * 3);,"private List<Reference<?>> refList=new ArrayList<Reference<?>>(NUM_OBJECTS * 3);
",0,2,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
87,"protected final Deque<Map.Entry<Buffer, Consumer<? super Throwable>>> pendingQueue = new LinkedList<>();","protected final Deque<Map.Entry<Buffer,Consumer<? super Throwable>>> pendingQueue=new LinkedList<>();
",0,14,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
88,"private final String fname = (new File(""target"")).isDirectory() ? ""target/"" : """";","private final String fname=(new File(""target"")).isDirectory() ? ""target/"" : """";
",0,4,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ParenthesizedExpression-expression, MethodInvocation-expression, ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, ParenthesizedExpression-expression, MethodInvocation-expression, ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ConditionalExpression-elseExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
89,protected final ArtemisCloseable unlockCloseable = storageManagerLock.readLock()::unlock;,"protected final ArtemisCloseable unlockCloseable=storageManagerLock.readLock()::unlock;
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ExpressionMethodReference-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ExpressionMethodReference-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ExpressionMethodReference-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
90,"private HostVO host = new HostVO(1L, ""some.host"",Host.Type.Routing, hostIp, ""255.255.255.0"", null, null, null, null, null, null, null, null, null, null,","private HostVO host=new HostVO(1L,""some.host"",Host.Type.Routing,hostIp,""255.255.255.0"",null,null,null,null,null,null,null,null,null,null,UUID.randomUUID().toString(),Status.Up,""1.0"",null,null,1L,null,0,0,""aa"",0,Storage.StoragePoolType.NetworkFilesystem);
",0,204,19,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
91,"final Lazy<Map<OverriddenAnnotationSpecifier, Map<String, String>>> overrides = new Lazy<>(HashMap::new);","final Lazy<Map<OverriddenAnnotationSpecifier,Map<String,String>>> overrides=new Lazy<>(HashMap::new);
",0,15,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, CreationReference-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
92,"private final PriorityLinkedList<MessageReference> messageReferences = new PriorityLinkedListImpl<>(QueueImpl.NUM_PRIORITIES, MessageReferenceImpl.getIDComparator());","private final PriorityLinkedList<MessageReference> messageReferences=new PriorityLinkedListImpl<>(QueueImpl.NUM_PRIORITIES,MessageReferenceImpl.getIDComparator());
",0,2,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
93,"private volatile SoftReference<ConcurrentHashMap<Long, ServiceReferenceDTO[]>> dtoCache = new SoftReference<>(new ConcurrentHashMap<Long, ServiceReferenceDTO[]>());","private volatile SoftReference<ConcurrentHashMap<Long,ServiceReferenceDTO[]>> dtoCache=new SoftReference<>(new ConcurrentHashMap<Long,ServiceReferenceDTO[]>());
",0,84,13,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
94,"final String url = ""vm:","final String url=""vm://"" + DurableSubProcessTest.this.getName() + ""?""+ ""jms.redeliveryPolicy.maximumRedeliveries=2&jms.redeliveryPolicy.initialRedeliveryDelay=500&""+ ""jms.producerWindowSize=20971520&jms.prefetchPolicy.all=100&""+ ""jms.copyMessageOnSend=false&jms.disableTimeStampsByDefault=false&""+ ""jms.alwaysSyncSend=true&jms.dispatchAsync=false&""+ ""jms.watchTopicAdvisories=false&""+ ""waitForStart=200&create=false"";
",0,7,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ThisExpression-qualifier, MethodInvocation-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
95,"final Buffer PREFIX = new Buffer(new byte[]{'A', 'M', 'Q', 'P'});","final Buffer PREFIX=new Buffer(new byte[]{'A','M','Q','P'});
",0,13,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
96,private final DiscoveryGroupConfiguration groupConfiguration = new DiscoveryGroupConfiguration().setBroadcastEndpointFactory(new UDPBroadcastEndpointFactory().setGroupAddress(getUDPDiscoveryAddress()).setGroupPort(getUDPDiscoveryPort()));,"private final DiscoveryGroupConfiguration groupConfiguration=new DiscoveryGroupConfiguration().setBroadcastEndpointFactory(new UDPBroadcastEndpointFactory().setGroupAddress(getUDPDiscoveryAddress()).setGroupPort(getUDPDiscoveryPort()));
",0,111,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
97,"protected final String TEXT_54 = ""\"");"" + NL + ""\t}"" + NL + """" + NL + ""\t"" + NL + ""\tpublic void register(HelperContext scope) "" + NL + ""\t{"" + NL + ""\t\tif(scope == null) {"" + NL + ""\t\t\tthrow new IllegalArgumentException(\""Scope can not be null\"");"" + NL + ""\t\t}"" + NL + """" + NL + ""\t\tif (((HelperContextImpl)scope).getExtendedMetaData().getPackage(NAMESPACE_URI) != null)"" + NL + ""\t\t\treturn;"" + NL + ""    "" + NL + ""\t\t","protected final String TEXT_54=""\"");"" + NL + ""\t}""+ NL+ """"+ NL+ ""\t/**""+ NL+ ""\t * Registers the Factory instance so that it is available within the supplied scope.""+ NL+ ""   * @argument scope a HelperContext instance that will make the types supported by this Factory available.""+ NL+ ""\t * <!-- begin-user-doc -->""+ NL+ ""\t * <!-- end-user-doc -->""+ NL+ ""\t * @generated""+ NL+ ""\t */""+ NL+ ""\tpublic void register(HelperContext scope) ""+ NL+ ""\t{""+ NL+ ""\t\tif(scope == null) {""+ NL+ ""\t\t\tthrow new IllegalArgumentException(\""Scope can not be null\"");""+ NL+ ""\t\t}""+ NL+ """"+ NL+ ""\t\tif (((HelperContextImpl)scope).getExtendedMetaData().getPackage(NAMESPACE_URI) != null)""+ NL+ ""\t\t\treturn;""+ NL+ ""    ""+ NL+ ""\t\t// Register this package with provided scope   ""+ NL+ ""\t\t((HelperContextImpl)scope).getExtendedMetaData().putPackage(NAMESPACE_URI, this);""+ NL+ ""\t\t""+ NL+ ""\t\t//Register dependent packages with provided scope"";
",0,105,49,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
98,"AddressMap<SimpleString> underTest = new AddressMap<>(""#"", ""*"", '.');","AddressMap<SimpleString> underTest=new AddressMap<>(""#"",""*"",'.');
",0,2,7,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
99,"private Insets insets = new Insets(2*radius, 3*radius, radius, 3*radius);","private Insets insets=new Insets(2 * radius,3 * radius,radius,3 * radius);
",0,3,11,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
100,"private final Map<String, Function<List<?>,Predicate<?>>> predicatePreferredNameToConstructor = MutableMap.of();","private final Map<String,Function<List<?>,Predicate<?>>> predicatePreferredNameToConstructor=MutableMap.of();
",0,23,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
101,"private final DimFilter bound2 = new BoundDimFilter(""dim1"", null, ""tillend"", false, false, false, null,","private final DimFilter bound2=new BoundDimFilter(""dim1"",null,""tillend"",false,false,false,null,StringComparators.LEXICOGRAPHIC);
",0,60,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
102,"private final Map<URL,Pair<Set<javax.tools.FileObject>,Set<javax.tools.FileObject>>> generated = new HashMap<>();","private final Map<URL,Pair<Set<javax.tools.FileObject>,Set<javax.tools.FileObject>>> generated=new HashMap<>();
",0,33,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
103,private Set<Request.Type> requestTypes = ImmutableSet.<Request.Type>builder().addAll(EnumSet.complementOf(EnumSet.of(Request.Type.GET))).build();,"/** 
 * Set of  {@link org.apache.ambari.server.api.services.Request.Type}s that are handled by this plugin In this case all  {@link Request.Type}s are listed, except  {@link Request.Type#GET}
 */
private Set<Request.Type> requestTypes=ImmutableSet.<Request.Type>builder().addAll(EnumSet.complementOf(EnumSet.of(Request.Type.GET))).build();
",0,45,14,,"Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
QualifiedName(SimpleType-name, MethodInvocation-typeArguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
"
104,"private final Map<String, ConcurrentMap<String, ConcurrentMap<String, String>>> jmxPortMap = new ConcurrentHashMap<>(1);","/** 
 * JMX ports read from the configs
 */
private final Map<String,ConcurrentMap<String,ConcurrentMap<String,String>>> jmxPortMap=new ConcurrentHashMap<>(1);
",0,0,12,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
105,"private final AtomicMarkableReference<Disruptor<ExchangeEvent>> disruptor = new AtomicMarkableReference<>(null, false);","private final AtomicMarkableReference<Disruptor<ExchangeEvent>> disruptor=new AtomicMarkableReference<>(null,false);
",0,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
106,"private final Map<Category, Map<Datatype, Map<String, Set<ContainerAttribute>>>> mapAttributes = new HashMap<Category, Map<Datatype, Map<String, Set<ContainerAttribute>>>>();","private final Map<Category,Map<Datatype,Map<String,Set<ContainerAttribute>>>> mapAttributes=new HashMap<Category,Map<Datatype,Map<String,Set<ContainerAttribute>>>>();
",0,3,19,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
107,"private final KStream<Integer, String> source = builder.stream(topicName, Consumed.with(Serdes.Integer(), Serdes.String()));","private final KStream<Integer,String> source=builder.stream(topicName,Consumed.with(Serdes.Integer(),Serdes.String()));
",0,11,15,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
108,"private final Cache<String, ReadableUserAgent> cache = CacheBuilder.newBuilder().maximumSize(100).expireAfterWrite(2, TimeUnit.HOURS).build();","private final Cache<String,ReadableUserAgent> cache=CacheBuilder.newBuilder().maximumSize(100).expireAfterWrite(2,TimeUnit.HOURS).build();
",0,94,14,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
109,"private volatile Map<Class<?>, Class<? extends DataModel>> facesDataModels = null;","private volatile Map<Class<?>,Class<? extends DataModel>> facesDataModels=null;
",0,98,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
110,"protected BiFunction<Collection<?>, Collection<?>, Collection<?>> mergeNestedLists = null;","protected BiFunction<Collection<?>,Collection<?>,Collection<?>> mergeNestedLists=null;
",0,144,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
111,"private String request = ""<?xml version=\""1.0\""?>\n"" + ""<soap:Envelope "" + ""xmlns:soap=\""http:","private String request=""<?xml version=\""1.0\""?>\n"" + ""<soap:Envelope "" + ""xmlns:soap=\""http://schemas.xmlsoap.org/soap/envelope/\"" ""+ ""xmlns:soapenc=\""http://schemas.xmlsoap.org/soap/encoding/\"">""+ ""<soap:Body>\n""+ ""<method xmlns=\"""" + namespace + ""\"">\n""+ ""<arg>5</arg>""+ ""</method>\n""+ ""</soap:Body>\n""+ ""</soap:Envelope>\n"";
",0,17,15,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
112,"protected List<Pair<TraversalStrategy, Traversal.Admin<?, ?>>> strategyTraversals = new ArrayList<>();","protected List<Pair<TraversalStrategy,Traversal.Admin<?,?>>> strategyTraversals=new ArrayList<>();
",0,2,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
113,"protected final ConfigKey<Integer> Port = new ConfigKey<Integer>(""Advanced"", Integer.class, ""port"", ""8250"", ""Port to listen on for remote agent connections."", false);","protected final ConfigKey<Integer> Port=new ConfigKey<Integer>(""Advanced"",Integer.class,""port"",""8250"",""Port to listen on for remote agent connections."",false);
",0,111,13,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
114,private final MonoMeecrowave.Rule meecrowave = new MonoMeecrowave.Rule().inject(this);,"private final MonoMeecrowave.Rule meecrowave=new MonoMeecrowave.Rule().inject(this);
",0,2,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
115,"Map<String, Map<String, String>> fullProperties = ImmutableMap.of(""hdfs-site"", hdfsSite, ""hadoop-env"", hadoopEnv);","Map<String,Map<String,String>> fullProperties=ImmutableMap.of(""hdfs-site"",hdfsSite,""hadoop-env"",hadoopEnv);
",0,0,12,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
116,private final int random = (new Random()).nextInt(10) + 1;,"private final int random=(new Random()).nextInt(10) + 1;
",0,23,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ParenthesizedExpression-expression, MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
117,private final Class<? extends Annotation>[] defaultArray = new Class[0];,"@SuppressWarnings(""unchecked"") private final Class<? extends Annotation>[] defaultArray=new Class[0];
",0,5,9,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, ),
"
118,private final Comparator<Sample<T>> comp = Collections.reverseOrder(Comparator.comparing(p -> p.count));,"private final Comparator<Sample<T>> comp=Collections.reverseOrder(Comparator.comparing(p -> p.count));
",0,37,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(LambdaExpression-body, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
119,"private final Deserializer<String> stringDeserializer = input -> input == null ? null : new String(input, StandardCharsets.UTF_8);","private final Deserializer<String> stringDeserializer=input -> input == null ? null : new String(input,StandardCharsets.UTF_8);
",0,18,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, ConditionalExpression-expression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(InfixExpression-rightOperand, ConditionalExpression-expression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ConditionalExpression-thenExpression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ConditionalExpression-elseExpression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, ConditionalExpression-elseExpression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, ConditionalExpression-elseExpression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
120,"private Map<W, Set<Windmill.GlobalDataRequest>> blockedMap = null;","private Map<W,Set<Windmill.GlobalDataRequest>> blockedMap=null;
",0,9,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
121,"private MutableObjectIterator<Tuple2<byte[], StreamRecord<T>>> sortedInput = null;","private MutableObjectIterator<Tuple2<byte[],StreamRecord<T>>> sortedInput=null;
",0,11,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
122,"private long upperBound = (long) Math.pow(2, (8 * 4));","private long upperBound=(long)Math.pow(2,(8 * 4));
",0,3,9,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, ParenthesizedExpression-expression, MethodInvocation-arguments, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ParenthesizedExpression-expression, MethodInvocation-arguments, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
123,"private final Object[] validValues   = { null, Boolean.TRUE, Boolean.FALSE, ""true"", ""false"", ""TRUE"", ""FALSE"", ""tRue"", ""FaLse"" };","private final Object[] validValues={null,Boolean.TRUE,Boolean.FALSE,""true"",""false"",""TRUE"",""FALSE"",""tRue"",""FaLse""};
",0,30,14,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
124,private double[][][][] data = new double[NUM_THREADS][GRID_LENGTH][GRID_LENGTH][GRID_LENGTH];,"private double[][][][] data=new double[NUM_THREADS][GRID_LENGTH][GRID_LENGTH][GRID_LENGTH];
",0,16,16,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
125,private final boolean[] allocated = new boolean[BASE_PORT_INCREMENT-1];,"private final boolean[] allocated=new boolean[BASE_PORT_INCREMENT - 1];
",0,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
126,"private String vm = Os.isFamily(""windows"") ? MS_VM : ""mono"";","/** 
 * The .NET VM to use. <p>Defaults to Microsoft's on Windows and mono on any other platform.</p>
 */
private String vm=Os.isFamily(""windows"") ? MS_VM : ""mono"";
",0,0,8,,"Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, ConditionalExpression-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, ConditionalExpression-expression, VariableDeclarationFragment-initializer, ),
StringLiteral(MethodInvocation-arguments, ConditionalExpression-expression, VariableDeclarationFragment-initializer, ),
SimpleName(ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, ),
StringLiteral(ConditionalExpression-elseExpression, VariableDeclarationFragment-initializer, ),
"
127,private long[] timeTracking = new long[LAST_EVENT_TYPE + 1];,"/** 
 * This attribute is used to store the time at which the event enters a type. <p> The array should better be seen as a Map from event type (int) to the time at which the event entered that type, 0 if it never entered this type. </p>
 */
private long[] timeTracking=new long[LAST_EVENT_TYPE + 1];
",0,0,8,,"Modifier(),
PrimitiveType(ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(InfixExpression-leftOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, ),
NumberLiteral(InfixExpression-rightOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, ),
"
128,"private List<Long> hostList = new ArrayList<>(Arrays.asList(1L, 5L, 10L, 20L, 50L, 60L, 70L, 80L));","private List<Long> hostList=new ArrayList<>(Arrays.asList(1L,5L,10L,20L,50L,60L,70L,80L));
",0,5,15,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
129,"private HashMap<Integer, Map<String, String[]>> conditionList = new HashMap<Integer, Map<String, String[]>>();","/** 
 * key: type value --> map of key: condition expression value: list of keys on which the condition is
 */
private HashMap<Integer,Map<String,String[]>> conditionList=new HashMap<Integer,Map<String,String[]>>();
",0,2,14,,"Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
"
130,"private File storageFolder = new File(System.getProperty(""java.io.tmpdir""), ""crawler-metadata-"" + UUID.randomUUID().toString());","@Parameter(names={""-sf"",""--storagefolder""},description=""Folder used to store crawler temporary data."",converter=FileConverter.class) private File storageFolder=new File(System.getProperty(""java.io.tmpdir""),""crawler-metadata-"" + UUID.randomUUID().toString());
",0,5,11,,"Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
StringLiteral(InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
131,"private final MaterializedInternal<String, String, KeyValueStore<Bytes, byte[]>> materialized = new MaterializedInternal<>(Materialized.as(""test-store""), builder, storePrefix);","private final MaterializedInternal<String,String,KeyValueStore<Bytes,byte[]>> materialized=new MaterializedInternal<>(Materialized.as(""test-store""),builder,storePrefix);
",0,113,16,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
132,"Map<Class<? extends RepositoryFeature<?>>, RepositoryFeature<?>> featureMap = new HashMap<>(  );","Map<Class<? extends RepositoryFeature<?>>,RepositoryFeature<?>> featureMap=new HashMap<>();
",0,2,8,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
133,"private final ExecutorService ipmitoolExecutor = Executors.newFixedThreadPool(OutOfBandManagementService.SyncThreadPoolSize.value(), new NamedThreadFactory(""IpmiToolDriver""));","private final ExecutorService ipmitoolExecutor=Executors.newFixedThreadPool(OutOfBandManagementService.SyncThreadPoolSize.value(),new NamedThreadFactory(""IpmiToolDriver""));
",0,43,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
134,private final Predicate<T> DEFAULT_FILTER = ( T att ) -> false;,"private final Predicate<T> DEFAULT_FILTER=(T att) -> false;
",0,37,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, SingleVariableDeclaration-type, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SingleVariableDeclaration-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
135,"private Map<TupleTag<?>, List<WindowedValue<?>>> outputLists = Maps.newHashMap();","private Map<TupleTag<?>,List<WindowedValue<?>>> outputLists=Maps.newHashMap();
",0,1,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
136,"protected Hashtable<Class<? extends ServerResource>, Hashtable<Class<? extends Command>, CommandWrapper>> resources = new Hashtable<Class<? extends ServerResource>, Hashtable<Class<? extends Command>, CommandWrapper>>();","@SuppressWarnings(""rawtypes"") protected Hashtable<Class<? extends ServerResource>,Hashtable<Class<? extends Command>,CommandWrapper>> resources=new Hashtable<Class<? extends ServerResource>,Hashtable<Class<? extends Command>,CommandWrapper>>();
",0,2,16,,"Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
"
137,"private final LRUCache<Class<?>, Constructor<?>> cache = new LRUCache<Class<?>, Constructor<?>>(512);","private final LRUCache<Class<?>,Constructor<?>> cache=new LRUCache<Class<?>,Constructor<?>>(512);
",0,13,14,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
138,"final ApplicationSummary application = new ApplicationSummary(""myapp_id"", applicationSpec, Status.STARTING, links);","final ApplicationSummary application=new ApplicationSummary(""myapp_id"",applicationSpec,Status.STARTING,links);
",0,8,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
139,private int rbdFeatures = RBD_FEATURE_LAYERING + RBD_FEATURE_EXCLUSIVE_LOCK + RBD_FEATURE_OBJECT_MAP + RBD_FEATURE_FAST_DIFF + RBD_FEATURE_DEEP_FLATTEN;,"private int rbdFeatures=RBD_FEATURE_LAYERING + RBD_FEATURE_EXCLUSIVE_LOCK + RBD_FEATURE_OBJECT_MAP+ RBD_FEATURE_FAST_DIFF+ RBD_FEATURE_DEEP_FLATTEN;
",0,7,8,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
140,"private final Map<String, BiFunction<String, Map<String, Map<String, String>>, ResponseEntity<String>>> methodMapping = new HashMap<>();","private final Map<String,BiFunction<String,Map<String,Map<String,String>>,ResponseEntity<String>>> methodMapping=new HashMap<>();
",0,3,15,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
141,"private final ConversionContext DUMMY_CONTEXT = new ConversionContext.Builder(""someKey"", TypeLiteral.of(Enum.class)).build();","private final ConversionContext DUMMY_CONTEXT=new ConversionContext.Builder(""someKey"",TypeLiteral.of(Enum.class)).build();
",0,7,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
142,"private final KeyValueMapper<? super KIn, ? super VIn, ? extends Iterable<? extends KeyValue<? extends KOut, ? extends VOut>>> mapper;","private final KeyValueMapper<? super KIn,? super VIn,? extends Iterable<? extends KeyValue<? extends KOut,? extends VOut>>> mapper;
",0,88,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
143,"private final Map<Class<?>, Object> map = new HashMap<Class<?>, Object>( 20 );","private final Map<Class<?>,Object> map=new HashMap<Class<?>,Object>(20);
",0,2,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
144,"private final Lookup.Result<Node> nodes = Lookups.forPath(""UI/Runtime"").lookupResult(Node.class);","private final Lookup.Result<Node> nodes=Lookups.forPath(""UI/Runtime"").lookupResult(Node.class);
",0,237,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
145,"private final Logger _logger = LoggerFactory.getLogger(_instanceId + "" - "" + getClass().getName());","private final Logger _logger=LoggerFactory.getLogger(_instanceId + "" - "" + getClass().getName());
",0,55,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-extendedOperands, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
146,"private final Resource maxAlloc = Resource.newInstance(1024 * 8, 8);","private final Resource maxAlloc=Resource.newInstance(1024 * 8,8);
",0,22,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
147,"private PromotedToLock      instance = new PromotedToLock(null, -1, null, new RetryNTimes(0, 0));","private PromotedToLock instance=new PromotedToLock(null,-1,null,new RetryNTimes(0,0));
",0,17,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
148,"protected File tmpFolder = new File(System.getProperty(""karaf.data"") + File.separator + ""maven"" + File.separator + ""proxy"" + File.separator + ""tmp"");","protected File tmpFolder=new File(System.getProperty(""karaf.data"") + File.separator + ""maven""+ File.separator+ ""proxy""+ File.separator+ ""tmp"");
",0,53,13,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-extendedOperands, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-extendedOperands, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
149,"final List<Map<String, Collection<? extends TreePath>>> multiVariables = new LinkedList<Map<String, Collection<? extends TreePath>>>();","final List<Map<String,Collection<? extends TreePath>>> multiVariables=new LinkedList<Map<String,Collection<? extends TreePath>>>();
",0,9,12,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
150,private final Watcher watcher = event -> listeners.forEach(w -> w.process(event));,"private final Watcher watcher=event -> listeners.forEach(w -> w.process(event));
",0,13,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, LambdaExpression-body, MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, LambdaExpression-body, MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, LambdaExpression-body, MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
151,"private long[] supportedPermissions = new long[] {READ_NODE, READ_NODE, Permissions.NO_PERMISSION, READ_ACCESS_CONTROL};","private long[] supportedPermissions=new long[]{READ_NODE,READ_NODE,Permissions.NO_PERMISSION,READ_ACCESS_CONTROL};
",0,17,10,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
152,private int[] interests = new int[MAX_USER_INTERESTS - MIN_USER_INTERESTS];,"private int[] interests=new int[MAX_USER_INTERESTS - MIN_USER_INTERESTS];
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
153,"private ClassLoader isolatedCl = new URLClassLoader(new URL[0], this.getClass().getClassLoader());","private ClassLoader isolatedCl=new URLClassLoader(new URL[0],this.getClass().getClassLoader());
",0,9,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayCreation-dimensions, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
154,"final TreeMap<byte[], TreeMap<byte[], List<ShuffleEntry>>> records =","final TreeMap<byte[],TreeMap<byte[],List<ShuffleEntry>>> records=new TreeMap<>(SHUFFLE_KEY_COMPARATOR);
",0,6,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
155,"private final Object[] typeArgs = new Object[] { null, Boolean.FALSE };","private final Object[] typeArgs=new Object[]{null,Boolean.FALSE};
",0,31,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
156,"protected Function<ObjectName, Set<ObjectName>> queryNames = (name) -> mbs.queryNames(name, null);","protected Function<ObjectName,Set<ObjectName>> queryNames=(name) -> mbs.queryNames(name,null);
",0,20,11,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
157,"private Map<Class<?>, Lookup.Result<DocumentServiceFactory<?>>> factoryMap = new HashMap<>(5);","private Map<Class<?>,Lookup.Result<DocumentServiceFactory<?>>> factoryMap=new HashMap<>(5);
",0,6,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
158,"private final Integer[] rowStorage = new Integer[] {StorageConstants.ROW_STORAGE_MODE, StorageConstants.COLUMN_STORAGE_MODE, null};","/** 
 */
private final Integer[] rowStorage=new Integer[]{StorageConstants.ROW_STORAGE_MODE,StorageConstants.COLUMN_STORAGE_MODE,null};
",0,5,10,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
QualifiedName(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, ),
QualifiedName(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, ),
NullLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, ),
"
159,"private final byte[][] splitKeys = new byte[][] {Bytes.toBytes(1), Bytes.toBytes(9)};","private final byte[][] splitKeys=new byte[][]{Bytes.toBytes(1),Bytes.toBytes(9)};
",0,2,15,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
160,"private final Map<String, String[]> cachedActivateValues = Collections.synchronizedMap(new LinkedHashMap<>());","private final Map<String,String[]> cachedActivateValues=Collections.synchronizedMap(new LinkedHashMap<>());
",0,28,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
161,"private final Object[] invalidValues = {1, 0.5,123456789, ""abcd"", ""101010"" };","private final Object[] invalidValues={1,0.5,123456789,""abcd"",""101010""};
",0,1,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
162,"private final Object[] invalidValues = {"""", ""12ab"", ""abcd"", ""-12ab"", Short.MIN_VALUE - 1, Short.MAX_VALUE + 1, Integer.MIN_VALUE, Integer.MAX_VALUE,","private final Object[] invalidValues={"""",""12ab"",""abcd"",""-12ab"",Short.MIN_VALUE - 1,Short.MAX_VALUE + 1,Integer.MIN_VALUE,Integer.MAX_VALUE,Long.MIN_VALUE,Long.MAX_VALUE,Float.MAX_VALUE,Double.MAX_VALUE,-Float.MAX_VALUE,-Double.MAX_VALUE};
",0,2,15,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-leftOperand, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-leftOperand, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
163,"SerializationHeader header = new SerializationHeader(true, metadata, metadata.regularAndStaticColumns(), EncodingStats.NO_STATS);","SerializationHeader header=new SerializationHeader(true,metadata,metadata.regularAndStaticColumns(),EncodingStats.NO_STATS);
",0,1,8,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
164,"private Object consumerConfTable[][] = {{""timeout"", ""timeout"", ""int"", 5000, 8000, """", """", """", """", """"}, {""retries"", ""retries"", ""int"", 2, 5, """", """", """", """", """"}, {""loadbalance"", ""loadbalance"", ""string"", ""random"", ""leastactive"", """", """", """", """", """"}, {""async"", ""async"", ""boolean"", false, true, """", """", """", """", """"}, {""connections"", ""connections"", ""int"", 100, 5, """", """", """", """", """"},","private Object consumerConfTable[][]={{""timeout"",""timeout"",""int"",5000,8000,"""","""","""","""",""""},{""retries"",""retries"",""int"",2,5,"""","""","""","""",""""},{""loadbalance"",""loadbalance"",""string"",""random"",""leastactive"","""","""","""","""",""""},{""async"",""async"",""boolean"",false,true,"""","""","""","""",""""},{""connections"",""connections"",""int"",100,5,"""","""","""","""",""""},{""check"",""check"",""boolean"",true,false,"""","""","""","""",""""},{""proxy"",""proxy"",""string"",""javassist"",""jdk"",""javassist"","""","""","""",""""},{""owner"",""owner"",""string"","""",""haomin"","""","""","""","""",""""},{""actives"",""actives"",""int"",0,5,"""","""","""","""",""""},{""cluster"",""cluster"",""string"",""failover"",""forking"","""","""","""","""",""""},{""filter"","""",""string"","""","""","""","""","""","""",""""},{""listener"","""",""string"","""","""","""","""","""","""",""""}};
",0,28,55,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
165,"private BinaryEncoder encoder = new EncoderFactory().configureBlockSize(512).binaryEncoder(buffer, null);","private BinaryEncoder encoder=new EncoderFactory().configureBlockSize(512).binaryEncoder(buffer,null);
",0,8,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
166,"final Option parent = add(new Option(""parent"", true, ""Specify the parent class for the operators""));","final Option parent=add(new Option(""parent"",true,""Specify the parent class for the operators""));
",0,4,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
167,"private final Map<Integer, Map<Integer, List<Map.Entry<TaskMetrics, TaskInfo>>>> allJobMetrics =","private final Map<Integer,Map<Integer,List<Map.Entry<TaskMetrics,TaskInfo>>>> allJobMetrics=Maps.newHashMap();
",0,1,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
168,private final Supplier<Set<? extends Location>> locations = Suppliers.<Set<? extends Location>> ofInstance(ImmutableSet.of(region));,"private final Supplier<Set<? extends Location>> locations=Suppliers.<Set<? extends Location>>ofInstance(ImmutableSet.of(region));
",0,91,13,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, MethodInvocation-typeArguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, MethodInvocation-typeArguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
169,private final long baseSeconds = (System.currentTimeMillis() / 1000L) << 32;,"private final long baseSeconds=(System.currentTimeMillis() / 1000L) << 32;
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
170,"private PriorityBlockingQueue<QueueEntry> queue = new PriorityBlockingQueue<QueueEntry>(11, new Comparator<QueueEntry>() {","private PriorityBlockingQueue<QueueEntry> queue=new PriorityBlockingQueue<QueueEntry>(11,new Comparator<QueueEntry>(){
  @Override public int compare(  QueueEntry o1,  QueueEntry o2){
    return o1.endTimeMs.intValue() - o2.endTimeMs.intValue();
  }
}
);
",0,1,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
171,"private final Map<String, Map<String, Ternary<String, Long, Long>>> _securityRules = new ConcurrentHashMap<String, Map<String, Ternary<String, Long, Long>>>();","private final Map<String,Map<String,Ternary<String,Long,Long>>> _securityRules=new ConcurrentHashMap<String,Map<String,Ternary<String,Long,Long>>>();
",0,5,19,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
172,byte[] val = ByteBuffer.allocate(1000).putLong(1234).array();,"byte[] val=ByteBuffer.allocate(1000).putLong(1234).array();
",0,0,9,,"PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
173,"private final Map<String,int[]> indexerStatistics = Collections.<String, int[]>synchronizedMap(new HashMap<String, int[]>());","private final Map<String,int[]> indexerStatistics=Collections.<String,int[]>synchronizedMap(new HashMap<String,int[]>());
",0,3,16,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, MethodInvocation-typeArguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, MethodInvocation-typeArguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
174,private final Discovery.Service<byte[]> service = new Discovery.Service<byte[]>(),"private final Discovery.Service<byte[]> service=new Discovery.Service<byte[]>(){
  @Override public String getHost(){
    return ((InetSocketAddress)getServerAddress()).getHostName();
  }
  @Override public int getPort(){
    return ((InetSocketAddress)getServerAddress()).getPort();
  }
  @Override public byte[] getPayload(){
    return null;
  }
  @Override public String getId(){
    return id;
  }
  @Override public String toString(){
    return ""Server.Service{id="" + id + "", host=""+ getHost()+ "", port=""+ getPort()+ "", payload=""+ Arrays.toString(getPayload())+ '}';
  }
}
;
",0,29,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
175,"private final Cache<CacheKey, Request<? extends Entity>> twoPhaseCommitCache = CacheBuilder.newBuilder().expireAfterWrite(1, TimeUnit.MINUTES).build();","private final Cache<CacheKey,Request<? extends Entity>> twoPhaseCommitCache=CacheBuilder.newBuilder().expireAfterWrite(1,TimeUnit.MINUTES).build();
",0,3,13,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
176,"private Map<String, Map<Long, BlockMetadata.FileBlockMetadata>> fileToReceivedBlocksMetadataMap = Maps.newHashMap();","/** 
 * Map maintaining BlockId to BlockMetadata mapping for given file
 */
private Map<String,Map<Long,BlockMetadata.FileBlockMetadata>> fileToReceivedBlocksMetadataMap=Maps.newHashMap();
",0,0,9,,"Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
"
177,"final Map<String,Function<String,Maybe<TypeToken<?>>>> rules = MutableMap.of();","final Map<String,Function<String,Maybe<TypeToken<?>>>> rules=MutableMap.of();
",0,1,11,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
178,"private final java.util.Map<Node, java.util.Map<AnalyzerFactory, List<ErrorDescription>>> fileNodes;","private final java.util.Map<Node,java.util.Map<AnalyzerFactory,List<ErrorDescription>>> fileNodes;
",0,6,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
179,"private final Iterator<Map.Entry<Long, ConcurrentNavigableMap<Bytes, byte[]>>> segmentIterator;","private final Iterator<Map.Entry<Long,ConcurrentNavigableMap<Bytes,byte[]>>> segmentIterator;
",0,15,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
180,List<List<AbstractBlockReader.ReaderRecord<Slice>>> blockDataList = new ArrayList<>(FILE_CONTENTS.length);,"List<List<AbstractBlockReader.ReaderRecord<Slice>>> blockDataList=new ArrayList<>(FILE_CONTENTS.length);
",0,0,7,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
181,"private final Class<?>[] COLUMN_CLASSES = { String.class, String.class, String.class, File.class };","private final Class<?>[] COLUMN_CLASSES={String.class,String.class,String.class,File.class};
",0,1,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
182,"public Map<PackageInfo, Map.Entry<Set<String>, Set<String>>> regionInfo = new HashMap<>();","public Map<PackageInfo,Map.Entry<Set<String>,Set<String>>> regionInfo=new HashMap<>();
",0,1,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
183,"@Persisted private final PersistedValue<Long> STATE = PersistedValue.of(""state"", Long.class);","@Persisted private final PersistedValue<Long> STATE=PersistedValue.of(""state"",Long.class);
",0,5,10,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
184,"private final LoadingCache<Event.Type, String> eventMetricNameCache = CacheBuilder.newBuilder()","private final LoadingCache<Event.Type,String> eventMetricNameCache=CacheBuilder.newBuilder().maximumSize(Event.Type.values().length).initialCapacity(Event.Type.values().length).build(new CacheLoader<Event.Type,String>(){
  @Override public String load(  Event.Type key) throws Exception {
    return EVENT_COUNTER_STAT_PREFIX + key.name();
  }
}
);
",0,1,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
185,private final AtomicReference<Number> value = new AtomicReference<>((Number) 0);,"private final AtomicReference<Number> value=new AtomicReference<>((Number)0);
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, CastExpression-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(CastExpression-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
186,"private final StateMachine<State> stateMachine = StateMachine.<State>builder(""storage"")","private final StateMachine<State> stateMachine=StateMachine.<State>builder(""storage"").logTransitions().initialState(State.CONSTRUCTED).addState(State.CONSTRUCTED,State.PREPARED,State.STOPPED).addState(State.PREPARED,State.READY,State.STOPPED).addState(State.READY,State.STOPPED).addState(State.STOPPED,State.STOPPED).build();
",0,32,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
187,private InjectedError<String> injectedError = (String checkpointId) -> {};,"private InjectedError<String> injectedError=(String checkpointId) -> {
}
;
",0,26,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, SingleVariableDeclaration-type, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SingleVariableDeclaration-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Block(LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
188,"private final Class<? extends Supplier<Traversal.Admin<S, E>>> traversalSupplierClass;","private final Class<? extends Supplier<Traversal.Admin<S,E>>> traversalSupplierClass;
",0,29,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
189,private String path = Paths.get(System.getProperty(TMP_DIR)).resolve(,"private String path=Paths.get(System.getProperty(TMP_DIR)).resolve(RandomStringUtils.randomNumeric(6)).toFile().getAbsolutePath();
",0,76,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
190,"private final Class[] classes = {Blue.class, Blue.Navy.class, Blue.Sky.class, Green.class, Green.Emerald.class, Red.class, Red.CandyApple.class, Red.Pink.class};","private final Class[] classes={Blue.class,Blue.Navy.class,Blue.Sky.class,Green.class,Green.Emerald.class,Red.class,Red.CandyApple.class,Red.Pink.class};
",0,4,13,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, TypeLiteral-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, TypeLiteral-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, TypeLiteral-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, TypeLiteral-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, TypeLiteral-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
191,"private Map<MimePath, Map<String, Macro>> mimeType2Macros = new HashMap<MimePath, Map<String, MacrosModel.Macro>>();","private Map<MimePath,Map<String,Macro>> mimeType2Macros=new HashMap<MimePath,Map<String,MacrosModel.Macro>>();
",0,2,12,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
192,private File[] casesFiles = new File(TESTS_DIR).listFiles();,"private File[] casesFiles=new File(TESTS_DIR).listFiles();
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
193,private Class<?> _connectionClasses[];,"private Class<?> _connectionClasses[];
",0,1,5,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
"
194,"private TypeReference<List<Map<String, Object>>> jacksonListOfMapsType = new TypeReference<List<Map<String, Object>>>() {};","private TypeReference<List<Map<String,Object>>> jacksonListOfMapsType=new TypeReference<List<Map<String,Object>>>(){
}
;
",0,7,13,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
AnonymousClassDeclaration(ClassInstanceCreation-anonymousClassDeclaration, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
195,"private boolean agentVirtual = System.getProperty(""ducc.agent.virtual"") == null ? false : true;","private boolean agentVirtual=System.getProperty(""ducc.agent.virtual"") == null ? false : true;
",0,6,9,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, InfixExpression-leftOperand, ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(InfixExpression-rightOperand, ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ConditionalExpression-elseExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
196,"private final Map<String, ? extends Predicate<? super SimulatedLocation>> subLocFailConditions;","private final Map<String,? extends Predicate<? super SimulatedLocation>> subLocFailConditions;
",0,6,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
197,"private final BucketsBuilder<IN, ?, ? extends BucketsBuilder<IN, ?, ?>> bucketsBuilder;","private final BucketsBuilder<IN,?,? extends BucketsBuilder<IN,?,?>> bucketsBuilder;
",0,17,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
198,"private Map<Operator<? extends OperatorDesc>, Set<ImmutablePair<Operator<? extends OperatorDesc>, Operator<? extends OperatorDesc>>>> delayedFixups =","private Map<Operator<? extends OperatorDesc>,Set<ImmutablePair<Operator<? extends OperatorDesc>,Operator<? extends OperatorDesc>>>> delayedFixups=new IdentityHashMap<Operator<? extends OperatorDesc>,Set<ImmutablePair<Operator<?>,Operator<?>>>>();
",0,5,11,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
199,"private final ASourceModificationEvent unspecifiedSourceModificationEvent = new ASourceModificationEvent (this, true, -1, -1);","private final ASourceModificationEvent unspecifiedSourceModificationEvent=new ASourceModificationEvent(this,true,-1,-1);
",0,7,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
200,"private final String groupName = ""__debug_dialog_selector_"" + radioId++;","private final String groupName=""__debug_dialog_selector_"" + radioId++;
",0,1,6,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(PostfixExpression-operand, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
201,"private List<ATokenId> tokenIds = Arrays.asList (new ATokenId[]{new ATokenId (""whitespace"", 1), new ATokenId (""word"", 2)});","private List<ATokenId> tokenIds=Arrays.asList(new ATokenId[]{new ATokenId(""whitespace"",1),new ATokenId(""word"",2)});
",0,13,14,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ArrayInitializer-expressions, ArrayCreation-initializer, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, ArrayInitializer-expressions, ArrayCreation-initializer, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ArrayInitializer-expressions, ArrayCreation-initializer, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ArrayInitializer-expressions, ArrayCreation-initializer, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, ArrayInitializer-expressions, ArrayCreation-initializer, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ArrayInitializer-expressions, ArrayCreation-initializer, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
202,"private final Map<Class<? extends Typeable<?>>, SQLProcessor> _processors;","private final Map<Class<? extends Typeable<?>>,SQLProcessor> _processors;
",0,2,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
203,private Cassandra.Client client = new Cassandra.Client(new TBinaryProtocol(tr));,"private Cassandra.Client client=new Cassandra.Client(new TBinaryProtocol(tr));
",0,7,6,,"Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
204,@Nullable private final EncodingFormat<BulkWriter.Factory<RowData>> bulkWriterFormat;,"@Nullable private final EncodingFormat<BulkWriter.Factory<RowData>> bulkWriterFormat;
",0,114,7,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
205,"private final StringBuilder sqlQuery = new StringBuilder().append(""select "")","private final StringBuilder sqlQuery=new StringBuilder().append(""select "").append(""    linkedrateperiods.from_date as linkedrateperiods_from_date, "").append(""    linkedrateperiods.interest_rate as linkedrateperiods_interest_rate, "").append(""    linkedrateperiods.is_differential_to_base_lending_rate as linkedrateperiods_is_differential_to_base_lending_rate, "").append(""    baserate.from_date as baserate_from_date, "").append(""    baserate.interest_rate as baserate_interest_rate "").append("" from m_product_loan as lp "").append("" join m_product_loan_floating_rates as plfr on lp.id = plfr.loan_product_id "").append("" join  m_floating_rates as linkedrate on linkedrate.id = plfr.floating_rates_id "").append(""left join m_floating_rates_periods as linkedrateperiods on (linkedrate.id = linkedrateperiods.floating_rates_id and linkedrateperiods.is_active = 1) "").append(""left join ( "").append(""    select blr.name, "").append(""    blr.is_base_lending_rate, "").append(""    blr.is_active, "").append(""    blrperiods.from_date, "").append(""    blrperiods.interest_rate "").append(""    from m_floating_rates as blr "").append(""    left join m_floating_rates_periods as blrperiods on (blr.id = blrperiods.floating_rates_id and blrperiods.is_active = 1) "").append(""    where blr.is_base_lending_rate = 1 and blr.is_active = 1 "").append("") as baserate on (linkedrateperiods.is_differential_to_base_lending_rate = 1 and linkedrate.is_base_lending_rate = 0) "").append(""where (baserate.from_date is null "").append(""    or baserate.from_date = (select MAX(b.from_date) "").append(""        from (select blr.name, "").append(""            blr.is_base_lending_rate, "").append(""            blr.is_active, "").append(""            blrperiods.from_date, "").append(""            blrperiods.interest_rate "").append(""            from m_floating_rates as blr "").append(""            left join m_floating_rates_periods as blrperiods on (blr.id = blrperiods.floating_rates_id and blrperiods.is_active = 1) "").append(""            where blr.is_base_lending_rate = 1 and blr.is_active = 1 "").append(""        ) as b "").append(""        where b.from_date <= linkedrateperiods.from_date)) "").append(""and lp.id = ? "").append(""order by linkedratePeriods_from_date desc "");
",0,136,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
206,"private Map<String, Book> books = Collections.singletonMap(""123"", new Book(""CXF in Action"", 123L));","private Map<String,Book> books=Collections.singletonMap(""123"",new Book(""CXF in Action"",123L));
",0,32,11,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
207,"private final Map<Long, Queue<T2<ByteBuffer, Exception>>>[] pendingNotifications =","/** 
 * Pending notification. 
 */
@SuppressWarnings(""unchecked"") private final Map<Long,Queue<T2<ByteBuffer,Exception>>>[] pendingNotifications=new Map[ClientNotificationType.values().length];
",0,4,10,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ArrayType-elementType, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ArrayType-elementType, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ArrayType-elementType, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ArrayType-elementType, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
"
208,"private final SoftConcurrentMap<Class<?>, SoftConcurrentMap<MediaType, List<OFHolder<T>>>> providersCache =","private final SoftConcurrentMap<Class<?>,SoftConcurrentMap<MediaType,List<OFHolder<T>>>> providersCache=new SoftConcurrentMap<Class<?>,SoftConcurrentMap<MediaType,List<OFHolder<T>>>>();
",0,0,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
209,private final Logger logger = LoggerFactory.getLogger(super.getClass());,"private final Logger logger=LoggerFactory.getLogger(super.getClass());
",0,4,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SuperMethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
210,"protected Set<Class> stringableClasses = new HashSet<>(Arrays.asList(java.math.BigDecimal.class,","/** 
 * Read/write some common builtin classes as strings. Representing these as strings isn't always best, as they aren't always ordered ideally, but at least they're stored. Also note that, for compatibility, only classes that wouldn't be otherwise correctly readable or writable should be added here, e.g., those without a no-arg constructor or those whose fields are all transient.
 */
protected Set<Class> stringableClasses=new HashSet<>(Arrays.asList(java.math.BigDecimal.class,java.math.BigInteger.class,java.net.URI.class,java.net.URL.class,java.io.File.class));
",0,0,8,,"Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
QualifiedName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
211,"Schema rec5 = SchemaBuilder.record(""test.Rec"").fields().name(""a"").type().stringType().stringDefault("""")","Schema rec5=SchemaBuilder.record(""test.Rec"").fields().name(""a"").type().stringType().stringDefault("""").name(""b"").type().longType().noDefault().name(""c"").type().intType().intDefault(0).endRecord();
",0,1,12,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
212,"@Rule public GrpcCleanupRule cleanupRule = new GrpcCleanupRule().setTimeout(10, TimeUnit.SECONDS);","@Rule public GrpcCleanupRule cleanupRule=new GrpcCleanupRule().setTimeout(10,TimeUnit.SECONDS);
",0,15,8,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
213,"Schema point3d = SchemaBuilder.record(""Point3D"").fields().requiredDouble(""x"").requiredDouble(""y"").name(""z"").type()","Schema point3d=SchemaBuilder.record(""Point3D"").fields().requiredDouble(""x"").requiredDouble(""y"").name(""z"").type().doubleType().doubleDefault(0.0).endRecord();
",0,2,13,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
214,"private final Protocol.Message message = TestService.PROTOCOL.getMessages().get(""echo"");","private final Protocol.Message message=TestService.PROTOCOL.getMessages().get(""echo"");
",0,17,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
215,"private final List<Queryable.Order<? super T, ? extends U>> orderBy;","private final List<Queryable.Order<? super T,? extends U>> orderBy;
",0,1,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
216,"private final Comparator<Row> rowComparator = (r1, r2) -> compare((ClusteringPrefix<?>) r1.clustering(),","private final Comparator<Row> rowComparator=(r1,r2) -> compare((ClusteringPrefix<?>)r1.clustering(),(ClusteringPrefix<?>)r2.clustering());
",0,3,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, CastExpression-type, MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
WildcardType(ParameterizedType-typeArguments, CastExpression-type, MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, CastExpression-expression, MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, CastExpression-expression, MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
217,"private String sandbox = System.getenv(""CHUKWA_HOME"")+File.separator+""webapps""+File.separator+""sandbox""+File.separator;","private String sandbox=System.getenv(""CHUKWA_HOME"") + File.separator + ""webapps""+ File.separator+ ""sandbox""+ File.separator;
",0,8,11,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
218,private final Timer timer = (Timer)AccessController.doPrivileged(new PrivilegedAction() {,"private final Timer timer=(Timer)AccessController.doPrivileged(new PrivilegedAction(){
  public Object run(){
    return new Timer(true);
  }
}
);
",0,4,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, CastExpression-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
219,"protected Location provider = new LocationBuilder().scope(LocationScope.PROVIDER).id(""aws-ec2"").description(""aws-ec2"").build();","protected Location provider=new LocationBuilder().scope(LocationScope.PROVIDER).id(""aws-ec2"").description(""aws-ec2"").build();
",0,1,11,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
220,"private URL consumerUrl = URL.valueOf(""subscribe:","private URL consumerUrl=URL.valueOf(""subscribe://"" + NetUtils.getLocalHost() + ""/""+ service+ ""?arg1=1&arg2=2"");
",0,25,11,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
221,"private final @Nullable Function1<TSource, EnumerableDefaults.Wrapped<TSource>> wrapper;","private final @Nullable Function1<TSource,EnumerableDefaults.Wrapped<TSource>> wrapper;
",0,10,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
222,"private final File jobConfigFileDir = new File(JOB_CONFIG_DIR_NAME + ""_"" + System.currentTimeMillis());","private final File jobConfigFileDir=new File(JOB_CONFIG_DIR_NAME + ""_"" + System.currentTimeMillis());
",0,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-extendedOperands, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
223,"protected TraceClassVisitor dumpVisitor = new TraceClassVisitor(null, new ASMifier(), new PrintWriter(new OutputStreamWriter(System.out)));","protected TraceClassVisitor dumpVisitor=new TraceClassVisitor(null,new ASMifier(),new PrintWriter(new OutputStreamWriter(System.out)));
",0,10,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
224,"private final @Nullable WindowingStrategy<?, ?> windowingStrategy;","private final @Nullable WindowingStrategy<?,?> windowingStrategy;
",0,2,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
225,protected ImmutableSet.Builder<AttributeMetadata<?>> attributeMetadata = ImmutableSet.<AttributeMetadata<?>> builder();,"protected ImmutableSet.Builder<AttributeMetadata<?>> attributeMetadata=ImmutableSet.<AttributeMetadata<?>>builder();
",0,13,9,,"Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, MethodInvocation-typeArguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
WildcardType(ParameterizedType-typeArguments, MethodInvocation-typeArguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
226,"protected Map<String, String> fiveStrings = ImmutableMap.of(""one"", String.format(XML_STRING_FORMAT, ""apple""), ""two"",","protected Map<String,String> fiveStrings=ImmutableMap.of(""one"",String.format(XML_STRING_FORMAT,""apple""),""two"",String.format(XML_STRING_FORMAT,""bear""),""three"",String.format(XML_STRING_FORMAT,""candy""),""four"",String.format(XML_STRING_FORMAT,""dogma""),""five"",String.format(XML_STRING_FORMAT,""emma""));
",0,1,13,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
227,"private final java.util.Map <Project,Reference<Pair>> projects2Pairs = Collections.synchronizedMap(new WeakHashMap<>());","private final java.util.Map<Project,Reference<Pair>> projects2Pairs=Collections.synchronizedMap(new WeakHashMap<>());
",0,4,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
228,"private Function<List<Sequence<ParallelMergeCombiningSequenceTest.IntPair>>, Sequence<ParallelMergeCombiningSequenceTest.IntPair>> outputSequenceFactory;","private Function<List<Sequence<ParallelMergeCombiningSequenceTest.IntPair>>,Sequence<ParallelMergeCombiningSequenceTest.IntPair>> outputSequenceFactory;
",0,1,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
229,private Matcher<? super Collection<? extends BoundedWindow>> windowsMatcher;,"private Matcher<? super Collection<? extends BoundedWindow>> windowsMatcher;
",0,0,5,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
230,"private final AppliedPTransform<?, PCollection<byte[]>, Impulse> transform;","private final AppliedPTransform<?,PCollection<byte[]>,Impulse> transform;
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
231,"private BiFunction<org.apache.iceberg.Schema, Schema, DatumReader<?>> createReaderBiFunc = null;","private BiFunction<org.apache.iceberg.Schema,Schema,DatumReader<?>> createReaderBiFunc=null;
",0,1,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
232,"private final Map<Class<?>, List<MetadataBuilder.ForBean<?>>> beanBuilders = new ConcurrentHashMap<>();","private final Map<Class<?>,List<MetadataBuilder.ForBean<?>>> beanBuilders=new ConcurrentHashMap<>();
",0,4,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
233,private final SourceFunction.SourceContext<WindowedValue<byte[]>> sourceContext;,"private final SourceFunction.SourceContext<WindowedValue<byte[]>> sourceContext;
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
234,"private Map<String, List<Pair<byte[], List<String>>>> bulkLoadHFileMap;","private Map<String,List<Pair<byte[],List<String>>>> bulkLoadHFileMap;
",0,1,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
235,private final List<IsmReader<T>.IsmPrefixReaderIterator> readerIterators;,"private final List<IsmReader<T>.IsmPrefixReaderIterator> readerIterators;
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, QualifiedType-qualifier, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, QualifiedType-qualifier, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(QualifiedType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
236,"private final Function1<DataContext, @Nullable Object @Nullable []> compiledFunction;","private final Function1<DataContext,@Nullable Object @Nullable []> compiledFunction;
",0,9,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(MarkerAnnotation-typeName, SimpleType-annotations, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(MarkerAnnotation-typeName, Dimension-annotations, ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
237,"private final StateTag<ValueState<Map<W, Set<Windmill.GlobalDataRequest>>>> blockedMapAddr;","private final StateTag<ValueState<Map<W,Set<Windmill.GlobalDataRequest>>>> blockedMapAddr;
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
238,"protected Map<Identifier, Map<Identifier, Map<Identifier, Set<AttributeValue<?>>>>> attributeMap;","protected Map<Identifier,Map<Identifier,Map<Identifier,Set<AttributeValue<?>>>>> attributeMap;
",0,2,11,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
239,private byte @Nullable [] currentKeyBytes = null;,"/** 
 * The key of the most recent KeyGroupedShuffleEntries returned by  {@link #advance}, if any. <p>If currentKeyBytes is non-null, then it's the key for the last entry returned by  {@link #advance}, and all incoming entries with that key should be skipped over by this iterator (since this iterator is iterating over keys, not the individual values associated with a given key). <p>If currentKeyBytes is null, and shuffleIterator.hasNext(), then the key of shuffleIterator.next() is the key of the next KeyGroupedShuffleEntries to return via  {@link #advance}/ {@link #getCurrent}.
 */
private byte @Nullable [] currentKeyBytes=null;
",0,0,5,,"Modifier(),
PrimitiveType(ArrayType-elementType, ),
SimpleName(MarkerAnnotation-typeName, Dimension-annotations, ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
NullLiteral(VariableDeclarationFragment-initializer, ),
"
240,"private final GroupBy<? extends SearchBase<?, ?, K>, ?, K> _groupBy;","private final GroupBy<? extends SearchBase<?,?,K>,?,K> _groupBy;
",0,13,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
241,"public GrpcCleanupRule grpcCleanupRule = new GrpcCleanupRule().setTimeout(10, TimeUnit.SECONDS);","@Rule public GrpcCleanupRule grpcCleanupRule=new GrpcCleanupRule().setTimeout(10,TimeUnit.SECONDS);
",0,0,7,,"Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
QualifiedName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
242,"private final ForeachAction<Integer, Integer> accumulateExpected = (key, value) -> results.add(KeyValue.pair(key, value));","private final ForeachAction<Integer,Integer> accumulateExpected=(key,value) -> results.add(KeyValue.pair(key,value));
",0,2,14,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
243,"private Effector<Void> cumulusConfig = Effectors.effector(Void.class, ""cumulusConfig"")","private Effector<Void> cumulusConfig=Effectors.effector(Void.class,""cumulusConfig"").description(""Configure the CumulusRDF web application"").buildAbstract();
",0,4,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
244,"private final WindowFn<?, W>.MergeContext mergeContext;","private final WindowFn<?,W>.MergeContext mergeContext;
",0,13,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, QualifiedType-qualifier, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, QualifiedType-qualifier, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, QualifiedType-qualifier, FieldDeclaration-type, ),
SimpleName(QualifiedType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
245,private final byte @Nullable [] defaultValue;,"private final byte @Nullable [] defaultValue;
",0,7,5,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
SimpleName(MarkerAnnotation-typeName, Dimension-annotations, ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
246,private final Preferences preferences = NbPreferences.forModule(ContextProvider.class).node(VariablesViewButtons.PREFERENCES_NAME);,"private final Preferences preferences=NbPreferences.forModule(ContextProvider.class).node(VariablesViewButtons.PREFERENCES_NAME);
",0,2,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
247,"private @Nullable Map<WriterKey<DestinationT>, Writer<DestinationT, OutputT>> writers;","private @Nullable Map<WriterKey<DestinationT>,Writer<DestinationT,OutputT>> writers;
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
248,"private final Map<byte[], ? extends Collection<?>> families;","private final Map<byte[],? extends Collection<?>> families;
",0,1,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
249,"private final ProcessFunction<? super T, byte[]> toBytesFn;","private final ProcessFunction<? super T,byte[]> toBytesFn;
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
250,"@CheckForNull private Map<TupleTag<?>, List<ValueInSingleWindow<?>>> outputs;","/** 
 * The outputs from the  {@link DoFn} under test. Access via {@link #getOutputs()}. 
 */
@CheckForNull private Map<TupleTag<?>,List<ValueInSingleWindow<?>>> outputs;
",0,7,9,,"SimpleName(MarkerAnnotation-typeName, ),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
"
251,"private Tuple2<Tuple2<String[], int[]>, Tuple2<String[], int[]>[]> testData;","private Tuple2<Tuple2<String[],int[]>,Tuple2<String[],int[]>[]> testData;
",0,18,14,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
252,"@org.apache.avro.reflect.Nullable public Map<String, AvroSubPojo> map;","@org.apache.avro.reflect.Nullable public Map<String,AvroSubPojo> map;
",0,55,6,,"QualifiedName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
253,"public @AvroName(""bool_non_nullable"") boolean boolNonNullable;","public @AvroName(""bool_non_nullable"") boolean boolNonNullable;
",0,0,5,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SingleMemberAnnotation-typeName, FieldDeclaration-modifiers, ),
StringLiteral(SingleMemberAnnotation-value, FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
254,"public @Inject @Named(""ProMethodParameterized3"") ArrayList<String> pt3;","public @Inject @Named(""ProMethodParameterized3"") ArrayList<String> pt3;
",0,2,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(SingleMemberAnnotation-typeName, FieldDeclaration-modifiers, ),
StringLiteral(SingleMemberAnnotation-value, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
255,"private UnaryFunction<InputT, KeyT> transform = (UnaryFunction) e -> e;","@SuppressWarnings(""unchecked"") private UnaryFunction<InputT,KeyT> transform=(UnaryFunction)e -> e;
",0,0,8,,"Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, CastExpression-type, VariableDeclarationFragment-initializer, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, CastExpression-expression, VariableDeclarationFragment-initializer, ),
SimpleName(LambdaExpression-body, CastExpression-expression, VariableDeclarationFragment-initializer, ),
"
256,"byte[] validSchemaBytes = SchemaTranslation.schemaToProto(validDataSchema, true).toByteArray();","byte[] validSchemaBytes=SchemaTranslation.schemaToProto(validDataSchema,true).toByteArray();
",0,0,8,,"PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
257,"private final ArrayList<KV<byte[], byte[]>> records = new ArrayList<>();","/** 
 * The stored records to be sorted. 
 */
private final ArrayList<KV<byte[],byte[]>> records=new ArrayList<>();
",0,1,10,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
"
258,"private final Map<List<String>, Combine.CombineFn<?, ?, ?>> javaUdafs = new HashMap<>();","private final Map<List<String>,Combine.CombineFn<?,?,?>> javaUdafs=new HashMap<>();
",0,0,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
259,final Callable<Void> asyncTask = () -> (null);,"final Callable<Void> asyncTask=() -> (null);
",0,0,5,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(ParenthesizedExpression-expression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
260,"private Iterator<ConsumerRecord<byte[], byte[]>> recordIter = Collections.emptyIterator();","private Iterator<ConsumerRecord<byte[],byte[]>> recordIter=Collections.emptyIterator();
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
261,"@Mock Consumer<byte[], byte[]> mockConsumer;","@Mock Consumer<byte[],byte[]> mockConsumer;
",0,0,7,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
262,"private final SerializableFunction<Map<String, Object>, Consumer<byte[], byte[]>> consumerFn =","private final SerializableFunction<Map<String,Object>,Consumer<byte[],byte[]>> consumerFn=new SerializableFunction<Map<String,Object>,Consumer<byte[],byte[]>>(){
  @Override public Consumer<byte[],byte[]> apply(  Map<String,Object> input){
    return mockConsumer;
  }
}
;
",0,0,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
263,@Nonnull private final CloseableIterator<byte[]> bytesIterator;,"/** 
 * The iterator over byte-arrays with the serialized objects. 
 */
@Nonnull private final CloseableIterator<byte[]> bytesIterator;
",0,3,7,,"SimpleName(MarkerAnnotation-typeName, ),
Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
"
264,"private final URI uri = URI.create(FS_S3A + "":","private final URI uri=URI.create(FS_S3A + ""://"" + randomBucket+ ""/"");
",0,94,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
265,"private volatile EntryKey entryKey = new EntryKey(-1, BookieProtocol.INVALID_ENTRY_ID);","private volatile EntryKey entryKey=new EntryKey(-1,BookieProtocol.INVALID_ENTRY_ID);
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
266,"private final Map<String, File> pendingFsChanges = new TreeMap<String, File>(new PathComparator(Constants.FS_NATIVE.charAt(0)));","private final Map<String,File> pendingFsChanges=new TreeMap<String,File>(new PathComparator(Constants.FS_NATIVE.charAt(0)));
",0,36,13,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
267,"private final Interval dataInterval = new Interval(DateTimes.nowUtc().minus(Days.days(1)), DateTimes.nowUtc());","private final Interval dataInterval=new Interval(DateTimes.nowUtc().minus(Days.days(1)),DateTimes.nowUtc());
",0,8,13,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
268,"ConfigKey<String> key1 = ConfigKeys.builder(String.class, ""key1"").runtimeInheritance(BasicConfigInheritance.NEVER_INHERITED).build();","ConfigKey<String> key1=ConfigKeys.builder(String.class,""key1"").runtimeInheritance(BasicConfigInheritance.NEVER_INHERITED).build();
",0,2,10,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
269,protected EntitySpec<? extends TestEntity> childSpec = EntitySpec.create(TestEntity.class);,"protected EntitySpec<? extends TestEntity> childSpec=EntitySpec.create(TestEntity.class);
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
270,"private final Map<Class<?>,Pair<Integer,RequestProcessor>> rqByClz = new HashMap<Class<?>, Pair<Integer, RequestProcessor>>();","private final Map<Class<?>,Pair<Integer,RequestProcessor>> rqByClz=new HashMap<Class<?>,Pair<Integer,RequestProcessor>>();
",0,3,15,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
271,private Reference<List<Location>> locations = new BasicReference<List<Location>>(ImmutableList.<Location>of());,"private Reference<List<Location>> locations=new BasicReference<List<Location>>(ImmutableList.<Location>of());
",0,0,11,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
272,"private final Set<Future<?>> futures = Sets.newSetFromMap(Maps.<Future<?>, Boolean>newConcurrentMap());","private final Set<Future<?>> futures=Sets.newSetFromMap(Maps.<Future<?>,Boolean>newConcurrentMap());
",0,2,13,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, MethodInvocation-typeArguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
WildcardType(ParameterizedType-typeArguments, MethodInvocation-typeArguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
273,"private Pair<Pair<String,String>,ClassPath> boot = Pair.<Pair<String,String>,ClassPath>of(Pair.<String,String>of(null,null),null);","private Pair<Pair<String,String>,ClassPath> boot=Pair.<Pair<String,String>,ClassPath>of(Pair.<String,String>of(null,null),null);
",0,1,20,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, MethodInvocation-typeArguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, MethodInvocation-typeArguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, MethodInvocation-typeArguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
274,"private final ViewHierarchy hierarchy = new ViewHierarchy(this, new WindowDnDManager(this));","private final ViewHierarchy hierarchy=new ViewHierarchy(this,new WindowDnDManager(this));
",0,1,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
275,private final AvroSchema<Foo> schema = AvroSchema.of(SchemaDefinition.<Foo>builder().withPojo(Foo.class).build());,"private final AvroSchema<Foo> schema=AvroSchema.of(SchemaDefinition.<Foo>builder().withPojo(Foo.class).build());
",0,2,13,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
276,"final private Serde<Windowed<String>> keySerde = new WindowedSerdes.TimeWindowedSerde<>(serde, Long.MAX_VALUE);","final private Serde<Windowed<String>> keySerde=new WindowedSerdes.TimeWindowedSerde<>(serde,Long.MAX_VALUE);
",0,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
277,private int port = NetUtils.getAvailablePort(20880 + new Random().nextInt(10000));,"private int port=NetUtils.getAvailablePort(20880 + new Random().nextInt(10000));
",0,9,9,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
278,"private VariationIterator<RenderPageRequestHandler.RedirectPolicy> redirectPolicy = VariationIterator.of(ajax, Variation.of(RenderPageRequestHandler.RedirectPolicy.class));","private VariationIterator<RenderPageRequestHandler.RedirectPolicy> redirectPolicy=VariationIterator.of(ajax,Variation.of(RenderPageRequestHandler.RedirectPolicy.class));
",0,16,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
279,protected Predicate<? super byte[]> iconData;,"protected Predicate<? super byte[]> iconData;
",0,0,5,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
280,"private UriBuilder uriBuilder = new org.apache.cxf.jaxrs.impl.UriBuilderImpl(URI.create(""http:","private UriBuilder uriBuilder=new org.apache.cxf.jaxrs.impl.UriBuilderImpl(URI.create(""http://localhost""));
",0,10,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
281,@Nonnull Maybe<? extends TValue> value = Maybe.absent();,"@Nonnull Maybe<? extends TValue> value=Maybe.absent();
",0,3,6,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
282,"private final Table<Class<?>, Class<?>, Function<?,?>> registry = HashBasedTable.create();","/** 
 * Store the coercion  {@link Function functions} in a {@link Table table}. 
 */
private final Table<Class<?>,Class<?>,Function<?,?>> registry=HashBasedTable.create();
",0,0,13,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
"
283,private volatile Future<?> future = Futures.immediateFuture(null);,"private volatile Future<?> future=Futures.immediateFuture(null);
",0,3,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
284,"final Lazy<IllegalStateException> exc = new Lazy<>(() -> Exceptions.create(IllegalStateException::new,","final Lazy<IllegalStateException> exc=new Lazy<>(() -> Exceptions.create(IllegalStateException::new,""%s is not meant to participate in validation lifecycle"",getClass()));
",0,6,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, LambdaExpression-body, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, LambdaExpression-body, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, CreationReference-type, MethodInvocation-arguments, LambdaExpression-body, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
285,"private final LazyInt hashCode = new LazyInt(() -> Objects.hash(getContainerClass(), getTypeArgumentIndex()));","private final LazyInt hashCode=new LazyInt(() -> Objects.hash(getContainerClass(),getTypeArgumentIndex()));
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, LambdaExpression-body, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, LambdaExpression-body, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, LambdaExpression-body, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, LambdaExpression-body, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
286,"private final Lazy<String> toString = new Lazy<>(() -> String.format(""%s: %s<[%d]>"",","private final Lazy<String> toString=new Lazy<>(() -> String.format(""%s: %s<[%d]>"",ContainerElementKey.class.getSimpleName(),getContainerClass().getName(),getTypeArgumentIndex()));
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, LambdaExpression-body, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, LambdaExpression-body, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, LambdaExpression-body, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
287,private final Lazy<EmptyBuilder.ForClass> forClass = new Lazy<>(EmptyBuilder.ForClass::new);,"@SuppressWarnings(""rawtypes"") private final Lazy<EmptyBuilder.ForClass> forClass=new Lazy<>(EmptyBuilder.ForClass::new);
",0,0,7,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
QualifiedName(SimpleType-name, CreationReference-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
288,"private final Function<String, ? extends @Nullable Object> fn;","private final Function<String,? extends @Nullable Object> fn;
",0,6,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(MarkerAnnotation-typeName, SimpleType-annotations, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
289,"private final LoadingCache<List<@Nullable String>, BasicDataSource> cache =","private final LoadingCache<List<@Nullable String>,BasicDataSource> cache=CacheBuilder.newBuilder().softValues().build(CacheLoader.from(DataSourcePool::dataSource));
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(MarkerAnnotation-typeName, SimpleType-annotations, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
290,"private final @NonNullable ConcurrentMap<K, ? extends IKey<K>> synMap;","private final @NonNullable ConcurrentMap<K,? extends IKey<K>> synMap;
",0,6,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
291,"private Function<? super ResourceID, Boolean> registerTaskManagerFunction = ignored -> false;","private Function<? super ResourceID,Boolean> registerTaskManagerFunction=ignored -> false;
",0,3,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
292,"Predicate<Pair<Space, Column>> predicate = p -> true;","Predicate<Pair<Space,Column>> predicate=p -> true;
",0,0,7,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
293,private final @Nullable PrintWriter pw = CalciteSystemProperty.DEBUG.value(),"private final @Nullable PrintWriter pw=CalciteSystemProperty.DEBUG.value() ? Util.printWriter(System.out) : null;
",0,1,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
294,private @Nullable SqlNode @Nullable [] thisOperands;,"private @Nullable SqlNode @Nullable [] thisOperands;
",0,0,5,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
SimpleName(MarkerAnnotation-typeName, Dimension-annotations, ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
295,protected final ImmutableList<@UnknownKeyFor ? extends SqlOperandTypeChecker> allowedRules;,"protected final ImmutableList<@UnknownKeyFor ? extends SqlOperandTypeChecker> allowedRules;
",0,0,6,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(MarkerAnnotation-typeName, WildcardType-annotations, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
296,protected final ReflectUtil.MethodDispatcher<@Nullable Frame> dispatcher =,"@SuppressWarnings(""method.invocation.invalid"") protected final ReflectUtil.MethodDispatcher<@Nullable Frame> dispatcher=ReflectUtil.<RelNode,@Nullable Frame>createMethodDispatcher(Frame.class,getVisitor(),""decorrelateRel"",RelNode.class,boolean.class);
",0,0,6,,"Modifier(),
Modifier(),
QualifiedName(SimpleType-name, ParameterizedType-type, ),
SimpleName(MarkerAnnotation-typeName, SimpleType-annotations, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
"
297,"private final @NotNull Map<@NotNull String, @NotNull Integer> nodePathsAndLineNumbers;","private final @NotNull Map<@NotNull String,@NotNull Integer> nodePathsAndLineNumbers;
",0,2,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(MarkerAnnotation-typeName, SimpleType-annotations, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(MarkerAnnotation-typeName, SimpleType-annotations, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
298,private final RelProtoDataType protoRowType = a0 -> a0.builder(),"private final RelProtoDataType protoRowType=a0 -> a0.builder().add(""ID"",SqlTypeName.VARCHAR,32).add(""SUPPLIER"",SqlTypeName.INTEGER).build();
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
299,"private final Transformer<Object, Class<?>> objectToClass = input -> input == null ? null : input.getClass();","private final Transformer<Object,Class<?>> objectToClass=input -> input == null ? null : input.getClass();
",0,2,13,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, ConditionalExpression-expression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(InfixExpression-rightOperand, ConditionalExpression-expression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ConditionalExpression-thenExpression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ConditionalExpression-elseExpression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ConditionalExpression-elseExpression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
300,"private Set<TestSegment> segments = new TreeSet<>((TestSegment seg1, TestSegment seg2) -> {","private Set<TestSegment> segments=new TreeSet<>((TestSegment seg1,TestSegment seg2) -> {
  if (seg1.equals(seg2)) {
    return 0;
  }
  if (seg1.startTime != 0 && seg2.startTime != 0) {
    if (seg1.startTime == seg2.startTime) {
      return -1;
    }
    return seg1.startTime < seg2.startTime ? -1 : 1;
  }
 else {
    return 1;
  }
}
);
",0,1,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, SingleVariableDeclaration-type, LambdaExpression-parameters, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SingleVariableDeclaration-name, LambdaExpression-parameters, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, SingleVariableDeclaration-type, LambdaExpression-parameters, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SingleVariableDeclaration-name, LambdaExpression-parameters, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
301,"private final String s3Bucket = ""s3:","private final String s3Bucket=""s3://your-s3-bucket/"" + UUID.randomUUID().toString() + ""/"";
",0,2,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
302,BindyCsvDataFormat camelDataFormat = new BindyCsvDataFormat(BindyDoNotRemoveQuotesCsvUnmarshallTest.Product.class);,"BindyCsvDataFormat camelDataFormat=new BindyCsvDataFormat(BindyDoNotRemoveQuotesCsvUnmarshallTest.Product.class);
",0,0,4,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, TypeLiteral-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
303,private Cache cacheRl = Caffeine.newBuilder().recordStats().removalListener(new DummyRemovalListener()).build();,"@BindToRegistry(""cacheRl"") private Cache cacheRl=Caffeine.newBuilder().recordStats().removalListener(new DummyRemovalListener()).build();
",0,8,9,,"Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
"
304,private Cache cacheSc = Caffeine.newBuilder().recordStats(() -> new MetricsStatsCounter(mRegistry)).build();,"@BindToRegistry(""cacheSc"") private Cache cacheSc=Caffeine.newBuilder().recordStats(() -> new MetricsStatsCounter(mRegistry)).build();
",0,0,9,,"Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, LambdaExpression-body, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(ClassInstanceCreation-arguments, LambdaExpression-body, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
"
305,"private Map<String, List<Class<?>>> _aliases = Collections.synchronizedMap(new HashMap<>());","private Map<String,List<Class<?>>> _aliases=Collections.synchronizedMap(new HashMap<>());
",0,1,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
306,"byte[] array = { (byte) 0x01, (byte) 0x23, (byte) 0x45, (byte) 0x67, (byte) 0x89, (byte) 0xAB, (byte) 0xCD, (byte) 0xEF };","byte[] array={(byte)0x01,(byte)0x23,(byte)0x45,(byte)0x67,(byte)0x89,(byte)0xAB,(byte)0xCD,(byte)0xEF};
",0,0,19,,"PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(CastExpression-expression, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(CastExpression-expression, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(CastExpression-expression, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(CastExpression-expression, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(CastExpression-expression, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(CastExpression-expression, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(CastExpression-expression, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(CastExpression-expression, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
307,"private final MailBinding binding = new MailBinding(new DefaultHeaderFilterStrategy(), null, true);","private final MailBinding binding=new MailBinding(new DefaultHeaderFilterStrategy(),null,true);
",0,1,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
308,Class<?> printServiceLookupServicesClass = PrintServiceLookup.class.getDeclaredClasses()[0];,"Class<?> printServiceLookupServicesClass=PrintServiceLookup.class.getDeclaredClasses()[0];
",0,0,6,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, ArrayAccess-array, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayAccess-array, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayAccess-index, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
309,"private final DimFilter in1 = new InDimFilter(""dim1"", ImmutableList.of(""testing"", ""this"", ""filter"", ""tillend""), null);","private final DimFilter in1=new InDimFilter(""dim1"",ImmutableList.of(""testing"",""this"",""filter"",""tillend""),null);
",0,18,13,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
310,"private final String[] removeProperties  = new String[] {null, null, ""e"",  ""h"",    ""kl"",    null,    null,      ""s"",       null,    ""wx""};","private final String[] removeProperties=new String[]{null,null,""e"",""h"",""kl"",null,null,""s"",null,""wx""};
",0,16,17,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
311,"private MockBundleContext bundleContext = new MockBundleContext(getClass().getClassLoader(), null, configurations, null);","private MockBundleContext bundleContext=new MockBundleContext(getClass().getClassLoader(),null,configurations,null);
",0,1,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
312,"private final Supplier<Message>[] msgSuppliers = (Supplier<Message>[]) Array.newInstance(Supplier.class, ARR_SIZE);","/** 
 * Message suppliers. 
 */
private final Supplier<Message>[] msgSuppliers=(Supplier<Message>[])Array.newInstance(Supplier.class,ARR_SIZE);
",0,3,13,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, CastExpression-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ArrayType-elementType, CastExpression-type, VariableDeclarationFragment-initializer, ),
Dimension(ArrayType-dimensions, CastExpression-type, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, CastExpression-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, CastExpression-expression, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, CastExpression-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-arguments, CastExpression-expression, VariableDeclarationFragment-initializer, ),
"
313,protected int bufSoftLimit = (bufLoadFactor * buf.length) / 100;,"protected int bufSoftLimit=(bufLoadFactor * buf.length) / 100;
",0,0,6,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-rightOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
314,"private final Map<Service, ? extends SdkClient> clients = new EnumMap<>(Service.class);","private final Map<Service,? extends SdkClient> clients=new EnumMap<>(Service.class);
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
315,"private final String postUrl = HTTP_BASE_URL + ""/"" + getClass().getSimpleName() + ""/"" + System.currentTimeMillis() + SlingPostConstants.STAR_CREATE_SUFFIX;","private final String postUrl=HTTP_BASE_URL + ""/"" + getClass().getSimpleName()+ ""/""+ System.currentTimeMillis()+ SlingPostConstants.STAR_CREATE_SUFFIX;
",0,80,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
316,"final int testTwitterDelayInitial = ConfigProvider.getConfig().getOptionalValue(""test.twitter.delay.initial"", Integer.class)","final int testTwitterDelayInitial=ConfigProvider.getConfig().getOptionalValue(""test.twitter.delay.initial"",Integer.class).orElse(60);
",0,17,8,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
317,"public GenericContainer<?> sftp = new GenericContainer<>(""atmoz/sftp"")","@Rule public GenericContainer<?> sftp=new GenericContainer<>(""atmoz/sftp"").withEnv(""SFTP_USERS"",USERNAME + "":"" + PASSWORD).withNetwork(network).withFileSystemBind(""target"",""/home/foo"").withExposedPorts(22);
",0,1,6,,"Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
WildcardType(ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
StringLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
"
318,"protected Function<RoleResource, Set<PermissionDetails>> getPermissions = permissionsCache::get;","protected Function<RoleResource,Set<PermissionDetails>> getPermissions=permissionsCache::get;
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(ExpressionMethodReference-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ExpressionMethodReference-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
319,"private final Map<String, Map<ByteBuffer, IMutationBuilder>> mutationBuilders = Maps.newHashMapWithExpectedSize(1);","/** 
 * The mutations per keyspace. optimised for the common single-keyspace case Key is keyspace name, then we have an IMutationBuilder for each touched partition key in that keyspace MutationBuilder holds a PartitionUpdate.Builder
 */
private final Map<String,Map<ByteBuffer,IMutationBuilder>> mutationBuilders=Maps.newHashMapWithExpectedSize(1);
",0,0,11,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
320,"private final Multimap<Pair<ColumnIdentifier, ByteBuffer>, ColumnCondition.Bound> conditions = HashMultimap.create();","private final Multimap<Pair<ColumnIdentifier,ByteBuffer>,ColumnCondition.Bound> conditions=HashMultimap.create();
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
321,private final boolean respectTombstoneThresholds = !SchemaConstants.isLocalSystemKeyspace(ReadCommand.this.metadata().keyspace);,"private final boolean respectTombstoneThresholds=!SchemaConstants.isLocalSystemKeyspace(ReadCommand.this.metadata().keyspace);
",0,21,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, PrefixExpression-operand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, PrefixExpression-operand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ThisExpression-qualifier, MethodInvocation-expression, FieldAccess-expression, MethodInvocation-arguments, PrefixExpression-operand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, FieldAccess-expression, MethodInvocation-arguments, PrefixExpression-operand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(FieldAccess-name, MethodInvocation-arguments, PrefixExpression-operand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
322,private final BooleanSupplier managerThreadWaitCondition = () -> (availableSegment == null && !atSegmentBufferLimit()) || shutdown;,"private final BooleanSupplier managerThreadWaitCondition=() -> (availableSegment == null && !atSegmentBufferLimit()) || shutdown;
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(InfixExpression-rightOperand, InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, PrefixExpression-operand, InfixExpression-rightOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
323,private final RateLimiter rateLimiter = RateLimiter.create(1000.0 / DatabaseDescriptor.getCDCDiskCheckInterval());,"private final RateLimiter rateLimiter=RateLimiter.create(1000.0 / DatabaseDescriptor.getCDCDiskCheckInterval());
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
324,"public Map<String, byte[]> map = new ConcurrentLinkedHashMap.Builder<String, byte[]>().maximumWeightedCapacity(8).build();","public Map<String,byte[]> map=new ConcurrentLinkedHashMap.Builder<String,byte[]>().maximumWeightedCapacity(8).build();
",0,20,13,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
325,"private final boolean strictLCSChecksTest = Boolean.getBoolean(Config.PROPERTY_PREFIX + ""test.strict_lcs_checks"");","private final boolean strictLCSChecksTest=Boolean.getBoolean(Config.PROPERTY_PREFIX + ""test.strict_lcs_checks"");
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
326,"private Function<String, ? extends Collection<Range<Token>>> tokenLookup = StorageService.instance::getLocalAndPendingRanges;","private Function<String,? extends Collection<Range<Token>>> tokenLookup=StorageService.instance::getLocalAndPendingRanges;
",0,4,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(ExpressionMethodReference-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ExpressionMethodReference-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
327,"private ImmutableMap<Class, ImmutableSetMultimap<Enum<?>, Consumer<DiagnosticEvent>>> subscribersByClassAndType = ImmutableMap.of();","private ImmutableMap<Class,ImmutableSetMultimap<Enum<?>,Consumer<DiagnosticEvent>>> subscribersByClassAndType=ImmutableMap.of();
",0,0,11,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
328,private final double PHI_FACTOR = 1.0 / Math.log(10.0);,"private final double PHI_FACTOR=1.0 / Math.log(10.0);
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
329,"private final Supplier<CassandraVersion> upgradeFromVersionMemoized = ExpiringMemoizingSupplier.memoizeWithExpiration(upgradeFromVersionSupplier, 1, TimeUnit.MINUTES);","private final Supplier<CassandraVersion> upgradeFromVersionMemoized=ExpiringMemoizingSupplier.memoizeWithExpiration(upgradeFromVersionSupplier,1,TimeUnit.MINUTES);
",0,1,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
330,private final ThreadLocal<Long> updateSize = ThreadLocal.withInitial(() -> 0L);,"private final ThreadLocal<Long> updateSize=ThreadLocal.withInitial(() -> 0L);
",0,6,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(LambdaExpression-body, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
331,"final TrieEntry<K, V> root = new TrieEntry<>(null, null, -1);","/** 
 * The root node of the  {@link Trie}.
 */
final TrieEntry<K,V> root=new TrieEntry<>(null,null,-1);
",0,0,9,,"Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
NumberLiteral(PrefixExpression-operand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
332,private final InboundSockets inboundSockets = new InboundSockets(new InboundConnectionSettings(),"private final InboundSockets inboundSockets=new InboundSockets(new InboundConnectionSettings().withHandlers(this::getInbound).withSocketFactory(socketFactory));
",0,1,6,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
333,"private int numMaxThreads = Math.max(10, (JvmUtils.getRuntimeInfo().getAvailableProcessors() * 17) / 16 + 2) + 30;","@JsonProperty @Min(1) private int numMaxThreads=Math.max(10,(JvmUtils.getRuntimeInfo().getAvailableProcessors() * 17) / 16 + 2) + 30;
",0,4,13,,"Modifier(),
PrimitiveType(),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
NumberLiteral(MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, InfixExpression-leftOperand, MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, InfixExpression-leftOperand, MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, InfixExpression-leftOperand, MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
NumberLiteral(InfixExpression-rightOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, InfixExpression-leftOperand, MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
NumberLiteral(InfixExpression-rightOperand, InfixExpression-leftOperand, MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
NumberLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
NumberLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, ),
"
334,"private final boolean isOnWindows = System.getProperty(""os.name"").toLowerCase(Locale.ENGLISH).contains(""windows"");","private final boolean isOnWindows=System.getProperty(""os.name"").toLowerCase(Locale.ENGLISH).contains(""windows"");
",0,72,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
335,public volatile VersionedValue.VersionedValueFactory valueFactory = new VersionedValue.VersionedValueFactory(tokenMetadata.partitioner);,"public volatile VersionedValue.VersionedValueFactory valueFactory=new VersionedValue.VersionedValueFactory(tokenMetadata.partitioner);
",0,0,6,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
336,"private final List<Character> fullRange = Collections.unmodifiableList(Arrays.asList('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm'));","private final List<Character> fullRange=Collections.unmodifiableList(Arrays.asList('a','b','c','d','e','f','g','h','i','j','k','l','m'));
",0,8,22,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
337,public final BlockingQueue<Message.Response> responses = new SynchronousQueue<>(true);,"public final BlockingQueue<Message.Response> responses=new SynchronousQueue<>(true);
",0,4,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
338,"Thread binLogThread = new NamedThreadFactory(""Binary Log thread"").newThread(this);","@VisibleForTesting Thread binLogThread=new NamedThreadFactory(""Binary Log thread"").newThread(this);
",0,0,6,,"SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
StringLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
ThisExpression(MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
339,private Object[] buildChildren = new Object[1 + MAX_KEYS];,"private Object[] buildChildren=new Object[1 + MAX_KEYS];
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
340,"private ConnectionState currentConnection = new ConnectionState(connectionCounter++, current_version);","private ConnectionState currentConnection=new ConnectionState(connectionCounter++,current_version);
",0,0,6,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(PostfixExpression-operand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
341,"private ByteBuffer testVal = ByteBuffer.wrap(new byte[] { 0, 1});","private ByteBuffer testVal=ByteBuffer.wrap(new byte[]{0,1});
",0,2,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
342,"private final TableMetadata metadata = TableMetadata.builder(""ks"", ""table"")","private final TableMetadata metadata=TableMetadata.builder(""ks"",""table"").partitioner(Murmur3Partitioner.instance).addPartitionKeyColumn(""pk"",Int32Type.instance).addClusteringColumn(""ck"",Int32Type.instance).addStaticColumn(""s1"",Int32Type.instance).addStaticColumn(""s2"",SetType.getInstance(Int32Type.instance,true)).addRegularColumn(""v1"",Int32Type.instance).addRegularColumn(""v2"",SetType.getInstance(Int32Type.instance,true)).addRegularColumn(ColumnIdentifier.getInterned(""Escaped Name"",true),Int32Type.instance).build();
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
343,private ObjectMapper mapper = StreamsJacksonMapper.getInstance(Stream.of(TWITTER_FORMAT).collect(Collectors.toList()));,"private ObjectMapper mapper=StreamsJacksonMapper.getInstance(Stream.of(TWITTER_FORMAT).collect(Collectors.toList()));
",0,1,11,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
344,ByteBuffer corpus = ByteBuffer.allocate(1024 * 1024 * 8);,"ByteBuffer corpus=ByteBuffer.allocate(1024 * 1024 * 8);
",0,0,7,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-extendedOperands, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
345,"final RangesAtEndpoint current = RangesAtEndpoint.of(new Replica(address01, range_1_2, true),","final RangesAtEndpoint current=RangesAtEndpoint.of(new Replica(address01,range_1_2,true),new Replica(address01,range_11_1,true),new Replica(address01,range_9_11,false));
",0,1,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
346,String legacyId = LegacySSTableTest.legacyVersions[LegacySSTableTest.legacyVersions.length - 1];,"String legacyId=LegacySSTableTest.legacyVersions[LegacySSTableTest.legacyVersions.length - 1];
",0,0,5,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(ArrayAccess-array, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-leftOperand, ArrayAccess-index, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ArrayAccess-index, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
347,"int[] values = new int[] { Integer.MIN_VALUE, -2, -1, 0, 5, 9, 13, Integer.MAX_VALUE };","int[] values=new int[]{Integer.MIN_VALUE,-2,-1,0,5,9,13,Integer.MAX_VALUE};
",0,0,13,,"PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
348,"Map<Level, Queue<Pair<String, Object[]>>> logged = new HashMap<>();","Map<Level,Queue<Pair<String,Object[]>>> logged=new HashMap<>();
",0,0,9,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
349,"private DruidNode druidNode = new DruidNode(""dummy"", ""dummy"", false, 10000, null, true, false);","private DruidNode druidNode=new DruidNode(""dummy"",""dummy"",false,10000,null,true,false);
",0,41,11,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
350,"private final Configuration<Object, Object> configuration = new MutableConfiguration<>()","private final Configuration<Object,Object> configuration=new MutableConfiguration<>().setStoreByValue(false).setExpiryPolicyFactory(CreatedExpiryPolicy.factoryOf(Duration.TEN_MINUTES));
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
351,private final Timer[] _phaseTimers = new Timer[ServerQueryPhase.values().length];,"private final Timer[] _phaseTimers=new Timer[ServerQueryPhase.values().length];
",0,4,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, FieldAccess-expression, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, FieldAccess-expression, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(FieldAccess-name, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
352,"Map<String, Object> listContext = new HashMap<String, Object>(){{put(ITEM_VAR, null);}};","Map<String,Object> listContext=new HashMap<String,Object>(){
{
    put(ITEM_VAR,null);
  }
}
;
",0,0,10,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ExpressionStatement-expression, Block-statements, Initializer-body, AnonymousClassDeclaration-bodyDeclarations, ClassInstanceCreation-anonymousClassDeclaration, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, ExpressionStatement-expression, Block-statements, Initializer-body, AnonymousClassDeclaration-bodyDeclarations, ClassInstanceCreation-anonymousClassDeclaration, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(MethodInvocation-arguments, ExpressionStatement-expression, Block-statements, Initializer-body, AnonymousClassDeclaration-bodyDeclarations, ClassInstanceCreation-anonymousClassDeclaration, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
353,"private final DropDownChoice<String> timeZoneId = new DropDownChoice<>(""timeZoneId"", Model.of((String)null), AVAILABLE_TIMEZONES);","private final DropDownChoice<String> timeZoneId=new DropDownChoice<>(""timeZoneId"",Model.of((String)null),AVAILABLE_TIMEZONES);
",0,28,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, CastExpression-type, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(CastExpression-expression, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
354,"private final URL resource = getClass().getResource(""/"" + testFileName);","private final URL resource=getClass().getResource(""/"" + testFileName);
",0,2,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
355,private final Class<?>[] NO_PARAMETER_TYPES = new Class[]{};,"private final Class<?>[] NO_PARAMETER_TYPES=new Class[]{};
",0,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ArrayInitializer(ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
356,"byte[] CF = ""t"".getBytes(Charset.forName(""UTF-8""));","byte[] CF=""t"".getBytes(Charset.forName(""UTF-8""));
",0,28,8,,"PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
357,int fileSize = IndexDefinition.DEFAULT_BLOB_SIZE * 2 + rnd.nextInt(1000);,"int fileSize=IndexDefinition.DEFAULT_BLOB_SIZE * 2 + rnd.nextInt(1000);
",0,1,7,,"PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-leftOperand, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
358,"private final File _tempDirTls = new File(FileUtils.getTempDirectory(), getClass().getSimpleName() + ""-cert"");","private final File _tempDirTls=new File(FileUtils.getTempDirectory(),getClass().getSimpleName() + ""-cert"");
",0,1,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
359,"ResizeVolumeCommand rv = new ResizeVolumeCommand(""dummydiskpath"", new StorageFilerTO(dummypool), currentSize, newSize, false, ""vmName"");","ResizeVolumeCommand rv=new ResizeVolumeCommand(""dummydiskpath"",new StorageFilerTO(dummypool),currentSize,newSize,false,""vmName"");
",0,1,10,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
360,"AttachIsoCommand aic = new AttachIsoCommand(""vmname"", ""isopath"", false, 1, true);","AttachIsoCommand aic=new AttachIsoCommand(""vmname"",""isopath"",false,1,true);
",0,0,8,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
361,"HashMap<ConfigKey.Scope, Set<ConfigKey<?>>> _scopeLevelConfigsMap = new HashMap<ConfigKey.Scope, Set<ConfigKey<?>>>();","HashMap<ConfigKey.Scope,Set<ConfigKey<?>>> _scopeLevelConfigsMap=new HashMap<ConfigKey.Scope,Set<ConfigKey<?>>>();
",0,0,11,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
362,"protected WeakHashMap<Class<?>, List<Method>> allMethodsCache = new WeakHashMap<Class<?>, List<Method>>();","protected WeakHashMap<Class<?>,List<Method>> allMethodsCache=new WeakHashMap<Class<?>,List<Method>>();
",0,1,12,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
363,"HashMap<String, Pair<String, VirtualMachine.State>> _changes = new HashMap<String, Pair<String, VirtualMachine.State>>();","HashMap<String,Pair<String,VirtualMachine.State>> _changes=new HashMap<String,Pair<String,VirtualMachine.State>>();
",0,0,11,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
364,"@SerializedName(""suggestions"") private List<Map<String, List<NCSuggestionBean>>> suggestions;","@SerializedName(""suggestions"") private List<Map<String,List<NCSuggestionBean>>> suggestions;
",0,240,9,,"SimpleName(SingleMemberAnnotation-typeName, FieldDeclaration-modifiers, ),
StringLiteral(SingleMemberAnnotation-value, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
365,"@SerializedName(""warnings"") private java.util.List<String> warnings;","@SerializedName(""warnings"") private java.util.List<String> warnings;
",0,1,6,,"SimpleName(SingleMemberAnnotation-typeName, FieldDeclaration-modifiers, ),
StringLiteral(SingleMemberAnnotation-value, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
366,"private final Location zone = new LocationBuilder().id(""EU6"").description(""EU6"").scope(LocationScope.ZONE).build();","private final Location zone=new LocationBuilder().id(""EU6"").description(""EU6"").scope(LocationScope.ZONE).build();
",0,1,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
367,"public final long DELETE_MARGIN_MILLIS = Long.getLong(DELETE_MARGIN_MILLIS_NAME, TimeUnit.MINUTES.toMillis(5));","public final long DELETE_MARGIN_MILLIS=Long.getLong(DELETE_MARGIN_MILLIS_NAME,TimeUnit.MINUTES.toMillis(5));
",0,5,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
368,final Type fieldArrayType = Type.getType(java.lang.reflect.Field[].class);,"final Type fieldArrayType=Type.getType(java.lang.reflect.Field[].class);
",0,2,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ArrayType-elementType, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
369,"VlanVO vlan = new VlanVO(Vlan.VlanType.VirtualNetwork, ""vlantag"", ""vlangateway"", ""vlannetmask"", 1L, ""iprange"", 1L, 1L, null, null, null);","VlanVO vlan=new VlanVO(Vlan.VlanType.VirtualNetwork,""vlantag"",""vlangateway"",""vlannetmask"",1L,""iprange"",1L,1L,null,null,null);
",0,0,14,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
370,"VpcVO _vo = new VpcVO(1, ""new vpc"", ""new vpc"", 1, 1, 1, ""0.0.0.0/0"", ""vpc domain"", false, false, false);","VpcVO _vo=new VpcVO(1,""new vpc"",""new vpc"",1,1,1,""0.0.0.0/0"",""vpc domain"",false,false,false);
",0,0,14,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
371,"private final List<String> msList = Arrays.asList(msCSVList.replace("" "","""").split("",""));","private final List<String> msList=Arrays.asList(msCSVList.replace("" "","""").split("",""));
",0,9,13,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
372,public NegoFlags clientConfigFlags = new NegoFlags().set_NEGOTIATE_56().set_NEGOTIATE_KEY_EXCH().set_NEGOTIATE_128().set_NEGOTIATE_VERSION(),"/** 
 * The set of client configuration flags (section 2.2.2.5) that specify the full set of capabilities of the client.
 */
public NegoFlags clientConfigFlags=new NegoFlags().set_NEGOTIATE_56().set_NEGOTIATE_KEY_EXCH().set_NEGOTIATE_128().set_NEGOTIATE_VERSION().set_NEGOTIATE_EXTENDED_SESSION_SECURITY().set_NEGOTIATE_ALWAYS_SIGN().set_NEGOTIATE_NTLM().set_NEGOTIATE_LM_KEY().set_NEGOTIATE_SEAL().set_NEGOTIATE_SIGN().set_REQUEST_TARGET().set_NEGOTIATE_OEM().set_NEGOTIATE_UNICODE();
",0,0,8,,"Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
"
373,"protected boolean verbose = System.getProperty(""streamer.Pipeline.debug"", ""false"").equals(""true"");","protected boolean verbose=System.getProperty(""streamer.Pipeline.debug"",""false"").equals(""true"");
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
374,"RedfishClient redfishClientspy = Mockito.spy(new RedfishClient(USERNAME, PASSWORD, true, true, REDFISHT_REQUEST_RETRIES));","RedfishClient redfishClientspy=Mockito.spy(new RedfishClient(USERNAME,PASSWORD,true,true,REDFISHT_REQUEST_RETRIES));
",0,0,10,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
375,"private final JButton okButton = new JButton(NbBundle.getMessage(this.getClass(), ""OPTION_OK""));","private final JButton okButton=new JButton(NbBundle.getMessage(this.getClass(),""OPTION_OK""));
",0,9,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(MethodInvocation-expression, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
376,"private final Object[] values = new Object[] {stringVal, null, intVal, dateVal, mapVal};","private final Object[] values=new Object[]{stringVal,null,intVal,dateVal,mapVal};
",0,0,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
377,private final long timestamp = new java.util.Date().getTime();,"private final long timestamp=new java.util.Date().getTime();
",0,0,6,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
378,protected DynaClass pojoDynaClass = new WrapDynaBean(new TestBean()).getDynaClass();,"protected DynaClass pojoDynaClass=new WrapDynaBean(new TestBean()).getDynaClass();
",0,0,6,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
379,private Reference<Object[]> lastGroupsAndBreakpoints = new SoftReference<Object[]>(null);,"private Reference<Object[]> lastGroupsAndBreakpoints=new SoftReference<Object[]>(null);
",0,1,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
380,"private int displaySize = Integer.MAX_VALUE, type = Types.JAVA_OBJECT, precision = 0, scale = 0,","private int displaySize=Integer.MAX_VALUE, type=Types.JAVA_OBJECT, precision=0, scale=0, nullable=ResultSetMetaData.columnNoNulls;
",0,1,10,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
381,"private final Map<Module,Class<? extends ModuleInstall>> installs = new HashMap<Module,Class<? extends ModuleInstall>>(100);","/** 
 * ModuleInstall classes for each module that declares one 
 */
private final Map<Module,Class<? extends ModuleInstall>> installs=new HashMap<Module,Class<? extends ModuleInstall>>(100);
",0,1,12,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
382,"Transformer<Object, Integer> TRANSFORM_TO_INTEGER = input -> Integer.valueOf(((Long) input).intValue());","Transformer<Object,Integer> TRANSFORM_TO_INTEGER=input -> Integer.valueOf(((Long)input).intValue());
",0,0,10,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
383,"private final Function<int[], BloomFilter> converter = counts -> {","/** 
 * Function to convert int arrays to BloomFilters for testing.
 */
private final Function<int[],BloomFilter> converter=counts -> {
  final BloomFilter testingFilter=new BitSetBloomFilter(shape);
  testingFilter.merge(new FixedIndexesTestHasher(shape,counts));
  return testingFilter;
}
;
",0,0,8,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, ),
"
384,protected Predicate<E> testPredicate = o -> o instanceof String;,"protected Predicate<E> testPredicate=o -> o instanceof String;
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InstanceofExpression-leftOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, InstanceofExpression-rightOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
385,"private final RequestProcessor.Task checkTask = RP.create(this::delayedCheck, true);","private final RequestProcessor.Task checkTask=RP.create(this::delayedCheck,true);
",0,13,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(ExpressionMethodReference-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ExpressionMethodReference-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
386,"private Gson gson = new GsonBuilder().registerTypeAdapter(new TypeToken<FlowSpec>() {}.getType(), new FlowSpecSerializer())","private Gson gson=new GsonBuilder().registerTypeAdapter(new TypeToken<FlowSpec>(){
}
.getType(),new FlowSpecSerializer()).registerTypeAdapter(new TypeToken<FlowSpec>(){
}
.getType(),new FlowSpecDeserializer()).create();
",0,21,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
AnonymousClassDeclaration(ClassInstanceCreation-anonymousClassDeclaration, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
387,"private List<Object> list = Arrays.<Object>asList(0,1,2,3,4,5,6,7,8,9);","private List<Object> list=Arrays.<Object>asList(0,1,2,3,4,5,6,7,8,9);
",0,11,17,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
388,"private final Iterator<? extends Cache.Entry<K, V>> it;","/** 
 * Base iterator. 
 */
private final Iterator<? extends Cache.Entry<K,V>> it;
",0,2,7,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
"
389,"private final Map<Integer, Set<V>> orderedVertices = new TreeMap<Integer, Set<V>>( this );","private final Map<Integer,Set<V>> orderedVertices=new TreeMap<Integer,Set<V>>(this);
",0,7,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
390,"private byte[] sampleBytes = new byte[]{(byte)0x12, (byte)0x0F, (byte)0xF0};","private byte[] sampleBytes=new byte[]{(byte)0x12,(byte)0x0F,(byte)0xF0};
",0,7,12,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(CastExpression-expression, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(CastExpression-expression, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(CastExpression-expression, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
391,private final Class<? super PublicChild> parentClass = PublicChild.class.getSuperclass();,"private final Class<? super PublicChild> parentClass=PublicChild.class.getSuperclass();
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
392,protected Class logConstructorSignature[] = { java.lang.String.class };,"/** 
 * The signature of the Constructor to be used.
 */
protected Class logConstructorSignature[]={java.lang.String.class};
",0,0,5,,"Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
Dimension(VariableDeclarationFragment-extraDimensions2, ),
QualifiedName(SimpleType-name, TypeLiteral-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
"
393,protected Class logMethodSignature[] = { LogFactory.class };,"/** 
 * The signature of the <code>setLogFactory</code> method to be used.
 */
protected Class logMethodSignature[]={LogFactory.class};
",0,0,5,,"Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
Dimension(VariableDeclarationFragment-extraDimensions2, ),
SimpleName(SimpleType-name, TypeLiteral-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
"
394,"private final Map<Class<? extends Annotation>, T2<GridResourceField[], GridResourceMethod[]>> annMap;","/** 
 */
private final Map<Class<? extends Annotation>,T2<GridResourceField[],GridResourceMethod[]>> annMap;
",0,1,11,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
"
395,private final double[][][] a = new double[N][N][N];,"/** 
 * Coefficients. 
 */
private final double[][][] a=new double[N][N][N];
",0,1,14,,"Modifier(),
Modifier(),
PrimitiveType(ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
Dimension(ArrayType-dimensions, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, ),
"
396,"private final byte[][] bytes = new byte[][]{{0}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}};","private final byte[][] bytes=new byte[][]{{0},{1},{2},{3},{4},{5},{6},{7},{8},{9},{10}};
",0,49,20,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
397,"private final Dfp[][] d3 = new Dfp[][] {{Dfp25.of(1),Dfp25.of(2),Dfp25.of(3),Dfp25.of(4)},{Dfp25.of(5),Dfp25.of(6),Dfp25.of(7),Dfp25.of(8)}};","private final Dfp[][] d3=new Dfp[][]{{Dfp25.of(1),Dfp25.of(2),Dfp25.of(3),Dfp25.of(4)},{Dfp25.of(5),Dfp25.of(6),Dfp25.of(7),Dfp25.of(8)}};
",0,9,33,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
398,"protected Dfp[][] subTestData = {{Dfp25.of(1), Dfp25.of(2), Dfp25.of(3), Dfp25.of(4)}, {Dfp25.of(3, 2), Dfp25.of(5, 2), Dfp25.of(7, 2), Dfp25.of(9, 2)},","protected Dfp[][] subTestData={{Dfp25.of(1),Dfp25.of(2),Dfp25.of(3),Dfp25.of(4)},{Dfp25.of(3,2),Dfp25.of(5,2),Dfp25.of(7,2),Dfp25.of(9,2)},{Dfp25.of(2),Dfp25.of(4),Dfp25.of(6),Dfp25.of(8)},{Dfp25.of(4),Dfp25.of(5),Dfp25.of(6),Dfp25.of(7)}};
",0,0,33,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
399,"protected Dfp[][] testDataInv = { { Dfp25.of(-40), Dfp25.of(16), Dfp25.of(9) }, { Dfp25.of(13), Dfp25.of(-5), Dfp25.of(-3) },","protected Dfp[][] testDataInv={{Dfp25.of(-40),Dfp25.of(16),Dfp25.of(9)},{Dfp25.of(13),Dfp25.of(-5),Dfp25.of(-3)},{Dfp25.of(5),Dfp25.of(-2),Dfp25.of(-1)}};
",0,2,23,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
400,"protected double[][] smallSamples = {{}, {1}, {1,2}, {1,2,3}, {1,2,3,4}};","/** 
 * Small sample arrays 
 */
protected double[][] smallSamples={{},{1},{1,2},{1,2,3},{1,2,3,4}};
",0,0,16,,"Modifier(),
PrimitiveType(ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
ArrayInitializer(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
"
401,private byte[][] components = new byte[][] {};,"private byte[][] components=new byte[][]{};
",0,10,9,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ArrayInitializer(ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
402,"private final double[] multipleNaNs = { 0, 1, Double.NaN, Double.NaN };","private final double[] multipleNaNs={0,1,Double.NaN,Double.NaN};
",0,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
403,"private double[][] removeMultiple = { infData[1], infData[2] };","private double[][] removeMultiple={infData[1],infData[2]};
",0,5,9,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(ArrayAccess-array, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayAccess-index, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayAccess-array, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayAccess-index, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
404,"private Object controlFont = new ThemeValue (Region.TABBED_PANE_TAB, new FontUIResource (""Dialog"", Font.PLAIN, 11));","private Object controlFont=new ThemeValue(Region.TABBED_PANE_TAB,new FontUIResource(""Dialog"",Font.PLAIN,11));
",0,17,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
405,private final boolean[] permissions[];,"/** 
 * If this is null, then list entry parsing failed. 
 */
private final boolean[] permissions[];
",0,0,6,,"Modifier(),
Modifier(),
PrimitiveType(ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
Dimension(VariableDeclarationFragment-extraDimensions2, ),
"
406,"private final Entry<Class<?>, V>[] table = new Entry[TABLE_SIZE];","private final Entry<Class<?>,V>[] table=new Entry[TABLE_SIZE];
",0,4,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
407,private final OgnlContext _context = (OgnlContext) Ognl.createDefaultContext( null );,"private final OgnlContext _context=(OgnlContext)Ognl.createDefaultContext(null);
",0,1,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, CastExpression-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(MethodInvocation-arguments, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
408,private final int midRange = (minRange + maxRange) / 2;,"/** 
 * The mid-point of the range of the mean 
 */
private final int midRange=(minRange + maxRange) / 2;
",0,0,7,,"Modifier(),
Modifier(),
PrimitiveType(),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
SimpleName(InfixExpression-rightOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
NumberLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, ),
"
409,"private final UpdatableProgressBar progressBar = new UpdatableProgressBar(""progress"", new Model<>(0), BackgroundColorBehavior.Color.Info, true) {","private final UpdatableProgressBar progressBar=new UpdatableProgressBar(""progress"",new Model<>(0),BackgroundColorBehavior.Color.Info,true){
  private static final long serialVersionUID=1L;
  @Override protected IModel<Integer> newValue(){
    return Model.of(initvalues.getProgress());
  }
  @Override protected void onPostProcessTarget(  IPartialPageRequestHandler target){
    if (!started) {
      stop(target);
      return;
    }
    if (th != null) {
      stop(target);
      progressBar.setVisible(false);
      target.add(container.replace(new ErrorMessagePanel(""status"",getString(""install.wizard.install.failed""),th)),desc.setVisible(false));
    }
 else {
    }
    super.onPostProcessTarget(target);
  }
  @Override protected void onComplete(  IPartialPageRequestHandler target){
    stop(target);
    progressBar.setVisible(false);
    congrat.show(initDbType != dbType);
    target.add(container,desc.setVisible(false),btnBar.setVisible(false));
  }
}
;
",0,3,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
410,private final ThreadLocal<List<SoftReference<SchemaTypeLoaderImpl>>> _cachedTypeSystems = ThreadLocal.withInitial(ArrayList::new);,"private final ThreadLocal<List<SoftReference<SchemaTypeLoaderImpl>>> _cachedTypeSystems=ThreadLocal.withInitial(ArrayList::new);
",0,2,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, CreationReference-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
411,"private final byte[] hex = { 0, 0, 0, 0, 0, 0, 0, 0, '\r', '\n' };","/** 
 * Scratch space for up to 8 hex digits, and then a constant CRLF. 
 */
private final byte[] hex={0,0,0,0,0,0,0,0,'\r','\n'};
",0,0,15,,"Modifier(),
Modifier(),
PrimitiveType(ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
CharacterLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
CharacterLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
"
412,"License primaryLicense = new License(false, primaryLicenseText, Collections.<String> emptyList(), ""example.org"", ""http:","License primaryLicense=new License(false,primaryLicenseText,Collections.<String>emptyList(),""example.org"",""http://example.org"",""Example License"");
",0,0,11,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
413,private final byte[] signatureSecret = Long.toString(rand.nextLong()).getBytes();,"private final byte[] signatureSecret=Long.toString(rand.nextLong()).getBytes();
",0,2,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
414,"LGroupedTable<String, Integer> lgt = Lambda.wrap(MemPipeline.typedTableOf(tableOf(strings(), ints()),","LGroupedTable<String,Integer> lgt=Lambda.wrap(MemPipeline.typedTableOf(tableOf(strings(),ints()),""a"",2,""a"",3,""b"",5,""c"",7,""c"",11,""c"",13,""c"",13)).groupByKey();
",0,1,11,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
415,private final Set<SourceFlags> flags = Collections.synchronizedSet(EnumSet.noneOf(SourceFlags.class));,"private final Set<SourceFlags> flags=Collections.synchronizedSet(EnumSet.noneOf(SourceFlags.class));
",0,1,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
416,Logger logger = Logger.getLogger(this.getClass().getName());,"Logger logger=Logger.getLogger(this.getClass().getName());
",0,0,7,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
417,private Broadcast<PartitionedBlock<T>>[] _pbc = null;,"private Broadcast<PartitionedBlock<T>>[] _pbc=null;
",0,4,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
418,"private Tuple2<String[], int[]>[] testTuple2Array;","private Tuple2<String[],int[]>[] testTuple2Array;
",0,3,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
419,private final OutstandingOps outstandingOps = new OutstandingOps(() -> callListeners(CuratorCacheListener::initialized));,"private final OutstandingOps outstandingOps=new OutstandingOps(() -> callListeners(CuratorCacheListener::initialized));
",0,13,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, LambdaExpression-body, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ExpressionMethodReference-expression, MethodInvocation-arguments, LambdaExpression-body, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ExpressionMethodReference-name, MethodInvocation-arguments, LambdaExpression-body, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
420,private final AtomicReference<Future<?>> ourTask = new AtomicReference<Future<?>>(null);,"private final AtomicReference<Future<?>> ourTask=new AtomicReference<Future<?>>(null);
",0,2,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
421,"public final StringDiscoveryContext contextSingleton = new StringDiscoveryContext(serviceDiscoverySingleton, new RandomStrategy<String>(), 1000);","public final StringDiscoveryContext contextSingleton=new StringDiscoveryContext(serviceDiscoverySingleton,new RandomStrategy<String>(),1000);
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
422,"protected final int[] states = {XMLStreamConstants.START_ELEMENT, 0, XMLStreamConstants.END_ELEMENT};","protected final int[] states={XMLStreamConstants.START_ELEMENT,0,XMLStreamConstants.END_ELEMENT};
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
423,private List<PhaseInterceptor<? extends Message>> extras = new ArrayList<>(1);,"private List<PhaseInterceptor<? extends Message>> extras=new ArrayList<>(1);
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
424,"private Map<? extends Enum<?>, String> enumResources = Collections.emptyMap();","private Map<? extends Enum<?>,String> enumResources=Collections.emptyMap();
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
425,"Handler[] allHandlers = {EasyMock.createMock(LogicalHandler.class), EasyMock.createMock(Handler.class),","Handler[] allHandlers={EasyMock.createMock(LogicalHandler.class),EasyMock.createMock(Handler.class),EasyMock.createMock(Handler.class),EasyMock.createMock(LogicalHandler.class)};
",0,0,9,,"SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
426,"private final AutoupdateSupport support = new AutoupdateSupport(new AutoupdateCallback(), BUGZILLA_MODULE_CODE_NAME, NbBundle.getMessage(Bugzilla.class, ""LBL_ConnectorName""));","private final AutoupdateSupport support=new AutoupdateSupport(new AutoupdateCallback(),BUGZILLA_MODULE_CODE_NAME,NbBundle.getMessage(Bugzilla.class,""LBL_ConnectorName""));
",0,8,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
427,private Date next = new Date(System.currentTimeMillis() + interval / 2);,"private Date next=new Date(System.currentTimeMillis() + interval / 2);
",0,1,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
428,@Rule public WireMockRule wireMockRule = new WireMockRule(wireMockConfig().dynamicPort());,"@Rule public WireMockRule wireMockRule=new WireMockRule(wireMockConfig().dynamicPort());
",0,0,7,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
429,"private final List<QuerySelection<? super C, ?>> selections = new LinkedList<QuerySelection<? super C, ?>>();","private final List<QuerySelection<? super C,?>> selections=new LinkedList<QuerySelection<? super C,?>>();
",0,8,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
430,private Enumeration<String> serviceProvidersKeys = (serviceProviders == null) ? null :,"private Enumeration<String> serviceProvidersKeys=(serviceProviders == null) ? null : Collections.enumeration(serviceProviders.keySet());
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, ParenthesizedExpression-expression, ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(InfixExpression-rightOperand, ParenthesizedExpression-expression, ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
431,private final String[][] SINGLE_NULL_ROW = new String[][]{{null}};,"private final String[][] SINGLE_NULL_ROW=new String[][]{{null}};
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
432,"private final RequiredTextField<Integer> port = new RequiredTextField<>(""port"", Model.of(0));","private final RequiredTextField<Integer> port=new RequiredTextField<>(""port"",Model.of(0));
",0,5,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
433,private final Value nullBinaryValue = new Value( ( byte[] ) null );,"private final Value nullBinaryValue=new Value((byte[])null);
",0,2,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, CastExpression-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, CastExpression-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(CastExpression-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
434,"private Map<ObjectSceneEventType, List<ObjectSceneListener>> listeners = new java.util.EnumMap<ObjectSceneEventType, List<ObjectSceneListener>> (ObjectSceneEventType.class);","private Map<ObjectSceneEventType,List<ObjectSceneListener>> listeners=new java.util.EnumMap<ObjectSceneEventType,List<ObjectSceneListener>>(ObjectSceneEventType.class);
",0,1,11,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
435,"private String baseWasbDir = ""/falcon-regression/"" + UUID.randomUUID().toString().split(""-"")[0];","private String baseWasbDir=""/falcon-regression/"" + UUID.randomUUID().toString().split(""-"")[0];
",0,1,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, ArrayAccess-array, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, ArrayAccess-array, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ArrayAccess-array, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayAccess-array, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ArrayAccess-array, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayAccess-index, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
436,private final MinorType typeMap[] = new MinorType[PcapTypes.values().length];,"private final MinorType typeMap[]=new MinorType[PcapTypes.values().length];
",0,4,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, FieldAccess-expression, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, FieldAccess-expression, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(FieldAccess-name, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
437,"private final LoadingCache<String, byte[]> byteCode = CacheBuilder.newBuilder().maximumSize(10000)","private final LoadingCache<String,byte[]> byteCode=CacheBuilder.newBuilder().maximumSize(10000).expireAfterWrite(10,TimeUnit.MINUTES).build(new ClassBytesCacheLoader());
",0,1,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
438,private final Token<?>[] DEFAULT_EMPTY_TOKEN_ARRAY = new Token<?>[0];,"private final Token<?>[] DEFAULT_EMPTY_TOKEN_ARRAY=new Token<?>[0];
",0,5,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
WildcardType(ParameterizedType-typeArguments, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
439,"private final MappingSet RECORD_KEYS_PREV = new MappingSet(""previousIndex"", ""outIndex"", ""previous"", null, PREVIOUS_KEYS, PREVIOUS_KEYS);","private final MappingSet RECORD_KEYS_PREV=new MappingSet(""previousIndex"",""outIndex"",""previous"",null,PREVIOUS_KEYS,PREVIOUS_KEYS);
",0,0,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
440,"@JsonProperty (""avgwidth"") private double width = 0;","@JsonProperty(""avgwidth"") private double width=0;
",0,23,6,,"SimpleName(SingleMemberAnnotation-typeName, FieldDeclaration-modifiers, ),
StringLiteral(SingleMemberAnnotation-value, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
441,private final ByteBuffer buffer = ByteBuffer.allocate(BUFF_SZ + PADDING);,"/** 
 * byte buffer used for buffering page data 
 */
private final ByteBuffer buffer=ByteBuffer.allocate(BUFF_SZ + PADDING);
",0,0,8,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
SimpleName(InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
442,"private final File testDir = new File(""target/test-data/"" + ManagementFactory.getRuntimeMXBean().getName());","private final File testDir=new File(""target/test-data/"" + ManagementFactory.getRuntimeMXBean().getName());
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
443,final MajorType bigIntType = MajorType.newBuilder().setMode(DataMode.REQUIRED).setMinorType(MinorType.BIGINT).build();,"final MajorType bigIntType=MajorType.newBuilder().setMode(DataMode.REQUIRED).setMinorType(MinorType.BIGINT).build();
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
444,"private final Schema SCHEMA = new Schema.SchemaBuilder().addSingleValueDimension(""column1"", FieldSpec.DataType.LONG)","private final Schema SCHEMA=new Schema.SchemaBuilder().addSingleValueDimension(""column1"",FieldSpec.DataType.LONG).addSingleValueDimension(""column2"",FieldSpec.DataType.INT).addSingleValueDimension(""column3"",FieldSpec.DataType.STRING).addSingleValueDimension(""column7"",FieldSpec.DataType.STRING).addSingleValueDimension(""unknown_dimension"",FieldSpec.DataType.STRING).addMetric(""met_impressionCount"",FieldSpec.DataType.LONG).addMetric(""unknown_metric"",FieldSpec.DataType.DOUBLE).build();
",0,9,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
445,"private final HistoricalLog historicalLog = BaseAllocator.DEBUG ? new HistoricalLog(BaseAllocator.DEBUG_LOG_LENGTH,","private final HistoricalLog historicalLog=BaseAllocator.DEBUG ? new HistoricalLog(BaseAllocator.DEBUG_LOG_LENGTH,""BufferLedger[%d]"",1) : null;
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
446,int nextOffset = maxLiteralLengthMultiplication(maxLiteralLengthDivision(last) + 1);,"int nextOffset=maxLiteralLengthMultiplication(maxLiteralLengthDivision(last) + 1);
",0,0,6,,"PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
447,"private final ScheduledExecutorService exec = Executors.newScheduledThreadPool(2, new ThreadFactoryBuilder()","private final ScheduledExecutorService exec=Executors.newScheduledThreadPool(2,new ThreadFactoryBuilder().setDaemon(true).setNameFormat(""GraphiteEmitter-%s"").build());
",0,1,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
448,"PollingLookupFactory pollingLookupFactory = new PollingLookupFactory(Period.ZERO, null, null, pollingLookup);","PollingLookupFactory pollingLookupFactory=new PollingLookupFactory(Period.ZERO,null,null,pollingLookup);
",0,0,7,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
449,"@Param({""true""}) boolean targetIsDirect;","@Param({""true""}) boolean targetIsDirect;
",0,0,4,,"SimpleName(SingleMemberAnnotation-typeName, FieldDeclaration-modifiers, ),
StringLiteral(ArrayInitializer-expressions, SingleMemberAnnotation-value, FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
450,"@Param({""default"", ""random"", ""0""}) String alignment;","@Param({""default"",""random"",""0""}) String alignment;
",0,6,6,,"SimpleName(SingleMemberAnnotation-typeName, FieldDeclaration-modifiers, ),
StringLiteral(ArrayInitializer-expressions, SingleMemberAnnotation-value, FieldDeclaration-modifiers, ),
StringLiteral(ArrayInitializer-expressions, SingleMemberAnnotation-value, FieldDeclaration-modifiers, ),
StringLiteral(ArrayInitializer-expressions, SingleMemberAnnotation-value, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
451,"private int numLookupLoadingThreads = Math.max(1, JvmUtils.getRuntimeInfo().getAvailableProcessors() / 2);","@Min(1) @JsonProperty(""numLookupLoadingThreads"") private int numLookupLoadingThreads=Math.max(1,JvmUtils.getRuntimeInfo().getAvailableProcessors() / 2);
",0,0,10,,"Modifier(),
PrimitiveType(),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
NumberLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
452,"final LoopingDoubleColumnSelector selector = new LoopingDoubleColumnSelector(new double[]{42.12d, 9d});","final LoopingDoubleColumnSelector selector=new LoopingDoubleColumnSelector(new double[]{42.12d,9d});
",0,3,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
453,"private final DimFilter other3 = new SearchQueryDimFilter(""dim"", new ContainsSearchQuerySpec(""a"", true), null);","private final DimFilter other3=new SearchQueryDimFilter(""dim"",new ContainsSearchQuerySpec(""a"",true),null);
",0,11,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
454,"private final ImmutableMap<String, String> CONFIG_MAP = ImmutableMap","private final ImmutableMap<String,String> CONFIG_MAP=ImmutableMap.<String,String>builder().put(""singleThreaded"",""true"").put(""defaultStrategy"",""v2"").put(""bufferGrouperInitialBuckets"",""1"").put(""maxIntermediateRows"",""2"").put(""maxResults"",""3"").put(""maxOnDiskStorage"",""4"").put(""maxMergingDictionarySize"",""5"").put(""bufferGrouperMaxLoadFactor"",""6"").build();
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
455,private final FiniteStateMachine<MyStates> refFsm = new FiniteStateMachine.Builder<MyStates>(),"private final FiniteStateMachine<MyStates> refFsm=new FiniteStateMachine.Builder<MyStates>().addTransition(MyStates.PENDING,MyStates.RUNNING).addTransition(MyStates.RUNNING,MyStates.SUCCESS).addTransition(MyStates.PENDING,MyStates.ERROR).addTransition(MyStates.RUNNING,MyStates.ERROR).build(MyStates.PENDING);
",0,2,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
456,"private final long[] values8 = {Long.MAX_VALUE, 0, 321, 15248425, 13523212136L, 63822, 3426, 96};","private final long[] values8={Long.MAX_VALUE,0,321,15248425,13523212136L,63822,3426,96};
",0,0,13,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
457,private final DimensionSelector onNullSelector = makeSelector(DimensionSelector.constant(null));,"private final DimensionSelector onNullSelector=makeSelector(DimensionSelector.constant(null));
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
458,private final Set<String> keyColumns = ImmutableSet.<String>builder(),"private final Set<String> keyColumns=ImmutableSet.<String>builder().add(STRING_COL_1).add(STRING_COL_2).add(LONG_COL_1).add(DOUBLE_COL_1).add(FLOAT_COL_1).add(MULTI_VALUE_COLUMN).add(DIM_NOT_EXISTS).build();
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
459,"private final ConcurrentNavigableMap<Long, ConcurrentNavigableMap<Bytes, ConcurrentNavigableMap<Long, byte[]>>> endTimeMap = new ConcurrentSkipListMap<>();","private final ConcurrentNavigableMap<Long,ConcurrentNavigableMap<Bytes,ConcurrentNavigableMap<Long,byte[]>>> endTimeMap=new ConcurrentSkipListMap<>();
",0,5,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
460,private @Nullable Future<?> periodicPollTaskFuture = null;,"/** 
 * Used to cancel periodic poll task in  {@link #stopPollingDatabasePeriodically}. 
 */
@GuardedBy(""startStopPollLock"") private @Nullable Future<?> periodicPollTaskFuture=null;
",0,0,6,,"Modifier(),
SimpleName(MarkerAnnotation-typeName, ),
SimpleName(SimpleType-name, ParameterizedType-type, ),
WildcardType(ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
NullLiteral(VariableDeclarationFragment-initializer, ),
"
461,private int dropSegmentDelayMillis = (int) TimeUnit.SECONDS.toMillis(30);,"@JsonProperty(""dropSegmentDelayMillis"") private int dropSegmentDelayMillis=(int)TimeUnit.SECONDS.toMillis(30);
",0,0,7,,"Modifier(),
PrimitiveType(),
SimpleName(VariableDeclarationFragment-name, ),
PrimitiveType(CastExpression-type, VariableDeclarationFragment-initializer, ),
QualifiedName(MethodInvocation-expression, CastExpression-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, CastExpression-expression, VariableDeclarationFragment-initializer, ),
NumberLiteral(MethodInvocation-arguments, CastExpression-expression, VariableDeclarationFragment-initializer, ),
"
462,"private NavigableMap<Interval, Bucket.Builder> buckets = new TreeMap<>(Comparators.intervalsByStartThenEnd());","private NavigableMap<Interval,Bucket.Builder> buckets=new TreeMap<>(Comparators.intervalsByStartThenEnd());
",0,6,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
463,"private final ConcurrentHashMap<String, ConcurrentHashMap<byte[], AtomicInteger>> numPathAnnounced = new ConcurrentHashMap<>();","private final ConcurrentHashMap<String,ConcurrentHashMap<byte[],AtomicInteger>> numPathAnnounced=new ConcurrentHashMap<>();
",0,3,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
464,"private final CSVFormat formatWithNullRecordSeparator = CSVFormat.DEFAULT.withFirstRecordAsHeader().withTrim().withQuote('""').withRecordSeparator(null);","private final CSVFormat formatWithNullRecordSeparator=CSVFormat.DEFAULT.withFirstRecordAsHeader().withTrim().withQuote('""').withRecordSeparator(null);
",0,2,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
465,"private Gson gsonAdapter = new GsonBuilder().registerTypeAdapter(RawJson.class, new RawJsonAdapter()).create();","private Gson gsonAdapter=new GsonBuilder().registerTypeAdapter(RawJson.class,new RawJsonAdapter()).create();
",0,3,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
466,"URL url = URL.valueOf(""registry:","URL url=URL.valueOf(""registry://localhost:9090/org.apache.dubbo.rpc.cluster.support.AbstractClusterInvokerTest.IHelloService?refer="" + URL.encode(""application=abstractClusterInvokerTest""));
",0,0,8,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
467,private Class<?> mType = Object[].class;,"private Class<?> mType=Object[].class;
",0,0,6,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, TypeLiteral-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, TypeLiteral-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
468,"private final ExecutorService SHARED_EXECUTOR = Executors.newCachedThreadPool(new NamedThreadFactory(""DubboSharedHandler"", true));","private final ExecutorService SHARED_EXECUTOR=Executors.newCachedThreadPool(new NamedThreadFactory(""DubboSharedHandler"",true));
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
469,"private final Set<Class<?>> TIMEOUT_EXCEPTIONS = ImmutableSet.<Class<?>>of(ConnectionPoolTimeoutException.class,","private final Set<Class<?>> TIMEOUT_EXCEPTIONS=ImmutableSet.<Class<?>>of(ConnectionPoolTimeoutException.class,SocketTimeoutException.class,SocketException.class,HttpHostConnectException.class,NoHttpResponseException.class,InterruptedException.class,UnknownHostException.class);
",0,15,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, MethodInvocation-typeArguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
WildcardType(ParameterizedType-typeArguments, MethodInvocation-typeArguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
470,"private final ScheduledExecutorService scheduledExecutorService = Executors.newScheduledThreadPool(3, new NamedThreadFactory(""DubboMonitorSendTimer"", true));","/** 
 * The timer for sending statistics
 */
private final ScheduledExecutorService scheduledExecutorService=Executors.newScheduledThreadPool(3,new NamedThreadFactory(""DubboMonitorSendTimer"",true));
",0,0,10,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
StringLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
BooleanLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
471,"private Path ofbizHome = Paths.get(ComponentContainerTest.class.getResource(""testsdata"").toURI())","private Path ofbizHome=Paths.get(ComponentContainerTest.class.getResource(""testsdata"").toURI()).toAbsolutePath().normalize();
",0,1,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
472,"private Function<Pair<String, String>, org.apache.eagle.jpm.util.jobcounter.JobCounters> fetchTaskCounters = jobAndTaskId -> {","private Function<Pair<String,String>,org.apache.eagle.jpm.util.jobcounter.JobCounters> fetchTaskCounters=jobAndTaskId -> {
  org.apache.eagle.jpm.util.jobcounter.JobCounters jobCounter=new org.apache.eagle.jpm.util.jobcounter.JobCounters();
  String jobId=jobAndTaskId.getLeft();
  String taskId=jobAndTaskId.getRight();
  String taskCounterURL=app.getTrackingUrl() + Constants.MR_JOBS_URL + ""/""+ jobId+ ""/""+ Constants.MR_TASKS_URL+ ""/""+ taskId+ ""/""+ Constants.MR_JOB_COUNTERS_URL+ ""?""+ Constants.ANONYMOUS_PARAMETER;
  InputStream is=null;
  TaskCounters taskCounters=null;
  try {
    is=InputStreamUtils.getInputStream(taskCounterURL,null,Constants.CompressionType.NONE);
    LOG.info(""fetch mr task counters from {}"",taskCounterURL);
    taskCounters=OBJ_MAPPER.readValue(is,TaskCountersWrapper.class).getJobTaskCounters();
  }
 catch (  Exception e) {
    LOG.warn(""fetch mr task counters from {} failed, {}"",taskCounterURL,e);
    return null;
  }
 finally {
    Utils.closeInputStream(is);
  }
  if (taskCounters.getTaskCounterGroup() == null) {
    return jobCounter;
  }
  Map<String,Map<String,Long>> groups=new HashMap<>();
  for (  TaskCounterGroup taskCounterGroup : taskCounters.getTaskCounterGroup()) {
    if (!groups.containsKey(taskCounterGroup.getCounterGroupName())) {
      groups.put(taskCounterGroup.getCounterGroupName(),new HashMap<>());
    }
    Map<String,Long> counterValues=groups.get(taskCounterGroup.getCounterGroupName());
    List<TaskCounterItem> items=taskCounterGroup.getCounter();
    if (items == null) {
      continue;
    }
    for (    TaskCounterItem item : items) {
      counterValues.put(item.getName(),item.getValue());
    }
  }
  jobCounter.setCounters(groups);
  return jobCounter;
}
;
",0,1,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
473,"private final String NAMESPACE = this.getClass().getPackage().getName().replaceAll(""\\."", ""/"");","private final String NAMESPACE=this.getClass().getPackage().getName().replaceAll(""\\."",""/"");
",0,2,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
ThisExpression(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
474,"protected final TagEncodingHelper helper                 = TagEncodingHelperFactory.create(this, this.TAB_STYLE_CLASS);","protected final TagEncodingHelper helper=TagEncodingHelperFactory.create(this,this.TAB_STYLE_CLASS);
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(FieldAccess-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(FieldAccess-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
475,public byte[] buf;,"/** 
 */
public byte[] buf;
",0,4,5,,"Javadoc(FieldDeclaration-javadoc, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
476,public boolean isReset = false;,"/** 
 */
public boolean isReset=false;
",0,0,5,,"Javadoc(FieldDeclaration-javadoc, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
BooleanLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
477,"private String[] args = {""--"" + HdfsSnapshotMirrorProperties.MAX_MAPS.getName(), ""1"",","private String[] args={""--"" + HdfsSnapshotMirrorProperties.MAX_MAPS.getName(),""1"",""--"" + HdfsSnapshotMirrorProperties.MAP_BANDWIDTH_IN_MB.getName(),""100"",""--"" + HdfsSnapshotMirrorProperties.SOURCE_NN.getName(),""hdfs://localhost:54136"",""--"" + HdfsSnapshotMirrorProperties.SOURCE_EXEC_URL.getName(),""localhost:8021"",""--"" + HdfsSnapshotMirrorProperties.TARGET_EXEC_URL.getName(),""localhost:8021"",""--"" + HdfsSnapshotMirrorProperties.TARGET_NN.getName(),""hdfs://localhost:54136"",""--"" + HdfsSnapshotMirrorProperties.SOURCE_SNAPSHOT_DIR.getName(),""/apps/falcon/snapshot-replication/sourceDir/"",""--"" + HdfsSnapshotMirrorProperties.TARGET_SNAPSHOT_DIR.getName(),""/apps/falcon/snapshot-replication/targetDir/"",""--"" + ReplicationDistCpOption.DISTCP_OPTION_IGNORE_ERRORS.getName(),""false"",""--"" + ReplicationDistCpOption.DISTCP_OPTION_PRESERVE_ACL.getName(),""false"",""--"" + HdfsSnapshotMirrorProperties.TDE_ENCRYPTION_ENABLED.getName(),""false"",""--"" + HdfsSnapshotMirrorProperties.SNAPSHOT_JOB_NAME.getName(),""snapshotJobName""};
",0,1,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, InfixExpression-rightOperand, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
478,"private final Logger logger = Logger.getInstance(LogCategory.OPENEJB.createChild(""cdi""), CdiResourceInjectionService.class);","private final Logger logger=Logger.getInstance(LogCategory.OPENEJB.createChild(""cdi""),CdiResourceInjectionService.class);
",0,6,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
479,private final Configuration thisConfig = thisModule.getLayer() == null ? null,"private final Configuration thisConfig=thisModule.getLayer() == null ? null : thisModule.getLayer().configuration();
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(InfixExpression-rightOperand, ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
480,private final Iterator<Class<?>> it = TestsToRun.this.locatedClasses.iterator();,"private final Iterator<Class<?>> it=TestsToRun.this.locatedClasses.iterator();
",0,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(ThisExpression-qualifier, FieldAccess-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(FieldAccess-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
481,"private DefaultDistributionLog log = new DefaultDistributionLog(""agent1"", this.getClass(), DefaultDistributionLog.LogLevel.INFO);","private DefaultDistributionLog log=new DefaultDistributionLog(""agent1"",this.getClass(),DefaultDistributionLog.LogLevel.INFO);
",0,7,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
482,"private final Map<Result.Status, Map<Long, HealthCheckExecutionResult>> cacheOfNotOkResults = new ConcurrentHashMap<Result.Status, Map<Long, HealthCheckExecutionResult>>();","/** 
 * Cache for sticky results 
 */
private final Map<Result.Status,Map<Long,HealthCheckExecutionResult>> cacheOfNotOkResults=new ConcurrentHashMap<Result.Status,Map<Long,HealthCheckExecutionResult>>();
",0,1,13,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
"
483,"HttpRequestsCheck.Response simple200HtmlResponse = new HttpRequestsCheck.Response(200, ""OK"", null, ""<html><head><title>test</title></head><body>body text</body></html>"", 200);","HttpRequestsCheck.Response simple200HtmlResponse=new HttpRequestsCheck.Response(200,""OK"",null,""<html><head><title>test</title></head><body>body text</body></html>"",200);
",0,1,8,,"QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
484,"private Set<String> supportedMimeTypes = new HashSet<String>(Arrays.asList(new String[]{""text/html"",""application/xhtml+xml""}));","private Set<String> supportedMimeTypes=new HashSet<String>(Arrays.asList(new String[]{""text/html"",""application/xhtml+xml""}));
",0,2,12,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
485,"private final StringBuilder sqlBuilder = new StringBuilder(""select"").append(","private final StringBuilder sqlBuilder=new StringBuilder(""select"").append("" job.id,job.display_name as displayName,job.next_run_time as nextRunTime,job.initializing_errorlog as initializingError,job.cron_expression as cronExpression,job.is_active as active,job.currently_running as currentlyRunning,"").append("" runHistory.version,runHistory.start_time as lastRunStartTime,runHistory.end_time as lastRunEndTime,runHistory.`status`,runHistory.error_message as jobRunErrorMessage,runHistory.trigger_type as triggerType,runHistory.error_log as jobRunErrorLog "").append("" from job job  left join job_run_history runHistory ON job.id=runHistory.job_id and job.previous_run_start_time=runHistory.start_time "");
",0,1,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
486,private final StringBuilder sqlBuilder = new StringBuilder(200).append(,"private final StringBuilder sqlBuilder=new StringBuilder(200).append("" runHistory.version,runHistory.start_time as runStartTime,runHistory.end_time as runEndTime,runHistory.`status`,runHistory.error_message as jobRunErrorMessage,runHistory.trigger_type as triggerType,runHistory.error_log as jobRunErrorLog "").append("" from job job join job_run_history runHistory ON job.id=runHistory.job_id"");
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
487,"private IModel<List<Locale>> supportedLocales = new ListModel<Locale>(Arrays.asList(Locale.FRENCH, Locale.ENGLISH));","private IModel<List<Locale>> supportedLocales=new ListModel<Locale>(Arrays.asList(Locale.FRENCH,Locale.ENGLISH));
",0,6,11,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
488,"private final File file = new File(getClass().getClassLoader().getResource(""file.parquet"").getFile());","private final File file=new File(getClass().getClassLoader().getResource(""file.parquet"").getFile());
",0,12,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
489,"private final double rates[][] = { {1.00, 0.50, 0.66}, {2.00, 1.00, 1.33}, {1.50, 0.75, 1.00}};","private final double rates[][]={{1.00,0.50,0.66},{2.00,1.00,1.33},{1.50,0.75,1.00}};
",0,34,15,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
490,"private Protocol myhttps = new Protocol(""https"", (ProtocolSocketFactory)(new EasySSLProtocolSocketFactory()), 443);","private Protocol myhttps=new Protocol(""https"",(ProtocolSocketFactory)(new EasySSLProtocolSocketFactory()),443);
",0,3,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, CastExpression-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ParenthesizedExpression-expression, CastExpression-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
491,final Proto.Type<?>[] type = {null};,"final Proto.Type<?>[] type={null};
",0,5,6,,"Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
492,@Nonnull private Supplier<? extends TypeSerializer<T>> serializerSupplier;,"/** 
 * The class of the serializer for this snapshot. The field is null if the serializer was created for read and has not been read, yet.
 */
@Nonnull private Supplier<? extends TypeSerializer<T>> serializerSupplier;
",0,0,6,,"SimpleName(MarkerAnnotation-typeName, ),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
"
493,"private List<Tuple15<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>> tuples =","private List<Tuple15<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14>> tuples=new ArrayList<>();
",0,0,19,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
494,"@Parameterized.Parameter public TtlStateTestContextBase<?, ?, ?> ctx;","@Parameterized.Parameter public TtlStateTestContextBase<?,?,?> ctx;
",0,2,7,,"QualifiedName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
495,"List<List<Object>> DEFAULT_UPSERTS = Arrays.asList(Arrays.<Object>asList(1, 2, 4, 5, 6, ""row1""),","List<List<Object>> DEFAULT_UPSERTS=Arrays.asList(Arrays.<Object>asList(1,2,4,5,6,""row1""),Arrays.<Object>asList(2,3,4,5,6,""row2""),Arrays.<Object>asList(2,3,6,4,5,""row3""),Arrays.<Object>asList(6,5,4,3,2,""row4""));
",0,1,15,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
496,"@Rule public MixedKubernetesServer server = new MixedKubernetesServer(true, true);","@Rule public MixedKubernetesServer server=new MixedKubernetesServer(true,true);
",0,0,7,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
497,"private StringParameter jobName = new StringParameter(this, ""__job_name"").setDefaultValue(null);","private StringParameter jobName=new StringParameter(this,""__job_name"").setDefaultValue(null);
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
498,@Mock private TSStatus successStatus = new TSStatus(TSStatusCode.SUCCESS_STATUS.getStatusCode());,"@Mock private TSStatus successStatus=new TSStatus(TSStatusCode.SUCCESS_STATUS.getStatusCode());
",0,1,7,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
499,"private Tuple4<T, T, T, ByteValue> output = new Tuple4<>(null, null, null, new ByteValue());","private Tuple4<T,T,T,ByteValue> output=new Tuple4<>(null,null,null,new ByteValue());
",0,0,12,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
500,private Predicate<String> filter = item -> item.length() == 1;,"private Predicate<String> filter=item -> item.length() == 1;
",0,1,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
501,@Nullable private volatile ConnectionState lastState = null;,"@Nullable private volatile ConnectionState lastState=null;
",0,0,6,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
502,"@Nonnull private final CopyOnWriteStateMap.StateMapEntry<K, N, S>[] snapshotData;","/** 
 * The state map entries, as by the time this snapshot was created. Objects in this array may or may not be deep copies of the current entries in the  {@link CopyOnWriteStateMap} that createdthis snapshot. This depends for each entry on whether or not it was subject to copy-on-write operations by the  {@link CopyOnWriteStateMap}.
 */
@Nonnull private final CopyOnWriteStateMap.StateMapEntry<K,N,S>[] snapshotData;
",0,5,9,,"SimpleName(MarkerAnnotation-typeName, ),
Modifier(),
Modifier(),
QualifiedName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ArrayType-elementType, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ArrayType-elementType, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
"
503,"@Nonnull private final List<CopyOnWriteStateMapSnapshot<K, N, S>> stateMapSnapshots;","/** 
 * Snapshots of state partitioned by key-group. 
 */
@Nonnull private final List<CopyOnWriteStateMapSnapshot<K,N,S>> stateMapSnapshots;
",0,0,9,,"SimpleName(MarkerAnnotation-typeName, ),
Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
"
504,"@Nullable private final TtlIncrementalCleanup<K, N, TTLSV> incrementalCleanup;","@Nullable private final TtlIncrementalCleanup<K,N,TTLSV> incrementalCleanup;
",0,0,8,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
505,"@Nonnull TriFunction<String, Object, byte[], CompletableFuture<Object>> updateAggregateFunction;","@Nonnull TriFunction<String,Object,byte[],CompletableFuture<Object>> updateAggregateFunction;
",0,0,9,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
506,"private JobStatusListener jobStatusListener = (ignoredA, ignoredB, ignoredC, ignoredD) -> {};","private JobStatusListener jobStatusListener=(ignoredA,ignoredB,ignoredC,ignoredD) -> {
}
;
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Block(LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
507,@Nullable Class<? extends State> onLeaveNewStateArgument = null;,"@Nullable Class<? extends State> onLeaveNewStateArgument=null;
",0,0,5,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
508,@Parameterized.Parameter public StateBackendBenchmarkUtils.StateBackendType backendType;,"@Parameterized.Parameter public StateBackendBenchmarkUtils.StateBackendType backendType;
",0,0,4,,"QualifiedName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
509,"protected final Map<byte[], List<Cell>>[] familyCellMaps;","protected final Map<byte[],List<Cell>>[] familyCellMaps;
",0,12,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
510,@Parameterized.Parameter() public RuntimeExecutionMode runtimeExecutionMode;,"@Parameterized.Parameter() public RuntimeExecutionMode runtimeExecutionMode;
",0,0,4,,"QualifiedName(NormalAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
511,"private final SupplierWithException<? extends StreamTask<OUT, ?>, Exception> taskFactory;","private final SupplierWithException<? extends StreamTask<OUT,?>,Exception> taskFactory;
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
512,final @Nullable Class<? extends TypeSerializer<?>> rawSerializer;,"final @Nullable Class<? extends TypeSerializer<?>> rawSerializer;
",0,0,6,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
513,@JsonIgnore private final @Nullable RelDataType temporalTableOutputType;,"@JsonIgnore private final @Nullable RelDataType temporalTableOutputType;
",0,0,6,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
514,private Random random = new Random(~RANDOM_SEED);,"private Random random=new Random(~RANDOM_SEED);
",0,0,5,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(PrefixExpression-operand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
515,TypeSerializer<String> serializer = TypeInformation.of(String.class).createSerializer(config);,"TypeSerializer<String> serializer=TypeInformation.of(String.class).createSerializer(config);
",0,0,8,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
516,"private final StateSerdes<Bytes, Bytes> anyStateSerde = StateSerdes.withBuiltinTypes(""anyName"", Bytes.class, Bytes.class);","private final StateSerdes<Bytes,Bytes> anyStateSerde=StateSerdes.withBuiltinTypes(""anyName"",Bytes.class,Bytes.class);
",0,1,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
517,"private final AtomicReference<ListingSnapshot> listing = new AtomicReference<>(new ListingSnapshot(0L, Collections.emptySet()));","private final AtomicReference<ListingSnapshot> listing=new AtomicReference<>(new ListingSnapshot(0L,Collections.emptySet()));
",0,5,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
518,"private KryoSerializer<Object> kryo = new KryoSerializer<>(Object.class, new ExecutionConfig());","private KryoSerializer<Object> kryo=new KryoSerializer<>(Object.class,new ExecutionConfig());
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
519,"private final AtomicReference<Map.Entry<Class<?>, ?>> testHolder = new AtomicReference<>();","private final AtomicReference<Map.Entry<Class<?>,?>> testHolder=new AtomicReference<>();
",0,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
520,"private Optional<LinkedList<ProducerRecord<String, byte[]>>> producerRecords =","private Optional<LinkedList<ProducerRecord<String,byte[]>>> producerRecords=Optional.absent();
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
521,"private MutationBatch end = new MutationBatch(new ArrayList<Mutation>(), false);","private MutationBatch end=new MutationBatch(new ArrayList<Mutation>(),false);
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
522,"private final TableConfig TABLE_CONFIG = new TableConfigBuilder(TableType.OFFLINE).setTableName(""testTable"").build();","private final TableConfig TABLE_CONFIG=new TableConfigBuilder(TableType.OFFLINE).setTableName(""testTable"").build();
",0,8,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
523,private final int nrOfDefaultTemplateDirectories = templateDirectories(null).size();,"private final int nrOfDefaultTemplateDirectories=templateDirectories(null).size();
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
524,"private final Region<String, HttpSession> sessionRegion = uncheckedCast(mock(Region.class));","private final Region<String,HttpSession> sessionRegion=uncheckedCast(mock(Region.class));
",0,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
525,private File keyFile = new File(ClusterManagementServiceOnServerTest.class.getClassLoader(),"private File keyFile=new File(ClusterManagementServiceOnServerTest.class.getClassLoader().getResource(""ssl/trusted.keystore"").getFile());
",0,0,6,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
526,public GeodeHttpClientRule client = new GeodeHttpClientRule(locator::getHttpPort).withSSL();,"@Rule public GeodeHttpClientRule client=new GeodeHttpClientRule(locator::getHttpPort).withSSL();
",0,0,7,,"Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(ExpressionMethodReference-expression, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(ExpressionMethodReference-name, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
"
527,"final Function<Integer, Integer> directAccessor = t -> map.computeIfAbsent(t, k -> k);","final Function<Integer,Integer> directAccessor=t -> map.computeIfAbsent(t,k -> k);
",0,0,11,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(LambdaExpression-body, MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
528,"private Object[] preconditionOutput = new Object[] {null, fieldMappings, null};","private Object[] preconditionOutput=new Object[]{null,fieldMappings,null};
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
529,"public CacheRule cacheRule = new CacheRule.Builder().addConfig(CONSERVE_SOCKETS, ""true"").build();","/** 
 * The test case in this class requires that conserve-sockets=true in order for the connections to be shared.
 */
@Rule public CacheRule cacheRule=new CacheRule.Builder().addConfig(CONSERVE_SOCKETS,""true"").build();
",0,0,8,,"Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
"
530,"Object validOperands[] = {Boolean.TRUE, Boolean.FALSE, null, QueryService.UNDEFINED};","Object validOperands[]={Boolean.TRUE,Boolean.FALSE,null,QueryService.UNDEFINED};
",0,0,7,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
531,"Object invalidOperands[] = {new Integer(0), ""a""};","Object invalidOperands[]={new Integer(0),""a""};
",0,0,6,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
532,"String queries[] = {""select distinct p from "" + SEPARATOR + ""pos p where p.ID > 0 "",","String queries[]={""select distinct p from "" + SEPARATOR + ""pos p where p.ID > 0 "",""select distinct p.status from "" + SEPARATOR + ""pos p where p.ID > 0 "",""select distinct 'a' from "" + SEPARATOR + ""pos p "",""select distinct 1 from "" + SEPARATOR + ""pos p "",""select distinct p.status,p.ID from "" + SEPARATOR + ""pos p where p.ID > 0 "",""select distinct p,p.P1 from "" + SEPARATOR + ""pos p where p.ID > 0 "",""select distinct p,p.P1.SecId from "" + SEPARATOR + ""pos p where p.ID > 0 "",""select distinct portfolio: p ,p.P1.SecId from "" + SEPARATOR + ""pos p where p.ID > 0 "",""select distinct p.status as STATUS, SECID: p.P1.SecId, ID from "" + SEPARATOR + ""pos p where p.ID > 0 "",""select distinct p.status as STATUS, SECID: p.P1.SecId, ID from "" + SEPARATOR + ""pos p "",""select distinct 'a',1, p from "" + SEPARATOR + ""pos p ""};
",0,0,6,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
533,"String[] queries = {""select * from "" + SEPARATOR + regionName + "" p where p.indexKey = 1"",","String[] queries={""select * from "" + SEPARATOR + regionName+ "" p where p.indexKey = 1"",""select distinct * from "" + SEPARATOR + regionName+ "" p where p.indexKey = 1 order by p.indexKey"",""select * from "" + SEPARATOR + regionName+ "" p, p.positions.values pv where pv.secId = '1'"",""select * from "" + SEPARATOR + regionName+ "" p where p in (select * from ""+ SEPARATOR+ regionName+ "" pi where pi.indexKey = 1)""};
",0,0,7,,"SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
534,boolean emitNull = Bag.this.numNulls > 0;,"/** 
 * need to emit a null value if true 
 */
boolean emitNull=Bag.this.numNulls > 0;
",0,0,5,,"PrimitiveType(),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(ThisExpression-qualifier, FieldAccess-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
SimpleName(FieldAccess-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
NumberLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, ),
"
535,"private final BytesAndBits CLEAR_BB = new BytesAndBits(null, (byte) 0);","private final BytesAndBits CLEAR_BB=new BytesAndBits(null,(byte)0);
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(CastExpression-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
536,long sequenceID = (HARegionQueue.INIT_OF_SEQUENCEID + 1);,"long sequenceID=(HARegionQueue.INIT_OF_SEQUENCEID + 1);
",0,0,4,,"PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-leftOperand, ParenthesizedExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ParenthesizedExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
537,"private HeartbeatTimeoutCheck checkHeartbeat = (long currentTime, long lastHeartbeat,","private HeartbeatTimeoutCheck checkHeartbeat=(long currentTime,long lastHeartbeat,long allowedInterval) -> currentTime - lastHeartbeat > allowedInterval;
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(SingleVariableDeclaration-type, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SingleVariableDeclaration-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(SingleVariableDeclaration-type, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SingleVariableDeclaration-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
538,private BooleanSupplier hasCacheServer = () -> ServerLauncher.getInstance() != null;,"private BooleanSupplier hasCacheServer=() -> ServerLauncher.getInstance() != null;
",0,0,6,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(InfixExpression-rightOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
539,"private final int[] serials = new int[] {ILLEGAL_SERIAL, ILLEGAL_SERIAL, ILLEGAL_SERIAL};","private final int[] serials=new int[]{ILLEGAL_SERIAL,ILLEGAL_SERIAL,ILLEGAL_SERIAL};
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
540,"private Slab[] slabs = {new SlabImpl((int) OffHeapStorage.MIN_SLAB_SIZE),","private Slab[] slabs={new SlabImpl((int)OffHeapStorage.MIN_SLAB_SIZE),new SlabImpl((int)OffHeapStorage.MIN_SLAB_SIZE * 2)};
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, ClassInstanceCreation-arguments, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(CastExpression-expression, ClassInstanceCreation-arguments, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
541,private final FunctionContext<Object[]> mockContext = mock(FunctionContext.class);,"@SuppressWarnings(""unchecked"") private final FunctionContext<Object[]> mockContext=mock(FunctionContext.class);
",0,1,8,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
542,private byte bytes[] = new byte[1024 * 4];,"private byte bytes[]=new byte[1024 * 4];
",0,2,8,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
543,public CloseableReference<?> closeableReference = new CloseableReference<>().autoClose(false);,"@Rule public CloseableReference<?> closeableReference=new CloseableReference<>().autoClose(false);
",0,0,7,,"Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
WildcardType(ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
BooleanLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
544,public RuleList ruleList = new RuleList().add(ruleThree).add(ruleTwo).add(ruleOne);,"@Rule public RuleList ruleList=new RuleList().add(ruleThree).add(ruleTwo).add(ruleOne);
",0,0,10,,"Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
545,private AtomicInteger requestId = new AtomicInteger((new Random().nextInt()));,"private AtomicInteger requestId=new AtomicInteger((new Random().nextInt()));
",0,0,6,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, ParenthesizedExpression-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ParenthesizedExpression-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
546,private final Constructor<?>[] dsfidMap = new Constructor<?>[256];,"@Immutable private final Constructor<?>[] dsfidMap=new Constructor<?>[256];
",0,0,10,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ),
WildcardType(ParameterizedType-typeArguments, ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
WildcardType(ParameterizedType-typeArguments, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, ),
"
547,"private File[] filesInLib2 = {new File(""../../libfolder/a.jar"") ,new File( ""../../libfolder/b.jar""),new File( ""../../libfolder/c.txt""), new File(""../../libfolder/subfolder"")};","private File[] filesInLib2={new File(""../../libfolder/a.jar""),new File(""../../libfolder/b.jar""),new File(""../../libfolder/c.txt""),new File(""../../libfolder/subfolder"")};
",0,0,12,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
548,"private String hsqldbURL = ""jdbc:hsqldb:"" + new File(BASEDIR, ""target/database/LoginSQLTest"");","private String hsqldbURL=""jdbc:hsqldb:"" + new File(BASEDIR,""target/database/LoginSQLTest"");
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
549,"AdminObjectRefBuilder adminObjectRefBuilder = new AdminObjectRefBuilder(null, new String[] {SchemaConversionUtils.J2EE_NAMESPACE});","AdminObjectRefBuilder adminObjectRefBuilder=new AdminObjectRefBuilder(null,new String[]{SchemaConversionUtils.J2EE_NAMESPACE});
",0,0,7,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, ArrayCreation-initializer, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
550,"private final List<? extends PathResourceImplementation> result = Arrays.asList(new TestResource(new File(wd,""1"")), new TestResource(new File(wd,""2"")));","private final List<? extends PathResourceImplementation> result=Arrays.asList(new TestResource(new File(wd,""1"")),new TestResource(new File(wd,""2"")));
",0,9,15,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
551,private NamingBuilder environmentEntryBuilder = new EnvironmentEntryBuilder(new String[]{AbstractNamingBuilder.JEE_NAMESPACE});,"private NamingBuilder environmentEntryBuilder=new EnvironmentEntryBuilder(new String[]{AbstractNamingBuilder.JEE_NAMESPACE});
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, ArrayCreation-initializer, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
552,private final PhoenixTransactionService[] txServices = new PhoenixTransactionService[TransactionFactory.Provider.values().length];,"private final PhoenixTransactionService[] txServices=new PhoenixTransactionService[TransactionFactory.Provider.values().length];
",0,2,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, FieldAccess-expression, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, FieldAccess-expression, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(FieldAccess-name, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
553,private List<HiveResourceACLs.Privilege> privilegesList = Arrays.asList(HiveResourceACLs.Privilege.values());,"private List<HiveResourceACLs.Privilege> privilegesList=Arrays.asList(HiveResourceACLs.Privilege.values());
",0,1,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
554,private volatile long startTime = TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis());,"private volatile long startTime=TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis());
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
555,"final ProcessorSupplier<byte[], byte[], Void, Void> voidProcessorSupplier = () -> new Processor<byte[], byte[], Void, Void>() {","final ProcessorSupplier<byte[],byte[],Void,Void> voidProcessorSupplier=() -> new Processor<byte[],byte[],Void,Void>(){
  @Override public void process(  final Record<byte[],byte[]> record){
  }
}
;
",0,1,16,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ClassInstanceCreation-type, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ClassInstanceCreation-type, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ClassInstanceCreation-type, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ClassInstanceCreation-type, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
556,"? extends Iterable<? extends Edge<I, ?>>> edgeSupplier;","private final SupplierFromVertex<I,V,Writable,? extends Iterable<? extends Edge<I,?>>> edgeSupplier;
",0,0,5,,"SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, WildcardType-bound, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, WildcardType-bound, ),
WildcardType(ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, WildcardType-bound, ),
SimpleName(VariableDeclarationFragment-name, ),
"
557,"private final TimedLogger timedLogger = new TimedLogger(30 * 1000, LOG);","/** 
 * Dump some progress every 30 seconds 
 */
private final TimedLogger timedLogger=new TimedLogger(30 * 1000,LOG);
",0,0,8,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
NumberLiteral(InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
NumberLiteral(InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
558,"private Mapper<?, ?, ?, ?>.Context context;","private Mapper<?,?,?,?>.Context context;
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, QualifiedType-qualifier, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, QualifiedType-qualifier, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, QualifiedType-qualifier, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, QualifiedType-qualifier, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, QualifiedType-qualifier, FieldDeclaration-type, ),
SimpleName(QualifiedType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
559,"private final File[] inFiles = new File[]{new File(testdata, ""randombytes-1""),","private final File[] inFiles=new File[]{new File(testdata,""randombytes-1""),new File(testdata,""randombytes-2""),new File(testdata,""randombytes-3"")};
",0,1,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
560,private int value = isReverse() ? getTo() : getFrom();,"/** 
 * The next value to return.
 */
private int value=isReverse() ? getTo() : getFrom();
",0,0,6,,"Modifier(),
PrimitiveType(),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-name, ConditionalExpression-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, ConditionalExpression-elseExpression, VariableDeclarationFragment-initializer, ),
"
561,"protected TreeMap<byte[], LinkedList<byte[]>> topValues = new TreeMap<byte[], LinkedList<byte[]>>(new Bytes.ByteArrayComparator());","protected TreeMap<byte[],LinkedList<byte[]>> topValues=new TreeMap<byte[],LinkedList<byte[]>>(new Bytes.ByteArrayComparator());
",0,11,15,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
562,private final ISourceUnitOperation resolve = (final SourceUnit source) -> {,"/** 
 * Resolves all types.
 */
private final ISourceUnitOperation resolve=(final SourceUnit source) -> {
  for (  ClassNode classNode : source.getAST().getClasses()) {
    GroovyClassVisitor visitor=new VariableScopeVisitor(source);
    visitor.visitClass(classNode);
    resolveVisitor.setClassNodeResolver(classNodeResolver);
    resolveVisitor.startResolving(classNode,source);
  }
}
;
",0,0,7,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
Modifier(SingleVariableDeclaration-modifiers, LambdaExpression-parameters, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, SingleVariableDeclaration-type, LambdaExpression-parameters, VariableDeclarationFragment-initializer, ),
SimpleName(SingleVariableDeclaration-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, ),
"
563,private LazyReference<CachedConstructor[]> constructors = new LazyReference<CachedConstructor[]>(softBundle) {,"private LazyReference<CachedConstructor[]> constructors=new LazyReference<CachedConstructor[]>(softBundle){
  private static final long serialVersionUID=-5834446523983631635L;
  @Override public CachedConstructor[] initValue(){
    PrivilegedAction<CachedConstructor[]> action=() -> Arrays.stream(getTheClass().getDeclaredConstructors()).filter(c -> !c.isSynthetic()).filter(c -> checkCanSetAccessible(c,CachedClass.class)).map(c -> new CachedConstructor(CachedClass.this,c)).toArray(CachedConstructor[]::new);
    return AccessController.doPrivileged(action);
  }
}
;
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
564,private int debug = DEFAULT_DEBUG != null ? DEFAULT_DEBUG : 0;,"private int debug=DEFAULT_DEBUG != null ? DEFAULT_DEBUG : 0;
",0,2,7,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(InfixExpression-rightOperand, ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ConditionalExpression-elseExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
565,"protected CompileUnit unit = new CompileUnit(this, new CompilerConfiguration());","protected CompileUnit unit=new CompileUnit(this,new CompilerConfiguration());
",0,0,6,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
566,"protected ClassGenerator dumper = new AsmClassGenerator(null,new GeneratorContext(unit), dumpVisitor, null);","protected ClassGenerator dumper=new AsmClassGenerator(null,new GeneratorContext(unit),dumpVisitor,null);
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
567,final long L2X31 = ((long)(1<<30))*2;,"final long L2X31=((long)(1 << 30)) * 2;
",0,2,7,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, ParenthesizedExpression-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, ParenthesizedExpression-expression, CastExpression-expression, ParenthesizedExpression-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ParenthesizedExpression-expression, CastExpression-expression, ParenthesizedExpression-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
568,"private boolean disableSweep2 = SystemPropertySupplier.create(SYS_PROP_DISABLE_SWEEP2, Boolean.FALSE).loggingTo(LOG)","private boolean disableSweep2=SystemPropertySupplier.create(SYS_PROP_DISABLE_SWEEP2,Boolean.FALSE).loggingTo(LOG).get();
",0,1,9,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
569,private final int testFileLength = (stripesPerBlock - 1) * stripeSize;,"private final int testFileLength=(stripesPerBlock - 1) * stripeSize;
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
570,private final int bufferSize = RND.nextInt(1024) + 128 + 1;,"private final int bufferSize=RND.nextInt(1024) + 128 + 1;
",0,3,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
571,"private Map<Integer, List<Map.Entry<Set<Device>, Integer>>> costTable","/** 
 * It caches the combination of different devices and the communication cost. The key is device count The value is an ordered list of map entry whose key is device combination, value is cost. The list is sorted by cost in ascending order. For instance: { 2=> [[device1,device2]=>0, [device1,device3]=>10] 3 => [[device1,device2,device3]=>10, [device2,device3,device5]=>20], }
 */
private Map<Integer,List<Map.Entry<Set<Device>,Integer>>> costTable=new HashMap<>();
",0,0,9,,"Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
"
572,private final File excludeHostFile = new File(TEMP_DIR + File.separator +,"private final File excludeHostFile=new File(TEMP_DIR + File.separator + ""excludeHostFile.txt"");
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
573,"String id = new SimpleDateFormat(""HH:mm:ss"").format(Calendar.getInstance().getTime())+"" "";","String id=new SimpleDateFormat(""HH:mm:ss"").format(Calendar.getInstance().getTime()) + "" "";
",0,1,9,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
574,"private String testRootDir = new File(System.getProperty(""test.build.data"",","private String testRootDir=new File(System.getProperty(""test.build.data"",""/tmp"")).getAbsolutePath();
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
575,"private final Map<String, Map<Class<?>[], Method>> methods = new HashMap<>();","/** 
 * Cache for all the method objects of the delegate class.
 */
private final Map<String,Map<Class<?>[],Method>> methods=new HashMap<>();
",0,0,11,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
WildcardType(ParameterizedType-typeArguments, ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
"
576,"private Map<Pair<String, Integer>, Protos.TaskID> groomTaskIDs = new HashMap<Pair<String, Integer>, Protos.TaskID>();","private Map<Pair<String,Integer>,Protos.TaskID> groomTaskIDs=new HashMap<Pair<String,Integer>,Protos.TaskID>();
",0,0,12,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
577,private final Color palette[] = new Color[Attr.PAL_SIZE];,"private final Color palette[]=new Color[Attr.PAL_SIZE];
",0,6,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
578,private final Serde<Windowed<String>> keySerde = new WindowedSerdes.SessionWindowedSerde<>(serde);,"private final Serde<Windowed<String>> keySerde=new WindowedSerdes.SessionWindowedSerde<>(serde);
",0,1,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
579,private final String[][] _stringValues = new String[NUM_UNIQUE_RECORDS][NUM_COLUMNS];,"private final String[][] _stringValues=new String[NUM_UNIQUE_RECORDS][NUM_COLUMNS];
",0,16,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
580,"private WizardDescriptor.Panel[] panels = new WizardDescriptor.Panel[] {null, null};","private WizardDescriptor.Panel[] panels=new WizardDescriptor.Panel[]{null,null};
",0,5,8,,"Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
581,"private final String[] documentId = {UUID.randomUUID().toString(), UUID.randomUUID().toString()};","private final String[] documentId={UUID.randomUUID().toString(),UUID.randomUUID().toString()};
",0,1,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
582,"final TYPE fileTypes[] = new TYPE[] { TYPE.GZIP_PLAIN, TYPE.HIVERC };","final TYPE fileTypes[]=new TYPE[]{TYPE.GZIP_PLAIN,TYPE.HIVERC};
",0,3,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
583,"private volatile Set<Relationship> relationships = new HashSet<>(Arrays.asList(new Relationship[] {REL_SUCCESS, REL_FAILURE, REL_RETRY}));","private volatile Set<Relationship> relationships=new HashSet<>(Arrays.asList(new Relationship[]{REL_SUCCESS,REL_FAILURE,REL_RETRY}));
",0,12,13,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayInitializer-expressions, ArrayCreation-initializer, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayInitializer-expressions, ArrayCreation-initializer, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayInitializer-expressions, ArrayCreation-initializer, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
584,private final Comparator<Node> nodeComparator = Comparator.comparing(this::getNodeStatus);,"private final Comparator<Node> nodeComparator=Comparator.comparing(this::getNodeStatus);
",0,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(ExpressionMethodReference-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ExpressionMethodReference-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
585,"private Map<byte[], Long> storeSequenceIds = Collections.emptyMap();","private Map<byte[],Long> storeSequenceIds=Collections.emptyMap();
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
586,"private Map<byte [], NavigableSet<byte []>> familyMap = new TreeMap<>(Bytes.BYTES_COMPARATOR);","private Map<byte[],NavigableSet<byte[]>> familyMap=new TreeMap<>(Bytes.BYTES_COMPARATOR);
",0,16,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
587,"private long[] values = { Long.MIN_VALUE, -10000000000L, -1000000L, 0L, 1000000L, 10000000000L,","private long[] values={Long.MIN_VALUE,-10000000000L,-1000000L,0L,1000000L,10000000000L,Long.MAX_VALUE};
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
588,private byte tagType = (byte)-1;,"private byte tagType=(byte)-1;
",0,1,5,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
589,"byte[][] VALS = { Bytes.toBytes(""foo""), Bytes.toBytes(""bar""), Bytes.toBytes(""baz"") };","byte[][] VALS={Bytes.toBytes(""foo""),Bytes.toBytes(""bar""),Bytes.toBytes(""baz"")};
",0,0,13,,"PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
590,protected IntrospectionUtils.PropertySource source[] = new IntrospectionUtils.PropertySource[] {,"protected IntrospectionUtils.PropertySource source[]=new IntrospectionUtils.PropertySource[]{new SystemPropertySource()};
",0,1,6,,"Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
591,"Invocation invocation = Invocation.create(method(S3Client.class, ""bucketExists"", String.class),","Invocation invocation=Invocation.create(method(S3Client.class,""bucketExists"",String.class),ImmutableList.<Object>of(""foo""));
",0,1,8,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
592,"private final ProcedureEvent<?> metaLoadEvent = new ProcedureEvent<>(""meta load"");","private final ProcedureEvent<?> metaLoadEvent=new ProcedureEvent<>(""meta load"");
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
593,Comparator<byte[]> rowEndKeyComparator = new Bytes.RowEndKeyComparator();,"Comparator<byte[]> rowEndKeyComparator=new Bytes.RowEndKeyComparator();
",0,0,5,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
594,"private final Map<byte [], Map<byte [], Result>> gets = new TreeMap<>(Bytes.BYTES_COMPARATOR);","/** 
 * Map of regions to map of rows and  {@link Result}. Used as data source when {@link #get(RpcController,ClientProtos.GetRequest)} is called. Because we have a bytekey, need to use TreeMap and provide a Comparator.  Use {@link #setGetResult(byte[],byte[],Result)} filling this map.
 */
private final Map<byte[],Map<byte[],Result>> gets=new TreeMap<>(Bytes.BYTES_COMPARATOR);
",0,1,12,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
595,"private final Map<byte [], Result []> nexts = new TreeMap<>(Bytes.BYTES_COMPARATOR);","/** 
 * Map of regions to results to return when scanning.
 */
private final Map<byte[],Result[]> nexts=new TreeMap<>(Bytes.BYTES_COMPARATOR);
",0,1,10,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
596,QuotaProtos.TimedQuota REQUEST_THROTTLE = QuotaProtos.TimedQuota.newBuilder(),"QuotaProtos.TimedQuota REQUEST_THROTTLE=QuotaProtos.TimedQuota.newBuilder().setScope(QuotaProtos.QuotaScope.MACHINE).setSoftLimit(100).setTimeUnit(HBaseProtos.TimeUnit.MINUTES).build();
",0,0,4,,"QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
597,"byte[] SPLITKEY = new byte[] { (LAST_CHAR + FIRST_CHAR) / 2, FIRST_CHAR };","byte[] SPLITKEY=new byte[]{(LAST_CHAR + FIRST_CHAR) / 2,FIRST_CHAR};
",0,0,9,,"PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
598,"private final KafkaSpoutConfig<String, String> spoutConfig = createKafkaSpoutConfigBuilder(kafkaUnitExtension.getKafkaUnit().getKafkaPort())","private final KafkaSpoutConfig<String,String> spoutConfig=createKafkaSpoutConfigBuilder(kafkaUnitExtension.getKafkaUnit().getKafkaPort()).setOffsetCommitPeriodMs(commitOffsetPeriodMs).setProp(ConsumerConfig.MAX_POLL_RECORDS_CONFIG,maxPollRecords).setMaxUncommittedOffsets(maxUncommittedOffsets).setRetry(new KafkaSpoutRetryExponentialBackoff(KafkaSpoutRetryExponentialBackoff.TimeInterval.seconds(initialRetryDelaySecs),KafkaSpoutRetryExponentialBackoff.TimeInterval.seconds(0),1,KafkaSpoutRetryExponentialBackoff.TimeInterval.seconds(initialRetryDelaySecs))).build();
",0,1,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
599,private @Inject @New(DependentOwnerComponent.class) DependentOwnerComponent grandParent;,"private @Inject @New(DependentOwnerComponent.class) DependentOwnerComponent grandParent;
",0,1,6,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(SingleMemberAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, TypeLiteral-type, SingleMemberAnnotation-value, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
600,"private final String testTempDir = Paths.get(System.getProperty(""java.io.tmpdir""), ""testDbNotif"").toString();","private final String testTempDir=Paths.get(System.getProperty(""java.io.tmpdir""),""testDbNotif"").toString();
",0,2,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
601,byte[] epochBytes = new TimestampWritableV2(new Timestamp()).getBytes();,"byte[] epochBytes=new TimestampWritableV2(new Timestamp()).getBytes();
",0,0,6,,"PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
602,"private final String TEST_DATA_DIR = HCatUtil.makePathASafeFileName(System.getProperty(""java.io.tmpdir"") +","private final String TEST_DATA_DIR=HCatUtil.makePathASafeFileName(System.getProperty(""java.io.tmpdir"") + File.separator + TestCompactor.class.getCanonicalName()+ ""-""+ System.currentTimeMillis()+ ""_""+ salt.getAndIncrement());
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
603,"private final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(new Metrics(), ""clientId"", StreamsConfig.METRICS_LATEST, new MockTime());","private final StreamsMetricsImpl streamsMetrics=new StreamsMetricsImpl(new Metrics(),""clientId"",StreamsConfig.METRICS_LATEST,new MockTime());
",0,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
604,"public int inputColumnNum[] = {-1, -1, -1};","/** 
 * Input column numbers of the vector expression, which should be reused by vector expressions.
 */
public int inputColumnNum[]={-1,-1,-1};
",0,0,7,,"Modifier(),
PrimitiveType(),
SimpleName(VariableDeclarationFragment-name, ),
Dimension(VariableDeclarationFragment-extraDimensions2, ),
NumberLiteral(PrefixExpression-operand, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(PrefixExpression-operand, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(PrefixExpression-operand, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
"
605,"HashMap<Task<?>, List<Operator<? extends OperatorDesc>>> taskToSeenOps;","private HashMap<Task<?>,List<Operator<? extends OperatorDesc>>> taskToSeenOps;
",0,0,7,,"SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
"
606,"private final Object union = new StandardUnion((byte) 0, ""foo"");","private final Object union=new StandardUnion((byte)0,""foo"");
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(CastExpression-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
607,"TemporaryFolder tmpFolderRule = new TemporaryFolder(new File(HIVE_ROOT + ""/target/tmp""));","TemporaryFolder tmpFolderRule=new TemporaryFolder(new File(HIVE_ROOT + ""/target/tmp""));
",0,0,6,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
608,"private String tableName = TEST_TABLE + ""_"" + System.getProperty(""user.name"");","@Option(names={""-t"",""--table""},description=""table name"") private String tableName=TEST_TABLE + ""_"" + System.getProperty(""user.name"");
",0,0,8,,"Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
StringLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, ),
StringLiteral(MethodInvocation-arguments, InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, ),
"
609,"private final UnboundPredicate<?> pred = lessThan(""x"", 7);","private final UnboundPredicate<?> pred=lessThan(""x"",7);
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
610,"private final AuthorizableAction action = mock(AuthorizableAction.class, withSettings().extraInterfaces(GroupAction.class, UserAction.class));","private final AuthorizableAction action=mock(AuthorizableAction.class,withSettings().extraInterfaces(GroupAction.class,UserAction.class));
",0,1,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
611,"private final Map<Pair<Integer, StructLikeWrapper>, Pair<long[], DeleteFile[]>> sortedDeletesByPartition;","private final Map<Pair<Integer,StructLikeWrapper>,Pair<long[],DeleteFile[]>> sortedDeletesByPartition;
",0,0,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
612,"private final Multimap<Integer, Move> moves = Multimaps.newListMultimap(Maps.newHashMap(), Lists::newArrayList);","private final Multimap<Integer,Move> moves=Multimaps.newListMultimap(Maps.newHashMap(),Lists::newArrayList);
",0,0,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ExpressionMethodReference-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ExpressionMethodReference-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
613,"private final ConcurrentMap<Thread, Value<T>> refs = new MapMaker().weakKeys().makeMap();","private final ConcurrentMap<Thread,Value<T>> refs=new MapMaker().weakKeys().makeMap();
",0,2,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
614,private List<Class<? extends Exception>> onlyRetryExceptions = null;,"private List<Class<? extends Exception>> onlyRetryExceptions=null;
",0,0,6,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
615,private final ConsoleReporter reporter = ConsoleReporter.forRegistry(metricRegistry),"private final ConsoleReporter reporter=ConsoleReporter.forRegistry(metricRegistry).outputTo(output).formattedFor(Locale.US).convertRatesTo(TimeUnit.SECONDS).convertDurationsTo(TimeUnit.MILLISECONDS).filter(MetricFilter.ALL).build();
",0,75,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
616,"private final ListView<Map.Entry<String, String>> mappingView = new ListView<>(""mapping"", new ListModel<>(new ArrayList<>())) {","private final ListView<Map.Entry<String,String>> mappingView=new ListView<>(""mapping"",new ListModel<>(new ArrayList<>())){
  private static final long serialVersionUID=1L;
  @Override protected void populateItem(  final ListItem<Map.Entry<String,String>> item){
    final Map.Entry<String,String> entry=item.getModelObject();
    BootstrapAjaxLink<String> del=new BootstrapAjaxLink<>(""delete"",Buttons.Type.Outline_Danger){
      private static final long serialVersionUID=1L;
      @Override public void onClick(      AjaxRequestTarget target){
        OAuthServer s=OAuthForm.this.getModelObject();
        s.getMapping().remove(entry.getKey());
        updateMapping();
        target.add(attrsContainer);
      }
    }
;
    del.setIconType(FontAwesome5IconType.times_s).add(newOkCancelDangerConfirm(this,getString(""833"")));
    item.add(new Label(""key"",Model.of(entry.getKey()))).add(new Label(""value"",Model.of(entry.getValue()))).add(del);
  }
}
;
",0,8,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
617,private final int TXT_X_PAD = isUseStretchingTabs() ? 9 : 4;,"/** 
 * Space between text and left side of the tab
 */
private final int TXT_X_PAD=isUseStretchingTabs() ? 9 : 4;
",0,1,7,,"Modifier(),
Modifier(),
PrimitiveType(),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-name, ConditionalExpression-expression, VariableDeclarationFragment-initializer, ),
NumberLiteral(ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, ),
NumberLiteral(ConditionalExpression-elseExpression, VariableDeclarationFragment-initializer, ),
"
618,"private Map<IgnitePredicate<? extends Event>, int[]> lsnrs;","/** 
 * Local event listeners. 
 */
private Map<IgnitePredicate<? extends Event>,int[]> lsnrs;
",0,0,7,,"Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
"
619,private final ThreadLocal<Queue<E>> bag = ThreadLocal.withInitial(LinkedList::new);,"/** 
 */
private final ThreadLocal<Queue<E>> bag=ThreadLocal.withInitial(LinkedList::new);
",0,1,9,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, CreationReference-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
620,"private final Map<Long, NotificationListener>[] notificationLsnrs = new Map[ClientNotificationType.values().length];","/** 
 * Notification listeners. 
 */
@SuppressWarnings(""unchecked"") private final Map<Long,NotificationListener>[] notificationLsnrs=new Map[ClientNotificationType.values().length];
",0,1,12,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ArrayType-elementType, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, FieldAccess-expression, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, FieldAccess-expression, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, ),
SimpleName(FieldAccess-name, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, ),
"
621,"private final boolean isQuiet = Boolean.valueOf(System.getProperty(IGNITE_QUIET, ""true""));","/** 
 * Quiet flag. 
 */
@GridToStringInclude private final boolean isQuiet=Boolean.valueOf(System.getProperty(IGNITE_QUIET,""true""));
",0,0,10,,"Modifier(),
Modifier(),
PrimitiveType(),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
622,"private final AtomicStampedReference<Boolean> usage = new AtomicStampedReference<>(false, 0);","/** 
 * Undeployed flag and current usage count. 
 */
@GridToStringExclude private final AtomicStampedReference<Boolean> usage=new AtomicStampedReference<>(false,0);
",0,0,8,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
623,"private Iterator<Map.Entry<UUID, GridCacheQueryManager<K, V>.RequestFutureMap>> nodeQryIter;","/** 
 * Node requests iterator. 
 */
private Iterator<Map.Entry<UUID,GridCacheQueryManager<K,V>.RequestFutureMap>> nodeQryIter;
",0,0,9,,"Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, QualifiedType-qualifier, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, QualifiedType-qualifier, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, QualifiedType-qualifier, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(QualifiedType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
"
624,"private Iterator<Map.Entry<Long, GridFutureAdapter<GridCacheQueryManager.QueryResult<K, V>>>> qriesIter;","/** 
 * Request results iterator. 
 */
private Iterator<Map.Entry<Long,GridFutureAdapter<GridCacheQueryManager.QueryResult<K,V>>>> qriesIter;
",0,0,9,,"Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
"
625,"private boolean wasOpen = NbPreferences.forModule(Presenter.class).getBoolean (KEY_OPEN, true);","private boolean wasOpen=NbPreferences.forModule(Presenter.class).getBoolean(KEY_OPEN,true);
",0,3,9,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
626,"private final IgnitePredicate<Cache.Entry<K, V>>[] filter;","/** 
 * Filter. 
 */
private final IgnitePredicate<Cache.Entry<K,V>>[] filter;
",0,0,8,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ArrayType-elementType, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ArrayType-elementType, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
"
627,private final AtomicLong state = new AtomicLong((long)MOVING.ordinal() << 32);,"/** 
 * State. 32 bits - size, 16 bits - reservations, 13 bits - reserved, 3 bits - GridDhtPartitionState. 
 */
@GridToStringExclude private final AtomicLong state=new AtomicLong((long)MOVING.ordinal() << 32);
",0,1,9,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
PrimitiveType(CastExpression-type, InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, CastExpression-expression, InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, CastExpression-expression, InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
NumberLiteral(InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
628,private Iterator<T> currIter = partsIter.hasNext() ? iterator(partsIter.next()) :,"/** 
 * Current partition iterator. 
 */
private Iterator<T> currIter=partsIter.hasNext() ? iterator(partsIter.next()) : Collections.<T>emptyIterator();
",0,0,9,,"Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, ConditionalExpression-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, ConditionalExpression-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, ),
"
629,private long lastShowProgressTimeNanos = System.nanoTime() - U.millisToNanos(evictionProgressFreqMs);,"/** 
 * Last time of show eviction progress. 
 */
private long lastShowProgressTimeNanos=System.nanoTime() - U.millisToNanos(evictionProgressFreqMs);
",0,0,8,,"Modifier(),
PrimitiveType(),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-arguments, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, ),
"
630,private final Set<CacheGroupContext> cacheGrpCtxsForDefragmentation = new TreeSet<>(comparing(CacheGroupContext::cacheOrGroupName));,"/** 
 */
private final Set<CacheGroupContext> cacheGrpCtxsForDefragmentation=new TreeSet<>(comparing(CacheGroupContext::cacheOrGroupName));
",0,0,9,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(ExpressionMethodReference-expression, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(ExpressionMethodReference-name, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
631,private final ThreadLocal<PageLockTracker<?>> lockTracker = ThreadLocal.withInitial(this::createTracker);,"/** 
 */
private final ThreadLocal<PageLockTracker<?>> lockTracker=ThreadLocal.withInitial(this::createTracker);
",0,1,10,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
ThisExpression(ExpressionMethodReference-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(ExpressionMethodReference-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
632,private final Collection<FullPageId> locked = new HashSet<>(Runtime.getRuntime().availableProcessors() * 2);,"/** 
 * Page IDs which are locked for reading from store. Page content is being written right now. guarded by collection object monitor.
 */
private final Collection<FullPageId> locked=new HashSet<>(Runtime.getRuntime().availableProcessors() * 2);
",0,0,10,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
NumberLiteral(InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
633,"private final Map<GridCacheMapEntry, Integer> stores[] = new LinkedHashMap[stripesCnt];","/** 
 * Store for keys and collisions queue sizes. 
 */
private final Map<GridCacheMapEntry,Integer> stores[]=new LinkedHashMap[stripesCnt];
",0,0,10,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
Dimension(VariableDeclarationFragment-extraDimensions2, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, ),
"
634,"private final Map<GridCacheAdapter<?, ?>, List<Map.Entry<GridCacheMapEntry, Integer>>> metricPerCacheStore =","/** 
 * Metric per cache store. 
 */
private final Map<GridCacheAdapter<?,?>,List<Map.Entry<GridCacheMapEntry,Integer>>> metricPerCacheStore=new ConcurrentHashMap<>();
",0,0,11,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
"
635,"private final T2<GridResourceField[], GridResourceMethod[]>[] annArr;","/** 
 * Uses as enum-map with enum  {@link ResourceAnnotation} member as a keys. 
 */
private final T2<GridResourceField[],GridResourceMethod[]>[] annArr;
",0,0,9,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ArrayType-elementType, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
"
636,"private final OperationSecurityContext opSecCtx = new OperationSecurityContext(this, null);","/** 
 * No operation security context. 
 */
private final OperationSecurityContext opSecCtx=new OperationSecurityContext(this,null);
",0,0,7,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
ThisExpression(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
637,private ReentrantReadWriteLock.WriteLock writeLock = new ReentrantReadWriteLock.WriteLock(delegate) {};,"/** 
 * Write lock holder. 
 */
private ReentrantReadWriteLock.WriteLock writeLock=new ReentrantReadWriteLock.WriteLock(delegate){
}
;
",0,0,6,,"Modifier(),
QualifiedName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
AnonymousClassDeclaration(ClassInstanceCreation-anonymousClassDeclaration, VariableDeclarationFragment-initializer, ),
"
638,private @NotNull Collection<ResolvedAddresses> addrs = Collections.emptyList();,"/** 
 * Resolved list of (ip, hostname) pairs (if ip has no resolved host, hostname will be the string representation of ip).
 */
private @NotNull Collection<ResolvedAddresses> addrs=Collections.emptyList();
",0,0,7,,"Modifier(),
SimpleName(MarkerAnnotation-typeName, ),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
"
639,"private volatile Iterator<Map.Entry<String, GridWorker>> checkIter = registeredWorkers.entrySet().iterator();","/** 
 * Points to the next worker to check. 
 */
private volatile Iterator<Map.Entry<String,GridWorker>> checkIter=registeredWorkers.entrySet().iterator();
",0,0,10,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
"
640,private long metricsCheckFreq = 3 * spi.metricsUpdateFreq + 50;,"/** 
 * Incoming metrics check frequency. 
 */
private long metricsCheckFreq=3 * spi.metricsUpdateFreq + 50;
",0,0,6,,"Modifier(),
PrimitiveType(),
SimpleName(VariableDeclarationFragment-name, ),
NumberLiteral(InfixExpression-leftOperand, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
QualifiedName(InfixExpression-rightOperand, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
NumberLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, ),
"
641,private long lastTimeMetricsUpdateMsgSentNanos = System.nanoTime() - U.millisToNanos(spi.metricsUpdateFreq);,"/** 
 * Last time metrics update message has been sent. 
 */
private long lastTimeMetricsUpdateMsgSentNanos=System.nanoTime() - U.millisToNanos(spi.metricsUpdateFreq);
",0,0,8,,"Modifier(),
PrimitiveType(),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, ),
QualifiedName(MethodInvocation-arguments, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, ),
"
642,private final ThreadLocal<Boolean> notifiedDiscovery = ThreadLocal.withInitial(() -> false);,"/** 
 * Thread local variable indicates that discovery manager was notified after message processing. 
 */
private final ThreadLocal<Boolean> notifiedDiscovery=ThreadLocal.withInitial(() -> false);
",0,0,8,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
BooleanLiteral(LambdaExpression-body, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
643,"private volatile GridNodeList nodeList = new GridNodeList(0, new ArrayList<UUID>(0));","/** 
 * Current snapshot of nodes which participated in load balancing. 
 */
private volatile GridNodeList nodeList=new GridNodeList(0,new ArrayList<UUID>(0));
",0,0,9,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
644,"private final GridStringLogger log0 = new GridStringLogger(false, this.log);","/** 
 */
private final GridStringLogger log0=new GridStringLogger(false,this.log);
",0,4,8,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
ThisExpression(FieldAccess-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(FieldAccess-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
645,private RDBOptions options = new RDBOptions().tablePrefix(TABLEPREFIX).dropTablesOnClose(true);,"private RDBOptions options=new RDBOptions().tablePrefix(TABLEPREFIX).dropTablesOnClose(true);
",0,2,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
646,private final CacheConfiguration ccfg = new CacheConfiguration(CACHE_NAME),"/** 
 * Cache configuration. 
 */
private final CacheConfiguration ccfg=new CacheConfiguration(CACHE_NAME).setAtomicityMode(CacheAtomicityMode.TRANSACTIONAL).setReadFromBackup(false).setBackups(1).setAffinity(new RendezvousAffinityFunction(false,64));
",0,0,6,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
"
647,private final IgnitePredicate<Event> pred = (IgnitePredicate<Event>) new IgnitePredicate<Event>() {,"/** 
 */
private final IgnitePredicate<Event> pred=(IgnitePredicate<Event>)new IgnitePredicate<Event>(){
  @Override public boolean apply(  Event evt){
    if (evt instanceof CacheEvent) {
      CacheEvent cacheEvt=(CacheEvent)evt;
      int part=cacheEvt.partition();
      if (TEST_CACHE_NAME.equals(cacheEvt.cacheName())) {
switch (evt.type()) {
case EventType.EVT_CACHE_OBJECT_PUT:
{
            ensureKeySet(part).add(ensureKey(cacheEvt.key()));
            break;
          }
case EventType.EVT_CACHE_REBALANCE_OBJECT_LOADED:
{
          ensureKeySet(part,loadingMap).add(ensureKey(cacheEvt.key()));
          break;
        }
case EventType.EVT_CACHE_OBJECT_REMOVED:
case EventType.EVT_CACHE_REBALANCE_OBJECT_UNLOADED:
{
        ensureKeySet(part).remove(ensureKey(cacheEvt.key()));
        break;
      }
  }
}
}
 else if (evt instanceof CacheRebalancingEvent) {
CacheRebalancingEvent rebalancingEvt=(CacheRebalancingEvent)evt;
int part=rebalancingEvt.partition();
if (TEST_CACHE_NAME.equals(rebalancingEvt.cacheName())) {
switch (evt.type()) {
case EventType.EVT_CACHE_REBALANCE_PART_UNLOADED:
{
      Set<IntegerKey> keys=partMap.get(part);
      if (keys != null && !keys.isEmpty())       X.println(""!!! Attempting to unload non-empty partition: "" + part + ""; keys=""+ keys);
      partMap.remove(part);
      X.println(""*** Unloaded partition: "" + part);
      break;
    }
case EventType.EVT_CACHE_REBALANCE_PART_DATA_LOST:
{
    partMap.remove(part);
    X.println(""*** Lost partition: "" + part);
    break;
  }
case EventType.EVT_CACHE_REBALANCE_PART_LOADED:
{
  Set<IntegerKey> keys=loadingMap.get(part);
  partMap.put(part,keys);
  loadingMap.remove(part);
  X.println(""*** Loaded partition: "" + part + ""; keys=""+ keys);
  break;
}
}
}
}
return true;
}
}
;
",0,0,9,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, CastExpression-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, CastExpression-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, CastExpression-expression, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, CastExpression-expression, VariableDeclarationFragment-initializer, ),
"
648,"@Nullable private CacheConfiguration<?, ?>[] cacheConfigs;","/** 
 * Cache configurations. 
 */
@Nullable private CacheConfiguration<?,?>[] cacheConfigs;
",0,0,7,,"SimpleName(MarkerAnnotation-typeName, ),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ),
WildcardType(ParameterizedType-typeArguments, ArrayType-elementType, ),
WildcardType(ParameterizedType-typeArguments, ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
"
649,private OffheapReadWriteLock rwLock = new OffheapReadWriteLock(U.nextPowerOf2(Runtime.getRuntime().availableProcessors()));,"/** 
 */
private OffheapReadWriteLock rwLock=new OffheapReadWriteLock(U.nextPowerOf2(Runtime.getRuntime().availableProcessors()));
",0,0,9,,"Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
650,private int numRetries = super.getLockRetries();,"/** 
 * Number of retries. 
 */
private int numRetries=super.getLockRetries();
",0,0,4,,"Modifier(),
PrimitiveType(),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SuperMethodInvocation-name, VariableDeclarationFragment-initializer, ),
"
651,private final byte[] buf = new byte[(int)(65536 * 1.5)];,"/** 
 */
private final byte[] buf=new byte[(int)(65536 * 1.5)];
",0,0,10,,"Modifier(),
Modifier(),
PrimitiveType(ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
PrimitiveType(CastExpression-type, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, ),
NumberLiteral(InfixExpression-leftOperand, ParenthesizedExpression-expression, CastExpression-expression, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, ),
NumberLiteral(InfixExpression-rightOperand, ParenthesizedExpression-expression, CastExpression-expression, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, ),
"
652,"private final Long stmtTimeout = Long.getLong(IGNITE_H2_INDEXING_CACHE_THREAD_USAGE_TIMEOUT, 600 * 1000)","/** 
 * The timeout to remove entry from the statement cache if the thread doesn't perform any queries. 
 */
private final Long stmtTimeout=Long.getLong(IGNITE_H2_INDEXING_CACHE_THREAD_USAGE_TIMEOUT,600 * 1000) * 1_000_000;
",0,0,9,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
NumberLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
NumberLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
"
653,private final IgniteInClosure<? super IgniteInternalFuture<?>> logger = new IgniteInClosure<IgniteInternalFuture<?>>() {,"/** 
 */
private final IgniteInClosure<? super IgniteInternalFuture<?>> logger=new IgniteInClosure<IgniteInternalFuture<?>>(){
  @Override public void apply(  IgniteInternalFuture<?> fut){
    try {
      fut.get();
    }
 catch (    IgniteCheckedException e) {
      U.error(log,e.getMessage(),e);
    }
  }
}
;
",0,0,9,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, ),
WildcardType(ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
"
654,"public final List<Cache.Entry<Integer, ?>> all = new ArrayList<>();","/** 
 */
public final List<Cache.Entry<Integer,?>> all=new ArrayList<>();
",0,0,8,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
"
655,"private final Config config = new MapConfig(ImmutableMap.of(""job.name"", jobName, ""job.id"", jobId));","private final Config config=new MapConfig(ImmutableMap.of(""job.name"",jobName,""job.id"",jobId));
",0,2,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
656,"private final ListeningTestLogger log = new ListeningTestLogger(false, super.log);","/** 
 * Test logger. 
 */
private final ListeningTestLogger log=new ListeningTestLogger(false,super.log);
",0,0,7,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(SuperFieldAccess-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
657,"private ThreadLocalObjectPool<Obj> pool = new ThreadLocalObjectPool<>(1, Obj::new, null, null);","/** 
 */
private ThreadLocalObjectPool<Obj> pool=new ThreadLocalObjectPool<>(1,Obj::new,null,null);
",0,0,9,,"Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, CreationReference-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
658,"private final OperationEvaluationContext ec = new OperationEvaluationContext(null, null, 0, 0, 0, null);","private final OperationEvaluationContext ec=new OperationEvaluationContext(null,null,0,0,0,null);
",0,1,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
659,"private Consumer<Runnable> shouldFail = (op) -> assertThrowsWithCause(op, IgniteException.class);","/** 
 */
private Consumer<Runnable> shouldFail=(op) -> assertThrowsWithCause(op,IgniteException.class);
",0,0,8,,"Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, LambdaExpression-body, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, ),
"
660,"protected IgniteBiPredicate<K, V> filter = (k, v) -> true;","/** 
 * Filter. 
 */
protected IgniteBiPredicate<K,V> filter=(k,v) -> true;
",0,0,8,,"Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, ),
BooleanLiteral(LambdaExpression-body, VariableDeclarationFragment-initializer, ),
"
661,"private Function<Queue<TreeNode>, List<TreeNode>> nodesToLearnSelectionStrgy = this::defaultNodesToLearnSelectionStrgy;","/** 
 * Nodes to learn selection strategy. 
 */
private Function<Queue<TreeNode>,List<TreeNode>> nodesToLearnSelectionStrgy=this::defaultNodesToLearnSelectionStrgy;
",0,0,9,,"Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
ThisExpression(ExpressionMethodReference-expression, VariableDeclarationFragment-initializer, ),
SimpleName(ExpressionMethodReference-name, VariableDeclarationFragment-initializer, ),
"
662,private RandomForestClassifierTrainer rf = new RandomForestClassifierTrainer(meta),"/** 
 * Rf. 
 */
private RandomForestClassifierTrainer rf=new RandomForestClassifierTrainer(meta).withAmountOfTrees(cntOfTrees).withSeed(seed).withFeaturesCountSelectionStrgy(x -> 4).withMaxDepth(maxDepth).withMinImpurityDelta(minImpDelta).withSubSampleSize(0.1);
",0,0,5,,"Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
"
663,"Function<Chromosome, Double> fitnessFunction = (Chromosome ch) -> ch.getGene(0) + ch.getGene(1);","/** 
 * Fitness function. 
 */
Function<Chromosome,Double> fitnessFunction=(Chromosome ch) -> ch.getGene(0) + ch.getGene(1);
",0,0,12,,"SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, SingleVariableDeclaration-type, LambdaExpression-parameters, VariableDeclarationFragment-initializer, ),
SimpleName(SingleVariableDeclaration-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, ),
NumberLiteral(MethodInvocation-arguments, InfixExpression-leftOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, InfixExpression-rightOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, ),
NumberLiteral(MethodInvocation-arguments, InfixExpression-rightOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, ),
"
664,"private final Map<String, T2<long[], String[]>> histogramNames = new HashMap<>();","/** 
 * Cached histogram metrics intervals names. 
 */
private final Map<String,T2<long[],String[]>> histogramNames=new HashMap<>();
",0,0,11,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
"
665,"private final Map<GridCacheQueryType, Map<UUID, Map<Long, long[]>>> readsById =","/** 
 * Parsed reads: queryType -> queryNodeId -> queryId -> reads. 
 */
private final Map<GridCacheQueryType,Map<UUID,Map<Long,long[]>>> readsById=new EnumMap<>(GridCacheQueryType.class);
",0,0,11,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
"
666,"@Nullable public Map<String, String> notificationFailed = new HashMap<>();","/** 
 * Notification failed: Map from address to exception text 
 */
@Nullable public Map<String,String> notificationFailed=new HashMap<>();
",0,0,7,,"SimpleName(MarkerAnnotation-typeName, ),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
"
667,@Nullable private RevisionCompacted revisions[];,"@Nullable private RevisionCompacted revisions[];
",0,0,5,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
"
668,"private final Map<ConfigKey<?>,Object> inheritedConfig = Collections.synchronizedMap(new LinkedHashMap<ConfigKey<?>, Object>());","/** 
 * Map of configuration information that is defined at start-up time for the entity. These configuration parameters are shared and made accessible to the ""children"" of this entity.
 */
private final Map<ConfigKey<?>,Object> inheritedConfig=Collections.synchronizedMap(new LinkedHashMap<ConfigKey<?>,Object>());
",0,2,13,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
669,"private Callable<String> groupNameFactory = new Callable<String>() { public String call() { return ""br-sg-""+Identifiers.makeRandomId(8); } };","private Callable<String> groupNameFactory=new Callable<String>(){
  public String call(){
    return ""br-sg-"" + Identifiers.makeRandomId(8);
  }
}
;
",0,0,13,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Modifier(MethodDeclaration-modifiers, AnonymousClassDeclaration-bodyDeclarations, ClassInstanceCreation-anonymousClassDeclaration, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodDeclaration-returnType2, AnonymousClassDeclaration-bodyDeclarations, ClassInstanceCreation-anonymousClassDeclaration, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodDeclaration-name, AnonymousClassDeclaration-bodyDeclarations, ClassInstanceCreation-anonymousClassDeclaration, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, ReturnStatement-expression, Block-statements, MethodDeclaration-body, AnonymousClassDeclaration-bodyDeclarations, ClassInstanceCreation-anonymousClassDeclaration, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-rightOperand, ReturnStatement-expression, Block-statements, MethodDeclaration-body, AnonymousClassDeclaration-bodyDeclarations, ClassInstanceCreation-anonymousClassDeclaration, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, ReturnStatement-expression, Block-statements, MethodDeclaration-body, AnonymousClassDeclaration-bodyDeclarations, ClassInstanceCreation-anonymousClassDeclaration, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, InfixExpression-rightOperand, ReturnStatement-expression, Block-statements, MethodDeclaration-body, AnonymousClassDeclaration-bodyDeclarations, ClassInstanceCreation-anonymousClassDeclaration, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
670,"final ApplicationSummary application = new ApplicationSummary(null, applicationSpec, Status.STARTING, null);","final ApplicationSummary application=new ApplicationSummary(null,applicationSpec,Status.STARTING,null);
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
671,"private String jobConfDir = ""/tmp/"" + this.getClass().getSimpleName() + ""/jobCatalog"";","private String jobConfDir=""/tmp/"" + this.getClass().getSimpleName() + ""/jobCatalog"";
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(MethodInvocation-expression, MethodInvocation-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
672,"private final int newLine = ""\n"".getBytes()[0];","private final int newLine=""\n"".getBytes()[0];
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-expression, ArrayAccess-array, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayAccess-array, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayAccess-index, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
673,"private DateTimeFormatter formatter = DateTimeFormat.forPattern(""yyyy/MM/dd/HH"").withZone(DateTimeZone.forID(ConfigurationKeys.PST_TIMEZONE_NAME));","private DateTimeFormatter formatter=DateTimeFormat.forPattern(""yyyy/MM/dd/HH"").withZone(DateTimeZone.forID(ConfigurationKeys.PST_TIMEZONE_NAME));
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
674,"private final Map<String, byte[]> verificationCache = new HashMap<>(1000);","private final Map<String,byte[]> verificationCache=new HashMap<>(1000);
",0,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
675,@Setter private String httpMethodRetryHandlerClass = DefaultHttpMethodRetryHandler.class.getName();,"@Setter private String httpMethodRetryHandlerClass=DefaultHttpMethodRetryHandler.class.getName();
",0,0,6,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
676,private final Schema schema = new Schema.Parser().parse(SCHEMA);,"private final Schema schema=new Schema.Parser().parse(SCHEMA);
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
677,"private final TreeMultimap<Long, PermitBatch> batches = TreeMultimap.create(Ordering.natural(), new Comparator<PermitBatch>() {","private final TreeMultimap<Long,PermitBatch> batches=TreeMultimap.create(Ordering.natural(),new Comparator<PermitBatch>(){
  @Override public int compare(  PermitBatch o1,  PermitBatch o2){
    return Long.compare(o1.autoIncrementKey,o2.autoIncrementKey);
  }
}
);
",0,0,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
678,"private Optional<Map<String, JobState.DatasetState>> datasetStatesByUrns = Optional.absent();","private Optional<Map<String,JobState.DatasetState>> datasetStatesByUrns=Optional.absent();
",0,1,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
679,private final JmxReporter jmxReporter = JmxReporter.forRegistry(this.metricRegistry),"private final JmxReporter jmxReporter=JmxReporter.forRegistry(this.metricRegistry).convertRatesTo(TimeUnit.SECONDS).convertDurationsTo(TimeUnit.MILLISECONDS).build();
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(FieldAccess-expression, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(FieldAccess-name, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
680,"Config baseConfig = ConfigFactory.empty().withValue(DatasetDescriptorConfigKeys.PLATFORM_KEY, ConfigValueFactory.fromAnyRef(""hive""))","Config baseConfig=ConfigFactory.empty().withValue(DatasetDescriptorConfigKeys.PLATFORM_KEY,ConfigValueFactory.fromAnyRef(""hive"")).withValue(DatasetDescriptorConfigKeys.DATABASE_KEY,ConfigValueFactory.fromAnyRef(""testDb_Db1"")).withValue(DatasetDescriptorConfigKeys.TABLE_KEY,ConfigValueFactory.fromAnyRef(""testTable_Table1""));
",0,0,9,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
681,"private String testName 		 = this.getClass().getSimpleName().substring(0, 9);","private String testName=this.getClass().getSimpleName().substring(0,9);
",0,2,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
ThisExpression(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
682,private MetaGroupMember metaGroupMember = (MetaGroupMember) super.getMember();,"private MetaGroupMember metaGroupMember=(MetaGroupMember)super.getMember();
",0,0,5,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, CastExpression-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SuperMethodInvocation-name, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
683,"private final DateFormat dateFormat = new SimpleDateFormat(""yyyy-MM-dd'T'HH:mm:ss"" + "".SSS'Z'"");","private final DateFormat dateFormat=new SimpleDateFormat(""yyyy-MM-dd'T'HH:mm:ss"" + "".SSS'Z'"");
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
684,"private final String confPath = System.getProperty(IoTDBConstant.IOTDB_CONF, null);","private final String confPath=System.getProperty(IoTDBConstant.IOTDB_CONF,null);
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
685,private String g1s1 = sg1 + IoTDBConstant.PATH_SEPARATOR + s1;,"private String g1s1=sg1 + IoTDBConstant.PATH_SEPARATOR + s1;
",0,1,6,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
686,"private final Map<Traverser.Admin<S>, Traverser.Admin<S>> map = Collections.synchronizedMap(new LinkedHashMap<>());","private final Map<Traverser.Admin<S>,Traverser.Admin<S>> map=Collections.synchronizedMap(new LinkedHashMap<>());
",0,1,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
687,private final MessageSender<ControlMessage.Message> mockMsgSender = mock(MessageSender.class);,"private final MessageSender<ControlMessage.Message> mockMsgSender=mock(MessageSender.class);
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
688,"private final double MILLIS_PER_HOUR = TimeUnit.MILLISECONDS.convert(1, TimeUnit.HOURS);","private final double MILLIS_PER_HOUR=TimeUnit.MILLISECONDS.convert(1,TimeUnit.HOURS);
",0,4,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
689,private final int INDEX_TO_COMPARE = new Random(System.currentTimeMillis()).nextInt(NUM_ROWS);,"private final int INDEX_TO_COMPARE=new Random(System.currentTimeMillis()).nextInt(NUM_ROWS);
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
690,private final ThreadLocal<byte[]> _reusableBytes = ThreadLocal.withInitial(() -> new byte[_lengthOfLongestEntry]);,"private final ThreadLocal<byte[]> _reusableBytes=ThreadLocal.withInitial(() -> new byte[_lengthOfLongestEntry]);
",0,0,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, LambdaExpression-body, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, LambdaExpression-body, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayCreation-dimensions, LambdaExpression-body, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
691,"private String _tempDir = new File(FileUtils.getTempDirectory(), getClass().getSimpleName()).getAbsolutePath();","@Option(name=""-tempDir"",metaVar=""<string>"",usage=""Temporary directory used to hold data during segment creation."") private String _tempDir=new File(FileUtils.getTempDirectory(),getClass().getSimpleName()).getAbsolutePath();
",0,0,9,,"Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
"
692,"private Set<String> discoverableFields = new HashSet<String>(Arrays.asList(""info""));","private Set<String> discoverableFields=new HashSet<String>(Arrays.asList(""info""));
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
693,private int endPosition = gather == -1 ? Integer.MAX_VALUE : skipTo + gather;,"private int endPosition=gather == -1 ? Integer.MAX_VALUE : skipTo + gather;
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, InfixExpression-rightOperand, ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, ConditionalExpression-elseExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, ConditionalExpression-elseExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
694,int wsServerPort = !isExternalServer ? 0 : 49460;,"int wsServerPort=!isExternalServer ? 0 : 49460;
",0,0,5,,"PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(PrefixExpression-operand, ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ConditionalExpression-elseExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
695,private List<Neuron<?>[]> neurons = new ArrayList<Neuron<?>[]>();,"private List<Neuron<?>[]> neurons=new ArrayList<Neuron<?>[]>();
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
WildcardType(ParameterizedType-typeArguments, ArrayType-elementType, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
696,private List<List<Neuron<?>[]>> neuronLists;,"private List<List<Neuron<?>[]>> neuronLists;
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
697,"private final Object[] visibleColumns = new Object[] {ExpressionContainer.PROPERTY_NAME, ExpressionContainer.PROPERTY_ID, ExpressionContainer.PROPERTY_ID_SHORT, ExpressionContainer.PROPERTY_DATATYPE, ExpressionContainer.PROPERTY_DATATYPE_SHORT};","private final Object[] visibleColumns=new Object[]{ExpressionContainer.PROPERTY_NAME,ExpressionContainer.PROPERTY_ID,ExpressionContainer.PROPERTY_ID_SHORT,ExpressionContainer.PROPERTY_DATATYPE,ExpressionContainer.PROPERTY_DATATYPE_SHORT};
",0,0,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
698,private final Set<Zone> zones = Sets.newHashSet(Zone.builder(),"private final Set<Zone> zones=Sets.newHashSet(Zone.builder().id(""zone-1"").name(""zone-one"").securityGroupsEnabled(false).build());
",0,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
699,"List<Pair<String, Class<? extends Filter>>> filterRegistry = Lists.newArrayList();","/** 
 * List of filters
 */
List<Pair<String,Class<? extends Filter>>> filterRegistry=Lists.newArrayList();
",0,0,8,,"SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
"
700,"private final String documentUniqueString = ""ed"" + counter++ + ""_"";","/** 
 * Document's unique id 
 */
private final String documentUniqueString=""ed"" + counter++ + ""_"";
",0,0,7,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
StringLiteral(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
SimpleName(PostfixExpression-operand, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, ),
"
701,"private Supplier<String> counterSupplier = () -> ""X"" + String.valueOf(++counter);","private Supplier<String> counterSupplier=() -> ""X"" + String.valueOf(++counter);
",0,1,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-rightOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(PrefixExpression-operand, MethodInvocation-arguments, InfixExpression-rightOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
702,"HashedVersion VERSION = HashedVersion.of(42L, new byte[] {1, 2, 3, 4});","HashedVersion VERSION=HashedVersion.of(42L,new byte[]{1,2,3,4});
",0,0,11,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
703,private final IntMap<Queue<Scheduler.Schedulable>> priorities = CollectionUtils.createIntMap();,"private final IntMap<Queue<Scheduler.Schedulable>> priorities=CollectionUtils.createIntMap();
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
704,"public FileOption avroFileOption = new FileOption(""avroFile"", 'f', ""Avro File(s) to load."", null, null, false);","public FileOption avroFileOption=new FileOption(""avroFile"",'f',""Avro File(s) to load."",null,null,false);
",0,1,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
705,@Expose private TajoWorkerProtocol.ShuffleType shuffleType = NONE_SHUFFLE;,"@Expose private TajoWorkerProtocol.ShuffleType shuffleType=NONE_SHUFFLE;
",0,0,5,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
706,"protected MetadataProvider metaDataProvider = serviceContext.create(MetadataProvider.class, DefaultMetaDataProvider::new);","protected MetadataProvider metaDataProvider=serviceContext.create(MetadataProvider.class,DefaultMetaDataProvider::new);
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, CreationReference-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
707,private final SimplePropertySource testfilePropertySource = new SimplePropertySource(Thread.currentThread(),"private final SimplePropertySource testfilePropertySource=new SimplePropertySource(Thread.currentThread().getContextClassLoader().getResource(""testfile.properties""));
",0,4,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
708,"private final Logger logger = Logger.getInstance(LogCategory.OPENEJB_CDI, ManagedSecurityService.class.getName());","private final Logger logger=Logger.getInstance(LogCategory.OPENEJB_CDI,ManagedSecurityService.class.getName());
",0,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
709,private ConfigurationContext dummyContext = new DefaultConfigurationBuilder().addPropertySources(this).build().getContext();,"private ConfigurationContext dummyContext=new DefaultConfigurationBuilder().addPropertySources(this).build().getContext();
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
710,"protected List<Class> ignoreClasses = Arrays.<Class>asList(Class.class, Object.class, PropertyAnnotated.class);","@SuppressWarnings(""unchecked"") protected List<Class> ignoreClasses=Arrays.<Class>asList(Class.class,Object.class,PropertyAnnotated.class);
",0,0,10,,"Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
711,private long total = ((defaultBlockSize >> 20) / 10) << 20;,"private long total=((defaultBlockSize >> 20) / 10) << 20;
",0,1,7,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
712,private final String timePartitionValue = new SimpleDateFormat(timePartitionFormat).format(new Date(fieldValue1));,"private final String timePartitionValue=new SimpleDateFormat(timePartitionFormat).format(new Date(fieldValue1));
",0,2,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
713,private long defaultDoubleDeduceReadSize = this.defaultDeduceReadSize * 2;,"private long defaultDoubleDeduceReadSize=this.defaultDeduceReadSize * 2;
",0,2,6,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
ThisExpression(FieldAccess-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(FieldAccess-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
714,private long recycleAt = System.nanoTime() + TimeUnit.MINUTES.toNanos(requestRecycleMins);,"private long recycleAt=System.nanoTime() + TimeUnit.MINUTES.toNanos(requestRecycleMins);
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
715,AbstractDomainEvent<?> ev = new AbstractDomainEvent<Object>() {  };,"AbstractDomainEvent<?> ev=new AbstractDomainEvent<Object>(){
}
;
",0,0,6,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
AnonymousClassDeclaration(ClassInstanceCreation-anonymousClassDeclaration, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
716,"private Function<Throwable, String> rootCauseMessageFormatter = ex -> ""pre: "" + ex.getMessage();","private Function<Throwable,String> rootCauseMessageFormatter=ex -> ""pre: "" + ex.getMessage();
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-rightOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
717,"private final Map<Class<?>, _ProxyFactory<?>> proxyFactoryByClass = Collections.synchronizedMap(new WeakHashMap<>());","@NonNull private final Map<Class<?>,_ProxyFactory<?>> proxyFactoryByClass=Collections.synchronizedMap(new WeakHashMap<>());
",0,0,11,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
718,"private ThreadLocal<Map<String, ScopedObject>> scopedObjects = ThreadLocal.withInitial(_Maps::newHashMap);","/** 
 * An alternative design would be to store the ScopedObjects in the top-level {@link org.apache.isis.applib.services.iactn.Interaction}'s {@link org.apache.isis.applib.services.iactn.Interaction#getAttribute(Class) attributes}. <p> Why the top-level? Because this class is only interested in that top-level interaction (see {@link InteractionScopeLifecycleHandler#onTopLevelInteractionPreDestroy()}), not any of the stacked. </p>
 */
private ThreadLocal<Map<String,ScopedObject>> scopedObjects=ThreadLocal.withInitial(_Maps::newHashMap);
",0,0,10,,"Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
SimpleName(ExpressionMethodReference-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(ExpressionMethodReference-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
719,"private final _Reduction<Class<?>> reduction = _Reduction.of((common, next) -> {","private final _Reduction<Class<?>> reduction=_Reduction.of((common,next) -> {
  Class<?> refine=common;
  while (!refine.isAssignableFrom(next)) {
    refine=refine.getSuperclass();
  }
  return refine;
}
);
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
720,private ThreadLocal<Boolean> inWormhole = ThreadLocal.<Boolean>withInitial(()->Boolean.FALSE);,"private ThreadLocal<Boolean> inWormhole=ThreadLocal.<Boolean>withInitial(() -> Boolean.FALSE);
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(LambdaExpression-body, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
721,private final _Lazy<Can<Method>> methodsUnmodifiable = _Lazy.threadSafe(()->Can.ofCollection(methods));,"private final _Lazy<Can<Method>> methodsUnmodifiable=_Lazy.threadSafe(() -> Can.ofCollection(methods));
",0,1,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, LambdaExpression-body, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, LambdaExpression-body, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, LambdaExpression-body, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
722,private Predicate<ProgrammingModel.Marker[]> filterOnMarker = excludingNone();,"private Predicate<ProgrammingModel.Marker[]> filterOnMarker=excludingNone();
",0,0,6,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
723,private String[][] mReplyHeaders = { {} };,"/** 
 * The reply headers. 
 */
private String[][] mReplyHeaders={{}};
",0,0,6,,"Modifier(),
SimpleName(SimpleType-name, ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
ArrayInitializer(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
"
724,"LocalDateInterval interval120201toOpen = LocalDateInterval.excluding(new LocalDate(2012, 2, 1), null);","LocalDateInterval interval120201toOpen=LocalDateInterval.excluding(new LocalDate(2012,2,1),null);
",0,0,9,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
725,@Autowired(required = false) private List<ValuePropertyPlugin> valuePropertyPlugins;,"@Autowired(required=false) private List<ValuePropertyPlugin> valuePropertyPlugins;
",0,2,7,,"SimpleName(NormalAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(MemberValuePair-name, NormalAnnotation-values, FieldDeclaration-modifiers, ),
BooleanLiteral(MemberValuePair-value, NormalAnnotation-values, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
726,@Setter private boolean showHeader = true;,"/** 
 * Gives a chance to hide the header part of this action panel, e.g. when shown in an action prompt
 */
@Setter private boolean showHeader=true;
",0,0,5,,"SimpleName(MarkerAnnotation-typeName, ),
Modifier(),
PrimitiveType(),
SimpleName(VariableDeclarationFragment-name, ),
BooleanLiteral(VariableDeclarationFragment-initializer, ),
"
727,"private RequestManager<ParameterContextEntity, ParameterContextEntity> updateRequestManager = new AsyncRequestManager<>(100, TimeUnit.MINUTES.toMillis(1L), ""Parameter Context Update Thread"");","private RequestManager<ParameterContextEntity,ParameterContextEntity> updateRequestManager=new AsyncRequestManager<>(100,TimeUnit.MINUTES.toMillis(1L),""Parameter Context Update Thread"");
",0,18,11,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
728,"private final Map<ItemId, Integer>[] slots = new Map[0x10];","/** 
 * 16 slots
 */
@SuppressWarnings(""unchecked"") private final Map<ItemId,Integer>[] slots=new Map[0x10];
",0,0,10,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ArrayType-elementType, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, ),
"
729,private LinkedEntries.LinkNode next = ((LinkedEntries.LinkNode) header).getNextLinkNode();,"private LinkedEntries.LinkNode next=((LinkedEntries.LinkNode)header).getNextLinkNode();
",0,0,6,,"Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
730,private ItemFilterSet coverageFilter = (ItemFilterSet) new ItemFilterSet().addInclude(ItemFilter.ALL);,"/** 
 * The item filter set that defines the coverage of this artifact set
 */
private ItemFilterSet coverageFilter=(ItemFilterSet)new ItemFilterSet().addInclude(ItemFilter.ALL);
",0,0,7,,"Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, CastExpression-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, CastExpression-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, CastExpression-expression, VariableDeclarationFragment-initializer, ),
QualifiedName(MethodInvocation-arguments, CastExpression-expression, VariableDeclarationFragment-initializer, ),
"
731,"protected final long seed = Long.getLong(""seed"", System.currentTimeMillis());","protected final long seed=Long.getLong(""seed"",System.currentTimeMillis());
",0,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
732,"private TimeDurationFormatter dfu = new TimeDurationFormatter(Locale.GERMAN, 1, true);","private TimeDurationFormatter dfu=new TimeDurationFormatter(Locale.GERMAN,1,true);
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
733,"Cache<Integer, Data> cache = Cache.newInstance(this, 5);","Cache<Integer,Data> cache=Cache.newInstance(this,5);
",0,0,8,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
734,"private String test = '{' + expiresIn + "","" + tokenType + "","" + accessToken + '}';","private String test='{' + expiresIn + "",""+ tokenType+ "",""+ accessToken+ '}';
",0,1,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
CharacterLiteral(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
735,"private MountInfoProvider mountInfoProvider = Mounts.newBuilder().mount(""testMount"", TEST_PATH).build();","private MountInfoProvider mountInfoProvider=Mounts.newBuilder().mount(""testMount"",TEST_PATH).build();
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
736,"private final PermissionEntry permissionEntry = new PermissionEntry(""/path"", true, 0, PrivilegeBits.BUILT_IN.get(PrivilegeBits.JCR_READ), RestrictionPattern.EMPTY);","private final PermissionEntry permissionEntry=new PermissionEntry(""/path"",true,0,PrivilegeBits.BUILT_IN.get(PrivilegeBits.JCR_READ),RestrictionPattern.EMPTY);
",0,2,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
737,"private Representation json = new JsonRepresentation(MediaType.parse(""application/json""), new JsonFactory());","private Representation json=new JsonRepresentation(MediaType.parse(""application/json""),new JsonFactory());
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
738,private MethodNameFormatter formatter = MethodNameFormatterFactory.getDefault(new DefaultMethodNameFormatter(DefaultMethodNameFormatter.VERBOSITY_FULLMETHOD)).getFormatter();,"private MethodNameFormatter formatter=MethodNameFormatterFactory.getDefault(new DefaultMethodNameFormatter(DefaultMethodNameFormatter.VERBOSITY_FULLMETHOD)).getFormatter();
",0,1,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
739,private final long refreshDelta = TimeUnit.SECONDS.toMillis(1) + 1;,"private final long refreshDelta=TimeUnit.SECONDS.toMillis(1) + 1;
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
740,"private final LoginModuleMonitor monitor = mock(TestLoginModuleMonitor.class, withSettings().defaultAnswer(Answers.CALLS_REAL_METHODS));","private final LoginModuleMonitor monitor=mock(TestLoginModuleMonitor.class,withSettings().defaultAnswer(Answers.CALLS_REAL_METHODS));
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
741,"private final String PATH_COLOR = getColorString(lessInteresting(UIManager.getColor(""List.foreground""), UIManager.getColor(""List.background"")));","private final String PATH_COLOR=getColorString(lessInteresting(UIManager.getColor(""List.foreground""),UIManager.getColor(""List.background"")));
",0,1,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
742,"private final ValueFactory vf = new ValueFactoryImpl(mock(Root.class), NamePathMapper.DEFAULT);","private final ValueFactory vf=new ValueFactoryImpl(mock(Root.class),NamePathMapper.DEFAULT);
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
743,"private final PrincipalProvider cpp = CompositePrincipalProvider.of(ImmutableList.<PrincipalProvider>of(pp1, pp2));","private final PrincipalProvider cpp=CompositePrincipalProvider.of(ImmutableList.<PrincipalProvider>of(pp1,pp2));
",0,0,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
744,"private final ImmutablePrivilegeDefinition def = new ImmutablePrivilegeDefinition(""name"", true, ImmutableList.of(""aggrName""));","private final ImmutablePrivilegeDefinition def=new ImmutablePrivilegeDefinition(""name"",true,ImmutableList.of(""aggrName""));
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
745,protected Consumer<Supplier<Boolean>> waitWhile = (r -> {,"protected Consumer<Supplier<Boolean>> waitWhile=(r -> {
  for (count=0; r.get() && count < TIMEOUT_COUNT; ++count) {
    try {
      Thread.sleep(100);
    }
 catch (    InterruptedException e) {
    }
  }
}
);
",0,0,6,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, ParenthesizedExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
746,"private final Stats stats = new Stats(NAME, 0, () -> 0L);","private final Stats stats=new Stats(NAME,0,() -> 0L);
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(LambdaExpression-body, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
747,"private boolean fairBackgroundOperationLock = SystemPropertySupplier.create(""oak.fairBackgroundOperationLock"", Boolean.TRUE)","/** 
 * Use fair mode for background operation lock.
 */
private boolean fairBackgroundOperationLock=SystemPropertySupplier.create(""oak.fairBackgroundOperationLock"",Boolean.TRUE).loggingTo(LOG).get();
",0,0,7,,"Modifier(),
PrimitiveType(),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
"
748,"private boolean disableJournalDiff = SystemPropertySupplier.create(SYS_PROP_DISABLE_JOURNAL, Boolean.FALSE).loggingTo(LOG)","/** 
 * Feature flag to disable the journal diff mechanism. See OAK-4528.
 */
private boolean disableJournalDiff=SystemPropertySupplier.create(SYS_PROP_DISABLE_JOURNAL,Boolean.FALSE).loggingTo(LOG).get();
",0,0,9,,"Modifier(),
PrimitiveType(),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
"
749,"private int collisionGarbageBatchSize = SystemPropertySupplier.create(""oak.documentMK.collisionGarbageBatchSize"", 1000)","/** 
 * How many collision entries to collect in a single call.
 */
private int collisionGarbageBatchSize=SystemPropertySupplier.create(""oak.documentMK.collisionGarbageBatchSize"",1000).loggingTo(LOG).get();
",0,0,7,,"Modifier(),
PrimitiveType(),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
"
750,"private PathFilter pathFilter = new PathFilter(singletonList(""/""), Collections.<String>emptyList());","private PathFilter pathFilter=new PathFilter(singletonList(""/""),Collections.<String>emptyList());
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
751,RDBOptions options = new RDBOptions().tablePrefix(TABLEPREFIX).dropTablesOnClose(true);,"RDBOptions options=new RDBOptions().tablePrefix(TABLEPREFIX).dropTablesOnClose(true);
",0,0,7,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
752,private LogCustomizer log = LogCustomizer.forLogger(LastRevRecoveryAgent.class),"private LogCustomizer log=LogCustomizer.forLogger(LastRevRecoveryAgent.class).contains(""find document"").enable(Level.WARN).create();
",0,0,6,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
753,private HashSet<Integer>[] unseenChanges = (HashSet<Integer>[]) new HashSet[MK_COUNT];,"@SuppressWarnings({""unchecked"",""cast""}) private HashSet<Integer>[] unseenChanges=(HashSet<Integer>[])new HashSet[MK_COUNT];
",0,1,11,,"Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, CastExpression-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ArrayType-elementType, CastExpression-type, VariableDeclarationFragment-initializer, ),
Dimension(ArrayType-dimensions, CastExpression-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, CastExpression-expression, VariableDeclarationFragment-initializer, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, CastExpression-expression, VariableDeclarationFragment-initializer, ),
SimpleName(ArrayCreation-dimensions, CastExpression-expression, VariableDeclarationFragment-initializer, ),
"
754,private final MultiSelectionModel<? super Message> selectionModel = new MultiSelectionModel<Message>(KEY_PROVIDER);,"private final MultiSelectionModel<? super Message> selectionModel=new MultiSelectionModel<Message>(KEY_PROVIDER);
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
755,protected Class<? extends Provider<Log>> logProviderClass = MockLogProvider.class;,"protected Class<? extends Provider<Log>> logProviderClass=MockLogProvider.class;
",0,0,6,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
756,"Map<String, Class<?>> typeMap = ImmutableMap.<String, Class<?>>builder()","@Inject(optional=true) @VisibleForTesting @Named(""jclouds.cloudstack.jobresult-type-map"") Map<String,Class<?>> typeMap=ImmutableMap.<String,Class<?>>builder().put(""user"",User.class).put(""account"",Account.class).put(""securitygroup"",SecurityGroup.class).put(""portforwardingrule"",PortForwardingRule.class).put(""ipforwardingrule"",IPForwardingRule.class).put(""firewallrule"",FirewallRule.class).put(""network"",Network.class).put(""ipaddress"",PublicIPAddress.class).put(""virtualmachine"",VirtualMachine.class).put(""loadbalancer"",LoadBalancerRule.class).put(""snapshot"",Snapshot.class).put(""template"",Template.class).put(""volume"",Volume.class).build();
",0,0,10,,"SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-type, MethodInvocation-typeArguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
WildcardType(ParameterizedType-typeArguments, MethodInvocation-typeArguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
"
757,"protected Map<String, ? extends DriveMetrics> driveMetrics = ImmutableMap.<String, DriveMetrics> of();","protected Map<String,? extends DriveMetrics> driveMetrics=ImmutableMap.<String,DriveMetrics>of();
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
758,@Inject(optional = true) @Named(CERTIFICATE) String certInPemFormat;,"@Inject(optional=true) @Named(CERTIFICATE) String certInPemFormat;
",0,0,7,,"SimpleName(NormalAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(MemberValuePair-name, NormalAnnotation-values, FieldDeclaration-modifiers, ),
BooleanLiteral(MemberValuePair-value, NormalAnnotation-values, FieldDeclaration-modifiers, ),
SimpleName(SingleMemberAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(SingleMemberAnnotation-value, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
759,"Set<Tenant> expectedTenants = ImmutableSet.of(Tenant.builder().name(""demo"").id(""05d1dc7af71646deba64cfc17b81bec0"")","Set<Tenant> expectedTenants=ImmutableSet.of(Tenant.builder().name(""demo"").id(""05d1dc7af71646deba64cfc17b81bec0"").enabled(true).build(),Tenant.builder().name(""admin"").id(""7aa2e17ec29f44d193c48feaba0852cc"").enabled(true).build());
",0,0,11,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
760,"private Type usersMapType = new TypeToken<Map<String, Set<? extends User>>>() {","private Type usersMapType=new TypeToken<Map<String,Set<? extends User>>>(){
  private static final long serialVersionUID=1L;
}
.getType();
",0,1,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
761,"private Image image = new ImageBuilder().id(""imageId"").providerId(""imageId"").name(""imageName"")","private Image image=new ImageBuilder().id(""imageId"").providerId(""imageId"").name(""imageName"").description(""imageDescription"").version(""imageVersion"").operatingSystem(os).status(Image.Status.AVAILABLE).location(location).build();
",0,5,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
762,private final Supplier<Set<Location>> locations = Suppliers.<Set<Location>>ofInstance(ImmutableSet.of(zone));,"private final Supplier<Set<Location>> locations=Suppliers.<Set<Location>>ofInstance(ImmutableSet.of(zone));
",0,1,13,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, MethodInvocation-typeArguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, MethodInvocation-typeArguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
763,"ImageToOperatingSystem converterForUbuntu = new ImageToOperatingSystem(ImmutableMap.<OsFamily, Map<String, String>> of(","ImageToOperatingSystem converterForUbuntu=new ImageToOperatingSystem(ImmutableMap.<OsFamily,Map<String,String>>of(OsFamily.UBUNTU,ImmutableMap.of(""lucid"",""10.04"",""maverick"",""10.10"",""natty"",""11.04"",""oneiric"",""11.10"")));
",0,0,9,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, MethodInvocation-typeArguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, MethodInvocation-typeArguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, MethodInvocation-typeArguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
764,"Injector injector = createInjector(Functions.forMap(ImmutableMap.<HttpRequest, HttpResponse>of()), createModule(), setupProperties());","Injector injector=createInjector(Functions.forMap(ImmutableMap.<HttpRequest,HttpResponse>of()),createModule(),setupProperties());
",0,0,11,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
765,private final Payload directoryPayload = new ByteSourcePayload(ByteSource.wrap(new byte[] {})) {,"private final Payload directoryPayload=new ByteSourcePayload(ByteSource.wrap(new byte[]{})){
{
    getContentMetadata().setContentType(""application/directory"");
  }
}
;
",0,1,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ArrayInitializer(ArrayCreation-initializer, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
766,"private final ImmutableMap.Builder<String, DeleteResult.Error> errors = ImmutableMap.builder();","/** 
 * Accumulator for the set of errors
 */
private final ImmutableMap.Builder<String,DeleteResult.Error> errors=ImmutableMap.builder();
",0,0,8,,"Modifier(),
Modifier(),
QualifiedName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
"
767,"Injector injector = ContextBuilder.newBuilder(forApiOnEndpoint(IntegrationTestClient.class, ""http:","Injector injector=ContextBuilder.newBuilder(forApiOnEndpoint(IntegrationTestClient.class,""http://localhost"")).modules(ImmutableSet.<Module>of(new MockModule())).buildInjector();
",0,0,7,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
768,"private Optional<HostAndPort> hostAndPort = Optional.of(HostAndPort.fromParts(""proxy.example.com"", 8080));","private Optional<HostAndPort> hostAndPort=Optional.of(HostAndPort.fromParts(""proxy.example.com"",8080));
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
769,"private Function<HttpRequest, Function<HttpResponse, ?>> transformerForRequest = Function.class.cast(Functions","@SuppressWarnings(""unchecked"") private Function<HttpRequest,Function<HttpResponse,?>> transformerForRequest=Function.class.cast(Functions.constant(Functions.identity()));
",0,0,10,,"Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
770,"private final OrderedExecutor orderedExecutor = OrderedExecutor.newBuilder().numThreads(8).name(""zk-cache-ordered"").build();","private final OrderedExecutor orderedExecutor=OrderedExecutor.newBuilder().numThreads(8).name(""zk-cache-ordered"").build();
",0,2,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
771,"HttpResponse oneTwoThree = HttpResponse.builder().statusCode(200).message(""ok"").payload(""[1,2,3]"").build();","HttpResponse oneTwoThree=HttpResponse.builder().statusCode(200).message(""ok"").payload(""[1,2,3]"").build();
",0,0,11,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
772,"Predicate<Throwable> retryPredicate = or(instanceOf(ConnectException.class), instanceOf(IOException.class));","@Inject(optional=true) @Named(""jclouds.ssh.retry-predicate"") Predicate<Throwable> retryPredicate=or(instanceOf(ConnectException.class),instanceOf(IOException.class));
",0,0,8,,"SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
773,private String simpleName = getClass().getSimpleName() + new Random().nextInt(10000);,"private String simpleName=getClass().getSimpleName() + new Random().nextInt(10000);
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
774,"private final Map<Class<? extends ParserResultTask<? extends Parser.Result>>,Long> toExpect;","private final Map<Class<? extends ParserResultTask<? extends Parser.Result>>,Long> toExpect;
",0,1,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
775,"ResourceRecord mx = rrBuilder().name(""mail."" + zoneName)","ResourceRecord mx=rrBuilder().name(""mail."" + zoneName).type(15).ttl(1800).infoValue(10).infoValue(""maileast.jclouds.org."").build();
",0,0,6,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
776,"ScriptBuilder seekAndDestroyBuilder = new ScriptBuilder().addStatement(findPid(""{args}"")).addStatement(kill());","ScriptBuilder seekAndDestroyBuilder=new ScriptBuilder().addStatement(findPid(""{args}"")).addStatement(kill());
",0,0,8,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
777,private final String deployedServerName = ServerApiLiveTest.class.getSimpleName() + System.currentTimeMillis();,"private final String deployedServerName=ServerApiLiveTest.class.getSimpleName() + System.currentTimeMillis();
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
778,"Package packageToConvert = org.jclouds.joyent.cloudapi.v6_5.domain.Package.builder().name(""Small 1GB"").memorySizeMb(1024)","Package packageToConvert=org.jclouds.joyent.cloudapi.v6_5.domain.Package.builder().name(""Small 1GB"").memorySizeMb(1024).diskSizeGb(30720).swapSizeMb(2048).isDefault(true).build();
",0,0,8,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
779,Collection<Box> UNFILTERED = ImmutableList.<Box>builder(),"Collection<Box> UNFILTERED=ImmutableList.<Box>builder().add(new Box(""CiscoCloud/microservices-infrastructure"",""0.5"",""virtualbox"")).add(new Box(""boxcutter/eval-win7x86-enterprise"",""0"",""virtualbox"")).add(new Box(""centos/7"",""1603.01"",""virtualbox"")).add(new Box(""centos/7"",""1607.01"",""virtualbox"")).add(new Box(""chef/centos-6.5"",""1.0.0"",""virtualbox"")).add(new Box(""chef/centos-7.0"",""1.0.0"",""virtualbox"")).add(new Box(""debian/jessie64"",""8.4.0"",""virtualbox"")).add(new Box(""debian/jessie64"",""8.6.1"",""virtualbox"")).add(new Box(""debian/wheezy64"",""7.10.0"",""virtualbox"")).add(new Box(""mitchellh/boot2docker"",""1.2.0"",""virtualbox"")).add(new Box(""nrel/CentOS-6.5-x86_64"",""1.2.0"",""virtualbox"")).add(new Box(""orlandohohmeier/toolchain"",""0.5.1"",""virtualbox"")).add(new Box(""playa_mesos_ubuntu_14.04"",""0"",""virtualbox"")).add(new Box(""snappy"",""0"",""virtualbox"")).add(new Box(""ubuntu/precise32"",""20161208.0.0"",""virtualbox"")).add(new Box(""ubuntu/precise64"",""12.04.4"",""virtualbox"")).add(new Box(""ubuntu/trusty64"",""14.04"",""virtualbox"")).add(new Box(""ubuntu/trusty64"",""20160822.0.2"",""virtualbox"")).add(new Box(""ubuntu/ubuntu-15.04-snappy-core-edge-amd64"",""15.04.20150424"",""virtualbox"")).add(new Box(""ubuntu/vivid64"",""20150427.0.0"",""virtualbox"")).add(new Box(""ubuntu/vivid64"",""20150611.0.1"",""virtualbox"")).add(new Box(""ubuntu/wily64"",""20151106.0.0"",""virtualbox"")).add(new Box(""ubuntu/wily64"",""20160715.0.0"",""virtualbox"")).add(new Box(""ubuntu/xenial64"",""20160922.0.0"",""virtualbox"")).add(new Box(""ubuntu/xenial64"",""20161119.0.0"",""virtualbox"")).add(new Box(""ubuntu/xenial64"",""20161221.0.0"",""virtualbox"")).build();
",0,0,6,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
780,Set<Box> FILTERED = ImmutableSet.<Box>builder(),"Set<Box> FILTERED=ImmutableSet.<Box>builder().add(new Box(""CiscoCloud/microservices-infrastructure"",""0.5"",""virtualbox"")).add(new Box(""boxcutter/eval-win7x86-enterprise"",""0"",""virtualbox"")).add(new Box(""centos/7"",""1607.01"",""virtualbox"")).add(new Box(""chef/centos-6.5"",""1.0.0"",""virtualbox"")).add(new Box(""chef/centos-7.0"",""1.0.0"",""virtualbox"")).add(new Box(""debian/jessie64"",""8.6.1"",""virtualbox"")).add(new Box(""debian/wheezy64"",""7.10.0"",""virtualbox"")).add(new Box(""mitchellh/boot2docker"",""1.2.0"",""virtualbox"")).add(new Box(""nrel/CentOS-6.5-x86_64"",""1.2.0"",""virtualbox"")).add(new Box(""orlandohohmeier/toolchain"",""0.5.1"",""virtualbox"")).add(new Box(""playa_mesos_ubuntu_14.04"",""0"",""virtualbox"")).add(new Box(""snappy"",""0"",""virtualbox"")).add(new Box(""ubuntu/precise32"",""20161208.0.0"",""virtualbox"")).add(new Box(""ubuntu/precise64"",""12.04.4"",""virtualbox"")).add(new Box(""ubuntu/trusty64"",""20160822.0.2"",""virtualbox"")).add(new Box(""ubuntu/ubuntu-15.04-snappy-core-edge-amd64"",""15.04.20150424"",""virtualbox"")).add(new Box(""ubuntu/vivid64"",""20150611.0.1"",""virtualbox"")).add(new Box(""ubuntu/wily64"",""20160715.0.0"",""virtualbox"")).add(new Box(""ubuntu/xenial64"",""20161221.0.0"",""virtualbox"")).build();
",0,0,6,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
781,private Graph dftGraph = new GraphReadOnly(super.getDefaultGraph());,"private Graph dftGraph=new GraphReadOnly(super.getDefaultGraph());
",0,0,5,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SuperMethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
782,private ThreadLocal<Set<Graph>> removedGraphs = ThreadLocal.withInitial(()->null);,"private ThreadLocal<Set<Graph>> removedGraphs=ThreadLocal.withInitial(() -> null);
",0,9,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(LambdaExpression-body, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
783,private final ThreadLocal<Boolean> isInTransaction = withInitial(() -> false);,"private final ThreadLocal<Boolean> isInTransaction=withInitial(() -> false);
",0,1,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(LambdaExpression-body, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
784,private final Consumer<Graph> removeGraph = g -> g.find().forEachRemaining(g::delete);,"private final Consumer<Graph> removeGraph=g -> g.find().forEachRemaining(g::delete);
",0,1,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ExpressionMethodReference-expression, MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ExpressionMethodReference-name, MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
785,private int iteratorNumber = (iteratorCounter++) ;,"private int iteratorNumber=(iteratorCounter++);
",0,0,4,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(PostfixExpression-operand, ParenthesizedExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
786,"private List<String> data3 = Arrays.asList(null, ""x"", null, null, null, ""y"", ""z"", null);","private List<String> data3=Arrays.asList(null,""x"",null,null,null,""y"",""z"",null);
",0,1,14,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
787,protected CommandLine m_cmdLine = new RCCommandLine().add( IN_N3 ),"/** 
 * The command line processor that handles the arguments 
 */
protected CommandLine m_cmdLine=new RCCommandLine().add(IN_N3).add(IN_NTRIPLE).add(IN_RDF_XML).add(OUT_LANG).add(IN_LANG).add(INCLUDE).add(NOINCLUDE).add(NOFILTER).add(HELP).add(USAGE);
",0,0,6,,"Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
"
788,private String[] fAttributeDeclEnumeration[][] = new String[INITIAL_CHUNK_COUNT][][];,"/** 
 * Attribute declaration enumeration values. 
 */
private String[] fAttributeDeclEnumeration[][]=new String[INITIAL_CHUNK_COUNT][][];
",0,8,11,,"Modifier(),
SimpleName(SimpleType-name, ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
Dimension(VariableDeclarationFragment-extraDimensions2, ),
Dimension(VariableDeclarationFragment-extraDimensions2, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
"
789,Statement stmts[] = new Statement[num * num];,"Statement stmts[]=new Statement[num * num];
",0,0,7,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
790,"private final int g[] = new int[] {10, 10, 10, 10};","private final int g[]=new int[]{10,10,10,10};
",0,2,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
791,"Triple[] ans = new Triple[] { new Triple(a, p, b),","Triple[] ans=new Triple[]{new Triple(a,p,b),new Triple(b,p,c),new Triple(a,p,c)};
",0,0,9,,"SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
792,"protected Predicate<String> containsA = o -> contains( o, 'a' );","protected Predicate<String> containsA=o -> contains(o,'a');
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
793,private BlockingQueue<List<Tuple<NodeId>>>[] pipesTripleIndexers;,"private BlockingQueue<List<Tuple<NodeId>>>[] pipesTripleIndexers;
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
794,"private List<Integer> indexSizes = Arrays.asList(-1, -1, -1);","@Parameter(names={""--index_sizes"",""-xs""},description=""List of Index item sizes: [Geometry Literal, Geometry Transform, Query Rewrite]. Unlimited: -1, Off: 0"",listConverter=IntegerListConverter.class,order=14) private List<Integer> indexSizes=Arrays.asList(-1,-1,-1);
",0,0,9,,"Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
NumberLiteral(PrefixExpression-operand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
NumberLiteral(PrefixExpression-operand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
NumberLiteral(PrefixExpression-operand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
795,LexerXHost lexXHost = new LexerXHost((java.io.Reader) null);,"LexerXHost lexXHost=new LexerXHost((java.io.Reader)null);
",0,0,5,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, CastExpression-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(CastExpression-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
796,"private String label, className = Object.class.getCanonicalName(), typeName = Node.class.getCanonicalName();","private String label, className=Object.class.getCanonicalName(), typeName=Node.class.getCanonicalName();
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
797,private final boolean logstate = (syslog.isDebugEnabled() || log.isDebugEnabled()) ;,"private final boolean logstate=(syslog.isDebugEnabled() || log.isDebugEnabled());
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, ParenthesizedExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ParenthesizedExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-rightOperand, ParenthesizedExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, ParenthesizedExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
798,"private final LoadingCache<String, Expression<JsonNode>> JMES_PATH_CACHE = Caffeine.newBuilder()","private final LoadingCache<String,Expression<JsonNode>> JMES_PATH_CACHE=Caffeine.newBuilder().maximumSize(JMeterUtils.getPropDefault(""jmespath.parser.cache.size"",400)).build(new JMESPathCacheLoader());
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
799,private final Supplier<BufferStrategy.BufferProvider<char[]>> bufferProvider = new Cached<>(() ->,"private final Supplier<BufferStrategy.BufferProvider<char[]>> bufferProvider=new Cached<>(() -> BufferStrategyFactory.valueOf(System.getProperty(AbstractJsonFactory.BUFFER_STRATEGY,""QUEUE"")).newCharProvider(Integer.getInteger(""org.apache.johnzon.default-char-provider.length"",1024)));
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
800,"private Function<Class<?>, String> discriminatorMapper = type -> {","private Function<Class<?>,String> discriminatorMapper=type -> {
  throw new IllegalArgumentException(""Unknown class '"" + type.getName() + ""'"");
}
;
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
801,private final Mapper mapper = new MapperBuilder().setAttributeOrder(String::compareTo).build();,"private final Mapper mapper=new MapperBuilder().setAttributeOrder(String::compareTo).build();
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ExpressionMethodReference-expression, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ExpressionMethodReference-name, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
802,private final String goalSymbol = cleanNonTerminal(new JoshuaConfiguration().goal_symbol);,"@Option(name=""--goal"",aliases={""-goal""},required=false,usage=""specify custom GOAL symbol. Default: 'GOAL'"") private final String goalSymbol=cleanNonTerminal(new JoshuaConfiguration().goal_symbol);
",0,0,7,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, FieldAccess-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(FieldAccess-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
803,"Engine m_engine = TestEngine.build( with( PageManager.PROP_PAGEPROVIDER, ""FileSystemProvider"" ),","Engine m_engine=TestEngine.build(with(PageManager.PROP_PAGEPROVIDER,""FileSystemProvider""),with(FileSystemProvider.PROP_PAGEDIR,""./target/jspwiki.test.pages""));
",0,0,7,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
804,"final byte[] bytes = new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 63, 127 };","final byte[] bytes=new byte[]{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,63,127};
",0,0,24,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
805,"private final long badListResetInterval = AppConfig.getConfiguration().getLong(Property.JUDDI_NOTIFICATION_LIST_RESET_INTERVAL, 1000l * 3600);","private final long badListResetInterval=AppConfig.getConfiguration().getLong(Property.JUDDI_NOTIFICATION_LIST_RESET_INTERVAL,1000l * 3600);
",0,1,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
806,"private final boolean sendToken = AppConfig.getConfiguration().getBoolean(Property.JUDDI_NOTIFICATION_SENDAUTHTOKEN, false);","/** 
 * @since 3.2
 */
private final boolean sendToken=AppConfig.getConfiguration().getBoolean(Property.JUDDI_NOTIFICATION_SENDAUTHTOKEN,false);
",0,0,9,,"Modifier(),
Modifier(),
PrimitiveType(),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
QualifiedName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
BooleanLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
807,"private final Map<Class<?>,Mutater<?,T>> fromMutaters = new ConcurrentHashMap<>();","private final Map<Class<?>,Mutater<?,T>> fromMutaters=new ConcurrentHashMap<>();
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
808,Class<? extends BeanInterceptor<?>> interceptor=BeanInterceptor.Default.class;,"Class<? extends BeanInterceptor<?>> interceptor=BeanInterceptor.Default.class;
",0,0,5,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, TypeLiteral-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
809,"File workingDir = System.getProperty(""juneau.workingDir"") == null ? null : new File(System.getProperty(""juneau.workingDir""));","File workingDir=System.getProperty(""juneau.workingDir"") == null ? null : new File(System.getProperty(""juneau.workingDir""));
",0,0,11,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, InfixExpression-leftOperand, ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(InfixExpression-rightOperand, ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ConditionalExpression-elseExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, ConditionalExpression-elseExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, ConditionalExpression-elseExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, ConditionalExpression-elseExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
810,"private Map<String,String[]> headerMap = new TreeMap<>(String.CASE_INSENSITIVE_ORDER);","private Map<String,String[]> headerMap=new TreeMap<>(String.CASE_INSENSITIVE_ORDER);
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
811,"Predicate<HttpServletRequest> conditionalPredicate = x -> ""true"".equalsIgnoreCase(x.getHeader(""Debug""));","Predicate<HttpServletRequest> conditionalPredicate=x -> ""true"".equalsIgnoreCase(x.getHeader(""Debug""));
",0,0,9,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-expression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
812,"C[] INT_BEAN_ARRAY = new C[]{C.create(-2), C.create(-1), C.create(0), C.create(1), C.create(2), C.create(3)};","C[] INT_BEAN_ARRAY=new C[]{C.create(-2),C.create(-1),C.create(0),C.create(1),C.create(2),C.create(3)};
",0,0,23,,"SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, MethodInvocation-arguments, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, MethodInvocation-arguments, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
813,@Xml(format=ATTR) public int id;,"@Xml(format=ATTR) public int id;
",0,0,6,,"SimpleName(NormalAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(MemberValuePair-name, NormalAnnotation-values, FieldDeclaration-modifiers, ),
SimpleName(MemberValuePair-value, NormalAnnotation-values, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
814,"@Xml(prefix=""bar"",namespace=""http:","@Xml(prefix=""bar"",namespace=""http://bar"") @Beanp(name=""g2"") public int f2=2;
",0,4,12,,"SimpleName(NormalAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(MemberValuePair-name, NormalAnnotation-values, FieldDeclaration-modifiers, ),
StringLiteral(MemberValuePair-value, NormalAnnotation-values, FieldDeclaration-modifiers, ),
SimpleName(MemberValuePair-name, NormalAnnotation-values, FieldDeclaration-modifiers, ),
StringLiteral(MemberValuePair-value, NormalAnnotation-values, FieldDeclaration-modifiers, ),
SimpleName(NormalAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(MemberValuePair-name, NormalAnnotation-values, FieldDeclaration-modifiers, ),
StringLiteral(MemberValuePair-value, NormalAnnotation-values, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
815,"private volatile LinkedHashMap<TopicPartition, FetchResponseData.PartitionData> responseData = null;","private volatile LinkedHashMap<TopicPartition,FetchResponseData.PartitionData> responseData=null;
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
816,"private final Collection<TopicPartition> singleTopicPartition = Collections.singleton(new TopicPartition(topic, 0));","private final Collection<TopicPartition> singleTopicPartition=Collections.singleton(new TopicPartition(topic,0));
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
817,"private MetadataResponse metadataResponse = RequestTestUtils.metadataUpdateWith(1, new HashMap<String, Integer>() {","private MetadataResponse metadataResponse=RequestTestUtils.metadataUpdateWith(1,new HashMap<String,Integer>(){
{
    put(topic1,1);
    put(topic2,1);
  }
}
);
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
818,"private int msgSize = DefaultRecord.sizeInBytes(0, 0, key.length, value.length, Record.EMPTY_HEADERS);","private int msgSize=DefaultRecord.sizeInBytes(0,0,key.length,value.length,Record.EMPTY_HEADERS);
",0,1,10,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
819,"private Cluster cluster = new Cluster(null, Arrays.asList(node1, node2), Arrays.asList(part1, part2, part3),","private Cluster cluster=new Cluster(null,Arrays.asList(node1,node2),Arrays.asList(part1,part2,part3),Collections.emptySet(),Collections.emptySet());
",0,0,14,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
820,"private Cache<Schema, Schema> moveSchemaCache = new SynchronizedCache<>(new LRUCache<>(16));","private Cache<Schema,Schema> moveSchemaCache=new SynchronizedCache<>(new LRUCache<>(16));
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
821,"private RequestChannel requestChannel = Mockito.mock(RequestChannel.class, Mockito.withSettings().stubOnly());","private RequestChannel requestChannel=Mockito.mock(RequestChannel.class,Mockito.withSettings().stubOnly());
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
822,"private final TopicIdPartition topicIdPartition = new TopicIdPartition(Uuid.randomUuid(), new TopicPartition(""foo"", 0));","private final TopicIdPartition topicIdPartition=new TopicIdPartition(Uuid.randomUuid(),new TopicPartition(""foo"",0));
",0,4,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
823,"protected final Function<? super KStream<K, V>, ? extends KStream<K, V>> chainFunction;","protected final Function<? super KStream<K,V>,? extends KStream<K,V>> chainFunction;
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
824,"private final Aggregator<String, String, Integer> aggregator = (k, v, agg) -> agg + v.length();","private final Aggregator<String,String,Integer> aggregator=(k,v,agg) -> agg + v.length();
",0,1,13,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-rightOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
825,"private WatcherInfoBase watcherList = new WatcherInfoBase(null, null, new ArrayList<String>());","private WatcherInfoBase watcherList=new WatcherInfoBase(null,null,new ArrayList<String>());
",0,1,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
826,"private Iterator<Map.Entry<Bytes, byte[]>> recordIterator;","private Iterator<Map.Entry<Bytes,byte[]>> recordIterator;
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
827,"final Set<KeyValueIterator<Bytes, byte[]>> openIterators = Collections.synchronizedSet(new HashSet<>());","final Set<KeyValueIterator<Bytes,byte[]>> openIterators=Collections.synchronizedSet(new HashSet<>());
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
828,"private final TimeWindowedDeserializer<?> timeWindowedDeserializer = new TimeWindowedDeserializer<>(new StringDeserializer(), windowSize);","private final TimeWindowedDeserializer<?> timeWindowedDeserializer=new TimeWindowedDeserializer<>(new StringDeserializer(),windowSize);
",0,1,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
829,private final JoinWindows joinWindows = JoinWindows.of(ofMillis(50)).grace(Duration.ofMillis(50));,"private final JoinWindows joinWindows=JoinWindows.of(ofMillis(50)).grace(Duration.ofMillis(50));
",0,1,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
830,"private final StreamJoined<String, Integer, Integer> streamJoined = StreamJoined.with(Serdes.String(), Serdes.Integer(), Serdes.Integer());","private final StreamJoined<String,Integer,Integer> streamJoined=StreamJoined.with(Serdes.String(),Serdes.Integer(),Serdes.Integer());
",0,0,15,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
831,"private final ProcessorRecordContext recordContext = new ProcessorRecordContext(10, System.currentTimeMillis(), 1, ""foo"", headers);","private final ProcessorRecordContext recordContext=new ProcessorRecordContext(10,System.currentTimeMillis(),1,""foo"",headers);
",0,0,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
832,"private final StoreBuilder<?> storeBuilder = new MockKeyValueStoreBuilder(""testStore"", false);","private final StoreBuilder<?> storeBuilder=new MockKeyValueStoreBuilder(""testStore"",false);
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
833,"private Logger logger = new LogContext(""test"").logger(AbstractTask.class);","private Logger logger=new LogContext(""test"").logger(AbstractTask.class);
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
834,"private final MockProcessorNode<Integer, Integer, ?, ?> processorSystemTime = new MockProcessorNode<>(10L, PunctuationType.WALL_CLOCK_TIME);","private final MockProcessorNode<Integer,Integer,?,?> processorSystemTime=new MockProcessorNode<>(10L,PunctuationType.WALL_CLOCK_TIME);
",0,0,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
835,"private Metrics metrics = new Metrics(new MetricConfig().recordLevel(Sensor.RecordingLevel.DEBUG), time);","private Metrics metrics=new Metrics(new MetricConfig().recordLevel(Sensor.RecordingLevel.DEBUG),time);
",0,1,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
836,"final Producer<byte[], byte[]> mockedProducer = mock(Producer.class);","final Producer<byte[],byte[]> mockedProducer=mock(Producer.class);
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
837,"private final KeyValue<Bytes, LRUCacheEntry> firstEntry = KeyValue.pair(Bytes.wrap(""a"".getBytes()),","private final KeyValue<Bytes,LRUCacheEntry> firstEntry=KeyValue.pair(Bytes.wrap(""a"".getBytes()),new LRUCacheEntry(""1"".getBytes()));
",0,0,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
838,"private final KeyValueStoreTestDriver<Bytes, byte[]> byteStoreDriver = KeyValueStoreTestDriver.create(Bytes.class, byte[].class);","private final KeyValueStoreTestDriver<Bytes,byte[]> byteStoreDriver=KeyValueStoreTestDriver.create(Bytes.class,byte[].class);
",0,3,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
839,"private final ThreadCache cache = new ThreadCache(new LogContext(""testCache ""), 1000000L,  new MockStreamsMetrics(new Metrics()));","private final ThreadCache cache=new ThreadCache(new LogContext(""testCache ""),1000000L,new MockStreamsMetrics(new Metrics()));
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
840,final javax.validation.Validator validator = Validation.byProvider(ApacheValidationProvider.class).configure().buildValidatorFactory().getValidator();,"final javax.validation.Validator validator=Validation.byProvider(ApacheValidationProvider.class).configure().buildValidatorFactory().getValidator();
",0,1,9,,"Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
841,"private final MixedOperation<Pod, PodList, DoneablePod, PodResource<Pod, DoneablePod>> pods = mock(MixedOperation.class);","private final MixedOperation<Pod,PodList,DoneablePod,PodResource<Pod,DoneablePod>> pods=mock(MixedOperation.class);
",0,0,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
842,"private IValidatorRule<CubeDesc>[] defaultRules = new IValidatorRule[] { new FunctionRule(),","@SuppressWarnings(""unchecked"") private IValidatorRule<CubeDesc>[] defaultRules=new IValidatorRule[]{new FunctionRule(),new AggregationGroupRule(),new RowKeyAttrRule(),new DictionaryRule(),new StreamingCubeRule()};
",0,0,8,,"Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, ),
"
843,private ZookeeperDistributedLock lock = (ZookeeperDistributedLock) new ZookeeperDistributedLock.Factory().lockForCurrentProcess();,"private ZookeeperDistributedLock lock=(ZookeeperDistributedLock)new ZookeeperDistributedLock.Factory().lockForCurrentProcess();
",0,0,6,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, CastExpression-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
844,protected ActiveReservoirListener listenerHA = new StubReservoirReporter().listener;,"protected ActiveReservoirListener listenerHA=new StubReservoirReporter().listener;
",0,0,5,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, FieldAccess-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(FieldAccess-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
845,"private final Map<String, String[]> parameters = new LinkedHashMap<String, String[]>(16);","private final Map<String,String[]> parameters=new LinkedHashMap<String,String[]>(16);
",0,1,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
846,private Serializer<SimpleGrantedAuthority[]> ugaSerializer = new Serializer<>(SimpleGrantedAuthority[].class);,"private Serializer<SimpleGrantedAuthority[]> ugaSerializer=new Serializer<>(SimpleGrantedAuthority[].class);
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, TypeLiteral-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, TypeLiteral-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
847,"private int threshold = Integer.min((int)(maxRecordForLogNum * 0.002), 25);","private int threshold=Integer.min((int)(maxRecordForLogNum * 0.002),25);
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, ParenthesizedExpression-expression, CastExpression-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ParenthesizedExpression-expression, CastExpression-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
848,boolean autoJustTimezone = KylinConfig.getInstanceFromEnv().getStreamingDerivedTimeTimezone().length() > 0;,"boolean autoJustTimezone=KylinConfig.getInstanceFromEnv().getStreamingDerivedTimeTimezone().length() > 0;
",0,0,7,,"PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
849,"private final JavaType mapType = MapType.construct(HashMap.class, SimpleType.construct(String.class), SimpleType.construct(Object.class));","private final JavaType mapType=MapType.construct(HashMap.class,SimpleType.construct(String.class),SimpleType.construct(Object.class));
",0,0,13,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
850,"private final Map<byte[], Long> sizeMap = new TreeMap<byte[], Long>(Bytes.BYTES_COMPARATOR);","/** 
 * Maps each region to its size in bytes.
 */
private final Map<byte[],Long> sizeMap=new TreeMap<byte[],Long>(Bytes.BYTES_COMPARATOR);
",0,0,12,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
851,"private final Map<byte[], Pair<Integer, Integer>> countMap = new TreeMap<>(Bytes.BYTES_COMPARATOR);","private final Map<byte[],Pair<Integer,Integer>> countMap=new TreeMap<>(Bytes.BYTES_COMPARATOR);
",0,0,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
852,"Map<Class<? extends XField>, CollectionTable<XFlattenedColumn>> tables = Maps.newLinkedHashMap();","Map<Class<? extends XField>,CollectionTable<XFlattenedColumn>> tables=Maps.newLinkedHashMap();
",0,0,8,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
853,"private final String testOutputDir = ""target/"" + this.getClass().getSimpleName() + ""/test-output"";","/** 
 * The test output dir. 
 */
private final String testOutputDir=""target/"" + this.getClass().getSimpleName() + ""/test-output"";
",0,0,9,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
StringLiteral(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
ThisExpression(MethodInvocation-expression, MethodInvocation-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, ),
"
854,"String hiveDriverConfPath  = lens.getServerDir() + ""/conf/drivers/"" + hiveDriver + ""/hivedriver-site.xml"";","String hiveDriverConfPath=lens.getServerDir() + ""/conf/drivers/"" + hiveDriver+ ""/hivedriver-site.xml"";
",0,0,7,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
855,"private final Map<String, List<Object[]>> _tableData = new HashMap<String, List<Object[]>>();;","private final Map<String,List<Object[]>> _tableData=new HashMap<String,List<Object[]>>();
",0,3,13,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
856,private final int maxBufferSize = 1024 * 65 + 1024;,"private final int maxBufferSize=1024 * 65 + 1024;
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
857,"final Supplier<?>[] supplierArray2 = new Supplier<?>[] {supplier, supplier2};","final Supplier<?>[] supplierArray2=new Supplier<?>[]{supplier,supplier2};
",0,1,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
WildcardType(ParameterizedType-typeArguments, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
858,"protected final Backoff backOff = new Backoff(100, TimeUnit.MILLISECONDS, 1, TimeUnit.MINUTES, 0,","protected final Backoff backOff=new Backoff(100,TimeUnit.MILLISECONDS,1,TimeUnit.MINUTES,0,TimeUnit.MILLISECONDS);
",0,1,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
859,private final AtomicReference<AppenderControl[]> appenderArray = new AtomicReference<>(new AppenderControl[0]);,"private final AtomicReference<AppenderControl[]> appenderArray=new AtomicReference<>(new AppenderControl[0]);
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayCreation-dimensions, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
860,private StringMap contextData = createContextData((List<Property>) null);,"private StringMap contextData=createContextData((List<Property>)null);
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, CastExpression-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, CastExpression-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(CastExpression-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
861,private final BlockingQueue<String> queue = createQueue(256 * 1024);,"private final BlockingQueue<String> queue=createQueue(256 * 1024);
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
862,private String[] disconnectionSqlCodes = (String[]) (DEFAULT.getDisconnectionSqlCodes() == null ? null,"@PluginElement(""DisconnectionSqlCodes"") private String[] disconnectionSqlCodes=(String[])(DEFAULT.getDisconnectionSqlCodes() == null ? null : DEFAULT.getDisconnectionSqlCodes().toArray());
",0,0,10,,"Modifier(),
SimpleName(SimpleType-name, ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ArrayType-elementType, CastExpression-type, VariableDeclarationFragment-initializer, ),
Dimension(ArrayType-dimensions, CastExpression-type, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, ConditionalExpression-expression, ParenthesizedExpression-expression, CastExpression-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ConditionalExpression-expression, ParenthesizedExpression-expression, CastExpression-expression, VariableDeclarationFragment-initializer, ),
NullLiteral(InfixExpression-rightOperand, ConditionalExpression-expression, ParenthesizedExpression-expression, CastExpression-expression, VariableDeclarationFragment-initializer, ),
NullLiteral(ConditionalExpression-thenExpression, ParenthesizedExpression-expression, CastExpression-expression, VariableDeclarationFragment-initializer, ),
"
863,"private Map<TopComponent, Lookup.Result> watchedLkpResults = new WeakHashMap<TopComponent, Lookup.Result>(3);","private Map<TopComponent,Lookup.Result> watchedLkpResults=new WeakHashMap<TopComponent,Lookup.Result>(3);
",0,1,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
864,final Date endTime = new Date(System.currentTimeMillis() + 1 * 1 * 3600 * 1000);,"final Date endTime=new Date(System.currentTimeMillis() + 1 * 1 * 3600* 1000);
",0,3,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-extendedOperands, InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-extendedOperands, InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
865,"private Map<Integer,Map<Integer,int[]>> closestRepPointIndices = null;","private Map<Integer,Map<Integer,int[]>> closestRepPointIndices=null;
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
866,"private final double[] vectorAValues = {1.0 / 1.1, 2.0 / 1.1};","private final double[] vectorAValues={1.0 / 1.1,2.0 / 1.1};
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
867,private final E[] elements = (E[]) new Object[size()];,"@SuppressWarnings(""unchecked"") private final E[] elements=(E[])new Object[size()];
",0,0,10,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ArrayType-elementType, CastExpression-type, VariableDeclarationFragment-initializer, ),
Dimension(ArrayType-dimensions, CastExpression-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, CastExpression-expression, VariableDeclarationFragment-initializer, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, CastExpression-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, ArrayCreation-dimensions, CastExpression-expression, VariableDeclarationFragment-initializer, ),
"
868,private Logger log = org.slf4j.LoggerFactory.getLogger(this.getClass());,"private Logger log=org.slf4j.LoggerFactory.getLogger(this.getClass());
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
869,"private volatile Map<String, byte[]> rawCache = cacheRaw","private volatile Map<String,byte[]> rawCache=cacheRaw ? (Map<String,byte[]>)Collections.synchronizedMap(new HashMap<String,byte[]>(1024)) : null;
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
870,private E[] elements = (E[]) new Object[96];,"@SuppressWarnings(""unchecked"") private E[] elements=(E[])new Object[96];
",0,0,9,,"Modifier(),
SimpleName(SimpleType-name, ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ArrayType-elementType, CastExpression-type, VariableDeclarationFragment-initializer, ),
Dimension(ArrayType-dimensions, CastExpression-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, CastExpression-expression, VariableDeclarationFragment-initializer, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, CastExpression-expression, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayCreation-dimensions, CastExpression-expression, VariableDeclarationFragment-initializer, ),
"
871,"private final char[] shifts = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,","/** 
 * Array contain char conversion data
 */
private final char[] shifts={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,114,120,53,79,96,109,72,108,70,64,76,67,116,74,68,87,111,52,75,119,49,34,82,81,95,65,112,86,118,110,122,105,41,57,83,43,46,102,40,89,38,103,45,50,42,123,91,35,125,55,54,66,124,126,59,47,92,71,115,78,88,107,106,56,36,121,117,104,101,100,69,73,99,63,94,93,39,37,61,48,58,113,32,90,44,98,60,51,33,97,62,77,84,80,85,223,225,216,187,166,229,189,222,188,141,249,148,200,184,136,248,190,199,170,181,204,138,232,218,183,255,234,220,247,213,203,226,193,174,172,228,252,217,201,131,230,197,211,145,238,161,179,160,212,207,221,254,173,202,146,224,151,140,196,205,130,135,133,143,246,192,159,244,239,185,168,215,144,139,165,180,157,147,186,214,176,227,231,219,169,175,156,206,198,129,164,150,210,154,177,134,127,182,128,158,208,162,132,167,209,149,241,153,251,237,236,171,195,243,233,253,240,194,250,191,155,142,137,245,235,163,242,178,152};
",0,0,29,,"Modifier(),
Modifier(),
PrimitiveType(ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
"
872,private final TestMethodFilter filter = new TestMethodFilter( this.resolver );,"private final TestMethodFilter filter=new TestMethodFilter(this.resolver);
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(FieldAccess-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(FieldAccess-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
873,"private ThreadPoolExecutor executor = new ThreadPoolExecutor(5, 10, 0L, TimeUnit.MILLISECONDS, new LinkedBlockingQueue<Runnable>());","private ThreadPoolExecutor executor=new ThreadPoolExecutor(5,10,0L,TimeUnit.MILLISECONDS,new LinkedBlockingQueue<Runnable>());
",0,2,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
874,"private Map<String, Boolean> isMalicious = ImmutableMap.of( ""badguy.com"", true","private Map<String,Boolean> isMalicious=ImmutableMap.of(""badguy.com"",true);
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
875,"private String index = ""yaf_index_"" + new SimpleDateFormat(dateFormat).format(new Date());","private String index=""yaf_index_"" + new SimpleDateFormat(dateFormat).format(new Date());
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
876,"Map<Class<? extends StellarParser.Arithmetic_operandsContext>, NumberEvaluator> instanceMap;","Map<Class<? extends StellarParser.Arithmetic_operandsContext>,NumberEvaluator> instanceMap;
",0,0,5,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
877,"protected Map.Entry<KeyPair, ? extends Collection<X509Certificate>> keyInfo;","protected Map.Entry<KeyPair,? extends Collection<X509Certificate>> keyInfo;
",0,0,6,,"Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
878,"private final Supplier<SiteToSiteSender> senderSupplier = () -> new SiteToSiteSender(siteToSiteClient, new ByteArrayInputStream(data.toByteArray()));","private final Supplier<SiteToSiteSender> senderSupplier=() -> new SiteToSiteSender(siteToSiteClient,new ByteArrayInputStream(data.toByteArray()));
",0,1,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
879,"private final Map<AttributeRepository.AttributeKey<?>, Object> attributes = new ConcurrentHashMap<>();","/** 
 * Session specific attributes 
 */
private final Map<AttributeRepository.AttributeKey<?>,Object> attributes=new ConcurrentHashMap<>();
",0,0,8,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
"
880,"protected byte[] workBuf = new byte[Math.max(SftpModuleProperties.DEFAULT_FILE_HANDLE_SIZE, Integer.BYTES)];","protected byte[] workBuf=new byte[Math.max(SftpModuleProperties.DEFAULT_FILE_HANDLE_SIZE,Integer.BYTES)];
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
881,private final IoBuffer buffer = IoBuffer.allocate(16).setAutoExpand(true);,"private final IoBuffer buffer=IoBuffer.allocate(16).setAutoExpand(true);
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
882,"private XPathExpression<Element> operandExpression = XPathFactory.instance().compile(""c:Operand"", Filters.element(), null, NAMESPACE);","private XPathExpression<Element> operandExpression=XPathFactory.instance().compile(""c:Operand"",Filters.element(),null,NAMESPACE);
",0,2,12,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
883,"private Stanza stanza = StanzaBuilder.createMessageStanza(FROM, TO, null, ""body"").build();","private Stanza stanza=StanzaBuilder.createMessageStanza(FROM,TO,null,""body"").build();
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
884,protected final Iterator<String> _i = Collections.list(getAttributeNames()).iterator();,"protected final Iterator<String> _i=Collections.list(getAttributeNames()).iterator();
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
885,"private Iterator<? extends Map.Entry<?, ?>> _iter;","private Iterator<? extends Map.Entry<?,?>> _iter;
",0,0,6,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
886,private @NullAllowed BrandingSupport.BrandedFile icon48 = null;,"private @NullAllowed BrandingSupport.BrandedFile icon48=null;
",0,0,5,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
887,"private final Class[] paramTypes = new Class[] {Object.class, String.class, int.class, int.class};","/** 
 * Parameter types. 
 */
private final Class[] paramTypes=new Class[]{Object.class,String.class,int.class,int.class};
",0,1,11,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, TypeLiteral-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, TypeLiteral-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, ),
PrimitiveType(TypeLiteral-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, ),
PrimitiveType(TypeLiteral-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, ),
"
888,"private final RequestProcessor.Task sleepTask = new RequestProcessor(NbBuildLogger.class.getName(), 1, false, false).create(new Runnable() {","private final RequestProcessor.Task sleepTask=new RequestProcessor(NbBuildLogger.class.getName(),1,false,false).create(new Runnable(){
  public @Override void run(){
    handle.suspend(insideRunTask ? NbBundle.getMessage(NbBuildLogger.class,""MSG_sleep_running"") : """");
    exitProtectedMode();
  }
}
);
",0,4,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
889,"private final ExecutorService EXECUTOR = Executors.newFixedThreadPool(1, runnable -> {","/** 
 * We need a custom thread factory because the default one stores the ThreadGroup in constructor. If the group is destroyed in between the submit throws IllegalThreadStateException.
 */
private final ExecutorService EXECUTOR=Executors.newFixedThreadPool(1,runnable -> {
  Thread t=new Thread(runnable);
  if (t.isDaemon()) {
    t.setDaemon(false);
  }
  if (t.getPriority() != Thread.NORM_PRIORITY) {
    t.setPriority(Thread.NORM_PRIORITY);
  }
  return t;
}
);
",0,0,8,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
890,"private final WidgetAction connectAction = ActionFactory.createConnectAction(connectionLayer, new LinkCreateProvider(this));","private final WidgetAction connectAction=ActionFactory.createConnectAction(connectionLayer,new LinkCreateProvider(this));
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
891,"private RequestProcessor.Task refresh = FeatureManager.getInstance().create(this, true);","private RequestProcessor.Task refresh=FeatureManager.getInstance().create(this,true);
",0,6,8,,"Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
892,"private BugtrackingSupport<Object, Object, Object> f = new BugtrackingSupport<Object, Object, Object>(new JiraProxyRepositoryProvider(), null, null);","private BugtrackingSupport<Object,Object,Object> f=new BugtrackingSupport<Object,Object,Object>(new JiraProxyRepositoryProvider(),null,null);
",0,0,13,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
893,"private ParameterValue[] selected = new ParameterValue[] {new ParameterValue(""1"")};","private ParameterValue[] selected=new ParameterValue[]{new ParameterValue(""1"")};
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
894,"private final DividerAction rollbackAction = new DividerAction(NbBundle.getMessage(DiffSplitDivider.class, ""TT_DiffPanel_MoveAll""), null) {","private final DividerAction rollbackAction=new DividerAction(NbBundle.getMessage(DiffSplitDivider.class,""TT_DiffPanel_MoveAll""),null){
  @Override public void actionPerformed(  ActionEvent e){
    master.rollback(null);
  }
}
;
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
895,private final PreferenceChangeListener pcl = evt -> setBooleanState(AutoSaveController.prefs(),"private final PreferenceChangeListener pcl=evt -> setBooleanState(AutoSaveController.prefs().getBoolean(AutoSaveController.KEY_ACTIVE,AutoSaveController.KEY_ACTIVE_DEFAULT));
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
896,protected char dotChar[] = {' '};,"/** 
 * Dot array of one character under caret 
 */
protected char dotChar[]={' '};
",0,0,5,,"Modifier(),
PrimitiveType(),
SimpleName(VariableDeclarationFragment-name, ),
Dimension(VariableDeclarationFragment-extraDimensions2, ),
CharacterLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
"
897,"private final Task repaintTask = new RequestProcessor(GlyphGutter.class.getName(), 1, false, false).create(new Runnable() {","private final Task repaintTask=new RequestProcessor(GlyphGutter.class.getName(),1,false,false).create(new Runnable(){
  @Override public void run(){
    Rectangle repaint;
synchronized (toRepaintLock) {
      repaint=toRepaint;
      toRepaint=null;
    }
    if (repaint != null) {
      doRepaint(repaint);
    }
  }
}
);
",0,11,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
898,"JButton[] buttons = { new JButton(bundle.getString(""MSP_ok"")),","JButton[] buttons={new JButton(bundle.getString(""MSP_ok"")),new JButton(),new JButton(bundle.getString(""MSP_cancel""))};
",0,0,7,,"SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
899,private final RingBuffer<Waypoint> waypoints = new RingBuffer<Waypoint>(new Waypoint [50]);,"private final RingBuffer<Waypoint> waypoints=new RingBuffer<Waypoint>(new Waypoint[50]);
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayCreation-dimensions, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
900,"Font defaultFont = new Font(fontNames[0], Font.PLAIN, 12);","Font defaultFont=new Font(fontNames[0],Font.PLAIN,12);
",0,0,7,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayAccess-array, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayAccess-index, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
901,"private final RequestProcessor.Task refreshCacheTask= new RequestProcessor(""Editor-Setting-Files-Tracker-"" + storageDescription.getId()).create(this);","private final RequestProcessor.Task refreshCacheTask=new RequestProcessor(""Editor-Setting-Files-Tracker-"" + storageDescription.getId()).create(this);
",0,1,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-rightOperand, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
902,"private int filterMask = NbPreferences.forModule(StatisticsPanel.class).getInt(KEY_FILTER_MASK, Status.PASSED.getBitMask());","private int filterMask=NbPreferences.forModule(StatisticsPanel.class).getInt(KEY_FILTER_MASK,Status.PASSED.getBitMask());
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
903,"private ASTNode                         ast = ASTNode.create (null, ""Root"", 0);","private ASTNode ast=ASTNode.create(null,""Root"",0);
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
904,"private Map<String[],Lookup.Result> children = new HashMap<String[],Lookup.Result> ();","private Map<String[],Lookup.Result> children=new HashMap<String[],Lookup.Result>();
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
905,"private ActiveRegion root = new ActiveRegion(null, new Coord(), false);","private ActiveRegion root=new ActiveRegion(null,new Coord(),false);
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
906,"private final Pattern metadataPattern = Pattern.compile("".*\\"" + File.separatorChar + ""((\\.|_)svn|.hg|CVS)(\\"" + File.separatorChar + "".*|$)"");","private final Pattern metadataPattern=Pattern.compile("".*\\"" + File.separatorChar + ""((\\.|_)svn|.hg|CVS)(\\""+ File.separatorChar+ "".*|$)"");
",0,3,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-extendedOperands, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
907,"private final RequestProcessor WORKER = new RequestProcessor(GenericLanguageServer.class.getName(), Integer.MAX_VALUE, false, false);","private final RequestProcessor WORKER=new RequestProcessor(GenericLanguageServer.class.getName(),Integer.MAX_VALUE,false,false);
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
908,"String default_string = NbBundle.getMessage(org.netbeans.modules.editor.NbEditorKit.class, ""default"");","String default_string=NbBundle.getMessage(org.netbeans.modules.editor.NbEditorKit.class,""default"");
",0,0,6,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
909,"private final Component createDir = new WebMarkupContainer(""create"").add(new AjaxEventBehavior(EVT_CLICK) {","private final Component createDir=new WebMarkupContainer(""create"").add(new AjaxEventBehavior(EVT_CLICK){
  private static final long serialVersionUID=1L;
  @Override protected void onEvent(  AjaxRequestTarget target){
    addFolder.show(target);
  }
}
);
",0,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
910,"private LinkedHashMap<URL, Map<EventType, RingTimeBuffer>> rootHistory = new LinkedHashMap<URL, Map<EventType, RingTimeBuffer>>(9, 0.7f, true);","/** 
 * For each root, one ring-buffer per event type. Items are removed using least recently accessed strategy. Once an item is touched, it is removed and re-added so it is at the tail of the entry iterator.
 */
private LinkedHashMap<URL,Map<EventType,RingTimeBuffer>> rootHistory=new LinkedHashMap<URL,Map<EventType,RingTimeBuffer>>(9,0.7f,true);
",0,0,15,,"Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
911,"private final Map<URL, List<URL>>scannedRoots2Peers = Collections.synchronizedMap(new TreeMap<URL, List<URL>>(new LexicographicComparator(true)));","@org.netbeans.api.annotations.common.SuppressWarnings(value=""DMI_COLLECTION_OF_URLS"",justification=""URLs have never host part"") private final Map<URL,List<URL>> scannedRoots2Peers=Collections.synchronizedMap(new TreeMap<URL,List<URL>>(new LexicographicComparator(true)));
",0,0,15,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
BooleanLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
912,private Lookup.Result<? extends IndexingActivityInterceptor> indexingActivityInterceptors = null;,"private Lookup.Result<? extends IndexingActivityInterceptor> indexingActivityInterceptors=null;
",0,0,5,,"Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
913,private final FileChangeListener sourceRootsListener = new FCL(rootsListeners.hasRecursiveListeners() ? Boolean.TRUE : null);,"private final FileChangeListener sourceRootsListener=new FCL(rootsListeners.hasRecursiveListeners() ? Boolean.TRUE : null);
",0,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ConditionalExpression-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ConditionalExpression-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ConditionalExpression-thenExpression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ConditionalExpression-elseExpression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
914,"private boolean disableCache = Boolean.getBoolean(""test."" + DocumentIndexImpl.class.getName() + "".cacheDisable"");","/** 
 * This flag is used in tests, in particular in java.source IndexerTranscationTest. System property must be set before the indexing starts and will disable caching of document changes, all changes will be flushed (but not committed) immediately.
 */
private boolean disableCache=Boolean.getBoolean(""test."" + DocumentIndexImpl.class.getName() + "".cacheDisable"");
",0,0,9,,"Modifier(),
PrimitiveType(),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
StringLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
StringLiteral(InfixExpression-extendedOperands, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
915,private MessageScope.Local<?> countScope = MessageScope.Local.of(new MessageScope.Local.ReverseTraversalSupplier(this.voteScope));,"private MessageScope.Local<?> countScope=MessageScope.Local.of(new MessageScope.Local.ReverseTraversalSupplier(this.voteScope));
",0,1,9,,"Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(FieldAccess-expression, ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(FieldAccess-name, ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
916,"private final LookupListener weakListener = WeakListeners.create(LookupListener.class, baseListener, null);","private final LookupListener weakListener=WeakListeners.create(LookupListener.class,baseListener,null);
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
917,"private final java.util.Map <Sources,Reference<Project>> sources2projects = new WeakHashMap<Sources,Reference<Project>>();","private final java.util.Map<Sources,Reference<Project>> sources2projects=new WeakHashMap<Sources,Reference<Project>>();
",0,0,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
918,"private Union2<LogicalViewProvider,org.openide.util.Pair<Sources,SourceGroup[]>> data;","private Union2<LogicalViewProvider,org.openide.util.Pair<Sources,SourceGroup[]>> data;
",0,4,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
919,"private final Logger log = Logger.getLogger(getClass().getName().replace('$', '.'));","private final Logger log=Logger.getLogger(getClass().getName().replace('$','.'));
",0,0,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
920,final boolean reordered[] = {false};,"final boolean reordered[]={false};
",0,0,5,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
BooleanLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
921,"private final java.util.Map<Object, Models.CompoundModel> rootModelsByChildren = new HashMap<Object, Models.CompoundModel>();","private final java.util.Map<Object,Models.CompoundModel> rootModelsByChildren=new HashMap<Object,Models.CompoundModel>();
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
922,"private final java.util.Map<Models.CompoundModel, Object[]> rootChildrenByModels = new HashMap<Models.CompoundModel, Object[]>();","private final java.util.Map<Models.CompoundModel,Object[]> rootChildrenByModels=new HashMap<Models.CompoundModel,Object[]>();
",0,0,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
923,"private final WeakHashMap<Object, WeakReference<TreeModelNode>[]> objectToNode = new WeakHashMap<Object, WeakReference<TreeModelNode>[]>();","private final WeakHashMap<Object,WeakReference<TreeModelNode>[]> objectToNode=new WeakHashMap<Object,WeakReference<TreeModelNode>[]>();
",0,1,13,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ArrayType-elementType, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
924,"private final Map<String, String[]> columnLabels = new HashMap<String, String[]>(4);","/** 
 * Defines labels for Versioning view table columns.
 */
private final Map<String,String[]> columnLabels=new HashMap<String,String[]>(4);
",0,0,12,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
925,"private final boolean isWindows = ""com.sun.java.swing.plaf.windows.WindowsLookAndFeel"".equals(UIManager.getLookAndFeel().getClass().getName());","private final boolean isWindows=""com.sun.java.swing.plaf.windows.WindowsLookAndFeel"".equals(UIManager.getLookAndFeel().getClass().getName());
",0,16,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
926,"private WeakHashMap<FileObject, Set<ItemKey<T, KEY>>> index = new WeakHashMap<FileObject, Set<ItemKey <T, KEY>>>(CACHE_INITIAL_SIZE);","private WeakHashMap<FileObject,Set<ItemKey<T,KEY>>> index=new WeakHashMap<FileObject,Set<ItemKey<T,KEY>>>(CACHE_INITIAL_SIZE);
",0,0,15,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
927,int index = (size != 0 ? 0 : table.length);,"int index=(size != 0 ? 0 : table.length);
",0,0,6,,"PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, ConditionalExpression-expression, ParenthesizedExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ConditionalExpression-expression, ParenthesizedExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ConditionalExpression-thenExpression, ParenthesizedExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ConditionalExpression-elseExpression, ParenthesizedExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
928,private boolean writable = JavaCodeGenerator.this.canGenerate,"private boolean writable=JavaCodeGenerator.this.canGenerate && !JavaCodeGenerator.this.formModel.isReadOnly() && (formModel.getSettings().getGenerateMnemonicsCode() || formEditorSupport.canGenerateNBMnemonicsCode());
",0,0,5,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(ThisExpression-qualifier, FieldAccess-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(FieldAccess-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
929,private final QuorumPeerTestBase.MainThread[] mt = new QuorumPeerTestBase.MainThread[SERVER_COUNT];,"private final QuorumPeerTestBase.MainThread[] mt=new QuorumPeerTestBase.MainThread[SERVER_COUNT];
",0,1,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
930,"private final java.lang.String[] cachingTypes = {""ALL"", ""NONE"", ""ENABLE_SELECTIVE"", ""DISABLE_SELECTIVE"", ""UNSPECIFIED""};","private final java.lang.String[] cachingTypes={""ALL"",""NONE"",""ENABLE_SELECTIVE"",""DISABLE_SELECTIVE"",""UNSPECIFIED""};
",0,1,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
931,private final boolean isMetal = UIManager.getLookAndFeel() instanceof MetalLookAndFeel;,"private final boolean isMetal=UIManager.getLookAndFeel() instanceof MetalLookAndFeel;
",0,1,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InstanceofExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InstanceofExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, InstanceofExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
932,private final String altKey = KeyEvent.getKeyText(org.openide.util.Utilities.isMac() ? KeyEvent.VK_META : KeyEvent.VK_ALT);,"private final String altKey=KeyEvent.getKeyText(org.openide.util.Utilities.isMac() ? KeyEvent.VK_META : KeyEvent.VK_ALT);
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, ConditionalExpression-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ConditionalExpression-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ConditionalExpression-thenExpression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ConditionalExpression-elseExpression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
933,"private volatile @NonNull Union2<String, Iterable<? extends HintDescription>> pattern;","private volatile @NonNull Union2<String,Iterable<? extends HintDescription>> pattern;
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
934,NbProcessConsole console = new NbProcessConsole(new Consumer<NbProcessConsole.ConsoleMessage>() {,"NbProcessConsole console=new NbProcessConsole(new Consumer<NbProcessConsole.ConsoleMessage>(){
  @Override public void accept(  NbProcessConsole.ConsoleMessage t){
  }
}
);
",0,0,5,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
935,"Map<?, int[]> tag2Span = new IdentityHashMap<Object, int[]>();","Map<?,int[]> tag2Span=new IdentityHashMap<Object,int[]>();
",0,0,9,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
936,public SortedSet<int[]> reindentRegions = new TreeSet<>(new Comparator<int[]>() {,"public SortedSet<int[]> reindentRegions=new TreeSet<>(new Comparator<int[]>(){
  @Override public int compare(  int[] o1,  int[] o2){
    return o1[0] - o2[0];
  }
}
);
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
937,private final int postfixLen = ClassIndexImpl.UsageType.values().length;,"private final int postfixLen=ClassIndexImpl.UsageType.values().length;
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, FieldAccess-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, FieldAccess-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(FieldAccess-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
938,private final Random    keyGenerator = new Random(LOG.isLoggable(Level.FINE) ? 0 : System.currentTimeMillis());,"/** 
 * Random generator to generate agent authentication. Set Loglevel for this class to FINE or more detailed to get seed 0
 */
private final Random keyGenerator=new Random(LOG.isLoggable(Level.FINE) ? 0 : System.currentTimeMillis());
",0,0,11,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, ConditionalExpression-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, ConditionalExpression-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
QualifiedName(MethodInvocation-arguments, ConditionalExpression-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
NumberLiteral(ConditionalExpression-thenExpression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, ConditionalExpression-elseExpression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, ConditionalExpression-elseExpression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
939,private  final CompletionProvider FILE_COMPLETION_PROVIDER = fileCompletions(p -> true);,"private final CompletionProvider FILE_COMPLETION_PROVIDER=fileCompletions(p -> true);
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(LambdaExpression-body, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
940,"private Timer timer = new javax.swing.Timer(100, this);","private Timer timer=new javax.swing.Timer(100,this);
",0,0,6,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
941,private MemberInfo<ElementHandle<? extends Element>>[] members;,"private MemberInfo<ElementHandle<? extends Element>>[] members;
",0,0,6,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
942,"private final Rectangle rectangleVisual = new Rectangle(28, 7 + 5 + 14);","private final Rectangle rectangleVisual=new Rectangle(28,7 + 5 + 14);
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-extendedOperands, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
943,"List<? extends RowSorter.SortKey> sortKeys = Collections.singletonList(new RowSorter.SortKey(1, SortOrder.ASCENDING));","List<? extends RowSorter.SortKey> sortKeys=Collections.singletonList(new RowSorter.SortKey(1,SortOrder.ASCENDING));
",0,0,8,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
944,private final UsageLogger phpTestRunUsageLogger = new UsageLogger.Builder(PhpProjectUtils.USAGE_LOGGER_NAME),"private final UsageLogger phpTestRunUsageLogger=new UsageLogger.Builder(PhpProjectUtils.USAGE_LOGGER_NAME).message(PhpProjectUtils.class,""USG_TEST_RUN_PHP"").create();
",0,0,6,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
945,"private SearchPattern searchPattern = SearchPattern.create(null, false,","private SearchPattern searchPattern=SearchPattern.create(null,false,false,false);
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
946,OperationContainerImpl<Support>.OperationInfoImpl<Support> impl;,"OperationContainerImpl<Support>.OperationInfoImpl<Support> impl;
",0,0,5,,"SimpleName(SimpleType-name, ParameterizedType-type, QualifiedType-qualifier, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, QualifiedType-qualifier, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(QualifiedType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
947,"private Logger LOG = Logger.getLogger(TopComponentGetLookupOverridenTest.class + "".TEST-"" + getName());","private Logger LOG=Logger.getLogger(TopComponentGetLookupOverridenTest.class + "".TEST-"" + getName());
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
948,"private File installed = new File (new File (CLIOptions.getUserDir (), ""var""), ""imported"");","private File installed=new File(new File(CLIOptions.getUserDir(),""var""),""imported"");
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
949,private final Set<FileSystem.AtomicAction> myAtomicActions = Collections.<FileSystem.AtomicAction>synchronizedSet(new WeakSet<FileSystem.AtomicAction>(100));,"/** 
 * atomic actions I have used to change Modules/*.xml 
 */
private final Set<FileSystem.AtomicAction> myAtomicActions=Collections.<FileSystem.AtomicAction>synchronizedSet(new WeakSet<FileSystem.AtomicAction>(100));
",0,0,11,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
QualifiedName(SimpleType-name, MethodInvocation-typeArguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
950,protected int DISAPPEAR_DELAY_MILLIS = STOP_FLASHING_DELAY + 50 * 1000;,"protected int DISAPPEAR_DELAY_MILLIS=STOP_FLASHING_DELAY + 50 * 1000;
",0,0,6,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
951,private final HtmlRenderer.Renderer htmlRenderer = (htmlRendererClass != null) ? HtmlRenderer.createRenderer(htmlRendererClass) : null;,"private final HtmlRenderer.Renderer htmlRenderer=(htmlRendererClass != null) ? HtmlRenderer.createRenderer(htmlRendererClass) : null;
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, ParenthesizedExpression-expression, ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(InfixExpression-rightOperand, ParenthesizedExpression-expression, ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ConditionalExpression-elseExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
952,WizardDescriptor.Panel<WizardDescriptor> panels[] = new Panel[2];,"WizardDescriptor.Panel<WizardDescriptor> panels[]=new Panel[2];
",0,0,7,,"QualifiedName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
953,private boolean marginPainted = !PropUtils.neverMargin;,"private boolean marginPainted=!PropUtils.neverMargin;
",0,0,4,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(PrefixExpression-operand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
954,"private final boolean isGtk = ""GTK"".equals(UIManager.getLookAndFeel().getID()) ||","private final boolean isGtk=""GTK"".equals(UIManager.getLookAndFeel().getID()) || (UIManager.getLookAndFeel().getClass().getSuperclass().getName().indexOf(""Synth"") != -1);
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
955,"private final Map<AssembledLookupsKey, GlyphTable.UseSpec[]> assembledLookups;","private final Map<AssembledLookupsKey,GlyphTable.UseSpec[]> assembledLookups;
",0,1,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
956,"private NodeListener listener = org.openide.nodes.NodeOp.weakNodeListener (this, null);","/** 
 * weak listener 
 */
private NodeListener listener=org.openide.nodes.NodeOp.weakNodeListener(this,null);
",0,0,7,,"Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
QualifiedName(MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
ThisExpression(MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
NullLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
957,"private CloneableEditorSupport support = DataEditorSupport.create(this, getPrimaryEntry(), getCookieSet (), this);","private CloneableEditorSupport support=DataEditorSupport.create(this,getPrimaryEntry(),getCookieSet(),this);
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
958,private Node.Property<?>[] array;,"/** 
 * array of properties 
 */
private Node.Property<?>[] array;
",0,0,5,,"Modifier(),
QualifiedName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ),
WildcardType(ParameterizedType-typeArguments, ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
"
959,Lookup.Result<ActionMap> res = lookup.lookup (new Lookup.Template<ActionMap> (ActionMap.class));,"Lookup.Result<ActionMap> res=lookup.lookup(new Lookup.Template<ActionMap>(ActionMap.class));
",0,1,8,,"QualifiedName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
960,"private final OnShowingHandler onShowing = new OnShowingHandler(null, this);","/** 
 * handle  {@link OnShowing} 
 */
private final OnShowingHandler onShowing=new OnShowingHandler(null,this);
",0,0,7,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
ThisExpression(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
961,"private KeyStroke KEY_STROKE = KeyStroke.getKeyStroke( KeyEvent.VK_W, KeyEvent.ALT_DOWN_MASK+KeyEvent.CTRL_DOWN_MASK+KeyEvent.SHIFT_DOWN_MASK );","private KeyStroke KEY_STROKE=KeyStroke.getKeyStroke(KeyEvent.VK_W,KeyEvent.ALT_DOWN_MASK + KeyEvent.CTRL_DOWN_MASK + KeyEvent.SHIFT_DOWN_MASK);
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-extendedOperands, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
962,"private final Color selectedB = isMac ? new Color(183, 183, 183) : getUIColorOrDefault(""nb.options.categories.selectionBorderColor"", new Color (149, 106, 197));","private final Color selectedB=isMac ? new Color(183,183,183) : getUIColorOrDefault(""nb.options.categories.selectionBorderColor"",new Color(149,106,197));
",0,2,15,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ConditionalExpression-elseExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ConditionalExpression-elseExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, ConditionalExpression-elseExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, ConditionalExpression-elseExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, ConditionalExpression-elseExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, ConditionalExpression-elseExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
963,"private final java.util.Scanner keyboard = new java.util.Scanner(System.in, StandardCharsets.UTF_8.name());","/** 
 * Used to pause the demo waiting for the presenter to hit the Enter key.
 */
private final java.util.Scanner keyboard=new java.util.Scanner(System.in,StandardCharsets.UTF_8.name());
",0,1,8,,"Modifier(),
Modifier(),
QualifiedName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
QualifiedName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
964,private Node.Property active_set [] = null;,"/** 
 * Active set of properties (columns) 
 */
private Node.Property active_set[]=null;
",0,0,5,,"Modifier(),
QualifiedName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
Dimension(VariableDeclarationFragment-extraDimensions2, ),
NullLiteral(VariableDeclarationFragment-initializer, ),
"
965,"private final FileChangeListener  weakFolderL = WeakListeners.create(FileChangeListener.class, fileListener, null);","/** 
 * Listens on action folders, provokes rebuild
 */
private final FileChangeListener weakFolderL=WeakListeners.create(FileChangeListener.class,fileListener,null);
",0,0,9,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
NullLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
966,"public JPanel filler = new JPanel(new FlowLayout(0, 0, FlowLayout.LEADING));","public JPanel filler=new JPanel(new FlowLayout(0,0,FlowLayout.LEADING));
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
967,"ThreadInfo unknowThread = new ThreadInfo(-1, ""Unknown"", ""N/A"");","ThreadInfo unknowThread=new ThreadInfo(-1,""Unknown"",""N/A"");
",0,0,6,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
968,"private final InputOutput ioLogger = IOProvider.getDefault().getIO(Bundle.V8DebugProtocolPane(), false);","private final InputOutput ioLogger=IOProvider.getDefault().getIO(Bundle.V8DebugProtocolPane(),false);
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
969,"private final Map<Integer,EnumSet<CSS.PseudoClass>> pseudoClassMap = Collections.synchronizedMap(","/** 
 * Maps a node ID to pseudo-classes forced for the node. 
 */
private final Map<Integer,EnumSet<CSS.PseudoClass>> pseudoClassMap=Collections.synchronizedMap(new HashMap<Integer,EnumSet<CSS.PseudoClass>>());
",0,0,9,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
"
970,"private final UnusedRootNode rootNode = new UnusedRootNode(Collections.<String, Map<Integer, UnusedBinding>>emptyMap());","/** 
 * Root node of the tree with unused bindings. 
 */
private final UnusedRootNode rootNode=new UnusedRootNode(Collections.<String,Map<Integer,UnusedBinding>>emptyMap());
",0,0,11,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-type, MethodInvocation-typeArguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, MethodInvocation-typeArguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, MethodInvocation-typeArguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
971,private final int checkBoxWidth = new JCheckBox().getPreferredSize().width;,"private final int checkBoxWidth=new JCheckBox().getPreferredSize().width;
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, FieldAccess-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, FieldAccess-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(FieldAccess-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
972,final AtomicReference<WorkerStateChangeListener.WorkerState> workerState = new AtomicReference<>(null);,"final AtomicReference<WorkerStateChangeListener.WorkerState> workerState=new AtomicReference<>(null);
",0,0,6,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
973,"private final MockProcessSession session = new MockProcessSession(new SharedSessionState(runner.getProcessor(), new AtomicLong(0)), runner.getProcessor());","private final MockProcessSession session=new MockProcessSession(new SharedSessionState(runner.getProcessor(),new AtomicLong(0)),runner.getProcessor());
",0,1,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
974,"private final Deserializer<String> stringDeserializer = input -> new String(input, StandardCharsets.UTF_8);","private final Deserializer<String> stringDeserializer=input -> new String(input,StandardCharsets.UTF_8);
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
975,"private final Exception e = new RuntimeException(""first"", new RuntimeException(""second"", new RuntimeException(""third"")));","private final Exception e=new RuntimeException(""first"",new RuntimeException(""second"",new RuntimeException(""third"")));
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
976,"private final AtomicReference<TimePeriod> expirationPeriod = new AtomicReference<>(new TimePeriod(""0 sec"", 0L));","private final AtomicReference<TimePeriod> expirationPeriod=new AtomicReference<>(new TimePeriod(""0 sec"",0L));
",0,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
977,"private final AtomicReference<FlowFileQueueSize> size = new AtomicReference<>(new FlowFileQueueSize(0, 0L, 0, 0L, 0, 0, 0L));","private final AtomicReference<FlowFileQueueSize> size=new AtomicReference<>(new FlowFileQueueSize(0,0L,0,0L,0,0,0L));
",0,0,14,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
978,private final RecordSchema flowFileSchema = new RecordSchema(schema.getField(SwapSchema.FLOWFILE_CONTENTS).getSubFields());,"private final RecordSchema flowFileSchema=new RecordSchema(schema.getField(SwapSchema.FLOWFILE_CONTENTS).getSubFields());
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
979,"private final Form<ConnectionProperties> form = new Form<>(""form"", new CompoundPropertyModel<>(getProps(null))) {","private final Form<ConnectionProperties> form=new Form<>(""form"",new CompoundPropertyModel<>(getProps(null))){
  private static final long serialVersionUID=1L;
  private final DropDownChoice<DbType> db=new DropDownChoice<>(""dbType"",List.of(DbType.values()),new ChoiceRenderer<DbType>(){
    private static final long serialVersionUID=1L;
    @Override public Object getDisplayValue(    DbType object){
      return getString(String.format(""install.wizard.db.step.%s.name"",object.dbName()));
    }
    @Override public String getIdValue(    DbType object,    int index){
      return object.name();
    }
  }
);
  @Override protected void onInitialize(){
    super.onInitialize();
    add(db.add(new OnChangeAjaxBehavior(){
      private static final long serialVersionUID=1L;
      @Override protected void onUpdate(      AjaxRequestTarget target){
        target.add(feedback);
        initForm(true,target);
      }
    }
));
    add(host,port,dbname,user,pass);
    add(new SpinnerAjaxButton(""check"",new ResourceModel(""install.wizard.db.step.check""),Buttons.Type.Outline_Primary){
      private static final long serialVersionUID=1L;
      @Override protected void onSubmit(      AjaxRequestTarget target){
        target.add(feedback);
      }
      @Override protected void onError(      AjaxRequestTarget target){
        target.add(feedback);
      }
    }
);
  }
  private String getDbName(  ConnectionProperties props){
    return getString(""install.wizard.db.step.instructions."" + props.getDbType().dbName());
  }
  @Override protected void onValidateModelObjects(){
    ConnectionProperties props=getModelObject();
    try {
      Class.forName(props.getDriver());
    }
 catch (    Exception e) {
      form.error(new StringResourceModel(""install.wizard.db.step.nodriver"",InstallWizard.this).setParameters(getDbName(props)).getObject());
      return;
    }
    boolean valid=true;
    ConnectionPropertiesPatcher.updateUrl(props,host.getModelObject(),"""" + port.getModelObject(),dbname.getModelObject());
    DriverManager.setLoginTimeout(3);
    try (Connection conn=DriverManager.getConnection(props.getURL(),props.getLogin(),props.getPassword())){
      valid=conn.isValid(0);
      String sql=null;
switch (props.getDbType()) {
case DB2:
        sql=""select count(*) from systables"";
      break;
case ORACLE:
    sql=""SELECT 1 FROM DUAL"";
  break;
default :
sql=""SELECT 1"";
break;
}
try (PreparedStatement ps=conn.prepareStatement(sql)){
valid&=ps.execute();
}
 if (!valid) {
form.error(getString(""install.wizard.db.step.notvalid"") + ""<br/>"" + getDbName(props));
}
}
 catch (Exception e) {
form.error(e.getMessage() + ""<br/>"" + getDbName(props));
log.error(""error while testing DB"",e);
valid=false;
}
if (valid) {
form.success(getString(""install.wizard.db.step.valid""));
}
}
@Override protected void onSubmit(){
try {
ConnectionPropertiesPatcher.patch(getModelObject());
XmlWebApplicationContext ctx=(XmlWebApplicationContext)getWebApplicationContext(Application.get().getServletContext());
if (ctx == null) {
form.error(new StringResourceModel(""install.wizard.db.step.error.patch"",InstallWizard.this).setParameters(""Web context is NULL"").getObject());
log.error(""Web context is NULL"");
return;
}
LocalEntityManagerFactoryBean emb=ctx.getBeanFactory().getBean(LocalEntityManagerFactoryBean.class);
emb.afterPropertiesSet();
dbType=getModelObject().getDbType();
}
 catch (Exception e) {
form.error(new StringResourceModel(""install.wizard.db.step.error.patch"",InstallWizard.this).setParameters(e.getMessage()).getObject());
log.error(""error while patching"",e);
}
}
}
;
",0,1,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
980,"private final BiFunction<Set<BundleCoordinate>, Set<BundleCoordinate>, Set<BundleCoordinate>> merger = (oldValue, newValue) -> {","private final BiFunction<Set<BundleCoordinate>,Set<BundleCoordinate>,Set<BundleCoordinate>> merger=(oldValue,newValue) -> {
  final Set<BundleCoordinate> merged=new HashSet<>();
  merged.addAll(oldValue);
  merged.addAll(newValue);
  return merged;
}
;
",0,0,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
981,private final AtomicReference<Set<Relationship>> relationshipsRef = new AtomicReference<>(Collections.singleton(REL_UNMATCHED));,"private final AtomicReference<Set<Relationship>> relationshipsRef=new AtomicReference<>(Collections.singleton(REL_UNMATCHED));
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
982,"private final ObjectMapper objectMapper = new ObjectMapper().setDefaultPropertyInclusion(Value.construct(Include.NON_NULL, Include.ALWAYS));;","private final ObjectMapper objectMapper=new ObjectMapper().setDefaultPropertyInclusion(Value.construct(Include.NON_NULL,Include.ALWAYS));
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
983,protected long duration = 2 * 365L * FetchSchedule.SECONDS_PER_DAY * 1000L;,"protected long duration=2 * 365L * FetchSchedule.SECONDS_PER_DAY* 1000L;
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
984,"byte[][] noContentStates = { { STATUS_FETCH_GONE, STATUS_DB_GONE },","byte[][] noContentStates={{STATUS_FETCH_GONE,STATUS_DB_GONE},{STATUS_FETCH_REDIR_TEMP,STATUS_DB_REDIR_TEMP},{STATUS_FETCH_REDIR_PERM,STATUS_DB_REDIR_PERM}};
",0,0,6,,"PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
985,"String[] urls11_expected = new String[] { urls11[0], urls11[1], urls20[0],","String[] urls11_expected=new String[]{urls11[0],urls11[1],urls20[0],urls20[1]};
",0,0,11,,"SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayAccess-array, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayAccess-index, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayAccess-array, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayAccess-index, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayAccess-array, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayAccess-index, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
986,"private LinkedHashMap<Class<?>, String[]> customOperations = null;","private LinkedHashMap<Class<?>,String[]> customOperations=null;
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
987,private final URI uriProperty = getClient().newURIBuilder(uriEntity.toASCIIString()),"private final URI uriProperty=getClient().newURIBuilder(uriEntity.toASCIIString()).appendPropertySegment(""PropertyComp"").appendPropertySegment(""PropertyDuration"").build();
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
988,"private final Map<String, EntityCollection> data = new DataCreator(oData, edm).getData();","private final Map<String,EntityCollection> data=new DataCreator(oData,edm).getData();
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
989,"private final byte[] bytesToCheck = {(byte) 0x5b, (byte) 0x5b, (byte) 0x5b, (byte) 0x5b};","private final byte[] bytesToCheck={(byte)0x5b,(byte)0x5b,(byte)0x5b,(byte)0x5b};
",0,1,13,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(CastExpression-expression, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(CastExpression-expression, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(CastExpression-expression, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(CastExpression-expression, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
990,protected java.util.logging.Logger julLogger = java.util.logging.Logger.getLogger(PGETaskInstance.class.getName());,"/** 
 * This JUL logger is kept for now to avoid large scale changes in logging dependencies. Should be removed in future with an alternative to address the logging dependencies.
 */
protected java.util.logging.Logger julLogger=java.util.logging.Logger.getLogger(PGETaskInstance.class.getName());
",0,0,7,,"Modifier(),
QualifiedName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
QualifiedName(MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
991,final long retentionTime = 1000L * 60 * 60 * 24 * ConfigurationService.getInt(LAUNCHERJAR_LIB_RETENTION);,"final long retentionTime=1000L * 60 * 60* 24* ConfigurationService.getInt(LAUNCHERJAR_LIB_RETENTION);
",0,1,10,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
992,"private Duration interval = new Duration(5 * 60, TimeUnit.SECONDS);","private Duration interval=new Duration(5 * 60,TimeUnit.SECONDS);
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
993,"private final int brokerPort = NetworkUtil.getNextAvailablePort(new int[]{7272 , 0});","private final int brokerPort=NetworkUtil.getNextAvailablePort(new int[]{7272,0});
",0,1,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
994,"private SQLBuffer _oneBuffer = new SQLBuffer(this).append(""1"");","private SQLBuffer _oneBuffer=new SQLBuffer(this).append(""1"");
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
995,private int _hashCode = Object.class.getName().hashCode();,"private int _hashCode=Object.class.getName().hashCode();
",0,0,6,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
996,"private char[][] _beginElements = { { 'p' }, { 'c' } };","private char[][] _beginElements={{'p'},{'c'}};
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
997,"private char[][] _endElements = { ""ackage"".toCharArray(),","private char[][] _endElements={""ackage"".toCharArray(),""lass"".toCharArray()};
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-expression, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
998,"Object[] params = new Object[] { Person.class, ContactInfo.class, Phone.class, ""openjpa.DataCache"", ""true"",","Object[] params=new Object[]{Person.class,ContactInfo.class,Phone.class,""openjpa.DataCache"",""true"",CLEAR_TABLES};
",0,1,10,,"SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
999,"private java.util.Set<Attribute<? super X, ?>> attrs = new HashSet<>();","private java.util.Set<Attribute<? super X,?>> attrs=new HashSet<>();
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1000,"private final FileUploadField fileUploadField = new FileUploadField(""fileInput"", new IModel<List<FileUpload>>() {","private final FileUploadField fileUploadField=new FileUploadField(""fileInput"",new IModel<List<FileUpload>>(){
  private static final long serialVersionUID=1L;
  @Override public void setObject(  List<FileUpload> object){
  }
  @Override public List<FileUpload> getObject(){
    return new ArrayList<>();
  }
}
){
  private static final long serialVersionUID=1L;
  @Override protected boolean forceCloseStreamsOnDetach(){
    return false;
  }
}
;
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1001,private IModel<User> moderator2add = Model.of((User)null);,"private IModel<User> moderator2add=Model.of((User)null);
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, CastExpression-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(CastExpression-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1002,"private final Modal<String> registerInfoDialog = new TextContentModal(""registerInfo"", Model.of("""")) {","private final Modal<String> registerInfoDialog=new TextContentModal(""registerInfo"",Model.of("""")){
  private static final long serialVersionUID=1L;
  @Override protected void onInitialize(){
    super.onInitialize();
    setModelObject(getString(""warn.notverified""));
    get(""content"").setOutputMarkupId(true);
  }
  @Override public Modal<String> setModelObject(  String obj){
    super.setModelObject(obj);
    get(""content"").setDefaultModelObject(obj);
    return this;
  }
  @Override protected void onClose(  IPartialPageRequestHandler handler){
    signin.show(handler);
  }
}
;
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1003,Component eventDetail = new WebMarkupContainer(EVENT_DETAILS_ID).setVisible(false);,"Component eventDetail=new WebMarkupContainer(EVENT_DETAILS_ID).setVisible(false);
",0,0,6,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1004,"private final CheckBox enterRoom = new CheckBox(""enterRoom"", Model.of(false));","private final CheckBox enterRoom=new CheckBox(""enterRoom"",Model.of(false));
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1005,"UrlTextField url = new UrlTextField(""url"", Model.of(""""), new UrlValidator() {","UrlTextField url=new UrlTextField(""url"",Model.of(""""),new UrlValidator(){
  private static final long serialVersionUID=1L;
  @Override public void validate(  IValidatable<String> validatable){
    if (!gcal.getModelObject()) {
      super.validate(validatable);
    }
  }
}
){
  private static final long serialVersionUID=1L;
  @Override protected String[] getInputTypes(){
    return new String[]{""url"",""text""};
  }
}
;
",0,0,8,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1006,"private Iterator<Map.Entry<String, Map<String, NKJPSegmentationDocument.Pointer>>> segmentIt;","private Iterator<Map.Entry<String,Map<String,NKJPSegmentationDocument.Pointer>>> segmentIt;
",0,1,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1007,"private final String[] testSentence = ""w1/pos1 w2/pos2 w3/pos3 w4/pos4"".split(""\\s+"");","private final String[] testSentence=""w1/pos1 w2/pos2 w3/pos3 w4/pos4"".split(""\\s+"");
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1008,private final long instance = System.identityHashCode(this);,"private final long instance=System.identityHashCode(this);
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1009,"private Set<Entry<String, Object>> entrySet = new AbstractSet<Map.Entry<String,Object>>() {","private Set<Entry<String,Object>> entrySet=new AbstractSet<Map.Entry<String,Object>>(){
  @Override public Iterator<java.util.Map.Entry<String,Object>> iterator(){
    return entries.iterator();
  }
  @Override public int size(){
    return entries.size();
  }
}
;
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1010,private Consumer<? super ByteBuffer> unmapper = IOUtils::unmap;,"private Consumer<? super ByteBuffer> unmapper=IOUtils::unmap;
",0,0,6,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(ExpressionMethodReference-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ExpressionMethodReference-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1011,"private int finalShift[] = new int[] { 2 * weightBits - bitsPerChannel[0],","private int finalShift[]=new int[]{2 * weightBits - bitsPerChannel[0],2 * weightBits - bitsPerChannel[1],2 * weightBits - bitsPerChannel[2]};
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, InfixExpression-leftOperand, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, InfixExpression-leftOperand, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayAccess-array, InfixExpression-rightOperand, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayAccess-index, InfixExpression-rightOperand, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1012,Iterator<byte[]> spillIter = spillMaps.get(index).iterator();,"Iterator<byte[]> spillIter=spillMaps.get(index).iterator();
",0,0,8,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1013,private final List<List<List<KeyRange[]>>> slotTrailingRangesList;,"private final List<List<List<KeyRange[]>>> slotTrailingRangesList;
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1014,"private Map<Integer, Stage> values = new HashMap<Integer, Stage>( Stage.values().length );","private Map<Integer,Stage> values=new HashMap<Integer,Stage>(Stage.values().length);
",0,1,11,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, FieldAccess-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, FieldAccess-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(FieldAccess-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1015,"protected TreeMap<byte[], LinkedList<byte[]>> topValues = new TreeMap<byte[], LinkedList<byte[]>>(new ByteArrayComparator());","protected TreeMap<byte[],LinkedList<byte[]>> topValues=new TreeMap<byte[],LinkedList<byte[]>>(new ByteArrayComparator());
",0,0,15,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1016,"private final ImmutableBytesWritable lastKey = new ImmutableBytesWritable(ByteUtil.EMPTY_BYTE_ARRAY, -1, -1);","private final ImmutableBytesWritable lastKey=new ImmutableBytesWritable(ByteUtil.EMPTY_BYTE_ARRAY,-1,-1);
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1017,PTable table = createProjectedTableFromLiterals(RELATION[0]).getTable();,"PTable table=createProjectedTableFromLiterals(RELATION[0]).getTable();
",0,0,6,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayAccess-array, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayAccess-index, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1018,"private ImmutableBytesWritable[] dataPtr = new ImmutableBytesWritable[] { getPtr(data[0]),","private ImmutableBytesWritable[] dataPtr=new ImmutableBytesWritable[]{getPtr(data[0]),getPtr(data[1]),getPtr(data[2])};
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayAccess-array, MethodInvocation-arguments, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayAccess-index, MethodInvocation-arguments, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1019,"byte[] table = org.apache.hadoop.hbase.util.Bytes.toBytes(""tableName"");","byte[] table=org.apache.hadoop.hbase.util.Bytes.toBytes(""tableName"");
",0,0,6,,"PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1020,private final byte[] row1 = Bytes.toBytes(TestHBaseTransactionManager.class.getCanonicalName());,"private final byte[] row1=Bytes.toBytes(TestHBaseTransactionManager.class.getCanonicalName());
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1021,private String[][] DATA = new String[2][DATALEN];,"private String[][] DATA=new String[2][DATALEN];
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1022,"private String tmpDirName = Util.encodeEscape(System.getProperty(""java.io.tmpdir"")) + ""/pigtest/tmp"";","private String tmpDirName=Util.encodeEscape(System.getProperty(""java.io.tmpdir"")) + ""/pigtest/tmp"";
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1023,private Properties props = UDFContext.getUDFContext().getUDFProperties(this.getClass());,"private Properties props=UDFContext.getUDFContext().getUDFProperties(this.getClass());
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1024,"private final AtomicReference<CompletableFuture<Traversal<?, E>>> traversalFuture = new AtomicReference<>(null);","private final AtomicReference<CompletableFuture<Traversal<?,E>>> traversalFuture=new AtomicReference<>(null);
",0,1,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1025,"private HashMap<? extends Enum<?>, Object> attributes = null;","private HashMap<? extends Enum<?>,Object> attributes=null;
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1026,"private final DataValue BAD_RESPONSE = new DataValue(new Variant(null), StatusCode.BAD);","private final DataValue BAD_RESPONSE=new DataValue(new Variant(null),StatusCode.BAD);
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1027,private final Promise<?> terminationFuture = new DefaultPromise<Void>(GlobalEventExecutor.INSTANCE);,"private final Promise<?> terminationFuture=new DefaultPromise<Void>(GlobalEventExecutor.INSTANCE);
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1028,"private final Set<String> IGNORE_NS = new HashSet<>(Arrays.asList(null, XML_NS, XML_DIGSIG_NS));","private final Set<String> IGNORE_NS=new HashSet<>(Arrays.asList(null,XML_NS,XML_DIGSIG_NS));
",0,0,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1029,"byte[] data = new byte[] { (byte) 0x76, (byte) 0x0E, (byte) 0x00, (byte) 0x00, (byte) 0x86,","byte[] data=new byte[]{(byte)0x76,(byte)0x0E,(byte)0x00,(byte)0x00,(byte)0x86,(byte)0x07,(byte)0x00,(byte)0x00,(byte)0x19,(byte)0x01,(byte)0x00,(byte)0x00,(byte)0x8B,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x03,(byte)0x01,(byte)0x1F,(byte)0x00};
",0,0,15,,"PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(CastExpression-expression, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(CastExpression-expression, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(CastExpression-expression, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(CastExpression-expression, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(CastExpression-expression, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1030,"private Pair<Integer, long[]>[] indexesAcks = new Pair[size];","private Pair<Integer,long[]>[] indexesAcks=new Pair[size];
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1031,"private String brokerConfigFile = Paths.get("""").toAbsolutePath().normalize().toString() + ""/conf/broker.conf"";","@Parameter(names={""-c"",""--broker-conf""},description=""Configuration file for Broker"") private String brokerConfigFile=Paths.get("""").toAbsolutePath().normalize().toString() + ""/conf/broker.conf"";
",0,0,10,,"Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
StringLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, ),
"
1032,private final int currentProtocolVersion = ProtocolVersion.values()[ProtocolVersion.values().length - 1],"private final int currentProtocolVersion=ProtocolVersion.values()[ProtocolVersion.values().length - 1].getValue();
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayAccess-array, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayAccess-array, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, FieldAccess-expression, InfixExpression-leftOperand, ArrayAccess-index, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, FieldAccess-expression, InfixExpression-leftOperand, ArrayAccess-index, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(FieldAccess-name, InfixExpression-leftOperand, ArrayAccess-index, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ArrayAccess-index, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1033,private final Client client = ClientBuilder.newClient(new ClientConfig().register(LoggingFeature.class));,"private final Client client=ClientBuilder.newClient(new ClientConfig().register(LoggingFeature.class));
",0,2,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1034,"LoadingCache<BytesSchemaVersion, SchemaReader<T>> readerCache = CacheBuilder.newBuilder().maximumSize(100000)","LoadingCache<BytesSchemaVersion,SchemaReader<T>> readerCache=CacheBuilder.newBuilder().maximumSize(100000).expireAfterAccess(30,TimeUnit.MINUTES).build(new CacheLoader<BytesSchemaVersion,SchemaReader<T>>(){
  @Override public SchemaReader<T> load(  BytesSchemaVersion schemaVersion){
    return loadReader(schemaVersion);
  }
}
);
",0,0,9,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1035,"private final OrderedExecutor backgroundExecutor = OrderedExecutor.newBuilder().name(""zk-cache-background"").numThreads(2).build();","private final OrderedExecutor backgroundExecutor=OrderedExecutor.newBuilder().name(""zk-cache-background"").numThreads(2).build();
",0,0,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1036,private final PulsarClusterSpec spec = PulsarClusterSpec.builder().clusterName(clusterName).numBrokers(3).build();,"private final PulsarClusterSpec spec=PulsarClusterSpec.builder().clusterName(clusterName).numBrokers(3).build();
",0,0,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1037,private final InjectedAttributeOrStatistic.TypeValidator _typeValidator = Broker.class::isAssignableFrom;,"private final InjectedAttributeOrStatistic.TypeValidator _typeValidator=Broker.class::isAssignableFrom;
",0,0,6,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, ExpressionMethodReference-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ExpressionMethodReference-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1038,private final byte[] _versionBytes = MessageStoreSerializer_v1.VERSION.getBytes(StandardCharsets.UTF_8);,"private final byte[] _versionBytes=MessageStoreSerializer_v1.VERSION.getBytes(StandardCharsets.UTF_8);
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1039,"private final Set<AMQPConnection<?>> _connections = newSetFromMap(new ConcurrentHashMap<AMQPConnection<?>, Boolean>());","private final Set<AMQPConnection<?>> _connections=newSetFromMap(new ConcurrentHashMap<AMQPConnection<?>,Boolean>());
",0,0,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1040,"private AMQPSession<?,TestAbstractConsumerTarget> _session = mock(AMQPSession.class);","private AMQPSession<?,TestAbstractConsumerTarget> _session=mock(AMQPSession.class);
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1041,"private final Timer restartCompletedTimer = new Timer(this.getClass().getSimpleName() + "":Timer"");","private final Timer restartCompletedTimer=new Timer(this.getClass().getSimpleName() + "":Timer"");
",0,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(MethodInvocation-expression, MethodInvocation-expression, InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1042,Set<String> MOVED_ATTRIBUTES = Collections.unmodifiableSet(new HashSet<>(Arrays.asList(,"Set<String> MOVED_ATTRIBUTES=Collections.unmodifiableSet(new HashSet<>(Arrays.asList(QUEUE_FLOW_RESUME_SIZE_BYTES,QUEUE_FLOW_CONTROL_SIZE_BYTES,MESSAGE_GROUP_SHARED_GROUPS,MESSAGE_GROUP_KEY,ALTERNATE_EXCHANGE)));
",0,0,8,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1043,"private Integer heartbeatInterval = QpidProperty.intProperty(null, QPID_HEARTBEAT_INTERVAL, AMQJ_HEARTBEAT_DELAY).get();","private Integer heartbeatInterval=QpidProperty.intProperty(null,QPID_HEARTBEAT_INTERVAL,AMQJ_HEARTBEAT_DELAY).get();
",0,1,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1044,private int _levels = (FRM_ENABLED ? TRACE_FRM : 0);,"private int _levels=(FRM_ENABLED ? TRACE_FRM : 0);
",0,0,6,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(ConditionalExpression-expression, ParenthesizedExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ConditionalExpression-thenExpression, ParenthesizedExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ConditionalExpression-elseExpression, ParenthesizedExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1045,"Set<String> roleOperationCmds = new HashSet<>(Arrays.asList(HiveOperationType.CREATEROLE.name(), HiveOperationType.DROPROLE.name(),","Set<String> roleOperationCmds=new HashSet<>(Arrays.asList(HiveOperationType.CREATEROLE.name(),HiveOperationType.DROPROLE.name(),HiveOperationType.SHOW_ROLES.name(),HiveOperationType.SHOW_ROLE_GRANT.name(),HiveOperationType.SHOW_ROLE_PRINCIPALS.name(),HiveOperationType.GRANT_ROLE.name(),HiveOperationType.REVOKE_ROLE.name()));
",0,0,10,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1046,"unsubscribeTuple = new SubscriptionHandler.Unsubscriber<Tuple2<RemoteIdentifier, Class<? extends T>>>() {","/** 
 * Unsubscribe from event from a certain source and message type. 
 */
private final SubscriptionHandler.Unsubscriber<Tuple2<RemoteIdentifier,Class<? extends T>>> unsubscribeTuple=new SubscriptionHandler.Unsubscriber<Tuple2<RemoteIdentifier,Class<? extends T>>>(){
  @Override public void unsubscribe(  final Tuple2<RemoteIdentifier,Class<? extends T>> token){
    LOG.log(Level.FINER,""Unsubscribe: {0} tuple {1},{2}"",new Object[]{name,token.getT1(),token.getT2().getCanonicalName()});
    tupleToHandlerMap.remove(token);
  }
}
;
",0,1,6,,"SimpleName(VariableDeclarationFragment-name, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
"
1047,@Injected(style= InjectionStyle.BY_TYPE) private Context context=null;,"@Injected(style=InjectionStyle.BY_TYPE) private Context context=null;
",0,0,7,,"SimpleName(NormalAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(MemberValuePair-name, NormalAnnotation-values, FieldDeclaration-modifiers, ),
QualifiedName(MemberValuePair-value, NormalAnnotation-values, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1048,TestSMInterface UUT = (TestSMInterface) PlainStateMachineExecutor.createProxy(TestSM.class);,"TestSMInterface UUT=(TestSMInterface)PlainStateMachineExecutor.createProxy(TestSM.class);
",0,0,6,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, CastExpression-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1049,"private MQClientAPIImpl mqClientAPI = new MQClientAPIImpl(new NettyClientConfig(), null, null, new ClientConfig());","private MQClientAPIImpl mqClientAPI=new MQClientAPIImpl(new NettyClientConfig(),null,null,new ClientConfig());
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1050,"private Message msg = new Message(""FooBar"", new byte[] {});","private Message msg=new Message(""FooBar"",new byte[]{});
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ArrayInitializer(ArrayCreation-initializer, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1051,CommitLog.MessageExtBatchEncoder batchEncoder = new CommitLog.MessageExtBatchEncoder(10 * 1024 * 1024);,"CommitLog.MessageExtBatchEncoder batchEncoder=new CommitLog.MessageExtBatchEncoder(10 * 1024 * 1024);
",0,0,6,,"QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-extendedOperands, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1052,"protected Map<String, Map<String, Class<? extends IFXGNode>>> elementNodesByURI = null;","/** 
 * A Map of URIs to a Map of local element names to an IFXGNode Class.
 */
protected Map<String,Map<String,Class<? extends IFXGNode>>> elementNodesByURI=null;
",0,0,9,,"Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
NullLiteral(VariableDeclarationFragment-initializer, ),
"
1053,"private MismatchedTokenException exceptionPool = new MismatchedTokenException(tokenNames, null, null, false);","/** 
 * Cut down on object construction when we throw on the matches call
 */
private MismatchedTokenException exceptionPool=new MismatchedTokenException(tokenNames,null,null,false);
",0,0,8,,"Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
1054,"private final Map<ITypeDefinition, AppliedVectorDefinition> vectorElementTypeToVectorClassMap = new MapMaker()","private final Map<ITypeDefinition,AppliedVectorDefinition> vectorElementTypeToVectorClassMap=new MapMaker().weakKeys().weakValues().makeMap();
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1055,private final ScheduledThreadPoolExecutor scheduledExecutor = (ScheduledThreadPoolExecutor) Executors.newScheduledThreadPool(0);,"private final ScheduledThreadPoolExecutor scheduledExecutor=(ScheduledThreadPoolExecutor)Executors.newScheduledThreadPool(0);
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, CastExpression-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1056,"ProcessorLifecycleListenerFactory listenerFactory = (pcontext, cfg) -> new ProcessorLifecycleListener() { };","ProcessorLifecycleListenerFactory listenerFactory=(pcontext,cfg) -> new ProcessorLifecycleListener(){
}
;
",0,0,6,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
AnonymousClassDeclaration(ClassInstanceCreation-anonymousClassDeclaration, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1057,"private final Map<Partition, SystemStreamMetadata.SystemStreamPartitionMetadata> mockSspMetadataMap = Collections.singletonMap(new Partition(0), mockSspMetadata);","private final Map<Partition,SystemStreamMetadata.SystemStreamPartitionMetadata> mockSspMetadataMap=Collections.singletonMap(new Partition(0),mockSspMetadata);
",0,0,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1058,private final scala.collection.immutable.Set<SystemStream> inputStreamSet = JavaConversions.asScalaSet(Collections.singleton(inputStream)).toSet();,"private final scala.collection.immutable.Set<SystemStream> inputStreamSet=JavaConversions.asScalaSet(Collections.singleton(inputStream)).toSet();
",0,0,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1059,"private final List<Integer> minConnectionPoolSizeRange = Arrays.asList(4,8,12,16,32,64,96,128,192,256,384,512);","private final List<Integer> minConnectionPoolSizeRange=Arrays.asList(4,8,12,16,32,64,96,128,192,256,384,512);
",0,1,19,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1060,"private final Iterator<Map.Entry<byte[], byte[]>> iter;","private final Iterator<Map.Entry<byte[],byte[]>> iter;
",0,3,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1061,"LoggingAdapter AKKA_LOG = Logging.getLogger(getContext().getSystem(), this);","LoggingAdapter AKKA_LOG=Logging.getLogger(getContext().getSystem(),this);
",0,0,7,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1062,"private final TxStartedEvent event = new TxStartedEvent(globalTxId, localTxId, null, ""method x"",","private final TxStartedEvent event=new TxStartedEvent(globalTxId,localTxId,null,""method x"",0,null,0,0,0,0,0);
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1063,"private final Map<String, Integer> customerPurchases = new HashMap<>(singletonMap(""mike"", 0));","private final Map<String,Integer> customerPurchases=new HashMap<>(singletonMap(""mike"",0));
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1064,private AbsolutePathReferenceVisitor.Tags[] tags = {AbsolutePathReferenceVisitor.Tags.RESOURCES};,"private AbsolutePathReferenceVisitor.Tags[] tags={AbsolutePathReferenceVisitor.Tags.RESOURCES};
",0,0,5,,"Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1065,private int[][] tables = new int[2][64];,"private int[][] tables=new int[2][64];
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1066,"private final Map<String, FilterConfig<? extends Filter>[]> filterChains = new LinkedHashMap<String, FilterConfig<? extends Filter>[]>();","/** 
 * We use a LinkedHashMap here to ensure that iterator order is the same as add order.  This is important, as the FilterChainResolver uses iterator order when searching for a matching chain.
 */
private final Map<String,FilterConfig<? extends Filter>[]> filterChains=new LinkedHashMap<String,FilterConfig<? extends Filter>[]>();
",0,0,13,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ArrayType-elementType, ParameterizedType-typeArguments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ArrayType-elementType, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
"
1067,"private final ObjectConverter<? super String, ?>[] converters;","/** 
 * Converters for parsing strings as attribute values. Those converters will be used by {@link Result#setValue(String)} while {@link Result#getValue()} will use the inverseof those converters. <p>Note: we store converters from string to value instead than the converse because the inverse conversion is often a simple call to  {@link Object#toString()}, so there is a risk that some of the later converters do not bother to remember their inverse.</p>
 */
private final ObjectConverter<? super String,?>[] converters;
",0,0,7,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ArrayType-elementType, ),
WildcardType(ParameterizedType-typeArguments, ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
"
1068,private int index = -1;,"/** 
 * Index of current key.            
 */
private int index=-1;
",0,2,5,,"TextElement(TagElement-fragments, Javadoc-tags, FieldDeclaration-javadoc, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1069,"private final Map<Unit<?>, Unit<?>> units = new HashMap<>(4);","/** 
 * The contextual units for writing lengths, angles or other type of measurements. A unit not present in this map means that the ""natural"" unit of the WKT element shall be used. This value is set for example by  {@code ""GEOGCS""}, which force its enclosing  {@code ""PRIMEM""}to take the same units than itself.
 * @see #addContextualUnit(Unit)
 * @see #toContextualUnit(Unit)
 */
private final Map<Unit<?>,Unit<?>> units=new HashMap<>(4);
",0,0,10,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
1070,"private final Executor executor = new ThreadPoolExecutor(1, 2, 30, TimeUnit.SECONDS, new LinkedBlockingQueue<>(1), new ThreadFactory() {","private final Executor executor=new ThreadPoolExecutor(1,2,30,TimeUnit.SECONDS,new LinkedBlockingQueue<>(1),new ThreadFactory(){
  @Override public Thread newThread(  final Runnable runable){
    final Thread t=new Thread(runable,""Discovery Agent Notifier"");
    t.setDaemon(true);
    return t;
  }
}
);
",0,1,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1071,"private RankedServices<ConfigurationOverrideProvider> items = new RankedServices<>(Order.DESCENDING, this);","private RankedServices<ConfigurationOverrideProvider> items=new RankedServices<>(Order.DESCENDING,this);
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1072,"private Set<String> DIGEST_ALGORITHM = new HashSet<String>(asList(""md2"",""md5"",""sha1""));","private Set<String> DIGEST_ALGORITHM=new HashSet<String>(asList(""md2"",""md5"",""sha1""));
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1073,"private final JsonGeneratorFactory generatorFactory = Json.createGeneratorFactory(Collections.singletonMap(JsonGenerator.PRETTY_PRINTING, true));","private final JsonGeneratorFactory generatorFactory=Json.createGeneratorFactory(Collections.singletonMap(JsonGenerator.PRETTY_PRINTING,true));
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1074,"private final SystemUser systemUser = new SystemUser(""user1"", new RepoPath(""/home/users/system/intermediate/usernode""), new RepoPath(""/home/users/system/intermediate""));","private final SystemUser systemUser=new SystemUser(""user1"",new RepoPath(""/home/users/system/intermediate/usernode""),new RepoPath(""/home/users/system/intermediate""));
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1075,"LauncherConfig noActionAllowesConfig = mock(LauncherConfig.class, invocationOnMock -> {","LauncherConfig noActionAllowesConfig=mock(LauncherConfig.class,invocationOnMock -> {
  throw new RuntimeException(invocationOnMock.getMethod().getName());
}
);
",0,0,5,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1076,"private final ContentElement NULL_ELEMENT = new ContentElementImpl(null, Collections.<String,Object>emptyMap());","private final ContentElement NULL_ELEMENT=new ContentElementImpl(null,Collections.<String,Object>emptyMap());
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1077,@Parameterized.Parameter public Boolean preload = Boolean.FALSE;,"@Parameterized.Parameter public Boolean preload=Boolean.FALSE;
",0,0,5,,"QualifiedName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1078,"private final String postUrl = postFolder + ""/"" + System.currentTimeMillis() + SlingPostConstants.DEFAULT_CREATE_SUFFIX;","private final String postUrl=postFolder + ""/"" + System.currentTimeMillis()+ SlingPostConstants.DEFAULT_CREATE_SUFFIX;
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1079,public SlingContext context = new SlingContextBuilder(ResourceResolverType.JCR_MOCK).plugin(CACONFIG).build();,"@Rule public SlingContext context=new SlingContextBuilder(ResourceResolverType.JCR_MOCK).plugin(CACONFIG).build();
",0,0,8,,"Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
QualifiedName(ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
"
1080,"private Map<String,Object> map = ImmutableMap.<String, Object>of(""prop1"", ""value1"",","private Map<String,Object> map=ImmutableMap.<String,Object>of(""prop1"",""value1"",""prop2.with.periods"",""value2"",""prop3-with-hyphens"",""value3"");
",0,0,11,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1081,private final @NotNull OsgiContext context = new OsgiContextBuilder(),"private final @NotNull OsgiContext context=new OsgiContextBuilder().beforeSetUp(contextBeforeSetup).afterSetUp(contextAfterSetup).beforeTearDown(contextBeforeTeardown).afterTearDown(contextAfterTeardown).build();
",0,0,6,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1082,"private LanguageConfiguration langConf = new LanguageConfiguration(SUPPORTED_LANUAGES, new String[]{});","private LanguageConfiguration langConf=new LanguageConfiguration(SUPPORTED_LANUAGES,new String[]{});
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ArrayInitializer(ArrayCreation-initializer, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1083,"HdfsUtils.Pair<Path, FileLock.LogEntry> lastExpiredLock = null;","HdfsUtils.Pair<Path,FileLock.LogEntry> lastExpiredLock=null;
",0,0,5,,"QualifiedName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1084,"private ConfigValidationUtils.FieldValidator fv = ConfigValidationUtils.listFv(String.class, false);","private ConfigValidationUtils.FieldValidator fv=ConfigValidationUtils.listFv(String.class,false);
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1085,private IModel<? extends Collection<T>> model = Model.of(List.of());,"private IModel<? extends Collection<T>> model=Model.of(List.of());
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1086,"private DnnParameters _cachedParams = new DnnParameters(-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, _maxNumThreads);","private DnnParameters _cachedParams=new DnnParameters(-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,_maxNumThreads);
",0,1,16,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1087,"private File TEST_CONF_FILE = new File(SCRIPT_DIR + getTestDir(), TEST_CONF);","private File TEST_CONF_FILE=new File(SCRIPT_DIR + getTestDir(),TEST_CONF);
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1088,@Expose private Column [] groupingKeys = PlannerUtil.EMPTY_COLUMNS;,"/** 
 * Grouping key sets 
 */
@Expose private Column[] groupingKeys=PlannerUtil.EMPTY_COLUMNS;
",0,0,6,,"SimpleName(MarkerAnnotation-typeName, ),
Modifier(),
SimpleName(SimpleType-name, ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
QualifiedName(VariableDeclarationFragment-initializer, ),
"
1089,"private final MethodDescription RENDER_DESCRIPTION = PlasticUtils.getMethodDescription(RenderCommand.class, ""render"", MarkupWriter.class, RenderQueue.class);","private final MethodDescription RENDER_DESCRIPTION=PlasticUtils.getMethodDescription(RenderCommand.class,""render"",MarkupWriter.class,RenderQueue.class);
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1090,"private final FileItemFactory fileItemFactory = new DiskFileItemFactory(888, new File(""/tmp""));","private final FileItemFactory fileItemFactory=new DiskFileItemFactory(888,new File(""/tmp""));
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1091,final long _expireTime = _startupTime + 365 * 24 * 60 * 60 * 1000L;,"/** 
 * Time vended assets expire. Since a change in asset content is a change in asset URI, we want them to not expire ... but a year will do.
 */
final long _expireTime=_startupTime + 365 * 24 * 60* 60* 1000L;
",0,0,9,,"Modifier(),
PrimitiveType(),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
NumberLiteral(InfixExpression-leftOperand, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, ),
NumberLiteral(InfixExpression-rightOperand, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, ),
NumberLiteral(InfixExpression-extendedOperands, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, ),
NumberLiteral(InfixExpression-extendedOperands, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, ),
NumberLiteral(InfixExpression-extendedOperands, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, ),
"
1092,"private final TaskHeartbeatResponse RESPONSE_SHOULD_DIE = new TaskHeartbeatResponse(true, null, 0, 0);","private final TaskHeartbeatResponse RESPONSE_SHOULD_DIE=new TaskHeartbeatResponse(true,null,0,0);
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1093,"private long v3InitedTime = Math.max(v1InitedTime, v2InitedTime) + rand.nextInt(100);","private long v3InitedTime=Math.max(v1InitedTime,v2InitedTime) + rand.nextInt(100);
",0,10,10,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1094,"private final char[] buffer = new char[]{0, 0, '_'};","private final char[] buffer=new char[]{0,0,'_'};
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1095,"private Iterator<Map.Entry<Object, Traverser.Admin<S>>> barrierIterator;","private Iterator<Map.Entry<Object,Traverser.Admin<S>>> barrierIterator;
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1096,private Class<? extends MatchStep.MatchAlgorithm> matchAlgorithmClass = MatchStep.CountMatchAlgorithm.class;,"private Class<? extends MatchStep.MatchAlgorithm> matchAlgorithmClass=MatchStep.CountMatchAlgorithm.class;
",0,0,5,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, TypeLiteral-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1097,private String channelizer = Channelizer.WebSocketChannelizer.class.getName();,"private String channelizer=Channelizer.WebSocketChannelizer.class.getName();
",0,0,5,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1098,public String channelizer = Channelizer.WebSocketChannelizer.class.getName();,"/** 
 * The constructor for the channel that connects to the server. This value should be the fully qualified class name of a Gremlin Driver  {@link Channelizer} implementation.  By default this value is set to{@link Channelizer.WebSocketChannelizer}.
 */
public String channelizer=Channelizer.WebSocketChannelizer.class.getName();
",0,0,5,,"Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
QualifiedName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
"
1099,"private final Supplier<Graph> graphGetter = () -> server.getServerGremlinExecutor().getGraphManager().getGraph(""graph"");","private final Supplier<Graph> graphGetter=() -> server.getServerGremlinExecutor().getGraphManager().getGraph(""graph"");
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1100,protected final ThreadLocal<Neo4jTx> threadLocalTx = ThreadLocal.withInitial(() -> null);,"protected final ThreadLocal<Neo4jTx> threadLocalTx=ThreadLocal.withInitial(() -> null);
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(LambdaExpression-body, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1101,Http11Connection con = new Http11Connection(null).serverMode();,"Http11Connection con=new Http11Connection(null).serverMode();
",0,0,5,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1102,private final boolean geronimoTxMgr = GeronimoTransactionManager.class.isInstance(OpenEJB.getTransactionManager());,"private final boolean geronimoTxMgr=GeronimoTransactionManager.class.isInstance(OpenEJB.getTransactionManager());
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1103,"private Duration interval = new Duration(5 * 60, SECONDS);","private Duration interval=new Duration(5 * 60,SECONDS);
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1104,"private final Map<Class<?>, Map<Class<?>, ? super Object>> map =","private final Map<Class<?>,Map<Class<?>,? super Object>> map=new HashMap<>();
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1105,"protected QName [] activeDelegations = {new QName(Base.SCA11_TUSCANY_NS, ""binding.local""),","protected QName[] activeDelegations={new QName(Base.SCA11_TUSCANY_NS,""binding.local""),new QName(Base.SCA11_NS,""binding.ws"")};
",0,0,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1106,"protected final String TEXT_1236 = NL + ""\t"" + NL + ""\tprotected int hash = -1;"" + NL + """" + NL + ""\t"" + NL + ""\tpublic int getHash()"" + NL + ""\t{"" + NL + ""\t\tif (hash == -1)"" + NL + ""\t\t{"" + NL + ""\t\t\tObject theKey = getKey();"" + NL + ""\t\t\thash = (theKey == null ? 0 : theKey.hashCode());"" + NL + ""\t\t}"" + NL + ""\t\treturn hash;"" + NL + ""\t}"" + NL + """" + NL + ""\t"" + NL + ""\tpublic void setHash(int hash)"" + NL + ""\t{"" + NL + ""\t\tthis.hash = hash;"" + NL + ""\t}"" + NL + """" + NL + ""\t"" + NL + ""\tpublic Object getKey()"" + NL + ""\t{"" + NL + ""  \t"";","protected final String TEXT_1236=NL + ""\t/**"" + NL+ ""\t * <!-- begin-user-doc -->""+ NL+ ""\t * <!-- end-user-doc -->""+ NL+ ""\t * @generated""+ NL+ ""\t */""+ NL+ ""\tprotected int hash = -1;""+ NL+ """"+ NL+ ""\t/**""+ NL+ ""\t * <!-- begin-user-doc -->""+ NL+ ""\t * <!-- end-user-doc -->""+ NL+ "" \t * @generated""+ NL+ "" \t */""+ NL+ ""\tpublic int getHash()""+ NL+ ""\t{""+ NL+ ""\t\tif (hash == -1)""+ NL+ ""\t\t{""+ NL+ ""\t\t\tObject theKey = getKey();""+ NL+ ""\t\t\thash = (theKey == null ? 0 : theKey.hashCode());""+ NL+ ""\t\t}""+ NL+ ""\t\treturn hash;""+ NL+ ""\t}""+ NL+ """"+ NL+ ""\t/**""+ NL+ "" \t * <!-- begin-user-doc -->""+ NL+ "" \t * <!-- end-user-doc -->""+ NL+ "" \t * @generated""+ NL+ "" \t */""+ NL+ ""\tpublic void setHash(int hash)""+ NL+ ""\t{""+ NL+ ""\t\tthis.hash = hash;""+ NL+ ""\t}""+ NL+ """"+ NL+ ""\t/**""+ NL+ "" \t * <!-- begin-user-doc -->""+ NL+ "" \t * <!-- end-user-doc -->""+ NL+ "" \t * @generated""+ NL+ "" \t */""+ NL+ ""\tpublic Object getKey()""+ NL+ ""\t{""+ NL+ ""  \t"";
",0,78,84,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1107,"private final Map<String, LogEntry.Level> defaultLogArguments = ImmutableMap.of(""ROOT"", LogEntry.Level.DEBUG);","private final Map<String,LogEntry.Level> defaultLogArguments=ImmutableMap.of(""ROOT"",LogEntry.Level.DEBUG);
",0,0,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1108,"private Logger logger = Logger.getLogger(ActionEndAbstract.class, IComponent.Id.JD.name());","private Logger logger=Logger.getLogger(ActionEndAbstract.class,IComponent.Id.JD.name());
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1109,"private String[] daemon_list = { Daemon.Ag.lcname(), Daemon.Or.lcname(), Daemon.Pm.lcname(), Daemon.Rm.lcname(), Daemon.Sm.lcname(), Daemon.Ws.lcname(), Daemon.Br.lcname(), Daemon.Db.lcname() };","private String[] daemon_list={Daemon.Ag.lcname(),Daemon.Or.lcname(),Daemon.Pm.lcname(),Daemon.Rm.lcname(),Daemon.Sm.lcname(),Daemon.Ws.lcname(),Daemon.Br.lcname(),Daemon.Db.lcname()};
",0,0,20,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1110,"String api_classpath = ducc_home + ""/lib/uima-ducc-cli.jar"" + "":"" + System.getProperty(""java.class.path"");","String api_classpath=ducc_home + ""/lib/uima-ducc-cli.jar"" + "":""+ System.getProperty(""java.class.path"");
",0,0,8,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1111,private long DOWN_AFTER_SECONDS = WebServerComponent.updateIntervalSecondsNormal + down_fudge;,"private long DOWN_AFTER_SECONDS=WebServerComponent.updateIntervalSecondsNormal + down_fudge;
",0,0,5,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1112,long ts = System.currentTimeMillis() - ( 24 * 60 * 60 * 1000 );,"long ts=System.currentTimeMillis() - (24 * 60 * 60* 1000);
",0,0,8,,"PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ParenthesizedExpression-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-extendedOperands, ParenthesizedExpression-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-extendedOperands, ParenthesizedExpression-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1113,@NotNull private final ObjectReader entityUpdateReader = entityUpdateMapper.readerForUpdating(this);,"@NotNull private final ObjectReader entityUpdateReader=entityUpdateMapper.readerForUpdating(this);
",0,0,8,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1114,private Predicate<IRequestHandler> protectedFilter = RenderPageRequestHandler.class::isInstance;,"private Predicate<IRequestHandler> protectedFilter=RenderPageRequestHandler.class::isInstance;
",0,0,6,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, ExpressionMethodReference-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ExpressionMethodReference-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1115,"private XMLString newLine = new XMLString(new char[] { '\n' }, 0, 1);","private XMLString newLine=new XMLString(new char[]{'\n'},0,1);
",0,0,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1116,"private final SimpleLocator fXMLLocator = new SimpleLocator(null, null, -1, -1, -1);","/** 
 * Simple Locator. 
 */
private final SimpleLocator fXMLLocator=new SimpleLocator(null,null,-1,-1,-1);
",0,0,10,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
NumberLiteral(PrefixExpression-operand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
NumberLiteral(PrefixExpression-operand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
NumberLiteral(PrefixExpression-operand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
1117,private final SchemaTypeImpl[] _typeArray = new SchemaTypeImpl[SchemaType.BTC_LAST_BUILTIN + 1 +,"private final SchemaTypeImpl[] _typeArray=new SchemaTypeImpl[SchemaType.BTC_LAST_BUILTIN + 1 + BTC_LAST_XQUERY - BTC_FIRST_XQUERY + 1];
",0,0,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-leftOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, InfixExpression-leftOperand, InfixExpression-leftOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1118,protected DecimalFormat decimalFormat = decimalFormats[precision];,"/** 
 * Current double value formatter
 */
protected DecimalFormat decimalFormat=decimalFormats[precision];
",0,0,5,,"Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(ArrayAccess-array, VariableDeclarationFragment-initializer, ),
SimpleName(ArrayAccess-index, VariableDeclarationFragment-initializer, ),
"
1119,"protected final byte[] padding = new byte[] {(byte) 0x28, (byte) 0xBF, (byte) 0x4E, (byte) 0x5E,","/** 
 * Padding for passwords. 
 */
protected final byte[] padding=new byte[]{(byte)0x28,(byte)0xBF,(byte)0x4E,(byte)0x5E,(byte)0x4E,(byte)0x75,(byte)0x8A,(byte)0x41,(byte)0x64,(byte)0x00,(byte)0x4E,(byte)0x56,(byte)0xFF,(byte)0xFA,(byte)0x01,(byte)0x08,(byte)0x2E,(byte)0x2E,(byte)0x00,(byte)0xB6,(byte)0xD0,(byte)0x68,(byte)0x3E,(byte)0x80,(byte)0x2F,(byte)0x0C,(byte)0xA9,(byte)0xFE,(byte)0x64,(byte)0x53,(byte)0x69,(byte)0x7A};
",0,0,15,,"Modifier(),
Modifier(),
PrimitiveType(ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
PrimitiveType(CastExpression-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, ),
NumberLiteral(CastExpression-expression, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, ),
PrimitiveType(CastExpression-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, ),
NumberLiteral(CastExpression-expression, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, ),
PrimitiveType(CastExpression-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, ),
NumberLiteral(CastExpression-expression, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, ),
PrimitiveType(CastExpression-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, ),
NumberLiteral(CastExpression-expression, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, ),
"
1120,private int maxBitmapResolution = PCL_RESOLUTIONS[PCL_RESOLUTIONS.length - 1];,"private int maxBitmapResolution=PCL_RESOLUTIONS[PCL_RESOLUTIONS.length - 1];
",0,0,6,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(ArrayAccess-array, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-leftOperand, ArrayAccess-index, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ArrayAccess-index, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1121,private boolean syncRequestProcessorEnabled = this.self.getSyncEnabled();,"/** 
 * Enable since request processor for writing txnlog to disk and take periodic snapshot. Default is ON.
 */
private boolean syncRequestProcessorEnabled=this.self.getSyncEnabled();
",0,0,6,,"Modifier(),
PrimitiveType(),
SimpleName(VariableDeclarationFragment-name, ),
ThisExpression(FieldAccess-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(FieldAccess-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
"
1122,"protected final Map<Predicate<? super I>,Function<? super I,? extends O>> tests = new LinkedHashMap<Predicate<? super I>,Function<? super I,? extends O>>();","protected final Map<Predicate<? super I>,Function<? super I,? extends O>> tests=new LinkedHashMap<Predicate<? super I>,Function<? super I,? extends O>>();
",1,2995,15,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1123,"private final List<String> guarded = Collections.unmodifiableList(Arrays.asList(""invoke"", ""getAttribute"", ""getAttributes"", ""setAttribute"", ""setAttributes""));","private final List<String> guarded=Collections.unmodifiableList(Arrays.asList(""invoke"",""getAttribute"",""getAttributes"",""setAttribute"",""setAttributes""));
",1,16447,14,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1124,"private Point.Tx<N> selStartTx = null, selEndTx = null;","private Point.Tx<N> selStartTx=null, selEndTx=null;
",1,17864,7,,"Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1125,"private final Path ecDir = new Path(""/"" + this.getClass().getSimpleName());","private final Path ecDir=new Path(""/"" + this.getClass().getSimpleName());
",1,6248,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(MethodInvocation-expression, MethodInvocation-expression, InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1126,"public boolean[] usedInputPorts = new boolean[] { false, false, false, false, false };","public boolean[] usedInputPorts=new boolean[]{false,false,false,false,false};
",1,30,11,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1127,"private final Iterator<Map.Entry<String, Object>> i = bindings.entrySet().iterator();","private final Iterator<Map.Entry<String,Object>> i=bindings.entrySet().iterator();
",1,355,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1128,private final String payloadString = new String(new byte[8*1024]);,"private final String payloadString=new String(new byte[8 * 1024]);
",1,48,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, ArrayCreation-dimensions, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ArrayCreation-dimensions, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1129,"private final Table<DAGSetupEvent.Type, DAGSetupPlugin, EventHandler<DAGSetupEvent>> table = HashBasedTable.create();","private final Table<DAGSetupEvent.Type,DAGSetupPlugin,EventHandler<DAGSetupEvent>> table=HashBasedTable.create();
",1,2,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1130,private final Promise<?> terminationPromise = ImmediateEventExecutor.INSTANCE.newPromise();,"private final Promise<?> terminationPromise=ImmediateEventExecutor.INSTANCE.newPromise();
",1,13,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1131,"private final MappingSet MAIN_MAPPING = new MappingSet( (String) null, null, ClassGenerator.DEFAULT_SCALAR_MAP, ClassGenerator.DEFAULT_SCALAR_MAP);","private final MappingSet MAIN_MAPPING=new MappingSet((String)null,null,ClassGenerator.DEFAULT_SCALAR_MAP,ClassGenerator.DEFAULT_SCALAR_MAP);
",1,43,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, CastExpression-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(CastExpression-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1132,public final Class<? extends ObjectRepository<?>>[] m_objectRepositories;,"public final Class<? extends ObjectRepository<?>>[] m_objectRepositories;
",1,361,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1133,"private Reference<Map<Class<?>, Object>> extensions = new BasicReference<Map<Class<?>, Object>>(Maps.<Class<?>, Object>newConcurrentMap());","private Reference<Map<Class<?>,Object>> extensions=new BasicReference<Map<Class<?>,Object>>(Maps.<Class<?>,Object>newConcurrentMap());
",1,403,17,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, MethodInvocation-typeArguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
WildcardType(ParameterizedType-typeArguments, MethodInvocation-typeArguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1134,"private SshPollValue val = new SshPollValue(null, 123, ""mystdout"", ""mystderr"");","private SshPollValue val=new SshPollValue(null,123,""mystdout"",""mystderr"");
",1,24,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1135,"private final Map<Module,Set<Union2<Dependency,InvalidException>>> moduleProblemsWithoutNeeds = new HashMap<Module,Set<Union2<Dependency,InvalidException>>>(100);","private final Map<Module,Set<Union2<Dependency,InvalidException>>> moduleProblemsWithoutNeeds=new HashMap<Module,Set<Union2<Dependency,InvalidException>>>(100);
",1,2,16,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1136,"final String idSeed = new String(""Seed"" + new byte[1024]);","final String idSeed=new String(""Seed"" + new byte[1024]);
",1,2,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayCreation-dimensions, InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1137,private final HashSet<Integer> processed = CHECK_REDELIVERY ? new HashSet<Integer>(10000) : null;,"private final HashSet<Integer> processed=CHECK_REDELIVERY ? new HashSet<Integer>(10000) : null;
",1,22,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ConditionalExpression-elseExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1138,protected char buf[] = new char[Runtime.getRuntime().freeMemory() > 1000000L ? READ_CHUNK_SIZE : 256];,"protected char buf[]=new char[Runtime.getRuntime().freeMemory() > 1000000L ? READ_CHUNK_SIZE : 256];
",1,318,12,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, InfixExpression-leftOperand, ConditionalExpression-expression, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-leftOperand, ConditionalExpression-expression, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ConditionalExpression-expression, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ConditionalExpression-expression, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ConditionalExpression-thenExpression, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ConditionalExpression-elseExpression, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1139,"private Type jsonType = new TypeToken<Map<String, String>>() {}.getType();","private Type jsonType=new TypeToken<Map<String,String>>(){
}
.getType();
",1,54,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
AnonymousClassDeclaration(ClassInstanceCreation-anonymousClassDeclaration, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1140,"private final ValueAndTimestamp<byte[]> there = ValueAndTimestamp.make(""there"".getBytes(), 97L);","private final ValueAndTimestamp<byte[]> there=ValueAndTimestamp.make(""there"".getBytes(),97L);
",1,75,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1141,"protected final AMutableBinary aBinary = new AMutableBinary(new byte[0], 0, 0);","protected final AMutableBinary aBinary=new AMutableBinary(new byte[0],0,0);
",1,3,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayCreation-dimensions, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1142,private final ImmutableBytesWritable currentDate = new ImmutableBytesWritable(new byte[PDate.INSTANCE.getByteSize()]);,"private final ImmutableBytesWritable currentDate=new ImmutableBytesWritable(new byte[PDate.INSTANCE.getByteSize()]);
",1,11,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, ArrayCreation-dimensions, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayCreation-dimensions, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1143,"final int NUM_TASKS = Math.min(500 * Runtime.getRuntime().availableProcessors(), 1000);","final int NUM_TASKS=Math.min(500 * Runtime.getRuntime().availableProcessors(),1000);
",1,10,10,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1144,private final ArrayList<Service> services = new ArrayList<Service>(CONSUMER_COUNT + PRODUCER_COUNT);,"private final ArrayList<Service> services=new ArrayList<Service>(CONSUMER_COUNT + PRODUCER_COUNT);
",1,8,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1145,private final HashSet<Integer> processed = CHECK_REDELIVERY ? new HashSet<Integer>(,"private final HashSet<Integer> processed=CHECK_REDELIVERY ? new HashSet<Integer>(10000) : null;
",1,1,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1146,"private final _Lazy<Map<String, Object>> map = _Lazy.threadSafe(this::createMap);","private final _Lazy<Map<String,Object>> map=_Lazy.threadSafe(this::createMap);
",1,7,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(ExpressionMethodReference-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ExpressionMethodReference-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1147,private final LinkedListIterator<E>[] cachedIters = new LinkedListIterator[levels.length];,"private final LinkedListIterator<E>[] cachedIters=new LinkedListIterator[levels.length];
",1,53,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1148,"private final List<String> clients = IntStream.range(0, 3).mapToObj(Integer::toString).collect(Collectors.toList());","private final List<String> clients=IntStream.range(0,3).mapToObj(Integer::toString).collect(Collectors.toList());
",1,65,15,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ExpressionMethodReference-expression, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ExpressionMethodReference-name, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1149,"private Map<TableName, ? extends Collection<String>> tableCFsMap = null;","private Map<TableName,? extends Collection<String>> tableCFsMap=null;
",1,139,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1150,"private final MessageScope.Local<Long> countMessageScopeIn = MessageScope.Local.of(__::inE, (m,e) -> m * Math.round(((Double) e.values(""weight"").next()) * 10));","private final MessageScope.Local<Long> countMessageScopeIn=MessageScope.Local.of(__::inE,(m,e) -> m * Math.round(((Double)e.values(""weight"").next()) * 10));
",1,17,20,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ExpressionMethodReference-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ExpressionMethodReference-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, LambdaExpression-body, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-rightOperand, LambdaExpression-body, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, LambdaExpression-body, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, CastExpression-type, ParenthesizedExpression-expression, InfixExpression-leftOperand, MethodInvocation-arguments, InfixExpression-rightOperand, LambdaExpression-body, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, CastExpression-expression, ParenthesizedExpression-expression, InfixExpression-leftOperand, MethodInvocation-arguments, InfixExpression-rightOperand, LambdaExpression-body, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, CastExpression-expression, ParenthesizedExpression-expression, InfixExpression-leftOperand, MethodInvocation-arguments, InfixExpression-rightOperand, LambdaExpression-body, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, CastExpression-expression, ParenthesizedExpression-expression, InfixExpression-leftOperand, MethodInvocation-arguments, InfixExpression-rightOperand, LambdaExpression-body, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, CastExpression-expression, ParenthesizedExpression-expression, InfixExpression-leftOperand, MethodInvocation-arguments, InfixExpression-rightOperand, LambdaExpression-body, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, InfixExpression-rightOperand, LambdaExpression-body, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1151,"ObjectNameBuilder objectNameBuilder1 = ObjectNameBuilder.create(ActiveMQDefaultConfiguration.getDefaultJmxDomain(), ""live"", true);","ObjectNameBuilder objectNameBuilder1=ObjectNameBuilder.create(ActiveMQDefaultConfiguration.getDefaultJmxDomain(),""live"",true);
",1,2,8,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1152,"private final StringBuilder sqlQuery = new StringBuilder().append(""rate.id as id, "").append(""rate.name as name, "")","private final StringBuilder sqlQuery=new StringBuilder().append(""rate.id as id, "").append(""rate.name as name, "").append(""rate.is_base_lending_rate as isBaseLendingRate, "").append(""rate.is_active as isActive, "").append(""crappu.username as createdBy, "").append(""rate.created_date as createdOn, "").append(""moappu.username as modifiedBy, "").append(""rate.lastmodified_date as modifiedOn "").append(""FROM m_floating_rates as rate "").append(""LEFT JOIN m_appuser as crappu on rate.createdby_id = crappu.id "").append(""LEFT JOIN m_appuser as moappu on rate.lastmodifiedby_id = moappu.id "");
",1,333,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1153,"private Edge<KT, Projection<KB, VVB, VVT, EV>> edge = new Edge<>(null, null, projection);","private Edge<KT,Projection<KB,VVB,VVT,EV>> edge=new Edge<>(null,null,projection);
",1,9,13,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1154,"protected Location location = new LocationBuilder().scope(LocationScope.REGION).id(""us-east-1"").description(""us-east-1"")","protected Location location=new LocationBuilder().scope(LocationScope.REGION).id(""us-east-1"").description(""us-east-1"").parent(provider).build();
",1,93,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1155,"Type mapType = new TypeToken<Map<String, Map<String, String>>>() {}.getType();","Type mapType=new TypeToken<Map<String,Map<String,String>>>(){
}
.getType();
",1,2,10,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
AnonymousClassDeclaration(ClassInstanceCreation-anonymousClassDeclaration, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1156,"private @Nullable Map<TupleTag<?>, Coder<?>> outputCoders;","private @Nullable Map<TupleTag<?>,Coder<?>> outputCoders;
",1,276,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1157,"@Mock private PTransform<PCollection<Integer>, PCollection<String>> delegate;","@Mock private PTransform<PCollection<Integer>,PCollection<String>> delegate;
",1,54,8,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1158,"private ConcurrentMap<Long, ConcurrentMap<Contextual<?>, Instance<?>>> storages = new ConcurrentHashMap<Long, ConcurrentMap<Contextual<?>, Instance<?>>>();","/** 
 * key == either the stepExecutionId or the jobExecutionId
 */
private ConcurrentMap<Long,ConcurrentMap<Contextual<?>,Instance<?>>> storages=new ConcurrentHashMap<Long,ConcurrentMap<Contextual<?>,Instance<?>>>();
",1,5,16,,"Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
"
1159,"private final Icon ICON_ASCENDING = new ImageIcon(ImageUtilities.loadImage(""org/netbeans/modules/openide/explorer/columnsSortedAsc.gif"", true));","private final Icon ICON_ASCENDING=new ImageIcon(ImageUtilities.loadImage(""org/netbeans/modules/openide/explorer/columnsSortedAsc.gif"",true));
",1,111,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1160,"private final LoadingCache<String, List<String>> reverseLookupCache = EasyMock.createStrictMock(LoadingCache.class);","private final LoadingCache<String,List<String>> reverseLookupCache=EasyMock.createStrictMock(LoadingCache.class);
",1,10,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1161,"private final LinkedHashMap<Class<?>, Class<? extends Serializer<?>>> defaultSerializerClasses;","private final LinkedHashMap<Class<?>,Class<? extends Serializer<?>>> defaultSerializerClasses;
",1,14,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1162,"private List<CatalogItem.CatalogBundle> libraries = ImmutableList.<CatalogItem.CatalogBundle>of(new CatalogBundleDto(name, version, null));","private List<CatalogItem.CatalogBundle> libraries=ImmutableList.<CatalogItem.CatalogBundle>of(new CatalogBundleDto(name,version,null));
",1,8,11,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, MethodInvocation-typeArguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1163,"protected final Map<? extends Sensor<?>, ? extends Sensor<?>> propagating;","protected final Map<? extends Sensor<?>,? extends Sensor<?>> propagating;
",1,2,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1164,"private GString gstring = new GStringImpl(new Object[0], new String[] {gstringVal});","private GString gstring=new GStringImpl(new Object[0],new String[]{gstringVal});
",1,27,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayCreation-dimensions, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayInitializer-expressions, ArrayCreation-initializer, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1165,"private BufferInfo tempInfo = new BufferInfo(null, -1, -1);","private BufferInfo tempInfo=new BufferInfo(null,-1,-1);
",1,1,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1166,protected final Class<T> clazz = (Class<T>) ((ParameterizedType) getClass().getGenericSuperclass()).getActualTypeArguments()[0];,"protected final Class<T> clazz=(Class<T>)((ParameterizedType)getClass().getGenericSuperclass()).getActualTypeArguments()[0];
",1,36,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, CastExpression-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, CastExpression-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, CastExpression-type, ParenthesizedExpression-expression, MethodInvocation-expression, ArrayAccess-array, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, ArrayAccess-array, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, CastExpression-expression, ParenthesizedExpression-expression, MethodInvocation-expression, ArrayAccess-array, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayAccess-array, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayAccess-index, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1167,"private final Object[] invalidValues  = { """", ""12ab"", ""abcd"", ""-12ab"", (Double.MAX_VALUE + Double.MAX_VALUE), -(Double.MAX_VALUE+Double.MAX_VALUE)};","private final Object[] invalidValues={"""",""12ab"",""abcd"",""-12ab"",(Double.MAX_VALUE + Double.MAX_VALUE),-(Double.MAX_VALUE + Double.MAX_VALUE)};
",1,7,13,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-leftOperand, ParenthesizedExpression-expression, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-rightOperand, ParenthesizedExpression-expression, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-leftOperand, ParenthesizedExpression-expression, PrefixExpression-operand, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-rightOperand, ParenthesizedExpression-expression, PrefixExpression-operand, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1168,"private ConfigKey<Integer> intKeyWithDefault = new BasicConfigKey<Integer>(Integer.class, ""ckey"", ""c key"", 1);","private ConfigKey<Integer> intKeyWithDefault=new BasicConfigKey<Integer>(Integer.class,""ckey"",""c key"",1);
",1,22,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1169,"private final PaneInfo intervalWindowPane = PaneInfo.createPane(false, false, Timing.LATE, 3, 2);","private final PaneInfo intervalWindowPane=PaneInfo.createPane(false,false,Timing.LATE,3,2);
",1,14,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1170,"private final List<Map<SecurityEventConstants.Event, Map<Assertion, List<Assertable>>>> assertionStateMap;","private final List<Map<SecurityEventConstants.Event,Map<Assertion,List<Assertable>>>> assertionStateMap;
",1,3,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1171,"private final HashMap<String,Set<OScope.CorrelationSet>> _nonIntitiatingCorrelationSets = new HashMap<String,Set<OScope.CorrelationSet>>();","/** 
 * The set of CorrelationSets that may be used as a match criteria, organized by  {@link Operation} 
 */
private final HashMap<String,Set<OScope.CorrelationSet>> _nonIntitiatingCorrelationSets=new HashMap<String,Set<OScope.CorrelationSet>>();
",1,1,11,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
"
1172,"protected List<? extends Map<String, ?>> assertions = ImmutableList.of();","protected List<? extends Map<String,?>> assertions=ImmutableList.of();
",1,21,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1173,"private TimeZone customPlus = new SimpleTimeZone(83 * 60 * 1000, ""test"");","private TimeZone customPlus=new SimpleTimeZone(83 * 60 * 1000,""test"");
",1,3,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-extendedOperands, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1174,"Schema rec = SchemaBuilder.record(""test.Rec"").fields().name(""a"").type().intType().intDefault(1).name(""b"").type()","Schema rec=SchemaBuilder.record(""test.Rec"").fields().name(""a"").type().intType().intDefault(1).name(""b"").type().longType().noDefault().endRecord();
",1,33,15,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1175,"private final ConcurrentMap<String, MethodDescriptor<Object[], Object>> methods = new ConcurrentHashMap<>();","private final ConcurrentMap<String,MethodDescriptor<Object[],Object>> methods=new ConcurrentHashMap<>();
",1,5,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1176,"private final TestRecord record = TestRecord.newBuilder().setName(""foo"").setKind(Kind.FOO)","private final TestRecord record=TestRecord.newBuilder().setName(""foo"").setKind(Kind.FOO).setArrayOfLongs(Arrays.asList(42L,424L,4242L)).setHash(new MD5(new byte[]{4,2,4,2})).setNullableHash(null).build();
",1,24,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1177,"Protocol protocol = Protocol.parse("""" + ""{\""protocol\"": \""Minimal\"", "" + ""\""messages\"": { \""m\"": {""","Protocol protocol=Protocol.parse("""" + ""{\""protocol\"": \""Minimal\"", "" + ""\""messages\"": { \""m\"": {""+ ""   \""request\"": [{\""name\"": \""x\"", \""type\"": \""int\""}], ""+ ""   \""response\"": \""int\""} } }"");
",1,3,7,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1178,"protected byte[] majorRangeFromRow = null, majorRangeToRow = null;","protected byte[] majorRangeFromRow=null, majorRangeToRow=null;
",1,4,7,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1179,"private final Schema INTSCHEMA = new Schema.Parser().parse(""{\""type\"":\""record\"", "" + ""\""name\"":\""myRecord\"", ""","private final Schema INTSCHEMA=new Schema.Parser().parse(""{\""type\"":\""record\"", "" + ""\""name\"":\""myRecord\"", "" + ""\""fields\"":[ ""+ ""{\""name\"":\""value\"",\""type\"":\""int\""} ""+ ""]}"");
",1,4,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1180,"protected final String TEXT_41 = NL + NL + ""\t"" + NL + ""\t"";","protected final String TEXT_41=NL + NL + ""\t/**""+ NL+ ""\t * The package namespace name.""+ NL+ ""\t * <!-- begin-user-doc -->""+ NL+ ""\t * <!-- end-user-doc -->""+ NL+ ""\t * @generated""+ NL+ ""\t */""+ NL+ ""\t"";
",1,8,19,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1181,"public final JettyServer server = new JettyServer(TESTING_PATH + getServiceRepo(), false);","@Rule public final JettyServer server=new JettyServer(TESTING_PATH + getServiceRepo(),false);
",1,1,8,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
1182,private final GenericContainer<?> sink = new GenericContainer<>(DOCKER_IMAGE_NAME),"private final GenericContainer<?> sink=new GenericContainer<>(DOCKER_IMAGE_NAME).withCopyFileToContainer(MountableFile.forClasspathResource(""docker/conf/sink.conf""),""/opt/flume-config/flume.conf"").withEnv(""FLUME_AGENT_NAME"",""docker"");
",1,2,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1183,private PCollection<Long> output = mainInput.apply(ParDo.of(new TestDoFn()));,"private PCollection<Long> output=mainInput.apply(ParDo.of(new TestDoFn()));
",1,1,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1184,"@Nullable private final StreamOperatorWrapper<?, ?> firstOperatorWrapper;","@Nullable private final StreamOperatorWrapper<?,?> firstOperatorWrapper;
",1,17,7,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1185,private @Nullable Future<Void> executionSamplerFuture = null;,"private @Nullable Future<Void> executionSamplerFuture=null;
",1,16,6,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1186,private volatile @Nullable String processBundleId = null;,"private volatile @Nullable String processBundleId=null;
",1,2,6,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1187,"private Map<V, AdjacencyList<V>.Node> ops = new HashMap<V, AdjacencyList<V>.Node>();","private Map<V,AdjacencyList<V>.Node> ops=new HashMap<V,AdjacencyList<V>.Node>();
",1,7,12,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, QualifiedType-qualifier, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, QualifiedType-qualifier, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(QualifiedType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, QualifiedType-qualifier, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, QualifiedType-qualifier, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(QualifiedType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1188,"@Mock private KafkaConsumer<byte[], byte[]> consumer;","@Mock private KafkaConsumer<byte[],byte[]> consumer;
",1,161,8,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1189,"@Nonnull private final Function<Tuple3<File, JobID, BlobKey>, Boolean> putFunction;","@Nonnull private final Function<Tuple3<File,JobID,BlobKey>,Boolean> putFunction;
",1,11,10,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1190,"@JsonProperty public ConcurrentHashMap<ColumnTypeMetadata_v2.Key, ColumnTypeMetadata_v2> columnTypeInfo;","@JsonProperty public ConcurrentHashMap<ColumnTypeMetadata_v2.Key,ColumnTypeMetadata_v2> columnTypeInfo;
",1,2,6,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1191,@Captor private ArgumentCaptor<FnDataReceiver<WindowedValue<String>>> consumerCaptor;,"@Captor private ArgumentCaptor<FnDataReceiver<WindowedValue<String>>> consumerCaptor;
",1,1,7,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1192,"protected final Thread.UncaughtExceptionHandler handler = (t, e) -> log.error(""[{}] parse events has an error"", t.getName(), e);","protected final Thread.UncaughtExceptionHandler handler=(t,e) -> log.error(""[{}] parse events has an error"",t.getName(),e);
",1,12,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1193,"private final Map<TupleTag<?>, int[]> outputCollToOrdinals;","private final Map<TupleTag<?>,int[]> outputCollToOrdinals;
",1,1,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1194,"private final Function<UnboundedSource.UnboundedReader<InputT>, byte[]> mapFn;","private final Function<UnboundedSource.UnboundedReader<InputT>,byte[]> mapFn;
",1,1,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1195,"private final Map<Set<Class<? extends PipelineOptions>>, Registration<?>> combinedCache =","/** 
 * A cache storing a mapping from a set of interfaces to its registration record. 
 */
private final Map<Set<Class<? extends PipelineOptions>>,Registration<?>> combinedCache=Maps.newConcurrentMap();
",1,1,9,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
"
1196,"private final IntervalWindow first = new IntervalWindow(new Instant(0), new Instant(100_000L));","private final IntervalWindow first=new IntervalWindow(new Instant(0),new Instant(100_000L));
",1,2,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1197,"private final TupleTag<Integer> even = new TupleTag<Integer>(""even"") {};","private final TupleTag<Integer> even=new TupleTag<Integer>(""even""){
}
;
",1,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
AnonymousClassDeclaration(ClassInstanceCreation-anonymousClassDeclaration, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1198,"private PartitionSpec spec = PartitionSpec.builderFor(LOG_SCHEMA).identity(""date"").identity(""level"").build();","private PartitionSpec spec=PartitionSpec.builderFor(LOG_SCHEMA).identity(""date"").identity(""level"").build();
",1,6,11,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1199,@Rule public TestExecutorService executor = TestExecutors.from(Executors.newCachedThreadPool());,"@Rule public TestExecutorService executor=TestExecutors.from(Executors.newCachedThreadPool());
",1,1,8,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1200,@Rule public TestExecutorService executor = TestExecutors.from(Executors::newCachedThreadPool);,"@Rule public TestExecutorService executor=TestExecutors.from(Executors::newCachedThreadPool);
",1,1,8,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ExpressionMethodReference-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ExpressionMethodReference-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1201,"@Expose protected Map<String, List<Integer>> fieldsByName = null;","@Expose protected Map<String,List<Integer>> fieldsByName=null;
",1,85,8,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1202,@Rule public MockServerRule mockServerRule = new MockServerRule(this);,"@Rule public MockServerRule mockServerRule=new MockServerRule(this);
",1,1,6,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1203,"private final BookieId bookie1 = new BookieSocketAddress(""bookie1"", 3181).toBookieId();","private final BookieId bookie1=new BookieSocketAddress(""bookie1"",3181).toBookieId();
",1,11,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1204,"private final String subDomain = ""subdomain""+((int)(Math.random()*10000));","private final String subDomain=""subdomain"" + ((int)(Math.random() * 10000));
",1,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, ParenthesizedExpression-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, ParenthesizedExpression-expression, CastExpression-expression, ParenthesizedExpression-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ParenthesizedExpression-expression, CastExpression-expression, ParenthesizedExpression-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ParenthesizedExpression-expression, CastExpression-expression, ParenthesizedExpression-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1205,private @SetFromFlag Set<Object> tags = Sets.newLinkedHashSet();,"private @SetFromFlag Set<Object> tags=Sets.newLinkedHashSet();
",1,1,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1206,"private final Collection<ServiceCache<T>> caches = Sets.newSetFromMap(Maps.<ServiceCache<T>, Boolean>newConcurrentMap());","private final Collection<ServiceCache<T>> caches=Sets.newSetFromMap(Maps.<ServiceCache<T>,Boolean>newConcurrentMap());
",1,23,13,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, MethodInvocation-typeArguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, MethodInvocation-typeArguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1207,"private final String tostring = ""SubscriptionContext(""+Identifiers.getBase64IdFromValue(System.identityHashCode(this), 5)+"")"";","private final String tostring=""SubscriptionContext("" + Identifiers.getBase64IdFromValue(System.identityHashCode(this),5) + "")"";
",1,8,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(MethodInvocation-arguments, MethodInvocation-arguments, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1208,"private SingleValuedCmr<ExampleBBean_BBean, LicenseLocal> bCmr = new SingleValuedCmr<ExampleBBean_BBean, LicenseLocal>(this, ""b"", ExampleBBean_BBean.class, ""a"");","private SingleValuedCmr<ExampleBBean_BBean,LicenseLocal> bCmr=new SingleValuedCmr<ExampleBBean_BBean,LicenseLocal>(this,""b"",ExampleBBean_BBean.class,""a"");
",1,9,12,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1209,"private Map<Object, Object> argsMap = ImmutableMap.builder()","private Map<Object,Object> argsMap=ImmutableMap.builder().put(""byteParam"",(byte)1).put(""charParam"",'2').put(""shortParam"",(short)3).put(""intParam"",4).put(""longParam"",(long)5).put(""floatParam"",(float)6.0).put(""doubleParam"",7.0).put(""boolParam"",true).put(""stringParam"",""mystring"").build();
",1,1,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1210,private EnclosingDynamicClass enclosingDynamicClass = enclosingClass.new EnclosingDynamicClass();,"private EnclosingDynamicClass enclosingDynamicClass=enclosingClass.new EnclosingDynamicClass();
",1,1,5,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1211,"private final StringBuilder sqlBuilder = new StringBuilder("" t.id, ts.id as connectionId , "")","private final StringBuilder sqlBuilder=new StringBuilder("" t.id, ts.id as connectionId , "").append("" t.timezone_id as timezoneId , t.name,t.identifier, ts.schema_name as schemaName, ts.schema_server as schemaServer,"").append("" ts.schema_server_port as schemaServerPort, ts.schema_connection_parameters as schemaConnectionParameters, ts.auto_update as autoUpdate,"").append("" ts.schema_username as schemaUsername, ts.schema_password as schemaPassword , ts.pool_initial_size as initialSize,"").append("" ts.pool_validation_interval as validationInterval, ts.pool_remove_abandoned as removeAbandoned, ts.pool_remove_abandoned_timeout as removeAbandonedTimeout,"").append("" ts.pool_log_abandoned as logAbandoned, ts.pool_abandon_when_percentage_full as abandonedWhenPercentageFull, ts.pool_test_on_borrow as testOnBorrow,"").append("" ts.pool_max_active as poolMaxActive, ts.pool_min_idle as poolMinIdle, ts.pool_max_idle as poolMaxIdle,"").append("" ts.pool_suspect_timeout as poolSuspectTimeout, ts.pool_time_between_eviction_runs_millis as poolTimeBetweenEvictionRunsMillis,"").append("" ts.pool_min_evictable_idle_time_millis as poolMinEvictableIdleTimeMillis,"").append("" ts.deadlock_max_retries as maxRetriesOnDeadlock,"").append("" ts.deadlock_max_retry_interval as maxIntervalBetweenRetries "").append("" from tenants t left join tenant_server_connections ts "");
",1,10,6,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1212,int totalRate = (int) (5*(0.95*highThreshold));,"int totalRate=(int)(5 * (0.95 * highThreshold));
",1,1,6,,"PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, ParenthesizedExpression-expression, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-rightOperand, ParenthesizedExpression-expression, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, ParenthesizedExpression-expression, InfixExpression-rightOperand, ParenthesizedExpression-expression, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1213,"private GString emptyGstring = new GStringImpl(new Object[0], new String[] {""""});","private GString emptyGstring=new GStringImpl(new Object[0],new String[]{""""});
",1,5,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayCreation-dimensions, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1214,"private final Map<Class<?>, Class<?>[]> classCache = new HashMap<>();","private final Map<Class<?>,Class<?>[]> classCache=new HashMap<>();
",1,28,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1215,protected final RelProtoDataType protoRowType = a0 -> a0.builder(),"protected final RelProtoDataType protoRowType=a0 -> a0.builder().add(""ROWTIME"",SqlTypeName.TIMESTAMP).add(""ID"",SqlTypeName.INTEGER).add(""PRODUCT"",SqlTypeName.VARCHAR,10).add(""UNITS"",SqlTypeName.INTEGER).build();
",1,2,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1216,"final OffsetTime offsetTime = OffsetTime.of(9, 54, 1, 123_000_000, ZoneOffset.ofTotalSeconds(-120));","final OffsetTime offsetTime=OffsetTime.of(9,54,1,123_000_000,ZoneOffset.ofTotalSeconds(-120));
",1,13,12,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1217,"private final Map<String, Mapper> mapperCache = LRUCacheFactory.newLRUSoftCache(16, 1000, true);","private final Map<String,Mapper> mapperCache=LRUCacheFactory.newLRUSoftCache(16,1000,true);
",1,4,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1218,"public ParameterizedClass logger = new ParameterizedClass(BinAuditLogger.class.getSimpleName(), Collections.emptyMap());","public ParameterizedClass logger=new ParameterizedClass(BinAuditLogger.class.getSimpleName(),Collections.emptyMap());
",1,1,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1219,"final EvictableCache<ClassLoader, Map<String, List<MethodNode>>> cache = new StampedCommonCache<>(new WeakHashMap<>());","final EvictableCache<ClassLoader,Map<String,List<MethodNode>>> cache=new StampedCommonCache<>(new WeakHashMap<>());
",1,2,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1220,"Status sendStatus = Status.UNKNOWN, receiveStatus = Status.UNKNOWN;","Status sendStatus=Status.UNKNOWN, receiveStatus=Status.UNKNOWN;
",1,1,5,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1221,"private final javax.swing.ImageIcon warningIcon = new javax.swing.ImageIcon(getClass().getResource(""/org/netbeans/modules/subversion/resources/icons/warning.gif""));","private final javax.swing.ImageIcon warningIcon=new javax.swing.ImageIcon(getClass().getResource(""/org/netbeans/modules/subversion/resources/icons/warning.gif""));
",1,7,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1222,"private final Map<Class<? extends ConfiguredObject>, Map<State, Map<State, Method>>> _stateChangeMethods =","private final Map<Class<? extends ConfiguredObject>,Map<State,Map<State,Method>>> _stateChangeMethods=Collections.synchronizedMap(new HashMap<Class<? extends ConfiguredObject>,Map<State,Map<State,Method>>>());
",1,2,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1223,private Iterator<String> keys = ContextBase.this.keySet().iterator();,"private Iterator<String> keys=ContextBase.this.keySet().iterator();
",1,6,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(ThisExpression-qualifier, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1224,"public JButton resolve = new CayenneAction.CayenneToolbarButton(null, 0);","public JButton resolve=new CayenneAction.CayenneToolbarButton(null,0);
",1,2,6,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1225,private UIManager.LookAndFeelInfo[] lookAndFeels = UIManager.getInstalledLookAndFeels();,"private UIManager.LookAndFeelInfo[] lookAndFeels=UIManager.getInstalledLookAndFeels();
",1,2,6,,"Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1226,"private final String url = ChainsawAbout.class.getName().replace('.', '/')","private final String url=ChainsawAbout.class.getName().replace('.','/') + "".html"";
",1,5,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1227,"private final byte[] SERVER_FIRST_MESSAGE = Base64.getDecoder().decode(""PDE4OTYuNjk3MTcwOTUyQHBvc3RvZmZpY2UucmVzdG9uLm1jaS5uZXQ+"");","private final byte[] SERVER_FIRST_MESSAGE=Base64.getDecoder().decode(""PDE4OTYuNjk3MTcwOTUyQHBvc3RvZmZpY2UucmVzdG9uLm1jaS5uZXQ+"");
",1,47,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1228,"private final CapabilitySet m_regCapSet = new CapabilitySet(Collections.singletonList(Constants.OBJECTCLASS), false);","private final CapabilitySet m_regCapSet=new CapabilitySet(Collections.singletonList(Constants.OBJECTCLASS),false);
",1,17,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1229,"BackupSnapshotCommand bsc = new BackupSnapshotCommand(""http:","BackupSnapshotCommand bsc=new BackupSnapshotCommand(""http://secondary.Storage.Url"",101L,102L,103L,104L,105L,""vPath"",pool,""420fa39c-4ef1-a83c-fd93-46dc1ff515ae"",""sName"",""9012793e-0657-11e2-bebc-0050568b0057"",""7167e0b2-f5b0-11e1-8414-0050568b0057"",false,""vmName"",5);
",1,1,11,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1230,"private final SourceRecord initial = new SourceRecord(singletonMap(""initial"", 1), null, null, null, null);","private final SourceRecord initial=new SourceRecord(singletonMap(""initial"",1),null,null,null,null);
",1,2,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1231,"protected StateMachine2<KubernetesCluster.State, KubernetesCluster.Event, KubernetesCluster> _stateMachine = KubernetesCluster.State.getStateMachine();","protected StateMachine2<KubernetesCluster.State,KubernetesCluster.Event,KubernetesCluster> _stateMachine=KubernetesCluster.State.getStateMachine();
",1,1,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1232,private final SessionWindowedSerializer<?> sessionWindowedSerializer = new SessionWindowedSerializer<>(Serdes.String().serializer());,"private final SessionWindowedSerializer<?> sessionWindowedSerializer=new SessionWindowedSerializer<>(Serdes.String().serializer());
",1,3,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1233,"private DiskOfferingVO smallerDisdkOffering = prepareDiskOffering(5l * GiB_TO_BYTES, 1l, 1L, 2L);","private DiskOfferingVO smallerDisdkOffering=prepareDiskOffering(5l * GiB_TO_BYTES,1l,1L,2L);
",1,1,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1234,"protected boolean verbose = System.getProperty(""streamer.Link.debug"", ""false"").equals(""true"");;","/** 
 * Set to true to print debugging messages.
 */
protected boolean verbose=System.getProperty(""streamer.Link.debug"",""false"").equals(""true"");
",1,1,9,,"Modifier(),
PrimitiveType(),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
1235,"private final String[] validProperties = new String[] {null, """", ""a"", ""bc"", ""def"", ""g.h"", ""ij.k"", ""lm.no"", ""pqr.stu""};","private final String[] validProperties=new String[]{null,"""",""a"",""bc"",""def"",""g.h"",""ij.k"",""lm.no"",""pqr.stu""};
",1,1,16,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1236,"private final List<String> insertedOrder  =   Arrays.asList(""h"", ""d"", ""f"", ""x"", ""s"", ""p"", ""t"", ""w"", ""o"");","private final List<String> insertedOrder=Arrays.asList(""h"",""d"",""f"",""x"",""s"",""p"",""t"",""w"",""o"");
",1,1,16,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1237,"private final ThreadFactory threadFactoryBoss = new BasicThreadFactory.Builder().namingPattern(SparkGraphComputer.class.getSimpleName() + ""-boss"").build();","private final ThreadFactory threadFactoryBoss=new BasicThreadFactory.Builder().namingPattern(SparkGraphComputer.class.getSimpleName() + ""-boss"").build();
",1,4,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, InfixExpression-leftOperand, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1238,private final @NonNullable ReferenceQueue<V> refq = new ReferenceQueue<V>();,"private final @NonNullable ReferenceQueue<V> refq=new ReferenceQueue<V>();
",1,8,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1239,"private final @NonNullable ConcurrentMap<String,KeyedSoftReference<String,V>> map;","private final @NonNullable ConcurrentMap<String,KeyedSoftReference<String,V>> map;
",1,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1240,final boolean[] preventingMessageProcessing = new boolean[] {false};,"final boolean[] preventingMessageProcessing=new boolean[]{false};
",1,2,7,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1241,final double u = 2.0 / 3.0 * (Math.sqrt(2.0) - 1.0);,"/** 
 * The coefficient to calculate control points of Bezier curves
 */
final double u=2.0 / 3.0 * (Math.sqrt(2.0) - 1.0);
",1,2,9,,"Modifier(),
PrimitiveType(),
SimpleName(VariableDeclarationFragment-name, ),
NumberLiteral(InfixExpression-leftOperand, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
NumberLiteral(InfixExpression-rightOperand, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, ),
NumberLiteral(MethodInvocation-arguments, InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, ),
NumberLiteral(InfixExpression-rightOperand, ParenthesizedExpression-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, ),
"
1242,private double removeX = infData[0][0];,"private double removeX=infData[0][0];
",1,1,6,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(ArrayAccess-array, ArrayAccess-array, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayAccess-index, ArrayAccess-array, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayAccess-index, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1243,"String _inputs[], _outputs[];","String _inputs[], _outputs[];
",1,1,5,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
"
1244,private final int minRange = (int) Math.floor(PoissonSampler.PIVOT - 2);,"/** 
 * The minimum of the range of the mean 
 */
private final int minRange=(int)Math.floor(PoissonSampler.PIVOT - 2);
",1,2,9,,"Modifier(),
Modifier(),
PrimitiveType(),
SimpleName(VariableDeclarationFragment-name, ),
PrimitiveType(CastExpression-type, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, CastExpression-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, CastExpression-expression, VariableDeclarationFragment-initializer, ),
QualifiedName(InfixExpression-leftOperand, MethodInvocation-arguments, CastExpression-expression, VariableDeclarationFragment-initializer, ),
NumberLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, CastExpression-expression, VariableDeclarationFragment-initializer, ),
"
1245,"private LTable<String, Integer> lt1 = Lambda.wrap(MemPipeline.typedTableOf(tableOf(strings(), ints()),","private LTable<String,Integer> lt1=Lambda.wrap(MemPipeline.typedTableOf(tableOf(strings(),ints()),""a"",2,""a"",3,""b"",5,""c"",7,""c"",11,""c"",13,""c"",13));
",1,1,12,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1246,"private boolean forceFork = Boolean.getBoolean(Compiler.class.getName() + ""-fork"");","private boolean forceFork=Boolean.getBoolean(Compiler.class.getName() + ""-fork"");
",1,1,8,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1247,"final String[] SEMI_AUTO_RESOURCES = {RESOURCES[0], RESOURCES[1]};","final String[] SEMI_AUTO_RESOURCES={RESOURCES[0],RESOURCES[1]};
",1,2,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(ArrayAccess-array, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayAccess-index, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayAccess-array, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayAccess-index, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1248,IoBuffer buffer = IoBuffer.allocate(64 * 1024 - 42);,"IoBuffer buffer=IoBuffer.allocate(64 * 1024 - 42);
",1,1,7,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1249,"private final Tracer tracer = new JaegerTracer.Builder(""tracer-jaxrs"")","private final Tracer tracer=new JaegerTracer.Builder(""tracer-jaxrs"").withSampler(new ConstSampler(true)).withReporter(REPORTER).build();
",1,7,6,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1250,private ByteValue forward = new ByteValue((byte) (EdgeOrder.FORWARD.getBitmask() << 2));,"private ByteValue forward=new ByteValue((byte)(EdgeOrder.FORWARD.getBitmask() << 2));
",1,21,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, InfixExpression-leftOperand, ParenthesizedExpression-expression, CastExpression-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ParenthesizedExpression-expression, CastExpression-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ParenthesizedExpression-expression, CastExpression-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1251,"private final RepositoryMetadata repo = new RepositoryMetadata(SimpleRepository.class, new EntityMetadata(Simple.class, ""Simple"", Long.class));","private final RepositoryMetadata repo=new RepositoryMetadata(SimpleRepository.class,new EntityMetadata(Simple.class,""Simple"",Long.class));
",1,1,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1252,"protected String[] legendLabels = { JMeterUtils.getResString(""aggregate_graph_legend"") };","protected String[] legendLabels={JMeterUtils.getResString(""aggregate_graph_legend"")};
",1,2,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1253,"private final MappingSet RECORD_KEYS = new MappingSet(GeneratorMapping.create(""setupInterior"", ""outputRecordKeys"", null, null));","private final MappingSet RECORD_KEYS=new MappingSet(GeneratorMapping.create(""setupInterior"",""outputRecordKeys"",null,null));
",1,6,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1254,"private final MonetaryCurrency usDollars = new MonetaryCurrencyBuilder().withCode(""USD"").withDigitsAfterDecimal(2).build();","private final MonetaryCurrency usDollars=new MonetaryCurrencyBuilder().withCode(""USD"").withDigitsAfterDecimal(2).build();
",1,2,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1255,final org.slf4j.Logger logger = org.slf4j.LoggerFactory.getLogger(this.getClass());,"final org.slf4j.Logger logger=org.slf4j.LoggerFactory.getLogger(this.getClass());
",1,2,7,,"Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1256,"@MetastoreFieldDefinition(column = MetastoreColumn.LOCATION, scopes = {TABLE, SEGMENT, FILE, ROW_GROUP}) private final String location;","@MetastoreFieldDefinition(column=MetastoreColumn.LOCATION,scopes={TABLE,SEGMENT,FILE,ROW_GROUP}) private final String location;
",1,12,12,,"SimpleName(NormalAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(MemberValuePair-name, NormalAnnotation-values, FieldDeclaration-modifiers, ),
QualifiedName(MemberValuePair-value, NormalAnnotation-values, FieldDeclaration-modifiers, ),
SimpleName(MemberValuePair-name, NormalAnnotation-values, FieldDeclaration-modifiers, ),
SimpleName(ArrayInitializer-expressions, MemberValuePair-value, NormalAnnotation-values, FieldDeclaration-modifiers, ),
SimpleName(ArrayInitializer-expressions, MemberValuePair-value, NormalAnnotation-values, FieldDeclaration-modifiers, ),
SimpleName(ArrayInitializer-expressions, MemberValuePair-value, NormalAnnotation-values, FieldDeclaration-modifiers, ),
SimpleName(ArrayInitializer-expressions, MemberValuePair-value, NormalAnnotation-values, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1257,private final IndexedInts[] vector = new IndexedInts[offset.getMaxVectorSize()];,"private final IndexedInts[] vector=new IndexedInts[offset.getMaxVectorSize()];
",1,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1258,"private Iterator<Map.Entry<String, String>> currentIterator = null;","@Nullable private Iterator<Map.Entry<String,String>> currentIterator=null;
",1,1,7,,"Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
NullLiteral(VariableDeclarationFragment-initializer, ),
"
1259,"private long[] longs = {185, -216, -128751132, Long.MIN_VALUE};","private long[] longs={185,-216,-128751132,Long.MIN_VALUE};
",1,1,8,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1260,public List<byte[]> list = new ArrayList<byte[]>();,"/** 
 */
public List<byte[]> list=new ArrayList<byte[]>();
",1,9,9,,"Javadoc(FieldDeclaration-javadoc, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1261,"private Map<Class<?>, ObjectConverter.Reader<?>> objectConverterReaders = new HashMap<Class<?>, ObjectConverter.Reader<?>>();","private Map<Class<?>,ObjectConverter.Reader<?>> objectConverterReaders=new HashMap<Class<?>,ObjectConverter.Reader<?>>();
",1,4,12,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1262,"private Ensure.Steps m_invokeSteps = new Ensure.Steps(4, 5, 7, 8, 10, 11, 13, 14);","private Ensure.Steps m_invokeSteps=new Ensure.Steps(4,5,7,8,10,11,13,14);
",1,1,12,,"Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1263,java.util.List<Integer>[] rewrite$0 = new java.util.List[1];,"java.util.List<Integer>[] rewrite$0=new java.util.List[1];
",1,2,7,,"QualifiedName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1264,private final TypeSerializer<E> serializer = ReusingKeyGroupedIterator.this.serializer;,"private final TypeSerializer<E> serializer=ReusingKeyGroupedIterator.this.serializer;
",1,5,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(ThisExpression-qualifier, FieldAccess-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(FieldAccess-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1265,private final Condition condUnderloaded = this.lock.newCondition();,"private final Condition condUnderloaded=this.lock.newCondition();
",1,5,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
ThisExpression(FieldAccess-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(FieldAccess-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1266,private Consumer<Collection<ResultPartitionID>> stopTrackingPartitionsConsumer = ignored -> {};,"private Consumer<Collection<ResultPartitionID>> stopTrackingPartitionsConsumer=ignored -> {
}
;
",1,1,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Block(LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1267,"private final BiFunction<UUID, TaskId, Boolean> alwaysTrue = (client, task) -> true;","private final BiFunction<UUID,TaskId,Boolean> alwaysTrue=(client,task) -> true;
",1,2,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1268,"private ThrowingConsumer<JobGraph, ? extends Exception> putJobGraphConsumer = ignored -> {};","private ThrowingConsumer<JobGraph,? extends Exception> putJobGraphConsumer=ignored -> {
}
;
",1,2,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Block(LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1269,final Entry[] table = ConcurrentHashMap.this.table;,"final Entry[] table=ConcurrentHashMap.this.table;
",1,2,6,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(ThisExpression-qualifier, FieldAccess-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(FieldAccess-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1270,"private final byte[] key = {1, '{', 111, '}'};","private final byte[] key={1,'{',111,'}'};
",1,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1271,"protected final String[] queryString = new String[] {""SELECT DISTINCT id FROM "" + regName,","protected final String[] queryString=new String[]{""SELECT DISTINCT id FROM "" + regName,""SELECT * FROM "" + regName,""SELECT ticker FROM "" + regName,""SELECT * FROM "" + regName + "" WHERE id > 5"",""SELECT p FROM "" + regName + "" p, p.idTickers idTickers WHERE p.ticker = 'vmware'""};
",1,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1272,"private final String[] queries = {""SELECT * FROM "" + SEPARATOR + regName,","private final String[] queries={""SELECT * FROM "" + SEPARATOR + regName,""SELECT * FROM "" + SEPARATOR + regName+ "" limit 5"",""SELECT p from  "" + SEPARATOR + regName+ "" p"",""SELECT count(*) FROM "" + SEPARATOR + regName,""SELECT ALL * from "" + SEPARATOR + regName,""SELECT * from "" + SEPARATOR + regName+ "".values"",""SELECT distinct * FROM "" + SEPARATOR + regName,""SELECT distinct * FROM "" + SEPARATOR + regName+ "" p order by p.ID"",""SELECT * from "" + SEPARATOR + regName+ "" r, positions.values pos""};
",1,1,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1273,"private int port = ServerConfiguration.getDefaultPort(ServerConstants.SC_PROTOCOL_HSQL, false);","private int port=ServerConfiguration.getDefaultPort(ServerConstants.SC_PROTOCOL_HSQL,false);
",1,2,7,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1274,"private final Map<K, V> map = new LinkedHashMap<K, V>(1024, 0.75f, true) {","private final Map<K,V> map=new LinkedHashMap<K,V>(1024,0.75f,true){
  private static final long serialVersionUID=1L;
  @Override protected boolean removeEldestEntry(  Map.Entry<K,V> eldest){
    if (memoryUsed.get() < maxMemoryBytes) {
      return false;
    }
    int memory=eldest.getValue().getMemory();
    memoryUsed.addAndGet(-memory);
    return true;
  }
}
;
",1,4,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1275,"private final Set<String> disabledNames = disabling ? new HashSet<>(Arrays.asList(disabledString.split("",""))) : null;","private final Set<String> disabledNames=disabling ? new HashSet<>(Arrays.asList(disabledString.split("",""))) : null;
",1,26,13,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ClassInstanceCreation-arguments, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ClassInstanceCreation-arguments, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, ClassInstanceCreation-arguments, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ConditionalExpression-elseExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1276,"private TextAttribute green = new TextAttribute (Display.getCurrent().getSystemColor(SWT.COLOR_GREEN), null, SWT.BOLD);","private TextAttribute green=new TextAttribute(Display.getCurrent().getSystemColor(SWT.COLOR_GREEN),null,SWT.BOLD);
",1,2,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1277,"private Bundle bundle = new MockBundle(getClass().getClassLoader(), """", 1);","private Bundle bundle=new MockBundle(getClass().getClassLoader(),"""",1);
",1,1,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1278,"private Bundle bundle = new MockBundle(getClass().getClassLoader(), null, 0L);","private Bundle bundle=new MockBundle(getClass().getClassLoader(),null,0L);
",1,1,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1279,"private GAttributeInfo portInfo = new GAttributeInfo(""port"", int.class.getName(), true, true, ""getPort"", ""setPort"");","private GAttributeInfo portInfo=new GAttributeInfo(""port"",int.class.getName(),true,true,""getPort"",""setPort"");
",1,3,11,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(TypeLiteral-type, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1280,"private AbstractNameQuery jettyContainerObjectName = new AbstractNameQuery(naming.createChildName(baseRootName, ""jettyContainer"", GBeanInfoBuilder.DEFAULT_J2EE_TYPE));","private AbstractNameQuery jettyContainerObjectName=new AbstractNameQuery(naming.createChildName(baseRootName,""jettyContainer"",GBeanInfoBuilder.DEFAULT_J2EE_TYPE));
",1,4,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1281,"private String work = System.getProperty(""batchee.home"", System.getProperty(""java.io.tmpdir"")) + ""/work"";","@Option(name=""work"",description=""work directory (default to java.io.tmp/work)"") private String work=System.getProperty(""batchee.home"",System.getProperty(""java.io.tmpdir"")) + ""/work"";
",1,1,10,,"Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
StringLiteral(MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
StringLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, ),
"
1282,"private final MessageSource messages = new ResourceBundleMessageSource(new Class[] { AliasCommand.class, HelpSupport.class });","private final MessageSource messages=new ResourceBundleMessageSource(new Class[]{AliasCommand.class,HelpSupport.class});
",1,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, ArrayInitializer-expressions, ArrayCreation-initializer, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, ArrayInitializer-expressions, ArrayCreation-initializer, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1283,private final AtomicLong nextRefreshTime = new AtomicLong(System.nanoTime() + REFRESH_INTERVAL);,"private final AtomicLong nextRefreshTime=new AtomicLong(System.nanoTime() + REFRESH_INTERVAL);
",1,1,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1284,"double delta=Math.sqrt(2.22044604925031e-16), infinity=Float.POSITIVE_INFINITY;","double delta=Math.sqrt(2.22044604925031e-16), infinity=Float.POSITIVE_INFINITY;
",1,1,7,,"PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1285,"private final ConcurrentMap<Class<?>, ConcurrentMap<Class<? extends Annotation>, Collection<Field>>> fieldCache =","/** 
 * Field cache. 
 */
@GridToStringExclude private final ConcurrentMap<Class<?>,ConcurrentMap<Class<? extends Annotation>,Collection<Field>>> fieldCache=new ConcurrentHashMap<>();
",1,2,11,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
"
1286,"MachineInDatacenter machine1 = new MachineInDatacenter(new ParseMachineTest().expected().toBuilder().name(""test-fe2"").state(State.DELETED).build(), ""us-east-1"");","MachineInDatacenter machine1=new MachineInDatacenter(new ParseMachineTest().expected().toBuilder().name(""test-fe2"").state(State.DELETED).build(),""us-east-1"");
",1,2,12,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1287,"protected byte[] data = SwiftTestUtils.dataset(getBlockSize() * 2, 0, 255);","protected byte[] data=SwiftTestUtils.dataset(getBlockSize() * 2,0,255);
",1,3,10,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1288,"private Map<Enum, Class<Param<?>>[]> paramsDef;","private Map<Enum,Class<Param<?>>[]> paramsDef;
",1,1,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1289,private final ByteBuffer buf = ByteBuffer.allocate(Long.SIZE/8);,"private final ByteBuffer buf=ByteBuffer.allocate(Long.SIZE / 8);
",1,1,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1290,"final ExtendedBlock block3 = new ExtendedBlock(""-10"", -108L);","final ExtendedBlock block3=new ExtendedBlock(""-10"",-108L);
",1,2,6,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1291,"private final Map<String, Key<? extends Filter>[]> chains;","private final Map<String,Key<? extends Filter>[]> chains;
",1,3,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1292,private long blocksize = 256 * (1L << 20);,"private long blocksize=256 * (1L << 20);
",1,1,6,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ParenthesizedExpression-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1293,private Field[] mrFields = MRJobConfig.class.getFields();,"private Field[] mrFields=MRJobConfig.class.getFields();
",1,1,6,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1294,"private File remoteRootLogDir = new File(""target"", this.getClass()","private File remoteRootLogDir=new File(""target"",this.getClass().getName() + ""-remoteLogDir"");
",1,1,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(MethodInvocation-expression, MethodInvocation-expression, InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1295,long start = System.currentTimeMillis() - (int) (Math.random() * DT);,"long start=System.currentTimeMillis() - (int)(Math.random() * DT);
",1,3,8,,"PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, ParenthesizedExpression-expression, CastExpression-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ParenthesizedExpression-expression, CastExpression-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, ParenthesizedExpression-expression, CastExpression-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1296,double u = 0.5 - 2.0 / 3.0 * (Math.sqrt(2.0) - 1.0);,"/** 
 * The coefficient to calculate control points of Bezier curves
 */
double u=0.5 - 2.0 / 3.0 * (Math.sqrt(2.0) - 1.0);
",1,1,9,,"PrimitiveType(),
SimpleName(VariableDeclarationFragment-name, ),
NumberLiteral(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, ),
NumberLiteral(InfixExpression-leftOperand, InfixExpression-leftOperand, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, ),
NumberLiteral(InfixExpression-rightOperand, InfixExpression-leftOperand, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-rightOperand, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-rightOperand, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, ),
NumberLiteral(MethodInvocation-arguments, InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-rightOperand, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, ),
NumberLiteral(InfixExpression-rightOperand, ParenthesizedExpression-expression, InfixExpression-rightOperand, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, ),
"
1297,"private final Map<Class<?>, byte[]> serializedObjects;","/** 
 * Class -> byte[] 
 */
private final Map<Class<?>,byte[]> serializedObjects;
",1,1,8,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
"
1298,private final PrimitiveProtos.BoolProto BOOL_TRUE = PrimitiveProtos.BoolProto.newBuilder().setValue(true).build();,"private final PrimitiveProtos.BoolProto BOOL_TRUE=PrimitiveProtos.BoolProto.newBuilder().setValue(true).build();
",1,2,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1299,"boolean OUTPUT = System.getProperty(""TEST_OUTPUT"") != null;","boolean OUTPUT=System.getProperty(""TEST_OUTPUT"") != null;
",1,1,6,,"PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1300,"public final int mins[], maxs[];","public final int mins[], maxs[];
",1,2,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
"
1301,private Object args[] = new Object[] { new Object() };,"private Object args[]=new Object[]{new Object()};
",1,2,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1302,public List<Object> selectors = Arrays.asList(new Object[] { Integer.class });,"public List<Object> selectors=Arrays.asList(new Object[]{Integer.class});
",1,3,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, ArrayInitializer-expressions, ArrayCreation-initializer, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1303,"Class classes[] = new Class[] { byte.class, short.class, int.class,","Class classes[]=new Class[]{byte.class,short.class,int.class,long.class,boolean.class,char.class,float.class,double.class,void.class};
",1,1,8,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(TypeLiteral-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(TypeLiteral-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(TypeLiteral-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1304,protected String index = new Integer(AbstractSet.counter++).toString();,"protected String index=new Integer(AbstractSet.counter++).toString();
",1,1,6,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(PostfixExpression-operand, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1305,"private Polygon oldColorPoly = new Polygon(new int[]{swatchOffset, swatchOffset + swatchSize, swatchOffset + swatchSize},","private Polygon oldColorPoly=new Polygon(new int[]{swatchOffset,swatchOffset + swatchSize,swatchOffset + swatchSize},new int[]{TOP_OFFSET,TOP_OFFSET,TOP_OFFSET + swatchSize},3);
",1,3,11,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayInitializer-expressions, ArrayCreation-initializer, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, ArrayInitializer-expressions, ArrayCreation-initializer, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, ArrayInitializer-expressions, ArrayCreation-initializer, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, ArrayInitializer-expressions, ArrayCreation-initializer, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, ArrayInitializer-expressions, ArrayCreation-initializer, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1306,"Font font = new Font("""", Font.BOLD | Font.ITALIC, 25) {","Font font=new Font("""",Font.BOLD | Font.ITALIC,25){
  private static final long serialVersionUID=1L;
  @Override public String getFamily(){
    return ""My FontFamily"";
  }
  @Override public String getFontName(){
    return ""My FontName"";
  }
  @Override public String getName(){
    return ""My Name"";
  }
}
;
",1,1,7,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1307,boolean was[] = new boolean[] { true };,"boolean was[]=new boolean[]{true};
",1,3,6,,"PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1308,"private final TabStop[] tabStops = { new TabStop(44f),","private final TabStop[] tabStops={new TabStop(44f),new TabStop(56f,TabStop.ALIGN_CENTER,TabStop.LEAD_NONE),new TabStop(72f,TabStop.ALIGN_RIGHT,TabStop.LEAD_DOTS),new TabStop(100f)};
",1,1,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1309,"double[] limits = new double[] { 0, 1, ChoiceFormat.nextDouble(1),","double[] limits=new double[]{0,1,ChoiceFormat.nextDouble(1),ChoiceFormat.nextDouble(2)};
",1,1,10,,"PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1310,"private User testUser1 = User.createUserForTesting(testConfig, ""test"", new String[]{""testgroup""});","private User testUser1=User.createUserForTesting(testConfig,""test"",new String[]{""testgroup""});
",1,1,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1311,"public List<byte[]> keys = new ArrayList<byte[]>(), values = new ArrayList<byte[]>();","public List<byte[]> keys=new ArrayList<byte[]>(), values=new ArrayList<byte[]>();
",1,2,12,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1312,int dim = 'z' - 'a' + 1;,"int dim='z' - 'a' + 1;
",1,1,5,,"PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
CharacterLiteral(InfixExpression-leftOperand, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(InfixExpression-rightOperand, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1313,int[][][] seenRows = new int[dim][dim][dim];,"int[][][] seenRows=new int[dim][dim][dim];
",1,1,12,,"PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1314,private long numRows = (long) ROWS_ONE.length + ROWS_TWO.length;,"private long numRows=(long)ROWS_ONE.length + ROWS_TWO.length;
",1,2,6,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(CastExpression-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1315,QuotaProtos.Throttle THROTTLE = QuotaProtos.Throttle.newBuilder(),"QuotaProtos.Throttle THROTTLE=QuotaProtos.Throttle.newBuilder().setReqNum(REQUEST_THROTTLE).build();
",1,1,4,,"QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1316,"private Collection<String> MIMETYPES = Arrays.asList(new String[]{""text/x-jsp"", ""text/x-tag""});","private Collection<String> MIMETYPES=Arrays.asList(new String[]{""text/x-jsp"",""text/x-tag""});
",1,2,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1317,"private Map<String,Object> attributes = new LinkedHashMap<>(), values = new LinkedHashMap<>();","private Map<String,Object> attributes=new LinkedHashMap<>(), values=new LinkedHashMap<>();
",1,2,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1318,final private Lookup.Result<RegisteredDDCatalog> lookupResult = Lookups.forPath(Util.GF_LOOKUP_PATH).lookupResult(RegisteredDDCatalog.class);,"final private Lookup.Result<RegisteredDDCatalog> lookupResult=Lookups.forPath(Util.GF_LOOKUP_PATH).lookupResult(RegisteredDDCatalog.class);
",1,6,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1319,"private final Map<SessionState.ResourceType, Map<String, Set<String>>> resource_path_map;","private final Map<SessionState.ResourceType,Map<String,Set<String>>> resource_path_map;
",1,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1320,private Random random = new Random(TestLimitOperator.class.toString().hashCode());,"private Random random=new Random(TestLimitOperator.class.toString().hashCode());
",1,3,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1321,private final ArrayList<byte[]> writeBuffers = new ArrayList<byte[]>(1);,"private final ArrayList<byte[]> writeBuffers=new ArrayList<byte[]>(1);
",1,3,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1322,private byte bitVectors[][] = new byte[2][];,"private byte bitVectors[][]=new byte[2][];
",1,1,9,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1323,private String [][] fLocalElemNamespaceContext = new String [INIT_STACK_SIZE][1];,"private String[][] fLocalElemNamespaceContext=new String[INIT_STACK_SIZE][1];
",1,2,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1324,"private Factory<? extends IgniteClosure<CacheEntryEvent<? extends K, ? extends V>, T>> rmtTransFactory;","/** 
 * Remote transformer factory. 
 */
private Factory<? extends IgniteClosure<CacheEntryEvent<? extends K,? extends V>,T>> rmtTransFactory;
",1,1,8,,"Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
"
1325,"private final List<Pair<Pair<BinaryName,String>,Object[]>> refs = new ArrayList<>();","private final List<Pair<Pair<BinaryName,String>,Object[]>> refs=new ArrayList<>();
",1,2,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1326,"private final TestRecord<Long, String> expectedFinalJoinResult = new TestRecord<>(ANY_UNIQUE_KEY, ""D-d"", null, 15L);","private final TestRecord<Long,String> expectedFinalJoinResult=new TestRecord<>(ANY_UNIQUE_KEY,""D-d"",null,15L);
",1,2,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1327,private final Collection<String> perfs = !disabled ? new LinkedHashSet<String>() : null;,"/** 
 */
private final Collection<String> perfs=!disabled ? new LinkedHashSet<String>() : null;
",1,1,9,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(PrefixExpression-operand, ConditionalExpression-expression, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, ),
NullLiteral(ConditionalExpression-elseExpression, VariableDeclarationFragment-initializer, ),
"
1328,"private PermissionEntry entry = new PermissionEntry(path, true, index, PrivilegeBits.BUILT_IN.get(PrivilegeConstants.REP_READ_NODES), RestrictionPattern.EMPTY);","private PermissionEntry entry=new PermissionEntry(path,true,index,PrivilegeBits.BUILT_IN.get(PrivilegeConstants.REP_READ_NODES),RestrictionPattern.EMPTY);
",1,5,11,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1329,"protected ColumnStatistics cs2 = new ColumnStatistics(ValueInt.get(0), ValueInt.get(100), 0, 100, 100,","/** 
 * Column statistics with 100 integers 0-100. 
 */
protected ColumnStatistics cs2=new ColumnStatistics(ValueInt.get(0),ValueInt.get(100),0,100,100,4,new byte[0],0,U.currentTimeMillis());
",1,1,13,,"Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
NumberLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
NumberLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
1330,"private final Integer[] rows = new Integer[] {1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 512, 1024, null};","/** 
 */
private final Integer[] rows=new Integer[]{1,2,4,8,16,32,64,128,256,512,1024,512,1024,null};
",1,1,21,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, ),
NullLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, ),
"
1331,private final BooleanSupplier hasUpdates = () -> !F.isEmpty(updBatch);,"/** 
 */
private final BooleanSupplier hasUpdates=() -> !F.isEmpty(updBatch);
",1,1,7,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, PrefixExpression-operand, LambdaExpression-body, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, PrefixExpression-operand, LambdaExpression-body, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-arguments, PrefixExpression-operand, LambdaExpression-body, VariableDeclarationFragment-initializer, ),
"
1332,"private ExecutorService service = Executors.newFixedThreadPool(30, r -> {","private ExecutorService service=Executors.newFixedThreadPool(30,r -> {
  Thread thread=threadFactory.newThread(r);
  thread.setName(""tc-upd-"" + thread.getName());
  return thread;
}
);
",1,1,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1333,"@SuppressWarnings(""FieldCanBeLocal"") private Integer _ver = LATEST_VERSION;","/** 
 * Entity version. 
 */
@SuppressWarnings(""FieldCanBeLocal"") private Integer _ver=LATEST_VERSION;
",1,1,6,,"SimpleName(SingleMemberAnnotation-typeName, ),
StringLiteral(SingleMemberAnnotation-value, ),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(VariableDeclarationFragment-initializer, ),
"
1334,@Nullable private int snapshotDeps[];,"@Nullable private int snapshotDeps[];
",1,1,5,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
"
1335,"AttributeSensor<String> PASSWORD_1 = Sensors.newStringSensor(""test.password.1"", ""Host name as known internally in "" +","AttributeSensor<String> PASSWORD_1=Sensors.newStringSensor(""test.password.1"",""Host name as known internally in "" + ""the subnet where it is running (if different to host.name)"");
",1,2,7,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1336,"org.apache.avro.Schema avroDataSchema = SchemaBuilder.record(""test"")","org.apache.avro.Schema avroDataSchema=SchemaBuilder.record(""test"").fields().name(""id"").type().longType().noDefault().name(""data"").type().optional().stringType().endRecord();
",1,1,5,,"QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1337,"private final String kafkaZkPath = ZKUtil.getZkRootBasedPath(""streaming"") + ""/"" + RandomUtil.randomUUID().toString();","private final String kafkaZkPath=ZKUtil.getZkRootBasedPath(""streaming"") + ""/"" + RandomUtil.randomUUID().toString();
",1,2,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1338,long submit = start - (5 * DT);,"long submit=start - (5 * DT);
",1,1,5,,"PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, ParenthesizedExpression-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1339,final TSerializer _serializer = new TSerializer(new TCompactProtocol.Factory());,"final TSerializer _serializer=new TSerializer(new TCompactProtocol.Factory());
",1,1,5,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1340,"private final IdSet _intBloomFilterIdSet = IdSets.create(DataType.INT, 0, NUM_VALUES, IdSets.DEFAULT_FPP);","private final IdSet _intBloomFilterIdSet=IdSets.create(DataType.INT,0,NUM_VALUES,IdSets.DEFAULT_FPP);
",1,1,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1341,"private final AtomicReference<Map<Integer, Load>> local = new AtomicReference<Map<Integer, Load>>(new HashMap<Integer, Load>());","private final AtomicReference<Map<Integer,Load>> local=new AtomicReference<Map<Integer,Load>>(new HashMap<Integer,Load>());
",1,5,14,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1342,private double doubleArrays[][] = new double[NUM_VECTORS][numElements];,"private double doubleArrays[][]=new double[NUM_VECTORS][numElements];
",1,11,10,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1343,"String dataDir = new File(System.getProperty(""java.io.tmpdir"") + File.separator + ""tmp"" + File.separator","@Parameter(names=""-dataDir"",description=""data directory"",required=false) String dataDir=new File(System.getProperty(""java.io.tmpdir"") + File.separator + ""tmp""+ File.separator+ ""zookeeper""+ File.separator+ ""data"").getAbsolutePath();
",1,1,9,,"SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
StringLiteral(MethodInvocation-arguments, InfixExpression-leftOperand, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
QualifiedName(InfixExpression-rightOperand, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
StringLiteral(InfixExpression-extendedOperands, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
QualifiedName(InfixExpression-extendedOperands, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
"
1344,"private Point.El<N> selStartEl = null, selEndEl = null;","/** 
 * Selection start + end
 */
private Point.El<N> selStartEl=null, selEndEl=null;
",1,2,7,,"Modifier(),
QualifiedName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
NullLiteral(VariableDeclarationFragment-initializer, ),
SimpleName(VariableDeclarationFragment-name, ),
NullLiteral(VariableDeclarationFragment-initializer, ),
"
1345,"Point<Node> inGhi = Point.inText(endLc.getContainer().getLastChild(), 2);","Point<Node> inGhi=Point.inText(endLc.getContainer().getLastChild(),2);
",1,1,9,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1346,"int[] images = {R.drawable.letter_a,R.drawable.letter_r,R.drawable.letter_e,R.drawable.letter_g,R.drawable.letter_u,R.drawable.letter_b,R.drawable.letter_m,R.drawable.letter_p,R.drawable.letter_y,R.drawable.letter_d};","int[] images={R.drawable.letter_a,R.drawable.letter_r,R.drawable.letter_e,R.drawable.letter_g,R.drawable.letter_u,R.drawable.letter_b,R.drawable.letter_m,R.drawable.letter_p,R.drawable.letter_y,R.drawable.letter_d};
",1,1,13,,"PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1347,"public IntOption numClassesOption = new IntOption(""numClasses"", 'c', ""The number of classes to generate."", 2, 2,","public IntOption numClassesOption=new IntOption(""numClasses"",'c',""The number of classes to generate."",2,2,Integer.MAX_VALUE);
",1,3,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1348,private final BoolProto BOOL_TRUE = BoolProto.newBuilder().setValue(true).build();,"private final BoolProto BOOL_TRUE=BoolProto.newBuilder().setValue(true).build();
",1,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1349,"protected WeakHashMap<Class<?>, PropertyDescriptor[]> propertyDescriptorsCache = new WeakHashMap<Class<?>, PropertyDescriptor[]>();","protected WeakHashMap<Class<?>,PropertyDescriptor[]> propertyDescriptorsCache=new WeakHashMap<Class<?>,PropertyDescriptor[]>();
",1,1,12,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1350,"private final Map<Class<?>, Method[]> methodsByClassCache = _Maps.newConcurrentHashMap();","private final Map<Class<?>,Method[]> methodsByClassCache=_Maps.newConcurrentHashMap();
",1,1,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1351,"private final Map<Listener, Listener> listeners = Collections.synchronizedMap(new ReferenceMap(ReferenceMap.WEAK, ReferenceMap.WEAK));","@SuppressWarnings(""unchecked"") private final Map<Listener,Listener> listeners=Collections.synchronizedMap(new ReferenceMap(ReferenceMap.WEAK,ReferenceMap.WEAK));
",1,1,11,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
QualifiedName(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
QualifiedName(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
1352,"public final @NotNull Map<String, DocViewProperty> props = new HashMap<>();","public final @NotNull Map<String,DocViewProperty> props=new HashMap<>();
",1,1,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1353,"private final ProducerRecord<byte[], byte[]> record1 = new ProducerRecord<>(topic, ""key1"".getBytes(), ""value1"".getBytes());","private final ProducerRecord<byte[],byte[]> record1=new ProducerRecord<>(topic,""key1"".getBytes(),""value1"".getBytes());
",1,5,14,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1354,"private final EventLoopGroup boss = new NioEventLoopGroup(0, r -> {","private final EventLoopGroup boss=new NioEventLoopGroup(0,r -> {
  return new Thread(r,String.format(""proxy-boss-%d"",bossThreadNumber.getAndIncrement()));
}
);
",1,1,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1355,"@Inject @Named(""invocation"") @SessionScoped private Invocation invocation;","@Inject @Named(""invocation"") @SessionScoped private Invocation invocation;
",1,2,7,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(SingleMemberAnnotation-typeName, FieldDeclaration-modifiers, ),
StringLiteral(SingleMemberAnnotation-value, FieldDeclaration-modifiers, ),
SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1356,"private Type listInMapType = new TypeToken<Map<String, List<Map<String, String>>>>() {","private Type listInMapType=new TypeToken<Map<String,List<Map<String,String>>>>(){
  private static final long serialVersionUID=1L;
}
.getType();
",1,1,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1357,"protected String prefix = System.getProperty(""user.name"") + ""-"" + getClass().getSimpleName();","protected String prefix=System.getProperty(""user.name"") + ""-"" + getClass().getSimpleName();
",1,1,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1358,"private Json json = Guice.createInjector(new GsonModule(), new DockerParserModule()).getInstance(Json.class);","private Json json=Guice.createInjector(new GsonModule(),new DockerParserModule()).getInstance(Json.class);
",1,7,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1359,"Link ref = Link.builder().type(""application/pdf"").relation(Relation.DESCRIBEDBY).href(","Link ref=Link.builder().type(""application/pdf"").relation(Relation.DESCRIBEDBY).href(URI.create(""http://docs.openstack.org/ext/keypairs/api/v1.1"")).build();
",1,1,9,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1360,"public HttpRequest changeMessageVisibilityMapInt = HttpRequest.builder().method(""POST"")","public HttpRequest changeMessageVisibilityMapInt=HttpRequest.builder().method(""POST"").endpoint(""https://sqs.us-east-1.amazonaws.com/993194456877/adrian-sqs11/"").addHeader(""Host"",""sqs.us-east-1.amazonaws.com"").addFormParam(""Action"",""ChangeMessageVisibilityBatch"").addFormParam(""ChangeMessageVisibilityBatchRequestEntry.1.Id"",""foo1"").addFormParam(""ChangeMessageVisibilityBatchRequestEntry.1.ReceiptHandle"",""aaaaaaaaa"").addFormParam(""ChangeMessageVisibilityBatchRequestEntry.1.VisibilityTimeout"",""10"").addFormParam(""ChangeMessageVisibilityBatchRequestEntry.2.Id"",""foo2"").addFormParam(""ChangeMessageVisibilityBatchRequestEntry.2.ReceiptHandle"",""bbbbbbbbb"").addFormParam(""ChangeMessageVisibilityBatchRequestEntry.2.VisibilityTimeout"",""10"").addFormParam(""Signature"",""y/gaaxoE5wrG2P7NIAyfDo7DTgRx2PLJUi9/zNnWQ6A="").addFormParam(""SignatureMethod"",""HmacSHA256"").addFormParam(""SignatureVersion"",""2"").addFormParam(""Timestamp"",""2009-11-08T15:54:08.897Z"").addFormParam(""Version"",""2011-10-01"").addFormParam(""AWSAccessKeyId"",""identity"").build();
",1,1,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1361,"protected OperatingSystem os = OperatingSystem.builder().name(""osName"").version(""osVersion"")","protected OperatingSystem os=OperatingSystem.builder().name(""osName"").version(""osVersion"").description(""osDescription"").arch(""X86_32"").build();
",1,1,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1362,"ComputeService computeService = ContextBuilder.newBuilder(""stub"").build(ComputeServiceContext.class).getComputeService();","ComputeService computeService=ContextBuilder.newBuilder(""stub"").build(ComputeServiceContext.class).getComputeService();
",1,1,8,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1363,"Supplier<Map<String, Supplier<Set<String>>>> regionToZones = Suppliers.<Map<String, Supplier<Set<String>>>>ofInstance(","Supplier<Map<String,Supplier<Set<String>>>> regionToZones=Suppliers.<Map<String,Supplier<Set<String>>>>ofInstance(ImmutableMap.of(""region1"",Suppliers.<Set<String>>ofInstance(ImmutableSet.of(""zone1"")),""region2"",Suppliers.<Set<String>>ofInstance(ImmutableSet.of(""zone2"",""zone3""))));
",1,1,14,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, MethodInvocation-typeArguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, MethodInvocation-typeArguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, MethodInvocation-typeArguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, MethodInvocation-typeArguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, MethodInvocation-typeArguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1364,private String simpleName = InternetGatewayApiLiveTest.class.getSimpleName() + new Random().nextInt(10000);,"private String simpleName=InternetGatewayApiLiveTest.class.getSimpleName() + new Random().nextInt(10000);
",1,1,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1365,"private final Location location = new LocationBuilder().id(""us/las"").description(""us/las"").scope(LocationScope.ZONE)","private final Location location=new LocationBuilder().id(""us/las"").description(""us/las"").scope(LocationScope.ZONE).parent(new LocationBuilder().id(""us"").description(""us"").scope(LocationScope.REGION).build()).build();
",1,3,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1366,private ExprDigest digest = new E_MD5(NodeValue.makeBoolean(true).getExpr());,"private ExprDigest digest=new E_MD5(NodeValue.makeBoolean(true).getExpr());
",1,1,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(MethodInvocation-arguments, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1367,"public final ArgDecl HELP = new ArgDecl( false, ""help"", (arg,val) -> usage() );","/** 
 * Argument to show usage 
 */
public final ArgDecl HELP=new ArgDecl(false,""help"",(arg,val) -> usage());
",1,1,10,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, LambdaExpression-body, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
1368,"char tvCharArray[] = { '@', ';' };","char tvCharArray[]={'@',';'};
",1,1,5,,"PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1369,"private final Map<Var,Node> cache = ( caching ? new HashMap<>() : null );","private final Map<Var,Node> cache=(caching ? new HashMap<>() : null);
",1,2,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(ConditionalExpression-expression, ParenthesizedExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, ConditionalExpression-thenExpression, ParenthesizedExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ConditionalExpression-elseExpression, ParenthesizedExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1370,final long errors[] = new long[fields.length];,"final long errors[]=new long[fields.length];
",1,1,7,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1371,"private final JLabeledTextField expiration = new JLabeledTextField(JMeterUtils.getResString(""jms_expiration""),10);","private final JLabeledTextField expiration=new JLabeledTextField(JMeterUtils.getResString(""jms_expiration""),10);
",1,4,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1372,"Class<?>[] dictionary=new Class[0], params=new Class[0];","Class<?>[] dictionary=new Class[0], params=new Class[0];
",1,1,11,,"SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1373,"List<Pattern> include = AList.of(Pattern.compile("".*"")), exclude = AList.create();","List<Pattern> include=AList.of(Pattern.compile("".*"")), exclude=AList.create();
",1,3,11,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1374,"int[] code={}, value={};","int[] code={}, value={};
",1,1,6,,"PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
ArrayInitializer(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
ArrayInitializer(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1375,"private volatile int minTime = -1, maxTime;","private volatile int minTime=-1, maxTime;
",1,1,6,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1376,Path a1 = PathAnnotation.create(),"Path a1=PathAnnotation.create()._enum(""enum"").aev(true).allowEmptyValue(true).api(""api"").cf(""cf"").collectionFormat(""collectionFormat"").d(""d"").description(""description"").e(""e"").emax(true).emin(true).ex(""ex"").example(""example"").exclusiveMaximum(true).exclusiveMinimum(true).f(""f"").format(""format"").items(ItemsAnnotation.DEFAULT).max(""max"").maxi(1).maximum(""maximum"").maxItems(2).maxl(3).maxLength(4).min(""min"").mini(5).minimum(""minimum"").minItems(6).minl(7).minLength(8).mo(""mo"").multipleOf(""multipleOf"").n(""n"").name(""name"").on(""on"").onClass(X1.class).p(""p"").parser(OpenApiParser.class).pattern(""pattern"").r(true).required(true).serializer(OpenApiSerializer.class).t(""t"").type(""type"").ui(true).uniqueItems(true).value(""value"").build();
",1,1,4,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1377,ResponseHeader a1 = ResponseHeaderAnnotation.create(),"ResponseHeader a1=ResponseHeaderAnnotation.create().$ref(""$ref"")._default(""default"")._enum(""enum"").api(""api"").cf(""cf"").code(1).collectionFormat(""collectionFormat"").d(""d"").description(""description"").df(""df"").e(""e"").emax(true).emin(true).ex(""ex"").example(""example"").exclusiveMaximum(true).exclusiveMinimum(true).f(""f"").format(""format"").items(ItemsAnnotation.DEFAULT).max(""max"").maxi(1).maximum(""maximum"").maxItems(2).maxl(3).maxLength(4).min(""min"").mini(5).minimum(""minimum"").minItems(6).minl(7).minLength(8).mo(""mo"").multipleOf(""multipleOf"").n(""n"").name(""name"").on(""on"").onClass(X1.class).p(""p"").pattern(""pattern"").serializer(OpenApiSerializer.class).t(""t"").type(""type"").ui(true).uniqueItems(true).value(""value"").build();
",1,1,4,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1378,@Rdf(beanUri=true) @Xml(format=XmlFormat.ATTR) public URL url;,"@Rdf(beanUri=true) @Xml(format=XmlFormat.ATTR) public URL url;
",1,1,9,,"SimpleName(NormalAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(MemberValuePair-name, NormalAnnotation-values, FieldDeclaration-modifiers, ),
BooleanLiteral(MemberValuePair-value, NormalAnnotation-values, FieldDeclaration-modifiers, ),
SimpleName(NormalAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(MemberValuePair-name, NormalAnnotation-values, FieldDeclaration-modifiers, ),
QualifiedName(MemberValuePair-value, NormalAnnotation-values, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1379,"private IdentityHashMap<ProducerRecord<byte[], byte[]>, ProducerRecord<byte[], byte[]>> outstandingMessages;","private IdentityHashMap<ProducerRecord<byte[],byte[]>,ProducerRecord<byte[],byte[]>> outstandingMessages;
",1,1,13,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1380,"private File logDir = new File(System.getProperty(""java.io.tmpdir""), UUID.randomUUID().toString());","private File logDir=new File(System.getProperty(""java.io.tmpdir""),UUID.randomUUID().toString());
",1,1,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1381,"private final MockKeyValueStore store1 = (MockKeyValueStore) new MockKeyValueStoreBuilder(storeName1, false).build();","private final MockKeyValueStore store1=(MockKeyValueStore)new MockKeyValueStoreBuilder(storeName1,false).build();
",1,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, CastExpression-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-expression, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1382,"private final StateSerdes<Integer, String> serdes = new StateSerdes<>("""", Serdes.Integer(), Serdes.String());","private final StateSerdes<Integer,String> serdes=new StateSerdes<>("""",Serdes.Integer(),Serdes.String());
",1,1,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1383,private final Metrics metrics = new Metrics(new MetricConfig().recordLevel(Sensor.RecordingLevel.DEBUG));,"private final Metrics metrics=new Metrics(new MetricConfig().recordLevel(Sensor.RecordingLevel.DEBUG));
",1,1,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1384,"final private StateSerdes<String, byte[]> stateSerdes = new StateSerdes<>(""dummy"", serde, Serdes.ByteArray());","final private StateSerdes<String,byte[]> stateSerdes=new StateSerdes<>(""dummy"",serde,Serdes.ByteArray());
",1,1,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1385,private TableName aclTable = TableName.valueOf(STORE_WITH_OLD_TABLE + AclConstant.ACL_TABLE_NAME);,"private TableName aclTable=TableName.valueOf(STORE_WITH_OLD_TABLE + AclConstant.ACL_TABLE_NAME);
",1,1,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1386,"private final BasicSqlType dateType = new BasicSqlType(getCluster().getTypeFactory().getTypeSystem(),","private final BasicSqlType dateType=new BasicSqlType(getCluster().getTypeFactory().getTypeSystem(),SqlTypeName.DATE);
",1,1,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1387,"FactPartition fp1 = new FactPartition(""p"", DATE, DAILY, null, null, Sets.newHashSet(""st1"", ""st2""));","FactPartition fp1=new FactPartition(""p"",DATE,DAILY,null,null,Sets.newHashSet(""st1"",""st2""));
",1,1,12,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1388,ByteBuffer byteBuffer = ByteBuffer.wrap(new byte[8192 * 2]);,"ByteBuffer byteBuffer=ByteBuffer.wrap(new byte[8192 * 2]);
",1,3,8,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, ArrayCreation-dimensions, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ArrayCreation-dimensions, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1389,private final long maxDatacenterId = -1L ^ (-1L << datacenterIdBits);,"private final long maxDatacenterId=-1L ^ (-1L << datacenterIdBits);
",1,3,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, ParenthesizedExpression-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1390,private final SimpleDateFormat dateFormat = (SimpleDateFormat)FormatUtils.ISO8601FORMAT_DATE.clone();,"/** 
 * A clone of the DateFormat provided by  {@link FormatUtils} to parse xsd:date values. This is necessary because  {@link SimpleDateFormat} is not thread save and therefore we do not directly use a public static member.
 */
private final SimpleDateFormat dateFormat=(SimpleDateFormat)FormatUtils.ISO8601FORMAT_DATE.clone();
",1,1,7,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, CastExpression-type, VariableDeclarationFragment-initializer, ),
QualifiedName(MethodInvocation-expression, CastExpression-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, CastExpression-expression, VariableDeclarationFragment-initializer, ),
"
1391,private final XRankedBindings<T>.Itr itr = bindings.iterator();,"private final XRankedBindings<T>.Itr itr=bindings.iterator();
",1,1,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, QualifiedType-qualifier, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, QualifiedType-qualifier, FieldDeclaration-type, ),
SimpleName(QualifiedType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1392,"protected File indexDirFile = super.getDirectory( ""fsdirectorytest/one"" );","protected File indexDirFile=super.getDirectory(""fsdirectorytest/one"");
",1,1,5,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SuperMethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(SuperMethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1393,"private final DecimalFormat secFormat = new DecimalFormat( ""(0.0 s)"", new DecimalFormatSymbols( Locale.ENGLISH ) );","/** 
 * The format for elapsed build time.
 */
private final DecimalFormat secFormat=new DecimalFormat(""(0.0 s)"",new DecimalFormatSymbols(Locale.ENGLISH));
",1,2,8,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
QualifiedName(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
1394,private final Logger logger = LoggerFactory.getLogger(org.apache.vysper.xmpp.modules.extension.xep0050_adhoc_commands.AdhocCommandsModule.class);,"private final Logger logger=LoggerFactory.getLogger(org.apache.vysper.xmpp.modules.extension.xep0050_adhoc_commands.AdhocCommandsModule.class);
",1,1,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1395,private TypeName m_factoryproxystypename = TypeName.get(EntityFactoryProxy[].class);,"private TypeName m_factoryproxystypename=TypeName.get(EntityFactoryProxy[].class);
",1,1,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1396,private WizardDescriptor.Panel<?>[] panels;,"private WizardDescriptor.Panel<?>[] panels;
",1,1,5,,"Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1397,private Object[] table = new Object[128*1024];,"private Object[] table=new Object[128 * 1024];
",1,2,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1398,"private final String[] NO_COMPLETION_OPTIONS = new String[]{loc(""CompletionPopup.NoAutoCompletion"")};","private final String[] NO_COMPLETION_OPTIONS=new String[]{loc(""CompletionPopup.NoAutoCompletion"")};
",1,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1399,"private final StorageImpl<String, AttributeSet> highlightingsStorage = new StorageImpl<>(new ColoringStorage(ColoringStorage.FAV_HIGHLIGHT), null);","private final StorageImpl<String,AttributeSet> highlightingsStorage=new StorageImpl<>(new ColoringStorage(ColoringStorage.FAV_HIGHLIGHT),null);
",1,1,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1400,final org.netbeans.modules.git.ui.commit.MessageArea messageTextArea = new org.netbeans.modules.git.ui.commit.MessageAreaBuilder(),"final org.netbeans.modules.git.ui.commit.MessageArea messageTextArea=new org.netbeans.modules.git.ui.commit.MessageAreaBuilder().setWraplineHint(MESSAGE_WIDTH).setTitleHint(TITLE_WIDTH).setAccessibleName(getMessage(""ACSN_CommitForm_Message"")).setAccessibleDescription(getMessage(""ACSD_CommitForm_Message"")).build();
",1,1,4,,"Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1401,private Set<Event> expectedEvents = EnumSet.<Event>noneOf(Event.class);,"private Set<Event> expectedEvents=EnumSet.<Event>noneOf(Event.class);
",1,1,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1402,private final RequestProcessor.Task resChangedTask = Hacks.RP.create(new Runnable() {,"private final RequestProcessor.Task resChangedTask=Hacks.RP.create(new Runnable(){
  public @Override void run(){
    Set<FileObject> lazyPDirs=new HashSet<FileObject>();
    for (    FileObject fileObject : currentFiles.allInstances()) {
      Project p=FileOwnerQuery.getOwner(fileObject);
      if (p != null) {
        lazyPDirs.add(p.getProjectDirectory());
      }
    }
    if (!lazyPDirs.isEmpty()) {
      getDefault().LOAD.preferredProject(lazyPDirs);
    }
  }
}
);
",1,1,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1403,"private final Map<VCSFileProxy, VCSSystemProvider.VersioningSystem> folderOwners = new HashMap<VCSFileProxy, VCSSystemProvider.VersioningSystem>(200);","/** 
 * What folder is versioned by what versioning system.  TODO: use SoftHashMap if there is one available in APIs
 */
private final Map<VCSFileProxy,VCSSystemProvider.VersioningSystem> folderOwners=new HashMap<VCSFileProxy,VCSSystemProvider.VersioningSystem>(200);
",1,1,10,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
1404,"private DefaultTreeModel expressionModel = new DefaultTreeModel(new DefaultMutableTreeNode(null, false));","/** 
 * Tree model for the expression combo box. 
 */
private DefaultTreeModel expressionModel=new DefaultTreeModel(new DefaultMutableTreeNode(null,false));
",1,1,7,,"Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
NullLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
BooleanLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
1405,"private final Map<?,?> source;","/** 
 * The map to copy. Will not be modified.  
 */
private final Map<?,?> source;
",1,20,7,,"TextElement(TagElement-fragments, Javadoc-tags, FieldDeclaration-javadoc, ),
Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1406,"private final PropertyChangeListener pcl = WeakListeners.propertyChange(this, project.getLookup().lookup(NbGradleProject.class));","private final PropertyChangeListener pcl=WeakListeners.propertyChange(this,project.getLookup().lookup(NbGradleProject.class));
",1,1,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1407,PropertyChangeSupport pcs = new PropertyChangeSupport(PRI.this);,"PropertyChangeSupport pcs=new PropertyChangeSupport(PRI.this);
",1,1,4,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ThisExpression-qualifier, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1408,private final ClassPath EMPTY_PATH = ClassPathSupport.createClassPath(new URL[0]);,"private final ClassPath EMPTY_PATH=ClassPathSupport.createClassPath(new URL[0]);
",1,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayCreation-dimensions, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1409,"final String visItems[] = new String[] { noCodeBaseLabel, localLabel, webLabel, userLabel};","final String visItems[]=new String[]{noCodeBaseLabel,localLabel,webLabel,userLabel};
",1,1,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1410,"private final Image PlayButtonImage = new Image(AdvancedMedia.class.getResourceAsStream(""playbutton.png""));","private final Image PlayButtonImage=new Image(AdvancedMedia.class.getResourceAsStream(""playbutton.png""));
",1,1,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1411,private final UsageLogger testConfigUsageLogger = new UsageLogger.Builder(PhpProjectUtils.USAGE_LOGGER_NAME),"private final UsageLogger testConfigUsageLogger=new UsageLogger.Builder(PhpProjectUtils.USAGE_LOGGER_NAME).message(PhpProjectUtils.class,""USG_TEST_CONFIG_PHP"").firstMessageOnly(false).create();
",1,1,6,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1412,"private final Map<Dependency.Type,List<Dependency>> dependencies = new EnumMap<>(Dependency.Type.class);","/** 
 * Bower dependencies - maps the type of dependency to the list of dependencies of this type. 
 */
private final Map<Dependency.Type,List<Dependency>> dependencies=new EnumMap<>(Dependency.Type.class);
",1,1,9,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
QualifiedName(SimpleType-name, TypeLiteral-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
1413,long writeBufferSize = (long) DataUnit.MB.toB(256);,"long writeBufferSize=(long)DataUnit.MB.toB(256);
",1,1,6,,"PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1414,"private final Serializer<String> stringSerializer = (value, output) -> output.write(value.getBytes(StandardCharsets.UTF_8));","private final Serializer<String> stringSerializer=(value,output) -> output.write(value.getBytes(StandardCharsets.UTF_8));
",1,1,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1415,"private final LoadBalanceAuthorizer ALWAYS_AUTHORIZED = (sslSocket) -> sslSocket == null ? null : ""authorized.mydomain.com"";","private final LoadBalanceAuthorizer ALWAYS_AUTHORIZED=(sslSocket) -> sslSocket == null ? null : ""authorized.mydomain.com"";
",1,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, ConditionalExpression-expression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(InfixExpression-rightOperand, ConditionalExpression-expression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ConditionalExpression-thenExpression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ConditionalExpression-elseExpression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1416,"final PutGroup.GroupFlowFiles<FunctionContext, Connection, StatementFlowFileEnclosure> groupFlowFiles = (context, session, fc, conn, flowFiles, result) -> {","final PutGroup.GroupFlowFiles<FunctionContext,Connection,StatementFlowFileEnclosure> groupFlowFiles=(context,session,fc,conn,flowFiles,result) -> {
  final List<StatementFlowFileEnclosure> groups=new ArrayList<>();
  if (fc.obtainKeys) {
    groupFlowFilesBySQL.apply(context,session,fc,conn,flowFiles,groups,result);
  }
 else   if (fc.fragmentedTransaction) {
    groupFragmentedTransaction.apply(context,session,fc,conn,flowFiles,groups,result);
  }
 else {
    groupFlowFilesBySQLBatch.apply(context,session,fc,conn,flowFiles,groups,result);
  }
  return groups;
}
;
",1,3,12,,"Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1417,"private String checkerProxy = SystemInstance.get().getOptions().get(""openejb.version.check.proxy"", (String) null);","private String checkerProxy=SystemInstance.get().getOptions().get(""openejb.version.check.proxy"",(String)null);
",1,1,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, CastExpression-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(CastExpression-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1418,private final String TENANT_SPECIFIC_URL1 = getUrl() + ';' + PhoenixRuntime.TENANT_ID_ATTRIB,"private final String TENANT_SPECIFIC_URL1=getUrl() + ';' + PhoenixRuntime.TENANT_ID_ATTRIB+ ""=tenant1"";
",1,1,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1419,"private final Properties properties = PherfConstants.create().getProperties(PherfConstants.PHERF_PROPERTIES, false);","private final Properties properties=PherfConstants.create().getProperties(PherfConstants.PHERF_PROPERTIES,false);
",1,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1420,"Pattern loneLFDetectorPattern = Pattern.compile(""([^\r])\n"", Pattern.DOTALL | Pattern.MULTILINE);","Pattern loneLFDetectorPattern=Pattern.compile(""([^\r])\n"",Pattern.DOTALL | Pattern.MULTILINE);
",1,1,7,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1421,"private long defaultBlockSize = (new Configuration()).getLong(""dfs.blocksize"", 0);","private long defaultBlockSize=(new Configuration()).getLong(""dfs.blocksize"",0);
",1,1,7,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ParenthesizedExpression-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1422,private MessageScope.Local<?> scope = MessageScope.Local.of(__::bothE);,"private MessageScope.Local<?> scope=MessageScope.Local.of(__::bothE);
",1,2,8,,"Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ExpressionMethodReference-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ExpressionMethodReference-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1423,"private final int commandLimit = Integer.getInteger(""qpid.session.command_limit"", 64 * 1024);","private final int commandLimit=Integer.getInteger(""qpid.session.command_limit"",64 * 1024);
",1,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1424,"public final JettyServer server = new JettyServer(TESTING_PATH + ""rampart_service_repo"", false);","@Rule public final JettyServer server=new JettyServer(TESTING_PATH + ""rampart_service_repo"",false);
",1,1,8,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
StringLiteral(InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
1425,"private LoadingCache<String, List<String>> brokerMap = CacheBuilder.newBuilder()","private LoadingCache<String,List<String>> brokerMap=CacheBuilder.newBuilder().maximumSize(1000).concurrencyLevel(10).recordStats().ticker(Ticker.systemTicker()).removalListener(new RemovalListener<Object,Object>(){
  @Override public void onRemoval(  RemovalNotification<Object,Object> notification){
    log.debug(notification.getKey() + "" was removed, cause is "" + notification.getCause());
  }
}
).build(new CacheLoader<String,List<String>>(){
  @Override public List<String> load(  String key){
    List<String> list=Lists.newArrayList();
    return list;
  }
}
);
",1,1,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1426,"private String tag = TAG_DEFAULT + ""_SINK_TEST_"" + new Random().nextInt(99);","private String tag=TAG_DEFAULT + ""_SINK_TEST_"" + new Random().nextInt(99);
",1,1,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1427,"private final scala.collection.immutable.Map<SystemStream, SystemStreamMetadata> mockStreamMetadataMap = new scala.collection.immutable.Map.Map1(inputStream, mockStreamMetadata);","private final scala.collection.immutable.Map<SystemStream,SystemStreamMetadata> mockStreamMetadataMap=new scala.collection.immutable.Map.Map1(inputStream,mockStreamMetadata);
",1,1,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1428,private final ObjectProperty<Predicate<TreeTable.Node>> createTreeItemForNodeProperty = new SimpleObjectProperty<>(HIDE_EMPTY_LEAF);,"private final ObjectProperty<Predicate<TreeTable.Node>> createTreeItemForNodeProperty=new SimpleObjectProperty<>(HIDE_EMPTY_LEAF);
",1,1,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1429,private final K[] keys;,"/** 
 * The key candidates.              
 */
private final K[] keys;
",1,1,6,,"TextElement(TagElement-fragments, Javadoc-tags, FieldDeclaration-javadoc, ),
Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1430,private final boolean  isFloat;,"/** 
 * {@code true} for floating point number. 
 */
private final boolean isFloat;
",1,3,6,,"TextElement(TagElement-fragments, TagElement-fragments, Javadoc-tags, FieldDeclaration-javadoc, ),
TextElement(TagElement-fragments, Javadoc-tags, FieldDeclaration-javadoc, ),
Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1431,"private final ConcurrentMap<K,Object> map;","/** 
 * The map which contains the reference. 
 */
private final ConcurrentMap<K,Object> map;
",1,1,7,,"TextElement(TagElement-fragments, Javadoc-tags, FieldDeclaration-javadoc, ),
Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1432,"private final String workingDirectory = String.format(""%s/target/paxexam/%s/%s"", PathUtils.getBaseDir(), getClass().getSimpleName(), UUID.randomUUID());","private final String workingDirectory=String.format(""%s/target/paxexam/%s/%s"",PathUtils.getBaseDir(),getClass().getSimpleName(),UUID.randomUUID());
",1,1,13,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1433,"private final String[] TEXT_CONTENT_LINES = TEXT_CONTENT.split(""\n"");","private final String[] TEXT_CONTENT_LINES=TEXT_CONTENT.split(""\n"");
",1,2,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1434,"protected final Map<Class<?>, Object> services = Collections.synchronizedMap(new HashMap<>());","protected final Map<Class<?>,Object> services=Collections.synchronizedMap(new HashMap<>());
",1,1,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1435,"private AggregateOperator _op = new AggregateOperator(0, KahanPlus.getKahanPlusFnObject(), CorrectionLocationType.NONE);","private AggregateOperator _op=new AggregateOperator(0,KahanPlus.getKahanPlusFnObject(),CorrectionLocationType.NONE);
",1,1,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1436,"private HashMap<Long, Object>[] _rcMaps = null;","private HashMap<Long,Object>[] _rcMaps=null;
",1,1,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1437,@Expose private List<AggregationFunctionCallEval> aggrFunctions = PlannerUtil.EMPTY_AGG_FUNCS;,"/** 
 * Aggregation Functions 
 */
@Expose private List<AggregationFunctionCallEval> aggrFunctions=PlannerUtil.EMPTY_AGG_FUNCS;
",1,1,6,,"SimpleName(MarkerAnnotation-typeName, ),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
QualifiedName(VariableDeclarationFragment-initializer, ),
"
1438,private final Output charactersOutput = SafeContentHandler.super::characters;,"/** 
 * Output through the  {@link ContentHandler#characters(char[],int,int)}method of the decorated content handler.
 */
private final Output charactersOutput=SafeContentHandler.super::characters;
",1,1,6,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SuperMethodReference-qualifier, VariableDeclarationFragment-initializer, ),
SimpleName(SuperMethodReference-name, VariableDeclarationFragment-initializer, ),
"
1439,private final MessageScope.Local<Long> countMessageScopeIn = MessageScope.Local.of(__::inE);,"private final MessageScope.Local<Long> countMessageScopeIn=MessageScope.Local.of(__::inE);
",1,2,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ExpressionMethodReference-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ExpressionMethodReference-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1440,private final Object notes[] = new Object[Constants.MAX_NOTES];,"/** 
 * Notes.
 */
private final Object notes[]=new Object[Constants.MAX_NOTES];
",1,1,8,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
Dimension(VariableDeclarationFragment-extraDimensions2, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
QualifiedName(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, ),
"
1441,protected Class<?> paramTypes[] = null;,"/** 
 * The parameter types of the parameters to be collected.
 */
protected Class<?> paramTypes[]=null;
",1,1,6,,"Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
WildcardType(ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
Dimension(VariableDeclarationFragment-extraDimensions2, ),
NullLiteral(VariableDeclarationFragment-initializer, ),
"
1442,String noteName[][]=new String[4][];,"String noteName[][]=new String[4][];
",1,1,8,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1443,protected volatile Pattern allows[] = new Pattern[0];,"/** 
 * The set of <code>allow</code> regular expressions we will evaluate.
 */
protected volatile Pattern allows[]=new Pattern[0];
",1,1,8,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
Dimension(VariableDeclarationFragment-extraDimensions2, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, ),
"
1444,"private FOUserAgent ua = FopFactory.newInstance(new File(""."").toURI()).newFOUserAgent();","private FOUserAgent ua=FopFactory.newInstance(new File(""."").toURI()).newFOUserAgent();
",1,4,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1445,"protected final String NL = nl == null ? (System.getProperties().getProperty(""line.separator"")) : nl;","protected final String NL=nl == null ? (System.getProperties().getProperty(""line.separator"")) : nl;
",1,1,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(InfixExpression-rightOperand, ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, ParenthesizedExpression-expression, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ParenthesizedExpression-expression, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ParenthesizedExpression-expression, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ParenthesizedExpression-expression, ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ConditionalExpression-elseExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1446,"Collection<Integer> selection = new ArrayList<Integer>(Arrays.asList(1, 2));","Collection<Integer> selection=new ArrayList<Integer>(Arrays.asList(1,2));
",1,1,9,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1447,private ErrorListener m_errorListener = new org.apache.xml.utils.DefaultErrorHandler(false);,"/** 
 * The error listener.   
 */
private ErrorListener m_errorListener=new org.apache.xml.utils.DefaultErrorHandler(false);
",1,1,5,,"Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
1448,int[] m_map[] = new int[BLOCKSIZE][];,"int[] m_map[]=new int[BLOCKSIZE][];
",1,1,8,,"PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1449,"ExtendedType hashET = new ExtendedType(-1, """", """");","/** 
 * Workspace for lookup. NOT THREAD SAFE!
 */
ExtendedType hashET=new ExtendedType(-1,"""","""");
",1,1,6,,"SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
NumberLiteral(PrefixExpression-operand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
1450,"EncodingInfo m_encodingInfo = new EncodingInfo(null,null, '\u0000');","/** 
 * The encoding information associated with this serializer. Although initially there is no encoding, there is a dummy EncodingInfo object that will say that every character is in the encoding. This is useful for a serializer that is in temporary output state and has no associated encoding. A serializer in final output state will have an encoding, and will worry about whether  single chars or surrogate pairs of high/low chars form characters in the output encoding. 
 */
EncodingInfo m_encodingInfo=new EncodingInfo(null,null,'\u0000');
",1,1,6,,"SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
CharacterLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
1451,"int[] min = {0, 0, 0}, max={255,255,255};","int[] min={0,0,0}, max={255,255,255};
",1,1,10,,"PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1452,private boolean antialiasing = (Boolean) ANTI_ALIASING.getDefaultValue();,"/** 
 * true if anti-aliasing is set 
 */
private boolean antialiasing=(Boolean)ANTI_ALIASING.getDefaultValue();
",1,1,6,,"Modifier(),
PrimitiveType(),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, CastExpression-type, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, CastExpression-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, CastExpression-expression, VariableDeclarationFragment-initializer, ),
"
1453,"private final DataNode procDataNode = new DataNode(new byte[0], -1L, new StatPersisted());","/** 
 * create a /zookeeper filesystem that is the proc filesystem of zookeeper
 */
private final DataNode procDataNode=new DataNode(new byte[0],-1L,new StatPersisted());
",1,2,10,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
NumberLiteral(ArrayCreation-dimensions, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
NumberLiteral(PrefixExpression-operand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
1454,private final byte[] outputBuffer = new byte[writeBuffer.length * 2];,"private final byte[] outputBuffer=new byte[writeBuffer.length * 2];
",2,140,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-leftOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1455,private final Long expiredSessionMarker = (long) -1;,"private final Long expiredSessionMarker=(long)-1;
",2,43,6,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1456,"private Map<Class<?>, JavaInterface> cache  = Collections.synchronizedMap(new WeakHashMap<Class<?>, JavaInterface>());","private Map<Class<?>,JavaInterface> cache=Collections.synchronizedMap(new WeakHashMap<Class<?>,JavaInterface>());
",2,7,12,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1457,"final String url = ""vm:","final String url=""vm://"" + DurableSubDelayedUnsubscribeTest.getName() + ""?""+ ""jms.redeliveryPolicy.maximumRedeliveries=2&jms.redeliveryPolicy.initialRedeliveryDelay=500&""+ ""jms.producerWindowSize=20971520&jms.prefetchPolicy.all=100&""+ ""jms.copyMessageOnSend=false&jms.disableTimeStampsByDefault=false&""+ ""jms.alwaysSyncSend=true&jms.dispatchAsync=false&""+ ""jms.watchTopicAdvisories=false&""+ ""waitForStart=200&create=false"";
",2,168,13,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1458,"final private String DEVICE_ID = ""uuid:Felix-BinaryLight+"" +Integer.toHexString(new Random(System.currentTimeMillis()).nextInt());","final private String DEVICE_ID=""uuid:Felix-BinaryLight+"" + Integer.toHexString(new Random(System.currentTimeMillis()).nextInt());
",2,41,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-arguments, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-arguments, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-arguments, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1459,"private final String jgroupsConfigString = ""UDP(oob_thread_pool.max_threads=300;"" + ""bind_addr=127.0.0.1;oob_thread_pool.keep_alive_time=1000;"" + ""max_bundle_size=31k;mcast_send_buf_size=640000;"" + ""internal_thread_pool.keep_alive_time=60000;"" + ""internal_thread_pool.rejection_policy=discard;"" + ""mcast_recv_buf_size=25000000;bind_port=55200;"" + ""internal_thread_pool.queue_max_size=100;"" + ""mcast_port=45688;thread_pool.min_threads=20;"" + ""oob_thread_pool.rejection_policy=discard;"" + ""thread_pool.max_threads=300;enable_diagnostics=false;"" + ""thread_pool.enabled=true;internal_thread_pool.queue_enabled=true;"" + ""ucast_recv_buf_size=20000000;ucast_send_buf_size=640000;"" + ""internal_thread_pool.enabled=true;oob_thread_pool.enabled=true;"" + ""ip_ttl=2;thread_pool.rejection_policy=discard;thread_pool.keep_alive_time=5000;"" + ""internal_thread_pool.max_threads=10;thread_pool.queue_enabled=true;"" + ""mcast_addr=230.0.0.4;singleton_name=udp;max_bundle_timeout=30;"" + ""oob_thread_pool.queue_enabled=false;internal_thread_pool.min_threads=1;"" + ""bundler_type=old;oob_thread_pool.min_threads=20;"" + ""thread_pool.queue_max_size=1000):PING(num_initial_members=3;"" + ""timeout=2000):MERGE3(min_interval=20000;max_interval=100000)"" + "":FD_SOCK(bind_addr=127.0.0.1;start_port=54200):FD_ALL(interval=3000;"" + ""timeout=15000):VERIFY_SUSPECT(bind_addr=127.0.0.1;"" + ""timeout=1500):pbcast.NAKACK2(max_msg_batch_size=100;"" + ""xmit_table_msgs_per_row=10000;xmit_table_max_compaction_time=10000;"" + ""xmit_table_num_rows=100;xmit_interval=1000):UNICAST3(xmit_table_msgs_per_row=10000;"" + ""xmit_table_max_compaction_time=10000;xmit_table_num_rows=20)"" + "":pbcast.STABLE(desired_avg_gossip=50000;max_bytes=400000;"" + ""stability_delay=1000):pbcast.GMS(print_local_addr=true;"" + ""view_bundling=true;join_timeout=3000;view_ack_collection_timeout=5000;"" + ""resume_task_timeout=7500):UFC(max_credits=1m;min_threshold=0.40)"" + "":MFC(max_credits=1m;min_threshold=0.40):FRAG2(frag_size=30k)"" + "":RSVP(resend_interval=500;ack_on_delivery=false;timeout=60000)"";","private final String jgroupsConfigString=""UDP(oob_thread_pool.max_threads=300;"" + ""bind_addr=127.0.0.1;oob_thread_pool.keep_alive_time=1000;"" + ""max_bundle_size=31k;mcast_send_buf_size=640000;""+ ""internal_thread_pool.keep_alive_time=60000;""+ ""internal_thread_pool.rejection_policy=discard;""+ ""mcast_recv_buf_size=25000000;bind_port=55200;""+ ""internal_thread_pool.queue_max_size=100;""+ ""mcast_port=45688;thread_pool.min_threads=20;""+ ""oob_thread_pool.rejection_policy=discard;""+ ""thread_pool.max_threads=300;enable_diagnostics=false;""+ ""thread_pool.enabled=true;internal_thread_pool.queue_enabled=true;""+ ""ucast_recv_buf_size=20000000;ucast_send_buf_size=640000;""+ ""internal_thread_pool.enabled=true;oob_thread_pool.enabled=true;""+ ""ip_ttl=2;thread_pool.rejection_policy=discard;thread_pool.keep_alive_time=5000;""+ ""internal_thread_pool.max_threads=10;thread_pool.queue_enabled=true;""+ ""mcast_addr=230.0.0.4;singleton_name=udp;max_bundle_timeout=30;""+ ""oob_thread_pool.queue_enabled=false;internal_thread_pool.min_threads=1;""+ ""bundler_type=old;oob_thread_pool.min_threads=20;""+ ""thread_pool.queue_max_size=1000):PING(num_initial_members=3;""+ ""timeout=2000):MERGE3(min_interval=20000;max_interval=100000)""+ "":FD_SOCK(bind_addr=127.0.0.1;start_port=54200):FD_ALL(interval=3000;""+ ""timeout=15000):VERIFY_SUSPECT(bind_addr=127.0.0.1;""+ ""timeout=1500):pbcast.NAKACK2(max_msg_batch_size=100;""+ ""xmit_table_msgs_per_row=10000;xmit_table_max_compaction_time=10000;""+ ""xmit_table_num_rows=100;xmit_interval=1000):UNICAST3(xmit_table_msgs_per_row=10000;""+ ""xmit_table_max_compaction_time=10000;xmit_table_num_rows=20)""+ "":pbcast.STABLE(desired_avg_gossip=50000;max_bytes=400000;""+ ""stability_delay=1000):pbcast.GMS(print_local_addr=true;""+ ""view_bundling=true;join_timeout=3000;view_ack_collection_timeout=5000;""+ ""resume_task_timeout=7500):UFC(max_credits=1m;min_threshold=0.40)""+ "":MFC(max_credits=1m;min_threshold=0.40):FRAG2(frag_size=30k)""+ "":RSVP(resend_interval=500;ack_on_delivery=false;timeout=60000)"";
",2,47,36,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1460,private final ScheduledExecutorService scheduler = Executors.newScheduledThreadPool(clients.size() * 2);,"private final ScheduledExecutorService scheduler=Executors.newScheduledThreadPool(clients.size() * 2);
",2,10,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1461,private Short isGlobal = Short.valueOf((short) 0);,"@Column(name=""is_global"",nullable=false,length=1) private Short isGlobal=Short.valueOf((short)0);
",2,2,7,,"Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
PrimitiveType(CastExpression-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
NumberLiteral(CastExpression-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
1462,"protected char[] chars = {'a', 'b', 'c', 'd', 'e', 'f', 'g',","protected char[] chars={'a','b','c','d','e','f','g','h','j','k','m','n','p','q','r','s','t','u','v','w','x','y','z','A','B','C','D','E','F','G','H','J','K','M','N','P','Q','R','S','T','U','V','W','X','Y','Z','2','3','4','5','6','7','8','9'};
",2,2,11,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1463,"private final Map<Verb, Supplier<? extends IVersionedAsymmetricSerializer<?, ?>>> serializers = new HashMap<>();","private final Map<Verb,Supplier<? extends IVersionedAsymmetricSerializer<?,?>>> serializers=new HashMap<>();
",2,14,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1464,"String test1Name = new AntUnitTestCase.TestCaseName(f, ""test1"").getName();","String test1Name=new AntUnitTestCase.TestCaseName(f,""test1"").getName();
",2,7,6,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1465,"private boolean isMono = !Os.isFamily(""windows"");","/** 
 * @since Ant 1.7
 */
private boolean isMono=!Os.isFamily(""windows"");
",2,4,6,,"Modifier(),
PrimitiveType(),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, PrefixExpression-operand, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, PrefixExpression-operand, VariableDeclarationFragment-initializer, ),
StringLiteral(MethodInvocation-arguments, PrefixExpression-operand, VariableDeclarationFragment-initializer, ),
"
1466,"private Map<String, Map<String, ?>> classBeansOfType = new ConcurrentHashMap<String, Map<String, ?>>();","/** 
 * To prevent to much use of #buildMapWithRole we store already used values here
 * @see #buildMapWithRole(Class)
 */
private Map<String,Map<String,?>> classBeansOfType=new ConcurrentHashMap<String,Map<String,?>>();
",2,2,12,,"Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
"
1467,"private final ImageIcon runningIcon = JMeterUtils.getImage(IMAGES_PREFIX + iconSize +""/task-recurring.png"");","private final ImageIcon runningIcon=JMeterUtils.getImage(IMAGES_PREFIX + iconSize + ""/task-recurring.png"");
",2,6,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1468,"protected final ConfigKey<Boolean> EnableLB = new ConfigKey<Boolean>(Boolean.class, ""agent.lb.enabled"", ""Advanced"", ""false"", ""Enable agent load balancing between management server nodes"", true);","protected final ConfigKey<Boolean> EnableLB=new ConfigKey<Boolean>(Boolean.class,""agent.lb.enabled"",""Advanced"",""false"",""Enable agent load balancing between management server nodes"",true);
",2,4,13,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1469,"Function.MapFunction<Object, ?> outputFn = FunctionOperatorUtil.CONSOLE_SINK_FN;","@VisibleForTesting Function.MapFunction<Object,?> outputFn=FunctionOperatorUtil.CONSOLE_SINK_FN;
",2,2,5,,"QualifiedName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
WildcardType(ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
QualifiedName(VariableDeclarationFragment-initializer, ),
"
1470,"private final Map<TupleTag<?>, KV<WindowingStrategy<?, ?>, SideInputBroadcast<?>>> sideInputs;","private final Map<TupleTag<?>,KV<WindowingStrategy<?,?>,SideInputBroadcast<?>>> sideInputs;
",2,8,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1471,"private final EnumMap<Event.Type, ChannelGroup> groups = new EnumMap<>(Event.Type.class);","private final EnumMap<Event.Type,ChannelGroup> groups=new EnumMap<>(Event.Type.class);
",2,8,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, TypeLiteral-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1472,"private List<Pair<Traversal.Admin<S, C>, Comparator<C>>> comparators = new ArrayList<>();","private List<Pair<Traversal.Admin<S,C>,Comparator<C>>> comparators=new ArrayList<>();
",2,10,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1473,private Class<? extends ReindexingStrategy> reindexingStrategy = ReindexingStrategy.NeverNeed.class;,"private Class<? extends ReindexingStrategy> reindexingStrategy=ReindexingStrategy.NeverNeed.class;
",2,32,5,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, TypeLiteral-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1474,"private final DoFn<KV<InputT, RestrictionT>, OutputT>.ProcessContext outerContext;","private final DoFn<KV<InputT,RestrictionT>,OutputT>.ProcessContext outerContext;
",2,30,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, QualifiedType-qualifier, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, QualifiedType-qualifier, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, QualifiedType-qualifier, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, QualifiedType-qualifier, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, QualifiedType-qualifier, FieldDeclaration-type, ),
SimpleName(QualifiedType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1475,"private final DoFnRunner<KeyedWorkItem<byte[], KV<InputT, RestrictionT>>, OutputT> underlying;","private final DoFnRunner<KeyedWorkItem<byte[],KV<InputT,RestrictionT>>,OutputT> underlying;
",2,3,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1476,@Mock private UnboundedSource.UnboundedReader<?> reader1;,"@Mock private UnboundedSource.UnboundedReader<?> reader1;
",2,6,5,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1477,"private final ConcurrentMap<String, Map<String, List<RunnerApi.ArtifactInformation>>> toStage =","private final ConcurrentMap<String,Map<String,List<RunnerApi.ArtifactInformation>>> toStage=new ConcurrentHashMap<>();
",2,2,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1478,private final @Nullable String jarPath = System.getProperty(jarPathProperty);,"private final @Nullable String jarPath=System.getProperty(jarPathProperty);
",2,2,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1479,public @org.apache.avro.reflect.Nullable @Nullable Person newPerson;,"public @org.apache.avro.reflect.Nullable @Nullable Person newPerson;
",2,2,5,,"Modifier(FieldDeclaration-modifiers, ),
QualifiedName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1480,private ListeningExecutorService listenerExecutor = MoreExecutors.listeningDecorator(Executors.newSingleThreadExecutor(new ThreadFactoryBuilder(),"private ListeningExecutorService listenerExecutor=MoreExecutors.listeningDecorator(Executors.newSingleThreadExecutor(new ThreadFactoryBuilder().setNameFormat(""brooklyn-usagemanager-listener-%d"").build()));
",2,2,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1481,"@JsonProperty(value = ""metadata_version"", access = JsonProperty.Access.WRITE_ONLY) private String metadataVersion;","@JsonProperty(value=""metadata_version"",access=JsonProperty.Access.WRITE_ONLY) private String metadataVersion;
",2,10,8,,"SimpleName(NormalAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(MemberValuePair-name, NormalAnnotation-values, FieldDeclaration-modifiers, ),
StringLiteral(MemberValuePair-value, NormalAnnotation-values, FieldDeclaration-modifiers, ),
SimpleName(MemberValuePair-name, NormalAnnotation-values, FieldDeclaration-modifiers, ),
QualifiedName(MemberValuePair-value, NormalAnnotation-values, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1482,"boolean includeKey = false, includePrecedingComments = true, includeOriginalIndentation = false;","boolean includeKey=false, includePrecedingComments=true, includeOriginalIndentation=false;
",2,2,7,,"PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
BooleanLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
BooleanLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
BooleanLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1483,"private final List<Pair<String, @Nullable Object>> attrs = new ArrayList<>();","private final List<Pair<String,@Nullable Object>> attrs=new ArrayList<>();
",2,9,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(MarkerAnnotation-typeName, SimpleType-annotations, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1484,"private GAttributeInfo cheeseInfo = new GAttributeInfo(""cheese"", String.class.getName(), true, true, ""getCheese"", ""setCheese"");","private GAttributeInfo cheeseInfo=new GAttributeInfo(""cheese"",String.class.getName(),true,true,""getCheese"",""setCheese"");
",2,16,11,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1485,"private final MappingSet GetHashIncomingBuildColMapping = new MappingSet(""incomingRowIdx"", null, ""incoming"", null, DO_SETUP_CONSTANT, GET_HASH_BUILD_INNER);","private final MappingSet GetHashIncomingBuildColMapping=new MappingSet(""incomingRowIdx"",null,""incoming"",null,DO_SETUP_CONSTANT,GET_HASH_BUILD_INNER);
",2,7,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1486,private final Supplier<DateFormat> dateFormat = () -> DataTypeUtils.getDateFormat(RecordFieldType.DATE.getDefaultFormat());,"private final Supplier<DateFormat> dateFormat=() -> DataTypeUtils.getDateFormat(RecordFieldType.DATE.getDefaultFormat());
",2,6,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1487,"private TwoKeyConcurrentCache<Class<?>,Class<? extends Annotation>,List<Annotation>> classAnnotationCache = new TwoKeyConcurrentCache<>(DISABLE_ANNOTATION_CACHING);","private TwoKeyConcurrentCache<Class<?>,Class<? extends Annotation>,List<Annotation>> classAnnotationCache=new TwoKeyConcurrentCache<>(DISABLE_ANNOTATION_CACHING);
",2,7,11,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1488,public WireMockRule wireMockRule = new WireMockRule(wireMockConfig().dynamicPort().dynamicHttpsPort(),"@Rule public WireMockRule wireMockRule=new WireMockRule(wireMockConfig().dynamicPort().dynamicHttpsPort().keystorePath(TestConstants.KEYSTORE_FILE).keystorePassword(String.valueOf(TestConstants.KEYSTORE_PWD())).keystoreType(TestConstants.KEYSTORE_TYPE));
",2,3,7,,"Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
1489,public String choices[] = new String[] {};,"public String choices[]=new String[]{};
",2,2,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ArrayInitializer(ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1490,"private AtomicLong timeoutDuration = new AtomicLong(TimeUnit.MILLISECONDS.convert(5, TimeUnit.MINUTES));","private AtomicLong timeoutDuration=new AtomicLong(TimeUnit.MILLISECONDS.convert(5,TimeUnit.MINUTES));
",2,3,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1491,"private KeyValueWriter<K, V> recordWriters[];","private KeyValueWriter<K,V> recordWriters[];
",2,3,6,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
"
1492,"private Locale m_locale = new Locale(System.getProperty(""user.language""), System.getProperty( ""user.country"" ));","private Locale m_locale=new Locale(System.getProperty(""user.language""),System.getProperty(""user.country""));
",2,5,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1493,"private final DimFilter bound1 = new BoundDimFilter(""dim1"", ""from"", ""to"", false, false, false, null,","private final DimFilter bound1=new BoundDimFilter(""dim1"",""from"",""to"",false,false,false,null,StringComparators.LEXICOGRAPHIC);
",2,2,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1494,"private final PermittableGroup group1 = new PermittableGroup(""1"", Arrays.asList(abcPost1, abcGet1, defGet1));","private final PermittableGroup group1=new PermittableGroup(""1"",Arrays.asList(abcPost1,abcGet1,defGet1));
",2,4,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1495,"Tuple3<Tuple2<String, Double>, Tuple2<Long, Long>, Tuple2<Integer, Long>>[] dataISD =","@SuppressWarnings(""unchecked"") Tuple3<Tuple2<String,Double>,Tuple2<Long,Long>,Tuple2<Integer,Long>>[] dataISD=new Tuple3[]{new Tuple3<Tuple2<String,Double>,Tuple2<Long,Long>,Tuple2<Integer,Long>>(new Tuple2<String,Double>(""hello"",1.0),new Tuple2<Long,Long>(1L,1L),new Tuple2<Integer,Long>(4,-10L)),new Tuple3<Tuple2<String,Double>,Tuple2<Long,Long>,Tuple2<Integer,Long>>(new Tuple2<String,Double>(""hello"",2.0),new Tuple2<Long,Long>(1L,2L),new Tuple2<Integer,Long>(4,-5L)),new Tuple3<Tuple2<String,Double>,Tuple2<Long,Long>,Tuple2<Integer,Long>>(new Tuple2<String,Double>(""hello"",3.0),new Tuple2<Long,Long>(1L,3L),new Tuple2<Integer,Long>(4,0L)),new Tuple3<Tuple2<String,Double>,Tuple2<Long,Long>,Tuple2<Integer,Long>>(new Tuple2<String,Double>(""hello"",3.5),new Tuple2<Long,Long>(1L,4L),new Tuple2<Integer,Long>(4,5L)),new Tuple3<Tuple2<String,Double>,Tuple2<Long,Long>,Tuple2<Integer,Long>>(new Tuple2<String,Double>(""hello"",4325.12),new Tuple2<Long,Long>(1L,5L),new Tuple2<Integer,Long>(4,15L)),new Tuple3<Tuple2<String,Double>,Tuple2<Long,Long>,Tuple2<Integer,Long>>(new Tuple2<String,Double>(""world"",1.0),new Tuple2<Long,Long>(2L,4L),new Tuple2<Integer,Long>(45,-5L)),new Tuple3<Tuple2<String,Double>,Tuple2<Long,Long>,Tuple2<Integer,Long>>(new Tuple2<String,Double>(""world"",2.0),new Tuple2<Long,Long>(2L,6L),new Tuple2<Integer,Long>(45,5L)),new Tuple3<Tuple2<String,Double>,Tuple2<Long,Long>,Tuple2<Integer,Long>>(new Tuple2<String,Double>(""world"",3.0),new Tuple2<Long,Long>(2L,8L),new Tuple2<Integer,Long>(323,2L)),new Tuple3<Tuple2<String,Double>,Tuple2<Long,Long>,Tuple2<Integer,Long>>(new Tuple2<String,Double>(""world"",3.5),new Tuple2<Long,Long>(2L,9L),new Tuple2<Integer,Long>(323,5L)),new Tuple3<Tuple2<String,Double>,Tuple2<Long,Long>,Tuple2<Integer,Long>>(new Tuple2<String,Double>(""world"",4325.12),new Tuple2<Long,Long>(2L,123L),new Tuple2<Integer,Long>(555,1L))};
",2,2,12,,"SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ArrayType-elementType, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ArrayType-elementType, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ArrayType-elementType, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ArrayType-elementType, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ArrayType-elementType, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ArrayType-elementType, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ArrayType-elementType, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ArrayType-elementType, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
"
1496,"private Edge<LongValue, NullValue> edge = new Edge<>(null, target, NullValue.getInstance());","private Edge<LongValue,NullValue> edge=new Edge<>(null,target,NullValue.getInstance());
",2,3,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1497,"private final Aggregator<K, V, Long> countAdder = (aggKey, value, aggregate) -> aggregate + 1L;","private final Aggregator<K,V,Long> countAdder=(aggKey,value,aggregate) -> aggregate + 1L;
",2,3,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1498,"private final SegmentId id1 = new SegmentId(EMPTY_STORE, 0x0000000000000001L, 0xa000000000000001L, cache::recordHit);","private final SegmentId id1=new SegmentId(EMPTY_STORE,0x0000000000000001L,0xa000000000000001L,cache::recordHit);
",2,3,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ExpressionMethodReference-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ExpressionMethodReference-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1499,"private Action[] paletteActions = new Action[] { new DummyAction(1), new DummyAction(2), new DummyAction(3) };","private Action[] paletteActions=new Action[]{new DummyAction(1),new DummyAction(2),new DummyAction(3)};
",2,13,12,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1500,"public GfshCommandRule gfsh = new GfshCommandRule(server::getJmxPort, PortType.jmxManager);","@Rule public GfshCommandRule gfsh=new GfshCommandRule(server::getJmxPort,PortType.jmxManager);
",2,2,7,,"Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(ExpressionMethodReference-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(ExpressionMethodReference-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
1501,"public SpyRule ruleOne = new SpyRule(""ruleOne"", invocations[0]);","public SpyRule ruleOne=new SpyRule(""ruleOne"",invocations[0]);
",2,2,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayAccess-array, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayAccess-index, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1502,"private @Inject @Check(type = ""CHECK"") IPayment payment;","private @Inject @Check(type=""CHECK"") IPayment payment;
",2,3,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(NormalAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(MemberValuePair-name, NormalAnnotation-values, FieldDeclaration-modifiers, ),
StringLiteral(MemberValuePair-value, NormalAnnotation-values, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1503,final Object[] resultSet = new Object[bigSet.length * 2];,"final Object[] resultSet=new Object[bigSet.length * 2];
",2,2,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-leftOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1504,"private int _physicalColumn = -1, _logicalColumn = -1, _colCount = 0;","private int _physicalColumn=-1, _logicalColumn=-1, _colCount=0;
",2,13,8,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1505,"private final String LOCATION_1 = System.getProperty(""java.io.tmpdir"") + ""loc1"" + File.separator","private final String LOCATION_1=System.getProperty(""java.io.tmpdir"") + ""loc1"" + File.separator+ UserHS2ConnectionFileParser.DEFAULT_CONNECTION_CONFIG_FILE_NAME;
",2,2,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1506,"private Iterator<ConsumerRecord<byte[], byte[]>> consumerRecordIterator = null;","/** 
 * On each Kafka Consumer poll() call we get a batch of records, this Iterator will be used to loop over it.
 */
private Iterator<ConsumerRecord<byte[],byte[]>> consumerRecordIterator=null;
",2,2,9,,"Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
NullLiteral(VariableDeclarationFragment-initializer, ),
"
1507,private char fieldDelimiter = (char) LazySerDeParameters.DefaultSeparators[0];,"private char fieldDelimiter=(char)LazySerDeParameters.DefaultSeparators[0];
",2,2,6,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayAccess-array, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayAccess-index, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1508,"@SuppressWarnings(""unused"") @QuerySqlField(index = true) private int orgId;","/** 
 */
@SuppressWarnings(""unused"") @QuerySqlField(index=true) private int orgId;
",2,2,8,,"SimpleName(SingleMemberAnnotation-typeName, ),
StringLiteral(SingleMemberAnnotation-value, ),
SimpleName(NormalAnnotation-typeName, ),
SimpleName(MemberValuePair-name, NormalAnnotation-values, ),
BooleanLiteral(MemberValuePair-value, NormalAnnotation-values, ),
Modifier(),
PrimitiveType(),
SimpleName(VariableDeclarationFragment-name, ),
"
1509,"private final Map<String, Cache<?, ?>> caches = new MapMaker().makeMap();","private final Map<String,Cache<?,?>> caches=new MapMaker().makeMap();
",2,3,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1510,"final Pair<String,String> p5 = new Pair<String,String>(null, ""There"");","final Pair<String,String> p5=new Pair<String,String>(null,""There"");
",2,3,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1511,"final Pair<String,String> p6 = new Pair<String,String>(""Hi"", null);","final Pair<String,String> p6=new Pair<String,String>(""Hi"",null);
",2,2,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1512,ConversionContext context = new ConversionContext.Builder(TypeLiteral.of(Class.class)),"ConversionContext context=new ConversionContext.Builder(TypeLiteral.of(Class.class)).build();
",2,2,6,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1513,"Tag resourceTag1 = Tag.builder().resourceType(IMAGE).resourceId(""1"").key(""key"").value(""value"").build();","Tag resourceTag1=Tag.builder().resourceType(IMAGE).resourceId(""1"").key(""key"").value(""value"").build();
",2,3,13,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1514,"protected Image image64bit = ImageBuilder.fromImage(image).id(getProviderFormatId(""image64bId"")).providerId(""image64bId"")","protected Image image64bit=ImageBuilder.fromImage(image).id(getProviderFormatId(""image64bId"")).providerId(""image64bId"").operatingSystem(os.toBuilder().arch(""X86_64"").build()).build();
",2,2,11,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1515,"JustProvider justProvider = new JustProvider(""servo"", Suppliers.ofInstance(URI.create(""http:","JustProvider justProvider=new JustProvider(""servo"",Suppliers.ofInstance(URI.create(""http://servo"")),ImmutableSet.of(""US""));
",2,2,12,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1516,"HttpRequest list = HttpRequest.builder().method(GET).endpoint(""https:","HttpRequest list=HttpRequest.builder().method(GET).endpoint(""https://api2.dynect.net/REST/GeoRegionGroup/srv"").addHeader(""API-Version"",""3.3.8"").addHeader(CONTENT_TYPE,APPLICATION_JSON).addHeader(""Auth-Token"",authToken).build();
",2,2,8,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1517,"String zoneFQDN = System.getProperty(""user.name"").replace('.', '-') + "".record.dynecttest.jclouds.org"";","String zoneFQDN=System.getProperty(""user.name"").replace('.','-') + "".record.dynecttest.jclouds.org"";
",2,2,9,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1518,long x = System.currentTimeMillis()+(count++);,"long x=System.currentTimeMillis() + (count++);
",2,2,5,,"PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(PostfixExpression-operand, ParenthesizedExpression-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1519,@Parameter(0) public Boolean successfulParent;,"@Parameter(0) public Boolean successfulParent;
",2,2,5,,"SimpleName(SingleMemberAnnotation-typeName, FieldDeclaration-modifiers, ),
NumberLiteral(SingleMemberAnnotation-value, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1520,"Class<?> implClass=Null.class, interfaceClass=Null.class, stopClass=Null.class;","Class<?> implClass=Null.class, interfaceClass=Null.class, stopClass=Null.class;
",2,4,8,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1521,"Class<?>[] children={}, parsers={}, serializers={};","Class<?>[] children={}, parsers={}, serializers={};
",2,2,9,,"SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
ArrayInitializer(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
ArrayInitializer(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
ArrayInitializer(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1522,private Set<String> requestExcludeHeaders = super.getOutboundRequestExcludeHeaders();,"private Set<String> requestExcludeHeaders=super.getOutboundRequestExcludeHeaders();
",2,2,5,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SuperMethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1523,"private final MavenProject depender1 = createProject( Arrays.asList( toDependency( aProject ) ), ""depender1"" );","private final MavenProject depender1=createProject(Arrays.asList(toDependency(aProject)),""depender1"");
",2,2,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1524,private Set<String> scannedDirs = Collections.synchronizedSet(new HashSet<String>(1000));,"private Set<String> scannedDirs=Collections.synchronizedSet(new HashSet<String>(1000));
",2,2,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1525,"public boolean captureScreen = Boolean.valueOf(System.getProperty(""jemmy.screen.capture"", ""true"")).booleanValue();","/** 
 * screen capture feature in case of failure is enabled by default
 */
public boolean captureScreen=Boolean.valueOf(System.getProperty(""jemmy.screen.capture"",""true"")).booleanValue();
",2,2,10,,"Modifier(),
PrimitiveType(),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
"
1526,"private Map<?,List<? extends ErrorRule>> errors = new HashMap<Object, List<? extends ErrorRule>>();","private Map<?,List<? extends ErrorRule>> errors=new HashMap<Object,List<? extends ErrorRule>>();
",2,2,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1527,private String settingsTypeId = (String) Suite.ENV[0][2];,"private String settingsTypeId=(String)Suite.ENV[0][2];
",2,2,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, CastExpression-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayAccess-array, ArrayAccess-array, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayAccess-index, ArrayAccess-array, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayAccess-index, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1528,"String b[] = new String[] { ""1"", ""2"", ""3"", ""4"" };","String b[]=new String[]{""1"",""2"",""3"",""4""};
",2,3,9,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1529,"private final RequestProcessor postSearchRequestProcessor = new RequestProcessor(DependenciesPanel.class.getName() + "" (POST SEARCH)"");","private final RequestProcessor postSearchRequestProcessor=new RequestProcessor(DependenciesPanel.class.getName() + "" (POST SEARCH)"");
",2,2,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1530,WizardDescriptor.Panel panels[] = new WizardDescriptor.Panel[2];,"WizardDescriptor.Panel panels[]=new WizardDescriptor.Panel[2];
",2,2,6,,"QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1531,"private final Relationship FAKE_RELATIONSHIP = new Relationship.Builder().name(""FAKE"").build();","private final Relationship FAKE_RELATIONSHIP=new Relationship.Builder().name(""FAKE"").build();
",2,2,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1532,"private final RadioGroup<Type> rg = new RadioGroup<>(""type"", Model.of(Type.email));","private final RadioGroup<Type> rg=new RadioGroup<>(""type"",Model.of(Type.email));
",2,2,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1533,"private final byte[] notes_data = { 0, 0, 0x9f-256, 0x0f, 4, 0, 0, 0, 2, 0, 0, 0 };","private final byte[] notes_data={0,0,0x9f - 256,0x0f,4,0,0,0,2,0,0,0};
",2,2,18,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1534,"private final boolean _defaultImmediateValue = Boolean.parseBoolean(System.getProperty(""qpid.default_immediate"", ""false""));","/** 
 * The default value for immediate flag used this producer is false. That is, a consumer does not need to be attached to a queue.
 */
private final boolean _defaultImmediateValue=Boolean.parseBoolean(System.getProperty(""qpid.default_immediate"",""false""));
",2,2,10,,"Modifier(),
Modifier(),
PrimitiveType(),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
1535,"private final Map<Class<? extends Name<String>>, EventHandler<GroupCommunicationMessage>> operHandlers =","private final Map<Class<? extends Name<String>>,EventHandler<GroupCommunicationMessage>> operHandlers=new ConcurrentHashMap<>();
",2,2,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1536,"protected ConcurrentHashMap<Class<? extends CommandCustomHeader>, Field[]> fieldCache =","protected ConcurrentHashMap<Class<? extends CommandCustomHeader>,Field[]> fieldCache=new ConcurrentHashMap<Class<? extends CommandCustomHeader>,Field[]>();
",2,2,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1537,"private List<Object> streamFieldValues = Arrays.asList(""value1"", 1, null, ""value4"");","private List<Object> streamFieldValues=Arrays.asList(""value1"",1,null,""value4"");
",2,3,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1538,public SlingContext context = new SlingContextBuilder(ResourceResolverType.JCR_MOCK),"@Rule public SlingContext context=new SlingContextBuilder(ResourceResolverType.JCR_MOCK).plugin(new RegisterFsResourcePlugin(""provider.fs.mode"",FsMode.FILEVAULT_XML.name(),""provider.file"",""src/test/resources/vaultfs-test/jcr_root"",""provider.filevault.filterxml.path"",""src/test/resources/vaultfs-test/META-INF/vault/filter.xml"",""provider.root"",""/content/dam/talk.png"")).plugin(new RegisterFsResourcePlugin(""provider.fs.mode"",FsMode.FILEVAULT_XML.name(),""provider.file"",""src/test/resources/vaultfs-test/jcr_root"",""provider.filevault.filterxml.path"",""src/test/resources/vaultfs-test/META-INF/vault/filter.xml"",""provider.root"",""/content/samples"")).build();
",2,2,5,,"Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
QualifiedName(ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
"
1539,private final String random = getClass().getSimpleName() + String.valueOf(System.currentTimeMillis());,"private final String random=getClass().getSimpleName() + String.valueOf(System.currentTimeMillis());
",2,2,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1540,"private final String testDir = ""/sling-test/"" + getClass().getSimpleName() + System.currentTimeMillis();","private final String testDir=""/sling-test/"" + getClass().getSimpleName() + System.currentTimeMillis();
",2,2,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1541,"AbstractHDFSWriterMock foo = new AbstractHDFSWriterMock(new FileSizeRotationPolicy(1, FileSizeRotationPolicy.Units.KB), null);","AbstractHDFSWriterMock foo=new AbstractHDFSWriterMock(new FileSizeRotationPolicy(1,FileSizeRotationPolicy.Units.KB),null);
",2,2,7,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1542,"InterceptorConfig loggingInterceptor = new InterceptorConfig.Builder(""logging"", LoggingInterceptor.class.getName()).build();","InterceptorConfig loggingInterceptor=new InterceptorConfig.Builder(""logging"",LoggingInterceptor.class.getName()).build();
",2,2,7,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1543,"private double eps = Math.pow(10, -10);","private double eps=Math.pow(10,-10);
",2,2,7,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1544,"private ResultPair[] testUrlAuthority = { new ResultPair(""www.google.com"", true),","private ResultPair[] testUrlAuthority={new ResultPair(""www.google.com"",true),new ResultPair(""go.com"",true),new ResultPair(""go.au"",true),new ResultPair(""0.0.0.0"",true),new ResultPair(""255.255.255.255"",true),new ResultPair(""256.256.256.256"",false),new ResultPair(""255.com"",true),new ResultPair(""1.2.3.4.5"",false),new ResultPair(""1.2.3.4."",false),new ResultPair(""1.2.3"",false),new ResultPair("".1.2.3.4"",false),new ResultPair(""go.a"",false),new ResultPair(""go.a1a"",true),new ResultPair(""go.1aa"",false),new ResultPair(""aaa."",false),new ResultPair("".aaa"",false),new ResultPair(""aaa"",true),new ResultPair(""go.local"",true)};
",2,2,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1545,"private final Map<ItemType, Map<? extends ItemType, Double>> itemUsage = new ConcurrentHashMap<ItemType, Map<? extends ItemType,Double>>();","private final Map<ItemType,Map<? extends ItemType,Double>> itemUsage=new ConcurrentHashMap<ItemType,Map<? extends ItemType,Double>>();
",3,7,13,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1546,@Rule public final TestPipeline p = TestPipeline.create().enableAbandonedNodeEnforcement(false);,"@Rule public final TestPipeline p=TestPipeline.create().enableAbandonedNodeEnforcement(false);
",3,668,9,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1547,@NotNull private final String[] tmpDirectories;,"@NotNull private final String[] tmpDirectories;
",3,50,6,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1548,private final long capacity = 10L * OzoneConsts.GB;,"private final long capacity=10L * OzoneConsts.GB;
",3,5,6,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1549,"private final ExecutorService reportCacheExecutor = Executors.newFixedThreadPool(1, new NamedThreadFactory(""DubboSaveMetadataReport"", true));","private final ExecutorService reportCacheExecutor=Executors.newFixedThreadPool(1,new NamedThreadFactory(""DubboSaveMetadataReport"",true));
",3,40,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1550,"private final ExecutorService executor = new ThreadPoolExecutor(0, 10, 10, TimeUnit.SECONDS, new LinkedBlockingQueue<Runnable>(), new ThreadFactory() {","/** 
 * A Threadpool for running quiesce operations
 */
private final ExecutorService executor=new ThreadPoolExecutor(0,10,10,TimeUnit.SECONDS,new LinkedBlockingQueue<Runnable>(),new ThreadFactory(){
  public Thread newThread(  Runnable r){
    Thread t=new Thread(r,""Blueprint-Container-ThreadPool"");
    t.setDaemon(true);
    return t;
  }
}
);
",3,6,12,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
1551,private BigInteger positiveInt = BigInteger.valueOf(Long.MAX_VALUE).add(BigInteger.valueOf(Long.MAX_VALUE));,"private BigInteger positiveInt=BigInteger.valueOf(Long.MAX_VALUE).add(BigInteger.valueOf(Long.MAX_VALUE));
",3,13,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1552,private final TypeComparator[] comparators = new TypeComparator[] {new IntComparator(true)};,"private final TypeComparator[] comparators=new TypeComparator[]{new IntComparator(true)};
",3,15,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1553,"private final Cache<K, CancellableTask<K, T>> cancellableTaskMap = CacheBuilder.newBuilder().build();","private final Cache<K,CancellableTask<K,T>> cancellableTaskMap=CacheBuilder.newBuilder().build();
",3,7,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1554,"protected String axis2_xml = ""target"" + File.separator + ""repos"" + File.separator + ""persistence-server"" + File.separator + ""server_axis2.xml"";","protected String axis2_xml=""target"" + File.separator + ""repos""+ File.separator+ ""persistence-server""+ File.separator+ ""server_axis2.xml"";
",3,36,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1555,"private final byte[] fixed = ""abcd"".getBytes(StandardCharsets.UTF_8);","private final byte[] fixed=""abcd"".getBytes(StandardCharsets.UTF_8);
",3,13,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1556,"protected Dfp[][] id = { {Dfp25.of(1),Dfp25.of(0),Dfp25.of(0)}, {Dfp25.of(0),Dfp25.of(1),Dfp25.of(0)}, {Dfp25.of(0),Dfp25.of(0),Dfp25.of(1)} };","protected Dfp[][] id={{Dfp25.of(1),Dfp25.of(0),Dfp25.of(0)},{Dfp25.of(0),Dfp25.of(1),Dfp25.of(0)},{Dfp25.of(0),Dfp25.of(0),Dfp25.of(1)}};
",3,66,32,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1557,"private Hook preReadHook = (bookie, ledgerId, entryId) -> FutureUtils.value(null);","private Hook preReadHook=(bookie,ledgerId,entryId) -> FutureUtils.value(null);
",3,4,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(MethodInvocation-arguments, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1558,"private final String TENANT_SPECIFIC_URL1 = getUrl() + ';' + TENANT_ID_ATTRIB + ""="" + TENANT1;","private final String TENANT_SPECIFIC_URL1=getUrl() + ';' + TENANT_ID_ATTRIB+ ""=""+ TENANT1;
",3,8,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1559,final long[] clusteringSeeds = new long[generator.clusteringComponents.size()];,"final long[] clusteringSeeds=new long[generator.clusteringComponents.size()];
",3,3,8,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1560,private final java.util.Date[] dateArrayProperty = new java.util.Date[10];,"private final java.util.Date[] dateArrayProperty=new java.util.Date[10];
",3,10,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1561,"boolean[] booleanArray = {true, false, true, false, true};","boolean[] booleanArray={true,false,true,false,true};
",3,3,8,,"PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
BooleanLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1562,"private ResultPair[] testUrlScheme = { new ResultPair(""http:","/** 
 * The data given below approximates the 4 parts of a URL <scheme>://<authority><path>?<query> except that the port number is broken out of authority to increase the number of permutations. A complete URL is composed of a scheme+authority+port+path+query, all of which must be individually valid for the entire URL to be considered valid.
 */
private ResultPair[] testUrlScheme={new ResultPair(""http://"",true),new ResultPair(""ftp://"",true),new ResultPair(""h3t://"",true),new ResultPair(""3ht://"",false),new ResultPair(""http:/"",false),new ResultPair(""http:"",false),new ResultPair(""http/"",false),new ResultPair(""://"",false),new ResultPair("""",true)};
",3,4,10,,"Modifier(),
SimpleName(SimpleType-name, ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
StringLiteral(ClassInstanceCreation-arguments, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
BooleanLiteral(ClassInstanceCreation-arguments, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
StringLiteral(ClassInstanceCreation-arguments, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
BooleanLiteral(ClassInstanceCreation-arguments, ArrayInitializer-expressions, VariableDeclarationFragment-initializer, ),
"
1563,"private List<RelationFeaturesExtractor<CollectionTextRelation,IdentifiedAnnotation>> relationExtractors = this.getFeatureExtractors();","private List<RelationFeaturesExtractor<CollectionTextRelation,IdentifiedAnnotation>> relationExtractors=this.getFeatureExtractors();
",3,6,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
ThisExpression(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1564,"private final MappingSet LEFT_MAPPING = new MappingSet(""leftIndex"", null, ClassGenerator.DEFAULT_SCALAR_MAP, ClassGenerator.DEFAULT_SCALAR_MAP);","private final MappingSet LEFT_MAPPING=new MappingSet(""leftIndex"",null,ClassGenerator.DEFAULT_SCALAR_MAP,ClassGenerator.DEFAULT_SCALAR_MAP);
",3,3,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1565,private Consumer<ComponentBuilder<?>> m_compBuilder = (compBuilder -> {});,"private Consumer<ComponentBuilder<?>> m_compBuilder=(compBuilder -> {
}
);
",3,3,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, ParenthesizedExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Block(LambdaExpression-body, ParenthesizedExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1566,"@Nullable private Evictor<? super T, ? super W> evictor;","@Nullable private Evictor<? super T,? super W> evictor;
",3,6,6,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1567,"private final SubEvent middleEvent1 = new SubEvent(41, ""foo1"", 1.0, 10);","private final SubEvent middleEvent1=new SubEvent(41,""foo1"",1.0,10);
",3,20,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1568,"private Vertex<K, LongValue> output = new Vertex<>(null, new LongValue(1));","private Vertex<K,LongValue> output=new Vertex<>(null,new LongValue(1));
",3,8,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1569,"protected String userid = System.getProperty(""uddi.test.uid"")  == null ? ""jdoe""     : System.getProperty(""uddi.test.uid"");","protected String userid=System.getProperty(""uddi.test.uid"") == null ? ""jdoe"" : System.getProperty(""uddi.test.uid"");
",3,6,11,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, InfixExpression-leftOperand, ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(InfixExpression-rightOperand, ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ConditionalExpression-elseExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ConditionalExpression-elseExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ConditionalExpression-elseExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1570,"private final boolean isClientConfigured = JMeterUtils.getPropDefault(""sample_sender_client_configured"", true);","private final boolean isClientConfigured=JMeterUtils.getPropDefault(""sample_sender_client_configured"",true);
",3,6,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1571,private final int numDNs = dataBlocks + parityBlocks + 2;,"private final int numDNs=dataBlocks + parityBlocks + 2;
",3,4,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1572,protected String scriptFileName = new Path(scriptFile).toUri().getPath();,"protected String scriptFileName=new Path(scriptFile).toUri().getPath();
",3,3,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1573,"byte varTags[] = { JDWPConstants.Tag.OBJECT_TAG, JDWPConstants.Tag.BOOLEAN_TAG,","byte varTags[]={JDWPConstants.Tag.OBJECT_TAG,JDWPConstants.Tag.BOOLEAN_TAG,JDWPConstants.Tag.INT_TAG,JDWPConstants.Tag.STRING_TAG};
",3,7,5,,"PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ArrayInitializer-expressions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1574,private final Pattern[] planMask = toPattern(new String[] {,"private final Pattern[] planMask=toPattern(new String[]{"".*[.][.][.] [0-9]* more.*"",""pk_-?[0-9]*_[0-9]*_[0-9]*"",""fk_-?[0-9]*_[0-9]*_[0-9]*"",""uk_-?[0-9]*_[0-9]*_[0-9]*"",""nn_-?[0-9]*_[0-9]*_[0-9]*"",""dc_-?[0-9]*_[0-9]*_[0-9]*"",""org\\.apache\\.hadoop\\.hive\\.metastore\\.model\\.MConstraint@([0-9]|[a-z])*""});
",3,3,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1575,"LinguisticPatternStructure psPos = new LinguisticPatternStructure(0,0), psNeg = new LinguisticPatternStructure(0,0);","LinguisticPatternStructure psPos=new LinguisticPatternStructure(0,0), psNeg=new LinguisticPatternStructure(0,0);
",3,6,9,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1576,"private final Queue<Action<? super Link_1_0<S, T>>> _deleteTasks = new ConcurrentLinkedQueue<>();","private final Queue<Action<? super Link_1_0<S,T>>> _deleteTasks=new ConcurrentLinkedQueue<>();
",3,4,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1577,"private final URI uri1 = FlowSpec.Utils.createFlowSpecUri(new FlowId().setFlowName(""fg1"").setFlowGroup(""fn1""));","private final URI uri1=FlowSpec.Utils.createFlowSpecUri(new FlowId().setFlowName(""fg1"").setFlowGroup(""fn1""));
",3,4,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1578,"private final Config lower = new Config(""abcdefghijklmnopqrstuvwxyz"").min(3).max(5);","private final Config lower=new Config(""abcdefghijklmnopqrstuvwxyz"").min(3).max(5);
",3,6,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1579,"private final Map<ItemId, ItemState> addedStates = (Map<ItemId, ItemState>) new LinkedMap();","/** 
 * Added states
 */
@SuppressWarnings(""unchecked"") private final Map<ItemId,ItemState> addedStates=(Map<ItemId,ItemState>)new LinkedMap();
",3,3,10,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ParameterizedType-type, CastExpression-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, CastExpression-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, CastExpression-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, CastExpression-expression, VariableDeclarationFragment-initializer, ),
"
1580,"private final Icon ICON_ERROR = org.openide.util.ImageUtilities.loadImageIcon(""/org/netbeans/modules/git/resources/icons/info.png"", false);","private final Icon ICON_ERROR=org.openide.util.ImageUtilities.loadImageIcon(""/org/netbeans/modules/git/resources/icons/info.png"",false);
",3,4,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1581,"private final String expectedPayload = (""  <ws:addFirewallRulesToNic>\n""","private final String expectedPayload=(""  <ws:addFirewallRulesToNic>\n"" + ""        <nicId>nic-id</nicId>\n"" + ""            <request>\n""+ ""                <name>name</name>\n""+ ""                <portRangeEnd>45678</portRangeEnd>\n""+ ""                <portRangeStart>12345</portRangeStart>\n""+ ""                <protocol>TCP</protocol>\n""+ ""                <sourceIp>192.168.0.1</sourceIp>\n""+ ""                <sourceMac>aa:bb:cc:dd:ee:ff</sourceMac>\n""+ ""                <targetIp>192.168.0.2</targetIp>\n""+ ""            </request>\n""+ ""        </ws:addFirewallRulesToNic>"").replaceAll(""\\s+"","""");
",3,3,5,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, ParenthesizedExpression-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1582,Items a1 = ItemsAnnotation.create(),"Items a1=ItemsAnnotation.create().$ref(""$ref"")._default(""default"")._enum(""enum"").cf(""cf"").collectionFormat(""collectionFormat"").df(""df"").e(""e"").emax(true).emin(true).exclusiveMaximum(true).exclusiveMinimum(true).f(""f"").format(""format"").max(""max"").maxi(1).maximum(""maximum"").maxItems(2).maxl(3).maxLength(4).min(""min"").mini(5).minimum(""minimum"").minItems(6).minl(7).minLength(8).mo(""mo"").multipleOf(""multipleOf"").p(""p"").pattern(""pattern"").t(""t"").type(""type"").ui(true).uniqueItems(true).value(""value"").build();
",3,3,4,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1583,"final private Map<KGroupedStreamImpl<K, ?>, Aggregator<? super K, ? super Object, VOut>> groupPatterns;","final private Map<KGroupedStreamImpl<K,?>,Aggregator<? super K,? super Object,VOut>> groupPatterns;
",3,3,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1584,"private final ValueJoiner<Long, String, String> joiner = (value1, value2) -> value1 + ""+"" + value2;","private final ValueJoiner<Long,String,String> joiner=(value1,value2) -> value1 + ""+"" + value2;
",3,5,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1585,"private char found = '+', notFound = '-', error = 'e', ignored = 'i';","private char found='+', notFound='-', error='e', ignored='i';
",3,3,10,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
CharacterLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
CharacterLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
CharacterLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
CharacterLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1586,"private RequestProcessor RPforRefresh = new RequestProcessor(InternationalizationResourceBundleBrandingPanel.class.getName() + "" - refresh"", 1);","private RequestProcessor RPforRefresh=new RequestProcessor(InternationalizationResourceBundleBrandingPanel.class.getName() + "" - refresh"",1);
",3,7,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1587,"private final Icon[] TAG_ICON = new Icon[]{getImageIcon(TAG_16, false), getImageIcon(TAG_16, true)};","private final Icon[] TAG_ICON=new Icon[]{getImageIcon(TAG_16,false),getImageIcon(TAG_16,true)};
",3,3,13,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(MethodInvocation-arguments, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1588,"private final String testId = UUID.nameUUIDFromBytes(""testId"".getBytes(StandardCharsets.UTF_8)).toString();","private final String testId=UUID.nameUUIDFromBytes(""testId"".getBytes(StandardCharsets.UTF_8)).toString();
",3,6,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1589,"private volatile String propsFile = TestCuratorACLProviderFactory.class.getResource(""/flowcontrollertest.nifi.properties"").getFile();","private volatile String propsFile=TestCuratorACLProviderFactory.class.getResource(""/flowcontrollertest.nifi.properties"").getFile();
",3,3,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1590,"private final CSVFormat format = CSVFormat.DEFAULT.withFirstRecordAsHeader().withTrim().withQuote('""');","private final CSVFormat format=CSVFormat.DEFAULT.withFirstRecordAsHeader().withTrim().withQuote('""');
",3,3,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1591,"private SetValuedCmr bCmr = new SetValuedCmr(this, ""b"", ExampleBBean_BBean.class, ""a"");","private SetValuedCmr bCmr=new SetValuedCmr(this,""b"",ExampleBBean_BBean.class,""a"");
",3,3,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1592,private final String ADMIN_TOKEN = Jwts.builder().setSubject(ADMIN_ROLE).signWith(SECRET_KEY).compact();,"private final String ADMIN_TOKEN=Jwts.builder().setSubject(ADMIN_ROLE).signWith(SECRET_KEY).compact();
",3,3,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1593,"private final String _sourceAddress = getServer().containerId + ""-link1-source"";","private final String _sourceAddress=getServer().containerId + ""-link1-source"";
",3,3,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, FieldAccess-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(FieldAccess-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1594,private DefaultRecordSchema container;,"/** 
 * Value of  {@link DefaultRecordType#getContainer()}.   
 */
private DefaultRecordSchema container;
",3,3,7,,"TextElement(TagElement-fragments, Javadoc-tags, FieldDeclaration-javadoc, ),
SimpleName(MethodRef-qualifier, TagElement-fragments, TagElement-fragments, Javadoc-tags, FieldDeclaration-javadoc, ),
SimpleName(MethodRef-name, TagElement-fragments, TagElement-fragments, Javadoc-tags, FieldDeclaration-javadoc, ),
TextElement(TagElement-fragments, Javadoc-tags, FieldDeclaration-javadoc, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1595,private final @NotNull OsgiContextCallback contextBeforeSetup = mock(OsgiContextCallback.class);,"private final @NotNull OsgiContextCallback contextBeforeSetup=mock(OsgiContextCallback.class);
",3,3,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1596,"private Expression 	_rowLowerBound = null, _rowUpperBound = null, _colLowerBound = null, _colUpperBound = null;","private Expression _rowLowerBound=null, _rowUpperBound=null, _colLowerBound=null, _colUpperBound=null;
",3,3,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1597,"DuccLogger logger = DuccLogger.getLogger(this.getClass(), Agent.COMPONENT_NAME);","DuccLogger logger=DuccLogger.getLogger(this.getClass(),Agent.COMPONENT_NAME);
",3,3,7,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1598,protected String[] fNamespace = new String[16 * 2];,"/** 
 * Namespace binding information. This array is composed of a series of tuples containing the namespace binding information: &lt;prefix, uri&gt;. The default size can be set to anything as long as it is a power of 2 greater than 1.
 * @see #fNamespaceSize
 * @see #fContext
 */
protected String[] fNamespace=new String[16 * 2];
",3,3,8,,"Modifier(),
SimpleName(SimpleType-name, ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, ),
NumberLiteral(InfixExpression-leftOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, ),
NumberLiteral(InfixExpression-rightOperand, ArrayCreation-dimensions, VariableDeclarationFragment-initializer, ),
"
1599,"private Map<String, Set<String>> authzObjChildren = new TreeMap<String, Set<String>>(String.CASE_INSENSITIVE_ORDER);","private Map<String,Set<String>> authzObjChildren=new TreeMap<String,Set<String>>(String.CASE_INSENSITIVE_ORDER);
",4,4489,11,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1600,"private final Map<Operator.InputPort<?>, InputPortMeta> inPortMap = new HashMap<>();","private final Map<Operator.InputPort<?>,InputPortMeta> inPortMap=new HashMap<>();
",4,67,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1601,protected char[] elRawName[];,"protected char[] elRawName[];
",4,490,5,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
"
1602,"private final URI uri = URI.create(WebHdfsConstants.WEBHDFS_SCHEME + "":","private final URI uri=URI.create(WebHdfsConstants.WEBHDFS_SCHEME + ""://"" + ""127.0.0.1:0"");
",4,41,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-leftOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1603,"private String singleCreditAcceptorURI = new String(""tcp:","private String singleCreditAcceptorURI=new String(""tcp://localhost:"" + (AMQP_PORT + 8));
",4,5,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ParenthesizedExpression-expression, InfixExpression-rightOperand, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1604,"private @Nullable DoFnRunner<InputT, KV<K, Iterable<V>>> fnRunner;","private @Nullable DoFnRunner<InputT,KV<K,Iterable<V>>> fnRunner;
",4,12,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1605,private final Enumerator<@Nullable Object[]> inputEnumerator;,"private final Enumerator<@Nullable Object[]> inputEnumerator;
",4,5,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(MarkerAnnotation-typeName, SimpleType-annotations, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1606,"private volatile State state = new State(Collections.emptyList(), Collections.emptyList(), Collections.emptyList());","private volatile State state=new State(Collections.emptyList(),Collections.emptyList(),Collections.emptyList());
",4,4,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1607,"private final String baseStr = base.getClass().getName() + ""@"" + Integer.toHexString(System.identityHashCode(base));","private final String baseStr=base.getClass().getName() + ""@"" + Integer.toHexString(System.identityHashCode(base));
",4,14,13,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1608,"License primaryLicense = new License(false, ""This is the license text"", Collections.<String> emptyList(), ""example.org"", ""http:","License primaryLicense=new License(false,""This is the license text"",Collections.<String>emptyList(),""example.org"",""http://example.org"",""Example License"");
",4,4,11,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1609,"private DistanceExtractor nEntityMentionsBetween = new DistanceExtractor(null, EntityMention.class);","/** 
 * Number of named entities between the two mentions
 */
private DistanceExtractor nEntityMentionsBetween=new DistanceExtractor(null,EntityMention.class);
",4,4,6,,"Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
NullLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, TypeLiteral-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
1610,"private java.text.DecimalFormat df = new java.text.DecimalFormat(""##0.000000000"");","private java.text.DecimalFormat df=new java.text.DecimalFormat(""##0.000000000"");
",4,4,5,,"Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1611,private int defaultTextStyle = SWT.MULTI | SWT.BORDER | SWT.H_SCROLL | SWT.V_SCROLL;,"private int defaultTextStyle=SWT.MULTI | SWT.BORDER | SWT.H_SCROLL| SWT.V_SCROLL;
",4,6,7,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1612,"@MetastoreFieldDefinition(column = MetastoreColumn.COLUMNS_STATISTICS, scopes = {ALL}) private final Map<String, String> columnsStatistics;","@MetastoreFieldDefinition(column=MetastoreColumn.COLUMNS_STATISTICS,scopes={ALL}) private final Map<String,String> columnsStatistics;
",4,6,11,,"SimpleName(NormalAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(MemberValuePair-name, NormalAnnotation-values, FieldDeclaration-modifiers, ),
QualifiedName(MemberValuePair-value, NormalAnnotation-values, FieldDeclaration-modifiers, ),
SimpleName(MemberValuePair-name, NormalAnnotation-values, FieldDeclaration-modifiers, ),
SimpleName(ArrayInitializer-expressions, MemberValuePair-value, NormalAnnotation-values, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1613,"Location region1 = new LocationBuilder().scope(LocationScope.REGION).id(""region1"").description(""region1"").iso3166Codes(ImmutableSet.of(""US"")).parent(provider).build();","Location region1=new LocationBuilder().scope(LocationScope.REGION).id(""region1"").description(""region1"").iso3166Codes(ImmutableSet.of(""US"")).parent(provider).build();
",4,20,16,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1614,private final short groupSize = (short) (dataBlocks + parityBlocks);,"private final short groupSize=(short)(dataBlocks + parityBlocks);
",4,7,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, ParenthesizedExpression-expression, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, ParenthesizedExpression-expression, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1615,@Parameterized.Parameter(0) public String inPartColNames;,"@Parameterized.Parameter(0) public String inPartColNames;
",4,4,5,,"QualifiedName(SingleMemberAnnotation-typeName, FieldDeclaration-modifiers, ),
NumberLiteral(SingleMemberAnnotation-value, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1616,"private BucketMeta feature1Meta = new BucketMeta(new FeatureMeta("""", 0, true));","/** 
 * Feature 1 meta. 
 */
private BucketMeta feature1Meta=new BucketMeta(new FeatureMeta("""",0,true));
",4,4,8,,"Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
StringLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
NumberLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
BooleanLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
1617,protected final byte[][] _bytesSVValues = new byte[NUM_ROWS][];,"protected final byte[][] _bytesSVValues=new byte[NUM_ROWS][];
",4,4,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1618,"Point<Node> beforeLine = Point.before(doc, DocHelper.getElementWithTagName(doc, ""line""));","Point<Node> beforeLine=Point.before(doc,DocHelper.getElementWithTagName(doc,""line""));
",4,4,10,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1619,"public ClassOption learnerOption = new ClassOption(""learner"", 'l', ""Clusterer to use."", LocalClustererAdapter.class,","public ClassOption learnerOption=new ClassOption(""learner"",'l',""Clusterer to use."",LocalClustererAdapter.class,ClustreamClustererAdapter.class.getName());
",4,84,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1620,"private boolean useZip = Boolean.valueOf(System.getProperty(OAK_INDEXER_USE_ZIP, ""true""));","private boolean useZip=Boolean.valueOf(System.getProperty(OAK_INDEXER_USE_ZIP,""true""));
",4,6,9,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1621,"Triple t1 = new Triple(a, p, NodeCreateUtils.create(NS + ""v1""));","Triple t1=new Triple(a,p,NodeCreateUtils.create(NS + ""v1""));
",4,4,9,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1622,"protected final FlowEngine flowEngine = new FlowEngine(1, ""Heartbeat Monitor"", true);","protected final FlowEngine flowEngine=new FlowEngine(1,""Heartbeat Monitor"",true);
",4,6,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1623,"private PurgeXCommand.JPAFunction<String, List<String>> noChildren = new PurgeXCommand.JPAFunction<String, List<String>>() {","private PurgeXCommand.JPAFunction<String,List<String>> noChildren=new PurgeXCommand.JPAFunction<String,List<String>>(){
  @Override public List<String> apply(  String wId){
    return new ArrayList<>();
  }
}
;
",4,4,10,,"Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1624,"Add op = new Add(new OperatorKey("""", r.nextLong()));","Add op=new Add(new OperatorKey("""",r.nextLong()));
",4,4,7,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1625,"private final Map<Class<? extends ConfiguredObject>, ConcurrentMap<UUID,ConfiguredObject<?>>> _childrenById =","private final Map<Class<? extends ConfiguredObject>,ConcurrentMap<UUID,ConfiguredObject<?>>> _childrenById=new ConcurrentHashMap<>();
",4,4,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1626,"private boolean runtimeRetention = false, sourceRetention = false,  classRetention = false;","private boolean runtimeRetention=false, sourceRetention=false, classRetention=false;
",5,29215,8,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
BooleanLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
BooleanLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
BooleanLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1627,"private final Map<Long, List<SubsystemEventHandler.ServiceEventInfo>> subsystemIdToEvents = new HashMap<Long, List<SubsystemEventHandler.ServiceEventInfo>>();","private final Map<Long,List<SubsystemEventHandler.ServiceEventInfo>> subsystemIdToEvents=new HashMap<Long,List<SubsystemEventHandler.ServiceEventInfo>>();
",5,377,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1628,"protected Object expectedBody = ""<time>"" + new Date() + ""</time>"";","protected Object expectedBody=""<time>"" + new Date() + ""</time>"";
",5,14,6,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1629,"CLI<String> all = null, cat = null, a = null, b = null, c = null, d = null;","CLI<String> all=null, cat=null, a=null, b=null, c=null, d=null;
",5,11,14,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1630,private final Component items[] = new Component[3];,"private final Component items[]=new Component[3];
",5,6,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1631,private final DOMMetaFactory metaFactory = (DOMMetaFactory)OMAbstractFactory.getMetaFactory(OMAbstractFactory.FEATURE_DOM);,"private final DOMMetaFactory metaFactory=(DOMMetaFactory)OMAbstractFactory.getMetaFactory(OMAbstractFactory.FEATURE_DOM);
",5,5,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, CastExpression-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1632,"private final Map<String, Lock> locks = Collections.synchronizedMap(LRUCacheFactory.newLRUCache(100));","private final Map<String,Lock> locks=Collections.synchronizedMap(LRUCacheFactory.newLRUCache(100));
",5,14,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1633,"protected String reduce = UtilTest.makeJavaCommand(RawBytesReduceApp.class, new String[0]);","protected String reduce=UtilTest.makeJavaCommand(RawBytesReduceApp.class,new String[0]);
",5,8,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayCreation-dimensions, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1634,"@Mock private DoFn<String, String>.StartBundleContext mockStartBundleContext;","@Mock private DoFn<String,String>.StartBundleContext mockStartBundleContext;
",5,5,7,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, QualifiedType-qualifier, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, QualifiedType-qualifier, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, QualifiedType-qualifier, FieldDeclaration-type, ),
SimpleName(QualifiedType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1635,@JsonProperty public NexmarkUtils.SourceType sourceType = NexmarkUtils.SourceType.DIRECT;,"/** 
 * Where events come from. 
 */
@JsonProperty public NexmarkUtils.SourceType sourceType=NexmarkUtils.SourceType.DIRECT;
",5,5,5,,"SimpleName(MarkerAnnotation-typeName, ),
Modifier(),
QualifiedName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
QualifiedName(VariableDeclarationFragment-initializer, ),
"
1636,public float threeDimArray[][][] = null;,"public float threeDimArray[][][]=null;
",5,97,7,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1637,protected Class<?>[] paramTypes = null;,"/** 
 * The parameter types of the parameters to be collected.
 */
protected Class<?>[] paramTypes=null;
",5,5,6,,"Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ),
WildcardType(ParameterizedType-typeArguments, ArrayType-elementType, ),
Dimension(ArrayType-dimensions, ),
SimpleName(VariableDeclarationFragment-name, ),
NullLiteral(VariableDeclarationFragment-initializer, ),
"
1638,"private final Version v1 = new Version(""1.2.3-SNAPSHOT"", 1, 2, 3, 0, ""SNAPSHOT"");","private final Version v1=new Version(""1.2.3-SNAPSHOT"",1,2,3,0,""SNAPSHOT"");
",5,5,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1639,"private final JButton stdYesButton = new JButton(NbBundle.getBundle(NbPresenter.class).getString(""YES_OPTION_CAPTION""));","private final JButton stdYesButton=new JButton(NbBundle.getBundle(NbPresenter.class).getString(""YES_OPTION_CAPTION""));
",5,8,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1640,private final Util.Timer timer = new Util.Timer(true);,"private final Util.Timer timer=new Util.Timer(true);
",5,5,6,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1641,"String bidiContent = sLTR + sRTL + sRTL + "" \t"" + sLTR + sRTL + sLTR + ""\n"" + sRTL + "".""","String bidiContent=sLTR + sRTL + sRTL+ "" \t""+ sLTR+ sRTL+ sLTR+ ""\n""+ sRTL+ "".""+ sLTR+ sRTL+ ""\t""+ sRTL+ ""\n""+ sLTR+ sLTR+ sRTL+ sRTL+ sRTL+ sLTR+ sLTR+ sLTR+ sRTL+ sLTR+ sRTL+ sLTR;
",5,7,12,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1642,"private final IRVertex leftSource = new EmptyComponents.EmptySourceVertex<>(""leftSource"");","private final IRVertex leftSource=new EmptyComponents.EmptySourceVertex<>(""leftSource"");
",5,5,6,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1643,GroupNamingConvention.Factory namingConvention = Guice.createInjector().getInstance(GroupNamingConvention.Factory.class);,"GroupNamingConvention.Factory namingConvention=Guice.createInjector().getInstance(GroupNamingConvention.Factory.class);
",5,5,6,,"QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1644,private final RegionIdToAdminURISupplier.Factory factory = Guice.createInjector(new AbstractModule() {,"private final RegionIdToAdminURISupplier.Factory factory=Guice.createInjector(new AbstractModule(){
  @Override protected void configure(){
    bindConstant().annotatedWith(Provider.class).to(""openstack-keystone"");
    bind(new TypeLiteral<Supplier<URI>>(){
    }
).annotatedWith(Provider.class).toInstance(Suppliers.ofInstance(URI.create(""https://identity"")));
    install(new FactoryModuleBuilder().implement(RegionIdToAdminURISupplier.class,RegionIdToAdminURIFromServiceEndpointsForTypeAndVersion.class).build(RegionIdToAdminURISupplier.Factory.class));
    bind(new TypeLiteral<Supplier<List<ServiceEndpoint>>>(){
    }
).to(V2ServiceCatalog.class).in(Scopes.SINGLETON);
  }
  @Provides @Singleton public Supplier<AuthInfo> provide(){
    return Suppliers.<AuthInfo>ofInstance(new ParseAccessTest().expected());
  }
}
).getInstance(RegionIdToAdminURISupplier.Factory.class);
",5,6,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1645,"public final ArgDecl IN_NTRIPLE = new ArgDecl( true, ""t"", ""ntriples"", ""ntriple"", ""n-triple"", ""n-triples"",","/** 
 * Argument setting expected input language to NTRIPLE 
 */
public final ArgDecl IN_NTRIPLE=new ArgDecl(true,""t"",""ntriples"",""ntriple"",""n-triple"",""n-triples"",(arg,val) -> m_actionQ.add(new ReadAction(val,""N-TRIPLE"")));
",5,5,11,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, ),
"
1646,"private Item<String[]>           tripleIndexes         = new Item<>(StoreParamsConst.tripleIndexes, false);","private Item<String[]> tripleIndexes=new Item<>(StoreParamsConst.tripleIndexes,false);
",5,24,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1647,"private final Predicate<Integer, String> isMultipleOfThree = (key, value) -> (key % 3) == 0;","private final Predicate<Integer,String> isMultipleOfThree=(key,value) -> (key % 3) == 0;
",5,5,11,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ParenthesizedExpression-expression, InfixExpression-leftOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1648,"private final byte[] recordValue = intSerializer.serialize(null, 10);","private final byte[] recordValue=intSerializer.serialize(null,10);
",5,5,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1649,"private NumberFormat fmtI = new DecimalFormat(""###,###"", new DecimalFormatSymbols(Locale.ENGLISH));","private NumberFormat fmtI=new DecimalFormat(""###,###"",new DecimalFormatSymbols(Locale.ENGLISH));
",5,5,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1650,"private final PreferenceChangeListener weakPrefL = WeakListeners.create(PreferenceChangeListener.class, this, null);","private final PreferenceChangeListener weakPrefL=WeakListeners.create(PreferenceChangeListener.class,this,null);
",5,12,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NullLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1651,Lookup.Result integer = lookup.lookup(new Lookup.Template(Integer.class));,"Lookup.Result integer=lookup.lookup(new Lookup.Template(Integer.class));
",5,5,6,,"QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1652,"private final TimedBuffer<TimedCountSize> updateCounts = new TimedBuffer<>(TimeUnit.SECONDS, 300, new CountSizeEntityAccess());","private final TimedBuffer<TimedCountSize> updateCounts=new TimedBuffer<>(TimeUnit.SECONDS,300,new CountSizeEntityAccess());
",5,5,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1653,"private final byte[] data_b = new byte[] { 0x10, 0, 0xBA-256, 0x0f, 0x10, 0, 0, 0,","private final byte[] data_b=new byte[]{0x10,0,0xBA - 256,0x0f,0x10,0,0,0,0x43,0,0x6F,0,0x6D,0,0x6D,0,0x65,0,0x6E,0,0x74,0,0x73,0};
",5,10,16,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-leftOperand, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1654,private String producerGroupTraceTemp = TopicValidator.RMQ_SYS_TRACE_TOPIC + System.currentTimeMillis();,"private String producerGroupTraceTemp=TopicValidator.RMQ_SYS_TRACE_TOPIC + System.currentTimeMillis();
",5,5,6,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1655,"private final NodeReport nodeReport1 = createNodeReport(hostName1, 1, NodeState.RUNNING, ""httpAddress1"",","private final NodeReport nodeReport1=createNodeReport(hostName1,1,NodeState.RUNNING,""httpAddress1"",rackName1,1,1,2,1,2,"""",60L,null);
",5,5,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1656,"private ActionLink editLink = new ActionLink(""edit"", ""Edit"", this, ""onEditClick"");","private ActionLink editLink=new ActionLink(""edit"",""Edit"",this,""onEditClick"");
",6,45,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1657,protected final int EXCESSIVE_NUM_THREADS = Runtime.getRuntime().availableProcessors() * 4;,"protected final int EXCESSIVE_NUM_THREADS=Runtime.getRuntime().availableProcessors() * 4;
",6,16,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1658,"private final Map<ConnectorDescriptorId, Pair<Pair<IOperatorDescriptor, Integer>, Pair<IOperatorDescriptor, Integer>>> connectorOpMap;","private final Map<ConnectorDescriptorId,Pair<Pair<IOperatorDescriptor,Integer>,Pair<IOperatorDescriptor,Integer>>> connectorOpMap;
",6,6,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1659,"private final Multimap<TupleTag<?>, WindowedValue<?>> outputs = LinkedListMultimap.create();","private final Multimap<TupleTag<?>,WindowedValue<?>> outputs=LinkedListMultimap.create();
",6,7,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1660,private @Nullable final SerializableConfiguration configuration;,"private @Nullable final SerializableConfiguration configuration;
",6,6,5,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1661,"protected Map<byte[], TimeRange> colFamTimeRangeMap = Maps.newTreeMap(Bytes.BYTES_COMPARATOR);","protected Map<byte[],TimeRange> colFamTimeRangeMap=Maps.newTreeMap(Bytes.BYTES_COMPARATOR);
",6,33,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1662,private Button updateButton = new Button(ServiceContextManager.getServiceContext().getService(MessageProvider.class),"private Button updateButton=new Button(ServiceContextManager.getServiceContext().getService(MessageProvider.class).getMessage(""view.edit.button.updateKey""));
",6,10,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1663,"private final FauxWeaveProvider a = new A(), b = new B(), c = new C(), w = new W(), x = new X(), y = new Y(), z = new Z(),","private final FauxWeaveProvider a=new A(), b=new B(), c=new C(), w=new W(), x=new X(), y=new Y(), z=new Z(), monkeywrench=new Monkeywrench();
",6,28,17,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1664,"private final SortedMap<byte [], byte []> map = new TreeMap<>(Bytes.BYTES_COMPARATOR);","private final SortedMap<byte[],byte[]> map=new TreeMap<>(Bytes.BYTES_COMPARATOR);
",6,6,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1665,"private Cluster cluster = new Cluster(""cluster"", Collections.singletonList(Node.noNode()), infos,","private Cluster cluster=new Cluster(""cluster"",Collections.singletonList(Node.noNode()),infos,Collections.<String>emptySet(),Collections.<String>emptySet());
",6,6,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1666,"private final TestLogger logger = (TestLogger) LogManager.getLogger(""LoggerTest"");","private final TestLogger logger=(TestLogger)LogManager.getLogger(""LoggerTest"");
",6,13,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, CastExpression-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1667,private byte[] dest;,"/** 
 * The array where to store the values. 
 */
private byte[] dest;
",6,6,5,,"TextElement(TagElement-fragments, Javadoc-tags, FieldDeclaration-javadoc, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1668,private DatatypeValidator fAttributeDeclDatatypeValidator[][] = new DatatypeValidator[INITIAL_CHUNK_COUNT][];,"private DatatypeValidator fAttributeDeclDatatypeValidator[][]=new DatatypeValidator[INITIAL_CHUNK_COUNT][];
",6,6,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1669,"private String wsdlLocation = System.getProperty(""basedir"", ""."") + ""/"" + ""test-resources/wsdl/Version.wsdl"";","private String wsdlLocation=System.getProperty(""basedir"",""."") + ""/"" + ""test-resources/wsdl/Version.wsdl"";
",7,9,9,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1670,public final int ordinal = nextOrdinal++;,"public final int ordinal=nextOrdinal++;
",7,16,5,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(PostfixExpression-operand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1671,"private BiConsumer<ClassLoader, Integer> instanceInitializer = (cl, id) -> {};","private BiConsumer<ClassLoader,Integer> instanceInitializer=(cl,id) -> {
}
;
",7,65,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, LambdaExpression-parameters, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Block(LambdaExpression-body, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1672,Set<Class<? extends CommandWrapper>> baseSet = baseWrappers.getSubTypesOf(CommandWrapper.class);,"@SuppressWarnings(""rawtypes"") Set<Class<? extends CommandWrapper>> baseSet=baseWrappers.getSubTypesOf(CommandWrapper.class);
",7,7,7,,"SimpleName(SimpleType-name, ParameterizedType-type, ),
SimpleName(SimpleType-name, ParameterizedType-type, ParameterizedType-typeArguments, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ParameterizedType-typeArguments, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
1673,"protected final TagEncodingHelper helper               = TagEncodingHelperFactory.create(this, ""eInput"");","protected final TagEncodingHelper helper=TagEncodingHelperFactory.create(this,""eInput"");
",7,7,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1674,LinkedList<NodeBytes> rcv = ((PipelinesTest) getPipelineTest()).received;,"LinkedList<NodeBytes> rcv=((PipelinesTest)getPipelineTest()).received;
",7,7,6,,"SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, CastExpression-type, ParenthesizedExpression-expression, FieldAccess-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, CastExpression-expression, ParenthesizedExpression-expression, FieldAccess-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(FieldAccess-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1675,"@SuppressWarnings(""checkstyle:VisibilityModifier"") public final long nonceGroup;","@SuppressWarnings(""checkstyle:VisibilityModifier"") public final long nonceGroup;
",7,7,6,,"SimpleName(SingleMemberAnnotation-typeName, FieldDeclaration-modifiers, ),
StringLiteral(SingleMemberAnnotation-value, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1676,"LocalDateInterval interval120101to120401 = LocalDateInterval.excluding(new LocalDate(2012, 1, 1), new LocalDate(2012, 4, 1));","LocalDateInterval interval120101to120401=LocalDateInterval.excluding(new LocalDate(2012,1,1),new LocalDate(2012,4,1));
",7,7,12,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1677,"private final RunEntryStatistics a1 = fromValues( 200, 2, A.class, ""at1"" );","private final RunEntryStatistics a1=fromValues(200,2,A.class,""at1"");
",7,7,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1678,private final long ttlMs = timing.multiple(.10).milliseconds();,"private final long ttlMs=timing.multiple(.10).milliseconds();
",8,8,8,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(MethodInvocation-arguments, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1679,"Class<?>[] encoders=new Class<?>[0], parsers=new Class<?>[0], serializers=new Class<?>[0];","Class<?>[] encoders=new Class<?>[0], parsers=new Class<?>[0], serializers=new Class<?>[0];
",8,10,18,,"SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
WildcardType(ParameterizedType-typeArguments, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
WildcardType(ParameterizedType-typeArguments, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
WildcardType(ParameterizedType-typeArguments, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1680,"private KafkaConsumer<byte[], byte[]> consumer = null;","private KafkaConsumer<byte[],byte[]> consumer=null;
",8,11,8,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
PrimitiveType(ArrayType-elementType, ParameterizedType-typeArguments, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1681,"private final JCheckBox samplerSelection = new JCheckBox(JMeterUtils.getResString(""graph_resp_time_series_selection""), false);","private final JCheckBox samplerSelection=new JCheckBox(JMeterUtils.getResString(""graph_resp_time_series_selection""),false);
",8,15,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1682,private final Set<Module> modules = ImmutableSet.<Module>of(new ExecutorServiceModule(newDirectExecutorService()));,"private final Set<Module> modules=ImmutableSet.<Module>of(new ExecutorServiceModule(newDirectExecutorService()));
",8,9,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1683,private final @Nullable Object[] values;,"private final @Nullable Object[] values;
",9,27,6,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1684,protected byte    padding = (byte)'=';,"protected byte padding=(byte)'=';
",9,9,5,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
PrimitiveType(CastExpression-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
CharacterLiteral(CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1685,"private ImmutableMap.Builder<String, String> tags = ImmutableMap.<String, String> builder();","private ImmutableMap.Builder<String,String> tags=ImmutableMap.<String,String>builder();
",9,28,9,,"Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, MethodInvocation-typeArguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1686,"boolean allowEmptyValue, aev,exclusiveMaximum, emax, exclusiveMinimum, emin, r=true, required=true, uniqueItems, ui;","boolean allowEmptyValue, aev, exclusiveMaximum, emax, exclusiveMinimum, emin, r=true, required=true, uniqueItems, ui;
",9,9,13,,"PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
BooleanLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
BooleanLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1687,FormData a1 = FormDataAnnotation.create(),"FormData a1=FormDataAnnotation.create()._default(""default"")._enum(""enum"").aev(true).allowEmptyValue(true).api(""api"").cf(""cf"").collectionFormat(""collectionFormat"").d(""d"").description(""description"").df(""df"").e(""e"").emax(true).emin(true).ex(""ex"").example(""example"").exclusiveMaximum(true).exclusiveMinimum(true).f(""f"").format(""format"").items(ItemsAnnotation.DEFAULT).max(""max"").maxi(1).maximum(""maximum"").maxItems(2).maxl(3).maxLength(4).min(""min"").mini(5).minimum(""minimum"").minItems(6).minl(7).minLength(8).mo(""mo"").multi(true).multipleOf(""multipleOf"").n(""n"").name(""name"").on(""on"").onClass(X1.class).p(""p"").parser(OpenApiParser.class).pattern(""pattern"").r(true).required(true).serializer(OpenApiSerializer.class).sie(true).skipIfEmpty(true).t(""t"").type(""type"").ui(true).uniqueItems(true).value(""value"").build();
",9,9,4,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1688,final Logger LOGGER = (Logger) LoggerFactory.getLogger(getClass());,"final Logger LOGGER=(Logger)LoggerFactory.getLogger(getClass());
",9,9,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, CastExpression-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1689,"public volatile long p1 = 1L, p2 = 2L, p3 = 3L, p4 = 4L, p5 = 5L, p6 = 6L;","public volatile long p1=1L, p2=2L, p3=3L, p4=4L, p5=5L, p6=6L;
",11,264,15,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1690,"final Option propertyName = add(OptionBuilder.withArgName(""property name"").hasArg().withDescription(""The name of the property whose value needs to be retrieved"").create(""propertyName""));","final Option propertyName=add(OptionBuilder.withArgName(""property name"").hasArg().withDescription(""The name of the property whose value needs to be retrieved"").create(""propertyName""));
",11,74,12,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1691,private int records1stBlock = usingNative ? 5674 : 4480;,"private int records1stBlock=usingNative ? 5674 : 4480;
",11,11,6,,"Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(ConditionalExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ConditionalExpression-thenExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ConditionalExpression-elseExpression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1692,"long maxi=-1, maxItems=-1, maxl=-1, maxLength=-1, maxp=-1, maxProperties=-1, mini=-1, minItems=-1, minl=-1, minLength=-1, minp=-1, minProperties=-1;","long maxi=-1, maxItems=-1, maxl=-1, maxLength=-1, maxp=-1, maxProperties=-1, mini=-1, minItems=-1, minl=-1, minLength=-1, minp=-1, minProperties=-1;
",11,25,25,,"PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1693,"private ObjectBean obj = new ObjectBean(SleEntryImpl.class, this);","private ObjectBean obj=new ObjectBean(SleEntryImpl.class,this);
",11,11,6,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1694,"private final RequiredTextField<String> iso = new RequiredTextField<>(""iso"", Model.of(""""));","private final RequiredTextField<String> iso=new RequiredTextField<>(""iso"",Model.of(""""));
",11,12,10,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
SimpleName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ParameterizedType-type, ClassInstanceCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, ClassInstanceCreation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1695,private final Logger logger = LoggerFactory.getLogger(this.getClass().getName());,"/** 
 * The logger. 
 */
private final Logger logger=LoggerFactory.getLogger(this.getClass().getName());
",11,11,9,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
ThisExpression(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
1696,@Rule public ExpectedLogs expectedLogs = ExpectedLogs.none(DataflowPipelineJob.class);,"@Rule public ExpectedLogs expectedLogs=ExpectedLogs.none(DataflowPipelineJob.class);
",12,12,7,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1697,"private final Mapper<?, ?, ?, ?>.Context context;","/** 
 * Job context (for progress) 
 */
private final Mapper<?,?,?,?>.Context context;
",12,13,9,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ParameterizedType-type, QualifiedType-qualifier, ),
WildcardType(ParameterizedType-typeArguments, QualifiedType-qualifier, ),
WildcardType(ParameterizedType-typeArguments, QualifiedType-qualifier, ),
WildcardType(ParameterizedType-typeArguments, QualifiedType-qualifier, ),
WildcardType(ParameterizedType-typeArguments, QualifiedType-qualifier, ),
SimpleName(QualifiedType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
"
1698,"protected final FopFactory fopFactory = FopFactory.newInstance(new File(""."").toURI());","/** 
 * the FopFactory 
 */
protected final FopFactory fopFactory=FopFactory.newInstance(new File(""."").toURI());
",13,13,9,,"Modifier(),
Modifier(),
SimpleName(SimpleType-name, ),
SimpleName(VariableDeclarationFragment-name, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, ),
SimpleName(SimpleType-name, ClassInstanceCreation-type, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
StringLiteral(ClassInstanceCreation-arguments, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, ),
"
1699,"private String groupId = ""groupid"", artifactId = ""artifactId"", version = ""1.0"", scope = ""artifactScope"", type = ""type"",","private String groupId=""groupid"", artifactId=""artifactId"", version=""1.0"", scope=""artifactScope"", type=""type"", classifier=""classifier"";
",14,96,12,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1700,@SetFromFlag protected boolean targetIsSsl = false;,"@SetFromFlag protected boolean targetIsSsl=false;
",14,18,5,,"SimpleName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
BooleanLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1701,"String[] _default={}, _enum={}, additionalProperties={}, allOf={}, d={}, description={}, df={}, e={}, ex={}, example={}, examples={}, exs={}, properties={}, value={}, xml={};","String[] _default={}, _enum={}, additionalProperties={}, allOf={}, d={}, description={}, df={}, e={}, ex={}, example={}, examples={}, exs={}, properties={}, value={}, xml={};
",14,105,32,,"SimpleName(SimpleType-name, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
ArrayInitializer(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
ArrayInitializer(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
ArrayInitializer(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
ArrayInitializer(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
ArrayInitializer(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
ArrayInitializer(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
ArrayInitializer(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
ArrayInitializer(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
ArrayInitializer(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
ArrayInitializer(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
ArrayInitializer(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
ArrayInitializer(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
ArrayInitializer(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
ArrayInitializer(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
ArrayInitializer(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1702,private java.util.List<java.lang.Integer> wordOffset_ = java.util.Collections.emptyList();,"private java.util.List<java.lang.Integer> wordOffset_=java.util.Collections.emptyList();
",16,74,6,,"Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, ParameterizedType-type, FieldDeclaration-type, ),
QualifiedName(SimpleType-name, ParameterizedType-typeArguments, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1703,"protected String map = UtilTest.makeJavaCommand(StreamAggregate.class, new String[]{""."", ""\\n""});","protected String map=UtilTest.makeJavaCommand(StreamAggregate.class,new String[]{""."",""\\n""});
",17,47,10,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(ArrayInitializer-expressions, ArrayCreation-initializer, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1704,HttpRequest createWithReference = HttpRequest.builder().method(POST),"HttpRequest createWithReference=HttpRequest.builder().method(POST).endpoint(""https://route53.amazonaws.com/2012-02-29/hostedzone"").addHeader(HOST,""route53.amazonaws.com"").addHeader(DATE,""Mon, 21 Jan 02013 19:29:03 -0800"").addHeader(""X-Amzn-Authorization"",authForDate).payload(payloadFromStringWithContentType(""<CreateHostedZoneRequest xmlns=\""https://route53.amazonaws.com/doc/2012-02-29/\""><Name>jclouds.org.</Name><CallerReference>expect</CallerReference></CreateHostedZoneRequest>"",""application/xml"")).build();
",18,18,6,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1705,Class<? extends Encoder>[] encoders = new Class[0];,"Class<? extends Encoder>[] encoders=new Class[0];
",18,18,7,,"SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, FieldDeclaration-type, ),
SimpleName(SimpleType-name, WildcardType-bound, ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayCreation-dimensions, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1706,private final TypeComparator<?>[] comparators = new TypeComparator[] {this};,"private final TypeComparator<?>[] comparators=new TypeComparator[]{this};
",19,28,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, ParameterizedType-type, ArrayType-elementType, FieldDeclaration-type, ),
WildcardType(ParameterizedType-typeArguments, ArrayType-elementType, FieldDeclaration-type, ),
Dimension(ArrayType-dimensions, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, ArrayType-elementType, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
Dimension(ArrayType-dimensions, ArrayCreation-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(ArrayInitializer-expressions, ArrayCreation-initializer, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1707,private final Logger logger = Logger.getLogger(this.getClass().getName());,"private final Logger logger=Logger.getLogger(this.getClass().getName());
",20,442,9,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
ThisExpression(MethodInvocation-expression, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1708,"String disableAllowBodyParam="""", allowedHeaderParams="""", allowedMethodHeaders="""", allowedMethodParams="""", clientVersionHeader="""", config="""", debug="""", debugOn="""", defaultAccept="""", defaultCharset="""", defaultContentType="""", maxInput="""", messages="""", path="""", renderResponseStackTraces="""", roleGuard="""", rolesDeclared="""", siteName="""", uriAuthority="""", uriContext="""", uriRelativity="""", uriResolution="""";","String disableAllowBodyParam="""", allowedHeaderParams="""", allowedMethodHeaders="""", allowedMethodParams="""", clientVersionHeader="""", config="""", debug="""", debugOn="""", defaultAccept="""", defaultCharset="""", defaultContentType="""", maxInput="""", messages="""", path="""", renderResponseStackTraces="""", roleGuard="""", rolesDeclared="""", siteName="""", uriAuthority="""", uriContext="""", uriRelativity="""", uriResolution="""";
",21,136,45,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
StringLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1709,@Parameterized.Parameter public boolean isStateful;,"@Parameterized.Parameter public boolean isStateful;
",22,22,4,,"QualifiedName(MarkerAnnotation-typeName, FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
1710,"long minwait = Long.MAX_VALUE, maxwait = -1, totalwait=0, totalcmax=0, cmax = -1, nroffetch = 0, totalruntime = 0;","long minwait=Long.MAX_VALUE, maxwait=-1, totalwait=0, totalcmax=0, cmax=-1, nroffetch=0, totalruntime=0;
",27,28,15,,"PrimitiveType(FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
QualifiedName(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(PrefixExpression-operand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
NumberLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1711,"public final AnnotationFormat NEW_FILE = createAnnotationFormat(""new"", NbBundle.getMessage(Annotator.class, ""CTL_FileInfoStatus_New""), ADDED_COLOR, false);","public final AnnotationFormat NEW_FILE=createAnnotationFormat(""new"",NbBundle.getMessage(Annotator.class,""CTL_FileInfoStatus_New""),ADDED_COLOR,false);
",29,30,12,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-expression, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(MethodInvocation-arguments, MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
BooleanLiteral(MethodInvocation-arguments, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1712,public org.omg.CSI.AuthorizationElement value[] = null;,"public org.omg.CSI.AuthorizationElement value[]=null;
",30,37,5,,"Modifier(FieldDeclaration-modifiers, ),
QualifiedName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
Dimension(VariableDeclarationFragment-extraDimensions2, FieldDeclaration-fragments, ),
NullLiteral(VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1713,@JsonProperty public long keySizeBytes = 1;,"/** 
 * The key size in bytes. 
 */
@JsonProperty public long keySizeBytes=1;
",41,56,5,,"SimpleName(MarkerAnnotation-typeName, ),
Modifier(),
PrimitiveType(),
SimpleName(VariableDeclarationFragment-name, ),
NumberLiteral(VariableDeclarationFragment-initializer, ),
"
1714,protected final AIntervalPointable ipBuild = (AIntervalPointable) AIntervalPointable.FACTORY.createPointable();,"protected final AIntervalPointable ipBuild=(AIntervalPointable)AIntervalPointable.FACTORY.createPointable();
",51,112,7,,"Modifier(FieldDeclaration-modifiers, ),
Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, CastExpression-type, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
QualifiedName(MethodInvocation-expression, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, CastExpression-expression, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1715,"protected String TEST_CLASS_DIR = TEST_DIR + ApplyTransformTest.class.getSimpleName() + ""/"";","protected String TEST_CLASS_DIR=TEST_DIR + ApplyTransformTest.class.getSimpleName() + ""/"";
",57,57,7,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(InfixExpression-leftOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, InfixExpression-rightOperand, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
StringLiteral(InfixExpression-extendedOperands, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1716,Bean d1 = D1.class.getAnnotationsByType(Bean.class)[0];,"Bean d1=D1.class.getAnnotationsByType(Bean.class)[0];
",87,87,6,,"SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-expression, ArrayAccess-array, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(MethodInvocation-name, ArrayAccess-array, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
SimpleName(SimpleType-name, TypeLiteral-type, MethodInvocation-arguments, ArrayAccess-array, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
NumberLiteral(ArrayAccess-index, VariableDeclarationFragment-initializer, FieldDeclaration-fragments, ),
"
1717,protected @Metric(always = true)  MutableRate entityREST_getById;,"protected @Metric(always=true) MutableRate entityREST_getById;
",111,127,6,,"Modifier(FieldDeclaration-modifiers, ),
SimpleName(NormalAnnotation-typeName, FieldDeclaration-modifiers, ),
SimpleName(MemberValuePair-name, NormalAnnotation-values, FieldDeclaration-modifiers, ),
BooleanLiteral(MemberValuePair-value, NormalAnnotation-values, FieldDeclaration-modifiers, ),
SimpleName(SimpleType-name, FieldDeclaration-type, ),
SimpleName(VariableDeclarationFragment-name, FieldDeclaration-fragments, ),
"
