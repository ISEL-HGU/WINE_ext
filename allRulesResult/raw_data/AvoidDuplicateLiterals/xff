135000,./TargetProjects/incubator-tamaya-extensions/modules/osgi/gogo-shell/src/main/java/org/apache/tamaya/gogo/shell/Activator.java,47,,"        props.put(""osgi.command.function"","
135001,./TargetProjects/incubator-tamaya-extensions/modules/osgi/gogo-shell/src/main/java/org/apache/tamaya/gogo/shell/BackupCommands.java,49,,"    public void tm_backup_create(@Parameter(absentValue = Parameter.UNSPECIFIED, names={""-p"", ""--pid""})"
135002,./TargetProjects/incubator-tamaya-extensions/modules/osgi/gogo-shell/src/test/java/org/apache/tamaya/gogo/shell/BackupCommandsTest.java,94,,"            commands.tm_backup_get(""testBackup_Get"");"
135003,./TargetProjects/incubator-tamaya-extensions/modules/osgi/gogo-shell/src/test/java/org/apache/tamaya/gogo/shell/ConfigCommandsTest.java,63,,"        assertThat(out.contains(""system-properties"")).isTrue();"
135004,./TargetProjects/incubator-tamaya-extensions/modules/osgi/gogo-shell/src/test/java/org/apache/tamaya/gogo/shell/ConfigCommandsTest.java,69,,"            commands.tm_property(""system-properties"", ""java.version"", false);"
135005,./TargetProjects/incubator-tamaya-extensions/modules/osgi/gogo-shell/src/test/java/org/apache/tamaya/gogo/shell/ConfigCommandsTest.java,112,,"        testConfig.put(""test"",""testVal"");"
135006,./TargetProjects/incubator-tamaya-extensions/modules/osgi/gogo-shell/src/test/java/org/apache/tamaya/gogo/shell/ConfigCommandsTest.java,112,,"        testConfig.put(""test"",""testVal"");"
135007,./TargetProjects/incubator-tamaya-extensions/modules/osgi/gogo-shell/src/test/java/org/apache/tamaya/gogo/shell/ConfigCommandsTest.java,123,,"            commands.tm_config(""java"", ""testConfig"");"
135008,./TargetProjects/incubator-tamaya-extensions/modules/osgi/gogo-shell/src/test/java/org/apache/tamaya/gogo/shell/ConfigCommandsTest.java,150,,"            commands.tm_apply_config(""testApplyConfig"", Policy.EXTEND, true);"
135009,./TargetProjects/incubator-tamaya-extensions/modules/osgi/gogo-shell/src/test/java/org/apache/tamaya/gogo/shell/HistoryCommandsTest.java,57,,"        commands.tm_history_get(""testHistory_Get"", """");"
135010,./TargetProjects/incubator-tamaya-extensions/modules/osgi/injection/src/test/java/org/apache/tamaya/osgi/injection/OSGIConfigAdminPropertySourceTest.java,66,,"        PropertyValue val = propertySource.get(""java.home"");"
135011,./TargetProjects/incubator-tamaya-extensions/modules/resolver/src/main/java/org/apache/tamaya/resolver/internal/DefaultExpressionEvaluator.java,206,,"        String resolverRefs = propertyValue.getMeta(""resolvers"");"
135012,./TargetProjects/incubator-tamaya-extensions/modules/resolver/src/test/java/org/apache/tamaya/resolver/ConfigResolutionTest.java,40,,"            .isEqualTo(""My Java version is "" + System.getProperty(""java.version""));"
135013,./TargetProjects/incubator-tamaya-extensions/modules/resolver/src/test/java/org/apache/tamaya/resolver/ResolverTest.java,46,,"        assertThat(Resolver.getInstance().evaluateExpression(""myKey"", ""Version ${java.version}""))"
135014,./TargetProjects/incubator-tamaya-extensions/modules/resolver/src/test/java/org/apache/tamaya/resolver/ResolverTest.java,47,,"            .isEqualTo(""Version "" + System.getProperty(""java.version""));"
135015,./TargetProjects/incubator-tamaya-extensions/modules/resolver/src/test/java/org/apache/tamaya/resolver/ResolverTest.java,47,,"            .isEqualTo(""Version "" + System.getProperty(""java.version""));"
135016,./TargetProjects/incubator-tamaya-sandbox/camel/src/test/java/org/apache/tamaya/camel/TamayaPropertyResolverTest.java,41,,"        camelContext.addComponent(""properties"", new TamayaPropertiesComponent());"
135017,./TargetProjects/incubator-tamaya-sandbox/camel/src/test/java/org/apache/tamaya/camel/TamayaPropertyResolverTest.java,44,,"                from(""direct:hello"").transform().simple(""{{cfg:message}}"");"
135018,./TargetProjects/incubator-tamaya-sandbox/camel/src/test/java/org/apache/tamaya/camel/TamayaPropertyResolverTest.java,52,,"        assertThat(""Good Bye from Apache Tamaya!"").isEqualTo(greetMessage);"
135019,./TargetProjects/incubator-tamaya-sandbox/configjsr/src/test/java/org/apache/tamaya/jsr382/JavaConfigAdapterTest.java,86,,"                .withSimpleProperty(""string0"", ""value0"")"
135020,./TargetProjects/incubator-tamaya-sandbox/configjsr/src/test/java/org/apache/tamaya/jsr382/JavaConfigAdapterTest.java,86,,"                .withSimpleProperty(""string0"", ""value0"")"
135021,./TargetProjects/incubator-tamaya-sandbox/configjsr/src/test/java/org/apache/tamaya/jsr382/JavaConfigAdapterTest.java,87,,"                .withSimpleProperty(""int0"", ""0"")"
135022,./TargetProjects/incubator-tamaya-sandbox/configjsr/src/test/java/org/apache/tamaya/jsr382/JavaConfigAdapterTest.java,186,,"            throw new RuntimeException(""Not implemented yet!"");"
135023,./TargetProjects/incubator-tamaya-sandbox/configjsr/src/test/java/org/apache/tamaya/jsr382/SmokeExamples.java,65,,"        String textValue = config.getValue(""foo.bar.property"", String.class);"
135024,./TargetProjects/incubator-tamaya-sandbox/configjsr/src/test/java/org/apache/tamaya/jsr382/SmokeExamples.java,101,,"        String textValue = config.getOptionalValue(""foo.bar.property"", String.class).orElse(""anyDefault"");"
135025,./TargetProjects/incubator-tamaya-sandbox/documentation/src/main/java/org/apache/tamaya/doc/formats/HtmlDocFormat.java,106,,"                    td(pre(prop.getMainKey())).attr(""scope"",""row""),"
135026,./TargetProjects/incubator-tamaya-sandbox/documentation/src/main/java/org/apache/tamaya/doc/formats/HtmlDocFormat.java,115,,"                        th(""Main Key"").attr(""scope"",""col""),"
135027,./TargetProjects/incubator-tamaya-sandbox/jodatime/src/test/java/org/apache/tamaya/jodatime/DateTimeConverterTest.java,42,,"             {""2007-08-31T16:47:01.123+00:00"", FORMATTER.parseDateTime(""2007-08-31T16:47:01.123+00:00"")},"
135028,./TargetProjects/incubator-tamaya-sandbox/jodatime/src/test/java/org/apache/tamaya/jodatime/DateTimeConverterTest.java,47,,"             {""2007-08-31T16:47:01+00:00"", FORMATTER.parseDateTime(""2007-08-31T16:47:01.0+00:00"")},"
135029,./TargetProjects/incubator-tamaya-sandbox/jodatime/src/test/java/org/apache/tamaya/jodatime/DateTimeZoneConverterTest.java,45,,"             {""+00"", DateTimeZone.forID(""+00:00"")},"
135030,./TargetProjects/incubator-tamaya-sandbox/management/src/test/java/org/apache/tamaya/management/internal/ManagedConfigTest.java,66,,"        Map<String,String> cfg = bean.getSection(""java"", false);"
135031,./TargetProjects/incubator-tamaya-sandbox/metamodel/src/test/java/org/apache/tamaya/metamodel/internal/resolver/JavaResolverTest.java,61,,"        System.setProperty(""STAGE"", ""DEV2"");"
135032,./TargetProjects/incubator-tamaya-sandbox/server/src/main/java/org/apache/tamaya/server/ConfigurationServices.java,71,,"    public String readEtcdConfig(@QueryParam(""recursive"") Boolean recursive) {"
135033,./TargetProjects/incubator-tamaya-sandbox/server/src/main/java/org/apache/tamaya/server/ConfigurationServices.java,89,,"            final Node node = new Node(config, en.getKey(), ""node"");"
135034,./TargetProjects/incubator-tamaya-sandbox/server/src/main/java/org/apache/tamaya/server/ConfigurationServices.java,93,,"        final JsonObjectBuilder root = Json.createObjectBuilder().add(""action"", ""get"")"
135035,./TargetProjects/incubator-tamaya-sandbox/server/src/main/java/org/apache/tamaya/server/ConfigurationServices.java,110,,"    public String readEtcdConfig(@PathParam(""key"") String key, @QueryParam(""recursive"") Boolean recursive) {"
135036,./TargetProjects/incubator-tamaya-sandbox/server/src/main/java/org/apache/tamaya/server/ConfigurationServices.java,201,,"        final Node prevNode = new Node(config, key, ""prevNode"");"
135037,./TargetProjects/incubator-tamaya-sandbox/ui/base/src/main/java/org/apache/tamaya/ui/views/ConfigView.java,54,,"        tabPane.setHeight(""100%"");"
135038,./TargetProjects/incubator-tamaya-sandbox/ui/mutableconfig/src/main/java/org/apache/tamaya/ui/mutableconfig/ConfigEditorWidget.java,71,,"                    Notification.show(""Added "" + configKey.getValue() + "" = "" + configValue.getValue(),"
135039,./TargetProjects/incubator-tamaya-sandbox/usagetracker/src/test/java/org/apache/tamaya/model/ConfigUsageTest.java,39,,"        assertThat(info).isNotNull().doesNotContain(""java.version"");"
135040,./TargetProjects/incubator-tamaya-sandbox/vertx/src/test/java/org/apache/tamaya/vertx/ConfigVerticleTest.java,66,,"                ""user.home"", new Handler<AsyncResult<Message<String>>>() {"
135041,./TargetProjects/incubator-tamaya-sandbox/vertx/src/test/java/org/apache/tamaya/vertx/TestInjectedVerticleTest.java,60,,"                ""user.home"", reply -> {"
135042,./TargetProjects/incubator-tamaya-sandbox/vertx/src/test/java/org/apache/tamaya/vertx/TestInjectedVerticleTest.java,80,,"                                config.get(""user.name""),"
135043,./TargetProjects/incubator-taverna-commandline/taverna-commandline-launcher/src/main/java/org/apache/taverna/commandline/CommandLineOptionsImpl.java,65,,"		return hasOption(""help"") || (getArgs().length==0 && getOptions().length==0);"
135044,./TargetProjects/incubator-taverna-commandline/taverna-commandline-launcher/src/main/java/org/apache/taverna/commandline/CommandLineOptionsImpl.java,76,,"				&& !(hasOption(""embedded"") || hasOption(""clientserver"") || hasOption(""dbproperties"")))"
135045,./TargetProjects/incubator-taverna-commandline/taverna-commandline-launcher/src/main/java/org/apache/taverna/commandline/CommandLineOptionsImpl.java,76,,"				&& !(hasOption(""embedded"") || hasOption(""clientserver"") || hasOption(""dbproperties"")))"
135046,./TargetProjects/incubator-taverna-commandline/taverna-commandline-launcher/src/main/java/org/apache/taverna/commandline/CommandLineOptionsImpl.java,79,,"		if ((hasOption(""inputfile"") || hasOption(""inputvalue""))"
135047,./TargetProjects/incubator-taverna-commandline/taverna-commandline-launcher/src/main/java/org/apache/taverna/commandline/CommandLineOptionsImpl.java,79,,"		if ((hasOption(""inputfile"") || hasOption(""inputvalue""))"
135048,./TargetProjects/incubator-taverna-commandline/taverna-commandline-launcher/src/main/java/org/apache/taverna/commandline/CommandLineOptionsImpl.java,84,,"		if (hasOption(""inputdelimiter"") && hasOption(INPUT_BUNDLE))"
135049,./TargetProjects/incubator-taverna-commandline/taverna-commandline-launcher/src/main/java/org/apache/taverna/commandline/CommandLineOptionsImpl.java,91,,"		if (hasOption(""inmemory"") && hasOption(""embedded""))"
135050,./TargetProjects/incubator-taverna-commandline/taverna-commandline-launcher/src/test/java/org/apache/taverna/commandline/TestCommandLineOptionsHandler.java,37,,"				new String[] { ""myworkflow.t2flow"" });"
135051,./TargetProjects/incubator-taverna-commandline/taverna-commandline-launcher/src/test/java/org/apache/taverna/commandline/TestCommandLineOptionsHandler.java,65,,"		new CommandLineOptionsImpl(new String[] { ""-inputfile"", ""fred"", ""fred.txt"","
135052,./TargetProjects/incubator-taverna-commandline/taverna-commandline-launcher/src/test/java/org/apache/taverna/commandline/TestCommandLineOptionsHandler.java,65,,"		new CommandLineOptionsImpl(new String[] { ""-inputfile"", ""fred"", ""fred.txt"","
135053,./TargetProjects/incubator-taverna-commandline/taverna-commandline-launcher/src/test/java/org/apache/taverna/commandline/TestCommandLineOptionsHandler.java,65,,"		new CommandLineOptionsImpl(new String[] { ""-inputfile"", ""fred"", ""fred.txt"","
135054,./TargetProjects/incubator-taverna-commandline/taverna-commandline-launcher/src/test/java/org/apache/taverna/commandline/TestCommandLineOptionsHandler.java,72,,"		new CommandLineOptionsImpl(new String[] { ""-inputvalue"", ""fred"", ""fred.txt"","
135055,./TargetProjects/incubator-taverna-commandline/taverna-commandline-launcher/src/test/java/org/apache/taverna/commandline/TestCommandLineOptionsHandler.java,160,,"		new CommandLineOptionsImpl(new String[] { ""-provenance"","
135056,./TargetProjects/incubator-taverna-commandline/taverna-commandline-launcher/src/test/java/org/apache/taverna/commandline/TestCommandLineOptionsHandler.java,167,,"		new CommandLineOptionsImpl(new String[] { ""-provenance"", ""-inmemory"","
135057,./TargetProjects/incubator-taverna-commandline/taverna-commandline-launcher/src/test/java/org/apache/taverna/commandline/TestCommandLineOptionsHandler.java,175,,"		new CommandLineOptionsImpl(new String[] { ""-provenance"", ""-embedded"","
135058,./TargetProjects/incubator-taverna-commandline/taverna-commandline-launcher/src/test/java/org/apache/taverna/commandline/TestCommandLineOptionsHandler.java,177,,"		new CommandLineOptionsImpl(new String[] { ""-provenance"", ""-clientserver"","
135059,./TargetProjects/incubator-taverna-commandline/taverna-commandline-launcher/src/test/java/org/apache/taverna/commandline/TestCommandLineOptionsHandler.java,186,,"				""-inputvalue"",""in1"",""1,2,3"",""-inputdelimiter"",""in1"","","",""-inputdelimiter"",""in2"","","",""myworkflow.t2flow"" });"
135060,./TargetProjects/incubator-taverna-commandline/taverna-commandline-launcher/src/test/java/org/apache/taverna/commandline/TestCommandLineOptionsHandler.java,186,,"				""-inputvalue"",""in1"",""1,2,3"",""-inputdelimiter"",""in1"","","",""-inputdelimiter"",""in2"","","",""myworkflow.t2flow"" });"
135061,./TargetProjects/incubator-taverna-commandline/taverna-commandline-launcher/src/test/java/org/apache/taverna/commandline/TestCommandLineOptionsHandler.java,186,,"				""-inputvalue"",""in1"",""1,2,3"",""-inputdelimiter"",""in1"","","",""-inputdelimiter"",""in2"","","",""myworkflow.t2flow"" });"
135062,./TargetProjects/incubator-taverna-commandline/taverna-commandline-tests/src/test/java/org/apache/taverna/commandline/TavernaCommandLineTest.java,156,,"			assertTrue(String.format(""No output produced for %s"", workflowDirectory.getName()),"
135063,./TargetProjects/incubator-taverna-common-activities/taverna-beanshell-activity/src/main/java/org/apache/taverna/activities/dependencyactivity/AbstractAsynchronousDependencyActivity.java,136,,"		if (json.has(""classLoaderSharing"")) {"
135064,./TargetProjects/incubator-taverna-common-activities/taverna-beanshell-activity/src/main/java/org/apache/taverna/activities/dependencyactivity/AbstractAsynchronousDependencyActivity.java,279,,"							if (dependencyActivity.getConfiguration().has(""localDependency"")) {"
135065,./TargetProjects/incubator-taverna-common-activities/taverna-beanshell-activity/src/main/java/org/apache/taverna/activities/dependencyactivity/AbstractAsynchronousDependencyActivity.java,284,,"										logger.warn(""Invalid URL for "" + jar, ex);"
135066,./TargetProjects/incubator-taverna-common-activities/taverna-beanshell-activity/src/test/java/org/apache/taverna/activities/beanshell/BeanshellActivityHealthCheckerTest.java,63,,"		configuration.put(""script"", ""a = 5+3"");"
135067,./TargetProjects/incubator-taverna-common-activities/taverna-beanshell-activity/src/test/java/org/apache/taverna/activities/beanshell/BeanshellActivityHealthCheckerTest.java,75,,"		ancestors.add(edits.createProcessor(""beanie""));"
135068,./TargetProjects/incubator-taverna-common-activities/taverna-beanshell-activity/src/test/java/org/apache/taverna/activities/beanshell/BeanshellActivityTest.java,65,,"		edits.getAddActivityOutputPortEdit(activity, new ActivityOutputPortImpl(""output"", 0, 0)).doEdit();"
135069,./TargetProjects/incubator-taverna-common-activities/taverna-external-tool-activity/src/main/java/org/apache/taverna/activities/externaltool/desc/ToolDescription.java,169,,"		programNode.setAttribute(""name"", getUsecaseid());"
135070,./TargetProjects/incubator-taverna-common-activities/taverna-external-tool-activity/src/main/java/org/apache/taverna/activities/externaltool/desc/ToolDescription.java,173,,"		Element commandNode = new Element(""command"");"
135071,./TargetProjects/incubator-taverna-common-activities/taverna-external-tool-activity/src/main/java/org/apache/taverna/activities/externaltool/desc/ToolDescription.java,184,,"				staticNode.setAttribute(""binary"", ""true"");"
135072,./TargetProjects/incubator-taverna-common-activities/taverna-external-tool-activity/src/main/java/org/apache/taverna/activities/externaltool/desc/ToolDescription.java,184,,"				staticNode.setAttribute(""binary"", ""true"");"
135073,./TargetProjects/incubator-taverna-common-activities/taverna-external-tool-activity/src/main/java/org/apache/taverna/activities/externaltool/desc/ToolDescription.java,187,,"				staticNode.setAttribute(""forceCopy"", ""true"");"
135074,./TargetProjects/incubator-taverna-common-activities/taverna-external-tool-activity/src/main/java/org/apache/taverna/activities/externaltool/desc/ToolDescription.java,191,,"				fileNode.setAttribute(""path"", si.getTag());"
135075,./TargetProjects/incubator-taverna-common-activities/taverna-external-tool-activity/src/main/java/org/apache/taverna/activities/externaltool/desc/ToolDescription.java,195,,"				tempfileNode.setAttribute(""tag"", si.getTag());"
135076,./TargetProjects/incubator-taverna-common-activities/taverna-external-tool-activity/src/main/java/org/apache/taverna/activities/externaltool/desc/ToolDescription.java,204,,"				contentNode.setAttribute(""url"", si.getUrl());"
135077,./TargetProjects/incubator-taverna-common-activities/taverna-interaction-activity/src/main/java/org/apache/taverna/activities/interaction/atom/AtomUtils.java,31,,"			""http://ns.taverna.org.uk/2012/interaction"", ""input-data"","
135078,./TargetProjects/incubator-taverna-common-activities/taverna-interaction-activity/src/main/java/org/apache/taverna/activities/interaction/atom/AtomUtils.java,32,,"			""interaction"");"
135079,./TargetProjects/incubator-taverna-common-activities/taverna-interaction-activity/src/main/java/org/apache/taverna/activities/interaction/jetty/HackedFilesystemAdapter.java,92,,"		params.put(""page"", currentpage + 1);"
135080,./TargetProjects/incubator-taverna-common-activities/taverna-interaction-activity/src/main/java/org/apache/taverna/activities/interaction/jetty/HackedFilesystemAdapter.java,148,,"		final String key = target.getParameter(""entry"");"
135081,./TargetProjects/incubator-taverna-common-activities/taverna-interaction-activity/src/main/java/org/apache/taverna/activities/interaction/preference/InteractionPreference.java,58,,"	private static final String DEFAULT_WEBDAV_PATH = ""/interaction"";"
135082,./TargetProjects/incubator-taverna-common-activities/taverna-rest-activity/src/main/java/org/apache/taverna/activities/rest/RESTActivityConfigurationBean.java,57,,"			""Content-Type"", ""Expect"");"
135083,./TargetProjects/incubator-taverna-common-activities/taverna-rest-activity/src/main/java/org/apache/taverna/activities/rest/RESTActivityConfigurationBean.java,85,,"		defaultBean.setAcceptsHeaderValue(""application/xml"");"
135084,./TargetProjects/incubator-taverna-common-activities/taverna-rest-activity/src/test/java/org/apache/taverna/activities/rest/URISignatureHandlerTest.java,39,,"	final String validURI_3MixedPlaceholders = ""http://sysmo-db.org/sops/{sop_id}/experimental_conditions/{cond_id}?condition_unit={unit}"";"
135085,./TargetProjects/incubator-taverna-common-activities/taverna-rest-activity/src/test/java/org/apache/taverna/activities/rest/URISignatureHandlerTest.java,288,,"		assertEquals(""Wrong first placeholder"", ""sop_id"", placeholders.get(0));"
135086,./TargetProjects/incubator-taverna-common-activities/taverna-rest-activity/src/test/java/org/apache/taverna/activities/rest/URISignatureHandlerTest.java,288,,"		assertEquals(""Wrong first placeholder"", ""sop_id"", placeholders.get(0));"
135087,./TargetProjects/incubator-taverna-common-activities/taverna-rest-activity/src/test/java/org/apache/taverna/activities/rest/URISignatureHandlerTest.java,289,,"		assertEquals(""Wrong second placeholder"", ""cond_id"", placeholders.get(1));"
135088,./TargetProjects/incubator-taverna-common-activities/taverna-rest-activity/src/test/java/org/apache/taverna/activities/rest/URISignatureHandlerTest.java,310,,"		assertEquals(""Wrong third placeholder"", ""unit"", placeholders.get(2));"
135089,./TargetProjects/incubator-taverna-common-activities/taverna-rest-activity/src/test/java/org/apache/taverna/activities/rest/URISignatureHandlerTest.java,319,," 		assertEquals(""Wrong first placeholder"", ""catalogue"", placeholders.get(0));"
135090,./TargetProjects/incubator-taverna-common-activities/taverna-rest-activity/src/test/java/org/apache/taverna/activities/rest/URISignatureHandlerTest.java,320,," 		assertEquals(""Wrong second placeholder"", ""count?"", placeholders.get(1));"
135091,./TargetProjects/incubator-taverna-common-activities/taverna-rest-activity/src/test/java/org/apache/taverna/activities/rest/URISignatureHandlerTest.java,321,," 		assertEquals(""Wrong third placeholder"", ""startPage?"", placeholders.get(2));"
135092,./TargetProjects/incubator-taverna-common-activities/taverna-rest-activity/src/test/java/org/apache/taverna/activities/rest/URISignatureHandlerTest.java,322,," 		assertEquals(""Wrong fourth placeholder"", ""startIndex?"", placeholders.get(3));"
135093,./TargetProjects/incubator-taverna-common-activities/taverna-rest-activity/src/test/java/org/apache/taverna/activities/rest/URISignatureHandlerTest.java,323,," 		assertEquals(""Wrong fifth placeholder"", ""searchTerms?"", placeholders.get(4));"
135094,./TargetProjects/incubator-taverna-common-activities/taverna-rest-activity/src/test/java/org/apache/taverna/activities/rest/URISignatureHandlerTest.java,411,,"	@SuppressWarnings(""serial"")"
135095,./TargetProjects/incubator-taverna-common-activities/taverna-rest-activity/src/test/java/org/apache/taverna/activities/rest/URISignatureHandlerTest.java,479,," 				put(""searchTerms?"", ""term1"");"
135096,./TargetProjects/incubator-taverna-common-activities/taverna-spreadsheet-import-activity/src/test/java/org/apache/taverna/activities/spreadsheet/ExcelSpreadsheetReaderTest.java,75,,"										assertEquals(""5.0"", cell.getValue());"
135097,./TargetProjects/incubator-taverna-common-activities/taverna-spreadsheet-import-activity/src/test/java/org/apache/taverna/activities/spreadsheet/ExcelSpreadsheetReaderTest.java,79,,"										assertEquals(""1.0"", cell.getValue());"
135098,./TargetProjects/incubator-taverna-common-activities/taverna-spreadsheet-import-activity/src/test/java/org/apache/taverna/activities/spreadsheet/ODFSpreadsheetReaderTest.java,72,,"										assertEquals(""5.0"", cell.getValue());"
135099,./TargetProjects/incubator-taverna-common-activities/taverna-spreadsheet-import-activity/src/test/java/org/apache/taverna/activities/spreadsheet/ODFSpreadsheetReaderTest.java,76,,"										assertEquals(""1.0"", cell.getValue());"
135100,./TargetProjects/incubator-taverna-common-activities/taverna-spreadsheet-import-activity/src/test/java/org/apache/taverna/activities/spreadsheet/SpreadsheetImportActivityTest.java,67,,"		configuration.put(""columnRange"", configuration.objectNode().put(""start"", 0).put(""end"", 1));"
135101,./TargetProjects/incubator-taverna-common-activities/taverna-spreadsheet-import-activity/src/test/java/org/apache/taverna/activities/spreadsheet/SpreadsheetImportActivityTest.java,67,,"		configuration.put(""columnRange"", configuration.objectNode().put(""start"", 0).put(""end"", 1));"
135102,./TargetProjects/incubator-taverna-common-activities/taverna-spreadsheet-import-activity/src/test/java/org/apache/taverna/activities/spreadsheet/SpreadsheetImportActivityTest.java,67,,"		configuration.put(""columnRange"", configuration.objectNode().put(""start"", 0).put(""end"", 1));"
135103,./TargetProjects/incubator-taverna-common-activities/taverna-spreadsheet-import-activity/src/test/java/org/apache/taverna/activities/spreadsheet/SpreadsheetImportActivityTest.java,146,,"		Map<String, Object> results = ActivityInvoker.invokeAsyncActivity(activity, Collections.singletonMap(""fileurl"","
135104,./TargetProjects/incubator-taverna-common-activities/taverna-spreadsheet-import-activity/src/test/java/org/apache/taverna/activities/spreadsheet/SpreadsheetImportActivityTest.java,166,,"		outputs.put(""output"", String.class);"
135105,./TargetProjects/incubator-taverna-common-activities/taverna-spreadsheet-import-activity/src/test/java/org/apache/taverna/activities/spreadsheet/SpreadsheetReadExceptionTest.java,37,,"		SpreadsheetReadException spreadsheetReadException = new SpreadsheetReadException(""test exception"");"
135106,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-activity/src/main/java/org/apache/taverna/activities/wsdl/WSDLActivity.java,106,,"                            ""Unable to parse the WSDL "" + bean.get(""operation"").get(""wsdl"").textValue(), ex);"
135107,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-activity/src/main/java/org/apache/taverna/activities/wsdl/WSDLActivity.java,125,,"				.getOperationInputParameters(configurationBean.get(""operation"").get(""name"").textValue());"
135108,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-activity/src/main/java/org/apache/taverna/activities/wsdl/WSDLActivityFactory.java,88,,"			WSDLParser parser = new WSDLParser(configuration.get(""operation"").get(""wsdl"").textValue());"
135109,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-activity/src/main/java/org/apache/taverna/activities/wsdl/WSDLActivityFactory.java,88,,"			WSDLParser parser = new WSDLParser(configuration.get(""operation"").get(""wsdl"").textValue());"
135110,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-activity/src/main/java/org/apache/taverna/activities/wsdl/WSDLActivityHealthChecker.java,91,,"				vr.setProperty(""endpoint"", endpoint);"
135111,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-activity/src/main/java/org/apache/taverna/activities/wsdl/WSDLActivityHealthChecker.java,98,,"			vr.setProperty(""exception"", e);"
135112,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-activity/src/main/java/org/apache/taverna/activities/wsdl/security/SecurityProfiles.java,46,,"	public static final String WSSECURITY_USERNAMETOKEN_PLAINTEXTPASSWORD_CONFIG = ""<deployment xmlns=\""http://xml.apache.org/axis/wsdd/\"" xmlns:java=\""http://xml.apache.org/axis/wsdd/providers/java\"">"" +"
135113,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-activity/src/main/java/org/apache/taverna/activities/wsdl/security/SecurityProfiles.java,47,,"	""<globalConfiguration>"" +"
135114,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-activity/src/main/java/org/apache/taverna/activities/wsdl/security/SecurityProfiles.java,48,,"	""<requestFlow>"" +"
135115,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-activity/src/main/java/org/apache/taverna/activities/wsdl/security/SecurityProfiles.java,49,,"	""<handler type=\""java:org.apache.ws.axis.security.WSDoAllSender\"">"" +"
135116,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-activity/src/main/java/org/apache/taverna/activities/wsdl/security/SecurityProfiles.java,52,,"	""</handler>""+"
135117,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-activity/src/main/java/org/apache/taverna/activities/wsdl/security/SecurityProfiles.java,53,,"	""</requestFlow>"" +"
135118,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-activity/src/main/java/org/apache/taverna/activities/wsdl/security/SecurityProfiles.java,54,,"	""</globalConfiguration>"" +"
135119,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-activity/src/main/java/org/apache/taverna/activities/wsdl/security/SecurityProfiles.java,55,,"	""<transport name=\""http\"" pivot=\""java:org.apache.axis.transport.http.HTTPSender\""/>""+"
135120,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-activity/src/main/java/org/apache/taverna/activities/wsdl/security/SecurityProfiles.java,56,,"	""</deployment>"";"
135121,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-activity/src/main/java/org/apache/taverna/activities/wsdl/xmlsplitter/XMLSplitterConfigurationBeanBuilder.java,72,,"		outBean.put(""name"", ""output"");"
135122,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-activity/src/main/java/org/apache/taverna/activities/wsdl/xmlsplitter/XMLSplitterConfigurationBeanBuilder.java,73,,"		outBean.put(""mimeType"", ""'text/xml'"");"
135123,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-activity/src/main/java/org/apache/taverna/activities/wsdl/xmlsplitter/XMLSplitterConfigurationBeanBuilder.java,74,,"		outBean.put(""depth"", 0);"
135124,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-activity/src/main/java/org/apache/taverna/activities/wsdl/xmlsplitter/XMLSplitterConfigurationBeanBuilder.java,75,,"		outBean.put(""granularDepth"", 0);"
135125,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-activity/src/test/java/org/apache/taverna/activities/wsdl/WSDLActivityTest.java,55,,"    @Ignore(""Integration test"")"
135126,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-activity/src/test/java/org/apache/taverna/activities/wsdl/WSDLActivityTest.java,74,,"		assertEquals(""parameters"", activity.getInputPorts().iterator().next()"
135127,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-activity/src/test/java/org/apache/taverna/activities/wsdl/xmlsplitter/AddXMLSplitterEditTest.java,51,,"	@Ignore(""Integration test"")"
135128,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-activity/src/test/java/org/apache/taverna/activities/wsdl/xmlsplitter/XMLSplitterConfigurationBeanBuilderTest.java,41,,"		assertEquals(""There should be 1 input"",1,bean.get(""inputPorts"").size());"
135129,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-activity/src/test/java/org/apache/taverna/activities/wsdl/xmlsplitter/XMLSplitterConfigurationBeanBuilderTest.java,42,,"		assertEquals(""There should be 1 output"",1,bean.get(""outputPorts"").size());"
135130,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-activity/src/test/java/org/apache/taverna/activities/wsdl/xmlsplitter/XMLSplitterConfigurationBeanBuilderTest.java,44,,"		assertEquals(""The input should be named person"",""person"",bean.get(""inputPorts"").get(0).get(""name"").textValue());"
135131,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-generic/src/main/java/org/apache/taverna/wsdl/xmlsplitter/XMLSplitterSerialisationHelper.java,93,,"			result.removeAttribute(""qname"");"
135132,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-generic/src/main/java/org/apache/taverna/wsdl/xmlsplitter/XMLSplitterSerialisationHelper.java,173,,"                   new Element(""annotation"", Namespace.getNamespace(""xsd"", ""http://www.w3.org/2001/XMLSchema""));"
135133,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-generic/src/main/java/org/apache/taverna/wsdl/xmlsplitter/XMLSplitterSerialisationHelper.java,173,,"                   new Element(""annotation"", Namespace.getNamespace(""xsd"", ""http://www.w3.org/2001/XMLSchema""));"
135134,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-generic/src/main/java/org/apache/taverna/wsdl/xmlsplitter/XMLSplitterSerialisationHelper.java,234,,"									""true""));"
135135,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-generic/src/test/java/org/apache/taverna/wsdl/parser/TypeDescriptorTest.java,32,,"		desc.setName(""AnArray"");"
135136,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-generic/src/test/java/org/apache/taverna/wsdl/parser/WSDLParserTest.java,39,,"		WSDLParser parser = new WSDLParser(wsdlResourcePath(""eutils/eutils_lite.wsdl""));"
135137,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-generic/src/test/java/org/apache/taverna/wsdl/parser/WSDLParserTest.java,53,,"		String actionURI = parser.getSOAPActionURI(""run_eInfo"");"
135138,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-generic/src/test/java/org/apache/taverna/wsdl/parser/WSDLParserTest.java,65,,"		assertEquals(""wrong number of inputs"", 1, inputs.size());"
135139,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-generic/src/test/java/org/apache/taverna/wsdl/parser/WSDLParserTest.java,66,,"		assertEquals(""wrong number of outputs"", 1, outputs.size());"
135140,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-generic/src/test/java/org/apache/taverna/wsdl/parser/WSDLParserTest.java,71,,"		assertEquals(""wrong name"", ""parameters"", complexTypeDesc.getName());"
135141,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-generic/src/test/java/org/apache/taverna/wsdl/parser/WSDLParserTest.java,79,,"		assertEquals(""wrong type"", ""string"", typeDesc.getType());"
135142,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-generic/src/test/java/org/apache/taverna/wsdl/parser/WSDLParserTest.java,79,,"		assertEquals(""wrong type"", ""string"", typeDesc.getType());"
135143,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-generic/src/test/java/org/apache/taverna/wsdl/parser/WSDLParserTest.java,98,,"		WSDLParser parser = new WSDLParser(wsdlResourcePath(""bind.wsdl""));"
135144,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-generic/src/test/java/org/apache/taverna/wsdl/parser/WSDLParserTest.java,110,,"		assertEquals(""wrong type for input"", ""int"", (inputs"
135145,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-generic/src/test/java/org/apache/taverna/wsdl/parser/WSDLParserTest.java,252,,"		assertEquals(""operation namespace is wrong"","
135146,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-generic/src/test/java/org/apache/taverna/wsdl/soap/EncodedBodyBuilderTest.java,64,,"                String type = child.getAttributeNS(XMLConstants.W3C_XML_SCHEMA_INSTANCE_NS_URI, ""type"");"
135147,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-generic/src/test/java/org/apache/taverna/wsdl/soap/LiteralBodyBuilderTest.java,69,,"		BodyBuilder builder = createBuilder(wsdlResourcePath(""TestServices-unwrapped.wsdl""), ""countString"");"
135148,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-generic/src/test/java/org/apache/taverna/wsdl/soap/LiteralBodyBuilderTest.java,73,,"		inputMap.put(""str"", ""bob"");"
135149,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-generic/src/test/java/org/apache/taverna/wsdl/soap/LiteralBodyBuilderTest.java,78,,"                assertEquals(""XML should containe qualifed namespace for str"",""http://testing.org"", body.getNamespaceURI());"
135150,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-generic/src/test/java/org/apache/taverna/wsdl/soap/LiteralBodyBuilderTest.java,85,,"		assertTrue(""Wrong type of builder, it should be Literal based"",builder instanceof LiteralBodyBuilder);"
135151,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-generic/src/test/java/org/apache/taverna/wsdl/soap/SOAPResponseLiteralTest.java,41,,"	@SuppressWarnings(""unchecked"")"
135152,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-generic/src/test/java/org/apache/taverna/wsdl/soap/SOAPResponseLiteralTest.java,55,,"		descriptor.setName(""testResponse"");"
135153,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-generic/src/test/java/org/apache/taverna/wsdl/soap/SOAPResponseLiteralTest.java,62,,"		assertNotNull(""no output map returned"", outputMap);"
135154,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-generic/src/test/java/org/apache/taverna/wsdl/soap/SOAPResponseLiteralTest.java,63,,"		assertEquals(""map should contain 1 element"", 1, outputMap.size());"
135155,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-generic/src/test/java/org/apache/taverna/wsdl/soap/SOAPResponseMultiRefTest.java,52,,"	@SuppressWarnings(""unchecked"")"
135156,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-generic/src/test/java/org/apache/taverna/wsdl/xmlsplitter/XMLInputSplitterTest.java,41,,"		XMLInputSplitter splitter = new XMLInputSplitter(descriptor,new String[]{""db"",""tool"",""email""},new String[]{""text/plain"",""text/plain"",""text/plain""},new String[]{""output""});"
135157,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-generic/src/test/java/org/apache/taverna/wsdl/xmlsplitter/XMLInputSplitterTest.java,41,,"		XMLInputSplitter splitter = new XMLInputSplitter(descriptor,new String[]{""db"",""tool"",""email""},new String[]{""text/plain"",""text/plain"",""text/plain""},new String[]{""output""});"
135158,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-generic/src/test/java/org/apache/taverna/wsdl/xmlsplitter/XMLOutputSplitterTest.java,42,,"        XMLOutputSplitter splitter = new XMLOutputSplitter(descriptor, new String [] {""length"",""innerArray"",""innerList""}, new String [] {""text/plain"",""l('text/plain')"",""l('text/plain')""}, new String[] {""input""});"
135159,./TargetProjects/incubator-taverna-common-activities/taverna-wsdl-generic/src/test/java/org/apache/taverna/wsdl/xmlsplitter/XMLOutputSplitterTest.java,42,,"        XMLOutputSplitter splitter = new XMLOutputSplitter(descriptor, new String [] {""length"",""innerArray"",""innerList""}, new String [] {""text/plain"",""l('text/plain')"",""l('text/plain')""}, new String[] {""input""});"
135160,./TargetProjects/incubator-taverna-engine/taverna-credential-manager-impl/src/main/java/org/apache/taverna/security/credentialmanager/impl/CredentialManagerImpl.java,776,,"					alias = ""password#"" + mappedURI.toASCIIString();"
135161,./TargetProjects/incubator-taverna-engine/taverna-credential-manager-impl/src/main/java/org/apache/taverna/security/credentialmanager/impl/CredentialManagerImpl.java,1477,,"		if (!ownerCN.equals(""none"")) { // try owner's CN first"
135162,./TargetProjects/incubator-taverna-engine/taverna-credential-manager-impl/src/main/java/org/apache/taverna/security/credentialmanager/impl/ParsedDistinguishedNameImpl.java,208,,"			CN = ""none"";"
135163,./TargetProjects/incubator-taverna-engine/taverna-credential-manager-impl/src/test/java/org/apache/taverna/security/credentialmanager/impl/CredentialManagerImplTest.java,685,,"		credentialManager.changeMasterPassword(""blah"");"
135164,./TargetProjects/incubator-taverna-engine/taverna-credential-manager-impl/src/test/java/org/apache/taverna/security/credentialmanager/impl/HTTPAuthenticatorIT.java,237,,"		URL url = new URL(""http://localhost:"" + PORT + ""/test.html"");"
135165,./TargetProjects/incubator-taverna-engine/taverna-credential-manager-impl/src/test/java/org/apache/taverna/security/credentialmanager/impl/HTTPAuthenticatorIT.java,237,,"		URL url = new URL(""http://localhost:"" + PORT + ""/test.html"");"
135166,./TargetProjects/incubator-taverna-engine/taverna-credential-manager-impl/src/test/java/org/apache/taverna/security/credentialmanager/impl/HTTPAuthenticatorIT.java,244,,"		assertEquals(""Unexpected calls to password provider"", 0,"
135167,./TargetProjects/incubator-taverna-engine/taverna-credential-manager-impl/src/test/java/org/apache/taverna/security/credentialmanager/impl/HTTPAuthenticatorIT.java,249,,"		assertEquals(""Unexpected calls to authenticator"", 0,"
135168,./TargetProjects/incubator-taverna-engine/taverna-credential-manager-impl/src/test/java/org/apache/taverna/security/credentialmanager/impl/HTTPAuthenticatorIT.java,269,,"		assertEquals(""HTTP/1.1 200 OK"", c.getHeaderField(0));"
135169,./TargetProjects/incubator-taverna-engine/taverna-credential-manager-impl/src/test/java/org/apache/taverna/security/credentialmanager/impl/HTTPAuthenticatorIT.java,272,,"		assertEquals(""Unexpected prompt/realm"", REALM, httpAuthProvider.getRequestMessage());"
135170,./TargetProjects/incubator-taverna-engine/taverna-credential-manager-impl/src/test/java/org/apache/taverna/security/credentialmanager/impl/HTTPAuthenticatorIT.java,273,,"		assertEquals(""Unexpected URI"", url.toURI().toASCIIString() + ""#"" + REALM, HTTPAuthenticatorServiceUsernameAndPasswordProvider"
135171,./TargetProjects/incubator-taverna-engine/taverna-credential-manager-impl/src/test/java/org/apache/taverna/security/credentialmanager/impl/HTTPSConnectionAndTrustConfirmationIT.java,200,,"			fail(""Connection to https://heater.cs.man.ac.uk:7443/ should be untrusted at this point."");"
135172,./TargetProjects/incubator-taverna-engine/taverna-credential-manager-impl/src/test/java/org/apache/taverna/security/credentialmanager/impl/PossibleURILookupsTest.java,51,,"	private static final String ROOT_URI = ""http://www.taverna.org.uk/"";"
135173,./TargetProjects/incubator-taverna-engine/taverna-credential-manager-impl/src/test/java/org/apache/taverna/security/credentialmanager/impl/PossibleURILookupsTest.java,58,,"	private static final String NASTY_URI_PARENT = ""http://www.taverna.org.uk/path1/path2/path3/"";"
135174,./TargetProjects/incubator-taverna-engine/taverna-credential-manager-impl/src/test/java/org/apache/taverna/security/credentialmanager/impl/PossibleURILookupsTest.java,141,,"						URI.create(""http://www.taverna.org.uk/path1/path2/""),"
135175,./TargetProjects/incubator-taverna-engine/taverna-credential-manager-impl/src/test/java/org/apache/taverna/security/credentialmanager/impl/PossibleURILookupsTest.java,142,,"						URI.create(""http://www.taverna.org.uk/path1/""), "
135176,./TargetProjects/incubator-taverna-engine/taverna-credential-manager-impl/src/test/java/org/apache/taverna/security/credentialmanager/impl/PossibleURILookupsTest.java,148,,"		assertEquals(""Did not match expected URIs"", expected, lookups);"
135177,./TargetProjects/incubator-taverna-engine/taverna-database-configuration-impl/src/main/java/org/apache/taverna/configuration/database/impl/DatabaseConfigurationImpl.java,70,,"		return getProperty(IN_MEMORY).equalsIgnoreCase(""true"");"
135178,./TargetProjects/incubator-taverna-engine/taverna-dataflow-activity/src/test/java/org/apache/taverna/activities/dataflow/DataflowActivityTest.java,57,,"		edits.getCreateDataflowInputPortEdit(dataflow, ""input"", 0, 0).doEdit();"
135179,./TargetProjects/incubator-taverna-engine/taverna-dataflow-activity/src/test/java/org/apache/taverna/activities/dataflow/DataflowActivityTest.java,58,,"		edits.getCreateDataflowOutputPortEdit(dataflow, ""output"").doEdit();"
135180,./TargetProjects/incubator-taverna-engine/taverna-execution-impl/src/main/java/org/apache/taverna/platform/execution/impl/ExecutionEnvironmentServiceImpl.java,53,,"	@SuppressWarnings(""unused"")"
135181,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/connector/AbstractProvenanceConnector.java,61,,"			return ""CREATE TABLE "" + Activity + ""(\n"""
135182,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/connector/AbstractProvenanceConnector.java,61,,"			return ""CREATE TABLE "" + Activity + ""(\n"""
135183,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/connector/AbstractProvenanceConnector.java,62,,"			+ activityId + "" varchar(36) NOT NULL,\n"""
135184,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/connector/AbstractProvenanceConnector.java,64,,"			+ workflowId + "" varchar(100) NOT NULL, \n"""
135185,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/connector/AbstractProvenanceConnector.java,65,,"			+ ""PRIMARY KEY ("" + activityId + "")\n"" + "")"";"
135186,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/connector/AbstractProvenanceConnector.java,72,,"			return ""CREATE TABLE "" + Collection + "" (\n"""
135187,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/connector/AbstractProvenanceConnector.java,73,,"				+ collID + "" varchar(100) NOT NULL,\n"""
135188,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/connector/AbstractProvenanceConnector.java,110,,"			+ invocationStarted + "" timestamp, \n"""
135189,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/connector/AbstractProvenanceConnector.java,112,,"			+ inputsDataBinding + "" varchar(36),\n"""
135190,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/connector/AbstractProvenanceConnector.java,114,,"			+ parentProcessorEnactmentId + "" varchar(36), \n"""
135191,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/connector/AbstractProvenanceConnector.java,145,,"			+ value + "" varchar(100) default NULL,\n"""
135192,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/lineageservice/EventProcessor.java,733,,"		queryConstraints.put(""V.workflowId"","
135193,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/lineageservice/EventProcessor.java,797,,"				queryConstraints.put(""V.processorName"", targetPname);"
135194,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/lineageservice/EventProcessor.java,798,,"				queryConstraints.put(""VB.workflowRunId"", getWorkflowRunId());"
135195,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/lineageservice/ProvenanceAnalysis.java,671,,"								logger.warn(""Could not add artifact"", e);"
135196,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/lineageservice/ProvenanceQuery.java,142,,"		String sep = "" WHERE "";"
135197,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/lineageservice/ProvenanceQuery.java,147,,"				sep = "" AND "";"
135198,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/lineageservice/ProvenanceQuery.java,183,,"				aPort.setWorkflowId(rs.getString(""workflowId""));"
135199,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/lineageservice/ProvenanceQuery.java,184,,"				aPort.setInputPort(rs.getBoolean(""isInputPort""));"
135200,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/lineageservice/ProvenanceQuery.java,185,,"				aPort.setIdentifier(rs.getString(""portId""));"
135201,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/lineageservice/ProvenanceQuery.java,186,,"				aPort.setProcessorName(rs.getString(""processorName""));"
135202,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/lineageservice/ProvenanceQuery.java,187,,"				aPort.setProcessorId(rs.getString(""processorId""));"
135203,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/lineageservice/ProvenanceQuery.java,188,,"				aPort.setPortName(rs.getString(""portName""));"
135204,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/lineageservice/ProvenanceQuery.java,190,,"				if (rs.getString(""resolvedDepth"") != null)"
135205,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/lineageservice/ProvenanceQuery.java,195,,"			logger.warn(""Could not execute query"", e);"
135206,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/lineageservice/ProvenanceQuery.java,214,,"		varQueryConstraints.put(""V.workflowId"", wfID);"
135207,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/lineageservice/ProvenanceQuery.java,216,,"		varQueryConstraints.put(""V.isInputPort"", ""1"");"
135208,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/lineageservice/ProvenanceQuery.java,263,,"						.getString(""destinationProcessorName""));"
135209,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/lineageservice/ProvenanceQuery.java,314,,"				w.setParentWorkflowId(rs.getString(""parentWorkflowId""));"
135210,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/lineageservice/ProvenanceQuery.java,330,,"				return rs.getString(""workflowRunId"");"
135211,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/lineageservice/ProvenanceQuery.java,423,,"				vb.setIteration(rs.getString(""iteration""));"
135212,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/lineageservice/ProvenanceQuery.java,424,,"				vb.setProcessorName(rs.getString(""processorNameRef""));"
135213,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/lineageservice/ProvenanceQuery.java,566,,"					if (rs.getString(""firstActivityClass"").equals("
135214,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/lineageservice/ProvenanceQuery.java,879,,"		q.where(""W.workflowRunId"", workflowRun)"
135215,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/lineageservice/ProvenanceQuery.java,1377,,"		String sql = ""SELECT "" + parentProcessorEnactmentId + "" AS parent"""
135216,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/lineageservice/ProvenanceQuery.java,1378,,"				+ "" FROM "" + DataflowInvocation + "" W "" + "" WHERE """
135217,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/lineageservice/ProvenanceQuery.java,1698,,"			logger.warn(""Could not execute query "" + query, e);"
135218,./TargetProjects/incubator-taverna-engine/taverna-provenanceconnector/src/main/java/org/apache/taverna/provenance/lineageservice/ProvenanceWriter.java,511,,"			stmt.executeUpdate(""DELETE FROM "" + ActivityTable.Activity);"
135219,./TargetProjects/incubator-taverna-engine/taverna-reference-impl/src/main/java/org/apache/taverna/reference/impl/AbstractReferenceServiceImpl.java,102,,"					""Reference service must be configued with an """
135220,./TargetProjects/incubator-taverna-engine/taverna-reference-impl/src/main/java/org/apache/taverna/reference/impl/ErrorDocumentImpl.java,78,,"	@SuppressWarnings({ ""unchecked"", ""rawtypes"" })"
135221,./TargetProjects/incubator-taverna-engine/taverna-reference-impl/src/main/java/org/apache/taverna/reference/impl/ReferenceServiceImpl.java,626,,"		String type = parseRef.get(""type"");"
135222,./TargetProjects/incubator-taverna-engine/taverna-reference-impl/src/main/java/org/apache/taverna/reference/impl/ReferenceServiceImpl.java,631,,"			newRef.setContainsErrors(Boolean.parseBoolean(parseRef.get(""error"")));"
135223,./TargetProjects/incubator-taverna-engine/taverna-reference-impl/src/main/java/org/apache/taverna/reference/impl/ReferenceServiceImpl.java,632,,"			newRef.setDepth(Integer.parseInt(parseRef.get(""depth"")));"
135224,./TargetProjects/incubator-taverna-engine/taverna-reference-impl/src/main/java/org/apache/taverna/reference/impl/ReferenceSetAugmentorImpl.java,70,,"	@SuppressWarnings(""rawtypes"")"
135225,./TargetProjects/incubator-taverna-engine/taverna-reference-impl/src/test/java/org/apache/taverna/reference/impl/ErrorDocumentDaoTest.java,44,,"			ErrorDocumentDao dao = (ErrorDocumentDao) context.getBean(""testErrorDao"");"
135226,./TargetProjects/incubator-taverna-engine/taverna-reference-impl/src/test/java/org/apache/taverna/reference/impl/ListDaoTest.java,43,,"			ListDao dao = (ListDao)context.getBean(""testListDao"");"
135227,./TargetProjects/incubator-taverna-engine/taverna-reference-impl/src/test/java/org/apache/taverna/reference/impl/ReferenceSetDaoTest.java,46,,"			ReferenceSetDao dao = (ReferenceSetDao) context.getBean(""testDao"");"
135228,./TargetProjects/incubator-taverna-engine/taverna-run-impl/src/main/java/org/apache/taverna/platform/run/impl/Run.java,241,,"				throw new RunStateException(""Cannot start a "" + state + "" run."");"
135229,./TargetProjects/incubator-taverna-engine/taverna-run-impl/src/test/java/org/apache/taverna/platform/run/impl/WorkflowReportJSONTest.java,63,,"        assertEquals(""COMPLETED"", json.get(""state"").asText());"
135230,./TargetProjects/incubator-taverna-engine/taverna-run-impl/src/test/java/org/apache/taverna/platform/run/impl/WorkflowReportJSONTest.java,65,,"        assertEquals(""2013-01-02T14:50:00.000+0000"", json.get(""startedDate"").asText());"
135231,./TargetProjects/incubator-taverna-engine/taverna-run-impl/src/test/java/org/apache/taverna/platform/run/impl/WorkflowReportJSONTest.java,69,,"                json.get(""subject"").asText());"
135232,./TargetProjects/incubator-taverna-engine/taverna-run-impl/src/test/java/org/apache/taverna/platform/run/impl/WorkflowReportJSONTest.java,72,,"        JsonNode wfInvoc = json.get(""invocations"").get(0);"
135233,./TargetProjects/incubator-taverna-engine/taverna-run-impl/src/test/java/org/apache/taverna/platform/run/impl/WorkflowReportJSONTest.java,73,,"        assertEquals(""wf0"", wfInvoc.get(""id"").asText());"
135234,./TargetProjects/incubator-taverna-engine/taverna-run-impl/src/test/java/org/apache/taverna/platform/run/impl/WorkflowReportJSONTest.java,74,,"        assertEquals(""wf0"", wfInvoc.get(""name"").asText());"
135235,./TargetProjects/incubator-taverna-engine/taverna-run-impl/src/test/java/org/apache/taverna/platform/run/impl/WorkflowReportJSONTest.java,79,,"        String inputsName = wfInvoc.get(""inputs"").get(""name"").asText();"
135236,./TargetProjects/incubator-taverna-engine/taverna-run-impl/src/test/java/org/apache/taverna/platform/run/impl/WorkflowReportJSONTest.java,80,,"        assertEquals(""/inputs/name"", inputsName);"
135237,./TargetProjects/incubator-taverna-engine/taverna-run-impl/src/test/java/org/apache/taverna/platform/run/impl/WorkflowReportJSONTest.java,81,,"        String outputsGreeting = wfInvoc.get(""outputs"").get(""greeting"").asText();"
135238,./TargetProjects/incubator-taverna-engine/taverna-run-impl/src/test/java/org/apache/taverna/platform/run/impl/WorkflowReportJSONTest.java,88,,"                ""Hello, John Doe"","
135239,./TargetProjects/incubator-taverna-engine/taverna-run-impl/src/test/java/org/apache/taverna/platform/run/impl/WorkflowReportJSONTest.java,118,,"        assertTrue(inputString1.startsWith(""/intermediates/""));"
135240,./TargetProjects/incubator-taverna-engine/taverna-run-impl/src/test/java/org/apache/taverna/platform/run/impl/WorkflowReportJSONTest.java,120,,"                ""Hello, "","
135241,./TargetProjects/incubator-taverna-engine/taverna-workflowmodel-api/src/main/java/org/apache/taverna/utility/TreeModelAdapter.java,80,,"			@SuppressWarnings({ ""rawtypes"", ""unchecked"" })"
135242,./TargetProjects/incubator-taverna-engine/taverna-workflowmodel-api/src/main/java/org/apache/taverna/workflowmodel/Dataflow.java,47,,"	@HierarchyTraversal(hierarchies = { ""workflowStructure"" }, role = { CHILD })"
135243,./TargetProjects/incubator-taverna-engine/taverna-workflowmodel-api/src/main/java/org/apache/taverna/workflowmodel/Processor.java,56,,"	@HierarchyTraversal(hierarchies = { ""workflowStructure"" }, role = { CHILD })"
135244,./TargetProjects/incubator-taverna-engine/taverna-workflowmodel-extensions/src/main/java/org/apache/taverna/workflowmodel/processor/dispatch/layers/ErrorBounce.java,207,,"				return new String[] { ""dispatch"", ""errorbounce"", ""reflected"" };"
135245,./TargetProjects/incubator-taverna-engine/taverna-workflowmodel-extensions/src/main/java/org/apache/taverna/workflowmodel/processor/dispatch/layers/ErrorBounce.java,207,,"				return new String[] { ""dispatch"", ""errorbounce"", ""reflected"" };"
135246,./TargetProjects/incubator-taverna-engine/taverna-workflowmodel-extensions/src/test/java/org/apache/taverna/workflowmodel/processor/dispatch/layers/TestRetry.java,36,,"        assertEquals(0, configuration.get(""maxRetries"").intValue());"
135247,./TargetProjects/incubator-taverna-engine/taverna-workflowmodel-extensions/src/test/java/org/apache/taverna/workflowmodel/processor/dispatch/layers/TestRetry.java,37,,"        assertEquals(1000, configuration.get(""initialDelay"").intValue());"
135248,./TargetProjects/incubator-taverna-engine/taverna-workflowmodel-extensions/src/test/java/org/apache/taverna/workflowmodel/processor/dispatch/layers/TestRetry.java,38,,"        assertEquals(5000, configuration.get(""maxDelay"").intValue());"
135249,./TargetProjects/incubator-taverna-engine/taverna-workflowmodel-extensions/src/test/java/org/apache/taverna/workflowmodel/processor/dispatch/layers/TestRetry.java,39,,"        assertEquals(1.0, configuration.get(""backoffFactor"").doubleValue(), 0.001);"
135250,./TargetProjects/incubator-taverna-engine/taverna-workflowmodel-impl/src/main/java/org/apache/taverna/facade/impl/WorkflowInstanceFacadeImpl.java,528,,"				throw new IllegalStateException(""Can't change state from """
135251,./TargetProjects/incubator-taverna-engine/taverna-workflowmodel-impl/src/main/java/org/apache/taverna/facade/impl/WorkflowInstanceFacadeImpl.java,529,,"						+ state + "" to "" + newState);"
135252,./TargetProjects/incubator-taverna-engine/taverna-workflowmodel-impl/src/main/java/org/apache/taverna/workflowmodel/impl/EditsImpl.java,590,,"	@SuppressWarnings({ ""rawtypes"", ""unchecked"" })"
135253,./TargetProjects/incubator-taverna-engine/taverna-workflowmodel-impl/src/main/java/org/apache/taverna/workflowmodel/impl/EditsImpl.java,590,,"	@SuppressWarnings({ ""rawtypes"", ""unchecked"" })"
135254,./TargetProjects/incubator-taverna-engine/taverna-workflowmodel-impl/src/test/java/org/apache/taverna/workflowmodel/impl/ConfigureActivityEditTest.java,49,,"		String bean = ""bob"";"
135255,./TargetProjects/incubator-taverna-engine/taverna-workflowmodel-impl/src/test/java/org/apache/taverna/workflowmodel/impl/MapProcessorPortsToActivityEditTest.java,57,,"		ProcessorInputPort ip1=edits.createProcessorInputPort(p, ""inputPort1"", 1);"
135256,./TargetProjects/incubator-taverna-engine/taverna-workflowmodel-impl/src/test/java/org/apache/taverna/workflowmodel/impl/MapProcessorPortsToActivityEditTest.java,58,,"		ProcessorInputPort ip2=edits.createProcessorInputPort(p, ""inputPort2"", 1);"
135257,./TargetProjects/incubator-taverna-engine/taverna-workflowmodel-impl/src/test/java/org/apache/taverna/workflowmodel/impl/MapProcessorPortsToActivityEditTest.java,59,,"		ProcessorOutputPort op1 = edits.createProcessorOutputPort(p, ""outputPort1"", 1, 1);"
135258,./TargetProjects/incubator-taverna-engine/taverna-workflowmodel-impl/src/test/java/org/apache/taverna/workflowmodel/impl/MapProcessorPortsToActivityEditTest.java,60,,"		ProcessorOutputPort op2 = edits.createProcessorOutputPort(p, ""outputPort2"", 1, 1);"
135259,./TargetProjects/incubator-taverna-engine/taverna-workflowmodel-impl/src/test/java/org/apache/taverna/workflowmodel/impl/ProcessorHealthReportTest.java,51,,"		report = new VisitReport (DummyKind.getInstance(), ""processor subject"", """", 0, activityReports);"
135260,./TargetProjects/incubator-taverna-language/taverna-databundle/src/test/java/org/apache/taverna/databundle/TestDataBundles.java,147,,"		Path list = DataBundles.getPort(inputs, ""in1"");"
135261,./TargetProjects/incubator-taverna-language/taverna-databundle/src/test/java/org/apache/taverna/databundle/TestDataBundles.java,156,,"		DataBundles.setError(portIn1, ""Something did not work"", ""A very\n long\n error\n trace"");		"
135262,./TargetProjects/incubator-taverna-language/taverna-databundle/src/test/java/org/apache/taverna/databundle/TestDataBundles.java,156,,"		DataBundles.setError(portIn1, ""Something did not work"", ""A very\n long\n error\n trace"");		"
135263,./TargetProjects/incubator-taverna-language/taverna-databundle/src/test/java/org/apache/taverna/databundle/TestDataBundles.java,173,,"		Path portIn2 = DataBundles.getPort(inputs, ""in2"");"
135264,./TargetProjects/incubator-taverna-language/taverna-databundle/src/test/java/org/apache/taverna/databundle/TestDataBundles.java,207,,"			DataBundles.setStringValue(item, ""test"" + i);"
135265,./TargetProjects/incubator-taverna-language/taverna-databundle/src/test/java/org/apache/taverna/databundle/TestDataBundles.java,211,,"		assertEquals(""test0"", DataBundles.getStringValue(paths.get(0)));"
135266,./TargetProjects/incubator-taverna-language/taverna-databundle/src/test/java/org/apache/taverna/databundle/TestDataBundles.java,304,,"        Path ref = DataBundles.setReference(item, URI.create(""http://example.com/""));"
135267,./TargetProjects/incubator-taverna-language/taverna-databundle/src/test/java/org/apache/taverna/databundle/TestDataBundles.java,442,,"				""Hello"");"
135268,./TargetProjects/incubator-taverna-language/taverna-databundle/src/test/java/org/apache/taverna/databundle/TestDataBundles.java,542,,"		Path tmpFile = Files.createTempFile(""test"", "".txt"");"
135269,./TargetProjects/incubator-taverna-language/taverna-databundle/src/test/java/org/apache/taverna/databundle/TestDataBundles.java,544,,"		assertEquals(""file"", fileRef.getScheme());"
135270,./TargetProjects/incubator-taverna-language/taverna-databundle/src/test/java/org/apache/taverna/databundle/TestDataBundles.java,548,,"		DataBundles.setError(DataBundles.getListItem(list,  4), ""Example error"", ""1. Tried it\n2. Didn't work"");"
135271,./TargetProjects/incubator-taverna-language/taverna-databundle/src/test/java/org/apache/taverna/databundle/TestDataBundles.java,548,,"		DataBundles.setError(DataBundles.getListItem(list,  4), ""Example error"", ""1. Tried it\n2. Didn't work"");"
135272,./TargetProjects/incubator-taverna-language/taverna-robundle/src/main/java/org/apache/taverna/robundle/manifest/combine/CombineManifest.java,176,,"				+ ""		{ ?agent foaf:mbox ?mbox } \n"" + ""	UNION  \n"""
135273,./TargetProjects/incubator-taverna-language/taverna-robundle/src/test/java/org/apache/taverna/robundle/TestBundles.java,66,,"		byte[] expected = (""mimetype"" + MEDIATYPE + ""PK"").getBytes(""ASCII"");"
135274,./TargetProjects/incubator-taverna-language/taverna-robundle/src/test/java/org/apache/taverna/robundle/TestBundles.java,66,,"		byte[] expected = (""mimetype"" + MEDIATYPE + ""PK"").getBytes(""ASCII"");"
135275,./TargetProjects/incubator-taverna-language/taverna-robundle/src/test/java/org/apache/taverna/robundle/TestBundles.java,90,,"		Path path = Files.createTempFile(""bundle"", "".zip"");"
135276,./TargetProjects/incubator-taverna-language/taverna-robundle/src/test/java/org/apache/taverna/robundle/TestBundles.java,124,,"		Path destination = Files.createTempFile(""test"", "".zip"");"
135277,./TargetProjects/incubator-taverna-language/taverna-robundle/src/test/java/org/apache/taverna/robundle/TestBundles.java,159,,"		String mimetype = ""application/x-test"";"
135278,./TargetProjects/incubator-taverna-language/taverna-robundle/src/test/java/org/apache/taverna/robundle/TestBundles.java,322,,"			Bundles.setReference(hello, URI.create(""http://example.org/test""));"
135279,./TargetProjects/incubator-taverna-language/taverna-robundle/src/test/java/org/apache/taverna/robundle/TestBundles.java,483,,"			Bundles.setStringValue(bundle.getRoot().resolve(""file.txt""),"
135280,./TargetProjects/incubator-taverna-language/taverna-robundle/src/test/java/org/apache/taverna/robundle/fs/MemoryEfficiencyIT.java,117,,"		System.out.println(""ZIP: "" + zipSize / MiB + "" MiB"");"
135281,./TargetProjects/incubator-taverna-language/taverna-robundle/src/test/java/org/apache/taverna/robundle/fs/TestBundleFileSystem.java,52,,"		Path x = Files.createTempFile(""temp"", "".zip"");"
135282,./TargetProjects/incubator-taverna-language/taverna-robundle/src/test/java/org/apache/taverna/robundle/fs/TestBundleFileSystem.java,52,,"		Path x = Files.createTempFile(""temp"", "".zip"");"
135283,./TargetProjects/incubator-taverna-language/taverna-robundle/src/test/java/org/apache/taverna/robundle/fs/TestBundleFileSystem.java,77,,"		Path folder = fs.getPath(""folder"");"
135284,./TargetProjects/incubator-taverna-language/taverna-robundle/src/test/java/org/apache/taverna/robundle/fs/TestBundlePaths.java,37,,"		Path barBazAbs = root.resolve(""bar/baz"");"
135285,./TargetProjects/incubator-taverna-language/taverna-robundle/src/test/java/org/apache/taverna/robundle/fs/TestFileSystemProvider.java,89,,"		Path path = Files.createTempFile(""test"", ""zip"");"
135286,./TargetProjects/incubator-taverna-language/taverna-robundle/src/test/java/org/apache/taverna/robundle/fs/TestFileSystemProvider.java,95,,"		URI w = new URI(""app"", path.toUri().toASCIIString(), null);"
135287,./TargetProjects/incubator-taverna-language/taverna-robundle/src/test/java/org/apache/taverna/robundle/fs/TestFileSystemProvider.java,178,,"		BundleFileSystemProvider.createBundleAsZip(path, ""application/x-test"");"
135288,./TargetProjects/incubator-taverna-language/taverna-robundle/src/test/java/org/apache/taverna/robundle/fs/TestFileSystemProvider.java,187,,"							f.getRootDirectory().resolve(""mimetype""),"
135289,./TargetProjects/incubator-taverna-language/taverna-robundle/src/test/java/org/apache/taverna/robundle/fs/TestFileSystemProvider.java,188,,"							Charset.forName(""ASCII"")).get(0));"
135290,./TargetProjects/incubator-taverna-language/taverna-robundle/src/test/java/org/apache/taverna/robundle/fs/TestFileSystemProvider.java,236,,"		env.put(""mimetype"", ""application/x-test2"");"
135291,./TargetProjects/incubator-taverna-language/taverna-robundle/src/test/java/org/apache/taverna/robundle/fs/TestZipFS.java,59,,"		Path test = fs.getPath(""test.txt"");"
135292,./TargetProjects/incubator-taverna-language/taverna-robundle/src/test/java/org/apache/taverna/robundle/manifest/TestManifest.java,227,,"		assertNotNull(manifest.getAggregation(r.resolve(""/README.txt"")));"
135293,./TargetProjects/incubator-taverna-language/taverna-robundle/src/test/java/org/apache/taverna/robundle/manifest/TestManifestJSON.java,178,,"					.create(""urn:uuid:d67466b4-3aeb-4855-8203-90febe71abdf""));"
135294,./TargetProjects/incubator-taverna-language/taverna-robundle/src/test/java/org/apache/taverna/robundle/manifest/TestManifestJSON.java,245,,"		assertEquals(""http://example.com/foaf#alice"", createdBy.get(""uri"")"
135295,./TargetProjects/incubator-taverna-language/taverna-robundle/src/test/java/org/apache/taverna/robundle/manifest/TestRDFToManifest.java,155,,"			PathAnnotation ann1 = manifest.getAnnotation(URI.create(""urn:uuid:d67466b4-3aeb-4855-8203-90febe71abdf"")).get();"
135296,./TargetProjects/incubator-taverna-language/taverna-robundle/src/test/java/org/apache/taverna/robundle/manifest/combine/TestCombineManifest.java,54,,"			Path manifestXml = bundle.getRoot().resolve(""manifest.xml"");"
135297,./TargetProjects/incubator-taverna-language/taverna-robundle/src/test/java/org/apache/taverna/robundle/manifest/combine/TestCombineManifest.java,55,,"			assertTrue(""manifest.xml not listed in "" + manifest.getManifest(),"
135298,./TargetProjects/incubator-taverna-language/taverna-robundle/src/test/java/org/apache/taverna/robundle/manifest/combine/TestCombineManifest.java,80,,"		Path file = Files.createTempFile(""Boris"", "".omex"");"
135299,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/main/java/org/apache/taverna/scufl2/api/common/AbstractCloneable.java,51,,"		@SuppressWarnings({ ""rawtypes"", ""unchecked"" })"
135300,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/main/java/org/apache/taverna/scufl2/api/common/Scufl2Tools.java,173,,"	@SuppressWarnings(""unchecked"")"
135301,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/main/java/org/apache/taverna/scufl2/api/common/Scufl2Tools.java,758,,"			throw new IllegalStateException(""Processor "" + processor + "" has no parent"");"
135302,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/main/java/org/apache/taverna/scufl2/api/io/WorkflowBundleIO.java,381,,"				connection.addRequestProperty(""Accept"", ""*/*;q=0.1"");"
135303,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/main/java/org/apache/taverna/scufl2/validation/correctness/CorrectnessVisitor.java,477,,"					listener.outOfScopeValue(bean, ""boundProcessorPort"","
135304,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/main/java/org/apache/taverna/scufl2/validation/correctness/CorrectnessVisitor.java,486,,"					listener.outOfScopeValue(bean, ""boundActivityPort"","
135305,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/test/java/org/apache/taverna/scufl2/api/ExampleWorkflow.java,84,,"		Configuration configuration = new Configuration(""Hello"");"
135306,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/test/java/org/apache/taverna/scufl2/api/common/TestAbstractCloneable.java,82,,"		assertNotSame(original.getProcessors().getByName(""Hello""), clone"
135307,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/test/java/org/apache/taverna/scufl2/api/common/TestAbstractNamed.java,42,,"		Processor fish = new Processor(wf, ""fish"");"
135308,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/test/java/org/apache/taverna/scufl2/api/common/TestAbstractNamed.java,44,,"		Processor soup = new Processor(wf, ""soup"");"
135309,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/test/java/org/apache/taverna/scufl2/api/common/TestScufl2Tools.java,127,,"				.getByName(""Hello"");"
135310,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/test/java/org/apache/taverna/scufl2/api/common/TestScufl2Tools.java,213,,"		new InputActivityPort(a, ""in1"");"
135311,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/test/java/org/apache/taverna/scufl2/api/common/TestScufl2Tools.java,214,,"		new InputActivityPort(a, ""in2"").setDepth(1);		"
135312,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/test/java/org/apache/taverna/scufl2/api/common/TestScufl2Tools.java,215,,"		new OutputActivityPort(a, ""out1"");"
135313,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/test/java/org/apache/taverna/scufl2/api/common/TestScufl2Tools.java,216,,"		new OutputActivityPort(a, ""out2"").setDepth(0);		"
135314,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/test/java/org/apache/taverna/scufl2/api/common/TestScufl2Tools.java,217,,"		OutputActivityPort aOut3 = new OutputActivityPort(a, ""out3"");"
135315,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/test/java/org/apache/taverna/scufl2/api/common/TestScufl2Tools.java,418,,"		new InputActivityPort(a, ""other"");"
135316,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/test/java/org/apache/taverna/scufl2/api/common/TestURIToolsBeans.java,68,,"		assertEquals(BUNDLE_URI + ""profile/tavernaWorkbench/"""
135317,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/test/java/org/apache/taverna/scufl2/api/common/TestURIToolsBeans.java,95,,"				.getByName(""Hello"");"
135318,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/test/java/org/apache/taverna/scufl2/api/common/TestURIToolsResolve.java,100,,"		Configuration config = wfBundle.getMainProfile().getConfigurations().getByName(""Hello"");"
135319,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/test/java/org/apache/taverna/scufl2/api/io/TestWorkflowBundleIO.java,52,,"	private static final String UTF_8 = ""utf-8"";"
135320,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/test/java/org/apache/taverna/scufl2/api/io/TestWorkflowBundleIO.java,135,,"					return ""test/test"";"
135321,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/test/java/org/apache/taverna/scufl2/api/io/TestWorkflowBundleIO.java,188,,"		assertEquals(""HelloWorld"", wfBundle.getName());"
135322,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/test/java/org/apache/taverna/scufl2/api/io/TestWorkflowBundleIO.java,257,,"				return Collections.singleton(""application/vnd.example.myOwn"");"
135323,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/test/java/org/apache/taverna/scufl2/validation/correctness/TestAbstractDepthPort.java,44,,"		iap.setName(""fred"");"
135324,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/test/java/org/apache/taverna/scufl2/validation/correctness/TestAbstractDepthPort.java,57,,"			assertEquals(problem.getFieldName(), ""depth"");"
135325,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/test/java/org/apache/taverna/scufl2/validation/correctness/TestAbstractGranularDepthPort.java,45,,"		oap.setName(""fred"");"
135326,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/test/java/org/apache/taverna/scufl2/validation/correctness/TestAbstractGranularDepthPort.java,58,,"			assertEquals(problem.getFieldName(), ""granularDepth"");"
135327,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/test/java/org/apache/taverna/scufl2/validation/correctness/TestConfiguration.java,58,,"			tavernaUri = new URI(""http://www.taverna.org.uk"");"
135328,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/test/java/org/apache/taverna/scufl2/validation/correctness/TestPortNode.java,70,,"			assertEquals(problem.getFieldName(), ""desiredDepth"");"
135329,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/test/java/org/apache/taverna/scufl2/validation/correctness/TestProcessorBinding.java,78,,"			if (nlp.getBean().equals(pb) && nlp.getFieldName().equals(""boundProcessor"")) {"
135330,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/test/java/org/apache/taverna/scufl2/validation/correctness/TestProcessorBinding.java,133,,"			if (nlp.getBean().equals(pb) && nlp.getFieldName().equals(""boundActivity"")) {"
135331,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/test/java/org/apache/taverna/scufl2/validation/correctness/TestProcessorInputPortBinding.java,70,,"			if (nlp.getBean().equals(pipb) && nlp.getFieldName().equals(""boundProcessorPort"")) {"
135332,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/test/java/org/apache/taverna/scufl2/validation/correctness/TestProcessorInputPortBinding.java,125,,"			if (nlp.getBean().equals(pipb) && nlp.getFieldName().equals(""boundActivityPort"")) {"
135333,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/test/java/org/apache/taverna/scufl2/validation/correctness/TestProcessorOutputPortBinding.java,70,,"			if (nlp.getBean().equals(pipb) && nlp.getFieldName().equals(""boundProcessorPort"")) {"
135334,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/test/java/org/apache/taverna/scufl2/validation/correctness/TestProcessorOutputPortBinding.java,125,,"			if (nlp.getBean().equals(pipb) && nlp.getFieldName().equals(""boundActivityPort"")) {"
135335,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/test/java/org/apache/taverna/scufl2/validation/correctness/TestRoot.java,76,,"			if (nlp.getBean().equals(wb) && nlp.getFieldName().equals(""globalBaseURI"")) {"
135336,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/test/java/org/apache/taverna/scufl2/validation/correctness/TestTyped.java,76,,"			if (nlp.getBean().equals(a) && nlp.getFieldName().equals(""configurableType"")) {"
135337,./TargetProjects/incubator-taverna-language/taverna-scufl2-api/src/test/java/org/apache/taverna/scufl2/validation/correctness/TestWorkflow.java,103,,"			if (nlp.getBean().equals(dw) && nlp.getFieldName().equals(""workflowIdentifier"")) {"
135338,./TargetProjects/incubator-taverna-language/taverna-scufl2-cwl/src/main/java/org/apache/taverna/scufl2/cwl/Converter.java,112,,"            node.put(name, ""string"");  // TODO: Put the correct input type and not just string"
135339,./TargetProjects/incubator-taverna-language/taverna-scufl2-examples/src/test/java/org/apache/taverna/examples/TestJsonExport.java,37,,"        File tmp = File.createTempFile(""helloanyone"", "".t2flow"");"
135340,./TargetProjects/incubator-taverna-language/taverna-scufl2-t2flow/src/main/java/org/apache/taverna/scufl2/translator/t2flow/T2FlowParser.java,263,,"						+ "" in "" + processorName);"
135341,./TargetProjects/incubator-taverna-language/taverna-scufl2-t2flow/src/main/java/org/apache/taverna/scufl2/translator/t2flow/defaultactivities/AbstractActivityParser.java,116,,"		outputPort.setName(getPortElement(portBean, ""name"", String.class));"
135342,./TargetProjects/incubator-taverna-language/taverna-scufl2-t2flow/src/main/java/org/apache/taverna/scufl2/translator/t2flow/defaultactivities/AbstractActivityParser.java,119,,"		BigInteger depth = getPortElement(portBean, ""depth"", BigInteger.class);"
135343,./TargetProjects/incubator-taverna-language/taverna-scufl2-t2flow/src/main/java/org/apache/taverna/scufl2/translator/t2flow/t23activities/ExternalToolActivityParser.java,56,,"	@SuppressWarnings(""unused"")"
135344,./TargetProjects/incubator-taverna-language/taverna-scufl2-t2flow/src/main/java/org/apache/taverna/scufl2/translator/t2flow/t23activities/RESTActivityParser.java,109,,"			    accept.put(""header"", ""Accept"");"
135345,./TargetProjects/incubator-taverna-language/taverna-scufl2-t2flow/src/main/java/org/apache/taverna/scufl2/translator/t2flow/t23activities/RESTActivityParser.java,110,,"			    accept.put(""value"", restConfig.getAcceptsHeaderValue());"
135346,./TargetProjects/incubator-taverna-language/taverna-scufl2-t2flow/src/test/java/org/apache/taverna/scufl2/translator/t2flow/MergeParsingTest.java,44,,"		assertNotNull(""Could not find workflow "" + MERGE_FUN, wfResource);"
135347,./TargetProjects/incubator-taverna-language/taverna-scufl2-t2flow/src/test/java/org/apache/taverna/scufl2/translator/t2flow/TestAnnotationParsing.java,61,,"		assertNotNull(""Could not find workflow "" + WF_ANNOTATED, wfResource);"
135348,./TargetProjects/incubator-taverna-language/taverna-scufl2-t2flow/src/test/java/org/apache/taverna/scufl2/translator/t2flow/TestDispatchLayerParsing.java,84,,"		Processor parallelise = processors.getByName(""retries"");"
135349,./TargetProjects/incubator-taverna-language/taverna-scufl2-ucfpackage/src/main/java/org/apache/taverna/scufl2/ucfpackage/UCFPackage.java,211,,"			@SuppressWarnings(""rawtypes"")"
135350,./TargetProjects/incubator-taverna-language/taverna-scufl2-ucfpackage/src/main/java/org/apache/taverna/scufl2/ucfpackage/UCFPackage.java,259,,"			throw new IOException(""Could not add "" + path, e);"
135351,./TargetProjects/incubator-taverna-language/taverna-scufl2-ucfpackage/src/main/java/org/apache/taverna/scufl2/ucfpackage/impl/odfdom/pkg/OdfPackage.java,363,,"							out.size(), ""UTF-8"");"
135352,./TargetProjects/incubator-taverna-language/taverna-scufl2-ucfpackage/src/test/java/org/apache/taverna/scufl2/ucfpackage/TestUCFPackage.java,65,,"	private static final Namespace MANIFEST_NS = Namespace.getNamespace(""manifest"", "
135353,./TargetProjects/incubator-taverna-language/taverna-scufl2-ucfpackage/src/test/java/org/apache/taverna/scufl2/ucfpackage/TestUCFPackage.java,138,,"		assertEquals(""First zip entry is not 'mimetype'"", ""mimetype"","
135354,./TargetProjects/incubator-taverna-language/taverna-scufl2-ucfpackage/src/test/java/org/apache/taverna/scufl2/ucfpackage/TestUCFPackage.java,195,,"				.addResource(""Hello there þĸł"", ""helloworld.txt"", ""text/plain"");"
135355,./TargetProjects/incubator-taverna-language/taverna-scufl2-ucfpackage/src/test/java/org/apache/taverna/scufl2/ucfpackage/TestUCFPackage.java,195,,"				.addResource(""Hello there þĸł"", ""helloworld.txt"", ""text/plain"");"
135356,./TargetProjects/incubator-taverna-language/taverna-scufl2-ucfpackage/src/test/java/org/apache/taverna/scufl2/ucfpackage/TestUCFPackage.java,195,,"				.addResource(""Hello there þĸł"", ""helloworld.txt"", ""text/plain"");"
135357,./TargetProjects/incubator-taverna-language/taverna-scufl2-ucfpackage/src/test/java/org/apache/taverna/scufl2/ucfpackage/TestUCFPackage.java,244,,"		container.addResource(""Hello again"", ""again.txt"", ""text/plain"");"
135358,./TargetProjects/incubator-taverna-language/taverna-scufl2-ucfpackage/src/test/java/org/apache/taverna/scufl2/ucfpackage/TestUCFPackage.java,278,,"		container.addResource(bytes, ""randomBytes"", ""application/octet-stream"");"
135359,./TargetProjects/incubator-taverna-language/taverna-scufl2-ucfpackage/src/test/java/org/apache/taverna/scufl2/ucfpackage/TestUCFPackage.java,278,,"		container.addResource(bytes, ""randomBytes"", ""application/octet-stream"");"
135360,./TargetProjects/incubator-taverna-language/taverna-scufl2-ucfpackage/src/test/java/org/apache/taverna/scufl2/ucfpackage/TestUCFPackage.java,369,,"		container.addResource(""Hello there"", ""helloworld.txt"", ""text/plain"");"
135361,./TargetProjects/incubator-taverna-language/taverna-scufl2-ucfpackage/src/test/java/org/apache/taverna/scufl2/ucfpackage/TestUCFPackage.java,372,,"		container.addResource(""Soup for everyone"", ""soup.txt"", ""text/plain"");"
135362,./TargetProjects/incubator-taverna-language/taverna-scufl2-ucfpackage/src/test/java/org/apache/taverna/scufl2/ucfpackage/TestUCFPackage.java,372,,"		container.addResource(""Soup for everyone"", ""soup.txt"", ""text/plain"");"
135363,./TargetProjects/incubator-taverna-language/taverna-scufl2-ucfpackage/src/test/java/org/apache/taverna/scufl2/ucfpackage/TestUCFPackage.java,375,,"		container.addResource(""<html><body><h1>Yo</h1></body></html>"","
135364,./TargetProjects/incubator-taverna-language/taverna-scufl2-ucfpackage/src/test/java/org/apache/taverna/scufl2/ucfpackage/TestUCFPackage.java,376,,"				""soup.html"", ""text/html"");"
135365,./TargetProjects/incubator-taverna-language/taverna-scufl2-ucfpackage/src/test/java/org/apache/taverna/scufl2/ucfpackage/TestUCFPackage.java,376,,"				""soup.html"", ""text/html"");"
135366,./TargetProjects/incubator-taverna-language/taverna-scufl2-ucfpackage/src/test/java/org/apache/taverna/scufl2/ucfpackage/TestUCFPackage.java,379,,"		container.addResource(""Sub-folder entry 1"", ""sub/1.txt"", ""text/plain"");"
135367,./TargetProjects/incubator-taverna-language/taverna-scufl2-ucfpackage/src/test/java/org/apache/taverna/scufl2/ucfpackage/TestUCFPackage.java,379,,"		container.addResource(""Sub-folder entry 1"", ""sub/1.txt"", ""text/plain"");"
135368,./TargetProjects/incubator-taverna-language/taverna-scufl2-ucfpackage/src/test/java/org/apache/taverna/scufl2/ucfpackage/TestUCFPackage.java,380,,"		container.addResource(""Sub-folder entry 2"", ""sub/2.txt"", ""text/plain"");"
135369,./TargetProjects/incubator-taverna-language/taverna-scufl2-ucfpackage/src/test/java/org/apache/taverna/scufl2/ucfpackage/TestUCFPackage.java,380,,"		container.addResource(""Sub-folder entry 2"", ""sub/2.txt"", ""text/plain"");"
135370,./TargetProjects/incubator-taverna-language/taverna-scufl2-ucfpackage/src/test/java/org/apache/taverna/scufl2/ucfpackage/TestUCFPackage.java,381,,"		container.addResource(""Sub-folder entry 2"", ""sub/3/woho.txt"","
135371,./TargetProjects/incubator-taverna-language/taverna-scufl2-ucfpackage/src/test/java/org/apache/taverna/scufl2/ucfpackage/TestUCFPackage.java,387,,"		expectedFiles.add(""sub/"");"
135372,./TargetProjects/incubator-taverna-language/taverna-scufl2-ucfpackage/src/test/java/org/apache/taverna/scufl2/ucfpackage/TestUCFPackage.java,638,,"		ZipEntry manifestEntry = zipFile.getEntry(""META-INF/container.xml"");		"
135373,./TargetProjects/incubator-taverna-language/taverna-scufl2-ucfpackage/src/test/java/org/apache/taverna/scufl2/ucfpackage/TestUCFPackage.java,726,,"		assertEquals(""ex:example"", first.getQualifiedName());"
135374,./TargetProjects/incubator-taverna-language/taverna-scufl2-ucfpackage/src/test/java/org/apache/taverna/scufl2/ucfpackage/TestUCFPackage.java,748,,"				""helloworld.html"", ""text/html"");"
135375,./TargetProjects/incubator-taverna-language/taverna-scufl2-wfbundle/src/test/java/org/apache/taverna/scufl2/rdfxml/TestProfileParser.java,64,,"		Activity helloScript = profile.getActivities().getByName(""HelloScript"");"
135376,./TargetProjects/incubator-taverna-language/taverna-scufl2-wfbundle/src/test/java/org/apache/taverna/scufl2/rdfxml/TestProfileParser.java,87,,"		Configuration hello = profile.getConfigurations().getByName(""Hello"");"
135377,./TargetProjects/incubator-taverna-language/taverna-scufl2-wfbundle/src/test/java/org/apache/taverna/scufl2/rdfxml/TestRDFXMLReader.java,65,,"		assertEquals(""HelloWorld"", workflowBundle.getName());"
135378,./TargetProjects/incubator-taverna-language/taverna-scufl2-wfbundle/src/test/java/org/apache/taverna/scufl2/rdfxml/TestRDFXMLReader.java,81,,"				.getByName(""Hello"");"
135379,./TargetProjects/incubator-taverna-language/taverna-scufl2-wfbundle/src/test/java/org/apache/taverna/scufl2/rdfxml/TestRDFXMLReader.java,89,,"		assertEquals(hello.getInputPorts().getByName(""name""),"
135380,./TargetProjects/incubator-taverna-language/taverna-scufl2-wfbundle/src/test/java/org/apache/taverna/scufl2/rdfxml/TestRDFXMLReader.java,116,,"		assertEquals(""greeting"", hello.getOutputPorts().getByName(""greeting"")"
135381,./TargetProjects/incubator-taverna-language/taverna-scufl2-wfbundle/src/test/java/org/apache/taverna/scufl2/rdfxml/TestRDFXMLSerializer.java,101,,"		assertXpathEquals("""", profile, ""./@rdf:about"");"
135382,./TargetProjects/incubator-taverna-language/taverna-scufl2-wfbundle/src/test/java/org/apache/taverna/scufl2/rdfxml/TestRDFXMLSerializer.java,102,,"		assertXpathEquals(isWorkbench ? ""tavernaWorkbench"" : ""tavernaServer"", profile, ""./s:name"");"
135383,./TargetProjects/incubator-taverna-language/taverna-scufl2-wfbundle/src/test/java/org/apache/taverna/scufl2/rdfxml/TestRDFXMLSerializer.java,115,,"		assertXpathEquals(""http://www.w3.org/2001/XMLSchema#integer"", activity, ""./s:inputActivityPort/s:InputActivityPort/s:portDepth/@rdf:datatype"");"
135384,./TargetProjects/incubator-taverna-language/taverna-scufl2-wfbundle/src/test/java/org/apache/taverna/scufl2/rdfxml/TestRDFXMLSerializer.java,228,,"		assertXpathEquals(""in/yourName"","
135385,./TargetProjects/incubator-taverna-language/taverna-scufl2-wfbundle/src/test/java/org/apache/taverna/scufl2/rdfxml/TestRDFXMLSerializer.java,238,,"		assertXpathEquals(""out/results"","
135386,./TargetProjects/incubator-taverna-language/taverna-scufl2-wfbundle/src/test/java/org/apache/taverna/scufl2/rdfxml/TestResourcesInZip.java,58,,"		resources.addResource(""Hello there"", ""hello.txt"", ""text/plain"");"
135387,./TargetProjects/incubator-taverna-language/taverna-scufl2-wfbundle/src/test/java/org/apache/taverna/scufl2/rdfxml/TestResourcesInZip.java,58,,"		resources.addResource(""Hello there"", ""hello.txt"", ""text/plain"");"
135388,./TargetProjects/incubator-taverna-language/taverna-scufl2-wfdesc/src/main/java/org/apache/taverna/scufl2/wfdesc/WfdescAgent.java,75,,"			System.out.print( binding.path(""ro"").path(""value"").asText());"
135389,./TargetProjects/incubator-taverna-language/taverna-tavlang-tool/src/main/java/org/apache/taverna/tavlang/CommandLineTool.java,121,,"				System.out.println(""Invalid argument...."");"
135390,./TargetProjects/incubator-taverna-language/taverna-tavlang-tool/src/main/java/org/apache/taverna/tavlang/CommandLineTool.java,122,,"				TvnLangTool command = parser().parse(""help"", ""convert"");"
135391,./TargetProjects/incubator-taverna-language/taverna-tavlang-tool/src/main/java/org/apache/taverna/tavlang/tools/inspect/ProcessorNames.java,74,,"					System.out.println(""Processor tree of ""+ f.getName() +"" \n"" +this.showProcessorTree(wfb));"
135392,./TargetProjects/incubator-taverna-language/taverna-tavlang-tool/src/main/java/org/apache/taverna/tavlang/tools/inspect/ProcessorNames.java,74,,"					System.out.println(""Processor tree of ""+ f.getName() +"" \n"" +this.showProcessorTree(wfb));"
135393,./TargetProjects/incubator-taverna-language/taverna-tavlang-tool/src/main/java/org/apache/taverna/tavlang/tools/inspect/ServiceTypes.java,66,,"				System.out.println(""Service types used in "" + f.getCanonicalPath() + "" :"" +""\n"");"
135394,./TargetProjects/incubator-taverna-language/taverna-tavlang-tool/src/main/java/org/apache/taverna/tavlang/tools/inspect/ServiceTypes.java,77,,"				System.out.println(""\n**************************************************\n"");"
135395,./TargetProjects/incubator-taverna-language/taverna-tavlang-tool/src/main/java/org/apache/taverna/tavlang/tools/stats/GetWfStat.java,98,,"						this.str_verb.append(""  |          |--> "" + p.getName() + ""\n"");"
135396,./TargetProjects/incubator-taverna-language/taverna-tavlang-tool/src/test/java/org/apache/taverna/tavlang/test/CommandLineTest.java,34,,"		commandLineTool.parse(""help"");"
135397,./TargetProjects/incubator-taverna-mobile/app/src/androidTest/java/org/apache/taverna/mobile/login/LoginActivityTest.java,126,,"                withText(""Please enter valid credential"")))"
135398,./TargetProjects/incubator-taverna-mobile/app/src/main/java/org/apache/taverna/mobile/ui/favouriteworkflowdetail/FavouriteWorkflowDetailPresenter.java,103,,"                        getMvpView().showErrorSnackBar(""Something went wrong please try after "" +"
135399,./TargetProjects/incubator-taverna-mobile/app/src/main/java/org/apache/taverna/mobile/ui/favouriteworkflowdetail/FavouriteWorkflowDetailPresenter.java,104,,"                                ""sometime"");"
135400,./TargetProjects/incubator-taverna-mobile/app/src/main/java/org/apache/taverna/mobile/ui/workflowdetail/WorkflowDetailPresenter.java,101,,"                        getMvpView().showErrorSnackBar(""Something went wrong please try after "" +"
135401,./TargetProjects/incubator-taverna-mobile/app/src/main/java/org/apache/taverna/mobile/ui/workflowdetail/WorkflowDetailPresenter.java,102,,"                                ""sometime"");"
135402,./TargetProjects/incubator-taverna-mobile/app/src/main/java/org/apache/taverna/mobile/ui/workflowdetail/WorkflowDetailPresenter.java,194,,"        option.put(""elements"", ""id,title,type,uploader,preview,created-at,svg,updated-at,"" +"
135403,./TargetProjects/incubator-taverna-osgi/taverna-configuration-api/src/test/java/org/apache/taverna/configuration/AbstractConfigurableTest.java,97,,"		assertEquals(""Should be blue"",""blue"",dummyConfigurable.getProperty(""colour""));"
135404,./TargetProjects/incubator-taverna-osgi/taverna-configuration-api/src/test/java/org/apache/taverna/configuration/AbstractConfigurableTest.java,97,,"		assertEquals(""Should be blue"",""blue"",dummyConfigurable.getProperty(""colour""));"
135405,./TargetProjects/incubator-taverna-osgi/taverna-configuration-api/src/test/java/org/apache/taverna/configuration/AbstractConfigurableTest.java,98,,"		assertNull(""Should be null"",dummyConfigurable.getProperty(""new""));"
135406,./TargetProjects/incubator-taverna-osgi/taverna-configuration-api/src/test/java/org/apache/taverna/configuration/AbstractConfigurableTest.java,98,,"		assertNull(""Should be null"",dummyConfigurable.getProperty(""new""));"
135407,./TargetProjects/incubator-taverna-osgi/taverna-configuration-api/src/test/java/org/apache/taverna/configuration/AbstractConfigurableTest.java,101,,"		dummyConfigurable.setProperty(""new"", ""new value"");"
135408,./TargetProjects/incubator-taverna-osgi/taverna-configuration-api/src/test/java/org/apache/taverna/configuration/AbstractConfigurableTest.java,160,,"		c.setPropertyStringList(""list"", new ArrayList<String>());"
135409,./TargetProjects/incubator-taverna-osgi/taverna-configuration-api/src/test/java/org/apache/taverna/configuration/AbstractConfigurableTest.java,183,,"		c.setProperty(""list"", ""a,b,c"");"
135410,./TargetProjects/incubator-taverna-osgi/taverna-configuration-impl/src/main/java/org/apache/taverna/configuration/proxy/impl/HttpProxyConfigurationImpl.java,96,,"		logger.info(PROXY_HOST + "" is "" + System.getProperty(PROXY_HOST));"
135411,./TargetProjects/incubator-taverna-osgi/taverna-configuration-impl/src/test/java/org/apache/taverna/configuration/impl/ConfigurationManagerImplTest.java,112,,"		assertEquals(""name should equal john"", ""john"", conf.getProperty(""name""));"
135412,./TargetProjects/incubator-taverna-osgi/taverna-configuration-impl/src/test/java/org/apache/taverna/configuration/impl/ConfigurationManagerImplTest.java,126,,"		conf.setProperty(""hhh"", ""iii"");"
135413,./TargetProjects/incubator-taverna-osgi/taverna-configuration-impl/src/test/java/org/apache/taverna/configuration/impl/ConfigurationManagerImplTest.java,143,,"		conf.setProperty(""country"", ""france"");"
135414,./TargetProjects/incubator-taverna-osgi/taverna-configuration-impl/src/test/java/org/apache/taverna/configuration/impl/ConfigurationManagerImplTest.java,143,,"		conf.setProperty(""country"", ""france"");"
135415,./TargetProjects/incubator-taverna-osgi/taverna-maven-plugin/src/main/java/org/apache/taverna/mavenplugin/Utils.java,52,,"		File digestFile = new File(file.getPath() + "".md5"");"
135416,./TargetProjects/incubator-taverna-osgi/taverna-plugin-impl/src/test/java/org/apache/taverna/plugin/impl/PluginSiteManagerImplTest.java,69,,"		fail(""Not yet implemented"");"
135417,./TargetProjects/incubator-taverna-osgi/taverna-plugin-impl/src/test/java/org/apache/taverna/plugin/impl/PluginSiteManagerImplTest.java,79,,"		doNothing().when(downloadManager).download(URI.create(""file:///""), null, """");"
135418,./TargetProjects/incubator-taverna-plugin-gis/taverna-gis-activity-ui/src/main/java/org/apache/taverna/gis/ui/serviceprovider/GisServiceProvider.java,61,,"		conf.put(""osgiServiceUri"", ""http://localhost:8080/geoserver/ows"");"
135419,./TargetProjects/incubator-taverna-plugin-gis/taverna-gis-activity/src/test/java/org/apache/taverna/gis/GisActivityFactoryTest.java,52,,"		configuration.put(""exampleString"", ""something"");"
135420,./TargetProjects/incubator-taverna-plugin-gis/taverna-gis-activity/src/test/java/org/apache/taverna/gis/GisActivityFactoryTest.java,53,,"		configuration.put(""exampleUri"", ""http://localhost:8080/myEndPoint"");"
135421,./TargetProjects/incubator-taverna-server/taverna-server-usagerecord/src/main/java/org/apache/taverna/server/usagerecord/xml/urf/Disk.java,47,,"    @XmlAttribute(name = ""description"", namespace = ""http://schema.ogf.org/urf/2003/09/urf"")"
135422,./TargetProjects/incubator-taverna-server/taverna-server-usagerecord/src/main/java/org/apache/taverna/server/usagerecord/xml/urf/Memory.java,47,,"    @XmlAttribute(name = ""description"", namespace = ""http://schema.ogf.org/urf/2003/09/urf"")"
135423,./TargetProjects/incubator-taverna-server/taverna-server-usagerecord/src/main/java/org/apache/taverna/server/usagerecord/xml/urf/Network.java,46,,"    @XmlAttribute(name = ""description"", namespace = ""http://schema.ogf.org/urf/2003/09/urf"")"
135424,./TargetProjects/incubator-taverna-server/taverna-server-usagerecord/src/main/java/org/apache/taverna/server/usagerecord/xml/urf/ObjectFactory.java,42,,"    private final static QName _Usage_QNAME = new QName(""http://schema.ogf.org/urf/2003/09/urf"", ""Usage"");"
135425,./TargetProjects/incubator-taverna-server/taverna-server-usagerecord/src/main/java/org/apache/taverna/server/usagerecord/xml/urf/ObjectFactory.java,42,,"    private final static QName _Usage_QNAME = new QName(""http://schema.ogf.org/urf/2003/09/urf"", ""Usage"");"
135426,./TargetProjects/incubator-taverna-server/taverna-server-usagerecord/src/main/java/org/apache/taverna/server/usagerecord/xml/urf/Swap.java,47,,"    @XmlAttribute(name = ""description"", namespace = ""http://schema.ogf.org/urf/2003/09/urf"")"
135427,./TargetProjects/incubator-taverna-server/taverna-server-usagerecord/src/main/java/org/apache/taverna/server/usagerecord/xml/urf2/ObjectFactory.java,54,,"    private final static QName _Usage_QNAME = new QName(""http://schema.ogf.org/urf/2013/04/urf"", ""Usage"");"
135428,./TargetProjects/incubator-taverna-server/taverna-server-webapp/src/main/java/org/apache/taverna/server/master/RunREST.java,438,,"		return opt(""PUT"");"
135429,./TargetProjects/incubator-taverna-server/taverna-server-webapp/src/main/java/org/apache/taverna/server/master/RunSecurityREST.java,284,,"		return opt(""POST"", ""DELETE"");"
135430,./TargetProjects/incubator-taverna-server/taverna-server-webapp/src/main/java/org/apache/taverna/server/master/admin/AdminBean.java,183,,"		return opt(""PUT"");"
135431,./TargetProjects/incubator-taverna-server/taverna-server-webapp/src/main/java/org/apache/taverna/server/master/identity/UserStore.java,201,,"			@ManagedOperationParameter(name = ""username"", description = ""The username to create.""),"
135432,./TargetProjects/incubator-taverna-server/taverna-server-webapp/src/main/java/org/apache/taverna/server/master/identity/UserStore.java,231,,"			@ManagedOperationParameter(name = ""username"", description = ""The username to adjust.""),"
135433,./TargetProjects/incubator-taverna-server/taverna-server-webapp/src/main/java/org/apache/taverna/server/master/identity/WorkflowInternalAuthProvider.java,242,,"			log.warn(""unexpected failure in authentication"", e);"
135434,./TargetProjects/incubator-taverna-server/taverna-server-webapp/src/main/java/org/apache/taverna/server/master/localworker/AbstractRemoteRunFactory.java,113,,"		if (host != null && host.equals(""none""))"
135435,./TargetProjects/incubator-taverna-server/taverna-server-webapp/src/main/java/org/apache/taverna/server/master/rest/InteractionFeedREST.java,106,,"	@Path(""{id}"")"
135436,./TargetProjects/incubator-taverna-server/taverna-server-webapp/src/main/java/org/apache/taverna/server/master/rest/TavernaServerDirectoryREST.java,88,,"	Response options(@PathParam(""path"") List<PathSegment> path);"
135437,./TargetProjects/incubator-taverna-server/taverna-server-webapp/src/main/java/org/apache/taverna/server/master/rest/handler/EntryHandler.java,58,,"			""atom+xml"", singletonMap(""type"", ""entry""));"
135438,./TargetProjects/incubator-taverna-server/taverna-server-webapp/src/main/java/org/apache/taverna/server/master/soap/TavernaServerSOAP.java,82,,"	@WebResult(name = ""Run"")"
135439,./TargetProjects/incubator-taverna-server/taverna-server-webapp/src/main/java/org/apache/taverna/server/master/soap/TavernaServerSOAP.java,193,,"			@WebParam(name = ""runName"") @XmlElement(required = true) String runName)"
135440,./TargetProjects/incubator-taverna-server/taverna-server-webapp/src/main/java/org/apache/taverna/server/master/soap/TavernaServerSOAP.java,1259,,"			@WebParam(name = ""fileName"") @XmlElement(required = true) DirEntry file)"
135441,./TargetProjects/incubator-taverna-server/taverna-server-webapp/src/main/java/org/apache/taverna/server/master/soap/TavernaServerSOAP.java,1478,,"			@WebParam(name = ""listenerName"") @XmlElement(required = true) String listenerName)"
135442,./TargetProjects/incubator-taverna-server/taverna-server-webapp/src/main/java/org/apache/taverna/server/master/worker/RemoteRunDelegate.java,887,,"			log.warn(""failed to set property"", e);"
135443,./TargetProjects/incubator-taverna-server/taverna-server-webapp/src/main/java/org/apache/taverna/server/master/worker/RunConnection.java,60,,"		@Query(name = ""count"", language = ""SQL"", value = COUNT_QUERY, unique = ""true"", resultClass = Integer.class),"
135444,./TargetProjects/incubator-taverna-server/taverna-server-webapp/src/main/java/org/apache/taverna/server/master/worker/RunConnection.java,60,,"		@Query(name = ""count"", language = ""SQL"", value = COUNT_QUERY, unique = ""true"", resultClass = Integer.class),"
135445,./TargetProjects/incubator-taverna-server/taverna-server-webapp/src/main/java/org/apache/taverna/server/master/worker/RunConnection.java,88,,"	@Column(jdbcType = ""BLOB"", sqlType = ""BLOB"")"
135446,./TargetProjects/incubator-taverna-server/taverna-server-webapp/src/test/java/org/apache/taverna/server/master/TavernaServerImplTest.java,62,,"				return ""bar"";"
135447,./TargetProjects/incubator-taverna-server/taverna-server-webapp/src/test/java/org/apache/taverna/server/master/TavernaServerImplTest.java,73,,"				return ""foo"";"
135448,./TargetProjects/incubator-taverna-server/taverna-server-worker/src/main/java/org/apache/taverna/server/localworker/impl/LocalWorker.java,460,,"				throw new RemoteException(""not initializing"");"
135449,./TargetProjects/incubator-taverna-server/taverna-server-worker/src/main/java/org/apache/taverna/server/localworker/impl/utils/FilenameVerifier.java,36,,"	@SuppressWarnings(""serial"")"
135450,./TargetProjects/incubator-taverna-server/taverna-server-worker/src/main/java/org/apache/taverna/server/localworker/impl/utils/FilenameVerifier.java,116,,"				throw new IOException(""illegal filename"");"
135451,./TargetProjects/incubator-taverna-server/taverna-server-worker/src/test/java/org/apache/taverna/server/localworker/impl/LocalWorkerTest.java,112,,"			events.add(""init["");"
135452,./TargetProjects/incubator-taverna-server/taverna-server-worker/src/test/java/org/apache/taverna/server/localworker/impl/LocalWorkerTest.java,117,,"			events.add(inputBaclava == null ? ""<null>"" : inputBaclava"
135453,./TargetProjects/incubator-taverna-server/taverna-server-worker/src/test/java/org/apache/taverna/server/localworker/impl/LocalWorkerTest.java,137,,"			events.add(""kill"");"
135454,./TargetProjects/incubator-taverna-server/taverna-server-worker/src/test/java/org/apache/taverna/server/localworker/impl/LocalWorkerTest.java,147,,"			events.add(""stop"");"
135455,./TargetProjects/incubator-taverna-server/taverna-server-worker/src/test/java/org/apache/taverna/server/localworker/impl/LocalWorkerTest.java,170,,"		lw = new LocalWorker(""XWC"", ""WF"".getBytes(""UTF-8""), null, randomUUID(),"
135456,./TargetProjects/incubator-taverna-server/taverna-server-worker/src/test/java/org/apache/taverna/server/localworker/impl/LocalWorkerTest.java,245,,"		lw.makeInput(""FOO"").setValue(""BAR"");"
135457,./TargetProjects/incubator-taverna-server/taverna-server-worker/src/test/java/org/apache/taverna/server/localworker/impl/LocalWorkerTest.java,245,,"		lw.makeInput(""FOO"").setValue(""BAR"");"
135458,./TargetProjects/incubator-taverna-server/taverna-server-worker/src/test/java/org/apache/taverna/server/localworker/impl/LocalWorkerTest.java,362,,"		lw.validateFilename(""foobar"");"
135459,./TargetProjects/incubator-taverna-server/taverna-server-worker/src/test/java/org/apache/taverna/server/localworker/impl/LocalWorkerTest.java,363,,"		lw.validateFilename(""foo/bar"");"
135460,./TargetProjects/incubator-taverna-workbench/taverna-activity-palette-impl/src/main/java/org/apache/taverna/workbench/ui/activitypalette/ActivityPaletteConfigurationPanel.java,96,,"					String name = names.get(""name."" + value);"
135461,./TargetProjects/incubator-taverna-workbench/taverna-activity-palette-impl/src/test/java/org/apache/taverna/workbench/ui/activitypalette/ActivityPaletteConfigurationTest.java,61,,"		conf.setPropertyStringList(""list"", new ArrayList<String>());"
135462,./TargetProjects/incubator-taverna-workbench/taverna-activity-palette-impl/src/test/java/org/apache/taverna/workbench/ui/activitypalette/ActivityPaletteConfigurationTest.java,71,,"		list.add(""fred"");"
135463,./TargetProjects/incubator-taverna-workbench/taverna-credential-manager-ui/src/main/java/org/apache/taverna/workbench/ui/credentialmanager/CredentialManagerUI.java,256,,"		setTitle(""Credential Manager"");"
135464,./TargetProjects/incubator-taverna-workbench/taverna-credential-manager-ui/src/main/java/org/apache/taverna/workbench/ui/credentialmanager/CredentialManagerUI.java,435,,"			JButton importKeyPairButton = new JButton(""Import"");"
135465,./TargetProjects/incubator-taverna-workbench/taverna-credential-manager-ui/src/main/java/org/apache/taverna/workbench/ui/credentialmanager/CredentialManagerUI.java,443,,"			final JButton exportKeyPairButton = new JButton(""Export"");"
135466,./TargetProjects/incubator-taverna-workbench/taverna-credential-manager-ui/src/main/java/org/apache/taverna/workbench/ui/credentialmanager/CredentialManagerUI.java,742,,"										+ ""Do you want to overwrite it?"","
135467,./TargetProjects/incubator-taverna-workbench/taverna-credential-manager-ui/src/main/java/org/apache/taverna/workbench/ui/credentialmanager/CredentialManagerUI.java,757,,"							""Credential Manager failed to insert a new username and password pair"","
135468,./TargetProjects/incubator-taverna-workbench/taverna-file-impl/src/main/java/org/apache/taverna/workbench/file/impl/FileManagerImpl.java,131,,"			throw new NullPointerException(""Dataflow can't be null"");"
135469,./TargetProjects/incubator-taverna-workbench/taverna-file-impl/src/main/java/org/apache/taverna/workbench/file/impl/FileManagerImpl.java,410,,"							+ "" from "" + source + "" using "" + handler);"
135470,./TargetProjects/incubator-taverna-workbench/taverna-file-impl/src/test/java/org/apache/taverna/workbench/file/impl/FileManagerTest.java,79,,"		assertEquals(""Unexpected list of open dataflows"", Arrays"
135471,./TargetProjects/incubator-taverna-workbench/taverna-file-impl/src/test/java/org/apache/taverna/workbench/file/impl/FileManagerTest.java,113,,"		File dataflowFile = File.createTempFile(""test"", "".t2flow"");"
135472,./TargetProjects/incubator-taverna-workbench/taverna-file-impl/src/test/java/org/apache/taverna/workbench/file/impl/FileManagerTest.java,113,,"		File dataflowFile = File.createTempFile(""test"", "".t2flow"");"
135473,./TargetProjects/incubator-taverna-workbench/taverna-file-impl/src/test/java/org/apache/taverna/workbench/file/impl/FileManagerTest.java,207,,"		assertEquals(""ModelMapObserver contained unexpected messages"", 2,"
135474,./TargetProjects/incubator-taverna-workbench/taverna-graph-model/src/main/java/org/apache/taverna/workbench/models/graph/svg/SVGGraph.java,275,,"								""translate("" + position.x + "" "" + position.y"
135475,./TargetProjects/incubator-taverna-workbench/taverna-graph-model/src/main/java/org/apache/taverna/workbench/models/graph/svg/SVGGraphController.java,467,,"		edgeLine.line.setAttribute(""visibility"", ""hidden"");"
135476,./TargetProjects/incubator-taverna-workbench/taverna-graph-model/src/main/java/org/apache/taverna/workbench/models/graph/svg/SVGGraphController.java,467,,"		edgeLine.line.setAttribute(""visibility"", ""hidden"");"
135477,./TargetProjects/incubator-taverna-workbench/taverna-graph-model/src/main/java/org/apache/taverna/workbench/models/graph/svg/SVGGraphEdge.java,255,,"					ellipse.setAttribute(SVG_TRANSFORM_ATTRIBUTE, ""translate("""
135478,./TargetProjects/incubator-taverna-workbench/taverna-graph-model/src/main/java/org/apache/taverna/workbench/models/graph/svg/SVGGraphNode.java,389,,"								""translate("" + position.x + "" "" + position.y"
135479,./TargetProjects/incubator-taverna-workbench/taverna-graph-view/src/main/java/org/apache/taverna/workbench/views/graph/menu/SaveGraphImageSubMenu.java,77,,"	private static final String[] saveTypes = { ""dot"", ""png"", ""svg"", ""ps"","
135480,./TargetProjects/incubator-taverna-workbench/taverna-loop-ui/src/main/java/org/apache/taverna/workbench/loop/LoopConfigureAction.java,161,,"				logger.warn(""Could not configure looping"", ex);"
135481,./TargetProjects/incubator-taverna-workbench/taverna-menu-impl/src/main/java/org/apache/taverna/ui/menu/impl/MenuManagerImpl.java,504,,"					logger.warn(""Skipping invalid action "" + childId + "" for """
135482,./TargetProjects/incubator-taverna-workbench/taverna-parallelize-ui/src/main/java/org/apache/taverna/workbench/parallelize/ParallelizeConfigureAction.java,145,,"						if (json.has(""parallelize"")) {"
135483,./TargetProjects/incubator-taverna-workbench/taverna-perspective-myexperiment/src/main/java/org/apache/taverna/ui/perspectives/myexperiment/HistoryBrowserTabContentPanel.java,217,,"	jclPreviewHistory = new JClickableLabel(""Previewed Items"", ""preview_history"", this, WorkbenchIcons.editIcon, SwingConstants.LEFT, ""tooltip"");"
135484,./TargetProjects/incubator-taverna-workbench/taverna-perspective-myexperiment/src/main/java/org/apache/taverna/ui/perspectives/myexperiment/MyStuffSidebarPanel.java,138,,"	JClickableLabel jclUserName = new JClickableLabel(name, ""preview:"""
135485,./TargetProjects/incubator-taverna-workbench/taverna-perspective-myexperiment/src/main/java/org/apache/taverna/ui/perspectives/myexperiment/MyStuffSidebarPanel.java,197,,"	  JLabel lNone = new JLabel(""None"");"
135486,./TargetProjects/incubator-taverna-workbench/taverna-perspective-myexperiment/src/main/java/org/apache/taverna/ui/perspectives/myexperiment/ResourcePreviewBrowser.java,464,,"		&& (r.getItemTypeName().equals(""Workflow""))) {"
135487,./TargetProjects/incubator-taverna-workbench/taverna-perspective-myexperiment/src/main/java/org/apache/taverna/ui/perspectives/myexperiment/ResourcePreviewFactory.java,122,,"	if (!action.startsWith(""preview:"")) {"
135488,./TargetProjects/incubator-taverna-workbench/taverna-perspective-myexperiment/src/main/java/org/apache/taverna/ui/perspectives/myexperiment/ResourcePreviewFactory.java,209,,"		content.append(""<div class='outer'>"");"
135489,./TargetProjects/incubator-taverna-workbench/taverna-perspective-myexperiment/src/main/java/org/apache/taverna/ui/perspectives/myexperiment/ResourcePreviewFactory.java,212,,"		content.append(""<br>"");"
135490,./TargetProjects/incubator-taverna-workbench/taverna-perspective-myexperiment/src/main/java/org/apache/taverna/ui/perspectives/myexperiment/ResourcePreviewFactory.java,214,,"		content.append(""<p class='title'>"");"
135491,./TargetProjects/incubator-taverna-workbench/taverna-perspective-myexperiment/src/main/java/org/apache/taverna/ui/perspectives/myexperiment/ResourcePreviewFactory.java,218,,"		content.append(""</p>"");"
135492,./TargetProjects/incubator-taverna-workbench/taverna-perspective-myexperiment/src/main/java/org/apache/taverna/ui/perspectives/myexperiment/ResourcePreviewFactory.java,222,,"		content.append(""<p class='info'>"");"
135493,./TargetProjects/incubator-taverna-workbench/taverna-perspective-myexperiment/src/main/java/org/apache/taverna/ui/perspectives/myexperiment/ResourcePreviewFactory.java,226,,"			+ ""</a><br>"");"
135494,./TargetProjects/incubator-taverna-workbench/taverna-perspective-myexperiment/src/main/java/org/apache/taverna/ui/perspectives/myexperiment/ResourcePreviewFactory.java,227,,"		content.append(""<b>Created at: </b> "" + w.getCreatedAt() + ""<br>"");"
135495,./TargetProjects/incubator-taverna-workbench/taverna-perspective-myexperiment/src/main/java/org/apache/taverna/ui/perspectives/myexperiment/ResourcePreviewFactory.java,232,,"			+ ""</a>"""
135496,./TargetProjects/incubator-taverna-workbench/taverna-perspective-myexperiment/src/main/java/org/apache/taverna/ui/perspectives/myexperiment/ResourcePreviewFactory.java,249,,"		  content.append(""<p class='desc'>"");"
135497,./TargetProjects/incubator-taverna-workbench/taverna-perspective-myexperiment/src/main/java/org/apache/taverna/ui/perspectives/myexperiment/ResourcePreviewFactory.java,255,,"		  content.append(""<span class='none_text'>No description</span>"");"
135498,./TargetProjects/incubator-taverna-workbench/taverna-perspective-myexperiment/src/main/java/org/apache/taverna/ui/perspectives/myexperiment/ResourcePreviewFactory.java,259,,"		content.append(""</div>"");"
135499,./TargetProjects/incubator-taverna-workbench/taverna-perspective-myexperiment/src/main/java/org/apache/taverna/ui/perspectives/myexperiment/ResourcePreviewFactory.java,277,,"		tpTabbedView.add(""Tags ("" + w.getTags().size() + "")"", spTagsTab);"
135500,./TargetProjects/incubator-taverna-workbench/taverna-perspective-myexperiment/src/main/java/org/apache/taverna/ui/perspectives/myexperiment/ResourcePreviewFactory.java,278,,"		tpTabbedView.add(""Comments ("" + w.getComments().size() + "")"", spCommentsTab);"
135501,./TargetProjects/incubator-taverna-workbench/taverna-perspective-myexperiment/src/main/java/org/apache/taverna/ui/perspectives/myexperiment/ResourcePreviewFactory.java,615,,"		  jpWorkflowsTabContent.add(new JClickableLabel(hmCurWF.get(""name""), ""preview:"""
135502,./TargetProjects/incubator-taverna-workbench/taverna-perspective-myexperiment/src/main/java/org/apache/taverna/ui/perspectives/myexperiment/ResourcePreviewFactory.java,616,,"			  + Resource.WORKFLOW + "":"" + hmCurWF.get(""uri""), pluginMainComponent.getPreviewBrowser(), this.iconWorkflow));"
135503,./TargetProjects/incubator-taverna-workbench/taverna-perspective-myexperiment/src/main/java/org/apache/taverna/ui/perspectives/myexperiment/ResourcePreviewFactory.java,1159,,"	  jpPackItemsTabContent.add(Util.generateNoneTextLabel(""None""), c);"
135504,./TargetProjects/incubator-taverna-workbench/taverna-perspective-myexperiment/src/main/java/org/apache/taverna/ui/perspectives/myexperiment/model/MyExperimentClient.java,310,,"      String strCurrentUserURI = doc.getRootElement().getAttributeValue(""uri"");"
135505,./TargetProjects/incubator-taverna-workbench/taverna-perspective-myexperiment/src/main/java/org/apache/taverna/ui/perspectives/myexperiment/model/MyExperimentClient.java,549,,"          strURI += ""&elements="""
135506,./TargetProjects/incubator-taverna-workbench/taverna-perspective-myexperiment/src/main/java/org/apache/taverna/ui/perspectives/myexperiment/model/Resource.java,426,,"			  + ((Workflow) this).getVersion() + "")"") : """") + ""</a>"");"
135507,./TargetProjects/incubator-taverna-workbench/taverna-perspective-myexperiment/src/main/java/org/apache/taverna/ui/perspectives/myexperiment/model/Resource.java,427,,"	  content.append(""</p>"");"
135508,./TargetProjects/incubator-taverna-workbench/taverna-perspective-myexperiment/src/main/java/org/apache/taverna/ui/perspectives/myexperiment/model/Resource.java,432,,"		  content.append(""<p class='uploader'>"");"
135509,./TargetProjects/incubator-taverna-workbench/taverna-perspective-myexperiment/src/main/java/org/apache/taverna/ui/perspectives/myexperiment/model/Util.java,213,,"	  r.setURI(e.getAttributeValue(""uri""));"
135510,./TargetProjects/incubator-taverna-workbench/taverna-perspective-myexperiment/src/main/java/org/apache/taverna/ui/perspectives/myexperiment/model/Util.java,214,,"	  r.setResource(e.getAttributeValue(""resource""));"
135511,./TargetProjects/incubator-taverna-workbench/taverna-perspective-myexperiment/src/main/java/org/apache/taverna/ui/perspectives/myexperiment/model/Util.java,354,,"  @SuppressWarnings(""unchecked"")"
135512,./TargetProjects/incubator-taverna-workbench/taverna-perspective-myexperiment/src/main/java/org/apache/taverna/ui/perspectives/myexperiment/model/Workflow.java,280,,"	  w.setDescription(docRootElement.getChildText(""description""));"
135513,./TargetProjects/incubator-taverna-workbench/taverna-perspective-myexperiment/src/main/java/org/apache/taverna/ui/perspectives/myexperiment/model/Workflow.java,363,,"			curInput.put(""name"", e.getChildText(""name""));"
135514,./TargetProjects/incubator-taverna-workbench/taverna-perspective-myexperiment/src/main/java/org/apache/taverna/ui/perspectives/myexperiment/model/Workflow.java,412,,"			String strSource = e.getChild(""source"").getChildText(""node"")"
135515,./TargetProjects/incubator-taverna-workbench/taverna-perspective-myexperiment/src/main/java/org/apache/taverna/ui/perspectives/myexperiment/model/Workflow.java,413,,"				+ (e.getChild(""source"").getChildText(""port"") == null ? """" : ("":"" + e.getChild(""source"").getChildText(""port"")));"
135516,./TargetProjects/incubator-taverna-workbench/taverna-perspective-myexperiment/src/main/java/org/apache/taverna/ui/perspectives/myexperiment/model/Workflow.java,415,,"			String strSink = e.getChild(""sink"").getChildText(""node"")"
135517,./TargetProjects/incubator-taverna-workbench/taverna-plugins-gui/src/main/java/org/apache/taverna/raven/plugins/ui/PluginManagerFrame.java,124,,"					JOptionPane.showMessageDialog(PluginManagerFrame.this,""The plugin '""+event.getPlugin().getName()+""' will not be fully functional until Taverna is restarted"",""Restart Required"", JOptionPane.WARNING_MESSAGE);"
135518,./TargetProjects/incubator-taverna-workbench/taverna-plugins-gui/src/main/java/org/apache/taverna/raven/plugins/ui/PluginManagerFrame.java,124,,"					JOptionPane.showMessageDialog(PluginManagerFrame.this,""The plugin '""+event.getPlugin().getName()+""' will not be fully functional until Taverna is restarted"",""Restart Required"", JOptionPane.WARNING_MESSAGE);"
135519,./TargetProjects/incubator-taverna-workbench/taverna-plugins-gui/src/main/java/org/apache/taverna/raven/plugins/ui/PluginManagerFrame.java,313,,"			enableButton.setActionCommand(""enable"");"
135520,./TargetProjects/incubator-taverna-workbench/taverna-plugins-gui/src/main/java/org/apache/taverna/raven/plugins/ui/PluginManagerFrame.java,322,,"							enableButton.setActionCommand(""disable"");"
135521,./TargetProjects/incubator-taverna-workbench/taverna-reference-ui/src/main/java/org/apache/taverna/reference/ui/InvalidDataflowReport.java,63,,"				sb.append(""<dd>"" + entity.getLocalName());"
135522,./TargetProjects/incubator-taverna-workbench/taverna-reference-ui/src/main/java/org/apache/taverna/reference/ui/RegistrationPanel.java,99,,"	@SuppressWarnings(""unused"")"
135523,./TargetProjects/incubator-taverna-workbench/taverna-report-explainer/src/main/java/org/apache/taverna/workbench/report/explainer/BasicExplainer.java,427,,"				.getProperty(""sourceProcessor"");"
135524,./TargetProjects/incubator-taverna-workbench/taverna-report-explainer/src/main/java/org/apache/taverna/workbench/report/explainer/BasicExplainer.java,432,,"			message += ""\"""" + pip.getName() + ""\"" "";"
135525,./TargetProjects/incubator-taverna-workbench/taverna-report-explainer/src/main/java/org/apache/taverna/workbench/report/explainer/BasicExplainer.java,446,,"		String endpoint = (String) (vr.getProperty(""endpoint""));"
135526,./TargetProjects/incubator-taverna-workbench/taverna-report-explainer/src/main/java/org/apache/taverna/workbench/report/explainer/BasicExplainer.java,448,,"			endpoint = ""the endpoint"";"
135527,./TargetProjects/incubator-taverna-workbench/taverna-report-explainer/src/main/java/org/apache/taverna/workbench/report/explainer/BasicExplainer.java,470,,"		Exception e = (Exception) (vr.getProperty(""exception""));"
135528,./TargetProjects/incubator-taverna-workbench/taverna-report-explainer/src/main/java/org/apache/taverna/workbench/report/explainer/BasicExplainer.java,856,,"		button.setText(""Configure "" + p.getLocalName());"
135529,./TargetProjects/incubator-taverna-workbench/taverna-report-explainer/src/main/java/org/apache/taverna/workbench/report/explainer/BasicExplainer.java,902,,"			editMessage = ""If the service has moved, change the service's properties to its new location."";"
135530,./TargetProjects/incubator-taverna-workbench/taverna-results-view/src/main/java/org/apache/taverna/workbench/views/results/saveactions/SaveIndividualResult.java,86,,"			String curDir = prefs.get(""currentDir"", getProperty(""user.home""));"
135531,./TargetProjects/incubator-taverna-workbench/taverna-retry-ui/src/main/java/org/apache/taverna/workbench/retry/RetryConfigureAction.java,143,,"						if (json.has(""retry"")) {"
135532,./TargetProjects/incubator-taverna-workbench/taverna-uibuilder/src/main/java/org/apache/taverna/lang/uibuilder/AbstractListComponent.java,76,,"	@SuppressWarnings(""unchecked"")"
135533,./TargetProjects/incubator-taverna-workbench/taverna-uibuilder/src/main/java/org/apache/taverna/lang/uibuilder/WrappedListComponent.java,39,,"	@SuppressWarnings(""unchecked"")"
135534,./TargetProjects/incubator-taverna-workbench/taverna-workflow-explorer/src/main/java/org/apache/taverna/workbench/ui/workflowexplorer/WorkflowExplorer.java,339,,"	@SuppressWarnings(""unchecked"")"
135535,./TargetProjects/incubator-taverna-workbench-common-activities/taverna-beanshell-activity-ui/src/main/java/org/apache/taverna/activities/beanshell/views/BeanshellConfigurationPanel.java,97,,"			getJson().remove(""localDependency"");"
135536,./TargetProjects/incubator-taverna-workbench-common-activities/taverna-external-tool-activity-ui/src/main/java/org/apache/taverna/activities/externaltool/views/ExternalToolActivityContextualView.java,106,,"				html += ""<tr><td>"" + siName + ""</td>"";"
135537,./TargetProjects/incubator-taverna-workbench-common-activities/taverna-external-tool-activity-ui/src/main/java/org/apache/taverna/activities/externaltool/views/ExternalToolActivityContextualView.java,110,,"				html += ""</tr>"";"
135538,./TargetProjects/incubator-taverna-workbench-common-activities/taverna-external-tool-activity-ui/src/main/java/org/apache/taverna/activities/externaltool/views/ExternalToolConfigView.java,617,,"			if (name.equalsIgnoreCase(""stdin"") || name.equalsIgnoreCase(""stdout"") || name.equalsIgnoreCase(""stderr"")) {"
135539,./TargetProjects/incubator-taverna-workbench-common-activities/taverna-external-tool-activity-ui/src/main/java/org/apache/taverna/activities/externaltool/views/ExternalToolConfigView.java,617,,"			if (name.equalsIgnoreCase(""stdin"") || name.equalsIgnoreCase(""stdout"") || name.equalsIgnoreCase(""stderr"")) {"
135540,./TargetProjects/incubator-taverna-workbench-common-activities/taverna-external-tool-activity-ui/src/main/java/org/apache/taverna/activities/externaltool/views/ExternalToolConfigView.java,617,,"			if (name.equalsIgnoreCase(""stdin"") || name.equalsIgnoreCase(""stdout"") || name.equalsIgnoreCase(""stderr"")) {"
135541,./TargetProjects/incubator-taverna-workbench-common-activities/taverna-external-tool-activity-ui/src/main/java/org/apache/taverna/activities/externaltool/views/ExternalToolConfigView.java,618,,"				text += ""A string replacement port has a reserved name \"""" + name + ""\""\n"";"
135542,./TargetProjects/incubator-taverna-workbench-common-activities/taverna-external-tool-activity-ui/src/main/java/org/apache/taverna/activities/externaltool/views/ExternalToolConfigView.java,627,,"						+ ""\"" is invalid\n"";"
135543,./TargetProjects/incubator-taverna-workbench-common-activities/taverna-rest-activity-ui/src/main/java/org/apache/taverna/activities/rest/ui/config/RESTActivityConfigurationPanel.java,131,,"		headersNode.addObject().put(""header"", ""Accept"").put(""value"", (String) cbAccepts.getSelectedItem());"
135544,./TargetProjects/incubator-taverna-workbench-common-activities/taverna-rest-activity-ui/src/main/java/org/apache/taverna/activities/rest/ui/config/RESTActivityConfigurationPanel.java,131,,"		headersNode.addObject().put(""header"", ""Accept"").put(""value"", (String) cbAccepts.getSelectedItem());"
135545,./TargetProjects/incubator-taverna-workbench-common-activities/taverna-rest-activity-ui/src/main/java/org/apache/taverna/activities/rest/ui/config/RESTActivityConfigurationPanel.java,169,,"					""REST Activity Configuration - Warning"","
135546,./TargetProjects/incubator-taverna-workbench-common-activities/taverna-spreadsheet-import-activity-ui/src/main/java/org/apache/taverna/activities/spreadsheet/views/SpreadsheetImportConfigView.java,203,,"		JsonNode columnRange = newConfiguration.get(""columnRange"");"
135547,./TargetProjects/incubator-taverna-workbench-common-activities/taverna-spreadsheet-import-activity-ui/src/main/java/org/apache/taverna/activities/spreadsheet/views/SpreadsheetImportConfigView.java,204,,"		columnFromValue = new JTextField(new UpperCaseDocument(), SpreadsheetUtils.getColumnLabel(columnRange.get(""start"").intValue()), 4);"
135548,./TargetProjects/incubator-taverna-workbench-common-activities/taverna-spreadsheet-import-activity-ui/src/main/java/org/apache/taverna/activities/spreadsheet/views/SpreadsheetImportConfigView.java,206,,"		columnToValue = new JTextField(new UpperCaseDocument(), SpreadsheetUtils.getColumnLabel(columnRange.get(""end"").intValue()), 4);"
135549,./TargetProjects/incubator-taverna-workbench-common-activities/taverna-spreadsheet-import-activity-ui/src/main/java/org/apache/taverna/activities/spreadsheet/views/SpreadsheetImportConfigView.java,294,,"		JsonNode rowRange = newConfiguration.get(""rowRange"");"
135550,./TargetProjects/incubator-taverna-workbench-common-activities/taverna-spreadsheet-import-activity-ui/src/main/java/org/apache/taverna/activities/spreadsheet/views/SpreadsheetImportConfigView.java,434,,"		emptyCellUserDefinedValue = new JTextField(newConfiguration.get(""emptyCellValue"").textValue());"
135551,./TargetProjects/incubator-taverna-workbench-common-activities/taverna-spreadsheet-import-activity-ui/src/main/java/org/apache/taverna/activities/spreadsheet/views/SpreadsheetImportConfigView.java,440,,"		if (newConfiguration.get(""emptyCellPolicy"").textValue().equals(""GENERATE_ERROR"")) {"
135552,./TargetProjects/incubator-taverna-workbench-common-activities/taverna-spreadsheet-import-activity-ui/src/main/java/org/apache/taverna/activities/spreadsheet/views/SpreadsheetImportConfigView.java,498,,"		if (newConfiguration.has(""columnNames"")) {"
135553,./TargetProjects/incubator-taverna-workbench-common-activities/taverna-wsdl-activity-ui/src/main/java/org/apache/taverna/activities/wsdl/views/AbstractXMLSplitterActionView.java,87,,"				logger.warn(""Could not find type descriptors for "" + getActivity(), e);"
135554,./TargetProjects/incubator-taverna-workbench-common-activities/taverna-wsdl-activity-ui/src/main/java/org/apache/taverna/activities/wsdl/views/WSDLActivityConfigurationView.java,255,,"		if (!getJson().has(""securityProfile"")) {"
135555,./TargetProjects/incubator-taverna-workbench-common-activities/taverna-xpath-activity-ui/src/main/java/org/apache/taverna/activities/xpath/ui/config/XPathActivityConfigurationPanel.java,322,,"								""XPath Activity"", "
135556,./TargetProjects/incubator-taverna-workbench-common-activities/taverna-xpath-activity-ui/src/main/java/org/apache/taverna/activities/xpath/ui/config/XPathActivityConfigurationPanelProvider.java,89,,"			json.remove(""xpathNamespaceMap"");"
135557,./TargetProjects/incubator-tez/tez-api/src/main/java/org/apache/tez/client/TezClient.java,330,,"      + "", sessionName="" + clientName"
135558,./TargetProjects/incubator-tez/tez-api/src/main/java/org/apache/tez/client/TezClient.java,331,,"      + "", applicationId="" + sessionAppId"
135559,./TargetProjects/incubator-tez/tez-api/src/main/java/org/apache/tez/common/counters/FrameworkCounterGroup.java,168,,"  @SuppressWarnings(""unchecked"")"
135560,./TargetProjects/incubator-tez/tez-api/src/main/java/org/apache/tez/dag/api/DAG.java,168,,"        ""Input vertex "" + edge.getInputVertex() + "" doesn't exist!"");"
135561,./TargetProjects/incubator-tez/tez-api/src/main/java/org/apache/tez/dag/api/DAG.java,284,,"                + ""Vertex: "" + inputVertex.getName() + "" does not match vertex: "" "
135562,./TargetProjects/incubator-tez/tez-api/src/main/java/org/apache/tez/dag/api/DagTypeConverters.java,380,,"        + "" proto"");"
135563,./TargetProjects/incubator-tez/tez-api/src/main/java/org/apache/tez/dag/api/client/rpc/DAGClientRPCImpl.java,127,,"      LOG.debug(""TryKill for app: "" + appId + "" dag:"" + dagId);"
135564,./TargetProjects/incubator-tez/tez-api/src/test/java/org/apache/tez/common/TestTezCommonUtils.java,96,,"    String strAppId = ""testAppId"";"
135565,./TargetProjects/incubator-tez/tez-api/src/test/java/org/apache/tez/dag/api/TestDAGPlan.java,102,,"    DAG dag = new DAG(""testDag"");"
135566,./TargetProjects/incubator-tez/tez-api/src/test/java/org/apache/tez/dag/api/TestDAGPlan.java,103,,"    ProcessorDescriptor pd1 = new ProcessorDescriptor(""processor1"")"
135567,./TargetProjects/incubator-tez/tez-api/src/test/java/org/apache/tez/dag/api/TestDAGPlan.java,104,,"        .setUserPayload(""processor1Bytes"".getBytes());"
135568,./TargetProjects/incubator-tez/tez-api/src/test/java/org/apache/tez/dag/api/TestDAGPlan.java,105,,"    ProcessorDescriptor pd2 = new ProcessorDescriptor(""processor2"")"
135569,./TargetProjects/incubator-tez/tez-api/src/test/java/org/apache/tez/dag/api/TestDAGPlan.java,106,,"        .setUserPayload(""processor2Bytes"".getBytes());"
135570,./TargetProjects/incubator-tez/tez-api/src/test/java/org/apache/tez/dag/api/TestDAGPlan.java,114,,"    InputDescriptor inputDescriptor = new InputDescriptor(""input"").setUserPayload(""inputBytes"""
135571,./TargetProjects/incubator-tez/tez-api/src/test/java/org/apache/tez/dag/api/TestDAGPlan.java,114,,"    InputDescriptor inputDescriptor = new InputDescriptor(""input"").setUserPayload(""inputBytes"""
135572,./TargetProjects/incubator-tez/tez-api/src/test/java/org/apache/tez/dag/api/TestDAGPlan.java,116,,"    OutputDescriptor outputDescriptor = new OutputDescriptor(""output"").setUserPayload(""outputBytes"""
135573,./TargetProjects/incubator-tez/tez-api/src/test/java/org/apache/tez/dag/api/TestDAGPlan.java,116,,"    OutputDescriptor outputDescriptor = new OutputDescriptor(""output"").setUserPayload(""outputBytes"""
135574,./TargetProjects/incubator-tez/tez-api/src/test/java/org/apache/tez/dag/api/TestDAGVerify.java,45,,"        new ProcessorDescriptor(""MapProcessor""),"
135575,./TargetProjects/incubator-tez/tez-api/src/test/java/org/apache/tez/dag/api/TestDAGVerify.java,52,,"    DAG dag = new DAG(""testDag"");"
135576,./TargetProjects/incubator-tez/tez-api/src/test/java/org/apache/tez/dag/api/TestDAGVerify.java,356,,"            new OutputDescriptor(""dummy output class""),"
135577,./TargetProjects/incubator-tez/tez-api/src/test/java/org/apache/tez/dag/api/TestDAGVerify.java,357,,"            new InputDescriptor(""dummy input class"")));"
135578,./TargetProjects/incubator-tez/tez-api/src/test/java/org/apache/tez/dag/api/TestDAGVerify.java,594,,"        new ProcessorDescriptor(""Processor""),"
135579,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/app/DAGAppMaster.java,1017,,"  @SuppressWarnings(""unchecked"")"
135580,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/app/DAGAppMaster.java,1293,,"              LOG.debug(""Service: "" + service.getName() + "" notified to start"");"
135581,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/app/RecoveryParser.java,124,,"          + "", event="" + HistoryEventType.values()[proto.getEventType()]);"
135582,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/app/RecoveryParser.java,216,,"          + "", eventType="" + eventType);"
135583,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/app/RecoveryParser.java,317,,"              + "", dagId="" + inProgressDAG.dagId"
135584,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/app/RecoveryParser.java,350,,"              + "", path="" + attemptPath);"
135585,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/app/RecoveryParser.java,657,,"          LOG.info(""Recovering from event"""
135586,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/app/TaskAttemptListenerImpTezDag.java,191,,"        LOG.debug(""Container with id: "" + containerId + "" asked for a task"");"
135587,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/DAGImpl.java,932,,"          + "", numCompletedVertices="" + dag.numCompletedVertices"
135588,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/DAGImpl.java,933,,"          + "", numSuccessfulVertices="" + dag.numSuccessfulVertices"
135589,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/DAGImpl.java,934,,"          + "", numFailedVertices="" + dag.numFailedVertices"
135590,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/DAGImpl.java,935,,"          + "", numKilledVertices="" + dag.numKilledVertices"
135591,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/DAGImpl.java,936,,"          + "", numVertices="" + dag.numVertices"
135592,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/DAGImpl.java,956,,"            "" failedVertices:"" + dag.numFailedVertices +"
135593,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/DAGImpl.java,957,,"            "" killedVertices:"" + dag.numKilledVertices;"
135594,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/DAGImpl.java,1578,,"            + "", vertexId="" + vertexEvent.getVertexId()"
135595,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/Edge.java,200,,"        ""Edge Manager must be initialized by this time"");"
135596,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/TaskImpl.java,530,,"              + "", taskId="" + taskId"
135597,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/TaskImpl.java,549,,"              + "", taskAttemptId="" + taskAttemptStartedEvent.getTaskAttemptID());"
135598,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java,992,,"              + "", vertex="" + logIdentifier"
135599,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java,993,,"              + "", recoveredState="" + recoveredState);"
135600,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java,1089,,"              ""Invalid taskId: "" + task.getTaskIndex() + "" for vertex: "" + logIdentifier);"
135601,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java,1206,,"        LOG.info(""Vertex "" + getVertexId() + "
135602,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java,1441,,"          + "", numTasks="" + vertex.numTasks"
135603,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java,1500,,"                          + "", vertexId="" + vertex.logIdentifier);"
135604,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java,1519,,"            + ""failedTasks:"""
135605,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java,1966,,"              + "", state="" + desiredState);"
135606,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java,2704,,"      Preconditions.checkState(vertex.canInitVertex(), ""Vertex: "" + vertex.logIdentifier);"
135607,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java,2774,,"                    + originalSplitSource + "" sent by vertex """
135608,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/app/dag/impl/VertexImpl.java,2775,,"                    + splitEvent.getSenderVertex() + "" numTasks """
135609,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/app/rm/YarnTaskSchedulerService.java,560,,"        + "", containerId="" + heldContainer.getContainer().getId()"
135610,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/app/rm/container/AMContainerImpl.java,545,,"        LOG.info(""Container "" + container.getContainerId()"
135611,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/history/logging/impl/HistoryEventJsonConversion.java,117,,"        ""tez_"" + event.getApplicationAttemptId().toString());"
135612,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/history/recovery/RecoveryService.java,212,,"            + "", eventType="" + eventType"
135613,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/history/recovery/RecoveryService.java,213,,"            + "", dagId="" + (dagId == null ? ""null"" : dagId.toString())"
135614,./TargetProjects/incubator-tez/tez-dag/src/main/java/org/apache/tez/dag/utils/Graph.java,179,,"      sb.append(System.getProperty(""line.separator""));"
135615,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/api/client/TestDAGClientHandler.java,56,,"    when(mockTezDAGId.toString()).thenReturn(""dag_9999_0001_1"");"
135616,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/api/client/TestDAGClientHandler.java,82,,"      fail(""should not come here"");"
135617,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestDAGImpl.java,157,,"    @SuppressWarnings(""unchecked"")"
135618,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestDAGImpl.java,205,,"            .setName(""vertex1"")"
135619,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestDAGImpl.java,235,,"            .setName(""vertex2"")"
135620,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestDAGImpl.java,266,,"            .setName(""vertex3"")"
135621,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestDAGImpl.java,268,,"            .setProcessorDescriptor(TezEntityDescriptorProto.newBuilder().setClassName(""x3.y3""))"
135622,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestDAGImpl.java,738,,"      Vertex v = groupDag.getVertex(""vertex""+(i+1));"
135623,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestRootInputVertexManager.java,43,,"    doReturn(""vertex1"").when(context).getVertexName();"
135624,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestTaskAttempt.java,131,,"    hosts.add(""host2"");"
135625,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestTaskAttempt.java,132,,"    hosts.add(""host3"");"
135626,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestTaskAttempt.java,171,,"    String hosts[] = new String[] { ""127.0.0.1"", ""host2"", ""host3"" };"
135627,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestTaskAttempt.java,311,,"        new InetSocketAddress(""localhost"", 0));"
135628,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestTaskAttempt.java,314,,"    taskConf.setClass(""fs.file.impl"", StubbedFS.class, FileSystem.class);"
135629,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestTaskAttempt.java,315,,"    taskConf.setBoolean(""fs.file.impl.disable.cache"", true);"
135630,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestTaskAttempt.java,376,,"    when(container.getNodeHttpAddress()).thenReturn(""localhost:0"");"
135631,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestTaskAttempt.java,398,,"    assertEquals(""Task attempt is not in the RUNNING state"", taImpl.getState(),"
135632,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestTaskAttempt.java,428,,"        ""Terminated""));"
135633,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestTaskAttempt.java,559,,"    assertEquals(""Task attempt is not in the  SUCCEEDED state"", taImpl.getState(),"
135634,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestTaskImpl.java,113,,"  @SuppressWarnings(""rawtypes"")"
135635,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java,306,,"    @SuppressWarnings(""unchecked"")"
135636,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java,362,,"            .setName(""vertex1"")"
135637,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java,366,,"                .addHost(""host1"")"
135638,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java,367,,"                .addRack(""rack1"")"
135639,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java,376,,"            .setTaskModule(""x1.y1"")"
135640,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java,390,,"    org.apache.tez.dag.api.Vertex v2 = new org.apache.tez.dag.api.Vertex(""vertex2"","
135641,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java,392,,"    org.apache.tez.dag.api.Vertex v3 = new org.apache.tez.dag.api.Vertex(""vertex3"","
135642,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java,394,,"    org.apache.tez.dag.api.Vertex v4 = new org.apache.tez.dag.api.Vertex(""vertex4"","
135643,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java,396,,"    org.apache.tez.dag.api.Vertex v5 = new org.apache.tez.dag.api.Vertex(""vertex5"","
135644,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java,398,,"    org.apache.tez.dag.api.Vertex v6 = new org.apache.tez.dag.api.Vertex(""vertex6"","
135645,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java,403,,"            SchedulingType.SEQUENTIAL, new OutputDescriptor(""out.class""), "
135646,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java,440,,"                    .setName(""input1"")"
135647,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java,443,,"                            .setClassName(""InputClazz"")"
135648,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java,480,,"                        .setTaskModule(""x2.y2"")"
135649,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java,507,,"                        .setTaskModule(""x3.y3"")"
135650,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java,739,,"        .setTaskModule(""x4.y4"")"
135651,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java,961,,"                .setJavaOpts(""foo"")"
135652,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java,1032,,"                        .setName(""outputx"")"
135653,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java,1156,,"      .addInEdgeId(""A_C"")"
135654,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java,1157,,"      .addInEdgeId(""B_C"");"
135655,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java,1169,,"            .setProcessorDescriptor(TezEntityDescriptorProto.newBuilder().setClassName(""A.class""))"
135656,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java,1245,,"                .setEdgeDestination(TezEntityDescriptorProto.newBuilder().setClassName(""B_C.class""))"
135657,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java,1397,,"                .addOutEdgeId(""2_3"")"
135658,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java,2344,,"        .setName(""output_v2"")"
135659,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/dag/impl/TestVertexImpl.java,2609,,"    dagPlan = createDAGPlanForOneToOneSplit(""TestInputInitializer"", -1, true);"
135660,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/rm/TestContainerReuse.java,126,,"    String appUrl = ""url"";"
135661,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/rm/TestContainerReuse.java,127,,"    String appMsg = ""success"";"
135662,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/rm/TestContainerReuse.java,166,,"    String [] host1 = {""host1""};"
135663,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/rm/TestContainerReuse.java,167,,"    String [] host2 = {""host2""};"
135664,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/rm/TestContainerReuse.java,169,,"    String [] defaultRack = {""/default-rack""};"
135665,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/rm/TestContainerReuse.java,784,,"    LOG.info(""Sleeping to ensure that the scheduling loop runs"");"
135666,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/rm/TestTaskScheduler.java,91,,"  @SuppressWarnings({ ""unchecked"" })"
135667,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/rm/TestTaskScheduler.java,102,,"    String appHost = ""host"";"
135668,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/rm/TestTaskScheduler.java,104,,"    String appUrl = ""url"";"
135669,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/rm/TestTaskScheduler.java,152,,"    String[] hosts = {""host1"", ""host5""};"
135670,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/rm/TestTaskScheduler.java,152,,"    String[] hosts = {""host1"", ""host5""};"
135671,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/rm/TestTaskScheduler.java,153,,"    String[] racks = {""/default-rack"", ""/default-rack""};"
135672,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/rm/TestTaskScheduler.java,484,,"    String appMsg = ""success"";"
135673,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/rm/TestTaskSchedulerHelpers.java,125,,"    @SuppressWarnings(""rawtypes"")"
135674,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/rm/TestTaskSchedulerHelpers.java,331,,"      Preconditions.checkNotNull(cs1, ""Arguments cannot be null"");"
135675,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/rm/TestTaskSchedulerHelpers.java,394,,"      throw new UnsupportedOperationException(""Not expected to be used"");"
135676,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/rm/TestTezAMRMClient.java,56,,"    String[] hosts = { ""host1"" };"
135677,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/rm/container/TestAMContainer.java,280,,"  @SuppressWarnings(""rawtypes"")"
135678,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/rm/container/TestAMContainer.java,715,,"        assertEquals(""nodeFailed"", nfEvent.getDiagnosticInfo());"
135679,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/app/rm/container/TestAMContainer.java,934,,"  @SuppressWarnings(""unchecked"")"
135680,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/history/events/TestHistoryEventsProtoConversion.java,147,,"        DAGPlan.newBuilder().setName(""foo"").build(),"
135681,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/history/events/TestHistoryEventsProtoConversion.java,168,,"        ""user"", ""dagName"");"
135682,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/history/events/TestHistoryEventsProtoConversion.java,168,,"        ""user"", ""dagName"");"
135683,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/history/events/TestHistoryEventsProtoConversion.java,235,,"        ""vertex1"", 1000l, 15000l, 100, ""procName"", null);"
135684,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/history/events/TestHistoryEventsProtoConversion.java,306,,"      sourceEdgeManagers.put(""foo1"", new EdgeManagerDescriptor(""bar1"").setUserPayload("
135685,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/history/utils/TestDAGUtils.java,77,,"            new OutputDescriptor(""dummy output class"").setHistoryText(""Dummy History Text""),"
135686,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/utils/TestJavaProfilerOptions.java,34,,"    return getOptions(conf, tasks, ""dummyOpts"");"
135687,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/dag/utils/TestJavaProfilerOptions.java,60,,"    assertTrue(profilerOptions.shouldProfileJVM(""v 1"", 1));"
135688,./TargetProjects/incubator-tez/tez-dag/src/test/java/org/apache/tez/runtime/task/TestTaskExecution.java,447,,"            IOException io = new IOException(""FATALERROR"");"
135689,./TargetProjects/incubator-tez/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/MRRSleepJob.java,269,,"            + "" taskid "" + context.getTaskAttemptID().getTaskID().getId()"
135690,./TargetProjects/incubator-tez/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/MRRSleepJob.java,270,,"            + "" key "" + key.get());"
135691,./TargetProjects/incubator-tez/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/OrderedWordCount.java,209,,"    Vertex mapVertex = new Vertex(""initialmap"", new ProcessorDescriptor("
135692,./TargetProjects/incubator-tez/tez-mapreduce-examples/src/main/java/org/apache/tez/mapreduce/examples/UnionExample.java,126,,"      MROutput out = (MROutput) getOutputs().get(""union"");"
135693,./TargetProjects/incubator-tez/tez-mapreduce/src/main/java/org/apache/hadoop/mapred/split/TezMapredSplitsGrouper.java,390,,"            "" splitsProcessed: "" + splitsProcessed + "
135694,./TargetProjects/incubator-tez/tez-mapreduce/src/main/java/org/apache/hadoop/mapreduce/split/TezMapReduceSplitsGrouper.java,387,,"            "" splitsProcessed: "" + splitsProcessed + "
135695,./TargetProjects/incubator-tez/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/client/NotRunningJob.java,89,,"    return ApplicationReport.newInstance(unknownAppId, unknownAttemptId, ""N/A"","
135696,./TargetProjects/incubator-tez/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/committer/MROutputCommitter.java,80,,"      throw new RuntimeException(""Committer not initialized"");"
135697,./TargetProjects/incubator-tez/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/hadoop/MRHelpers.java,106,,"  @LimitedPrivate(""Hive, Pig"")"
135698,./TargetProjects/incubator-tez/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/hadoop/MRHelpers.java,227,,"  @SuppressWarnings({ ""rawtypes"", ""unchecked"" })"
135699,./TargetProjects/incubator-tez/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/hadoop/mapreduce/JobContextImpl.java,181,,"  @SuppressWarnings(""unchecked"")"
135700,./TargetProjects/incubator-tez/tez-mapreduce/src/main/java/org/apache/tez/mapreduce/output/MROutput.java,64,,"  @SuppressWarnings(""rawtypes"")"
135701,./TargetProjects/incubator-tez/tez-mapreduce/src/test/java/org/apache/tez/mapreduce/hadoop/TestMRHelpers.java,252,,"    conf.set(MRJobConfig.MAPRED_MAP_ADMIN_JAVA_OPTS, ""fooMapAdminOpts"");"
135702,./TargetProjects/incubator-tez/tez-mapreduce/src/test/java/org/apache/tez/mapreduce/hadoop/TestMRHelpers.java,272,,"    Assert.assertTrue(opts.contains("" -D"""
135703,./TargetProjects/incubator-tez/tez-mapreduce/src/test/java/org/apache/tez/mapreduce/hadoop/TestMRHelpers.java,335,,"    Assert.assertTrue(env.containsKey(""foo""));"
135704,./TargetProjects/incubator-tez/tez-mapreduce/src/test/java/org/apache/tez/mapreduce/hadoop/TestMRHelpers.java,336,,"    Assert.assertTrue(env.containsKey(""bar""));"
135705,./TargetProjects/incubator-tez/tez-plugins/tez-yarn-timeline-history/src/main/java/org/apache/tez/dag/history/logging/ats/HistoryEventTimelineConversion.java,118,,"    atsEntity.setEntityId(""tez_"""
135706,./TargetProjects/incubator-tez/tez-runtime-internals/src/test/java/org/apache/tez/runtime/common/objectregistry/TestObjectRegistry.java,48,,"    Assert.assertNull(objectRegistry.add(ObjectLifeCycle.DAG, ""one"", one));"
135707,./TargetProjects/incubator-tez/tez-runtime-internals/src/test/java/org/apache/tez/runtime/common/objectregistry/TestObjectRegistry.java,50,,"    Assert.assertNull(objectRegistry.add(ObjectLifeCycle.DAG, ""two"", two_1));"
135708,./TargetProjects/incubator-tez/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/ConfigUtils.java,162,,"    Preconditions.checkArgument(allowedKeys != null, ""Valid key set cannot be empty"");"
135709,./TargetProjects/incubator-tez/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/sort/impl/IFile.java,276,,"        ""Negative value-length not allowed: %d for %s"", valueLength, value);"
135710,./TargetProjects/incubator-tez/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/common/task/local/output/TezLocalTaskOutputFiles.java,150,,"    return lDirAlloc.getLocalPathToRead(Constants.TEZ_RUNTIME_TASK_OUTPUT_DIR + ""/spill"""
135711,./TargetProjects/incubator-tez/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/input/ShuffledMergedInput.java,69,,"  @SuppressWarnings(""rawtypes"")"
135712,./TargetProjects/incubator-tez/tez-runtime-library/src/main/java/org/apache/tez/runtime/library/shuffle/common/impl/ShuffleManager.java,615,,"      throw new UnsupportedOperationException(""Not supported for NullFetchedInput"");"
135713,./TargetProjects/incubator-tez/tez-runtime-library/src/test/java/org/apache/tez/dag/library/vertexmanager/TestInputReadyVertexManager.java,66,,"        new OutputDescriptor(""out""),"
135714,./TargetProjects/incubator-tez/tez-runtime-library/src/test/java/org/apache/tez/dag/library/vertexmanager/TestShuffleVertexManager.java,73,,"        new OutputDescriptor(""out""),"
135715,./TargetProjects/incubator-tez/tez-runtime-library/src/test/java/org/apache/tez/runtime/library/conf/TestOnFileSortedOutputConfiguration.java,41,,"          null, ""VALUE"", ""PARTITIONER"", null);"
135716,./TargetProjects/incubator-tez/tez-runtime-library/src/test/java/org/apache/tez/runtime/library/conf/TestOnFileSortedOutputConfiguration.java,41,,"          null, ""VALUE"", ""PARTITIONER"", null);"
135717,./TargetProjects/incubator-tez/tez-runtime-library/src/test/java/org/apache/tez/runtime/library/conf/TestOnFileSortedOutputConfiguration.java,49,,"          ""KEY"", null, ""PARTITIONER"", null);"
135718,./TargetProjects/incubator-tez/tez-runtime-library/src/test/java/org/apache/tez/runtime/library/conf/TestOnFileUnorderedKVOutputConfiguration.java,41,,"          null, ""VALUE"");"
135719,./TargetProjects/incubator-tez/tez-runtime-library/src/test/java/org/apache/tez/runtime/library/conf/TestOnFileUnorderedKVOutputConfiguration.java,49,,"          ""KEY"", null);"
135720,./TargetProjects/incubator-tez/tez-runtime-library/src/test/java/org/apache/tez/runtime/library/conf/TestOnFileUnorderedPartitionedKVOutput.java,41,,"          null, ""VALUE"", ""PARTITIONER"", null);"
135721,./TargetProjects/incubator-tez/tez-runtime-library/src/test/java/org/apache/tez/runtime/library/conf/TestOnFileUnorderedPartitionedKVOutput.java,41,,"          null, ""VALUE"", ""PARTITIONER"", null);"
135722,./TargetProjects/incubator-tez/tez-runtime-library/src/test/java/org/apache/tez/runtime/library/conf/TestOnFileUnorderedPartitionedKVOutput.java,49,,"          ""KEY"", null, ""PARTITIONER"", null);"
135723,./TargetProjects/incubator-tez/tez-runtime-library/src/test/java/org/apache/tez/runtime/library/conf/TestOrderedPartitionedKVEdgeConfigurer.java,40,,"      OrderedPartitionedKVEdgeConfigurer.newBuilder(null, ""VALUE"", ""PARTITIONER"", null);"
135724,./TargetProjects/incubator-tez/tez-runtime-library/src/test/java/org/apache/tez/runtime/library/conf/TestOrderedPartitionedKVEdgeConfigurer.java,40,,"      OrderedPartitionedKVEdgeConfigurer.newBuilder(null, ""VALUE"", ""PARTITIONER"", null);"
135725,./TargetProjects/incubator-tez/tez-runtime-library/src/test/java/org/apache/tez/runtime/library/conf/TestOrderedPartitionedKVEdgeConfigurer.java,47,,"      OrderedPartitionedKVEdgeConfigurer.newBuilder(""KEY"", null, ""PARTITIONER"", null);"
135726,./TargetProjects/incubator-tez/tez-runtime-library/src/test/java/org/apache/tez/runtime/library/conf/TestOrderedPartitionedKVEdgeConfigurer.java,79,,"    assertEquals(""TestCodec"","
135727,./TargetProjects/incubator-tez/tez-runtime-library/src/test/java/org/apache/tez/runtime/library/conf/TestShuffledMergedInputConfiguration.java,40,,"      ShuffledMergedInputConfiguration.newBuilder(null, ""VALUE"");"
135728,./TargetProjects/incubator-tez/tez-runtime-library/src/test/java/org/apache/tez/runtime/library/conf/TestShuffledMergedInputConfiguration.java,47,,"      ShuffledMergedInputConfiguration.newBuilder(""KEY"", null);"
135729,./TargetProjects/incubator-tez/tez-runtime-library/src/test/java/org/apache/tez/runtime/library/conf/TestShuffledUnorderedKVInputConfiguration.java,40,,"      ShuffledUnorderedKVInputConfiguration.newBuilder(null, ""VALUE"");"
135730,./TargetProjects/incubator-tez/tez-runtime-library/src/test/java/org/apache/tez/runtime/library/conf/TestShuffledUnorderedKVInputConfiguration.java,47,,"      ShuffledUnorderedKVInputConfiguration.newBuilder(""KEY"", null);"
135731,./TargetProjects/incubator-tez/tez-runtime-library/src/test/java/org/apache/tez/runtime/library/conf/TestUnorderedPartitionedKVEdgeConfigurer.java,40,,"      UnorderedPartitionedKVEdgeConfigurer.newBuilder(null, ""VALUE"", ""PARTITIONER"", null);"
135732,./TargetProjects/incubator-tez/tez-runtime-library/src/test/java/org/apache/tez/runtime/library/conf/TestUnorderedPartitionedKVEdgeConfigurer.java,40,,"      UnorderedPartitionedKVEdgeConfigurer.newBuilder(null, ""VALUE"", ""PARTITIONER"", null);"
135733,./TargetProjects/incubator-tez/tez-runtime-library/src/test/java/org/apache/tez/runtime/library/conf/TestUnorderedPartitionedKVEdgeConfigurer.java,47,,"      UnorderedPartitionedKVEdgeConfigurer.newBuilder(""KEY"", null, ""PARTITIONER"", null);"
135734,./TargetProjects/incubator-tez/tez-runtime-library/src/test/java/org/apache/tez/runtime/library/conf/TestUnorderedPartitionedKVEdgeConfigurer.java,81,,"    assertEquals(""TestCodec"","
135735,./TargetProjects/incubator-tez/tez-runtime-library/src/test/java/org/apache/tez/runtime/library/conf/TestUnorderedUnpartitionedKVEdgeConfigurer.java,40,,"      UnorderedUnpartitionedKVEdgeConfigurer.newBuilder(null, ""VALUE"");"
135736,./TargetProjects/incubator-tez/tez-runtime-library/src/test/java/org/apache/tez/runtime/library/conf/TestUnorderedUnpartitionedKVEdgeConfigurer.java,47,,"      UnorderedUnpartitionedKVEdgeConfigurer.newBuilder(""KEY"", null);"
135737,./TargetProjects/incubator-tez/tez-runtime-library/src/test/java/org/apache/tez/runtime/library/conf/TestUnorderedUnpartitionedKVEdgeConfigurer.java,74,,"    assertEquals(""TestCodec"","
135738,./TargetProjects/incubator-tez/tez-tests/src/test/java/org/apache/tez/mapreduce/TestMRRJobs.java,77,,"      LOG.info(""MRAppJar "" + MiniTezCluster.APPJAR"
135739,./TargetProjects/incubator-tez/tez-tests/src/test/java/org/apache/tez/mapreduce/TestMRRJobs.java,78,,"               + "" not found. Not running test."");"
135740,./TargetProjects/incubator-tez/tez-tests/src/test/java/org/apache/tez/mapreduce/TestMRRJobsDAGApi.java,201,,"    Path relocPath = new Path(""/tmp/relocalizationfilefound"");"
135741,./TargetProjects/incubator-tez/tez-tests/src/test/java/org/apache/tez/test/TestFaultTolerance.java,180,,"        TestProcessor.TEZ_FAILING_PROCESSOR_FAILING_TASK_INDEX, ""v1""), ""0,1"");"
135742,./TargetProjects/incubator-tez/tez-tests/src/test/java/org/apache/tez/test/TestFaultTolerance.java,355,,"            TestProcessor.TEZ_FAILING_PROCESSOR_DO_FAIL, ""l3v1""), true);"
135743,./TargetProjects/incubator-tez/tez-tests/src/test/java/org/apache/tez/test/TestInput.java,145,,"                  "" index: "" + i + "" version: "" + lastInputReadyValue);"
135744,./TargetProjects/incubator-tez/tez-tests/src/test/java/org/apache/tez/test/TestProcessor.java,146,,"            "" dag: "" + processorContext.getDAGName());"
135745,./TargetProjects/incubator-tez/tez-tests/src/test/java/org/apache/tez/test/TestProcessor.java,181,,"            "" taskIndex: "" + processorContext.getTaskIndex() +"
135746,./TargetProjects/incubator-tez/tez-tests/src/test/java/org/apache/tez/test/TestProcessor.java,182,,"            "" taskAttempt: "" + processorContext.getTaskAttemptNumber();"
135747,./TargetProjects/incubator-tez/tez-tests/src/test/java/org/apache/tez/test/TestProcessor.java,191,,"            "" vertex: "" + processorContext.getTaskVertexName() +"
135748,./TargetProjects/incubator-tez/tez-tests/src/test/java/org/apache/tez/test/TestTezJobs.java,128,,"    DAG dag = new DAG(""TezSleepProcessor"");"
135749,./TargetProjects/incubator-tez/tez-tests/src/test/java/org/apache/tez/test/TestTezJobs.java,129,,"    Vertex vertex = new Vertex(""SleepVertex"", new ProcessorDescriptor("
135750,./TargetProjects/incubator-tez/tez-tests/src/test/java/org/apache/tez/test/TestTezJobs.java,147,,"      LOG.info(""Waiting for job to complete. Sleeping for 500ms."" + "" Current state: """
135751,./TargetProjects/incubator-tez/tez-tests/src/test/java/org/apache/tez/test/TestTezJobs.java,147,,"      LOG.info(""Waiting for job to complete. Sleeping for 500ms."" + "" Current state: """
135752,./TargetProjects/incubator-tubemq/inlong-agent/agent-common/src/test/java/org/apache/inlong/agent/conf/TestConfiguration.java,56,,"        assertEquals(""manager"", agentConf.get(""agent.conf.resource"", ""none""));"
135753,./TargetProjects/incubator-tubemq/inlong-agent/agent-common/src/test/java/org/apache/inlong/agent/db/TestBerkeleyDBImp.java,47,,"        KeyValueEntity entity = new KeyValueEntity(""test1"", ""testA"", ""test"");"
135754,./TargetProjects/incubator-tubemq/inlong-agent/agent-common/src/test/java/org/apache/inlong/agent/db/TestBerkeleyDBImp.java,47,,"        KeyValueEntity entity = new KeyValueEntity(""test1"", ""testA"", ""test"");"
135755,./TargetProjects/incubator-tubemq/inlong-agent/agent-common/src/test/java/org/apache/inlong/agent/db/TestBerkeleyDBImp.java,47,,"        KeyValueEntity entity = new KeyValueEntity(""test1"", ""testA"", ""test"");"
135756,./TargetProjects/incubator-tubemq/inlong-agent/agent-common/src/test/java/org/apache/inlong/agent/db/TestBerkeleyDBImp.java,93,,"        KeyValueEntity entity = new KeyValueEntity(""searchKey1"", ""searchResult1"", ""test"");"
135757,./TargetProjects/incubator-tubemq/inlong-agent/agent-core/src/test/java/org/apache/inlong/agent/core/TestCompletableFuture.java,56,,"                LOGGER.error(""ignore exception {}"", ex.getMessage());"
135758,./TargetProjects/incubator-tubemq/inlong-common/src/main/java/org/apache/inlong/commons/msg/TDMsgAttrBuilder.java,160,,"                SimpleDateFormat f = new SimpleDateFormat(""yyyyMMddHH"");"
135759,./TargetProjects/incubator-tubemq/inlong-common/src/main/java/org/apache/inlong/commons/msg/TDMsgAttrBuilder.java,323,,"                .setId(""interfaceid"").setTimeType(TimeType.S)"
135760,./TargetProjects/incubator-tubemq/inlong-dataproxy-sdk/src/main/java/org/apache/inlong/dataproxy/DefaultMessageSender.java,217,,"                return sender.syncSendMessage(new EncodeObject(body, ""bid="" + bid"
135761,./TargetProjects/incubator-tubemq/inlong-dataproxy-sdk/src/main/java/org/apache/inlong/dataproxy/DefaultMessageSender.java,218,,"                        + ""&tid="" + tid + ""&dt="" + dt + ""&cp=snappy"","
135762,./TargetProjects/incubator-tubemq/inlong-dataproxy-sdk/src/main/java/org/apache/inlong/dataproxy/DefaultMessageSender.java,218,,"                        + ""&tid="" + tid + ""&dt="" + dt + ""&cp=snappy"","
135763,./TargetProjects/incubator-tubemq/inlong-dataproxy-sdk/src/main/java/org/apache/inlong/dataproxy/DefaultMessageSender.java,218,,"                        + ""&tid="" + tid + ""&dt="" + dt + ""&cp=snappy"","
135764,./TargetProjects/incubator-tubemq/inlong-dataproxy-sdk/src/main/java/org/apache/inlong/dataproxy/DefaultMessageSender.java,251,,"            attrs.append(""&bid="").append(bid).append(""&tid="").append(tid).append(""&dt="").append(dt);"
135765,./TargetProjects/incubator-tubemq/inlong-dataproxy-sdk/src/main/java/org/apache/inlong/dataproxy/DefaultMessageSender.java,284,,"                        + ""&dt="" + dt + ""&cp=snappy"" + ""&cnt="" + bodyList.size(),"
135766,./TargetProjects/incubator-tubemq/inlong-dataproxy-sdk/src/main/java/org/apache/inlong/dataproxy/codec/ProtocolEncoder.java,86,,"                endAttr = endAttr + ""_userName="" + object.getUserName() + ""&_clientIP="" + Utils.getLocalIp()"
135767,./TargetProjects/incubator-tubemq/inlong-dataproxy-sdk/src/main/java/org/apache/inlong/dataproxy/codec/ProtocolEncoder.java,95,,"                endAttr = endAttr + ""msgUUID="" + object.getMsgUUID();"
135768,./TargetProjects/incubator-tubemq/inlong-dataproxy-sdk/src/main/java/org/apache/inlong/dataproxy/codec/ProtocolEncoder.java,101,,"            int totalLength = 1 + 4 + 1 + 4 + 2 + endAttr.getBytes(""utf8"").length + 2;"
135769,./TargetProjects/incubator-tubemq/inlong-dataproxy-sdk/src/main/java/org/apache/inlong/dataproxy/config/ProxyConfigManager.java,564,,"        if (localProxyAddrJson.has(""bsn"")) {"
135770,./TargetProjects/incubator-tubemq/inlong-dataproxy-sdk/src/main/java/org/apache/inlong/dataproxy/config/ProxyConfigManager.java,568,,"        if (!localProxyAddrJson.has(""switch"")) {"
135771,./TargetProjects/incubator-tubemq/inlong-dataproxy-sdk/src/main/java/org/apache/inlong/dataproxy/config/ProxyConfigManager.java,572,,"        if (localProxyAddrJson.has(""load"")) {"
135772,./TargetProjects/incubator-tubemq/inlong-dataproxy-sdk/src/main/java/org/apache/inlong/dataproxy/config/ProxyConfigManager.java,588,,"        if (localProxyAddrJson.has(""cluster_id"")) {"
135773,./TargetProjects/incubator-tubemq/inlong-dataproxy-sdk/src/main/java/org/apache/inlong/dataproxy/config/ProxyConfigManager.java,605,,"                if (!jsonItem.has(""port"")) {"
135774,./TargetProjects/incubator-tubemq/inlong-dataproxy-sdk/src/main/java/org/apache/inlong/dataproxy/config/ProxyConfigManager.java,606,,"                    throw new Exception(""Parse local proxyList failure: """
135775,./TargetProjects/incubator-tubemq/inlong-dataproxy-sdk/src/main/java/org/apache/inlong/dataproxy/config/ProxyConfigManager.java,614,,"                if (!jsonItem.has(""host"")) {"
135776,./TargetProjects/incubator-tubemq/inlong-dataproxy-sdk/src/main/java/org/apache/inlong/dataproxy/config/ProxyConfigManager.java,651,,"        if (!localProxyAddrJson.has(""size"")) {"
135777,./TargetProjects/incubator-tubemq/inlong-dataproxy-sdk/src/main/java/org/apache/inlong/dataproxy/config/ProxyConfigManager.java,659,,"        if (localProxyAddrJson.has(""isInterVisit"")) {"
135778,./TargetProjects/incubator-tubemq/inlong-dataproxy-sdk/src/main/java/org/apache/inlong/dataproxy/config/ProxyConfigManager.java,739,,"                            + i + "") for response from manager!"");"
135779,./TargetProjects/incubator-tubemq/inlong-dataproxy-sdk/src/main/java/org/apache/inlong/dataproxy/network/Sender.java,397,,"            throw new ProxysdkException(""ASYNC_CALLBACK_BUFFER_FULL"");"
135780,./TargetProjects/incubator-tubemq/inlong-dataproxy-sdk/src/main/java/org/apache/inlong/dataproxy/utils/EncryptUtil.java,79,,"            throw new Exception(""key error"");"
135781,./TargetProjects/incubator-tubemq/inlong-dataproxy-sdk/src/main/java/org/apache/inlong/dataproxy/utils/EncryptUtil.java,81,,"            throw new Exception(""npe error"");"
135782,./TargetProjects/incubator-tubemq/inlong-dataproxy-sdk/src/main/java/org/apache/inlong/dataproxy/utils/EncryptUtil.java,119,,"            KeyFactory keyFactory = KeyFactory.getInstance(""RSA"");"
135783,./TargetProjects/incubator-tubemq/inlong-dataproxy-sdk/src/main/java/org/apache/inlong/dataproxy/utils/EncryptUtil.java,123,,"            logger.error(""no such algorithm"", e);"
135784,./TargetProjects/incubator-tubemq/inlong-dataproxy/dataproxy-source/src/main/java/org/apache/inlong/dataproxy/source/DefaultServiceDecoder.java,248,,"                    + "";Connection info:"" + channel.toString()));"
135785,./TargetProjects/incubator-tubemq/inlong-dataproxy/dataproxy-source/src/main/java/org/apache/inlong/dataproxy/source/ServerMessageHandler.java,307,,"                commonAttrMap.put(SLA_METRIC_DATA, ""true"");"
135786,./TargetProjects/incubator-tubemq/inlong-dataproxy/dataproxy-source/src/main/java/org/apache/inlong/dataproxy/source/ServerMessageHandler.java,478,,"                                + remoteChannel + "";attr is "" + backAttrStr);"
135787,./TargetProjects/incubator-tubemq/inlong-manager/manager-api/src/main/java/org/apache/inlong/manager/web/auth/ShiroConfig.java,85,,"        pathDefinitions.put(""/anno/**/*"", ""anon"");"
135788,./TargetProjects/incubator-tubemq/inlong-manager/manager-api/src/main/java/org/apache/inlong/manager/web/config/ControllerExceptionHanlder.java,52,,"        log.error(""Failed to handle request on path:"" + request.getRequestURI()"
135789,./TargetProjects/incubator-tubemq/inlong-manager/manager-api/src/main/java/org/apache/inlong/manager/web/config/ControllerExceptionHanlder.java,53,,"                + (userDetail != null ? "", user:"" + userDetail.getUserName() : """"), e);"
135790,./TargetProjects/incubator-tubemq/inlong-manager/manager-api/src/main/java/org/apache/inlong/manager/web/controller/BusinessController.java,65,,"    @ApiImplicitParam(name = ""bid"", value = ""Business identifier"", dataTypeClass = String.class, required = true)"
135791,./TargetProjects/incubator-tubemq/inlong-manager/manager-api/src/main/java/org/apache/inlong/manager/web/controller/BusinessController.java,65,,"    @ApiImplicitParam(name = ""bid"", value = ""Business identifier"", dataTypeClass = String.class, required = true)"
135792,./TargetProjects/incubator-tubemq/inlong-manager/manager-api/src/main/java/org/apache/inlong/manager/web/controller/CommonDBServerController.java,116,,"            @ApiImplicitParam(name = ""visiblePerson"", value = ""Visible person list, separated by commas"","
135793,./TargetProjects/incubator-tubemq/inlong-manager/manager-api/src/main/java/org/apache/inlong/manager/web/controller/CommonDBServerController.java,142,,"            @ApiImplicitParam(name = ""visibleGroup"", value = ""Visible group list, separated by commas"","
135794,./TargetProjects/incubator-tubemq/inlong-manager/manager-api/src/main/java/org/apache/inlong/manager/web/controller/CommonFileServerController.java,138,,"            @ApiImplicitParam(name = ""visiblePerson"", value = ""Visible person list, separated by commas"","
135795,./TargetProjects/incubator-tubemq/inlong-manager/manager-api/src/main/java/org/apache/inlong/manager/web/controller/CommonFileServerController.java,164,,"            @ApiImplicitParam(name = ""visibleGroup"", value = ""Visible group list, separated by commas"","
135796,./TargetProjects/incubator-tubemq/inlong-manager/manager-api/src/main/java/org/apache/inlong/manager/web/controller/ConsumptionController.java,78,,"            @ApiParam(value = ""Consumption ID"", required = true) @PathVariable(name = ""id"") Integer id) {"
135797,./TargetProjects/incubator-tubemq/inlong-manager/manager-api/src/main/java/org/apache/inlong/manager/web/controller/WorkflowController.java,87,,"    @ApiImplicitParam(name = ""taskId"", value = ""Task ID"", dataTypeClass = Integer.class, required = true)"
135798,./TargetProjects/incubator-tubemq/inlong-manager/manager-api/src/main/java/org/apache/inlong/manager/web/controller/WorkflowController.java,87,,"    @ApiImplicitParam(name = ""taskId"", value = ""Task ID"", dataTypeClass = Integer.class, required = true)"
135799,./TargetProjects/incubator-tubemq/inlong-manager/manager-api/src/test/java/org/apache/inlong/manager/web/UtilsTest.java,51,,"        info.setModifier(""user2"");"
135800,./TargetProjects/incubator-tubemq/inlong-manager/manager-common/src/main/java/org/apache/inlong/manager/common/pojo/agent/AgentStatus.java,50,,"        @SerializedName(""taskId"")"
135801,./TargetProjects/incubator-tubemq/inlong-manager/manager-common/src/main/java/org/apache/inlong/manager/common/pojo/agent/AgentStatus.java,81,,"        @SerializedName(""dataTime"")"
135802,./TargetProjects/incubator-tubemq/inlong-manager/manager-common/src/main/java/org/apache/inlong/manager/common/util/JsonUtils.java,66,,"            log.error(""JSON transform error: "" + obj, e);"
135803,./TargetProjects/incubator-tubemq/inlong-manager/manager-common/src/main/java/org/apache/inlong/manager/common/util/JsonUtils.java,67,,"            throw new JsonException(""JSON transform error"");"
135804,./TargetProjects/incubator-tubemq/inlong-manager/manager-common/src/main/java/org/apache/inlong/manager/common/util/NetworkUtils.java,42,,"        if (StringUtils.isBlank(realIp) || ""unknown"".equalsIgnoreCase(realIp)) {"
135805,./TargetProjects/incubator-tubemq/inlong-manager/manager-dao/src/main/java/org/apache/inlong/manager/dao/entity/UserEntityExample.java,198,,"            addCriterion(""name ="", value, ""name"");"
135806,./TargetProjects/incubator-tubemq/inlong-manager/manager-dao/src/main/java/org/apache/inlong/manager/dao/entity/UserEntityExample.java,268,,"            addCriterion(""password ="", value, ""password"");"
135807,./TargetProjects/incubator-tubemq/inlong-manager/manager-dao/src/main/java/org/apache/inlong/manager/dao/entity/UserEntityExample.java,338,,"            addCriterion(""account_type ="", value, ""accountType"");"
135808,./TargetProjects/incubator-tubemq/inlong-manager/manager-dao/src/main/java/org/apache/inlong/manager/dao/entity/UserEntityExample.java,398,,"            addCriterion(""due_date ="", value, ""dueDate"");"
135809,./TargetProjects/incubator-tubemq/inlong-manager/manager-dao/src/main/java/org/apache/inlong/manager/dao/entity/UserEntityExample.java,458,,"            addCriterion(""create_time ="", value, ""createTime"");"
135810,./TargetProjects/incubator-tubemq/inlong-manager/manager-dao/src/main/java/org/apache/inlong/manager/dao/entity/UserEntityExample.java,518,,"            addCriterion(""update_time ="", value, ""updateTime"");"
135811,./TargetProjects/incubator-tubemq/inlong-manager/manager-dao/src/main/java/org/apache/inlong/manager/dao/entity/UserEntityExample.java,578,,"            addCriterion(""create_by ="", value, ""createBy"");"
135812,./TargetProjects/incubator-tubemq/inlong-manager/manager-dao/src/main/java/org/apache/inlong/manager/dao/entity/UserEntityExample.java,648,,"            addCriterion(""update_by ="", value, ""updateBy"");"
135813,./TargetProjects/incubator-tubemq/inlong-manager/manager-dao/src/main/java/org/apache/inlong/manager/dao/mapper/DataStreamEntityMapper.java,43,,"    DataStreamEntity selectByIdentifier(@Param(""bid"") String bid, @Param(""dsid"") String dsid);"
135814,./TargetProjects/incubator-tubemq/inlong-manager/manager-dao/src/main/java/org/apache/inlong/manager/dao/mapper/DataStreamEntityMapper.java,43,,"    DataStreamEntity selectByIdentifier(@Param(""bid"") String bid, @Param(""dsid"") String dsid);"
135815,./TargetProjects/incubator-tubemq/inlong-manager/manager-dao/src/main/java/org/apache/inlong/manager/dao/mapper/DataStreamExtEntityMapper.java,40,,"    List<DataStreamExtEntity> selectByIdentifier(@Param(""bid"") String bid, @Param(""dsid"") String dsid);"
135816,./TargetProjects/incubator-tubemq/inlong-manager/manager-dao/src/main/java/org/apache/inlong/manager/dao/mapper/DataStreamExtEntityMapper.java,40,,"    List<DataStreamExtEntity> selectByIdentifier(@Param(""bid"") String bid, @Param(""dsid"") String dsid);"
135817,./TargetProjects/incubator-tubemq/inlong-manager/manager-dao/src/main/java/org/apache/inlong/manager/dao/mapper/DataStreamFieldEntityMapper.java,40,,"    List<DataStreamFieldEntity> selectByIdentifier(@Param(""bid"") String bid, @Param(""dsid"") String dsid);"
135818,./TargetProjects/incubator-tubemq/inlong-manager/manager-dao/src/main/java/org/apache/inlong/manager/dao/mapper/DataStreamFieldEntityMapper.java,40,,"    List<DataStreamFieldEntity> selectByIdentifier(@Param(""bid"") String bid, @Param(""dsid"") String dsid);"
135819,./TargetProjects/incubator-tubemq/inlong-manager/manager-dao/src/main/java/org/apache/inlong/manager/dao/mapper/SourceFileDetailEntityMapper.java,53,,"    Integer selectDetailExist(@Param(""bid"") String bid, @Param(""dsid"") String dsid, @Param(""ip"") String ip,"
135820,./TargetProjects/incubator-tubemq/inlong-manager/manager-dao/src/main/java/org/apache/inlong/manager/dao/mapper/SourceFileDetailEntityMapper.java,53,,"    Integer selectDetailExist(@Param(""bid"") String bid, @Param(""dsid"") String dsid, @Param(""ip"") String ip,"
135821,./TargetProjects/incubator-tubemq/inlong-manager/manager-dao/src/main/java/org/apache/inlong/manager/dao/mapper/StorageHiveEntityMapper.java,57,,"    List<StorageHiveEntity> selectByIdentifier(@Param(""bid"") String bid, @Param(""dsid"") String dsid);"
135822,./TargetProjects/incubator-tubemq/inlong-manager/manager-openapi/src/main/java/org/apache/inlong/manager/openapi/config/ControllerExceptionHandler.java,50,,"                + (userDetail != null ? "", user: "" + userDetail.getUserName() : """"), e);"
135823,./TargetProjects/incubator-tubemq/inlong-manager/manager-service/src/main/java/org/apache/inlong/manager/service/core/impl/CommonDBServerServiceImpl.java,141,,"                            + ""] length is "" + commonDbServerInfo.getConnectionName().length() + "" and too large, """
135824,./TargetProjects/incubator-tubemq/inlong-manager/manager-service/src/main/java/org/apache/inlong/manager/service/core/impl/CommonDBServerServiceImpl.java,141,,"                            + ""] length is "" + commonDbServerInfo.getConnectionName().length() + "" and too large, """
135825,./TargetProjects/incubator-tubemq/inlong-manager/manager-service/src/main/java/org/apache/inlong/manager/service/core/impl/CommonDBServerServiceImpl.java,179,,"                            + ""The maximum size for the field length is 1024."");"
135826,./TargetProjects/incubator-tubemq/inlong-manager/manager-service/src/main/java/org/apache/inlong/manager/service/core/impl/CommonDBServerServiceImpl.java,192,,"        Preconditions.checkNotNull(entity, ""CommonDbServerEntity not found by id="" + id);"
135827,./TargetProjects/incubator-tubemq/inlong-manager/manager-service/src/main/java/org/apache/inlong/manager/service/core/impl/CommonDBServerServiceImpl.java,193,,"        Preconditions.checkTrue(entity.getIsDeleted() == 0, ""CommonDbServerEntity has been deleted, id="" + id);"
135828,./TargetProjects/incubator-tubemq/inlong-manager/manager-service/src/main/java/org/apache/inlong/manager/service/core/impl/CommonDBServerServiceImpl.java,201,,"                    + "", please contact "" + entity.getCreator());"
135829,./TargetProjects/incubator-tubemq/inlong-manager/manager-service/src/main/java/org/apache/inlong/manager/service/core/impl/CommonDBServerServiceImpl.java,228,,"        Preconditions.checkTrue(success == 1, ""DataBase delete id = "" + id + "" failed "");"
135830,./TargetProjects/incubator-tubemq/inlong-manager/manager-service/src/main/java/org/apache/inlong/manager/service/core/impl/CommonDBServerServiceImpl.java,247,,"                    entity.getId() + "" username="" + entity.getUsername() + "" can not be updated."");"
135831,./TargetProjects/incubator-tubemq/inlong-manager/manager-service/src/main/java/org/apache/inlong/manager/service/core/impl/CommonDBServerServiceImpl.java,378,,"        Preconditions.checkTrue(success == 1, ""DataBase update for id = "" + entity.getId() + "" failed "");"
135832,./TargetProjects/incubator-tubemq/inlong-manager/manager-service/src/main/java/org/apache/inlong/manager/service/core/impl/CommonFileServerServiceImpl.java,132,,"                    + ""] length is "" + commonFileServerInfo.getAccessType().length() + "" and too large, """
135833,./TargetProjects/incubator-tubemq/inlong-manager/manager-service/src/main/java/org/apache/inlong/manager/service/core/impl/CommonFileServerServiceImpl.java,132,,"                    + ""] length is "" + commonFileServerInfo.getAccessType().length() + "" and too large, """
135834,./TargetProjects/incubator-tubemq/inlong-manager/manager-service/src/main/java/org/apache/inlong/manager/service/core/impl/CommonFileServerServiceImpl.java,154,,"                            + ""The maximum size for the field length is 1024."");"
135835,./TargetProjects/incubator-tubemq/inlong-manager/manager-service/src/main/java/org/apache/inlong/manager/service/core/impl/CommonFileServerServiceImpl.java,167,,"        Preconditions.checkNotNull(entity, ""CommonFileServerEntity not found by id="" + id);"
135836,./TargetProjects/incubator-tubemq/inlong-manager/manager-service/src/main/java/org/apache/inlong/manager/service/core/impl/CommonFileServerServiceImpl.java,168,,"        Preconditions.checkTrue(entity.getIsDeleted() == 0, ""CommonFileServerEntity has been deleted, id="" + id);"
135837,./TargetProjects/incubator-tubemq/inlong-manager/manager-service/src/main/java/org/apache/inlong/manager/service/core/impl/CommonFileServerServiceImpl.java,176,,"                    + "", please contact "" + entity.getCreator());"
135838,./TargetProjects/incubator-tubemq/inlong-manager/manager-service/src/main/java/org/apache/inlong/manager/service/core/impl/CommonFileServerServiceImpl.java,202,,"        Preconditions.checkTrue(success == 1, ""DataBase delete id = "" + id + "" failed "");"
135839,./TargetProjects/incubator-tubemq/inlong-manager/manager-service/src/main/java/org/apache/inlong/manager/service/core/impl/CommonFileServerServiceImpl.java,402,,"        Preconditions.checkTrue(success == 1, ""DataBase update for id = "" + entity.getId() + "" failed "");"
135840,./TargetProjects/incubator-tubemq/inlong-manager/manager-service/src/main/java/org/apache/inlong/manager/service/core/impl/DataStorageServiceImpl.java,47,,"        System.out.println(""Running: "" + sql);"
135841,./TargetProjects/incubator-tubemq/inlong-manager/manager-service/src/main/java/org/apache/inlong/manager/service/core/impl/DataStreamServiceImpl.java,99,,"        Preconditions.checkNotNull(dataStreamInfo, ""data stream info is empty"");"
135842,./TargetProjects/incubator-tubemq/inlong-manager/manager-service/src/main/java/org/apache/inlong/manager/service/core/impl/StorageServiceImpl.java,78,,"        Preconditions.checkNotNull(storageType, ""storageType is empty"");"
135843,./TargetProjects/incubator-tubemq/inlong-manager/manager-service/src/main/java/org/apache/inlong/manager/service/core/impl/StorageServiceImpl.java,84,,"            LOGGER.error(""the storageType={} not support"", storageType);"
135844,./TargetProjects/incubator-tubemq/inlong-manager/manager-workflow-engine/src/main/java/org/apache/inlong/manager/workflow/model/view/EventLogQuery.java,79,,"    @DateTimeFormat(pattern = ""yyyy-MM-dd HH:mm:ss"")"
135845,./TargetProjects/incubator-tubemq/inlong-manager/manager-workflow-engine/src/main/java/org/apache/inlong/manager/workflow/model/view/ProcessQuery.java,67,,"    @DateTimeFormat(pattern = ""yyyy-MM-dd HH:mm:ss"")"
135846,./TargetProjects/incubator-tubemq/inlong-manager/manager-workflow-engine/src/main/java/org/apache/inlong/manager/workflow/model/view/ProcessSummaryQuery.java,49,,"    @DateTimeFormat(pattern = ""yyyy-MM-dd HH:mm:ss"")"
135847,./TargetProjects/incubator-tubemq/inlong-manager/manager-workflow-engine/src/main/java/org/apache/inlong/manager/workflow/model/view/TaskQuery.java,73,,"    @DateTimeFormat(pattern = ""yyyy-MM-dd HH:mm:ss"")"
135848,./TargetProjects/incubator-tubemq/inlong-manager/manager-workflow-engine/src/main/java/org/apache/inlong/manager/workflow/model/view/TaskSummaryQuery.java,61,,"    @DateTimeFormat(pattern = ""yyyy-MM-dd HH:mm:ss"")"
135849,./TargetProjects/incubator-tubemq/inlong-sort/sort-common/src/main/java/org/apache/inlong/sort/protocol/sink/HiveSinkInfo.java,135,,"        @JsonProperty(""field_name"")"
135850,./TargetProjects/incubator-tubemq/inlong-sort/sort-common/src/main/java/org/apache/inlong/sort/protocol/sink/HiveSinkInfo.java,191,,"        @JsonProperty(""splitter"")"
135851,./TargetProjects/incubator-tubemq/inlong-sort/sort-common/src/main/java/org/apache/inlong/sort/util/InstantiationUtil.java,70,,"    @SuppressWarnings(""unchecked"")"
135852,./TargetProjects/incubator-tubemq/inlong-sort/sort-common/src/test/java/org/apache/inlong/sort/configuration/ConfigOptionTest.java,44,,"                .key(""key"")"
135853,./TargetProjects/incubator-tubemq/inlong-sort/sort-common/src/test/java/org/apache/inlong/sort/configuration/ConfigOptionTest.java,46,,"                .withDeprecatedKeys(""deprecated1"", ""deprecated2"");"
135854,./TargetProjects/incubator-tubemq/inlong-sort/sort-common/src/test/java/org/apache/inlong/sort/configuration/ConfigOptionTest.java,46,,"                .withDeprecatedKeys(""deprecated1"", ""deprecated2"");"
135855,./TargetProjects/incubator-tubemq/inlong-sort/sort-common/src/test/java/org/apache/inlong/sort/configuration/ConfigOptionTest.java,59,,"                .withFallbackKeys(""fallback1"", ""fallback2"");"
135856,./TargetProjects/incubator-tubemq/inlong-sort/sort-common/src/test/java/org/apache/inlong/sort/configuration/ConfigurationTest.java,87,,"            pc.setInteger(""int"", 5);"
135857,./TargetProjects/incubator-tubemq/inlong-sort/sort-common/src/test/java/org/apache/inlong/sort/configuration/ConfigurationTest.java,88,,"            pc.setLong(""long"", 15);"
135858,./TargetProjects/incubator-tubemq/inlong-sort/sort-common/src/test/java/org/apache/inlong/sort/configuration/ConfigurationTest.java,89,,"            pc.setLong(""too_long"", TOO_LONG);"
135859,./TargetProjects/incubator-tubemq/inlong-sort/sort-common/src/test/java/org/apache/inlong/sort/configuration/ConfigurationTest.java,90,,"            pc.setFloat(""float"", 2.1456775f);"
135860,./TargetProjects/incubator-tubemq/inlong-sort/sort-common/src/test/java/org/apache/inlong/sort/configuration/ConfigurationTest.java,91,,"            pc.setDouble(""double"", Math.PI);"
135861,./TargetProjects/incubator-tubemq/inlong-sort/sort-common/src/test/java/org/apache/inlong/sort/configuration/ConfigurationTest.java,92,,"            pc.setDouble(""negative_double"", -1.0);"
135862,./TargetProjects/incubator-tubemq/inlong-sort/sort-common/src/test/java/org/apache/inlong/sort/configuration/ConfigurationTest.java,93,,"            pc.setDouble(""zero"", 0.0);"
135863,./TargetProjects/incubator-tubemq/inlong-sort/sort-common/src/test/java/org/apache/inlong/sort/configuration/ConfigurationTest.java,94,,"            pc.setDouble(""too_long_double"", TOO_LONG_DOUBLE);"
135864,./TargetProjects/incubator-tubemq/inlong-sort/sort-common/src/test/java/org/apache/inlong/sort/configuration/ConfigurationTest.java,95,,"            pc.setString(""string"", ""42"");"
135865,./TargetProjects/incubator-tubemq/inlong-sort/sort-common/src/test/java/org/apache/inlong/sort/configuration/ConfigurationTest.java,96,,"            pc.setString(""non_convertible_string"", ""bcdefg&&"");"
135866,./TargetProjects/incubator-tubemq/inlong-sort/sort-common/src/test/java/org/apache/inlong/sort/configuration/ConfigurationTest.java,97,,"            pc.setBoolean(""boolean"", true);"
135867,./TargetProjects/incubator-tubemq/inlong-sort/sort-common/src/test/java/org/apache/inlong/sort/configuration/ConfigurationTest.java,225,,"        cfg.setString(""string-key"", ""abc"");"
135868,./TargetProjects/incubator-tubemq/inlong-sort/sort-common/src/test/java/org/apache/inlong/sort/configuration/ConfigurationTest.java,225,,"        cfg.setString(""string-key"", ""abc"");"
135869,./TargetProjects/incubator-tubemq/inlong-sort/sort-common/src/test/java/org/apache/inlong/sort/configuration/ConfigurationTest.java,228,,"                .defaultValue(""my-beautiful-default"");"
135870,./TargetProjects/incubator-tubemq/inlong-sort/sort-common/src/test/java/org/apache/inlong/sort/configuration/ConfigurationTest.java,248,,"        assertEquals(""override"", cfg.getString(stringOption, ""override""));"
135871,./TargetProjects/incubator-tubemq/inlong-sort/sort-common/src/test/java/org/apache/inlong/sort/configuration/ConfigurationTest.java,281,,"        cfg.setInteger(""the-key"", 11);"
135872,./TargetProjects/incubator-tubemq/inlong-sort/sort-common/src/test/java/org/apache/inlong/sort/configuration/ConfigurationTest.java,282,,"        cfg.setInteger(""old-key"", 12);"
135873,./TargetProjects/incubator-tubemq/inlong-sort/sort-common/src/test/java/org/apache/inlong/sort/configuration/ConfigurationTest.java,283,,"        cfg.setInteger(""older-key"", 13);"
135874,./TargetProjects/incubator-tubemq/inlong-sort/sort-common/src/test/java/org/apache/inlong/sort/configuration/ConfigurationTest.java,291,,"                .key(""does-not-exist"")"
135875,./TargetProjects/incubator-tubemq/inlong-sort/sort-core/src/main/java/org/apache/inlong/sort/flink/hive/formats/ParquetSchemaConverter.java,122,,"                            throw new UnsupportedOperationException(""Unsupported original type : """
135876,./TargetProjects/incubator-tubemq/inlong-sort/sort-core/src/main/java/org/apache/inlong/sort/meta/MetaManager.java,127,,"                    LOG.warn(""Error happens when notifying listener data flow updated"", e);"
135877,./TargetProjects/incubator-tubemq/inlong-sort/sort-core/src/test/java/org/apache/inlong/sort/flink/transformation/RecordTransformerTest.java,48,,"        final FieldInfo field1 = new FieldInfo(""field1"", new LongFormatInfo());"
135878,./TargetProjects/incubator-tubemq/inlong-sort/sort-core/src/test/java/org/apache/inlong/sort/flink/transformation/RecordTransformerTest.java,49,,"        final FieldInfo field2 = new FieldInfo(""field2"", new StringFormatInfo());"
135879,./TargetProjects/incubator-tubemq/inlong-sort/sort-core/src/test/java/org/apache/inlong/sort/flink/transformation/RecordTransformerTest.java,55,,"        row.setField(1, ""9527"");"
135880,./TargetProjects/incubator-tubemq/inlong-sort/sort-core/src/test/java/org/apache/inlong/sort/flink/tubemq/MultiTenancyTubeConsumerTest.java,56,,"        topicToOffset.put(""topic"", new HashMap<>());"
135881,./TargetProjects/incubator-tubemq/inlong-sort/sort-core/src/test/java/org/apache/inlong/sort/flink/tubemq/MultiTenancyTubeConsumerTest.java,209,,"            throw new UnsupportedOperationException(""Not implemented"");"
135882,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-base/src/test/java/org.apache.inlong.sort.formats.base/TableFormatUtilsTest.java,42,,"                        ""data"","
135883,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-base/src/test/java/org.apache.inlong.sort.formats.base/TableFormatUtilsTest.java,85,,"                        ""n/a"""
135884,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-common/src/test/java/org/apache/inlong/sort/formats/common/DateFormatInfoTest.java,41,,"        Date date = Date.valueOf(""2020-03-22"");"
135885,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-common/src/test/java/org/apache/inlong/sort/formats/common/DecimalFormatInfoTest.java,41,,"                ""1111.0000000000000000000000001"","
135886,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-common/src/test/java/org/apache/inlong/sort/formats/common/StringFormatInfoTest.java,39,,"        assertEquals(""123"", StringFormatInfo.INSTANCE.serialize(""123""));"
135887,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-common/src/test/java/org/apache/inlong/sort/formats/common/TimeFormatInfoTest.java,41,,"        Time time = Time.valueOf(""11:12:13"");"
135888,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-common/src/test/java/org/apache/inlong/sort/formats/common/TimestampFormatInfoTest.java,41,,"        Timestamp timestamp = Timestamp.valueOf(""2020-03-22 11:12:13"");"
135889,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-csv/src/test/java/org/apache/inlong/sort/formats/csv/CsvDeserializationSchemaTest.java,114,,"                Row.of(10, ""field1"", ""field2"", ""field3""),"
135890,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-csv/src/test/java/org/apache/inlong/sort/formats/csv/CsvDeserializationSchemaTest.java,114,,"                Row.of(10, ""field1"", ""field2"", ""field3""),"
135891,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-csv/src/test/java/org/apache/inlong/sort/formats/csv/CsvDeserializationSchemaTest.java,114,,"                Row.of(10, ""field1"", ""field2"", ""field3""),"
135892,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-csv/src/test/java/org/apache/inlong/sort/formats/csv/CsvFormatFactoryTest.java,56,,"                    new String[]{""student_name"", ""score"", ""date""},"
135893,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-csv/src/test/java/org/apache/inlong/sort/formats/csv/CsvFormatFactoryTest.java,56,,"                    new String[]{""student_name"", ""score"", ""date""},"
135894,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-csv/src/test/java/org/apache/inlong/sort/formats/csv/CsvFormatFactoryTest.java,56,,"                    new String[]{""student_name"", ""score"", ""date""},"
135895,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-csv/src/test/java/org/apache/inlong/sort/formats/csv/CsvFormatFactoryTest.java,96,,"                        .nullLiteral(""null"")"
135896,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-csv/src/test/java/org/apache/inlong/sort/formats/csv/CsvSerializationSchemaTest.java,113,,"                Row.of(10, ""field1"", ""field2"", ""field3""),"
135897,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-csv/src/test/java/org/apache/inlong/sort/formats/csv/CsvSerializationSchemaTest.java,113,,"                Row.of(10, ""field1"", ""field2"", ""field3""),"
135898,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-kv/src/test/java/org/apache/inlong/sort/formats/kv/KvDeserializationSchemaTest.java,126,,"                Row.of(10, ""field1&field2"", ""field3"", ""field4""),"
135899,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-kv/src/test/java/org/apache/inlong/sort/formats/kv/KvDeserializationSchemaTest.java,131,,"                Row.of(10, ""field1\\"", ""field2"", ""field3""),"
135900,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-kv/src/test/java/org/apache/inlong/sort/formats/kv/KvFormatFactoryTest.java,56,,"                    new String[]{""student_name"", ""score"", ""date""},"
135901,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-kv/src/test/java/org/apache/inlong/sort/formats/kv/KvFormatFactoryTest.java,56,,"                    new String[]{""student_name"", ""score"", ""date""},"
135902,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-kv/src/test/java/org/apache/inlong/sort/formats/kv/KvFormatFactoryTest.java,56,,"                    new String[]{""student_name"", ""score"", ""date""},"
135903,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-kv/src/test/java/org/apache/inlong/sort/formats/kv/KvFormatFactoryTest.java,97,,"                        .nullLiteral(""null"")"
135904,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-kv/src/test/java/org/apache/inlong/sort/formats/kv/KvSerializationSchemaTest.java,113,,"                Row.of(10, ""field1"", ""field2"", ""field3""),"
135905,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-kv/src/test/java/org/apache/inlong/sort/formats/kv/KvSerializationSchemaTest.java,113,,"                Row.of(10, ""field1"", ""field2"", ""field3""),"
135906,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-tdmsg-base/src/main/java/org/apache/inlong/sort/formats/tdmsg/TDMsgUtils.java,200,,"    @SuppressWarnings(""unchecked"")"
135907,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-tdmsg-csv/src/test/java/org/apache/inlong/sort/formats/tdmsgcsv/TDMsgCsvFormatDeserializerTest.java,101,,"        String attrs = ""m=0&iname=testInterfaceId&t=20200322&__addcol1__=1&__addcol2__=2"";"
135908,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-tdmsg-csv/src/test/java/org/apache/inlong/sort/formats/tdmsgcsv/TDMsgCsvFormatDeserializerTest.java,109,,"        expectedAttributes.put(""iname"", ""testInterfaceId"");"
135909,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-tdmsg-csv/src/test/java/org/apache/inlong/sort/formats/tdmsgcsv/TDMsgCsvFormatDeserializerTest.java,109,,"        expectedAttributes.put(""iname"", ""testInterfaceId"");"
135910,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-tdmsg-csv/src/test/java/org/apache/inlong/sort/formats/tdmsgcsv/TDMsgCsvFormatDeserializerTest.java,110,,"        expectedAttributes.put(""t"", ""20200322"");"
135911,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-tdmsg-csv/src/test/java/org/apache/inlong/sort/formats/tdmsgcsv/TDMsgCsvFormatDeserializerTest.java,111,,"        expectedAttributes.put(""__addcol1__"", ""1"");"
135912,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-tdmsg-csv/src/test/java/org/apache/inlong/sort/formats/tdmsgcsv/TDMsgCsvFormatDeserializerTest.java,112,,"        expectedAttributes.put(""__addcol2__"", ""2"");"
135913,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-tdmsg-csv/src/test/java/org/apache/inlong/sort/formats/tdmsgcsv/TDMsgCsvFormatDeserializerTest.java,115,,"                Timestamp.valueOf(""2020-03-22 00:00:00""),"
135914,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-tdmsg-csv/src/test/java/org/apache/inlong/sort/formats/tdmsgcsv/TDMsgCsvFormatDeserializerTest.java,120,,"                ""field11"","
135915,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-tdmsg-csv/src/test/java/org/apache/inlong/sort/formats/tdmsgcsv/TDMsgCsvFormatDeserializerTest.java,121,,"                ""field12"","
135916,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-tdmsg-csv/src/test/java/org/apache/inlong/sort/formats/tdmsgcsv/TDMsgCsvFormatDeserializerTest.java,131,,"                ""field21"","
135917,./TargetProjects/incubator-tubemq/inlong-sort/sort-formats/format-tdmsg-csv/src/test/java/org/apache/inlong/sort/formats/tdmsgcsv/TDMsgCsvFormatDeserializerTest.java,133,,"                ""field23"""
135918,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-client/src/main/java/org/apache/inlong/tubemq/client/consumer/BaseMessageConsumer.java,296,,"                throw new TubeClientException(""Duplicated completeSubscribe call!"");"
135919,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-client/src/main/java/org/apache/inlong/tubemq/client/factory/TubeSingleSessionFactory.java,61,,"            throw new TubeClientException(""Please initialize the object first!"");"
135920,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-client/src/main/java/org/apache/inlong/tubemq/client/producer/SimpleMessageProducer.java,108,,"            throw new TubeClientException(""Status error: producer has been shutdown!"");"
135921,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-client/src/test/java/org/apache/inlong/tubemq/client/consumer/RmtDataCacheTest.java,41,,"        Partition expectPartition = new Partition(brokerInfo, ""test"", 1);"
135922,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-connectors/tubemq-connector-flink/src/main/java/org/apache/flink/connectors/tubemq/TubemqTableSourceSinkFactory.java,98,,"        properties.add(SCHEMA + "".#."" + SCHEMA_TYPE);"
135923,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-connectors/tubemq-connector-flink/src/test/java/org/apache/flink/connectors/tubemq/TubemqTest.java,42,,"                .master(""localhost:9001"")"
135924,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-core/src/main/java/org/apache/inlong/tubemq/corebase/policies/FlowCtrlItem.java,159,,"                        .append(String.format(""%02d"", this.startTime / 100))"
135925,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-core/src/main/java/org/apache/inlong/tubemq/corebase/policies/FlowCtrlRuleHandler.java,341,,"                int typeVal = jsonObject.get(""type"").getAsInt();"
135926,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-core/src/main/java/org/apache/inlong/tubemq/corebase/policies/FlowCtrlRuleHandler.java,404,,"                        .append(index).append("") of data limit rule!"").toString());"
135927,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-core/src/main/java/org/apache/inlong/tubemq/corebase/policies/FlowCtrlRuleHandler.java,429,,"            if (!ruleObject.has(""freqInMs"")) {"
135928,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-core/src/main/java/org/apache/inlong/tubemq/corebase/policies/FlowCtrlRuleHandler.java,480,,"                        .append(index).append("") of freq limit rule!"").toString());"
135929,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-core/src/main/java/org/apache/inlong/tubemq/corebase/policies/FlowCtrlRuleHandler.java,547,,"                            .append(index).append("") of low fetch limit rule!"").toString());"
135930,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-core/src/main/java/org/apache/inlong/tubemq/corebase/policies/FlowCtrlRuleHandler.java,613,,"                    + ruleType + "" limit rule!"");"
135931,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-core/src/main/java/org/apache/inlong/tubemq/corerpc/utils/MixUtils.java,36,,"                return className.replace(""org.apache.inlong.tubemq."", ""com.tencent.tubemq."");"
135932,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-core/src/test/java/org/apache/inlong/tubemq/corebase/utils/ConcurrentHashSetTest.java,35,,"        testSet.add(""test-2"");"
135933,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-manager/src/main/java/org/apache/inlong/tubemq/manager/service/TopicServiceImpl.java,123,,"            return TubeMQResult.errorResult(""no such cluster"");"
135934,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-manager/src/test/java/org/apache/inlong/tubemq/manager/controller/TestClusterController.java,88,,"        log.info(""result json string is {}, response type is {}"", resultStr,"
135935,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/broker/BrokerConfig.java,204,,"                    .append(SECT_TOKEN_BROKER).append("" section!"").toString());"
135936,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/broker/BrokerServiceServer.java,386,,"                builder.setErrMsg(""OK!"");"
135937,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/broker/BrokerServiceServer.java,516,,"                            .append(topicName).append("")!\""}"");"
135938,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/broker/TubeBroker.java,352,,"                    .append("",configCheckSumId="").append(response.getConfCheckSumId())"
135939,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/broker/TubeBroker.java,356,,"                    .append("",brokerDefaultConfInfo="")"
135940,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/broker/TubeBroker.java,358,,"                    .append("",brokerTopicSetConfList="")"
135941,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/broker/msgstore/MessageStore.java,176,,"                    .append(""[Data Store] Closed MessageStore for storeKey "")"
135942,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/broker/msgstore/MessageStore.java,657,,"                            .append(""[Data Store] StoreKey="").append(storeKey)"
135943,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/broker/offset/DefaultOffsetManager.java,149,,"                .append("",group="").append(group).append("",topic="").append(topic)"
135944,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/broker/offset/DefaultOffsetManager.java,149,,"                .append("",group="").append(group).append("",topic="").append(topic)"
135945,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/broker/offset/DefaultOffsetManager.java,150,,"                .append("",partitionId="").append(partitionId).toString());"
135946,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/broker/utils/DiskSamplePrint.java,89,,"                            .append(storeKey).append("", partitionId="").append(partitionId).toString(), e);"
135947,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/broker/web/BrokerAdminServlet.java,108,,"        sBuilder.append(""{\""result\"":true,\""errCode\"":0,\""errMsg\"":\""Success!\"",\""dataSet\"":["");"
135948,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/broker/web/BrokerAdminServlet.java,114,,"                    .append("",\""method\"":\"""").append(method).append(""\""}"");"
135949,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/broker/web/BrokerAdminServlet.java,116,,"        sBuilder.append(""],\""totalCnt\"":"").append(index).append(""}"");"
135950,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/broker/web/BrokerAdminServlet.java,376,,"            sBuilder.append(""{\""result\"":false,\""errCode\"":400,\""errMsg\"":\"""")"
135951,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/broker/web/BrokerAdminServlet.java,869,,"                    new StringBuilder(512).append(""Parameter "")"
135952,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/common/fielddef/WebFieldDef.java,35,,"    GROUPNAME(1, ""groupName"", ""group"", WebFieldType.STRING,"
135953,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/common/fielddef/WebFieldDef.java,36,,"            ""Group name"", TBaseConstants.META_MAX_GROUPNAME_LENGTH,"
135954,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/common/fielddef/WebFieldDef.java,69,,"    BROKERID(14, ""brokerId"", ""brokerId"", WebFieldType.INT,"
135955,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/common/fielddef/WebFieldDef.java,94,,"    MAXMSGSIZE(24, ""maxMsgSizeInMB"", ""maxMsgSizeInMB"", WebFieldType.INT,"
135956,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/common/fielddef/WebFieldDef.java,114,,"    REGIONID(31, ""regionId"", ""regionId"", WebFieldType.INT,"
135957,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/common/paramcheck/PBParameterUtils.java,269,,"                strBuffer.append(""[Inconsistency subscribe] "").append(inConsumerInfo.getConsumerId())"
135958,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/common/utils/WebParameterUtils.java,72,,"                    .append(""the value of "").append(paramName)"
135959,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/common/utils/WebParameterUtils.java,123,,"                    .append(paramName).append("" parameter"").toString());"
135960,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/common/utils/WebParameterUtils.java,173,,"                throw new Exception(new StringBuilder(512).append(""the max length of "")"
135961,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/common/utils/WebParameterUtils.java,174,,"                        .append(paramName).append("" parameter is "")"
135962,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/common/utils/WebParameterUtils.java,175,,"                        .append(paramMaxLen).append("" characters"").toString());"
135963,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/common/utils/WebParameterUtils.java,269,,"                    .append(""Parameter "").append(fieldDef.name)"
135964,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/common/utils/WebParameterUtils.java,941,,"                    throw new Exception(sb.append(""Illegal value: the max length of "")"
135965,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/common/utils/WebParameterUtils.java,948,,"                    throw new Exception(sb.append(""Illegal value: the value of "")"
135966,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/master/MasterConfig.java,292,,"                    .append("" section!"").toString());"
135967,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/master/TMaster.java,359,,"            .append("", isOverTLS="").append(overtls)"
135968,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/master/TMaster.java,363,,"        builder.setErrMsg(""OK!"");"
135969,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/master/TMaster.java,1059,,"            .append("",checksumId="").append(request.getConfCheckSumId()).toString());"
135970,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/master/balance/DefaultLoadBalancer.java,143,,"                                .append(group).append("")'s consumer getCachedSize("")"
135971,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/master/utils/BdbStoreSamplePrint.java,59,,"                        logger.error(sBuilder.append(""[BDB Error] Connect to node:["")"
135972,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/master/web/handler/WebAdminFlowRuleHandler.java,481,,"                        .append(""Illegal value in "").append(WebFieldDef.COMPSGROUPNAME.name)"
135973,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/master/web/handler/WebAdminGroupCtrlHandler.java,114,,"                    req.getParameter(""confModAuthToken""));"
135974,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/master/web/handler/WebAdminGroupCtrlHandler.java,116,,"                    WebParameterUtils.validStringParameter(""createUser"","
135975,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/master/web/handler/WebAdminGroupCtrlHandler.java,121,,"                    WebParameterUtils.validDateParameter(""createDate"","
135976,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/master/web/handler/WebAdminGroupCtrlHandler.java,126,,"                    WebParameterUtils.validStringParameter(""topicName"","
135977,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/master/web/handler/WebAdminGroupCtrlHandler.java,137,,"                    WebParameterUtils.validIntDataParameter(""condStatus"","
135978,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/master/web/handler/WebAdminGroupCtrlHandler.java,141,,"                WebParameterUtils.validGroupParameter(""groupName"","
135979,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/master/web/handler/WebAdminGroupCtrlHandler.java,146,,"                    WebParameterUtils.checkAndGetFilterConds(req.getParameter(""filterConds""), true, sBuilder);"
135980,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/master/web/handler/WebAdminGroupCtrlHandler.java,176,,"            sBuilder.append(""{\""result\"":true,\""errCode\"":0,\""errMsg\"":\""OK\""}"");"
135981,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/master/web/handler/WebAdminGroupCtrlHandler.java,179,,"            sBuilder.append(""{\""result\"":false,\""errCode\"":400,\""errMsg\"":\"""")"
135982,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/master/web/handler/WebAdminGroupCtrlHandler.java,180,,"                    .append(e.getMessage()).append(""\""}"");"
135983,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/master/web/handler/WebAdminGroupCtrlHandler.java,208,,"                    WebParameterUtils.checkAndGetJsonArray(""filterCondJsonSet"","
135984,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/master/web/handler/WebAdminGroupCtrlHandler.java,251,,"                    throw new Exception(sBuilder.append(""Process data exception, data is :"")"
135985,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/master/web/handler/WebAdminGroupCtrlHandler.java,252,,"                            .append(groupObject.toString()).append("", exception is : "")"
135986,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/master/web/handler/WebAdminGroupCtrlHandler.java,310,,"                    WebParameterUtils.validStringParameter(""modifyUser"","
135987,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/master/web/handler/WebAdminGroupCtrlHandler.java,315,,"                    WebParameterUtils.validDateParameter(""modifyDate"","
135988,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/master/web/handler/WebAdminGroupCtrlHandler.java,526,,"                        webFilterCondEntity.setCreateUser(""System"");"
135989,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/master/web/handler/WebAdminGroupCtrlHandler.java,725,,"                        .append(""\"",\""createDate\"":\"""").append(formatter.format(entity.getCreateDate()))"
135990,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/master/web/handler/WebAdminGroupCtrlHandler.java,732,,"                    .append(e.getMessage()).append(""\"",\""count\"":0,\""data\"":[]}"");"
135991,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/master/web/handler/WebAdminGroupCtrlHandler.java,818,,"                    WebParameterUtils.checkAndGetJsonArray(""groupNameJsonSet"","
135992,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/master/web/handler/WebAdminGroupCtrlHandler.java,1277,,"                    WebParameterUtils.validIntDataParameter(""enableBind"","
135993,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/master/web/handler/WebAdminGroupCtrlHandler.java,1281,,"                    WebParameterUtils.validIntDataParameter(""allowedBClientRate"","
135994,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/master/web/handler/WebAdminTopicAuthHandler.java,74,,"                    WebParameterUtils.validStringParameter(""createUser"","
135995,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/master/web/handler/WebAdminTopicAuthHandler.java,79,,"                    WebParameterUtils.validDateParameter(""createDate"","
135996,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/master/web/handler/WebAdminTopicAuthHandler.java,84,,"                    WebParameterUtils.validBooleanDataParameter(""isEnable"","
135997,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/master/web/handler/WebAdminTopicAuthHandler.java,90,,"                    WebParameterUtils.getBatchTopicNames(req.getParameter(""topicName""),"
135998,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/master/web/handler/WebAdminTopicAuthHandler.java,100,,"            sBuilder.append(""{\""result\"":false,\""errCode\"":400,\""errMsg\"":\"""")"
135999,./TargetProjects/incubator-tubemq/inlong-tubemq/tubemq-server/src/main/java/org/apache/inlong/tubemq/server/master/web/handler/WebAdminTopicAuthHandler.java,101,,"                    .append(e.getMessage()).append(""\""}"");"
