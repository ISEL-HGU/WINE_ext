6000,./TargetProjects/activemq-artemis/tests/timing-tests/src/test/java/org/apache/activemq/artemis/tests/timing/util/UTF8Test.java,30,,"   private static final String str = ""abcdef&^*&!^ghijkl\uB5E2\uCAC7\uB2BB\uB7DD\uB7C7\uB3A3\uBCE4\uB5A5"" + ""abcdef&^*&!^ghijkl\uB5E2\uCAC7\uB2BB\uB7DD\uB7C7\uB3A3\uBCE4\uB5A5"" + ""abcdef&^*&!^ghijkl\uB5E2\uCAC7\uB2BB\uB7DD\uB7C7\uB3A3\uBCE4\uB5A5"" + ""abcdef&^*&!^ghijkl\uB5E2\uCAC7\uB2BB\uB7DD\uB7C7\uB3A3\uBCE4\uB5A5"" + ""abcdef&^*&!^ghijkl\uB5E2\uCAC7\uB2BB\uB7DD\uB7C7\uB3A3\uBCE4\uB5A5"" + ""abcdef&^*&!^ghijkl\uB5E2\uCAC7\uB2BB\uB7DD\uB7C7\uB3A3\uBCE4\uB5A5"" + ""abcdef&^*&!^ghijkl\uB5E2\uCAC7\uB2BB\uB7DD\uB7C7\uB3A3\uBCE4\uB5A5"" + ""abcdef&^*&!^ghijkl\uB5E2\uCAC7\uB2BB\uB7DD\uB7C7\uB3A3\uBCE4\uB5A5"" + ""abcdef&^*&!^ghijkl\uB5E2\uCAC7\uB2BB\uB7DD\uB7C7\uB3A3\uBCE4\uB5A5"";"
6001,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/client/impl/LargeMessageBufferTest.java,94,,"         Assert.fail(""supposed to throw an exception"");"
6002,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/config/impl/ConnectorsServiceTest.java,58,,"      ConnectorServiceConfiguration connectorServiceConfiguration = new ConnectorServiceConfiguration().setFactoryClassName(null).setParams(new HashMap<String, Object>()).setName(""myfact"");"
6003,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/config/impl/TransportConfigurationTest.java,73,,"      params1.put(""host"", ""blah"");"
6004,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/config/impl/TransportConfigurationTest.java,73,,"      params1.put(""host"", ""blah"");"
6005,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/config/impl/TransportConfigurationTest.java,74,,"      params1.put(""port"", ""5467"");"
6006,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/config/impl/TransportConfigurationTest.java,74,,"      params1.put(""port"", ""5467"");"
6007,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/journal/impl/AlignedJournalImplTest.java,538,,"      SequentialFile file = factory.createSequentialFile(""tt-1.tt"");"
6008,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/journal/impl/AlignedJournalImplTest.java,1223,,"      journalImpl = new JournalImpl(512 + 512 * 3, 20, 20, 0, 0, factory, ""amq"", ""amq"", 1000);"
6009,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/journal/impl/JournaHistorylBackupTest.java,43,,"      File history = new File(getTestDirfile(), ""history"");"
6010,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/journal/impl/JournaHistorylBackupTest.java,119,,"      JournalImpl journal = new JournalImpl(10 * 1024, 10, 10, 0, 100, new FakeSequentialFileFactory(), ""jrn"", ""data"", 1);"
6011,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/journal/impl/JournaHistorylBackupTest.java,119,,"      JournalImpl journal = new JournalImpl(10 * 1024, 10, 10, 0, 100, new FakeSequentialFileFactory(), ""jrn"", ""data"", 1);"
6012,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/journal/impl/JournalImplTestUnit.java,70,,"         Assert.fail(""Should throw exception"");"
6013,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/journal/impl/SequentialFileFactoryTestBase.java,103,,"      List<String> fileNames = factory.listFiles(""amq"");"
6014,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/journal/impl/fakes/FakeSequentialFileFactory.java,347,,"            throw new IllegalStateException(""Is closed"");"
6015,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/paging/impl/PageTest.java,130,,"      SequentialFile file = factory.createSequentialFile(""00010.page"");"
6016,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/paging/impl/PageTest.java,132,,"      Page page = new Page(new SimpleString(""something""), storageManager, factory, file, 10);"
6017,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/paging/impl/PagingStoreImplTest.java,82,,"   private static final SimpleString destinationTestName = new SimpleString(""test"");"
6018,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/paging/impl/PagingStoreImplTest.java,662,,"                  msg.putLongProperty(""count"", i);"
6019,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/postoffice/impl/AddressImplTest.java,57,,"      SimpleString s1 = new SimpleString(""a.b.c.d"");"
6020,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/postoffice/impl/AddressImplTest.java,58,,"      SimpleString s2 = new SimpleString(""a.b.x.e"");"
6021,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/postoffice/impl/AddressImplTest.java,93,,"      SimpleString s1 = new SimpleString(""a.b.c.d.e.f"");"
6022,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/postoffice/impl/AddressImplTest.java,94,,"      SimpleString s2 = new SimpleString(""a.b.c.x.e.f"");"
6023,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/postoffice/impl/AddressMapUnitTest.java,39,,"      SimpleString a = new SimpleString(""a.b.c"");"
6024,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/postoffice/impl/AddressMapUnitTest.java,79,,"      SimpleString a = new SimpleString(""a.b.#"");"
6025,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/postoffice/impl/AddressMapUnitTest.java,105,,"      SimpleString s1 = new SimpleString(""a.b"");"
6026,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/postoffice/impl/AddressMapUnitTest.java,123,,"      SimpleString s1 = new SimpleString(""a.b.c.d"");"
6027,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/postoffice/impl/AddressMapUnitTest.java,124,,"      SimpleString s2 = new SimpleString(""a.b.x.e"");"
6028,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/postoffice/impl/AddressMapUnitTest.java,164,,"      SimpleString s1 = new SimpleString(""a.b.c.d.e.f"");"
6029,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/postoffice/impl/AddressMapUnitTest.java,165,,"      SimpleString s2 = new SimpleString(""a.b.c.x.e.f"");"
6030,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/postoffice/impl/AddressMapUnitTest.java,550,,"      SimpleString hashA = new SimpleString(""#.a"");"
6031,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/postoffice/impl/AddressMapUnitTest.java,635,,"      SimpleString abcaS = new SimpleString(""a.b.c.a"");"
6032,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/postoffice/impl/AddressMapUnitTest.java,839,,"         SimpleString star = new SimpleString(""test."" + i);"
6033,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/postoffice/impl/AddressMapUnitTest.java,843,,"      assertEquals(10, countNonWildcardMatching(new SimpleString(""test.*"")));"
6034,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/postoffice/impl/AddressMapUnitTest.java,845,,"      assertEquals(10, countNonWildcardMatching(new SimpleString(""test.#"")));"
6035,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/postoffice/impl/WildcardAddressManagerUnitTest.java,58,,"      ad.addBinding(new BindingFake(""Topic1"", ""Topic1""));"
6036,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/postoffice/impl/WildcardAddressManagerUnitTest.java,59,,"      ad.addBinding(new BindingFake(""Topic1"", ""one""));"
6037,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/postoffice/impl/WildcardAddressManagerUnitTest.java,60,,"      ad.addBinding(new BindingFake(""*"", ""two""));"
6038,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/postoffice/impl/WildcardAddressManagerUnitTest.java,121,,"      ad.addAddressInfo(new AddressInfo(SimpleString.toSimpleString(""Queue1.#""), RoutingType.ANYCAST));"
6039,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/postoffice/impl/WildcardAddressManagerUnitTest.java,122,,"      ad.addAddressInfo(new AddressInfo(SimpleString.toSimpleString(""Topic1.#""), RoutingType.MULTICAST));"
6040,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/postoffice/impl/WildcardAddressManagerUnitTest.java,168,,"      ad.addAddressInfo(new AddressInfo(SimpleString.toSimpleString(""Topic1.>""), RoutingType.MULTICAST));"
6041,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/postoffice/impl/WildcardAddressManagerUnitTest.java,169,,"      ad.addAddressInfo(new AddressInfo(SimpleString.toSimpleString(""Topic1.test""), RoutingType.MULTICAST));"
6042,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/postoffice/impl/WildcardAddressManagerUnitTest.java,229,,"      ad.addBinding(new BindingFake(""T.>"", ""1""));"
6043,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/remoting/impl/netty/NettyConnectionTest.java,93,,"      config.put(""host"", ""localhost"");"
6044,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/remoting/impl/netty/NettyConnectionTest.java,94,,"      config.put(""port"", ""1234"");"
6045,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/remoting/impl/netty/NettyConnectionTest.java,94,,"      config.put(""port"", ""1234"");"
6046,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/remoting/impl/netty/NettyConnectorTest.java,60,,"      params.put(TransportConstants.KEYSTORE_PASSWORD_PROP_NAME, ""secureexample"");"
6047,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/remoting/impl/netty/NettyConnectorTest.java,151,,"      System.setProperty(NettyConnector.JAVAX_KEYSTORE_PATH_PROP_NAME, ""openssl-client-side-keystore.jks"");"
6048,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/remoting/impl/netty/NettyConnectorTest.java,153,,"      System.setProperty(NettyConnector.JAVAX_TRUSTSTORE_PATH_PROP_NAME, ""openssl-client-side-truststore.jks"");"
6049,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/remoting/impl/netty/NettyConnectorTest.java,180,,"      System.setProperty(NettyConnector.JAVAX_KEYSTORE_PATH_PROP_NAME, ""bad path"");"
6050,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/remoting/impl/netty/NettyConnectorTest.java,181,,"      System.setProperty(NettyConnector.JAVAX_KEYSTORE_PASSWORD_PROP_NAME, ""bad password"");"
6051,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/remoting/impl/netty/SocksProxyTest.java,102,,"      params.put(TransportConstants.PROXY_HOST_PROP_NAME, ""localhost"");"
6052,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/security/impl/ActiveMQSecurityManagerImplTest.java,55,,"      securityManager.getConfiguration().addUser(""guest"", ""password"");"
6053,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/security/impl/ActiveMQSecurityManagerImplTest.java,85,,"      securityManager.getConfiguration().addUser(""newuser1"", ""newpassword1"");"
6054,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/security/impl/ActiveMQSecurityManagerImplTest.java,85,,"      securityManager.getConfiguration().addUser(""newuser1"", ""newpassword1"");"
6055,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/security/impl/ActiveMQSecurityManagerImplTest.java,122,,"      securityManager.getConfiguration().addRole(""newuser1"", ""role1"");"
6056,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/security/impl/ActiveMQSecurityManagerImplTest.java,123,,"      securityManager.getConfiguration().addRole(""newuser1"", ""role2"");"
6057,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/security/impl/ActiveMQSecurityManagerImplTest.java,124,,"      securityManager.getConfiguration().addRole(""newuser1"", ""role3"");"
6058,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/security/impl/ActiveMQSecurityManagerImplTest.java,125,,"      securityManager.getConfiguration().addRole(""newuser1"", ""role4"");"
6059,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/server/cluster/impl/ClusterConnectionBridgeTest.java,29,,"      String expectedSelector = ManagementHelper.HDR_ADDRESS + "" LIKE '"" + address + ""%'"";"
6060,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/server/cluster/impl/ClusterConnectionBridgeTest.java,36,,"      String expectedSelector = ManagementHelper.HDR_ADDRESS + "" NOT LIKE '"" + address + ""%'"";"
6061,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/server/cluster/impl/ClusterConnectionBridgeTest.java,42,,"      String address1 = ""jms.test1.address"";"
6062,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/server/cluster/impl/ClusterConnectionBridgeTest.java,43,,"      String address2 = ""jms.test2.address"";"
6063,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/server/cluster/impl/ClusterConnectionBridgeTest.java,48,,"      expectedSelector.append(""("" + ManagementHelper.HDR_ADDRESS + "" LIKE '"" + address1 + ""%')"");"
6064,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/server/cluster/impl/ClusterConnectionBridgeTest.java,64,,"      expectedSelector.append("" AND "");"
6065,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/server/impl/QueueImplTest.java,685,,"      Filter filter = new FakeFilter(""fruit"", ""orange"");"
6066,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/server/impl/QueueImplTest.java,685,,"      Filter filter = new FakeFilter(""fruit"", ""orange"");"
6067,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/server/impl/QueueImplTest.java,814,,"         ref.getMessage().putStringProperty(""color"", ""green"");"
6068,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/server/impl/QueueImplTest.java,814,,"         ref.getMessage().putStringProperty(""color"", ""green"");"
6069,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/jms/client/ActiveMQMapMessageTest.java,122,,"         Assert.fail(""MessageFormatException"");"
6070,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/jms/client/ActiveMQMapMessageTest.java,143,,"         Assert.fail(""NumberFormatException"");"
6071,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/ra/ActiveMQActivationsSpecTest.java,31,,"      ActiveMQActivationValidationUtils.validate(null, ""destinationType"", false, ""subscriptionName"");"
6072,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/ra/ActiveMQResourceAdapterConfigTest.java,52,,"      ""         <config-property-type>java.lang.String</config-property-type>\n"" +"
6073,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/ra/ActiveMQResourceAdapterConfigTest.java,54,,"      ""      </config-property>\n"" +"
6074,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/ra/ActiveMQResourceAdapterConfigTest.java,55,,"      ""      <config-property>\n"" +"
6075,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/ra/ActiveMQResourceAdapterConfigTest.java,63,,"      ""      </config-property>"";"
6076,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/ra/ActiveMQResourceAdapterConfigTest.java,69,,"      ""        <config-property-type>boolean</config-property-type>\n"" +"
6077,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/ra/ActiveMQResourceAdapterConfigTest.java,81,,"      ""        <config-property-type>java.lang.String</config-property-type>\n"" +"
6078,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/ra/ActiveMQResourceAdapterConfigTest.java,82,,"      ""        <config-property-value></config-property-value>\n"" +"
6079,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/ra/ActiveMQResourceAdapterConfigTest.java,117,,"      ""        <config-property-type>int</config-property-type>\n"" +"
6080,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/ra/ActiveMQResourceAdapterConfigTest.java,123,,"      ""        <config-property-type>long</config-property-type>\n"" +"
6081,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/ra/ActiveMQResourceAdapterConfigTest.java,136,,"      ""         <config-property-value></config-property-value>\n"" +"
6082,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/ra/ActiveMQResourceAdapterConfigTest.java,141,,"      ""         <config-property-type>int</config-property-type>\n"" +"
6083,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/ra/ActiveMQResourceAdapterConfigTest.java,255,,"      ""         <config-property-type>boolean</config-property-type>\n"" +"
6084,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/ra/ActiveMQResourceAdapterConfigTest.java,258,,"      ""      <config-property>"" +"
6085,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/ra/ActiveMQResourceAdapterConfigTest.java,261,,"      ""         <config-property-type>boolean</config-property-type>"" +"
6086,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/ra/ActiveMQResourceAdapterConfigTest.java,262,,"      ""         <config-property-value></config-property-value>"" +"
6087,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/ra/ActiveMQResourceAdapterConfigTest.java,375,,"      ""         <config-property-type>java.lang.String</config-property-type>"" +"
6088,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/ra/ConnectionFactoryPropertiesTest.java,122,,"      connectorClassNames1.add(""myConnector"");"
6089,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/ra/ConnectionFactoryPropertiesTest.java,126,,"      params1.put(""port"", ""0"");"
6090,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/ra/ResourceAdapterTest.java,140,,"      ra.setClientID(""myid"");"
6091,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/ra/ResourceAdapterTest.java,141,,"      ra.setConnectionLoadBalancingPolicyClassName(""mlbcn"");"
6092,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/ra/ResourceAdapterTest.java,259,,"      connectionFactoryProperties.setDiscoveryAddress(""myhost"");"
6093,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/ra/ResourceAdapterTest.java,299,,"      assertEquals(""host1"", configurations[0].getParams().get(""host""));"
6094,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/ra/ResourceAdapterTest.java,300,,"      assertEquals(""61616"", configurations[0].getParams().get(""port""));"
6095,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/ra/ResourceAdapterTest.java,303,,"      assertEquals(""0"", configurations[1].getParams().get(""serverid""));"
6096,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/util/LinkedListTest.java,146,,"               assertNotNull(""prev"", o.publicPrev());"
6097,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/util/LinkedListTest.java,147,,"               assertNull(""next"", o.publicNext());"
6098,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/util/LinkedListTest.java,411,,"         fail(""Should throw NoSuchElementException"");"
6099,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/util/ObjectInputStreamWithClassLoaderTest.java,150,,"      File serailizeFile = new File(temporaryFolder.getRoot(), ""testclass.bin"");"
6100,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/util/ObjectInputStreamWithClassLoaderTest.java,165,,"      whiteList = ""org.apache.activemq.artemis.tests.unit.util.deserialization.pkg1"";"
6101,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/util/ObjectInputStreamWithClassLoaderTest.java,246,,"      blackList = ""org.apache.activemq.artemis.tests.unit.util.deserialization.pkg1.TestClass1"";"
6102,./TargetProjects/activemq-artemis/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/util/ObjectInputStreamWithClassLoaderTest.java,388,,"      blackList = ""org.apache.activemq.artemis.tests.unit.util.deserialization.pkg1.EnclosingClass"";"
6103,./TargetProjects/activemq-artemis-native/src/test/java/org/apache/activemq/artemis/nativo/jlibaio/test/LibaioTest.java,110,,"      LibaioFile fileDescriptor = control.openFile(temporaryFolder.newFile(""test.bin""), true);"
6104,./TargetProjects/activemq-cli-tools/activemq-kahadb-exporter/src/test/java/org/apache/activemq/cli/kahadb/exporter/ExporterTest.java,119,,"            message.setText(""Test"");"
6105,./TargetProjects/activemq-cli-tools/activemq-kahadb-exporter/src/test/java/org/apache/activemq/cli/kahadb/exporter/ExporterTest.java,120,,"            message.setProperty(""MyStringProperty"", ""abc"");"
6106,./TargetProjects/activemq-cli-tools/activemq-kahadb-exporter/src/test/java/org/apache/activemq/cli/kahadb/exporter/ExporterTest.java,120,,"            message.setProperty(""MyStringProperty"", ""abc"");"
6107,./TargetProjects/activemq-cli-tools/activemq-kahadb-exporter/src/test/java/org/apache/activemq/cli/kahadb/exporter/ExporterTest.java,121,,"            message.setProperty(""MyIntegerProperty"", 1);"
6108,./TargetProjects/activemq-cli-tools/activemq-kahadb-exporter/src/test/java/org/apache/activemq/cli/kahadb/exporter/ExporterTest.java,143,,"        File xmlFile = new File(storeFolder.getRoot().getAbsoluteFile(), ""outputXml.xml"");"
6109,./TargetProjects/activemq-cli-tools/activemq-kahadb-exporter/src/test/java/org/apache/activemq/cli/kahadb/exporter/ExporterTest.java,167,,"            Queue fqqnA = session.createQueue(CompositeAddress.toFullyQualified(""VirtualTopic.T"", ""Consumer.A.VirtualTopic.T""));"
6110,./TargetProjects/activemq-cli-tools/activemq-kahadb-exporter/src/test/java/org/apache/activemq/cli/kahadb/exporter/ExporterTest.java,343,,"        ActiveMQTopic topic = new ActiveMQTopic(""test.topic"");"
6111,./TargetProjects/activemq-cli-tools/activemq-kahadb-exporter/src/test/java/org/apache/activemq/cli/kahadb/exporter/ExporterTest.java,349,,"        SubscriptionInfo sub1 = new SubscriptionInfo(""clientId1"", ""sub1"");"
6112,./TargetProjects/activemq-cli-tools/activemq-kahadb-exporter/src/test/java/org/apache/activemq/cli/kahadb/exporter/ExporterTest.java,349,,"        SubscriptionInfo sub1 = new SubscriptionInfo(""clientId1"", ""sub1"");"
6113,./TargetProjects/activemq-cli-tools/activemq-kahadb-exporter/src/test/java/org/apache/activemq/cli/kahadb/exporter/artemis/OpenWireCoreMessageTypeConverterTest.java,70,,"        message.setText(""test"");"
6114,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/commands/CommandClassGenerator.java,54,,"        out.println(""        ///"");"
6115,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/commands/CommandClassGenerator.java,55,,"        out.println(""        /// <summery>"");"
6116,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/commands/CommandClassGenerator.java,58,,"        out.println(""        /// </summery>"");"
6117,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/commands/CommandClassGenerator.java,61,,"        out.println(""        {"");"
6118,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/commands/CommandClassGenerator.java,63,,"        out.println(""        }"");"
6119,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/commands/CommandClassGenerator.java,118,,"        if( getBaseClassName().equals( ""BaseCommand"" ) ) {"
6120,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/commands/ConnectionIdGenerator.java,26,,"        out.println(""        public ""+getClassName()+""()"");"
6121,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/commands/ConnectionIdGenerator.java,27,,"        out.println(""        {"");"
6122,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/commands/ConnectionIdGenerator.java,28,,"        out.println(""        }"");"
6123,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/commands/DestinationInfoGenerator.java,26,,"        out.println(""        {"");"
6124,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/commands/DestinationInfoGenerator.java,28,,"        out.println(""        }"");"
6125,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/commands/MessageGenerator.java,54,,"        out.println(""        {"");"
6126,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/commands/MessageGenerator.java,57,,"        out.println(""        }"");"
6127,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/commands/MessageIdGenerator.java,40,,"        out.println(""        {"");"
6128,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/commands/MessageIdGenerator.java,41,,"        out.println(""        }"");"
6129,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/commands/ProducerIdGenerator.java,26,,"        out.println(""        {"");"
6130,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/commands/ProducerIdGenerator.java,27,,"        out.println(""        }"");"
6131,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/commands/SessionIdGenerator.java,25,,"        out.println(""        public ""+getClassName()+""()"");"
6132,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/commands/SessionIdGenerator.java,26,,"        out.println(""        {"");"
6133,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/commands/SessionIdGenerator.java,27,,"        out.println(""        }"");"
6134,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/marshalers/AmqCSharpMarshallersGenerator.java,69,,"                JAnnotation annotation = property.getAnnotation(""openwire:property"");"
6135,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/marshalers/AmqCSharpMarshallersGenerator.java,173,,"            out.println(""        {"");"
6136,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/marshalers/AmqCSharpMarshallersGenerator.java,175,,"            out.println(""        }"");"
6137,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/marshalers/AmqCSharpMarshallersGenerator.java,187,,"        out.println(""        // "");"
6138,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/marshalers/AmqCSharpMarshallersGenerator.java,196,,"            out.println(""            "" + jclass.getSimpleName() + "" info = ("" + jclass.getSimpleName() + "")o;"");"
6139,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/marshalers/AmqCSharpMarshallersGenerator.java,196,,"            out.println(""            "" + jclass.getSimpleName() + "" info = ("" + jclass.getSimpleName() + "")o;"");"
6140,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/marshalers/AmqCSharpMarshallersGenerator.java,196,,"            out.println(""            "" + jclass.getSimpleName() + "" info = ("" + jclass.getSimpleName() + "")o;"");"
6141,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/marshalers/AmqCSharpMarshallersGenerator.java,214,,"        out.println(""        //"");"
6142,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/marshalers/AmqCSharpMarshallersGenerator.java,415,,"            if( !( type.equals(""byte"") ) &&"
6143,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/marshalers/AmqCSharpMarshallersGenerator.java,416,,"                !( type.equals(""char"") ) &&"
6144,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/marshalers/AmqCSharpMarshallersGenerator.java,417,,"                !( type.equals(""short"") ) &&"
6145,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/marshalers/AmqCSharpMarshallersGenerator.java,418,,"                !( type.equals(""int"") ) ) {"
6146,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/marshalers/AmqCSharpMarshallersGenerator.java,444,,"            if( !type.equals(""boolean"") ) {"
6147,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/marshalers/AmqCSharpMarshallersGenerator.java,457,,"            JAnnotationValue size = annotation.getValue(""size"");"
6148,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/marshalers/AmqCSharpMarshallersGenerator.java,461,,"            if (propertyType.isArrayType() && !propertyTypeName.equals(""byte[]"")) {"
6149,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/marshalers/AmqCSharpMarshallersGenerator.java,475,,"            out.println(""            info."" + propertyName + "" = bs.ReadBoolean();"");"
6150,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/marshalers/AmqCSharpMarshallersGenerator.java,484,,"        } else if (type.equals(""long"")) {"
6151,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/marshalers/AmqCSharpMarshallersGenerator.java,486,,"        } else if (type.equals(""String"")) {"
6152,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/marshalers/AmqCSharpMarshallersGenerator.java,488,,"        } else if (type.equals(""byte[]"") || type.equals(""ByteSequence"")) {"
6153,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/marshalers/AmqCSharpMarshallersGenerator.java,497,,"            out.println(""            info."" + propertyName + "" = ("" + type + "") TightUnmarshalCachedObject(wireFormat, dataIn, bs);"");"
6154,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/marshalers/AmqCSharpMarshallersGenerator.java,510,,"            out.println(""                "" + arrayType + ""[] value = new "" + arrayType + ""["" + size.asInt() + ""];"");"
6155,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/marshalers/AmqCSharpMarshallersGenerator.java,510,,"            out.println(""                "" + arrayType + ""[] value = new "" + arrayType + ""["" + size.asInt() + ""];"");"
6156,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/marshalers/AmqCSharpMarshallersGenerator.java,512,,"            out.println(""                    value[i] = ("" + arrayType + "") TightUnmarshalNestedObject(wireFormat,dataIn, bs);"");"
6157,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/marshalers/AmqCSharpMarshallersGenerator.java,513,,"            out.println(""                }"");"
6158,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/marshalers/AmqCSharpMarshallersGenerator.java,514,,"            out.println(""                info."" + propertyName + "" = value;"");"
6159,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/marshalers/AmqCSharpMarshallersGenerator.java,514,,"            out.println(""                info."" + propertyName + "" = value;"");"
6160,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/marshalers/AmqCSharpMarshallersGenerator.java,515,,"            out.println(""            }"");"
6161,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/marshalers/AmqCSharpMarshallersGenerator.java,551,,"                out.println(""            rc += TightMarshalLong1(wireFormat, "" + getter + "", bs);"");"
6162,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/marshalers/AmqCSharpMarshallersGenerator.java,592,,"                out.println(""            dataOut.Write("" + getter + "");"");"
6163,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/marshalers/AmqCSharpMarshallersGenerator.java,600,,"                out.println(""            TightMarshalLong2(wireFormat, "" + getter + "", dataOut, bs);"");"
6164,./TargetProjects/activemq-nms-openwire-generator/src/main/java/org/apache/activemq/nms/openwire/tool/marshalers/AmqCSharpMarshallersGenerator.java,730,,"                out.println(""            LooseMarshalLong(wireFormat, "" + getter + "", dataOut);"");"
6165,./TargetProjects/activemq-openwire/openwire-core/src/main/java/org/apache/activemq/openwire/buffer/DataByteArrayInputStream.java,354,,"                        throw new UTFDataFormatException(""bad string"");"
6166,./TargetProjects/activemq-openwire/openwire-core/src/main/java/org/apache/activemq/openwire/codec/OpenWireFormat.java,126,,"                throw new IOException(""Unknown data type: "" + type);"
6167,./TargetProjects/activemq-openwire/openwire-core/src/test/java/org/apache/activemq/openwire/commands/MessageTest.java,50,,"        message.setOriginalDestination(new OpenWireQueue(""queue""));"
6168,./TargetProjects/activemq-openwire/openwire-core/src/test/java/org/apache/activemq/openwire/commands/MessageTest.java,51,,"        message.setGroupID(""group"");"
6169,./TargetProjects/activemq-openwire/openwire-core/src/test/java/org/apache/activemq/openwire/commands/MessageTest.java,53,,"        message.setCorrelationId(""correlation"");"
6170,./TargetProjects/activemq-openwire/openwire-core/src/test/java/org/apache/activemq/openwire/commands/MessageTest.java,54,,"        message.setMessageId(new MessageId(""c1:1:1"", 1));"
6171,./TargetProjects/activemq-openwire/openwire-core/src/test/java/org/apache/activemq/openwire/commands/OpenWireBytesMessageTest.java,29,,"    private static final String TEXT = ""The quick red fox jumped over the lazy brown dog. """
6172,./TargetProjects/activemq-openwire/openwire-core/src/test/java/org/apache/activemq/openwire/commands/OpenWireMapMessageTest.java,46,,"        msg.setObject(""boolean"", true);"
6173,./TargetProjects/activemq-openwire/openwire-core/src/test/java/org/apache/activemq/openwire/commands/OpenWireMapMessageTest.java,47,,"        msg.setObject(""byte"", (byte) 1);"
6174,./TargetProjects/activemq-openwire/openwire-core/src/test/java/org/apache/activemq/openwire/commands/OpenWireMapMessageTest.java,48,,"        msg.setObject(""bytes"", new byte[1]);"
6175,./TargetProjects/activemq-openwire/openwire-core/src/test/java/org/apache/activemq/openwire/commands/OpenWireMapMessageTest.java,49,,"        msg.setObject(""char"", 'a');"
6176,./TargetProjects/activemq-openwire/openwire-core/src/test/java/org/apache/activemq/openwire/commands/OpenWireMapMessageTest.java,50,,"        msg.setObject(""double"", 1.5);"
6177,./TargetProjects/activemq-openwire/openwire-core/src/test/java/org/apache/activemq/openwire/commands/OpenWireMapMessageTest.java,51,,"        msg.setObject(""float"", 1.5f);"
6178,./TargetProjects/activemq-openwire/openwire-core/src/test/java/org/apache/activemq/openwire/commands/OpenWireMapMessageTest.java,52,,"        msg.setObject(""int"", 1);"
6179,./TargetProjects/activemq-openwire/openwire-core/src/test/java/org/apache/activemq/openwire/commands/OpenWireMapMessageTest.java,53,,"        msg.setObject(""long"", 1L);"
6180,./TargetProjects/activemq-openwire/openwire-core/src/test/java/org/apache/activemq/openwire/commands/OpenWireMapMessageTest.java,54,,"        msg.setObject(""object"", ""stringObj"");"
6181,./TargetProjects/activemq-openwire/openwire-core/src/test/java/org/apache/activemq/openwire/commands/OpenWireMapMessageTest.java,55,,"        msg.setObject(""short"", (short) 1);"
6182,./TargetProjects/activemq-openwire/openwire-core/src/test/java/org/apache/activemq/openwire/commands/OpenWireMapMessageTest.java,56,,"        msg.setObject(""string"", ""string"");"
6183,./TargetProjects/activemq-openwire/openwire-core/src/test/java/org/apache/activemq/openwire/commands/OpenWireMapMessageTest.java,195,,"        mapMessage.setObject(""String"", ""String"");"
6184,./TargetProjects/activemq-openwire/openwire-core/src/test/java/org/apache/activemq/openwire/commands/OpenWireMessageTest.java,250,,"        msg.setProperty(""test"", ""test"");"
6185,./TargetProjects/activemq-openwire/openwire-core/src/test/java/org/apache/activemq/openwire/commands/OpenWireMessageTest.java,345,,"        message.setProperty(""TestProp"", 333);"
6186,./TargetProjects/activemq-openwire/openwire-core/src/test/java/org/apache/activemq/openwire/commands/OpenWireStreamMessageTest.java,74,,"        elements.add(""Repeating String"" + ""Repeating String"" + ""Repeating String"" + ""Repeating String"" +"
6187,./TargetProjects/activemq-openwire/openwire-generator/src/main/java/org/apache/activemq/openwire/generator/builtin/UniversalMarshallerGenerator.java,139,,"            out.println(""    /**"");"
6188,./TargetProjects/activemq-openwire/openwire-generator/src/main/java/org/apache/activemq/openwire/generator/builtin/UniversalMarshallerGenerator.java,141,,"            out.println(""     *"");"
6189,./TargetProjects/activemq-openwire/openwire-generator/src/main/java/org/apache/activemq/openwire/generator/builtin/UniversalMarshallerGenerator.java,143,,"            out.println(""     */"");"
6190,./TargetProjects/activemq-openwire/openwire-generator/src/main/java/org/apache/activemq/openwire/generator/builtin/UniversalMarshallerGenerator.java,146,,"            out.println(""    }"");"
6191,./TargetProjects/activemq-openwire/openwire-generator/src/main/java/org/apache/activemq/openwire/generator/builtin/UniversalMarshallerGenerator.java,147,,"            out.println(""    "");"
6192,./TargetProjects/activemq-openwire/openwire-generator/src/main/java/org/apache/activemq/openwire/generator/builtin/UniversalMarshallerGenerator.java,174,,"            out.println(""        "" + openWireType.getTypeName() + "" info = ("" + openWireType.getTypeName() + "") target;"");"
6193,./TargetProjects/activemq-openwire/openwire-generator/src/main/java/org/apache/activemq/openwire/generator/builtin/UniversalMarshallerGenerator.java,174,,"            out.println(""        "" + openWireType.getTypeName() + "" info = ("" + openWireType.getTypeName() + "") target;"");"
6194,./TargetProjects/activemq-openwire/openwire-generator/src/main/java/org/apache/activemq/openwire/generator/builtin/UniversalMarshallerGenerator.java,176,,"                out.println(""        int version = wireFormat.getVersion();"");"
6195,./TargetProjects/activemq-openwire/openwire-generator/src/main/java/org/apache/activemq/openwire/generator/builtin/UniversalMarshallerGenerator.java,193,,"                out.println(""        if (version >= "" + property.getVersion() + "") {"");"
6196,./TargetProjects/activemq-openwire/openwire-generator/src/main/java/org/apache/activemq/openwire/generator/builtin/UniversalMarshallerGenerator.java,193,,"                out.println(""        if (version >= "" + property.getVersion() + "") {"");"
6197,./TargetProjects/activemq-openwire/openwire-generator/src/main/java/org/apache/activemq/openwire/generator/builtin/UniversalMarshallerGenerator.java,196,,"            if (property.isArray() && !typeName.equals(""byte[]"")) {"
6198,./TargetProjects/activemq-openwire/openwire-generator/src/main/java/org/apache/activemq/openwire/generator/builtin/UniversalMarshallerGenerator.java,201,,"                    out.println(indent + ""    "" + arrayType + "" value[] = new "" + arrayType + ""["" + size + ""];"");"
6199,./TargetProjects/activemq-openwire/openwire-generator/src/main/java/org/apache/activemq/openwire/generator/builtin/UniversalMarshallerGenerator.java,203,,"                    out.println(indent + ""        value[i] = ("" + arrayType + "") tightUnmarsalNestedObject(wireFormat,dataIn, bs);"");"
6200,./TargetProjects/activemq-openwire/openwire-generator/src/main/java/org/apache/activemq/openwire/generator/builtin/UniversalMarshallerGenerator.java,205,,"                    out.println(indent + ""    info."" + setter + ""(value);"");"
6201,./TargetProjects/activemq-openwire/openwire-generator/src/main/java/org/apache/activemq/openwire/generator/builtin/UniversalMarshallerGenerator.java,205,,"                    out.println(indent + ""    info."" + setter + ""(value);"");"
6202,./TargetProjects/activemq-openwire/openwire-generator/src/main/java/org/apache/activemq/openwire/generator/builtin/UniversalMarshallerGenerator.java,220,,"                if (typeName.equals(""boolean"")) {"
6203,./TargetProjects/activemq-openwire/openwire-generator/src/main/java/org/apache/activemq/openwire/generator/builtin/UniversalMarshallerGenerator.java,221,,"                    out.println(indent + ""info."" + setter + ""(bs.readBoolean());"");"
6204,./TargetProjects/activemq-openwire/openwire-generator/src/main/java/org/apache/activemq/openwire/generator/builtin/UniversalMarshallerGenerator.java,222,,"                } else if (typeName.equals(""byte"")) {"
6205,./TargetProjects/activemq-openwire/openwire-generator/src/main/java/org/apache/activemq/openwire/generator/builtin/UniversalMarshallerGenerator.java,224,,"                } else if (typeName.equals(""char"")) {"
6206,./TargetProjects/activemq-openwire/openwire-generator/src/main/java/org/apache/activemq/openwire/generator/builtin/UniversalMarshallerGenerator.java,226,,"                } else if (typeName.equals(""short"")) {"
6207,./TargetProjects/activemq-openwire/openwire-generator/src/main/java/org/apache/activemq/openwire/generator/builtin/UniversalMarshallerGenerator.java,228,,"                } else if (typeName.equals(""int"")) {"
6208,./TargetProjects/activemq-openwire/openwire-generator/src/main/java/org/apache/activemq/openwire/generator/builtin/UniversalMarshallerGenerator.java,230,,"                } else if (typeName.equals(""long"")) {"
6209,./TargetProjects/activemq-openwire/openwire-generator/src/main/java/org/apache/activemq/openwire/generator/builtin/UniversalMarshallerGenerator.java,232,,"                } else if (typeName.equals(""String"")) {"
6210,./TargetProjects/activemq-openwire/openwire-generator/src/main/java/org/apache/activemq/openwire/generator/builtin/UniversalMarshallerGenerator.java,240,,"                } else if (typeName.equals(""Buffer"")) {"
6211,./TargetProjects/activemq-openwire/openwire-generator/src/main/java/org/apache/activemq/openwire/generator/builtin/UniversalMarshallerGenerator.java,252,,"                out.println(""        }"");"
6212,./TargetProjects/activemq-openwire/openwire-generator/src/main/java/org/apache/activemq/openwire/generator/builtin/UniversalMarshallerGenerator.java,273,,"        out.println(""     * @throws IOException if an error occurs while writing the data"");"
6213,./TargetProjects/activemq-openwire/openwire-generator/src/main/java/org/apache/activemq/openwire/generator/builtin/UniversalMarshallerGenerator.java,315,,"                out.println(indent + ""rc += tightMarshalLong1(wireFormat, "" + getter + "", bs);"");"
6214,./TargetProjects/activemq-openwire/openwire-generator/src/main/java/org/apache/activemq/openwire/generator/builtin/UniversalMarshallerGenerator.java,398,,"                out.println(indent + ""tightMarshalLong2(wireFormat, "" + getter + "", dataOut, bs);"");"
6215,./TargetProjects/activemq-openwire/openwire-generator/src/main/java/org/apache/activemq/openwire/generator/builtin/UniversalMarshallerGenerator.java,587,,"                out.println(indent + ""looseMarshalLong(wireFormat, "" + getter + "", dataOut);"");"
6216,./TargetProjects/activemq-openwire/openwire-interop-tests/src/test/java/org/apache/activemq/openwire/codec/MessageCompressionTest.java,53,,"    private static final String TEXT = ""The quick red fox jumped over the lazy brown dog. """
6217,./TargetProjects/activemq-openwire/openwire-interop-tests/src/test/java/org/apache/activemq/openwire/codec/MessageCompressionTest.java,81,,"        assertTrue(""expected: compressed Size '"" + compressedSize + ""' < unCompressedSize '"" + unCompressedSize + ""'"","
6218,./TargetProjects/activemq-openwire/openwire-interop-tests/src/test/java/org/apache/activemq/openwire/codec/MessageCompressionTest.java,81,,"        assertTrue(""expected: compressed Size '"" + compressedSize + ""' < unCompressedSize '"" + unCompressedSize + ""'"","
6219,./TargetProjects/activemq-openwire/openwire-interop-tests/src/test/java/org/apache/activemq/openwire/codec/MessageCompressionTest.java,132,,"        byte[] bytes = new byte[TEXT.getBytes(""UTF8"").length];"
6220,./TargetProjects/activemq-openwire/openwire-interop-tests/src/test/java/org/apache/activemq/openwire/codec/WireFormatInfoMarshaledSizeTest.java,99,,"        LOG.info(""Original: {}"", info);"
6221,./TargetProjects/activemq-openwire/openwire-interop-tests/src/test/java/org/apache/activemq/openwire/codec/WireFormatInfoMarshaledSizeTest.java,108,,"        LOG.info(""Duplicated: {}"", duplicate);"
6222,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/BaseMessage.java,45,,"    @SuppressWarnings(""unchecked"")"
6223,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,242,,"        String beanClassName = className+""Bean"";"
6224,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,243,,"        String bufferClassName = className+""Buffer"";"
6225,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,283,,"        p(""public ""+beanClassName+"" copy();"");"
6226,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,296,,"        p(""public ""+beanClassName+""() {"");"
6227,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,366,,"        p(""private ""+beanClassName+"" bean;"");"
6228,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,391,,"        p(""return this;"");"
6229,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,520,,"                    p(""this.f_"" + lname + "" = other.f_"" + lname + "";"");"
6230,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,520,,"                    p(""this.f_"" + lname + "" = other.f_"" + lname + "";"");"
6231,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,521,,"                    p(""if( this.f_"" + lname + "" !=null && !other.frozen()) {"");"
6232,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,523,,"                    p(""this.f_"" + lname + "" = new java.util.ArrayList<""+type+"">(this.f_"" + lname + "");"");"
6233,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,531,,"                    p(""for( ""+type+"" e :  other.f_"" + lname + "") {"");"
6234,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,542,,"                    p(""this.b_"" + lname + "" = other.b_"" + lname + "";"");"
6235,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,644,,"        p(""public static ""+beanClassName+"" parseUnframed(org.apache.activemq.protobuf.CodedInputStream data) throws org.apache.activemq.protobuf.InvalidProtocolBufferException, java.io.IOException {"");"
6236,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,721,,"        p(""   return false;"");"
6237,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,732,,"            String getterMethod=""get""+uname+""()"";     "
6238,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,739,,"            p(""if (""+hasMethod+"" ^ obj.""+hasMethod+"" ) "");"
6239,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,775,,"                p(""rc ^= ( ""+uname.hashCode()+""^""+getterMethod+"".hashCode() );"");"
6240,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,860,,"                p(""if (has""+uname+""()) {"");"
6241,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,1076,,"        p(""} else {"");"
6242,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,1101,,"            p(""copyCheck();"");"
6243,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,1120,,"					String setter = ""set"" + uname;"
6244,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,1126,,"						p(""case """
6245,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,1334,,"            p(""clear"" + uname + ""();"");"
6246,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,1392,,"                p(""f_""+lname+"" = null;"");"
6247,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,1401,,"                    p(""b_""+lname+"" = true;"");"
6248,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,1423,,"                    p(""b_""+lname+"" = false;"");"
6249,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,1448,,"                    p(""f_""+lname+"" = "" + type + "".valueOf(in.readShort());"");"
6250,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,1484,,"                p(""if( bean.f_""+lname+""!=null ) {"");"
6251,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,1484,,"                p(""if( bean.f_""+lname+""!=null ) {"");"
6252,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,1667,,"                    p(""sb.append(prefix+\""""+field.getName()+""[\""+i+\""] {\\n\"");"");"
6253,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,1711,,"            p(""public boolean has"" + uname + ""() {"");"
6254,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,1717,,"            p(""public java.util.List<"" + type + ""> get"" + uname + ""List() {"");"
6255,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,1719,,"            p(""return bean().get"" + uname + ""List();"");"
6256,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,1729,,"            p(""public "" + type + "" get"" + uname + ""(int index) {"");"
6257,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,1800,,"            p(""return bean.f_"" + lname + ""!=null && !bean.f_"" + lname + "".isEmpty();"");"
6258,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,2120,,"            generateParseDelegate(ed, ""parseUnframed"", ""org.apache.activemq.protobuf.Buffer"", ""org.apache.activemq.protobuf.InvalidProtocolBufferException"");"
6259,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,2120,,"            generateParseDelegate(ed, ""parseUnframed"", ""org.apache.activemq.protobuf.Buffer"", ""org.apache.activemq.protobuf.InvalidProtocolBufferException"");"
6260,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/AltJavaGenerator.java,2121,,"            generateParseDelegate(ed, ""parseFramed"", ""org.apache.activemq.protobuf.Buffer"", ""org.apache.activemq.protobuf.InvalidProtocolBufferException"");"
6261,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/IntrospectionSupport.java,54,,"            throw new IllegalArgumentException(""props was null."");"
6262,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/JavaGenerator.java,114,,"		deferredDecode = Boolean.parseBoolean(getOption(proto.getOptions(), ""deferred_decode"", ""false""));"
6263,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/JavaGenerator.java,296,,"        p(""public ""+className+"" clone() {"");"
6264,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/JavaGenerator.java,437,,"        p(""public static ""+className+"" parseUnframed(org.apache.activemq.protobuf.CodedInputStream data) throws org.apache.activemq.protobuf.InvalidProtocolBufferException, java.io.IOException {"");"
6265,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/JavaGenerator.java,439,,"        p(""return new ""+className+""().mergeUnframed(data)""+postMergeProcessing+"";"");"
6266,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/JavaGenerator.java,439,,"        p(""return new ""+className+""().mergeUnframed(data)""+postMergeProcessing+"";"");"
6267,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/JavaGenerator.java,467,,"        p(""return new ""+className+""().mergeFramed(data)""+postMergeProcessing+"";"");"
6268,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/JavaGenerator.java,515,,"	            String getterMethod=""get""+uname+""()"";     "
6269,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/JavaGenerator.java,522,,"	            p(""if (""+hasMethod+"" ^ obj.""+hasMethod+"" ) "");"
6270,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/JavaGenerator.java,562,,"	                p(""rc ^= ( ""+uname.hashCode()+""^""+getterMethod+"".hashCode() );"");"
6271,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/JavaGenerator.java,610,,"            p(""if (has""+uname+""()) {"");"
6272,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/JavaGenerator.java,610,,"            p(""if (has""+uname+""()) {"");"
6273,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/JavaGenerator.java,766,,"            p(""} else {"");"
6274,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/JavaGenerator.java,810,,"						p(""case """
6275,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/JavaGenerator.java,918,,"									+ uname + ""());"");"
6276,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/JavaGenerator.java,1101,,"        	p(""load();"");"
6277,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/JavaGenerator.java,1113,,"                    p(""sb.append(prefix+\""""+field.getName()+""[\""+i+\""] {\\n\"");"");"
6278,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/JavaGenerator.java,1160,,"        p(""// "" + field.getRule() + "" "" + field.getType() + "" "" + field.getName() + "" = "" + field.getTag() + "";"");"
6279,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/JavaGenerator.java,1167,,"            p(""public boolean has"" + uname + ""() {"");"
6280,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/JavaGenerator.java,1172,,"            p(""return this.f_"" + lname + ""!=null && !this.f_"" + lname + "".isEmpty();"");"
6281,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/JavaGenerator.java,1182,,"            p(""if( this.f_"" + lname + "" == null ) {"");"
6282,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/JavaGenerator.java,1182,,"            p(""if( this.f_"" + lname + "" == null ) {"");"
6283,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/JavaGenerator.java,1184,,"            p(""this.f_"" + lname + "" = new java.util.ArrayList<"" + type + "">();"");"
6284,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/JavaGenerator.java,1194,,"          	p(""loadAndClear();"");"
6285,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/JavaGenerator.java,1196,,"            p(""return (T)this;"");"
6286,./TargetProjects/activemq-protobuf/activemq-protobuf/src/main/java/org/apache/activemq/protobuf/compiler/JavaGenerator.java,1312,,"                        p(""this.b_"" + lname + "" = (""+lname+"" != ""+typeDefault+"");"");"
6287,./TargetProjects/airavata-mft/agent/src/main/java/org/apache/airavata/mft/agent/MFTAgent.java,269,,"                        logger.error(""Can not renew session as it is expired"");"
6288,./TargetProjects/airavata-mft/agent/src/main/java/org/apache/airavata/mft/agent/rpc/RPCParser.java,72,,"                String resourceId = request.getParameters().get(""resourceId"");"
6289,./TargetProjects/airavata-mft/agent/src/main/java/org/apache/airavata/mft/agent/rpc/RPCParser.java,73,,"                String resourceType = request.getParameters().get(""resourceType"");"
6290,./TargetProjects/airavata-mft/agent/src/main/java/org/apache/airavata/mft/agent/rpc/RPCParser.java,74,,"                String resourceToken = request.getParameters().get(""resourceToken"");"
6291,./TargetProjects/airavata-mft/agent/src/main/java/org/apache/airavata/mft/agent/rpc/RPCParser.java,75,,"                String mftAuthorizationToken = request.getParameters().get(""mftAuthorizationToken"");"
6292,./TargetProjects/airavata-mft/core/src/main/java/org/apache/airavata/mft/core/ConnectorResolver.java,35,,"                    case ""OUT"":"
6293,./TargetProjects/airavata-mft/examples/src/main/java/org/apache/airavata/mft/examples/metadata/SCPExample.java,17,,"                .setResourceType(""SCP"")"
6294,./TargetProjects/airavata-mft/examples/src/main/java/org/apache/airavata/mft/examples/metadata/SCPExample.java,18,,"                .setResourceToken(""local-ssh-cred"")"
6295,./TargetProjects/airavata-mft/examples/src/main/java/org/apache/airavata/mft/examples/metadata/SCPExample.java,19,,"                .setTargetAgentId(""agent0"")"
6296,./TargetProjects/airavata-mft/examples/src/main/java/org/apache/airavata/mft/examples/metadata/SCPExample.java,24,,"        System.out.println(""Time for processing : "" + (endTime - startTime) + "" ms"");"
6297,./TargetProjects/airavata-mft/examples/src/main/java/org/apache/airavata/mft/examples/metadata/SCPExample.java,24,,"        System.out.println(""Time for processing : "" + (endTime - startTime) + "" ms"");"
6298,./TargetProjects/airavata-mft/services/resource-service/server/src/main/java/org/apache/airavata/mft/resource/server/backend/airavata/AiravataResourceBackend.java,116,,"        throw new UnsupportedOperationException(""Operation is not supported in backend"");"
6299,./TargetProjects/airavata-mft/services/resource-service/server/src/main/java/org/apache/airavata/mft/resource/server/backend/file/FileBasedResourceBackend.java,86,,"                    .filter(resource -> ""SCP"".equals(((JSONObject) resource).get(""type"").toString()))"
6300,./TargetProjects/airavata-mft/services/resource-service/server/src/main/java/org/apache/airavata/mft/resource/server/backend/file/FileBasedResourceBackend.java,91,,"                                .setStorageId(s.get(""storageId"").toString())"
6301,./TargetProjects/airavata-mft/services/resource-service/server/src/main/java/org/apache/airavata/mft/resource/server/backend/file/FileBasedResourceBackend.java,106,,"        throw new UnsupportedOperationException(""Operation is not supported in backend"");"
6302,./TargetProjects/airavata-mft/services/resource-service/server/src/main/java/org/apache/airavata/mft/resource/server/backend/file/FileBasedResourceBackend.java,152,,"                                    .setResourceId(r.get(""resourceId"").toString())"
6303,./TargetProjects/airavata-mft/services/resource-service/server/src/main/java/org/apache/airavata/mft/resource/server/backend/file/FileBasedResourceBackend.java,155,,"                            switch (r.get(""resourceMode"").toString()) {"
6304,./TargetProjects/airavata-mft/services/resource-service/server/src/main/java/org/apache/airavata/mft/resource/server/backend/file/FileBasedResourceBackend.java,156,,"                                case ""FILE"":"
6305,./TargetProjects/airavata-mft/services/resource-service/server/src/main/java/org/apache/airavata/mft/resource/server/backend/file/FileBasedResourceBackend.java,157,,"                                    FileResource fileResource = FileResource.newBuilder().setResourcePath(r.get(""resourcePath"").toString()).build();"
6306,./TargetProjects/airavata-mft/services/resource-service/server/src/main/java/org/apache/airavata/mft/resource/server/backend/file/FileBasedResourceBackend.java,160,,"                                case ""DIRECTORY"":"
6307,./TargetProjects/airavata-mft/services/resource-service/server/src/main/java/org/apache/airavata/mft/resource/server/backend/file/FileBasedResourceBackend.java,313,,"                                .setRegion(s.get(""bucketName"").toString())"
6308,./TargetProjects/airavata-mft/services/resource-service/server/src/main/java/org/apache/airavata/mft/resource/server/backend/sql/SQLResourceBackend.java,130,,"        throw new UnsupportedOperationException(""Operation is not supported in backend"");"
6309,./TargetProjects/airavata-mft/services/secret-service/server/src/main/java/org/apache/airavata/mft/secret/server/backend/airavata/AiravataSecretBackend.java,75,,"        throw new UnsupportedOperationException(""Operation is not supported in backend"");"
6310,./TargetProjects/airavata-mft/services/secret-service/server/src/main/java/org/apache/airavata/mft/secret/server/backend/file/FileBasedSecretBackend.java,70,,"                    .filter(resource -> ""SCP"".equals(((JSONObject) resource).get(""type"").toString()))"
6311,./TargetProjects/airavata-mft/services/secret-service/server/src/main/java/org/apache/airavata/mft/secret/server/backend/file/FileBasedSecretBackend.java,75,,"                                .setSecretId(r.get(""secretId"").toString())"
6312,./TargetProjects/airavata-mft/services/secret-service/server/src/main/java/org/apache/airavata/mft/secret/server/backend/file/FileBasedSecretBackend.java,88,,"        throw new UnsupportedOperationException(""Operation is not supported in backend"");"
6313,./TargetProjects/airavata-mft/services/secret-service/server/src/main/java/org/apache/airavata/mft/secret/server/backend/sql/SQLSecretBackend.java,87,,"        throw new UnsupportedOperationException(""Operation is not supported in backend"");"
6314,./TargetProjects/airavata-mft/transport/scp-transport/src/main/java/org/apache/airavata/mft/transport/scp/SCPSender.java,127,,"                throw new IOException(""Error code found in ack "" + (checkAck(in)));"
6315,./TargetProjects/ambari/ambari-agent/src/main/java/org/apache/ambari/tools/zk/ZkMigrator.java,43,,"    if (cli.hasOption(""connection-string"") && cli.hasOption(""znode"")) {"
6316,./TargetProjects/ambari/ambari-agent/src/main/java/org/apache/ambari/tools/zk/ZkMigrator.java,43,,"    if (cli.hasOption(""connection-string"") && cli.hasOption(""znode"")) {"
6317,./TargetProjects/ambari/ambari-agent/src/main/java/org/apache/ambari/tools/zk/ZkMigrator.java,44,,"      if (cli.hasOption(""acl"") && !cli.hasOption(""delete"")) {"
6318,./TargetProjects/ambari/ambari-agent/src/main/java/org/apache/ambari/tools/zk/ZkMigrator.java,44,,"      if (cli.hasOption(""acl"") && !cli.hasOption(""delete"")) {"
6319,./TargetProjects/ambari/ambari-agent/src/test/java/org/apache/ambari/tools/zk/ZkMigratorTest.java,56,,"    assertHasAcl(""/single"", ""ip"", ""127.0.0.1"", WRITE | READ | DELETE);"
6320,./TargetProjects/ambari/ambari-agent/src/test/java/org/apache/ambari/tools/zk/ZkMigratorTest.java,62,,"    path(""/parent"");"
6321,./TargetProjects/ambari/ambari-agent/src/test/java/org/apache/ambari/tools/zk/ZkMigratorTest.java,63,,"    path(""/parent/a"");"
6322,./TargetProjects/ambari/ambari-agent/src/test/java/org/apache/ambari/tools/zk/ZkMigratorTest.java,64,,"    path(""/parent/b"");"
6323,./TargetProjects/ambari/ambari-agent/src/test/java/org/apache/ambari/tools/zk/ZkMigratorTest.java,79,,"    path(""/parent/b/q"");"
6324,./TargetProjects/ambari/ambari-agent/src/test/java/org/apache/ambari/tools/zk/ZkMigratorTest.java,124,,"    path(""/abc123"");"
6325,./TargetProjects/ambari/ambari-agent/src/test/java/org/apache/ambari/tools/zk/ZkMigratorTest.java,136,,"    assertHasAcl(""/x"", ""world"", ""anyone"", ALL);"
6326,./TargetProjects/ambari/ambari-agent/src/test/java/org/apache/ambari/tools/zk/ZkMigratorTest.java,136,,"    assertHasAcl(""/x"", ""world"", ""anyone"", ALL);"
6327,./TargetProjects/ambari/ambari-agent/src/test/java/org/apache/ambari/tools/zk/ZkMigratorTest.java,175,,"    path(""/any"");"
6328,./TargetProjects/ambari/ambari-funtest/src/test/java/org/apache/ambari/funtest/server/tests/RoleBasedAccessControlBasicTest.java,80,,"        String anonUserName = ""nothing"";"
6329,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/AgentEnv.java,224,,"    @SerializedName(""name"")"
6330,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/AgentEnv.java,366,,"    @SerializedName(""status"")"
6331,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/CommandReport.java,37,,"  @JsonProperty(""customCommand"")"
6332,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/CommandReport.java,49,,"  @JsonProperty(""taskId"")"
6333,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/CommandReport.java,61,,"  @JsonProperty(""actionId"")"
6334,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/CommandReport.java,73,,"  @JsonProperty(""stderr"")"
6335,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/CommandReport.java,85,,"  @JsonProperty(""exitcode"")"
6336,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/CommandReport.java,97,,"  @JsonProperty(""stdout"")"
6337,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/CommandReport.java,109,,"  @JsonProperty(""structuredOut"")"
6338,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/CommandReport.java,122,,"  @JsonProperty(""roleCommand"")"
6339,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/CommandReport.java,134,,"  @JsonProperty(""role"")"
6340,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/CommandReport.java,146,,"  @JsonProperty(""status"")"
6341,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/CommandReport.java,158,,"  @JsonProperty(""serviceName"")"
6342,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/DiskInfo.java,61,,"  @JsonProperty(""available"")"
6343,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/DiskInfo.java,73,,"  @JsonProperty(""mountpoint"")"
6344,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/DiskInfo.java,85,,"  @JsonProperty(""type"")"
6345,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/DiskInfo.java,97,,"  @JsonProperty(""used"")"
6346,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/DiskInfo.java,109,,"  @JsonProperty(""percent"")"
6347,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/DiskInfo.java,121,,"  @JsonProperty(""size"")"
6348,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/DiskInfo.java,133,,"  @JsonProperty(""device"")"
6349,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HeartBeat.java,95,,"  @JsonProperty(""reports"")"
6350,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HeartBeat.java,131,,"  @JsonProperty(""componentStatus"")"
6351,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HeartBeat.java,143,,"  @JsonProperty(""mounts"")"
6352,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HeartBeatHandler.java,304,,"          + "", hostname="" + hostname"
6353,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HeartbeatProcessor.java,420,,"                  ""START"".equals(report.getCustomCommand()) ||"
6354,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HeartbeatProcessor.java,580,,"                  + "" service"""
6355,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HeartbeatProcessor.java,581,,"                  + "", clusterId="" + versionReport.getClusterId()"
6356,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HeartbeatProcessor.java,582,,"                  + "", serviceName="" + versionReport.getServiceName());"
6357,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HeartbeatProcessor.java,589,,"                  + "", componentName="" + versionReport.getComponentName());"
6358,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HeartbeatProcessor.java,597,,"                  + "", hostname="" + hostname);"
6359,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HostInfo.java,65,,"  @JsonProperty(""architecture"")"
6360,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HostInfo.java,77,,"  @JsonProperty(""domain"")"
6361,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HostInfo.java,89,,"  @JsonProperty(""fqdn"")"
6362,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HostInfo.java,101,,"  @JsonProperty(""hardwareisa"")"
6363,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HostInfo.java,113,,"  @JsonProperty(""hardwaremodel"")"
6364,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HostInfo.java,125,,"  @JsonProperty(""hostname"")"
6365,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HostInfo.java,149,,"  @JsonProperty(""interfaces"")"
6366,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HostInfo.java,161,,"  @JsonProperty(""ipaddress"")"
6367,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HostInfo.java,173,,"  @JsonProperty(""kernel"")"
6368,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HostInfo.java,185,,"  @JsonProperty(""kernelmajversion"")"
6369,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HostInfo.java,197,,"  @JsonProperty(""kernelrelease"")"
6370,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HostInfo.java,209,,"  @JsonProperty(""kernelversion"")"
6371,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HostInfo.java,221,,"  @JsonProperty(""macaddress"")"
6372,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HostInfo.java,233,,"  @JsonProperty(""memoryfree"")"
6373,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HostInfo.java,245,,"  @JsonProperty(""memorysize"")"
6374,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HostInfo.java,257,,"  @JsonProperty(""mounts"")"
6375,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HostInfo.java,269,,"  @JsonProperty(""memorytotal"")"
6376,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HostInfo.java,281,,"  @JsonProperty(""netmask"")"
6377,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HostInfo.java,293,,"  @JsonProperty(""operatingsystem"")"
6378,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HostInfo.java,305,,"  @JsonProperty(""operatingsystemrelease"")"
6379,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HostInfo.java,317,,"  @JsonProperty(""osfamily"")"
6380,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HostInfo.java,329,,"  @JsonProperty(""physicalprocessorcount"")"
6381,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HostInfo.java,341,,"  @JsonProperty(""processorcount"")"
6382,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HostInfo.java,353,,"  @JsonProperty(""selinux"")"
6383,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HostInfo.java,365,,"  @JsonProperty(""swapfree"")"
6384,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HostInfo.java,377,,"  @JsonProperty(""swapsize"")"
6385,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HostInfo.java,389,,"  @JsonProperty(""timezone"")"
6386,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HostInfo.java,401,,"  @JsonProperty(""uptime"")"
6387,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HostInfo.java,413,,"  @JsonProperty(""uptime_hours"")"
6388,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HostInfo.java,425,,"  @JsonProperty(""uptime_days"")"
6389,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HostStatus.java,45,,"  @JsonProperty(""status"")"
6390,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/HostStatus.java,57,,"  @JsonProperty(""cause"")"
6391,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/RecoveryReport.java,36,,"  @JsonProperty(""summary"")"
6392,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/agent/RecoveryReport.java,48,,"  @JsonProperty(""component_reports"")"
6393,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/query/render/ClusterBlueprintRenderer.java,299,,"        serviceSetting.put(""name"", serviceName);"
6394,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/resources/ActiveWidgetLayoutResourceDefinition.java,66,,"        if (node.getObject().getPropertiesMap().get(""WidgetLayoutInfo"") != null) {"
6395,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/ActionService.java,68,,"  @Path(""{actionName}"")"
6396,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/ActionService.java,85,,"                             @ApiParam(required = true) @PathParam(""actionName"") String actionName) {"
6397,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/AlertDefinitionService.java,51,,"  @Produces(""text/plain"")"
6398,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/AlertGroupService.java,60,,"  @Produces(""text/plain"")"
6399,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/AlertTargetService.java,71,,"  @Produces(""text/plain"")"
6400,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/AmbariMetaInfo.java,317,,"          stackName + "", stackVersion="" + version + "", serviceName="" + serviceName);"
6401,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/AmbariMetaInfo.java,317,,"          stackName + "", stackVersion="" + version + "", serviceName="" + serviceName);"
6402,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/AmbariMetaInfo.java,328,,"      throw new StackAccessException(""stackName="" + stackName"
6403,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/AmbariMetaInfo.java,440,,"          + "", osType="" + osType"
6404,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/AmbariMetaInfo.java,769,,"          + "", propertyName="" + propertyName);"
6405,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/ClusterService.java,103,,"  @Path(""{clusterName}"")"
6406,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/ClusterService.java,118,,"    @ApiParam(required = true) @PathParam(""clusterName"") String clusterName"
6407,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/ClusterService.java,300,,"  @Path(""{clusterName}/artifacts/{artifactName}"")"
6408,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/ClusterService.java,318,,"    @ApiParam(required = true) @PathParam(""artifactName"") String artifactName"
6409,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/ClusterStackVersionService.java,66,,"  @Produces(""text/plain"")"
6410,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/ComponentService.java,83,,"  @Path(""{componentName}"")"
6411,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/ComponentService.java,84,,"  @Produces(""text/plain"")"
6412,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/ComponentService.java,86,,"                               @PathParam(""componentName"") String componentName, @QueryParam(""format"") String format) {"
6413,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/CredentialService.java,60,,"  @Produces(""text/plain"")"
6414,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/CredentialService.java,75,,"  @Path(""{alias}"")"
6415,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/CredentialService.java,78,,"                                @PathParam(""alias"") String alias) {"
6416,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/ExtensionLinksService.java,51,,"  @Produces(""text/plain"")"
6417,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/ExtensionsService.java,49,,"  @Produces(""text/plain"")"
6418,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/ExtensionsService.java,61,,"                           @PathParam(""extensionName"") String extensionName) {"
6419,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/FeedService.java,55,,"  @Path(""{feedName}"")"
6420,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/FeedService.java,56,,"  @Produces(""text/plain"")"
6421,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/FeedService.java,58,,"                             @PathParam(""feedName"") String feedName) {"
6422,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/HostComponentService.java,100,,"  @Path(""{hostComponentName}"")"
6423,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/HostComponentService.java,115,,"                                   @PathParam(""hostComponentName"") String hostComponentName, @QueryParam(""format"") String format) {"
6424,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/HostService.java,91,,"  @Path(""{hostName}"")"
6425,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/HostService.java,92,,"  @Produces(""text/plain"")"
6426,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/HostService.java,105,,"    @ApiParam(value = ""host name"", required = true) @PathParam(""hostName"") String hostName"
6427,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/HostService.java,105,,"    @ApiParam(value = ""host name"", required = true) @PathParam(""hostName"") String hostName"
6428,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/InstanceService.java,77,,"  @Path(""{instanceID}"")"
6429,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/InstanceService.java,78,,"  @Produces(""text/plain"")"
6430,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/InstanceService.java,80,,"                          @PathParam(""instanceID"") String instanceID) {"
6431,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/KerberosDescriptorService.java,50,,"  @Produces(""text/plain"")"
6432,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/LdapSyncEventService.java,56,,"  @Produces(""text/plain"")"
6433,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/LocalUriInfo.java,55,,"    throw new UnsupportedOperationException(""Method is not supported"");"
6434,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/PermissionService.java,56,,"  @Path(""{permissionId}"")"
6435,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/PermissionService.java,57,,"  @Produces(""text/plain"")"
6436,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/PermissionService.java,59,,"                          @PathParam(""permissionId"") String permissionId) {"
6437,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/PersistKeyValueService.java,56,,"  @Produces(""text/plain"")"
6438,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/PrivilegeService.java,53,,"  @Produces(""text/plain"")"
6439,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/RemoteClustersService.java,52,,"  @Produces(""text/plain"")"
6440,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/RemoteClustersService.java,66,,"  @Path(""{clusterName}"")"
6441,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/RemoteClustersService.java,69,,"                                @PathParam(""clusterName"") String clusterName) {"
6442,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/RepositoryService.java,66,,"  @Produces(""text/plain"")"
6443,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/RepositoryVersionService.java,66,,"  @Produces(""text/plain"")"
6444,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/RepositoryVersionService.java,84,,"      @PathParam(""repositoryVersionId"") String repositoryVersionId) {"
6445,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/RequestService.java,109,,"                             @ApiParam @PathParam(""requestId"") String requestId) {"
6446,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/RootServiceService.java,131,,"    @ApiParam(value = ""service name"", required = true) @PathParam(""serviceName"") String serviceName"
6447,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/RootServiceService.java,131,,"    @ApiParam(value = ""service name"", required = true) @PathParam(""serviceName"") String serviceName"
6448,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/RootServiceService.java,333,,"    @SuppressWarnings(""unused"")"
6449,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/ServiceService.java,83,,"  @Path(""{serviceName}"")"
6450,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/ServiceService.java,100,,"                             @ApiParam @PathParam(""serviceName"") String serviceName) {"
6451,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/ServiceService.java,337,,"  @Path(""{serviceName}/artifacts/{artifactName}"")"
6452,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/ServiceService.java,359,,"                                 @ApiParam @PathParam(""artifactName"") String artifactName) {"
6453,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/ServiceService.java,385,,"          defaultValue = ""Artifacts/artifact_name"","
6454,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/StacksService.java,103,,"                           @ApiParam @PathParam(""stackName"") String stackName) {"
6455,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/StacksService.java,162,,"                                  @ApiParam @PathParam(""stackVersion"") String stackVersion) {"
6456,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/StacksService.java,218,,"      @ApiImplicitParam(name = QUERY_FIELDS, value = ""Filter returned attributes"","
6457,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/StacksService.java,268,,"                                        @ApiParam @PathParam(""serviceName"") String serviceName,"
6458,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/StageService.java,81,,"  @Produces(""text/plain"")"
6459,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/TargetClusterService.java,55,,"  @Path(""{targetName}"")"
6460,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/TargetClusterService.java,56,,"  @Produces(""text/plain"")"
6461,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/TargetClusterService.java,58,,"                          @PathParam(""targetName"") String targetName) {"
6462,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/UpgradeService.java,55,,"  @Produces(""text/plain"")"
6463,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/WidgetLayoutService.java,51,,"  @Path(""{widgetLayoutId}"")"
6464,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/WidgetLayoutService.java,52,,"  @Produces(""text/plain"")"
6465,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/WidgetLayoutService.java,54,,"                             @PathParam(""widgetLayoutId"") String widgetLayoutId) {"
6466,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/WidgetService.java,51,,"  @Path(""{widgetId}"")"
6467,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/WidgetService.java,52,,"  @Produces(""text/plain"")"
6468,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/WidgetService.java,54,,"                             @PathParam(""widgetId"") String widgetId) {"
6469,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/groups/GroupPrivilegeService.java,67,,"    @ApiImplicitParam(name = ""fields"", value = ""Filter user privileges"", defaultValue = ""PrivilegeInfo/*"", dataType = ""string"", paramType = ""query""),"
6470,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/groups/GroupPrivilegeService.java,67,,"    @ApiImplicitParam(name = ""fields"", value = ""Filter user privileges"", defaultValue = ""PrivilegeInfo/*"", dataType = ""string"", paramType = ""query""),"
6471,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/groups/GroupService.java,62,,"  @Produces(""text/plain"")"
6472,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/groups/GroupService.java,65,,"    @ApiImplicitParam(name = ""fields"", value = ""Filter group details"", defaultValue = ""Groups/*"", dataType = ""string"", paramType = ""query""),"
6473,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/groups/GroupService.java,65,,"    @ApiImplicitParam(name = ""fields"", value = ""Filter group details"", defaultValue = ""Groups/*"", dataType = ""string"", paramType = ""query""),"
6474,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/groups/MemberService.java,66,,"   @Produces(""text/plain"")"
6475,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/groups/MemberService.java,67,,"   public Response createMember(String body, @Context HttpHeaders headers, @Context UriInfo ui, @PathParam(""groupName"") String groupName) {"
6476,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/groups/MemberService.java,104,,"     @ApiResponse(code = 200, message = ""Successful operation""),"
6477,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/groups/MemberService.java,107,,"   public Response deleteMember(@Context HttpHeaders headers, @Context UriInfo ui, @ApiParam(value = ""group name"", required = true) @PathParam(""groupName"") String groupName,"
6478,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/groups/MemberService.java,125,,"    @ApiImplicitParam(name = ""fields"", value = ""Filter member details"", defaultValue = ""MemberInfo/*"", dataType = ""string"", paramType = ""query""),"
6479,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/groups/MemberService.java,125,,"    @ApiImplicitParam(name = ""fields"", value = ""Filter member details"", defaultValue = ""MemberInfo/*"", dataType = ""string"", paramType = ""query""),"
6480,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/users/ActiveWidgetLayoutService.java,69,,"    @ApiImplicitParam(name = ""fields"", value = ""Filter user layout details"", defaultValue = ""WidgetLayoutInfo/*"", dataType = ""string"", paramType = ""query""),"
6481,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/users/ActiveWidgetLayoutService.java,69,,"    @ApiImplicitParam(name = ""fields"", value = ""Filter user layout details"", defaultValue = ""WidgetLayoutInfo/*"", dataType = ""string"", paramType = ""query""),"
6482,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/users/UserAuthenticationSourceService.java,77,,"  @Produces(""text/plain"")"
6483,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/users/UserAuthenticationSourceService.java,94,,"                                           @ApiParam(value = ""user name"", required = true) @PathParam(""userName"") String userName) {"
6484,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/users/UserAuthenticationSourceService.java,94,,"                                           @ApiParam(value = ""user name"", required = true) @PathParam(""userName"") String userName) {"
6485,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/users/UserAuthorizationService.java,72,,"    @ApiImplicitParam(name = ""fields"", value = ""Filter user authorization details"", defaultValue = ""AuthorizationInfo/*"", dataType = ""string"", paramType = ""query""),"
6486,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/users/UserAuthorizationService.java,72,,"    @ApiImplicitParam(name = ""fields"", value = ""Filter user authorization details"", defaultValue = ""AuthorizationInfo/*"", dataType = ""string"", paramType = ""query""),"
6487,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/users/UserPrivilegeService.java,68,,"    @ApiImplicitParam(name = ""fields"", value = ""Filter user privileges"", defaultValue = ""PrivilegeInfo/*"", dataType = ""string"", paramType = ""query""),"
6488,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/users/UserPrivilegeService.java,68,,"    @ApiImplicitParam(name = ""fields"", value = ""Filter user privileges"", defaultValue = ""PrivilegeInfo/*"", dataType = ""string"", paramType = ""query""),"
6489,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/users/UserService.java,69,,"  @Produces(""text/plain"")"
6490,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/users/UserService.java,99,,"  @Path(""{userName}"")"
6491,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/users/UserService.java,113,,"                          @ApiParam(value = ""user name"", required = true) @PathParam(""userName"") String userName) {"
6492,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/users/UserService.java,113,,"                          @ApiParam(value = ""user name"", required = true) @PathParam(""userName"") String userName) {"
6493,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/views/ViewInstanceService.java,98,,"    @PathParam(""viewName"") String viewName, @PathParam(""version"") String version) throws AuthorizationException {"
6494,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/views/ViewInstanceService.java,98,,"    @PathParam(""viewName"") String viewName, @PathParam(""version"") String version) throws AuthorizationException {"
6495,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/views/ViewInstanceService.java,115,,"  @Path(""{instanceName}"")"
6496,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/views/ViewInstanceService.java,130,,"    @ApiParam(value = ""view name"") @PathParam(""viewName"") String viewName, @PathParam(""version"") String version,"
6497,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/views/ViewInstanceService.java,131,,"    @ApiParam(value = ""instance name"") @PathParam(""instanceName"") String instanceName) throws AuthorizationException {"
6498,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/views/ViewInstanceService.java,131,,"    @ApiParam(value = ""instance name"") @PathParam(""instanceName"") String instanceName) throws AuthorizationException {"
6499,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/views/ViewPermissionService.java,90,,"                                 @ApiParam(value = ""view name"") @PathParam(""viewName"") String viewName,"
6500,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/views/ViewPermissionService.java,90,,"                                 @ApiParam(value = ""view name"") @PathParam(""viewName"") String viewName,"
6501,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/views/ViewPermissionService.java,91,,"                                 @ApiParam(value = ""view version"") @PathParam(""version"") String version) {"
6502,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/views/ViewPermissionService.java,91,,"                                 @ApiParam(value = ""view version"") @PathParam(""version"") String version) {"
6503,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/views/ViewPermissionService.java,109,,"  @Path(""{permissionId}"")"
6504,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/views/ViewPermissionService.java,126,,"                                @ApiParam(value = ""permission id"") @PathParam(""permissionId"") String permissionId) {"
6505,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/views/ViewPermissionService.java,126,,"                                @ApiParam(value = ""permission id"") @PathParam(""permissionId"") String permissionId) {"
6506,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/views/ViewPrivilegeService.java,94,,"                                @ApiParam(value = ""view name"") @PathParam(""viewName"") String viewName,"
6507,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/views/ViewPrivilegeService.java,94,,"                                @ApiParam(value = ""view name"") @PathParam(""viewName"") String viewName,"
6508,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/views/ViewPrivilegeService.java,95,,"                                @ApiParam(value = ""view version"") @PathParam(""version"") String version,"
6509,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/views/ViewPrivilegeService.java,95,,"                                @ApiParam(value = ""view version"") @PathParam(""version"") String version,"
6510,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/views/ViewPrivilegeService.java,96,,"                                @ApiParam(value = ""instance name"") @PathParam(""instanceName"") String instanceName) {"
6511,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/views/ViewPrivilegeService.java,96,,"                                @ApiParam(value = ""instance name"") @PathParam(""instanceName"") String instanceName) {"
6512,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/views/ViewService.java,102,,"  @Path(""{viewName}"")"
6513,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/views/ViewService.java,117,,"                          @ApiParam(value = ""view name"", required = true) @PathParam(""viewName"") String viewName) {"
6514,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/views/ViewUrlsService.java,97,,"  @Path(""{urlName}"")"
6515,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/views/ViewUrlsService.java,110,,"                            @PathParam(""urlName"") String urlName) {"
6516,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/views/ViewVersionService.java,90,,"                              @ApiParam(value = ""view name"") @PathParam(""viewName"") String viewName) {"
6517,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/views/ViewVersionService.java,90,,"                              @ApiParam(value = ""view name"") @PathParam(""viewName"") String viewName) {"
6518,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/views/ViewVersionService.java,107,,"  @Path(""{version}"")"
6519,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/api/services/views/ViewVersionService.java,123,,"                              @PathParam(""version"") String version) {"
6520,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/audit/request/eventcreator/ComponentEventCreator.java,170,,"    return (Long) result.getResultTree().getChild(""request"").getObject().getPropertiesMap().get(""Requests"").get(""id"");"
6521,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/audit/request/eventcreator/ServiceEventCreator.java,159,,"    return (Long) result.getResultTree().getChild(""request"").getObject().getPropertiesMap().get(""Requests"").get(""id"");"
6522,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/checks/DatabaseConsistencyCheckHelper.java,353,,"            LOG.error(""Exception occurred during result set closing procedure: "", e);"
6523,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/checks/DatabaseConsistencyCheckHelper.java,361,,"            LOG.error(""Exception occurred during statement closing procedure: "", e);"
6524,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/checks/DatabaseConsistencyCheckHelper.java,395,,"          clusterConfigTypeMap.put(rs.getString(""cluster_name""), rs.getString(""type_name""));"
6525,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/checks/DatabaseConsistencyCheckHelper.java,395,,"          clusterConfigTypeMap.put(rs.getString(""cluster_name""), rs.getString(""type_name""));"
6526,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/checks/DatabaseConsistencyCheckHelper.java,838,,"          alertInfo.put(rs.getString(""definition_name""),rs.getString(""service_name""));"
6527,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/configuration/AmbariServerConfigurationKey.java,36,,"  AMBARI_MANAGES_LDAP_CONFIGURATION(AmbariServerConfigurationCategory.LDAP_CONFIGURATION, ""ambari.ldap.manage_services"", PLAINTEXT, ""false"", ""A Boolean value indicating whether Ambari is to manage the LDAP configuration for services or not."", false),"
6528,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/configuration/Configuration.java,224,,"  public static final String DEFAULT_DERBY_SCHEMA = ""ambari"";"
6529,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/configuration/Configuration.java,348,,"      ""views.validate"", ""false"");"
6530,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/configuration/Configuration.java,470,,"      ""api.csrfPrevention.enabled"", ""true"");"
6531,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/configuration/Configuration.java,592,,"      ""security.server.keystore_type"", ""PKCS12"");"
6532,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/configuration/Configuration.java,1224,,"      ""server.jdbc.connection-pool"", ConnectionPoolType.INTERNAL.getName());"
6533,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/configuration/Configuration.java,2003,,"      ""server.timeline.metrics.cache.disabled"", Boolean.FALSE);"
6534,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/configuration/Configuration.java,4087,,"      LOG.debug(""Value of {} is {}"", MASTER_KEY_LOCATION, location.getAbsolutePath());"
6535,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/configuration/Configuration.java,5631,,"      allPropertiesBuffer.append(""| "").append(key).append("" | "");"
6536,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/configuration/Configuration.java,6014,,"            ""\t{}: {}\n"" +"
6537,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariActionExecutionHelper.java,113,,"      throw new AmbariException(""Action "" + actionRequest.getActionName() + "" does not exist"");"
6538,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariCustomCommandExecutionHelper.java,810,,"            actionExecutionContext.getParameters().get(IS_ADD_OR_DELETE_SLAVE_REQUEST).equalsIgnoreCase(""true"")) {"
6539,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java,523,,"      throw new StackAccessException(""stackName="" + stackId.getStackName() + "", stackVersion="" + stackId.getStackVersion());"
6540,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java,660,,"            "", componentName="" +request.getComponentName() +']');"
6541,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java,1087,,"        if(requestProperties.containsKey(passwordProperty) && requestEntry.getValue().equals(""true"")) {"
6542,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java,1805,,"        + "", clusterId="" + request.getClusterId()"
6543,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java,1806,,"        + "", clusterName="" + request.getClusterName()"
6544,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java,1808,,"        + "", request="" + request);"
6545,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java,2048,,"          throw new AmbariException(""Invalid transition for"""
6546,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java,3029,,"                  + "", serviceName="" + scHost.getServiceName()"
6547,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java,3031,,"                  + "", hostname="" + scHost.getHostName()"
6548,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java,3079,,"                      + "" servicecomponenthost"""
6549,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java,3085,,"                      + "", currentState="" + oldSchState"
6550,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java,3086,,"                      + "", newDesiredState="" + newState);"
6551,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariServer.java,871,,"      userEntity = users.createUser(""admin"", ""admin"", ""admin"");"
6552,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariServer.java,876,,"      userEntity = users.createUser(""user"", ""user"", ""user"");"
6553,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java,280,,"              if (""true"".equalsIgnoreCase(value) || ""all"".equalsIgnoreCase(value)) {"
6554,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java,505,,"    filterContext.put(""configurations"", configurations);"
6555,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java,506,,"    filterContext.put(""services"", installedServices.keySet());"
6556,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java,696,,"            configurationProperties.put(""security_enabled"", (kerberosEnabled) ? ""true"" : ""false"");"
6557,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java,1042,,"        principal = principal.replace(""_HOST"", hostname);"
6558,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java,3340,,"        ""Preparing Operations"","
6559,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AbstractAuthorizedResourceProvider.java,226,,"      throw new AuthorizationException(""Authentication data is not available, authorization to perform the requested operation is not granted"");"
6560,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AbstractProviderModule.java,91,,"  private static final String METRIC_SERVER                             = ""METRICS_COLLECTOR"";"
6561,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AbstractProviderModule.java,120,,"    componentServiceMap.put(""NAMENODE"", Service.Type.HDFS);"
6562,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AbstractProviderModule.java,121,,"    componentServiceMap.put(""DATANODE"", Service.Type.HDFS);"
6563,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AbstractProviderModule.java,122,,"    componentServiceMap.put(""JOURNALNODE"", Service.Type.HDFS);"
6564,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AbstractProviderModule.java,123,,"    componentServiceMap.put(""HBASE_MASTER"", Service.Type.HBASE);"
6565,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AbstractProviderModule.java,124,,"    componentServiceMap.put(""HBASE_REGIONSERVER"", Service.Type.HBASE);"
6566,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AbstractProviderModule.java,125,,"    componentServiceMap.put(""RESOURCEMANAGER"", Service.Type.YARN);"
6567,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AbstractProviderModule.java,126,,"    componentServiceMap.put(""NODEMANAGER"", Service.Type.YARN);"
6568,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AbstractProviderModule.java,127,,"    componentServiceMap.put(""HISTORYSERVER"", Service.Type.MAPREDUCE2);"
6569,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AbstractProviderModule.java,733,,"            PropertyHelper.getPropertyId(""Clusters"", ""cluster_name"")));"
6570,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AbstractProviderModule.java,749,,"            PropertyHelper.getPropertyId(""Hosts"", ""host_name"")"
6571,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AbstractProviderModule.java,761,,"              PropertyHelper.getPropertyId(""ServiceComponentInfo"", ""cluster_name""),"
6572,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AbstractProviderModule.java,763,,"              PropertyHelper.getPropertyId(""ServiceComponentInfo"", ""component_name""),"
6573,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AbstractProviderModule.java,764,,"              PropertyHelper.getPropertyId(""ServiceComponentInfo"", ""state""));"
6574,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AbstractProviderModule.java,795,,"              PropertyHelper.getPropertyId(""HostRoles"", ""cluster_name""),"
6575,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AbstractProviderModule.java,1157,,"        jmxProtocolString = ""http"";"
6576,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/ActionResourceProvider.java,56,,"      .getPropertyId(""Actions"", ""action_name"");"
6577,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/ActiveWidgetLayoutResourceProvider.java,70,,"  public static final String WIDGETLAYOUT_ID_PROPERTY_ID                 = PropertyHelper.getPropertyId(""WidgetLayoutInfo"", ""id"");"
6578,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/AlertResourceProviderUtils.java,216,,"    verifyAuthorization(entity, AUTHORIZATIONS_EXECUTE_CLUSTER_ALERTS, AUTHORIZATIONS_EXECUTE_SERVICE_ALERTS, ""execute"");"
6579,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java,92,,"  private final static String COMMAND_RETRY_ENABLED_DEFAULT = ""true"";"
6580,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java,202,,"    new HashSet<>(Arrays.asList(""fs.defaultFS"", ""hbase.rootdir"", ""instance.volumes"", ""policymgr_external_url"", ""xasecure.audit.destination.hdfs.dir""));"
6581,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java,205,,"    Pair.of(""oozie-env"", ""oozie_user""),"
6582,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java,206,,"    Pair.of(""hive-env"", ""hive_user""),"
6583,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java,224,,"      new SimplePropertyNameExportFilter(""admin_server_host"", ""kerberos-env""),"
6584,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java,260,,"    { new DependencyEqualsFilter(""hbase.security.authorization"", ""hbase-site"", ""true""),"
6585,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java,261,,"      new DependencyNotEqualsFilter(""hive.server2.authentication"", ""hive-site"", ""NONE""),"
6586,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java,283,,"    if (containsHostFromHostGroups(""oozie-site"", ""oozie.service.JPAService.jdbc.url"")) {"
6587,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java,292,,"      oozieEnvUpdaters.put(""oozie_existing_mysql_host"", new SingleHostTopologyUpdater(""OOZIE_SERVER""));"
6588,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java,482,,"    final Collection<String> nnHosts = clusterTopology.getHostAssignmentsForComponent(""NAMENODE"");"
6589,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java,499,,"    Map<String, String> hdfsSiteConfig = clusterConfig.getFullProperties().get(""hdfs-site"");"
6590,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java,600,,"    String atlasServerComponentName = ""ATLAS_SERVER"";"
6591,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java,617,,"    Map<String, String> coreSiteConfig = clusterProps.get(""core-site"");"
6592,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java,1228,,"    if (highAvailabilityUpdaters.get(""yarn-site"").size() > 0) {"
6593,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java,1302,,"      SingleHostTopologyUpdater updater = new SingleHostTopologyUpdater(""RESOURCEMANAGER"");"
6594,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java,1330,,"    oozieSiteUpdatersForAvailability.put(""oozie.zookeeper.connection.string"", new MultipleHostTopologyUpdater(""ZOOKEEPER_SERVER""));"
6595,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java,1945,,"              if (properties.containsKey(""accumulo-site"") && properties.get(""accumulo-site"").get(""instance.volumes"").equals(origValue)) {"
6596,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java,2083,,"      return component.equals(""HISTORYSERVER"");"
6597,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java,2095,,"      return component.equals(""APP_TIMELINE_SERVER"");"
6598,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java,2312,,"      if (!origValue.contains(""%HOSTGROUP"") && (!origValue.contains(LOCALHOST))) {"
6599,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java,2901,,"    multiHostTopologyUpdaters.put(""application-properties"", atlasPropsMap);"
6600,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java,3113,,"    stormSiteMap.put(""worker.childopts"", new OptionalSingleHostTopologyUpdater(""GANGLIA_SERVER""));"
6601,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintConfigurationProcessor.java,3168,,"    multiCoreSiteMap.put(""hadoop.proxyuser.knox.hosts"", new MultipleHostTopologyUpdater(""KNOX_GATEWAY""));"
6602,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/BlueprintResourceProvider.java,88,,"      PropertyHelper.getPropertyId(""Blueprints"", ""blueprint_name"");"
6603,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/ClientConfigResourceProvider.java,540,,"      LOG.error(""Failed to run generate client configs script for components"");"
6604,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/ClusterStackVersionResourceProvider.java,109,,"  protected static final String CLUSTER_STACK_VERSION_ID_PROPERTY_ID = PropertyHelper.getPropertyId(""ClusterStackVersions"", ""id"");"
6605,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/ComponentResourceProvider.java,666,,"              + "", clusterName="" + cluster.getClusterName()"
6606,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/ComponentResourceProvider.java,668,,"              + "", serviceName="" + sc.getServiceName()"
6607,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/ComponentResourceProvider.java,669,,"              + "", componentName="" + sc.getName()"
6608,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/ComponentResourceProvider.java,670,,"              + "", recoveryEnabled="" + sc.isRecoveryEnabled()"
6609,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/ComponentResourceProvider.java,672,,"              + "", newDesiredState="" + newState);"
6610,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/ComponentResourceProvider.java,697,,"                + "", hostname="" + sch.getHostName()"
6611,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/ComponentResourceProvider.java,698,,"                + "", currentState="" + oldSchState"
6612,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/ConfigurationResourceProvider.java,62,,"  public static final String PROPERTIES_PROPERTY_ID = ""properties"";"
6613,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/CredentialResourceProvider.java,66,,"  public static final String CREDENTIAL_CLUSTER_NAME_PROPERTY_ID = PropertyHelper.getPropertyId(""Credential"", ""cluster_name"");"
6614,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/CredentialResourceProvider.java,238,,"      throw new IllegalArgumentException(""Property "" + CREDENTIAL_PRINCIPAL_PROPERTY_ID + "" must be provided"");"
6615,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/CredentialResourceProvider.java,238,,"      throw new IllegalArgumentException(""Property "" + CREDENTIAL_PRINCIPAL_PROPERTY_ID + "" must be provided"");"
6616,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/ExtensionLinkResourceProvider.java,58,,"      .getPropertyId(""ExtensionLink"", ""link_id"");"
6617,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/ExtensionVersionResourceProvider.java,53,,"  public static final String EXTENSION_VERSION_PROPERTY_ID     = PropertyHelper.getPropertyId(""Versions"", ""extension_version"");"
6618,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/FeedResourceProvider.java,51,,"  protected static final String FEED_NAME_PROPERTY_ID                  = PropertyHelper.getPropertyId(""Feed"", ""name"");"
6619,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/HostStackVersionResourceProvider.java,87,,"  protected static final String HOST_STACK_VERSION_ID_PROPERTY_ID              = PropertyHelper.getPropertyId(""HostStackVersions"", ""id"");"
6620,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/InstanceResourceProvider.java,51,,"  protected static final String INSTANCE_FEED_NAME_PROPERTY_ID  = PropertyHelper.getPropertyId(""Instance"", ""feedName"");"
6621,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/JobResourceProvider.java,58,,"      .getPropertyId(""Job"", ""cluster_name"");"
6622,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/OperatingSystemResourceProvider.java,45,,"  public static final String OPERATING_SYSTEM_STACK_NAME_PROPERTY_ID            = PropertyHelper.getPropertyId(""OperatingSystems"", ""stack_name"");"
6623,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/PreUpgradeCheckResourceProvider.java,75,,"  public static final String UPGRADE_CHECK_ID_PROPERTY_ID                  = PropertyHelper.getPropertyId(""UpgradeChecks"", ""id"");"
6624,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/PrivilegeResourceProvider.java,445,,"              "" permission on a "" + entity.getResource().getResourceType().getName() + "" resource."");"
6625,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/QuickLinkArtifactResourceProvider.java,55,,"  public static final String STACK_NAME_PROPERTY_ID = PropertyHelper.getPropertyId(""QuickLinkInfo"", ""stack_name"");"
6626,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/RecommendationResourceProvider.java,66,,"  protected static final String RECOMMENDATIONS_PROPERTY_ID = ""recommendations"";"
6627,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/RepositoryResourceProvider.java,53,,"  public static final String REPOSITORY_REPO_NAME_PROPERTY_ID             = PropertyHelper.getPropertyId(""Repositories"", ""repo_name"");"
6628,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/RepositoryVersionResourceProvider.java,85,,"  public static final String REPOSITORY_VERSION                                = ""RepositoryVersions"";"
6629,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/RequestScheduleResourceProvider.java,378,,"        + "", clusterName = "" + request.getClusterName()"
6630,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/RequestScheduleResourceProvider.java,379,,"        + "", description = "" + request.getDescription()"
6631,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/RequestScheduleResourceProvider.java,380,,"        + "", id = "" + request.getId());"
6632,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/ServiceResourceProvider.java,103,,"      ""ServiceInfo"", ""cluster_name"");"
6633,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/ServiceResourceProvider.java,689,,"          + "", clusterName="" + request.getClusterName()"
6634,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/ServiceResourceProvider.java,690,,"          + "", serviceName="" + request.getServiceName()"
6635,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/StackAdvisorResourceProvider.java,94,,"  private static final String BLUEPRINT_HOST_GROUPS_NAME_PROPERTY = ""name"";"
6636,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/StackAdvisorResourceProvider.java,129,,"  @SuppressWarnings(""unchecked"")"
6637,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/StackArtifactResourceProvider.java,87,,"      PropertyHelper.getPropertyId(""Artifacts"", ""stack_name"");"
6638,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/StackConfigurationDependencyResourceProvider.java,48,,"      .getPropertyId(""StackConfigurationDependency"", ""stack_name"");"
6639,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/StackConfigurationResourceProvider.java,49,,"      .getPropertyId(""StackConfigurations"", ""stack_name"");"
6640,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/StackDependencyResourceProvider.java,55,,"      PropertyHelper.getPropertyId(""Dependencies"", ""stack_name"");"
6641,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/StackLevelConfigurationResourceProvider.java,49,,"      .getPropertyId(""StackLevelConfigurations"", ""stack_name"");"
6642,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/StackServiceComponentResourceProvider.java,48,,"      ""StackServiceComponents"", ""stack_name"");"
6643,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/StackServiceResourceProvider.java,52,,"      ""StackServices"", ""service_name"");"
6644,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/TargetClusterResourceProvider.java,51,,"  protected static final String CLUSTER_NAME_PROPERTY_ID       = PropertyHelper.getPropertyId(""Cluster"", ""name"");"
6645,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/TaskAttemptResourceProvider.java,58,,"      .getPropertyId(""TaskAttempt"", ""cluster_name"");"
6646,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/TaskResourceProvider.java,63,,"  public static final String TASK_CLUSTER_NAME_PROPERTY_ID = PropertyHelper.getPropertyId(""Tasks"", ""cluster_name"");"
6647,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/ThemeArtifactResourceProvider.java,52,,"  public static final String STACK_NAME_PROPERTY_ID = PropertyHelper.getPropertyId(""ThemeInfo"", ""stack_name"");"
6648,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/UpgradeResourceProvider.java,1123,,"    Stage stage = s_stageFactory.get().createNew(request.getId().longValue(), ""/tmp/ambari"","
6649,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/UserAuthorizationResourceProvider.java,64,,"  public static final String AUTHORIZATION_ID_PROPERTY_ID = PropertyHelper.getPropertyId(""AuthorizationInfo"", ""authorization_id"");"
6650,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/WidgetLayoutResourceProvider.java,67,,"  public static final String WIDGETLAYOUT_ID_PROPERTY_ID = PropertyHelper.getPropertyId(""WidgetLayoutInfo"", ""id"");"
6651,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/WidgetLayoutResourceProvider.java,80,,"  @SuppressWarnings(""serial"")"
6652,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/WidgetResourceProvider.java,67,,"  public static final String WIDGET_ID_PROPERTY_ID                 = PropertyHelper.getPropertyId(""WidgetInfo"", ""id"");"
6653,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/internal/WorkflowResourceProvider.java,58,,"      .getPropertyId(""Workflow"", ""cluster_name"");"
6654,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/jdbc/JDBCResourceProvider.java,95,,"        propertyIds.remove(PropertyHelper.getPropertyId(""Hosts"", ""disk_info""));"
6655,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/jdbc/JDBCResourceProvider.java,192,,"            throw new IllegalStateException(""DB error : "", e);"
6656,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/MetricsCollectorHAClusterState.java,63,,"    if (HostStatusHelper.isHostComponentLive(managementController, clusterName, collectorHost, ""AMBARI_METRICS"","
6657,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/ganglia/GangliaPropertyProvider.java,66,,"    GANGLIA_CLUSTER_NAME_MAP.put(""DATANODE"",           Arrays.asList(""HDPDataNode"", ""HDPSlaves""));"
6658,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/metrics/timeline/AMSPropertyProvider.java,115,,"    if (componentName.equals(""HOST"")) {"
6659,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/utilities/DatabaseChecker.java,122,,"                  ""ServiceComponentDesiredStateEntity, clusterName=%s, serviceName=%s, componentName=%s "","
6660,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/utilities/KerberosChecker.java,75,,"        LOG.warn(""Can't find "" + HTTP_SPNEGO_STANDARD_ENTRY + "" entry in "" +"
6661,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/controller/utilities/PredicateBuilder.java,143,,"        throw new IllegalStateException(""No property."");"
6662,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/credentialapi/CredentialUtil.java,49,,"                  ""   ["" + CreateCommand.USAGE + ""]\n"" +"
6663,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/credentialapi/CredentialUtil.java,49,,"                  ""   ["" + CreateCommand.USAGE + ""]\n"" +"
6664,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/credentialapi/CredentialUtil.java,127,,"        if (alias.equals(""-h"") || alias.equals(""-help"")) {"
6665,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/credentialapi/CredentialUtil.java,206,,"      System.out.println(""========================================================="" +"
6666,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/credentialapi/CredentialUtil.java,207,,"              ""======"");"
6667,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/credentialapi/CredentialUtil.java,208,,"      System.out.println(CreateCommand.USAGE + "":\n\n"" + CreateCommand.DESC);"
6668,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/DBAccessorImpl.java,301,,"          result = rs.getString(""COLUMN_NAME"") != null && rs.getString(""COLUMN_NAME"").equalsIgnoreCase(columnName);"
6669,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/dao/AlertDefinitionDAO.java,139,,"    query.setParameter(""clusterId"", clusterId);"
6670,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/dao/AlertsDAO.java,243,,"    query.setParameter(""clusterId"", clusterId);"
6671,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/dao/AlertsDAO.java,550,,"    query.setParameter(""okState"", AlertState.OK);"
6672,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/dao/AlertsDAO.java,551,,"    query.setParameter(""warningState"", AlertState.WARNING);"
6673,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/dao/AlertsDAO.java,552,,"    query.setParameter(""criticalState"", AlertState.CRITICAL);"
6674,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/dao/AlertsDAO.java,553,,"    query.setParameter(""unknownState"", AlertState.UNKNOWN);"
6675,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/dao/AlertsDAO.java,554,,"    query.setParameter(""maintenanceStateOff"", MaintenanceState.OFF);"
6676,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/dao/AlertsDAO.java,557,,"      query.setParameter(""serviceName"", serviceName);"
6677,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/dao/AlertsDAO.java,561,,"      query.setParameter(""hostName"", hostName);"
6678,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/dao/ClusterDAO.java,110,,"        cb.equal(config.get(""clusterId""), clusterId)),"
6679,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/dao/ClusterDAO.java,187,,"    query.setParameter(""stack"", stackEntity);"
6680,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/dao/HostComponentStateDAO.java,83,,"    query.setParameter(""serviceName"", serviceName);"
6681,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/dao/HostComponentStateDAO.java,99,,"    query.setParameter(""componentName"", componentName);"
6682,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/dao/HostRoleCommandDAO.java,250,,"    query.setParameter(""requestId"", requestId);"
6683,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/dao/HostRoleCommandDAO.java,298,,"        ""ORDER BY task.taskId"","
6684,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/dao/HostRoleCommandDAO.java,339,,"    query.setParameter(""statuses"", statuses);"
6685,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/dao/HostRoleCommandDAO.java,408,,"        ""FROM HostRoleCommandEntity hostRoleCommand "" +"
6686,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/dao/HostVersionDAO.java,92,,"    query.setParameter(""clusterName"", clusterName);"
6687,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/dao/HostVersionDAO.java,110,,"    query.setParameter(""hostName"", hostName);"
6688,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/dao/KerberosKeytabPrincipalDAO.java,113,,"    query.setParameter(""principalName"", principal);"
6689,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/dao/KerberosKeytabPrincipalDAO.java,125,,"    query.setParameter(""hostId"", hostId);"
6690,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/dao/ServiceComponentDesiredStateDAO.java,97,,"    query.setParameter(""clusterId"", clusterId);"
6691,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/dao/ServiceComponentDesiredStateDAO.java,98,,"    query.setParameter(""serviceName"", serviceName);"
6692,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/dao/ServiceComponentDesiredStateDAO.java,99,,"    query.setParameter(""componentName"", componentName);"
6693,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/dao/ServiceConfigDAO.java,65,,"        createQuery(""SELECT scv FROM ServiceConfigEntity scv "" +"
6694,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/dao/ServiceConfigDAO.java,88,,"    cq.multiselect(groupVersion.get(""groupId"").alias(""groupId""), cb.max(groupVersion.<Long>get(""version"")).alias(""lastVersion""));"
6695,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/dao/ServiceConfigDAO.java,136,,"    query.setParameter(""clusterId"", clusterId);"
6696,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/dao/ServiceConfigDAO.java,156,,"    query.setParameter(""serviceName"", serviceName);"
6697,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/dao/UpgradeDAO.java,70,,"    query.setParameter(""clusterId"", Long.valueOf(clusterId));"
6698,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/entities/AlertDefinitionEntity.java,60,,"  ""cluster_id"", ""definition_name""}))"
6699,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/entities/BlueprintEntity.java,42,,"@Table(name = ""blueprint"")"
6700,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/entities/BlueprintSettingEntity.java,40,,"        name = ""UQ_blueprint_setting_name"", columnNames = {""blueprint_name"", ""setting_name""}"
6701,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/entities/ClusterConfigEntity.java,49,,"  uniqueConstraints = {@UniqueConstraint(name = ""UQ_config_type_tag"", columnNames = {""cluster_id"", ""type_name"", ""version_tag""}),"
6702,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/entities/ClusterEntity.java,105,,"  @OneToMany(mappedBy = ""clusterEntity"")"
6703,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/entities/HostComponentDesiredStateEntity.java,53,,"    columnNames = { ""component_name"", ""service_name"", ""host_id"", ""cluster_id"" }) )"
6704,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/entities/HostComponentDesiredStateEntity.java,53,,"    columnNames = { ""component_name"", ""service_name"", ""host_id"", ""cluster_id"" }) )"
6705,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/entities/HostComponentDesiredStateEntity.java,53,,"    columnNames = { ""component_name"", ""service_name"", ""host_id"", ""cluster_id"" }) )"
6706,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/entities/HostComponentDesiredStateEntity.java,53,,"    columnNames = { ""component_name"", ""service_name"", ""host_id"", ""cluster_id"" }) )"
6707,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/entities/HostEntity.java,127,,"  @OneToMany(mappedBy = ""hostEntity"")"
6708,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/entities/HostRoleCommandEntity.java,54,,"           @Index(name = ""idx_hrc_request_id"", columnList = ""request_id"")"
6709,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/entities/HostVersionEntity.java,45,,"        columnNames = { ""host_id"", ""repo_version_id"" }))"
6710,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/entities/HostVersionEntity.java,55,,"        ""SELECT hostVersion FROM HostVersionEntity hostVersion JOIN hostVersion.hostEntity host JOIN host.clusterEntities clusters "" +"
6711,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/entities/ServiceComponentDesiredStateEntity.java,53,,"        columnNames = { ""component_name"", ""service_name"", ""cluster_id"" }) )"
6712,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/entities/ServiceComponentDesiredStateEntity.java,53,,"        columnNames = { ""component_name"", ""service_name"", ""cluster_id"" }) )"
6713,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/entities/ServiceConfigEntity.java,72,,"  @Column(name = ""service_config_id"")"
6714,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/entities/ViewEntity.java,156,,"      @JoinColumn(name = ""resource_type_id"", referencedColumnName = ""resource_type_id"", nullable = false)"
6715,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/entities/ViewInstanceEntity.java,77,,"    name = ""UQ_viewinstance_name"", columnNames = {""view_name"", ""name""}"
6716,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/orm/entities/WidgetLayoutEntity.java,47,,"        uniqueConstraints=@UniqueConstraint(columnNames={""layout_name"", ""cluster_id""})"
6717,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/scheduler/ExecutionScheduleManager.java,811,,"      throw new AmbariException(""Unable to find request schedule with id = """
6718,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/security/authorization/Users.java,183,,"      throw new AmbariException(""User "" + userName + "" doesn't exist"");"
6719,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/security/authorization/Users.java,183,,"      throw new AmbariException(""User "" + userName + "" doesn't exist"");"
6720,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/security/authorization/Users.java,244,,"      throw new AmbariException(""Group "" + groupName + "" doesn't exist"");"
6721,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/security/authorization/Users.java,1382,,"                  throw new AmbariException(""The authentication type already exists for this user"");"
6722,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/serveraction/kerberos/ADKerberosOperationHandler.java,223,,"      throw new KerberosOperationException(""This operation handler has not been opened"");"
6723,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/serveraction/kerberos/ADKerberosOperationHandler.java,226,,"      throw new KerberosOperationException(""principal is null"");"
6724,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/serveraction/kerberos/UpdateKerberosConfigsServerAction.java,128,,"          if(!configTypes.contains(""cluster-env"")) {"
6725,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/serveraction/users/PostUserCreationHookServerAction.java,134,,"      LOGGER.error(""Missing command parameter: {}; Failing the server action."", UserHookParams.PAYLOAD.param());"
6726,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/serveraction/users/PostUserCreationHookServerAction.java,135,,"      throw new IllegalArgumentException(""Missing command parameter: ["" + UserHookParams.PAYLOAD.param() + ""]"");"
6727,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/stack/ExtensionHelper.java,56,,"                        + "", stackName="" + stack.getName()"
6728,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/stack/ExtensionHelper.java,57,,"                        + "", stackVersion="" + stack.getVersion()"
6729,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/stack/ExtensionHelper.java,59,,"                        + "", extensionName="" + extension.getName()"
6730,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/stack/ExtensionHelper.java,60,,"                        + "", extensionVersion="" + extension.getVersion();"
6731,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/stack/StackModule.java,436,,"      throw new AmbariException(""The service '"" + serviceInfo.getName() + ""' in stack '"" + stackInfo.getName() + "":"""
6732,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/stack/StackModule.java,436,,"      throw new AmbariException(""The service '"" + serviceInfo.getName() + ""' in stack '"" + stackInfo.getName() + "":"""
6733,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/stack/StackModule.java,446,,"          + stackInfo.getVersion() + ""' extends a non-existent service: '"" + parent + ""'"";"
6734,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/stack/upgrade/ConfigUpgradeChangeDefinition.java,352,,"    @XmlAttribute(name = ""key"")"
6735,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/stack/upgrade/ConfigUpgradeChangeDefinition.java,355,,"    @XmlAttribute(name = ""value"")"
6736,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/stack/upgrade/ConfigUpgradeChangeDefinition.java,362,,"          .add(""ifKey"", ifKey)"
6737,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/stack/upgrade/ConfigUpgradeChangeDefinition.java,363,,"          .add(""ifType"", ifType)"
6738,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/stack/upgrade/ConfigUpgradeChangeDefinition.java,364,,"          .add(""ifValue"",ifValue)"
6739,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/stack/upgrade/ConfigUpgradeChangeDefinition.java,365,,"          .add(""ifKeyState"", ifKeyState).omitNullValues().toString();"
6740,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/stack/upgrade/ConfigUpgradeChangeDefinition.java,467,,"    @XmlAttribute(name=""find"")"
6741,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/stack/upgrade/UpgradePack.java,608,,"    @XmlElement(name=""task"")"
6742,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/state/Alert.java,72,,"  @JsonProperty(""name"")"
6743,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/state/Alert.java,81,,"  @JsonProperty(""service"")"
6744,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/state/Alert.java,90,,"  @JsonProperty(""component"")"
6745,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/state/Alert.java,99,,"  @JsonProperty(""host"")"
6746,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/state/Alert.java,108,,"  @JsonProperty(""state"")"
6747,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/state/Alert.java,117,,"  @JsonProperty(""label"")"
6748,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/state/Alert.java,135,,"  @JsonProperty(""text"")"
6749,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/state/Alert.java,151,,"  @JsonProperty(""instance"")"
6750,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/state/Alert.java,193,,"  @JsonProperty(""timestamp"")"
6751,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/state/ServiceComponentImpl.java,151,,"          + "", clusterName="" + service.getCluster().getClusterName()"
6752,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/state/ServiceComponentImpl.java,152,,"          + "", serviceName="" + service.getName()"
6753,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/state/ServiceComponentImpl.java,153,,"          + "", componentName="" + componentName"
6754,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/state/ServiceComponentImpl.java,321,,"            + "", serviceComponentName="" + getName() + "", hostname="" + hostComponent.getHostName()"
6755,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/state/ServiceComponentImpl.java,322,,"            + "", recoveryEnabled="" + isRecoveryEnabled());"
6756,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/state/ServiceImpl.java,260,,"          + "", clusterName="" + cluster.getClusterName()"
6757,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/state/ServiceImpl.java,261,,"          + "", serviceName="" + getName()"
6758,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/state/ServiceImpl.java,581,,"            + cluster.getClusterName() + "", serviceName="" + getName() + "", componentName="""
6759,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/state/action/ActionImpl.java,115,,"          + "", actionId="" + action.getId()"
6760,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/state/cluster/ClusterImpl.java,702,,"          + "", hostname="" + hostname + "", clusterName="" + getClusterName()"
6761,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/state/cluster/ClusterImpl.java,717,,"          + "", serviceName="" + serviceName + "", serviceComponentName"""
6762,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/state/cluster/ClusterImpl.java,717,,"          + "", serviceName="" + serviceName + "", serviceComponentName"""
6763,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/state/cluster/ClusterImpl.java,718,,"          + componentName + "", hostname= "" + hostname);"
6764,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/state/svccomphost/ServiceComponentHostImpl.java,922,,"      LOG.warn(""Setting a member on an entity object that may have been """
6765,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/state/svccomphost/ServiceComponentHostImpl.java,923,,"          + ""previously deleted, serviceName = "" + getServiceName() + "", "" + ""componentName = """
6766,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/state/svccomphost/ServiceComponentHostImpl.java,923,,"          + ""previously deleted, serviceName = "" + getServiceName() + "", "" + ""componentName = """
6767,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/state/svccomphost/ServiceComponentHostImpl.java,924,,"          + getServiceComponentName() + "", "" + ""hostName = "" + getHostName());"
6768,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/topology/BlueprintValidatorImpl.java,151,,"          if (hiveEnvConfig != null && !hiveEnvConfig.isEmpty() && hiveEnvConfig.get(""hive_database"") != null"
6769,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/topology/ClusterConfigurationRequest.java,299,,"          if (! serviceConfigType.equals(""cluster-env"")) {"
6770,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/topology/validators/UnitValidatedProperty.java,33,,"    .add(new UnitValidatedProperty(""HDFS"", ""hadoop-env"", ""namenode_heapsize""))"
6771,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/topology/validators/UnitValidatedProperty.java,33,,"    .add(new UnitValidatedProperty(""HDFS"", ""hadoop-env"", ""namenode_heapsize""))"
6772,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/upgrade/SchemaUpgradeHelper.java,210,,"          LOG.error(""Upgrade failed. "", e);"
6773,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog252.java,251,,"              Collections.<String, Collection<String>>singletonMap(""livy-conf"", Collections.singleton(""livy.superusers"")))) {"
6774,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog260.java,675,,"      KerberosIdentityDescriptor rangerKmsServiceIdentity = rangerKmsServiceDescriptor.getIdentity(""/smokeuser"");"
6775,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog260.java,731,,"                LOG.info(""    Updated '"" + YARN_LLAP_ZK_HIVE_KERBEROS_IDENTITY + ""' identity descriptor reference = '"""
6776,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog270.java,654,,"        ""insert into "" + temporaryTable +"
6777,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog270.java,657,,"          ""  u."" + USERS_USER_ID_COLUMN + "","" +"
6778,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog270.java,812,,"        ""  from "" + MEMBERS_TABLE + "" m inner join"" +"
6779,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog270.java,840,,"        ""    "" + MEMBERS_USER_ID_COLUMN + "","" +"
6780,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog270.java,889,,"        ""    ap."" + ADMINPRIVILEGE_PRIVILEGE_ID_COLUMN + "","" +"
6781,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog270.java,1145,,"      serviceConfigUpdate.setParameter(""newServiceName"", AMBARI_INFRA_NEW_NAME);"
6782,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog270.java,1146,,"      serviceConfigUpdate.setParameter(""oldServiceName"", AMBARI_INFRA_OLD_NAME);"
6783,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog270.java,1480,,"            String content = logFeederLog4jProperties.getProperties().get(""content"");"
6784,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog270.java,1481,,"            if (content.contains(""<!DOCTYPE log4j:configuration SYSTEM \""log4j.dtd\"">"")) {"
6785,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog270.java,1681,,"          if(""true"".equalsIgnoreCase(propertyValue)) {"
6786,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/utils/MpackVersion.java,93,,"      throw new IllegalArgumentException(""Wrong format for mpack version"");"
6787,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/utils/ShellCommandUtil.java,195,,"          ""because current OS is not Linux "", mode, path));"
6788,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/view/ViewURLStreamProvider.java,212,,"      LOG.warn(""Call to "" + spec + "" is not allowed. See ambari.properties proxy.allowed.hostports."");"
6789,./TargetProjects/ambari/ambari-server/src/main/java/org/apache/ambari/server/view/ViewURLStreamProvider.java,212,,"      LOG.warn(""Call to "" + spec + "" is not allowed. See ambari.properties proxy.allowed.hostports."");"
6790,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/ExecutionCommandWrapperTest.java,126,,"    cluster1.addService(""HDFS"", repositoryVersion);"
6791,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/TestActionDBAccessorImpl.java,76,,"  private String hostName = ""host1"";"
6792,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/TestActionDBAccessorImpl.java,77,,"  private String clusterName = ""cluster1"";"
6793,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/TestActionDBAccessorImpl.java,138,,"    stage.setHostRoleStatus(hostname, ""HBASE_MASTER"", HostRoleStatus.QUEUED);"
6794,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/TestActionDBAccessorImpl.java,483,,"    clusters.addHost(""host2"");"
6795,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/TestActionDBAccessorImpl.java,489,,"    assertEquals(""Request IDs not matches"", requestIds, requestIdsResult);"
6796,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/TestActionDBAccessorImpl.java,564,,"    Stage s = stageFactory.createNew(requestId, ""/a/b"", ""cluster1"", 1L, ""action db accessor test"","
6797,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/TestActionDBAccessorImpl.java,564,,"    Stage s = stageFactory.createNew(requestId, ""/a/b"", ""cluster1"", 1L, ""action db accessor test"","
6798,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/TestActionDBAccessorImpl.java,565,,"      ""commandParamsStage"", ""hostParamsStage"");"
6799,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/TestActionDBAccessorImpl.java,565,,"      ""commandParamsStage"", ""hostParamsStage"");"
6800,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/TestActionDBAccessorImpl.java,575,,"            ""host1"", System.currentTimeMillis()), ""cluster1"", ""HBASE"", false, false);"
6801,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/TestActionManager.java,74,,"  private String clusterName = ""cluster1"";"
6802,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/TestActionManager.java,109,,"    stage.setHostRoleStatus(hostname, ""HBASE_MASTER"", HostRoleStatus.QUEUED);"
6803,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/TestActionManager.java,117,,"    cr.setStdErr(""ERROR"");"
6804,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/TestActionManager.java,118,,"    cr.setStdOut(""OUTPUT"");"
6805,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/TestActionManager.java,119,,"    cr.setStructuredOut(""STRUCTURED_OUTPUT"");"
6806,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/TestActionScheduler.java,144,,"  private final String hostname = ""ahost.ambari.apache.org"";"
6807,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/TestActionScheduler.java,224,,"      ""{\""host_param\"":\""param_value\""}"", ""{\""stage_param\"":\""param_value\""}"");"
6808,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/TestActionScheduler.java,224,,"      ""{\""host_param\"":\""param_value\""}"", ""{\""stage_param\"":\""param_value\""}"");"
6809,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/TestActionScheduler.java,247,,"    assertEquals(""1-977"", ((ExecutionCommand) scheduledCommand).getCommandId());"
6810,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/TestActionScheduler.java,261,,"    s.setHostRoleStatus(hostname, ""NAMENODE"", HostRoleStatus.COMPLETED);"
6811,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/TestActionScheduler.java,452,,"            new ServiceComponentHostInstallEvent(""SECONDARY_NAMENODE"", hostname, System.currentTimeMillis(), ""HDP-1.2.0""),"
6812,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/TestActionScheduler.java,453,,"            ""cluster1"", ""HDFS"", false, false);"
6813,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/TestActionScheduler.java,598,,"    String hostname1 = ""host1"";"
6814,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/TestActionScheduler.java,599,,"    String hostname2 = ""host2"";"
6815,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/TestActionScheduler.java,631,,"    final Stage stage = stageFactory.createNew(1, ""/tmp"", ""cluster1"", 1L, ""stageWith2Tasks"","
6816,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/TestActionScheduler.java,699,,"    while (!(stages.get(0).getHostRoleStatus(hostname1, ""DATANODE"")"
6817,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/TestActionScheduler.java,753,,"    final Stage s = getStageWithServerAction(1, 977, payload, ""test"", 1200, false, false);"
6818,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/TestActionScheduler.java,789,,"        return s.getHostRoleCommand(null, ""AMBARI_SERVER_ACTION"");"
6819,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/TestActionScheduler.java,848,,"    String hostname2 = ""bhost.ambari.apache.org"";"
6820,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/TestActionScheduler.java,1250,,"    String hostname3 = ""chost.ambari.apache.org"";"
6821,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/TestActionScheduler.java,1341,,"    Assert.assertEquals(HostRoleStatus.PENDING, firstStageInProgressPerRequest.get(1).getHostRoleStatus(hostname1, ""GANGLIA_MONITOR""));"
6822,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/TestActionScheduler.java,1701,,"    reports.add(getCommandReport(HostRoleStatus.FAILED, Role.NAMENODE, Service.Type.HDFS, ""1-1"", 1));"
6823,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/TestActionScheduler.java,1928,,"        new ServiceComponentHostInstallEvent(role.toString(), host, now, ""HDP-0.2""),"
6824,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/actionmanager/TestActionScheduler.java,1968,,"    stage.addHostRoleExecutionCommand(""host3"", Role.DATANODE, RoleCommand.UPGRADE,"
6825,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/AgentResourceTest.java,255,,"    Assert.assertEquals(""abc"", pkgs[0].getName());"
6826,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/HeartbeatProcessorTest.java,187,,"    cr.setStatus(""COMPLETED"");"
6827,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/HeartbeatProcessorTest.java,191,,"    cr.setRoleCommand(""START"");"
6828,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/HeartbeatProcessorTest.java,243,,"    cr.setRoleCommand(""INSTALL"");"
6829,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/HeartbeatProcessorTest.java,306,,"    cr.setRoleCommand(""CUSTOM_COMMAND"");"
6830,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/HeartbeatProcessorTest.java,580,,"    cr.setStdErr(""none"");"
6831,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/HeartbeatProcessorTest.java,581,,"    cr.setStdOut(""dummy output"");"
6832,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/HeartbeatProcessorTest.java,611,,"    assertEquals(""Host state should be "" + State.STARTED,"
6833,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/HeartbeatProcessorTest.java,860,,"    StackId stack130 = new StackId(""HDP-1.3.0"");"
6834,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/HeartbeatProcessorTest.java,1111,,"    json.addProperty(""actual_version"", ""2.2.1.0-2222"");"
6835,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/HeartbeatProcessorTest.java,1119,,"    cmdReport.setCustomCommand(""install_packages"");"
6836,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatHandler.java,208,,"    hostObject.setIPv4(""ipv4"");"
6837,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatHandler.java,209,,"    hostObject.setIPv6(""ipv6"");"
6838,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatHandler.java,805,,"    cr.setStdErr(""none"");"
6839,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatHandler.java,806,,"    cr.setStdOut(""dummy output"");"
6840,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatHandler.java,850,,"          DummyCluster, ""HDFS"", false, false);"
6841,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatHandler.java,1001,,"    compRecReport.setName(""DATANODE"");"
6842,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatHandler.java,1083,,"    dataNodeStatus.setStatus(""STARTED"");"
6843,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatHandler.java,1106,,"    dataNodeStatus.setStatus(""INSTALLED"");"
6844,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatHandler.java,1409,,"    kcp = testInjectKeytabSetKeytab(""c6403.ambari.apache.org"");"
6845,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatHandler.java,1416,,"    Assert.assertEquals(""dn/_HOST@_REALM"", properties.get(KerberosIdentityDataFileWriter.PRINCIPAL));"
6846,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatHandler.java,1417,,"    Assert.assertEquals(""/etc/security/keytabs/dn.service.keytab"", properties.get(KerberosIdentityDataFileWriter.KEYTAB_FILE_PATH));"
6847,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatMonitor.java,81,,"  private String serviceName = ""HDFS"";"
6848,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatMonitor.java,129,,"    hi.setOS(""Centos5"");"
6849,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatMonitor.java,134,,"    hb.setNodeStatus(new HostStatus(HostStatus.Status.HEALTHY, ""cool""));"
6850,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatMonitor.java,151,,"    StackId stackId = new StackId(""HDP-0.1"");"
6851,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatMonitor.java,154,,"    setOsFamily(clusters.getHost(hostname1), ""redhat"", ""6.3"");"
6852,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatMonitor.java,154,,"    setOsFamily(clusters.getHost(hostname1), ""redhat"", ""6.3"");"
6853,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatMonitor.java,208,,"    hm.getAgentRequests().setExecutionDetailsRequest(hostname1, ""DATANODE"", Boolean.TRUE.toString());"
6854,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatMonitor.java,211,,"    assertTrue(""HeartbeatMonitor should generate StatusCommands for host1"", cmds.size() == 3);"
6855,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatMonitor.java,220,,"      containsNAMENODEStatus |= cmd.getComponentName().equals(""NAMENODE"");"
6856,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/TestHeartbeatMonitor.java,221,,"      containsSECONDARY_NAMENODEStatus |= cmd.getComponentName().equals(""SECONDARY_NAMENODE"");"
6857,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/stomp/AlertDefinitionsHolderTest.java,42,,"        Collections.emptyMap(), ""host1"", HOST_ID);"
6858,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/stomp/TopologyClusterTest.java,37,,"    TopologyHost dummyHost = new TopologyHost(1L, ""hostName1"");"
6859,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/stomp/TopologyClusterTest.java,38,,"    TopologyHost hostToAddition = new TopologyHost(2L, ""hostName2"");"
6860,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/stomp/TopologyClusterTest.java,91,,"    TopologyComponent dummyComponent = createDummyTopologyComponent(""comp1"","
6861,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/stomp/TopologyClusterTest.java,93,,"    TopologyComponent componentToAddition = createDummyTopologyComponent(""comp2"","
6862,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/stomp/TopologyClusterTest.java,94,,"        new Long[]{1L, 3L}, new String[]{""hostName1"", ""hostName3""});"
6863,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/stomp/dto/MetadataClusterTest.java,35,,"    current.put(""service1"", new MetadataServiceInfo(""v1"", Boolean.FALSE, null, 1L, ""servicePackageFolder""));"
6864,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/stomp/dto/MetadataClusterTest.java,35,,"    current.put(""service1"", new MetadataServiceInfo(""v1"", Boolean.FALSE, null, 1L, ""servicePackageFolder""));"
6865,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/stomp/dto/MetadataClusterTest.java,36,,"    current.put(""service2"", new MetadataServiceInfo(""v1"", Boolean.FALSE, null, 1L, ""servicePackageFolder""));"
6866,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/stomp/dto/MetadataClusterTest.java,37,,"    current.put(""service3"", new MetadataServiceInfo(""v1"", Boolean.FALSE, null, 1L, ""servicePackageFolder""));"
6867,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/stomp/dto/MetadataClusterTest.java,99,,"    current.put(""param1"", ""value1"");"
6868,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/stomp/dto/MetadataClusterTest.java,99,,"    current.put(""param1"", ""value1"");"
6869,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/stomp/dto/MetadataClusterTest.java,100,,"    current.put(""param2"", ""value2"");"
6870,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/stomp/dto/MetadataClusterTest.java,100,,"    current.put(""param2"", ""value2"");"
6871,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/stomp/dto/MetadataClusterTest.java,101,,"    current.put(""param3"", ""value3"");"
6872,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/agent/stomp/dto/MetadataClusterTest.java,101,,"    current.put(""param3"", ""value3"");"
6873,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/alerts/AgentHeartbeatAlertRunnableTest.java,66,,"  private final static String DEFINITION_SERVICE = ""AMBARI"";"
6874,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/alerts/AgentHeartbeatAlertRunnableTest.java,67,,"  private final static String DEFINITION_COMPONENT = ""AMBARI_SERVER"";"
6875,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/alerts/ComponentVersionAlertRunnableTest.java,78,,"  private final static String DEFINITION_SERVICE = ""AMBARI"";"
6876,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/alerts/ComponentVersionAlertRunnableTest.java,79,,"  private final static String DEFINITION_COMPONENT = ""AMBARI_SERVER"";"
6877,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/alerts/StaleAlertRunnableTest.java,230,,"    AlertCluster alertCluster1host1 = new AlertCluster(Collections.singletonMap(alertDefinitionId1, alertDefinition1), ""host1"");"
6878,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/alerts/StaleAlertRunnableTest.java,234,,"      put(alertDefinitionId1, alertDefinition1);}}, ""host2"");"
6879,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/alerts/StaleAlertRunnableTest.java,276,,"    definition.setDefinitionName(""foo-definition"");"
6880,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/alerts/StaleAlertRunnableTest.java,277,,"    definition.setServiceName(""HDFS"");"
6881,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/alerts/StaleAlertRunnableTest.java,278,,"    definition.setComponentName(""NAMENODE"");"
6882,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/handlers/QueryCreateHandlerTest.java,85,,"    String resourceKeyProperty = ""resourceKeyProperty"";"
6883,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/handlers/QueryCreateHandlerTest.java,119,,"    mapProperties.put(""components"", arraySet);"
6884,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/handlers/QueryCreateHandlerTest.java,122,,"    map.put(PropertyHelper.getPropertyId(""ServiceComponentInfo"", ""component_name""), ""SECONDARY_NAMENODE"");"
6885,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/handlers/QueryCreateHandlerTest.java,122,,"    map.put(PropertyHelper.getPropertyId(""ServiceComponentInfo"", ""component_name""), ""SECONDARY_NAMENODE"");"
6886,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/handlers/QueryCreateHandlerTest.java,122,,"    map.put(PropertyHelper.getPropertyId(""ServiceComponentInfo"", ""component_name""), ""SECONDARY_NAMENODE"");"
6887,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/handlers/QueryCreateHandlerTest.java,126,,"    map.put(PropertyHelper.getPropertyId(""ServiceComponentInfo"", ""component_name""), ""HDFS_CLIENT"");"
6888,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/handlers/QueryCreateHandlerTest.java,135,,"    map1.put(createKeyProperty, ""id1"");"
6889,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/handlers/QueryCreateHandlerTest.java,139,,"    map2.put(createKeyProperty, ""id2"");"
6890,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/handlers/QueryCreateHandlerTest.java,153,,"    TreeNode<Resource> resultTree = new TreeNodeImpl<>(null, null, ""result"");"
6891,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/handlers/QueryCreateHandlerTest.java,154,,"    resultTree.addChild(resource1, ""resource1"");"
6892,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/handlers/QueryCreateHandlerTest.java,155,,"    resultTree.addChild(resource2, ""resource2"");"
6893,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/handlers/ReadHandlerTest.java,80,,"    expectLastCall().andThrow(new IllegalArgumentException(""testMsg""));"
6894,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/predicate/QueryLexerTest.java,98,,"    listTokens.add(new Token(Token.TYPE.PROPERTY_OPERAND, ""foo""));"
6895,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/predicate/QueryParserTest.java,66,,"    listTokens.add(new Token(Token.TYPE.PROPERTY_OPERAND, ""foo""));"
6896,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/predicate/QueryParserTest.java,170,,"    listTokens.add(new Token(Token.TYPE.RELATIONAL_OPERATOR_FUNC, "".in(""));"
6897,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/predicate/QueryParserTest.java,192,,"    listTokens.add(new Token(Token.TYPE.PROPERTY_OPERAND, ""HostRoles/host_name""));"
6898,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/predicate/QueryParserTest.java,296,,"    listTokens.add(new Token(Token.TYPE.PROPERTY_OPERAND, ""category1""));"
6899,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/ExtendedResourcePredicateVisitorTest.java,46,,"    resource1SubProperties1.put(""sub1/category/p1"", 1);"
6900,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/ExtendedResourcePredicateVisitorTest.java,47,,"    resource1SubProperties1.put(""sub1/category/p2"", 2);"
6901,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/ExtendedResourcePredicateVisitorTest.java,48,,"    resource1SubProperties1.put(""sub1/category/p3"", 3);"
6902,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/ProcessingPredicateVisitorTest.java,45,,"    mapIds.put(Resource.Type.Stack, ""HDP"");"
6903,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/ProcessingPredicateVisitorTest.java,50,,"    Predicate predicate = new PredicateBuilder().property(""Stacks/stack_name"").equals(""HDP"").and()."
6904,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/ProcessingPredicateVisitorTest.java,51,,"        property(""versions/stackServices/StackServices/service_name"").equals(""HBASE"").and()."
6905,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/ProcessingPredicateVisitorTest.java,52,,"        property(""versions/operatingSystems/OperatingSystems/os_type"").equals(""centos5"").toPredicate();"
6906,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/QueryImplTest.java,93,,"    mapIds.put(Resource.Type.Cluster, ""cluster"");"
6907,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/QueryImplTest.java,155,,"    TreeNode<Resource> clusterNode = tree.getChild(""Cluster:1"");"
6908,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/QueryImplTest.java,168,,"    mapIds.put(Resource.Type.Stack, ""HDP"");"
6909,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/QueryImplTest.java,179,,"    TreeNode<Resource> stackNode = tree.getChild(""Stack:1"");"
6910,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/QueryImplTest.java,239,,"    Predicate predicate = pb.property(""versions/operating_systems/OperatingSystems/os_type"").equals(""centos5"").toPredicate();"
6911,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/QueryImplTest.java,255,,"    TreeNode<Resource> versionNode = versionsNode.getChild(""StackVersion:1"");"
6912,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/QueryImplTest.java,263,,"    TreeNode<Resource> opSystemNode = opSystemsNode.getChild(""OperatingSystem:1"");"
6913,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/QueryImplTest.java,292,,"    expect(schema.getKeyPropertyId(Resource.Type.Cluster)).andReturn(""Clusters/cluster_name"").anyTimes();"
6914,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/QueryImplTest.java,357,,"    expect(hostSchema.getKeyPropertyId(Resource.Type.Host)).andReturn(""Hosts/host_name"").anyTimes();"
6915,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/QueryImplTest.java,486,,"    Assert.assertEquals(""1.2.1"", repositoryResource.getPropertyValue(""Repositories/stack_version""));"
6916,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/QueryImplTest.java,510,,"    Predicate predicate = pb.property(""Versions/stack_version"").equals(""1.2.1"").or()"
6917,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/QueryImplTest.java,511,,"        .property(""Versions/stack_version"").equals(""1.2.2"").toPredicate();"
6918,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/QueryImplTest.java,633,,"    TreeNode<Resource> hostNode = tree.getChild(""Host:1"");"
6919,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/QueryImplTest.java,637,,"    hostNode = tree.getChild(""Host:2"");"
6920,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/QueryImplTest.java,641,,"    hostNode = tree.getChild(""Host:3"");"
6921,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/QueryImplTest.java,645,,"    hostNode = tree.getChild(""Host:4"");"
6922,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/QueryImplTest.java,688,,"    Assert.assertEquals(""host:2"", hostNode.getObject().getPropertyValue(PropertyHelper.getPropertyId(""Hosts"", ""host_name"")));"
6923,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/QueryImplTest.java,840,,"    instance.addLocalProperty(""c1/p1"");"
6924,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/QueryImplTest.java,900,,"    Assert.assertNotNull(hostNode.getObject().getPropertyValue(""c1/p2""));"
6925,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/QueryImplTest.java,901,,"    Assert.assertNotNull(hostNode.getObject().getPropertyValue(""c1/p3""));"
6926,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/ClusterBlueprintRendererTest.java,135,,"    clusterProps.put(""test-type-one"", clusterTypeProps);"
6927,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/ClusterBlueprintRendererTest.java,136,,"    clusterTypeProps.put(""propertyOne"", ""valueOne"");"
6928,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/ClusterBlueprintRendererTest.java,141,,"    clusterAttributeProps.put(""propertyOne"", ""true"");"
6929,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/ClusterBlueprintRendererTest.java,142,,"    clusterTypeAttributes.put(""final"", clusterAttributeProps);"
6930,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/ClusterBlueprintRendererTest.java,145,,"        new Component(""JOBTRACKER""), new Component(""TASKTRACKER""), new Component(""NAMENODE""), new Component(""DATANODE""), new Component(""AMBARI_SERVER""));"
6931,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/ClusterBlueprintRendererTest.java,145,,"        new Component(""JOBTRACKER""), new Component(""TASKTRACKER""), new Component(""NAMENODE""), new Component(""DATANODE""), new Component(""AMBARI_SERVER""));"
6932,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/ClusterBlueprintRendererTest.java,145,,"        new Component(""JOBTRACKER""), new Component(""TASKTRACKER""), new Component(""NAMENODE""), new Component(""DATANODE""), new Component(""AMBARI_SERVER""));"
6933,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/ClusterBlueprintRendererTest.java,145,,"        new Component(""JOBTRACKER""), new Component(""TASKTRACKER""), new Component(""NAMENODE""), new Component(""DATANODE""), new Component(""AMBARI_SERVER""));"
6934,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/ClusterBlueprintRendererTest.java,150,,"    hostGroups.put(""host_group_1"", group1);"
6935,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/ClusterBlueprintRendererTest.java,151,,"    hostGroups.put(""host_group_2"", group2);"
6936,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/ClusterBlueprintRendererTest.java,172,,"    expect(stack.getName()).andReturn(""HDP"").anyTimes();"
6937,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/ClusterBlueprintRendererTest.java,173,,"    expect(stack.getVersion()).andReturn(""1.3.3"").anyTimes();"
6938,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/ClusterBlueprintRendererTest.java,260,,"    queryTree.addChild(hostInfo, ""Host"");"
6939,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/ClusterBlueprintRendererTest.java,271,,"    assertNotNull(propertyTree.getChild(""Host/HostComponent""));"
6940,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/ClusterBlueprintRendererTest.java,273,,"    assertTrue(propertyTree.getChild(""Host/HostComponent"").getObject().contains(""HostRoles/component_name""));"
6941,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/ClusterBlueprintRendererTest.java,298,,"      customCredentialStoreSettingFor(stack, ""service1"", ""service2""),"
6942,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/ClusterBlueprintRendererTest.java,298,,"      customCredentialStoreSettingFor(stack, ""service1"", ""service2""),"
6943,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/ClusterBlueprintRendererTest.java,299,,"      customRecoverySettingsFor(stack, ""component1"", ""component2""));"
6944,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/ClusterBlueprintRendererTest.java,299,,"      customRecoverySettingsFor(stack, ""component1"", ""component2""));"
6945,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/ClusterBlueprintRendererTest.java,305,,"          ""name"", ""service1"","
6946,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/ClusterBlueprintRendererTest.java,353,,"    servicesTree.setProperty(""isCollection"", ""true"");"
6947,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/ClusterBlueprintRendererTest.java,367,,"        TreeNode<Resource> componentsTree = serviceTree.addChild(null, ""components"");"
6948,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/ClusterBlueprintRendererTest.java,448,,"    expect(service2.getComponentByName(""component3"")).andReturn(component3).anyTimes();"
6949,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/ClusterBlueprintRendererTest.java,502,,"    assertEquals(""HDP"", properties.get(""Blueprints"").get(""stack_name""));"
6950,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/ClusterBlueprintRendererTest.java,507,,"    assertNotNull(((Map<String, Object>) securityProperties.get(""kerberos_descriptor"")).get(""properties""));"
6951,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/ClusterBlueprintRendererTest.java,537,,"        assertEquals(""1"", hostGroupProperties.get(""cardinality""));"
6952,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/DefaultRendererTest.java,58,,"    expect(schema.getKeyPropertyId(Resource.Type.Component)).andReturn(""ServiceComponentInfo/component_name"").anyTimes();"
6953,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/DefaultRendererTest.java,59,,"    expect(schema.getKeyPropertyId(Resource.Type.Service)).andReturn(""ServiceComponentInfo/service_name"").anyTimes();"
6954,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/DefaultRendererTest.java,64,,"    TreeNode<QueryInfo> queryTree = new TreeNodeImpl<>(null, rootQuery, ""Service"");"
6955,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/DefaultRendererTest.java,73,,"    TreeNode<Set<String>> componentNode = propertyTree.getChild(""Component"");"
6956,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/DefaultRendererTest.java,88,,"    expect(schema.getKeyPropertyId(Resource.Type.Service)).andReturn(""ServiceInfo/service_name"").anyTimes();"
6957,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/DefaultRendererTest.java,89,,"    expect(schema.getKeyPropertyId(Resource.Type.Cluster)).andReturn(""ServiceInfo/cluster_name"").anyTimes();"
6958,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/DefaultRendererTest.java,94,,"    serviceProperties.add(""foo/bar"");"
6959,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/MinimalRendererTest.java,65,,"    expect(schema.getKeyPropertyId(Resource.Type.Component)).andReturn(""ServiceComponentInfo/component_name"").anyTimes();"
6960,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/MinimalRendererTest.java,70,,"    TreeNode<QueryInfo> queryTree = new TreeNodeImpl<>(null, rootQuery, ""Service"");"
6961,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/MinimalRendererTest.java,79,,"    TreeNode<Set<String>> componentNode = propertyTree.getChild(""Component"");"
6962,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/MinimalRendererTest.java,93,,"    expect(schema.getKeyPropertyId(Resource.Type.Service)).andReturn(""ServiceInfo/service_name"").anyTimes();"
6963,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/MinimalRendererTest.java,98,,"    serviceProperties.add(""foo/bar"");"
6964,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/MinimalRendererTest.java,334,,"    expect(clusterSchema.getKeyPropertyId(Resource.Type.Cluster)).andReturn(""Clusters/cluster_name"").anyTimes();"
6965,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/MinimalRendererTest.java,336,,"    expect(hostSchema.getKeyPropertyId(Resource.Type.Cluster)).andReturn(""Hosts/cluster_name"").anyTimes();"
6966,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/MinimalRendererTest.java,337,,"    expect(hostSchema.getKeyPropertyId(Resource.Type.Host)).andReturn(""Hosts/host_name"").anyTimes();"
6967,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/MinimalRendererTest.java,339,,"    expect(hostComponentSchema.getKeyPropertyId(Resource.Type.Cluster)).andReturn(""HostRoles/cluster_name"").anyTimes();"
6968,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/MinimalRendererTest.java,340,,"    expect(hostComponentSchema.getKeyPropertyId(Resource.Type.Host)).andReturn(""HostRoles/host_name"").anyTimes();"
6969,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/MinimalRendererTest.java,341,,"    expect(hostComponentSchema.getKeyPropertyId(Resource.Type.HostComponent)).andReturn(""HostRoles/component_name"").anyTimes();"
6970,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/MinimalRendererTest.java,354,,"    assertNull(resultTree.getStringProperty(""isCollection""));"
6971,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/MinimalRendererTest.java,362,,"    assertEquals(3, clusterProperties.get(""Clusters"").size());"
6972,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/MinimalRendererTest.java,363,,"    assertEquals(""testCluster"", clusterProperties.get(""Clusters"").get(""cluster_name""));"
6973,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/MinimalRendererTest.java,368,,"    assertEquals(""bar"", clusterProperties.get("""").get(""foo""));"
6974,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/MinimalRendererTest.java,368,,"    assertEquals(""bar"", clusterProperties.get("""").get(""foo""));"
6975,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/MinimalRendererTest.java,375,,"      assertEquals(1, hostProperties.get(""Hosts"").size());"
6976,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/MinimalRendererTest.java,382,,"        assertEquals(1, componentProperties.get(""HostRoles"").size());"
6977,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/MinimalRendererTest.java,498,,"    hostsTree.setProperty(""isCollection"", ""true"");"
6978,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/query/render/MinimalRendererTest.java,505,,"    hostResource.setProperty(""Hosts/host_name"", ""testHost"");"
6979,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/resources/SimpleResourceDefinitionTest.java,39,,"        new SimpleResourceDefinition(Resource.Type.Stage, ""stage"", ""stages"", Resource.Type.Task);"
6980,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/resources/SimpleResourceDefinitionTest.java,39,,"        new SimpleResourceDefinition(Resource.Type.Stage, ""stage"", ""stages"", Resource.Type.Task);"
6981,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/resources/ViewExternalSubResourceDefinitionTest.java,33,,"    Resource.Type type = new Resource.Type(""resource"");"
6982,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/rest/KdcServerConnectionVerificationTest.java,72,,"    expect(connection.getTgt(""noUser@noRealm"", ""noPassword"")).andReturn(null).once();"
6983,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/rest/KdcServerConnectionVerificationTest.java,72,,"    expect(connection.getTgt(""noUser@noRealm"", ""noPassword"")).andReturn(null).once();"
6984,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/rest/KdcServerConnectionVerificationTest.java,82,,"    assertEquals(""test-host"", kdcConfig.getHostName());"
6985,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/services/ActionServiceTest.java,43,,"    ActionService service = new TestActionDefinitionService(""actionName"");"
6986,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/services/ActionServiceTest.java,57,,"    args = new Object[] {""body"", getHttpHeaders(), getUriInfo(), ""actionName""};"
6987,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/services/AmbariMetaInfoTest.java,112,,"  private static final String STACK_NAME_HDP = ""HDP"";"
6988,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/services/AmbariMetaInfoTest.java,114,,"  private static final String EXT_STACK_NAME = ""2.0.6"";"
6989,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/services/AmbariMetaInfoTest.java,117,,"  private static final String SERVICE_NAME_HDFS = ""HDFS"";"
6990,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/services/AmbariMetaInfoTest.java,119,,"  private static final String SERVICE_COMPONENT_NAME = ""NAMENODE"";"
6991,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/services/AmbariMetaInfoTest.java,120,,"  private static final String OS_TYPE = ""centos5"";"
6992,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/services/AmbariMetaInfoTest.java,148,,"    File version = new File(""src/test/resources/version"");"
6993,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/services/AmbariMetaInfoTest.java,151,,"    if (System.getProperty(""os.name"").contains(""Windows"")) {"
6994,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/services/AmbariMetaInfoTest.java,151,,"    if (System.getProperty(""os.name"").contains(""Windows"")) {"
6995,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/services/AmbariMetaInfoTest.java,152,,"      stacks = new File(ClassLoader.getSystemClassLoader().getResource(""stacks"").getPath());"
6996,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/services/AmbariMetaInfoTest.java,153,,"      version = new File(new File(ClassLoader.getSystemClassLoader().getResource("""").getPath()).getParent(), ""version"");"
6997,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/services/AmbariMetaInfoTest.java,173,,"    Set<String> res = metaInfo.getRestartRequiredServicesNames(STACK_NAME_HDP, ""2.0.7"");"
6998,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/services/AmbariMetaInfoTest.java,196,,"    component = metaInfo.getComponent(STACK_NAME_HDP, ""2.1.1"", SERVICE_NAME_HDFS, ""NAMENODE"");"
6999,./TargetProjects/ambari/ambari-server/src/test/java/org/apache/ambari/server/api/services/AmbariMetaInfoTest.java,205,,"    component = metaInfo.getComponent(STACK_NAME_HDP, ""2.1.1"", SERVICE_NAME_HDFS, ""DATANODE"");"
