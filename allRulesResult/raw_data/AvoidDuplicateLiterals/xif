213000,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpsertValuesIT.java,146,,"        conn.createStatement().execute(""create table "" + tableName + "" (k VARCHAR not null primary key,\""DATE\"" DATE)"");"
213001,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpsertValuesIT.java,354,,"            stmt = conn.prepareStatement(""select t from "" + tableName + "" LIMIT 1"");"
213002,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UpsertValuesIT.java,441,,"            stmt = conn.prepareStatement(""select * from "" + tableName);"
213003,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UseSchemaIT.java,68,,"        conn.createStatement().execute(""use ""+schema);"
213004,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UserDefinedFunctionsIT.java,88,,"                    .append(""    public boolean evaluate(Tuple tuple, ImmutableBytesWritable ptr) {\n"")"
213005,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UserDefinedFunctionsIT.java,91,,"                    .append(""           return false;\n"")"
213006,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UserDefinedFunctionsIT.java,96,,"                    .append(""        }\n"")"
213007,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UserDefinedFunctionsIT.java,109,,"                    .append(""        return true;\n"")"
213008,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UserDefinedFunctionsIT.java,110,,"                    .append(""    }\n"").toString();"
213009,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UserDefinedFunctionsIT.java,206,,"        stmt.execute(""delete jar '""+ util.getConfiguration().get(QueryServices.DYNAMIC_JARS_DIR_KEY)+""/""+""myjar1.jar'"");"
213010,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UserDefinedFunctionsIT.java,306,,"        assertEquals(new Path(jarPath, ""myjar1.jar"").toString(), rs.getString(""jar_location""));"
213011,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UserDefinedFunctionsIT.java,361,,"        stmt.execute(""create function myreverse(VARCHAR) returns VARCHAR as 'org.apache.phoenix.end2end.""+MY_REVERSE_CLASS_NAME+""' using jar """
213012,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UserDefinedFunctionsIT.java,362,,"                + ""'""+util.getConfiguration().get(DYNAMIC_JARS_DIR_KEY) + ""/myjar1.jar""+""'"");"
213013,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UserDefinedFunctionsIT.java,365,,"        assertEquals(""oof"", rs.getString(1));"
213014,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UserDefinedFunctionsIT.java,371,,"        assertEquals(""jock"", rs.getString(3));"
213015,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UserDefinedFunctionsIT.java,417,,"            fail(""FunctionNotFoundException should be thrown"");"
213016,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UserDefinedFunctionsIT.java,461,,"        nonTenantConn.createStatement().execute(""create function myfunction(VARCHAR) returns VARCHAR as 'org.apache.phoenix.end2end.""+MY_REVERSE_CLASS_NAME+""' using jar """
213017,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UserDefinedFunctionsIT.java,466,,"            fail(""FunctionAlreadyExistsException should be thrown."");"
213018,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UserDefinedFunctionsIT.java,490,,"                + ""'""+util.getConfiguration().get(DYNAMIC_JARS_DIR_KEY) + ""/myjar2.jar""+""'"");"
213019,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UserDefinedFunctionsIT.java,501,,"        assertEquals(""kcoj"", rs.getString(1));"
213020,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UserDefinedFunctionsIT.java,690,,"            fail(""FunctionNotFoundException should not be thrown"");"
213021,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UserDefinedFunctionsIT.java,846,,"        conn.createStatement().execute(""create table "" + JOIN_ITEM_TABLE_FULL_NAME +"
213022,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UserDefinedFunctionsIT.java,874,,"        stmt.setString(1, ""0000000001"");"
213023,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UserDefinedFunctionsIT.java,883,,"        stmt.setString(1, ""0000000002"");"
213024,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UserDefinedFunctionsIT.java,910,,"        stmt.setString(1, ""0000000005"");"
213025,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/UserDefinedFunctionsIT.java,919,,"        stmt.setString(1, ""0000000006"");"
213026,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/VariableLengthPKIT.java,65,,"                ""upsert into "" + pTSDBtableName+"
213027,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/VariableLengthPKIT.java,122,,"        stmt.setString(1, ""abc"");"
213028,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/VariableLengthPKIT.java,139,,"                        ""    A_STRING, "" +"
213029,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/VariableLengthPKIT.java,140,,"                        ""    A_ID,"" +"
213030,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/VariableLengthPKIT.java,141,,"                        ""    B_STRING,"" +"
213031,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/VariableLengthPKIT.java,142,,"                        ""    A_INTEGER,"" +"
213032,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/VariableLengthPKIT.java,146,,"                        ""    E_STRING)"" +"
213033,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/VariableLengthPKIT.java,155,,"        stmt.setString(8, ""0123456789"");"
213034,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/VariableLengthPKIT.java,158,,"        stmt.setString(1, ""abcd"");"
213035,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/VariableLengthPKIT.java,159,,"        stmt.setString(2, ""222"");"
213036,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/VariableLengthPKIT.java,166,,"        stmt.setString(3, ""xyz"");"
213037,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/VariableLengthPKIT.java,187,,"        String query = ""SELECT A_STRING,substr(a_id,1,1),B_STRING,A_INTEGER,B_INTEGER FROM ""+bTableName+"" WHERE A_STRING=?"";"
213038,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/VariableLengthPKIT.java,211,,"        String query = ""SELECT INST FROM ""+pTSDBTableName+"" GROUP BY INST"";"
213039,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/VariableLengthPKIT.java,481,,"        String query = ""SELECT HOST,\""DATE\"" FROM ""+pTSDBTableName+"" WHERE INST='x' AND HOST='y'"";"
213040,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/VariableLengthPKIT.java,704,,"        String sql1 = ""UPSERT INTO ""+pTSDB2TableName+""(inst,\""DATE\"",val1) VALUES (?, ?, ?)"";"
213041,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/VariableLengthPKIT.java,905,,"        stmt.setString(2, ""123"");"
213042,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/VariableLengthPKIT.java,929,,"                        ""    C_STRING,"" +"
213043,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/VariableLengthPKIT.java,1162,,"                ""SELECT substr('ABC',-1,1) FROM ""+bTableName+"" LIMIT 1"","
213044,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/VariableLengthPKIT.java,1176,,"                ""SELECT pk FROM ""+varcharKeyTestTable+"" WHERE substr(pk, 0, 3)='jkl'"","
213045,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/VariableLengthPKIT.java,1475,,"        stmt.setString(1, ""xyza"");"
213046,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/VariableLengthPKIT.java,1479,,"        stmt.setString(1, ""xyzab"");"
213047,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/VariableLengthPKIT.java,1859,,"                ""abc   def"","
213048,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewConcurrencyAndFailureIT.java,167,,"            String createTableDdl = ""CREATE TABLE "" + fullTableName"
213049,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewConcurrencyAndFailureIT.java,168,,"                    + ""  (k INTEGER NOT NULL PRIMARY KEY, v1 DATE)"""
213050,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewConcurrencyAndFailureIT.java,172,,"            String createViewDdl = ""CREATE VIEW "" + failingViewName"
213051,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewConcurrencyAndFailureIT.java,173,,"                    + "" (v2 VARCHAR) AS SELECT * FROM """
213052,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewConcurrencyAndFailureIT.java,278,,"                    + fullTableName + "" WHERE k = 6"";"
213053,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewConcurrencyAndFailureIT.java,333,,"            tableDdl = ""ALTER TABLE "" + fullTableName + "" ADD v3 INTEGER"";"
213054,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewConcurrencyAndFailureIT.java,333,,"            tableDdl = ""ALTER TABLE "" + fullTableName + "" ADD v3 INTEGER"";"
213055,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewConcurrencyAndFailureIT.java,353,,"            tableDdl = ""ALTER VIEW "" + fullViewName2 + "" ADD v3 INTEGER"";"
213056,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewIT.java,140,,"        String ddl = ""CREATE VIEW "" + fullViewName2 + "" AS SELECT * FROM """
213057,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewIT.java,140,,"        String ddl = ""CREATE VIEW "" + fullViewName2 + "" AS SELECT * FROM """
213058,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewIT.java,155,,"                stmt.execute(""UPSERT INTO "" + fullViewName2 + "" VALUES(1)"");"
213059,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewIT.java,155,,"                stmt.execute(""UPSERT INTO "" + fullViewName2 + "" VALUES(1)"");"
213060,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewIT.java,186,,"            String ddl = ""CREATE TABLE "" + fullTableName"
213061,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewIT.java,204,,"                        + "" VALUES("" + i + "")"");"
213062,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewIT.java,409,,"            stmt.execute(""CREATE INDEX "" + indexName2 + "" ON "" + fullTableName"
213063,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewIT.java,426,,"            rs = stmt.executeQuery(""SELECT count(*) FROM "" + fullViewName);"
213064,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewIT.java,432,,"            stmt.execute(""CREATE INDEX "" + viewIndexName + "" on """
213065,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewIT.java,461,,"                assertEquals(""CLIENT MERGE SORT"","
213066,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewIT.java,509,,"            stmt.executeUpdate(""upsert into "" + fullTableName"
213067,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewIT.java,530,,"            ResultSet rs = stmt.executeQuery(""select count(*) from """
213068,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewIT.java,556,,"                    + ""AS SELECT * FROM "" + fullTableName + "" WHERE K1 = 1"";"
213069,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewIT.java,720,,"                        + "" (pk1, pk2, col1, col3) VALUES """
213070,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewIT.java,721,,"                        + ""(TO_DATE('2017-10-16 22:00:00', """
213071,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewIT.java,722,,"                        + ""'yyyy-MM-dd HH:mm:ss'), """
213072,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewIT.java,724,,"                        + ""'yyyy-MM-dd HH:mm:ss'), 'txt1', 10)"");"
213073,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewIT.java,752,,"                        ""pk1 = TO_DATE('2017-10-16 22:00:00', """
213074,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewIT.java,753,,"                                + ""'yyyy-MM-dd HH:mm:ss')"", """","
213075,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewIT.java,766,,"                        + "" (pk1, pk2, pk3, col3) VALUES """
213076,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewIT.java,832,,"                    + ""'yyyy-MM-dd HH:mm:ss'), 10)"");"
213077,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewIT.java,976,,"                assertEquals(""PARALLEL """
213078,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewIT.java,977,,"                        + (saltBuckets == null ? 1 : saltBuckets) + ""-WAY"","
213079,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewMetadataIT.java,170,,"        ""CREATE TABLE ""+tableName+"" (k VARCHAR PRIMARY KEY, """
213080,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewMetadataIT.java,175,,"        ""CREATE VIEW ""+viewName+"" (v43 VARCHAR) AS SELECT * FROM ""+tableName"
213081,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewMetadataIT.java,179,,"          .executeQuery(""SELECT * FROM ""+tableName+"" WHERE v1 = 'value1'"");"
213082,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewMetadataIT.java,200,,"            conn.createStatement().executeUpdate(""CREATE VIEW \"""""
213083,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewMetadataIT.java,274,,"                conn.createStatement().execute(""DROP VIEW "" + view1);"
213084,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewMetadataIT.java,341,,"                + ""  (k INTEGER NOT NULL PRIMARY KEY, v1 DATE)"";"
213085,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewMetadataIT.java,344,,"                + "" (v2 VARCHAR) AS SELECT * FROM "" + fullTableName"
213086,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewMetadataIT.java,345,,"                + "" WHERE k > 5"";"
213087,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewMetadataIT.java,348,,"        ddl = ""CREATE INDEX "" + indexName + "" on "" + fullViewName1 + ""(v2)"";"
213088,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewMetadataIT.java,348,,"        ddl = ""CREATE INDEX "" + indexName + "" on "" + fullViewName1 + ""(v2)"";"
213089,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewMetadataIT.java,348,,"        ddl = ""CREATE INDEX "" + indexName + "" on "" + fullViewName1 + ""(v2)"";"
213090,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewMetadataIT.java,355,,"        conn.createStatement().execute(""DROP TABLE "" + fullTableName"
213091,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewMetadataIT.java,356,,"                + "" CASCADE"");"
213092,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewMetadataIT.java,874,,"                    "" ON "" + fullViewName + ""(v2)"");"
213093,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewMetadataIT.java,1043,,"                    + "" AS SELECT * FROM "" + fullTableName);"
213094,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewMetadataIT.java,1070,,"                + ""CONSTRAINT pk PRIMARY KEY (k1, k2))"";"
213095,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewMetadataIT.java,1072,,"        ddl = ""CREATE VIEW "" + fullViewName + ""  AS SELECT * FROM """
213096,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewMetadataIT.java,1073,,"                + fullTableName + "" WHERE v1 = 1.0"";"
213097,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewMetadataIT.java,1076,,"        ddl = ""ALTER VIEW "" + fullViewName + "" ADD k3 VARCHAR PRIMARY KEY,"""
213098,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewTTLIT.java,206,,"        tableOptions.setTableProps(""COLUMN_ENCODED_BYTES=0,MULTI_TENANT=true"");"
213099,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewTTLIT.java,368,,"                .format(""IDX_%s"", stripQuotes(schemaBuilder.getEntityKeyPrefix()));"
213100,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewTTLIT.java,701,,"        tenantViewOptions.setTableProps(String.format(""PHOENIX_TTL=%d"", phoenixTTL));"
213101,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewTTLIT.java,725,,"        List<String> columns = Lists.newArrayList(""ZID"", ""COL7"", ""COL8"", ""COL9"");"
213102,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewTTLIT.java,725,,"        List<String> columns = Lists.newArrayList(""ZID"", ""COL7"", ""COL8"", ""COL9"");"
213103,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewTTLIT.java,725,,"        List<String> columns = Lists.newArrayList(""ZID"", ""COL7"", ""COL8"", ""COL9"");"
213104,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewTTLIT.java,725,,"        List<String> columns = Lists.newArrayList(""ZID"", ""COL7"", ""COL8"", ""COL9"");"
213105,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewTTLIT.java,769,,"                .setTenantViewColumnTypes(asList(""CHAR(15)"", ""VARCHAR"", ""VARCHAR"", ""VARCHAR""));"
213106,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewTTLIT.java,769,,"                .setTenantViewColumnTypes(asList(""CHAR(15)"", ""VARCHAR"", ""VARCHAR"", ""VARCHAR""));"
213107,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewTTLIT.java,772,,"        testCaseWhenAllCFMatchAndAllDefault.setTestName(""testCaseWhenAllCFMatchAndAllDefault"");"
213108,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewTTLIT.java,819,,"                    Lists.newArrayList(""ID"", ""ZID"", ""COL4"", ""COL5"", ""COL6"", ""COL7"", ""COL8"", ""COL9"");"
213109,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewTTLIT.java,819,,"                    Lists.newArrayList(""ID"", ""ZID"", ""COL4"", ""COL5"", ""COL6"", ""COL7"", ""COL8"", ""COL9"");"
213110,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewTTLIT.java,819,,"                    Lists.newArrayList(""ID"", ""ZID"", ""COL4"", ""COL5"", ""COL6"", ""COL7"", ""COL8"", ""COL9"");"
213111,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewTTLIT.java,1028,,"        String level3ViewName = String.format(""%s.%s"","
213112,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewTTLIT.java,1203,,"            dataReader.setValidationColumns(Arrays.asList(""num_rows""));"
213113,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewTTLIT.java,1206,,"                    .format(""SELECT count(1) as num_rows from %s HAVING count(1) > 0"","
213114,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewTTLIT.java,1426,,"        String tableProps = ""MULTI_TENANT=true,COLUMN_ENCODED_BYTES=0,DEFAULT_COLUMN_FAMILY='0'"";"
213115,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewTTLIT.java,1493,,"                                    ""COL1"", ""COL2"", ""COL3"", ""COL4"", ""COL5"","
213116,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewTTLIT.java,1493,,"                                    ""COL1"", ""COL2"", ""COL3"", ""COL4"", ""COL5"","
213117,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewTTLIT.java,1493,,"                                    ""COL1"", ""COL2"", ""COL3"", ""COL4"", ""COL5"","
213118,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewTTLIT.java,1562,,"                    props.setProperty(""CurrentSCN"", Long.toString(scnTimestamp));"
213119,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewTTLIT.java,2038,,"                        index1Name = String.format(""IDX_%s_%s"","
213120,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewTTLIT.java,2039,,"                                schemaBuilder.getEntityGlobalViewName().replaceAll(""\\."", ""_""),"
213121,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewTTLIT.java,2042,,"                        final String index1Str = String.format(""CREATE %s INDEX IF NOT EXISTS """
213122,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewTTLIT.java,2043,,"                                        + ""%s ON %s (%s) INCLUDE (%s)"", isIndex1Local ? ""LOCAL"" : """", index1Name,"
213123,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewTTLIT.java,2043,,"                                        + ""%s ON %s (%s) INCLUDE (%s)"", isIndex1Local ? ""LOCAL"" : """", index1Name,"
213124,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewTTLIT.java,2350,,"            assertNotNull(""Fetched data should not be null"", fetchedData);"
213125,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewUtilIT.java,81,,"        String tableDDLQuery = ""CREATE TABLE "" + fullTableName"
213126,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/ViewUtilIT.java,83,,"        String viewDDLQuery = ""CREATE VIEW %s AS SELECT * FROM %s"";"
213127,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/WALAnnotationIT.java,129,,"            String upsertSql = ""UPSERT INTO "" + builder.getEntityTableName() + "" VALUES"" +"
213128,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/WALAnnotationIT.java,129,,"            String upsertSql = ""UPSERT INTO "" + builder.getEntityTableName() + "" VALUES"" +"
213129,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/WALAnnotationIT.java,130,,"                "" ('a', 'b', '2', 'bc', '3')"";"
213130,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/WALAnnotationIT.java,215,,"            String deleteSql = ""DELETE FROM "" + builder.getEntityTableName() + "" "" +"
213131,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/BaseIndexIT.java,130,,"        String tableName = ""TBL_"" + generateUniqueName();"
213132,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/BaseIndexIT.java,131,,"        String indexName = ""IND_"" + generateUniqueName();"
213133,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/BaseIndexIT.java,137,,"            String ddl =""CREATE TABLE "" + fullTableName + TestUtil.TEST_TABLE_SCHEMA + tableDDLOptions;"
213134,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/BaseIndexIT.java,141,,"            ddl = ""CREATE "" + (localIndex ? ""LOCAL"" : """") + "" INDEX "" + indexName + "" ON "" + fullTableName"
213135,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/BaseIndexIT.java,141,,"            ddl = ""CREATE "" + (localIndex ? ""LOCAL"" : """") + "" INDEX "" + indexName + "" ON "" + fullTableName"
213136,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/BaseIndexIT.java,141,,"            ddl = ""CREATE "" + (localIndex ? ""LOCAL"" : """") + "" INDEX "" + indexName + "" ON "" + fullTableName"
213137,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/BaseIndexIT.java,141,,"            ddl = ""CREATE "" + (localIndex ? ""LOCAL"" : """") + "" INDEX "" + indexName + "" ON "" + fullTableName"
213138,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/BaseIndexIT.java,153,,"            assertEquals(""PARALLEL 1-WAY"","
213139,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/BaseIndexIT.java,155,,"            assertEquals(""SERVER FILTER BY FIRST KEY ONLY"","
213140,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/BaseIndexIT.java,160,,"                assertEquals("" [1]"", explainPlanAttributes.getKeyRanges());"
213141,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/BaseIndexIT.java,161,,"                assertEquals(""CLIENT MERGE SORT"","
213142,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/BaseIndexIT.java,163,,"                assertEquals(""RANGE SCAN "","
213143,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/BaseIndexIT.java,168,,"                assertEquals(""FULL SCAN "","
213144,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/BaseIndexIT.java,174,,"            assertEquals(""chara"", rs.getString(1));"
213145,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/BaseIndexIT.java,185,,"            conn.createStatement().execute(""DROP INDEX "" + indexName + "" ON "" + fullTableName);"
213146,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/BaseIndexIT.java,224,,"            rs = conn.createStatement().executeQuery(""SELECT COUNT(*) FROM "" + fullIndexName);"
213147,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/BaseIndexIT.java,249,,"            query = ""SELECT * FROM "" + fullIndexName;"
213148,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/BaseIndexIT.java,301,,"                String upsert = ""UPSERT INTO "" + fullTableName"
213149,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/BaseIndexIT.java,650,,"            PreparedStatement stmt = conn.prepareStatement(""UPSERT INTO "" + fullTableName + "" VALUES(?,?,?)"");"
213150,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/BaseIndexIT.java,835,,"                    ""CREATE "" + (localIndex ? ""LOCAL "" : """") + ""INDEX "" + indexName + "" ON "" + fullTableName + "" (v1, v2)"");"
213151,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/BaseIndexIT.java,835,,"                    ""CREATE "" + (localIndex ? ""LOCAL "" : """") + ""INDEX "" + indexName + "" ON "" + fullTableName + "" (v1, v2)"");"
213152,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/ChildViewsUseParentViewIndexIT.java,109,,"            String globalViewDdl = ""CREATE VIEW "" + parentViewName + "" AS SELECT * FROM "" + baseTableName + "" WHERE A1 = 'X'"";"
213153,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/ChildViewsUseParentViewIndexIT.java,125,,"            PreparedStatement stmt = conn.prepareStatement(""UPSERT INTO "" + parentViewName + "" (A0, A2, A3, A4) VALUES(?,?,?,?)"");"
213154,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/DropColumnIT.java,131,,"                ""CREATE INDEX "" + indexTableName + "" ON "" + dataTableName + "" (v1) INCLUDE (v2, v3)"");"
213155,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/DropColumnIT.java,131,,"                ""CREATE INDEX "" + indexTableName + "" ON "" + dataTableName + "" (v1) INCLUDE (v2, v3)"");"
213156,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/DropColumnIT.java,151,,"            PColumn glovalIndexCol = globalIndexTable.getColumnForColumnName(""0:V2"");"
213157,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/DropColumnIT.java,164,,"            conn.createStatement().execute(""ALTER TABLE "" + dataTableName + "" DROP COLUMN v2 "");"
213158,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/DropColumnIT.java,434,,"                stmt.execute(""CREATE TABLE IF NOT EXISTS "" + table +"
213159,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/DropColumnIT.java,436,,"                        "" CONSTRAINT PK PRIMARY KEY (ID,KEY_PREFIX))"");"
213160,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/DropColumnIT.java,439,,"                        ""CREATE VIEW IF NOT EXISTS "" + view +"
213161,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/DropColumnIT.java,440,,"                                ""  (PK1 DATE NOT NULL,PK2 CHAR(15) NOT NULL,"" +"
213162,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/DropColumnIT.java,443,,"                                ""AS SELECT * FROM "" + table + "" WHERE KEY_PREFIX = '123'"");"
213163,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/DropColumnIT.java,443,,"                                ""AS SELECT * FROM "" + table + "" WHERE KEY_PREFIX = '123'"");"
213164,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/DropColumnIT.java,448,,"                stmt.execute(""ALTER VIEW ""  + view + "" DROP COLUMN NON_PK1"");"
213165,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/DropColumnIT.java,448,,"                stmt.execute(""ALTER VIEW ""  + view + "" DROP COLUMN NON_PK1"");"
213166,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexCheckerIT.java,134,,"        conn.createStatement().execute(""create table "" + tableName +"
213167,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexCheckerIT.java,135,,"                "" (id varchar(10) not null primary key, val1 varchar(10), val2 varchar(10), val3 varchar(10))"" + tableDDLOptions);"
213168,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexCheckerIT.java,136,,"        conn.createStatement().execute(""upsert into "" + tableName + "" values ('a', 'ab', 'abc', 'abcd')"");"
213169,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexCheckerIT.java,136,,"        conn.createStatement().execute(""upsert into "" + tableName + "" values ('a', 'ab', 'abc', 'abcd')"");"
213170,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexCheckerIT.java,148,,"            String dml = ""DELETE from "" + dataTableName + "" WHERE id  = 'a'"";"
213171,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexCheckerIT.java,152,,"            conn.createStatement().execute(""CREATE INDEX "" + indexTableName + "" on "" +"
213172,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexCheckerIT.java,152,,"            conn.createStatement().execute(""CREATE INDEX "" + indexTableName + "" on "" +"
213173,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexCheckerIT.java,153,,"                    dataTableName + "" (val1) include (val2, val3)"" + (async ? ""ASYNC"" : """") + this.indexDDLOptions);"
213174,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexCheckerIT.java,153,,"                    dataTableName + "" (val1) include (val2, val3)"" + (async ? ""ASYNC"" : """") + this.indexDDLOptions);"
213175,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexCheckerIT.java,196,,"                    ""PHOENIX_ROW_TIMESTAMP() > TO_DATE('"" + before.toString() + ""','yyyy-MM-dd HH:mm:ss.SSS', '"" + timeZoneID + ""') AND "" +"
213176,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexCheckerIT.java,196,,"                    ""PHOENIX_ROW_TIMESTAMP() > TO_DATE('"" + before.toString() + ""','yyyy-MM-dd HH:mm:ss.SSS', '"" + timeZoneID + ""') AND "" +"
213177,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexCheckerIT.java,290,,"            assertEquals(""abc"", rs.getString(2));"
213178,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexCheckerIT.java,360,,"            String selectSql =  ""SELECT * from "" + dataTableName + "" WHERE val1  = 'ab'"";"
213179,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexCheckerIT.java,360,,"            String selectSql =  ""SELECT * from "" + dataTableName + "" WHERE val1  = 'ab'"";"
213180,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexCheckerIT.java,368,,"            assertEquals(""abcd"", rs.getString(4));"
213181,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexCheckerIT.java,399,,"            selectSql = ""SELECT val3 from "" + dataTableName + "" WHERE val1 = 'bc' LIMIT 1"";"
213182,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexCheckerIT.java,446,,"            conn.createStatement().execute(""upsert into "" + dataTableName + "" (id, val2) values ('a', 'abcc')"");"
213183,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexCheckerIT.java,461,,"            assertEquals(""abcc"", rs.getString(3));"
213184,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexCheckerIT.java,630,,"            String selectSql = ""SELECT val2, val3 from "" + dataTableName + "" WHERE val1  = 'ab'"";"
213185,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexOptimizationIT.java,58,,"        String ddl = ""CREATE "" + (local ? ""LOCAL "" : """") + ""INDEX "" + indexName + "" ON "" + tableName + "" ("" + columns + "")"" + (includes != null ? "" INCLUDE ("" + includes + "")"" : """");"
213186,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexOptimizationIT.java,75,,"            conn1.createStatement().execute(""UPSERT INTO "" + dataTableName + "" values(TO_CHAR(rand()*100),rand()*10000,rand()*10000,rand()*10000,TO_CHAR(rand()*100))"");"
213187,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexOptimizationIT.java,79,,"            ResultSet rs = conn1.createStatement().executeQuery(""EXPLAIN ""+ query);"
213188,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexOptimizationIT.java,87,,"            rs = conn1.createStatement().executeQuery(""SELECT COUNT(*) FROM "" + dataTableName);"
213189,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexOptimizationIT.java,143,,"        createBaseTable(dataTableName, saltBuckets, ""('e','i','o')"", false);"
213190,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexOptimizationIT.java,153,,"            String query = ""SELECT /*+ INDEX("" + dataTableName + "" "" + indexTableName + "")*/ * FROM "" + dataTableName +"" where v1='a'"";"
213191,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexOptimizationIT.java,153,,"            String query = ""SELECT /*+ INDEX("" + dataTableName + "" "" + indexTableName + "")*/ * FROM "" + dataTableName +"" where v1='a'"";"
213192,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexOptimizationIT.java,159,,"                    ""CLIENT PARALLEL 1-WAY FULL SCAN OVER "" + dataTableName + ""\n"" +"
213193,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexOptimizationIT.java,160,,"                    ""    SKIP-SCAN-JOIN TABLE 0\n"" +"
213194,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexOptimizationIT.java,161,,"                    ""        CLIENT PARALLEL 1-WAY RANGE SCAN OVER "" + indexTableName + "" \\['a'\\]\n"" +"
213195,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexOptimizationIT.java,162,,"                    ""            SERVER FILTER BY FIRST KEY ONLY\n"" +"
213196,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexOptimizationIT.java,163,,"                    ""    DYNAMIC SERVER FILTER BY \\(\"""" + dataTableName + "".T_ID\"", \"""" + dataTableName + "".K1\"", \"""" + dataTableName + "".K2\""\\) IN \\(\\(\\$\\d+.\\$\\d+, \\$\\d+.\\$\\d+, \\$\\d+.\\$\\d+\\)\\)"";"
213197,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexOptimizationIT.java,163,,"                    ""    DYNAMIC SERVER FILTER BY \\(\"""" + dataTableName + "".T_ID\"", \"""" + dataTableName + "".K1\"", \"""" + dataTableName + "".K2\""\\) IN \\(\\(\\$\\d+.\\$\\d+, \\$\\d+.\\$\\d+, \\$\\d+.\\$\\d+\\)\\)"";"
213198,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexOptimizationIT.java,163,,"                    ""    DYNAMIC SERVER FILTER BY \\(\"""" + dataTableName + "".T_ID\"", \"""" + dataTableName + "".K1\"", \"""" + dataTableName + "".K2\""\\) IN \\(\\(\\$\\d+.\\$\\d+, \\$\\d+.\\$\\d+, \\$\\d+.\\$\\d+\\)\\)"";"
213199,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexOptimizationIT.java,163,,"                    ""    DYNAMIC SERVER FILTER BY \\(\"""" + dataTableName + "".T_ID\"", \"""" + dataTableName + "".K1\"", \"""" + dataTableName + "".K2\""\\) IN \\(\\(\\$\\d+.\\$\\d+, \\$\\d+.\\$\\d+, \\$\\d+.\\$\\d+\\)\\)"";"
213200,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexOptimizationIT.java,165,,"            assertTrue(""Expected:\n"" + expected + ""\nbut got\n"" + actual, Pattern.matches(expected, actual));"
213201,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexOptimizationIT.java,165,,"            assertTrue(""Expected:\n"" + expected + ""\nbut got\n"" + actual, Pattern.matches(expected, actual));"
213202,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/GlobalIndexOptimizationIT.java,169,,"            assertEquals(""f"", rs.getString(""t_id""));"
213203,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/ImmutableIndexIT.java,148,,"                    { false, true, ""TEPHRA"", false }, { false, true, ""TEPHRA"", true },"
213204,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/ImmutableIndexIT.java,157,,"        String tableName = ""TBL_"" + generateUniqueName();"
213205,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/ImmutableIndexIT.java,158,,"        String indexName = ""IND_"" + generateUniqueName();"
213206,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/ImmutableIndexIT.java,164,,"                    ""CREATE TABLE "" + fullTableName + TestUtil.TEST_TABLE_SCHEMA + tableDDLOptions;"
213207,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/ImmutableIndexIT.java,169,,"                    ""CREATE "" + (localIndex ? ""LOCAL"" : """") + "" INDEX "" + indexName + "" ON """
213208,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/ImmutableIndexIT.java,169,,"                    ""CREATE "" + (localIndex ? ""LOCAL"" : """") + "" INDEX "" + indexName + "" ON """
213209,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/ImmutableIndexIT.java,169,,"                    ""CREATE "" + (localIndex ? ""LOCAL"" : """") + "" INDEX "" + indexName + "" ON """
213210,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/ImmutableIndexIT.java,169,,"                    ""CREATE "" + (localIndex ? ""LOCAL"" : """") + "" INDEX "" + indexName + "" ON """
213211,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/ImmutableIndexIT.java,175,,"            rs = conn.createStatement().executeQuery(""SELECT COUNT(*) FROM "" + fullTableName);"
213212,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/ImmutableIndexIT.java,183,,"            String dml = ""DELETE from "" + fullTableName + "" WHERE long_col2 = 4"";"
213213,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/ImmutableIndexIT.java,218,,"            rs = conn.createStatement().executeQuery(""SELECT /*+ NO_INDEX*/ COUNT(*) FROM "" + fullTableName);"
213214,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/ImmutableIndexIT.java,338,,"                rs = conn.createStatement().executeQuery(""SELECT /*+ NO_INDEX */ COUNT(*) FROM "" + TABLE_NAME);"
213215,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/ImmutableIndexIT.java,669,,"                conn.prepareStatement(""DELETE FROM "" + dataTableFullName + "" WHERE ID > 5"");"
213216,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexMaintenanceIT.java,133,,"            String ddl = ""CREATE """
213217,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexMaintenanceIT.java,134,,"                    + (localIndex ? ""LOCAL"" : """")"
213218,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexMaintenanceIT.java,135,,"                    + "" INDEX "" + indexName + "" ON """
213219,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexMaintenanceIT.java,135,,"                    + "" INDEX "" + indexName + "" ON """
213220,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexMaintenanceIT.java,251,,"            stmt.setString(1, ""varchar1"");"
213221,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexMaintenanceIT.java,334,,"            rs = conn.createStatement().executeQuery(""SELECT COUNT(*) FROM "" + fullDataTableName);"
213222,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexMetadataIT.java,135,,"            String tableDDL = ""create table "" + fullIndexDataTable + TestUtil.TEST_TABLE_SCHEMA;"
213223,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexMetadataIT.java,137,,"            String ddl = ""CREATE INDEX "" + indexName + "" ON "" + fullIndexDataTable"
213224,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexMetadataIT.java,137,,"            String ddl = ""CREATE INDEX "" + indexName + "" ON "" + fullIndexDataTable"
213225,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexMetadataIT.java,146,,"            assertIndexInfoMetadata(rs, INDEX_DATA_SCHEMA, indexDataTable, indexName , 3, "":INT_PK"", Order.DESC);"
213226,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexMetadataIT.java,147,,"            assertIndexInfoMetadata(rs, INDEX_DATA_SCHEMA, indexDataTable, indexName , 4, "":VARCHAR_PK"", Order.ASC);"
213227,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexMetadataIT.java,148,,"            assertIndexInfoMetadata(rs, INDEX_DATA_SCHEMA, indexDataTable, indexName , 5, "":CHAR_PK"", Order.ASC);"
213228,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexMetadataIT.java,149,,"            assertIndexInfoMetadata(rs, INDEX_DATA_SCHEMA, indexDataTable, indexName , 6, "":LONG_PK"", Order.DESC);"
213229,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexMetadataIT.java,150,,"            assertIndexInfoMetadata(rs, INDEX_DATA_SCHEMA, indexDataTable, indexName , 7, "":DECIMAL_PK"", Order.ASC);"
213230,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexMetadataIT.java,151,,"            assertIndexInfoMetadata(rs, INDEX_DATA_SCHEMA, indexDataTable, indexName , 8, "":DATE_PK"", Order.ASC);"
213231,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexMetadataIT.java,153,,"            assertIndexInfoMetadata(rs, INDEX_DATA_SCHEMA, indexDataTable, indexName , 10, ""B:INT_COL2"", null);"
213232,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexMetadataIT.java,158,,"            assertEquals(PIndexState.ACTIVE.toString(), rs.getString(""INDEX_STATE""));"
213233,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexMetadataIT.java,168,,"            ddl = ""ALTER INDEX "" + indexName + "" ON "" + INDEX_DATA_SCHEMA + QueryConstants.NAME_SEPARATOR + indexDataTable + "" UNUSABLE"";"
213234,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexMetadataIT.java,168,,"            ddl = ""ALTER INDEX "" + indexName + "" ON "" + INDEX_DATA_SCHEMA + QueryConstants.NAME_SEPARATOR + indexDataTable + "" UNUSABLE"";"
213235,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexMetadataIT.java,236,,"            ddl = ""DROP INDEX "" + indexName + "" ON "" + INDEX_DATA_SCHEMA + QueryConstants.NAME_SEPARATOR + indexDataTable;"
213236,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexMetadataIT.java,251,,"            ddl = ""CREATE INDEX "" + indexName + ""1 ON "" + INDEX_DATA_SCHEMA + QueryConstants.NAME_SEPARATOR + indexDataTable"
213237,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexMetadataIT.java,256,,"            ddl = ""CREATE INDEX "" + indexName + ""2 ON "" + INDEX_DATA_SCHEMA + QueryConstants.NAME_SEPARATOR + indexDataTable"
213238,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexMetadataIT.java,285,,"            conn.createStatement().execute(""CREATE TABLE "" + diffTableNameInSameSchema + ""(k INTEGER PRIMARY KEY)"");"
213239,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexMetadataIT.java,318,,"            conn.createStatement().execute(""create table "" + fullTableName + TestUtil.TEST_TABLE_SCHEMA + ""IMMUTABLE_ROWS=true"");"
213240,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexMetadataIT.java,511,,"                conn.createStatement().execute(""CREATE INDEX "" + indexName + ""3 ON "" + testTable  + "" (v2, v3) INCLUDE (v4)"");"
213241,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexMetadataIT.java,585,,"        ddl = ""CREATE INDEX "" + indexName + ""1 ON "" + testTable  + "" (v1) "";"
213242,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexMetadataIT.java,628,,"            PreparedStatement upsertStmt = conn.prepareStatement(""UPSERT INTO "" + testTable + "" VALUES(?, ?)"");"
213243,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexMetadataIT.java,667,,"                ""SELECT * FROM "" + PhoenixDatabaseMetaData.SYSTEM_TASK_NAME);"
213244,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexMetadataIT.java,791,,"        String ddl = ""create table "" + testTable  + "" (k varchar primary key, v1 varchar)"";"
213245,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexUsageIT.java,88,,"        String upsert = ""UPSERT INTO "" + dataTable"
213246,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexUsageIT.java,125,,"                : ""IMMUTABLE_ROWS=true"");"
213247,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexUsageIT.java,127,,"            String ddl = ""CREATE "" + (localIndex ? ""LOCAL"" : """") + "" INDEX """
213248,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexUsageIT.java,127,,"            String ddl = ""CREATE "" + (localIndex ? ""LOCAL"" : """") + "" INDEX """
213249,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexUsageIT.java,127,,"            String ddl = ""CREATE "" + (localIndex ? ""LOCAL"" : """") + "" INDEX """
213250,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexUsageIT.java,128,,"                + indexName + "" ON "" + fullDataTableName"
213251,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexUsageIT.java,140,,"            assertEquals(""PARALLEL 1-WAY"","
213252,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexUsageIT.java,142,,"            assertEquals(""SERVER FILTER BY FIRST KEY ONLY"","
213253,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexUsageIT.java,148,,"                assertEquals(""RANGE SCAN "","
213254,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexUsageIT.java,152,,"                assertEquals(""CLIENT MERGE SORT"","
213255,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexUsageIT.java,155,,"                assertEquals(""FULL SCAN "","
213256,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexUsageIT.java,157,,"                assertEquals(""INDEX_TEST."" + indexName,"
213257,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexUsageIT.java,200,,"                + indexName + "" ON "" + fullDataTableName + "" (int_col1+1)"";"
213258,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexUsageIT.java,409,,"            conn.createStatement().execute(""CREATE TABLE "" + dataTableName"
213259,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexUsageIT.java,412,,"            String query = ""SELECT * FROM "" + dataTableName;"
213260,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexUsageIT.java,460,,"            assertEquals(""x_1"", rs.getString(1));"
213261,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexUsageIT.java,512,,"            assertEquals(""y_2"", rs.getString(3));"
213262,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexWithTableSchemaChangeIT.java,91,,"                ""CREATE TABLE "" + dataTableName"
213263,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexWithTableSchemaChangeIT.java,94,,"	        query = ""SELECT * FROM "" + dataTableName ;"
213264,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexWithTableSchemaChangeIT.java,97,,"	        conn.createStatement().execute(""CREATE "" + ( local ? ""LOCAL"" : """") + "" INDEX "" + indexName + "" ON "" + dataTableName + "" (v1 || '_' || v2)"");"
213265,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexWithTableSchemaChangeIT.java,97,,"	        conn.createStatement().execute(""CREATE "" + ( local ? ""LOCAL"" : """") + "" INDEX "" + indexName + "" ON "" + dataTableName + "" (v1 || '_' || v2)"");"
213266,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexWithTableSchemaChangeIT.java,104,,"	        stmt = conn.prepareStatement(""UPSERT INTO "" + dataTableName + "" VALUES(?,?,?)"");"
213267,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexWithTableSchemaChangeIT.java,104,,"	        stmt = conn.prepareStatement(""UPSERT INTO "" + dataTableName + "" VALUES(?,?,?)"");"
213268,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexWithTableSchemaChangeIT.java,112,,"	        conn.createStatement().execute(""ALTER TABLE "" + dataTableName + "" DROP COLUMN v1"");"
213269,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexWithTableSchemaChangeIT.java,313,,"	        assertEquals(""K"",rs.getString(""COLUMN_NAME""));"
213270,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/IndexWithTableSchemaChangeIT.java,314,,"	        assertEquals(1, rs.getShort(""KEY_SEQ""));"
213271,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/LocalIndexIT.java,93,,"        String indexName = ""IDX_"" + generateUniqueName();"
213272,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/LocalIndexIT.java,98,,"            conn.createStatement().execute(""upsert into "" + tableName + "" values ('a', 'ab', 'abc', 'abcd')"");"
213273,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/LocalIndexIT.java,106,,"            conn.createStatement().execute(""CREATE LOCAL INDEX "" + indexName + "" on "" +"
213274,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/LocalIndexIT.java,106,,"            conn.createStatement().execute(""CREATE LOCAL INDEX "" + indexName + "" on "" +"
213275,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/LocalIndexIT.java,112,,"                    ""PHOENIX_ROW_TIMESTAMP() > TO_DATE('"" + before.toString() + ""','yyyy-MM-dd HH:mm:ss.SSS', '"" + timeZoneID + ""') AND "" +"
213276,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/LocalIndexIT.java,186,,"        conn.createStatement().execute(""CREATE TABLE "" + tableName + "" (pk INTEGER PRIMARY KEY, v1 FLOAT, v2 FLOAT[])"");"
213277,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/LocalIndexIT.java,187,,"        conn.createStatement().execute(""UPSERT INTO "" + tableName + "" VALUES(1, 2, ARRAY[3,4])"");"
213278,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/LocalIndexIT.java,189,,"        conn.createStatement().execute(""CREATE LOCAL INDEX "" + indexName + "" ON "" + tableName + ""(v1)"");"
213279,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/LocalIndexIT.java,189,,"        conn.createStatement().execute(""CREATE LOCAL INDEX "" + indexName + "" ON "" + tableName + ""(v1)"");"
213280,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/LocalIndexIT.java,196,,"        conn.createStatement().execute(""DROP INDEX "" + indexName + "" ON "" + tableName);"
213281,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/LocalIndexIT.java,239,,"        ResultSet rs = conn.createStatement().executeQuery(""SELECT COUNT(*) FROM ""+tableName+"" WHERE v1 < 3 AND v2 < 4"");"
213282,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/LocalIndexIT.java,279,,"        rs = conn.createStatement().executeQuery(""SELECT * FROM ""+tableName+"" WHERE v1 > 0 AND v3 > 5 LIMIT 2"");"
213283,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/LocalIndexIT.java,305,,"            conn.createStatement().execute(""CREATE SCHEMA IF NOT EXISTS "" + schemaName);"
213284,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/LocalIndexIT.java,408,,"        assertEquals(""PARALLEL 1-WAY"","
213285,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/LocalIndexIT.java,410,,"        assertEquals(""RANGE SCAN "","
213286,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/LocalIndexIT.java,429,,"        assertEquals(""CLIENT MERGE SORT"","
213287,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/LocalIndexIT.java,489,,"                    + ""    SERVER MERGE [0.V1]\n"""
213288,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/LocalIndexIT.java,490,,"                    + ""    SERVER FILTER BY FIRST KEY ONLY\n"""
213289,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/LocalIndexIT.java,516,,"            ""CLIENT PARALLEL 1-WAY RANGE SCAN OVER """
213290,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/LocalIndexIT.java,517,,"                    + indexPhysicalTableName + "" [1]\n"""
213291,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/LocalIndexIT.java,524,,"        rs = conn.createStatement().executeQuery(""EXPLAIN SELECT * FROM "" + tableName);"
213292,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/LocalIndexIT.java,526,,"            ""CLIENT PARALLEL 1-WAY FULL SCAN OVER "" + physicalTableName,"
213293,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/LocalIndexIT.java,555,,"                    + indexPhysicalTableName + "" [1,2]\n"""
213294,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/LocalIndexIT.java,713,,"        createBaseTable(tableName, null,""('e','i','o')"");"
213295,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/LocalIndexIT.java,761,,"        conn1.createStatement().execute(""UPSERT INTO ""+tableName+"" values('b',1,2,4,'z')"");"
213296,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/LocalIndexIT.java,763,,"        conn1.createStatement().execute(""UPSERT INTO ""+tableName+"" values('j',2,4,2,'a')"");"
213297,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/LocalIndexIT.java,764,,"        conn1.createStatement().execute(""UPSERT INTO ""+tableName+"" values('q',3,1,1,'c')"");"
213298,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/LocalIndexIT.java,803,,"            conn1.createStatement().execute(""UPSERT INTO "" + tableName + "" values('f',1,2,3,'a')"");"
213299,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/LocalIndexIT.java,810,,"            ResultSet rs = conn1.createStatement().executeQuery(""EXPLAIN ""+ query);"
213300,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/LocalIndexIT.java,816,,"                ""CLIENT PARALLEL "" + numRegions + ""-WAY RANGE SCAN OVER """
213301,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/LocalIndexIT.java,816,,"                ""CLIENT PARALLEL "" + numRegions + ""-WAY RANGE SCAN OVER """
213302,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/LocalIndexIT.java,818,,"                                + ""    SERVER MERGE [0.K3]\n"""
213303,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/LocalIndexIT.java,944,,"            assertEquals(""f"", rs.getString(""t_id""));"
213304,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/MutableIndexExtendedIT.java,97,,"                        { false, ""TEPHRA"", false }, { false, ""TEPHRA"", true },"
213305,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/MutableIndexExtendedIT.java,158,,"        conn1.createStatement().execute(""UPSERT INTO "" + tableName + "" values('b',1,2,4,'z')"");"
213306,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/MutableIndexFailureIT.java,260,,"                    ""CREATE "" + (localIndex ? ""LOCAL "" : """") + "" INDEX "" + indexName + "" ON "" + fullTableName + "" (v1) INCLUDE (v2)"");"
213307,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/MutableIndexFailureIT.java,283,,"            assertEquals(PIndexState.ACTIVE.toString(), rs.getString(""INDEX_STATE""));"
213308,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/MutableIndexFailureIT.java,387,,"                PreparedStatement stmt = conn.prepareStatement(""UPSERT INTO "" + fullTableName + "" VALUES(?,?,?)"");"
213309,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/MutableIndexFailureIT.java,387,,"                PreparedStatement stmt = conn.prepareStatement(""UPSERT INTO "" + fullTableName + "" VALUES(?,?,?)"");"
213310,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/MutableIndexIT.java,97,,"                { false, ""TEPHRA"", false }, { false, ""TEPHRA"", true },"
213311,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/MutableIndexIT.java,108,,"            String tableName = ""TBL_"" + generateUniqueName();"
213312,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/MutableIndexIT.java,109,,"            String indexName = ""IDX_"" + generateUniqueName();"
213313,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/MutableIndexIT.java,115,,"            conn.createStatement().execute(""CREATE "" + (localIndex ? "" LOCAL "" : """") + "" INDEX "" + indexName + "" ON "" + fullTableName "
213314,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/MutableIndexIT.java,115,,"            conn.createStatement().execute(""CREATE "" + (localIndex ? "" LOCAL "" : """") + "" INDEX "" + indexName + "" ON "" + fullTableName "
213315,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/MutableIndexIT.java,115,,"            conn.createStatement().execute(""CREATE "" + (localIndex ? "" LOCAL "" : """") + "" INDEX "" + indexName + "" ON "" + fullTableName "
213316,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/MutableIndexIT.java,115,,"            conn.createStatement().execute(""CREATE "" + (localIndex ? "" LOCAL "" : """") + "" INDEX "" + indexName + "" ON "" + fullTableName "
213317,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/MutableIndexIT.java,119,,"            ResultSet rs = conn.createStatement().executeQuery(""EXPLAIN "" + query);"
213318,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/MutableIndexIT.java,121,,"                assertEquals(""CLIENT PARALLEL 1-WAY RANGE SCAN OVER "" + fullTableName +"" [1]\nCLIENT MERGE SORT"", QueryUtil.getExplainPlan(rs));"
213319,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/MutableIndexIT.java,121,,"                assertEquals(""CLIENT PARALLEL 1-WAY RANGE SCAN OVER "" + fullTableName +"" [1]\nCLIENT MERGE SORT"", QueryUtil.getExplainPlan(rs));"
213320,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/MutableIndexIT.java,123,,"                assertEquals(""CLIENT PARALLEL 1-WAY FULL SCAN OVER "" + fullIndexName, QueryUtil.getExplainPlan(rs));"
213321,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/MutableIndexIT.java,128,,"            assertEquals(""chara"", rs.getString(1));"
213322,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/MutableIndexIT.java,141,,"            PreparedStatement stmt = conn.prepareStatement(""UPSERT INTO "" + fullTableName"
213323,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/MutableIndexIT.java,247,,"            conn.createStatement().execute(""CREATE TABLE "" + fullTableName + "" (k VARCHAR NOT NULL PRIMARY KEY, v1 VARCHAR, v2 VARCHAR)"" + tableDDLOptions);"
213324,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/MutableIndexIT.java,248,,"            query = ""SELECT * FROM "" + fullTableName;"
213325,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/MutableIndexIT.java,257,,"            PreparedStatement stmt = conn.prepareStatement(""UPSERT INTO "" + fullTableName + "" VALUES(?,?,?)"");"
213326,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/MutableIndexIT.java,272,,"            stmt = conn.prepareStatement(""UPSERT INTO "" + fullTableName + ""(k,v2) VALUES(?,?)"");"
213327,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/MutableIndexIT.java,560,,"            stmt.executeUpdate(""upsert into "" + testTableName + "" values('cc1', null, 'abc')"");"
213328,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/MutableIndexIT.java,564,,"            rs = stmt.executeQuery(""select * from "" + fullIndexName);"
213329,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/MutableIndexIT.java,568,,"            assertEquals(""cc1"", rs.getString(2));"
213330,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/MutableIndexIT.java,569,,"            assertEquals(""abc"", rs.getString(3));"
213331,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/MutableIndexIT.java,806,,"          conn.createStatement().executeUpdate(""DELETE FROM "" + fullTableName);"
213332,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/MutableIndexIT.java,859,,"        String indexTableName = ""IND_"" + generateUniqueName();"
213333,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/PartialIndexRebuilderIT.java,168,,"                           conn.createStatement().execute(""UPSERT INTO "" + fullTableName + "" VALUES ("" + pk + "", 0, "" + (isNull ? null : randInt) + "")"");"
213334,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/PartialIndexRebuilderIT.java,176,,"                           conn.createStatement().execute(""DELETE FROM "" + fullTableName + "" WHERE k1= "" + pk + "" AND k2=0"");"
213335,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/PartialIndexRebuilderIT.java,218,,"        conn.createStatement().execute(""CREATE TABLE "" + fullTableName + ""(k1 INTEGER NOT NULL, k2 INTEGER NOT NULL, v1 INTEGER, CONSTRAINT pk PRIMARY KEY (k1,k2)) STORE_NULLS=true, VERSIONS=1"");"
213336,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/PartialIndexRebuilderIT.java,219,,"        conn.createStatement().execute(""CREATE INDEX "" + indexName + "" ON "" + fullTableName + ""(v1)"");"
213337,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/PartialIndexRebuilderIT.java,219,,"        conn.createStatement().execute(""CREATE INDEX "" + indexName + "" ON "" + fullTableName + ""(v1)"");"
213338,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/PartialIndexRebuilderIT.java,417,,"            conn.createStatement().execute(""CREATE TABLE "" + fullTableName + ""(k VARCHAR PRIMARY KEY, v VARCHAR) COLUMN_ENCODED_BYTES = 0, STORE_NULLS=true"");"
213339,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/PartialIndexRebuilderIT.java,418,,"            conn.createStatement().execute(""CREATE INDEX "" + indexName + "" ON "" + fullTableName + "" (v)"");"
213340,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/PartialIndexRebuilderIT.java,419,,"            conn.createStatement().execute(""UPSERT INTO "" + fullTableName + "" VALUES('a','bb')"");"
213341,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/PartialIndexRebuilderIT.java,424,,"            conn.createStatement().execute(""UPSERT INTO "" + fullTableName + "" VALUES('a','ccc')"");"
213342,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/PartialIndexRebuilderIT.java,449,,"            conn.createStatement().execute(""UPSERT INTO "" + fullTableName + "" VALUES('a','a')"");"
213343,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/PartialIndexRebuilderIT.java,454,,"            conn.createStatement().execute(""UPSERT INTO "" + fullTableName + "" VALUES('a',null)"");"
213344,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/PartialIndexRebuilderIT.java,642,,"            conn.createStatement().execute(""CREATE INDEX "" + indexName + "" ON "" + fullTableName + "" (v1, v2)"");"
213345,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/PartialIndexRebuilderIT.java,643,,"            conn.createStatement().execute(""UPSERT INTO "" + fullTableName + "" VALUES('a','a','0')"");"
213346,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/SaltedIndexIT.java,136,,"        query = ""SELECT k,v FROM "" + dataTableFullName + "" WHERE v = 'y'"";"
213347,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/SaltedIndexIT.java,144,,"        rs = conn.createStatement().executeQuery(""EXPLAIN "" + query);"
213348,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/SaltedIndexIT.java,151,,"             ""CLIENT MERGE SORT"");"
213349,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/SingleCellIndexIT.java,101,,"            String tableName = ""TBL_"" + generateUniqueName();"
213350,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/SingleCellIndexIT.java,102,,"            String idxName = ""IND_"" + generateUniqueName();"
213351,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/SingleCellIndexIT.java,111,,"            ResultSet rs = conn.createStatement().executeQuery(""EXPLAIN "" + selectFromData);"
213352,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/SingleCellIndexIT.java,117,,"            assertEquals(""PK2"", rs.getString(1));"
213353,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/SingleCellIndexIT.java,121,,"            assertEquals(""V42"", rs.getString(5));"
213354,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/SingleCellIndexIT.java,161,,"            String upsert = ""UPSERT INTO "" + tableName + "" (PK1,INT_PK,V1, V2, V3, V4, V5, V_NEW) VALUES ('PK99',99,'V199',100,101,'V499','V699','V_NEW99')"";"
213355,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/SingleCellIndexIT.java,246,,"                String indexDDL = ""CREATE INDEX "" + view1IndexName + "" ON "" + view1 + "" (V1) include (VIEW_COL2, V3) IMMUTABLE_STORAGE_SCHEME=SINGLE_CELL_ARRAY_WITH_OFFSETS,COLUMN_ENCODED_BYTES=2"";"
213356,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/SingleCellIndexIT.java,246,,"                String indexDDL = ""CREATE INDEX "" + view1IndexName + "" ON "" + view1 + "" (V1) include (VIEW_COL2, V3) IMMUTABLE_STORAGE_SCHEME=SINGLE_CELL_ARRAY_WITH_OFFSETS,COLUMN_ENCODED_BYTES=2"";"
213357,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/ViewIndexIT.java,109,,"            conn.createStatement().execute(""CREATE VIEW "" + fullViewName + "" AS SELECT * FROM "" + fullTableName);"
213358,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/ViewIndexIT.java,109,,"            conn.createStatement().execute(""CREATE VIEW "" + fullViewName + "" AS SELECT * FROM "" + fullTableName);"
213359,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/ViewIndexIT.java,117,,"                        conn.createStatement().execute(""CREATE INDEX "" + indexName + "" ON "" + fullViewName + "" (v1)"");"
213360,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/ViewIndexIT.java,117,,"                        conn.createStatement().execute(""CREATE INDEX "" + indexName + "" ON "" + fullViewName + "" (v1)"");"
213361,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/ViewIndexIT.java,180,,"            conn2.createStatement().executeQuery(""SELECT * FROM "" + fullTableName).next();"
213362,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/ViewIndexIT.java,204,,"                ""UPSERT INTO "" + fullTableName"
213363,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/ViewIndexIT.java,321,,"            conn.createStatement().execute(""CREATE TABLE "" + baseTable + "" (TENANT_ID CHAR(15) NOT NULL, PK2 DATE NOT NULL, PK3 INTEGER NOT NULL, KV1 VARCHAR, KV2 VARCHAR, KV3 CHAR(15) CONSTRAINT PK PRIMARY KEY(TENANT_ID, PK2, PK3)) MULTI_TENANT=true"");"
213364,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/ViewIndexIT.java,335,,"                stmt.setString(4, ""KV3"");"
213365,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/ViewIndexIT.java,417,,"            createTableForRowKeyTestsAndVerify(conn, ""DATE_TIME1, INT1"", ""TEXT1"", ""INT1"", int1);"
213366,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/ViewIndexIT.java,417,,"            createTableForRowKeyTestsAndVerify(conn, ""DATE_TIME1, INT1"", ""TEXT1"", ""INT1"", int1);"
213367,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/ViewIndexIT.java,417,,"            createTableForRowKeyTestsAndVerify(conn, ""DATE_TIME1, INT1"", ""TEXT1"", ""INT1"", int1);"
213368,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/ViewIndexIT.java,574,,"                    conn.createStatement().execute(""CREATE SCHEMA IF NOT EXISTS "" + baseSchemaName);"
213369,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/ViewIndexIT.java,609,,"                tsConn.createStatement().execute(""DELETE FROM "" + tsViewFullName + "" WHERE TEXT1='d'"");"
213370,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/txn/MutableRollbackIT.java,75,,"        String tableName1 = ""TBL1_"" + generateUniqueName();"
213371,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/txn/MutableRollbackIT.java,76,,"        String indexName1 = ""IDX1_"" + generateUniqueName();"
213372,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/txn/MutableRollbackIT.java,84,,"            stmt.execute(""CREATE TABLE "" + fullTableName1 + ""(k VARCHAR PRIMARY KEY, v1 VARCHAR, v2 VARCHAR)"" + tableDDLOptions);"
213373,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/txn/MutableRollbackIT.java,84,,"            stmt.execute(""CREATE TABLE "" + fullTableName1 + ""(k VARCHAR PRIMARY KEY, v1 VARCHAR, v2 VARCHAR)"" + tableDDLOptions);"
213374,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/txn/MutableRollbackIT.java,86,,"            stmt.execute(""CREATE ""+(localIndex? "" LOCAL "" : """")+""INDEX "" + indexName1 + "" ON "" + fullTableName1 + "" (v1) INCLUDE(v2)"");"
213375,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/txn/MutableRollbackIT.java,86,,"            stmt.execute(""CREATE ""+(localIndex? "" LOCAL "" : """")+""INDEX "" + indexName1 + "" ON "" + fullTableName1 + "" (v1) INCLUDE(v2)"");"
213376,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/txn/MutableRollbackIT.java,86,,"            stmt.execute(""CREATE ""+(localIndex? "" LOCAL "" : """")+""INDEX "" + indexName1 + "" ON "" + fullTableName1 + "" (v1) INCLUDE(v2)"");"
213377,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/txn/MutableRollbackIT.java,86,,"            stmt.execute(""CREATE ""+(localIndex? "" LOCAL "" : """")+""INDEX "" + indexName1 + "" ON "" + fullTableName1 + "" (v1) INCLUDE(v2)"");"
213378,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/txn/MutableRollbackIT.java,89,,"            stmt.executeUpdate(""upsert into "" + fullTableName1 + "" values('x', 'y', 'a')"");"
213379,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/txn/MutableRollbackIT.java,93,,"            ResultSet rs = stmt.executeQuery(""select /*+ NO_INDEX */ k, v1, v2 from "" + fullTableName1);"
213380,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/txn/MutableRollbackIT.java,101,,"            rs = stmt.executeQuery(""select /*+ INDEX("" + indexName1 + "")*/ k, v1, v2 from "" + fullTableName1);"
213381,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/txn/MutableRollbackIT.java,101,,"            rs = stmt.executeQuery(""select /*+ INDEX("" + indexName1 + "")*/ k, v1, v2 from "" + fullTableName1);"
213382,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/txn/MutableRollbackIT.java,113,,"            rs = stmt.executeQuery(""select /*+ INDEX("" + indexName2 + "")*/ k, v1 from "" + fullTableName2);"
213383,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/txn/MutableRollbackIT.java,117,,"            stmt.executeUpdate(""upsert into "" + fullTableName2 + "" values('a', 'b', 'c')"");"
213384,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/txn/MutableRollbackIT.java,181,,"            stmt.executeUpdate(""delete from "" + fullTableName1 + "" where  k='x'"");"
213385,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/txn/MutableRollbackIT.java,188,,"            rs = stmt.executeQuery(""select /*+ INDEX("" + indexName1 + "")*/ k, v1 from "" + fullTableName1 + "" ORDER BY v1"");"
213386,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/txn/MutableRollbackIT.java,226,,"            ResultSet rs = stmt.executeQuery(""select k, v1, v2 from "" + fullTableName1);"
213387,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/txn/MutableRollbackIT.java,359,,"            assertEquals(""yyyy"", rs.getString(2));"
213388,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/txn/RollbackIT.java,70,,"                 { false, false, ""TEPHRA"" }, { false, true, ""TEPHRA""  },"
213389,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/txn/RollbackIT.java,91,,"            ResultSet rs = stmt.executeQuery(""select /*+ NO_INDEX */ k, v1, v2 from "" + fullTableName);"
213390,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/txn/RollbackIT.java,99,,"            rs = stmt.executeQuery(""select /*+ INDEX("" + indexName + "")*/ k, v1, v2  from "" + fullTableName);"
213391,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/index/txn/TxWriteFailureIT.java,97,,"                 { false, false, ""TEPHRA"" }, { false, true, ""TEPHRA"" }, { true, false, ""TEPHRA"" }, { true, true, ""TEPHRA"" },"
213392,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/BaseJoinIT.java,54,,"    protected static final String JOIN_ORDER_TABLE_FULL_NAME = '""' + JOIN_SCHEMA + ""\"".\"""" + JOIN_ORDER_TABLE + '""';"
213393,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/BaseJoinIT.java,64,,"        builder.put(JOIN_ORDER_TABLE_FULL_NAME, ""create table "" + JOIN_ORDER_TABLE_FULL_NAME +"
213394,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/BaseJoinIT.java,195,,"                    ""upsert into "" + realName +"
213395,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/BaseJoinIT.java,203,,"            stmt.setString(1, ""0000000001"");"
213396,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/BaseJoinIT.java,211,,"            stmt.setString(1, ""0000000002"");"
213397,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/BaseJoinIT.java,219,,"            stmt.setString(1, ""0000000003"");"
213398,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/BaseJoinIT.java,227,,"            stmt.setString(1, ""0000000004"");"
213399,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/BaseJoinIT.java,235,,"            stmt.setString(1, ""0000000005"");"
213400,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/BaseJoinIT.java,243,,"            stmt.setString(1, ""0000000006"");"
213401,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinGlobalIndexIT.java,66,,"                ""CLIENT PARALLEL 1-WAY FULL SCAN OVER "" + JOIN_ORDER_TABLE_FULL_NAME + ""\n"" +"
213402,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinGlobalIndexIT.java,68,,"                ""CLIENT MERGE SORT\n"" +"
213403,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinGlobalIndexIT.java,69,,"                ""    PARALLEL LEFT-JOIN TABLE 0\n"" +"
213404,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinGlobalIndexIT.java,70,,"                ""        CLIENT PARALLEL 1-WAY FULL SCAN OVER "" + JOIN_SCHEMA + "".idx_item\n"" +"
213405,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinGlobalIndexIT.java,70,,"                ""        CLIENT PARALLEL 1-WAY FULL SCAN OVER "" + JOIN_SCHEMA + "".idx_item\n"" +"
213406,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinGlobalIndexIT.java,71,,"                ""            SERVER FILTER BY FIRST KEY ONLY"","
213407,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinGlobalIndexIT.java,92,,"                ""    SERVER FILTER BY FIRST KEY ONLY\n"" +"
213408,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinGlobalIndexIT.java,151,,"                ""    PARALLEL INNER-JOIN TABLE 0\n"" +"
213409,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,68,,"        String query = ""SELECT item.\""item_id\"", item.name, supp.\""supplier_id\"", supp.name, next value for "" + seqName + "" FROM "" + tableName1 + "" item INNER JOIN "" + tableName2 + "" supp ON item.\""supplier_id\"" = supp.\""supplier_id\"""";"
213410,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,68,,"        String query = ""SELECT item.\""item_id\"", item.name, supp.\""supplier_id\"", supp.name, next value for "" + seqName + "" FROM "" + tableName1 + "" item INNER JOIN "" + tableName2 + "" supp ON item.\""supplier_id\"" = supp.\""supplier_id\"""";"
213411,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,73,,"            assertEquals(rs.getString(1), ""0000000001"");"
213412,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,79,,"            assertEquals(rs.getString(1), ""0000000002"");"
213413,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,85,,"            assertEquals(rs.getString(1), ""0000000003"");"
213414,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,91,,"            assertEquals(rs.getString(1), ""0000000004"");"
213415,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,97,,"            assertEquals(rs.getString(1), ""0000000005"");"
213416,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,103,,"            assertEquals(rs.getString(1), ""0000000006"");"
213417,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,120,,"        String query = ""SELECT item.\""item_id\"", item.name, supp.\""supplier_id\"", supp.name FROM "" + tableName1 + "" item JOIN "" + tableName2 + "" supp ON item.\""supplier_id\"" = supp.\""supplier_id\"""";"
213418,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,172,,"        query[0] = ""SELECT item.\""item_id\"", item.name, supp.\""supplier_id\"", supp.name, next value for "" + seqName + "" FROM "" + tableName1 + "" item LEFT JOIN "" + tableName2 + "" supp ON item.\""supplier_id\"" = supp.\""supplier_id\"" ORDER BY \""item_id\"""";"
213419,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,210,,"                assertEquals(rs.getString(1), ""invalid001"");"
213420,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,211,,"                assertEquals(rs.getString(2), ""INVALID-1"");"
213421,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,479,,"                assertEquals(rs.getString(1), ""000000000000001"");"
213422,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,489,,"                assertEquals(rs.getString(1), ""000000000000002"");"
213423,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,495,,"                assertEquals(rs.getString(1), ""000000000000003"");"
213424,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,501,,"                assertEquals(rs.getString(1), ""000000000000004"");"
213425,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,507,,"                assertEquals(rs.getString(1), ""000000000000005"");"
213426,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,516,,"                    rs = conn.createStatement().executeQuery(""EXPLAIN "" + query[i]);"
213427,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,530,,"        String query1 = ""SELECT i.name, sum(quantity) FROM "" + tableName1 + "" o LEFT JOIN "" "
213428,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,560,,"            assertEquals(rs.getString(""iid""), ""0000000006"");"
213429,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,615,,"        String query1 = ""SELECT i.name, sum(quantity) FROM "" + tableName1 + "" o RIGHT JOIN "" "
213430,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,688,,"        String query1 = ""SELECT \""order_id\"", i.name, s.name, quantity, \""DATE\"" FROM "" + tableName1 + "" o LEFT JOIN """
213431,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,689,,"                + tableName2 + "" i ON o.\""item_id\"" = i.\""item_id\"" RIGHT JOIN """
213432,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,690,,"                + tableName3 + "" s ON i.\""supplier_id\"" = s.\""supplier_id\"" ORDER BY \""order_id\"", s.\""supplier_id\"" DESC"";"
213433,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,989,,"        String query = ""SELECT * FROM "" + getTableName(conn, JOIN_ITEM_TABLE_FULL_NAME) + "" LEFT JOIN "" + getTableName(conn, JOIN_SUPPLIER_TABLE_FULL_NAME) + "" supp ON "" + getTableName(conn, JOIN_ITEM_TABLE_FULL_NAME) + "".\""supplier_id\"" = supp.\""supplier_id\"" ORDER BY \""item_id\"""";"
213434,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,994,,"            assertEquals(rs.getString(getDisplayTableName(conn,JOIN_ITEM_TABLE_FULL_NAME) + "".item_id""), ""0000000001"");"
213435,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,995,,"            assertEquals(rs.getString(getDisplayTableName(conn,JOIN_ITEM_TABLE_FULL_NAME) + "".NAME""), ""T1"");"
213436,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,996,,"            assertEquals(rs.getInt(getDisplayTableName(conn,JOIN_ITEM_TABLE_FULL_NAME) + "".PRICE""), 100);"
213437,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,997,,"            assertEquals(rs.getInt(getDisplayTableName(conn,JOIN_ITEM_TABLE_FULL_NAME) + "".DISCOUNT1""), 5);"
213438,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,998,,"            assertEquals(rs.getInt(getDisplayTableName(conn,JOIN_ITEM_TABLE_FULL_NAME) + "".DISCOUNT2""), 10);"
213439,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,999,,"            assertEquals(rs.getString(getDisplayTableName(conn,JOIN_ITEM_TABLE_FULL_NAME) + "".supplier_id""), ""0000000001"");"
213440,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,1000,,"            assertEquals(rs.getString(getDisplayTableName(conn,JOIN_ITEM_TABLE_FULL_NAME) + "".DESCRIPTION""), ""Item T1"");"
213441,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,1000,,"            assertEquals(rs.getString(getDisplayTableName(conn,JOIN_ITEM_TABLE_FULL_NAME) + "".DESCRIPTION""), ""Item T1"");"
213442,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,1001,,"            assertEquals(rs.getString(""SUPP.supplier_id""), ""0000000001"");"
213443,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,1002,,"            assertEquals(rs.getString(""supp.name""), ""S1"");"
213444,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,1003,,"            assertEquals(rs.getString(""supp.phone""), ""888-888-1111"");"
213445,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,1003,,"            assertEquals(rs.getString(""supp.phone""), ""888-888-1111"");"
213446,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,1004,,"            assertEquals(rs.getString(""supp.address""), ""101 YYY Street"");"
213447,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,1004,,"            assertEquals(rs.getString(""supp.address""), ""101 YYY Street"");"
213448,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,1005,,"            assertEquals(rs.getString(""supp.loc_id""), ""10001"");            "
213449,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,1005,,"            assertEquals(rs.getString(""supp.loc_id""), ""10001"");            "
213450,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,1029,,"            assertEquals(rs.getString(""supp.phone""), ""888-888-2222"");"
213451,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,1030,,"            assertEquals(rs.getString(""supp.address""), ""202 YYY Street"");"
213452,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,1031,,"            assertEquals(rs.getString(""supp.loc_id""), ""10002"");            "
213453,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,1065,,"            assertEquals(rs.getString(getDisplayTableName(conn,JOIN_ITEM_TABLE_FULL_NAME) + "".DESCRIPTION""), ""Item T6"");"
213454,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,1068,,"            assertEquals(rs.getString(""supp.phone""), ""888-888-6666"");"
213455,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,1069,,"            assertEquals(rs.getString(""supp.address""), ""606 YYY Street"");"
213456,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,1070,,"            assertEquals(rs.getString(""supp.loc_id""), ""10006"");            "
213457,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,1274,,"        String query = ""SELECT \""order_id\"", i.name, i.price, discount2, quantity FROM "" + getTableName(conn, JOIN_ORDER_TABLE_FULL_NAME) + "" o INNER JOIN "" "
213458,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,1303,,"            assertEquals(rs.getTimestamp(3), new Timestamp(format.parse(""2013-11-22 14:22:56"").getTime()));"
213459,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,1307,,"            assertEquals(rs.getTimestamp(3), new Timestamp(format.parse(""2013-11-25 10:06:29"").getTime()));"
213460,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,1555,,"            assertEquals(rs.getString(1), ""ORDER_SUM"");"
213461,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,1690,,"            assertEquals(rs.getString(""c.name""), ""C3"");"
213462,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,1691,,"            assertEquals(rs.getString(""c.phone""), ""999-999-3333"");"
213463,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,1692,,"            assertEquals(rs.getString(""c.address""), ""303 XXX Street"");"
213464,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,1693,,"            assertNull(rs.getString(""c.loc_id""));"
213465,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,1694,,"            assertEquals(rs.getDate(""c.date""), new Date(format.parse(""2013-11-25 10:06:29"").getTime()));"
213466,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,1716,,"            assertEquals(rs.getString(""c.phone""), ""999-999-4444"");"
213467,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,1717,,"            assertEquals(rs.getString(""c.address""), ""404 XXX Street"");"
213468,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,1718,,"            assertEquals(rs.getString(""c.loc_id""), ""10004"");"
213469,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,1918,,"            assertEquals(rs.getString(""o.iid""), ""0000000006"");"
213470,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,1938,,"            assertEquals(rs.getString(""i.iid""), ""0000000006"");"
213471,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,1939,,"            assertEquals(rs.getInt(""o.q""), 6000);"
213472,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinIT.java,2113,,"        String query1 = ""SELECT \""order_id\"", i.name, s.name, s.address, quantity FROM "" + getTableName(conn, JOIN_SUPPLIER_TABLE_FULL_NAME) + "" s LEFT JOIN "" "
213473,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinLocalIndexIT.java,83,,"                ""CLIENT PARALLEL 1-WAY FULL SCAN OVER "" + JOIN_ORDER_TABLE_FULL_NAME + ""\n"" +"
213474,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinLocalIndexIT.java,85,,"                ""CLIENT MERGE SORT\n"" +"
213475,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinLocalIndexIT.java,86,,"                ""    PARALLEL LEFT-JOIN TABLE 0\n"" +"
213476,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinLocalIndexIT.java,87,,"                ""        CLIENT PARALLEL 1-WAY RANGE SCAN OVER "" +JOIN_ITEM_TABLE_FULL_NAME +"" [1]\n"" +"
213477,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinLocalIndexIT.java,87,,"                ""        CLIENT PARALLEL 1-WAY RANGE SCAN OVER "" +JOIN_ITEM_TABLE_FULL_NAME +"" [1]\n"" +"
213478,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinLocalIndexIT.java,88,,"                ""            SERVER FILTER BY FIRST KEY ONLY\n"" +"
213479,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinLocalIndexIT.java,89,,"                ""        CLIENT MERGE SORT"","
213480,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinLocalIndexIT.java,111,,"                ""    SERVER FILTER BY FIRST KEY ONLY\n"" +"
213481,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinLocalIndexIT.java,115,,"                ""        CLIENT PARALLEL 1-WAY FULL SCAN OVER "" + JOIN_ORDER_TABLE_FULL_NAME,"
213482,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinLocalIndexIT.java,122,,"                ""CLIENT PARALLEL 1-WAY RANGE SCAN OVER ""+ JOIN_ITEM_TABLE_FULL_NAME+"" [1]\n"" +"
213483,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinLocalIndexIT.java,174,,"                ""    PARALLEL INNER-JOIN TABLE 0\n"" +"
213484,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinLocalIndexIT.java,192,,"                ""        CLIENT MERGE SORT\n"" +"
213485,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinMoreIT.java,51,,"            ""CLIENT PARALLEL 4-WAY FULL SCAN OVER %s\n"" +"
213486,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinMoreIT.java,52,,"            ""CLIENT MERGE SORT\n"" +"
213487,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinMoreIT.java,53,,"            ""    PARALLEL INNER-JOIN TABLE 0\n"" +"
213488,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinMoreIT.java,54,,"            ""        CLIENT PARALLEL 4-WAY FULL SCAN OVER %s\n"" +"
213489,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinMoreIT.java,101,,"            conn.createStatement().execute(""CREATE TABLE "" + tempTableNoSalting "
213490,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinMoreIT.java,128,,"                    + tempTableNoSalting + "" lhs JOIN """
213491,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinMoreIT.java,248,,"            String upsertA = ""UPSERT INTO "" + tableA + "" (pkA, colA1, colA2) VALUES(?, ?, ?)"";"
213492,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinMoreIT.java,323,,"            String query = ""SELECT lhs.col0, lhs.col1, lhs.col2, lhs.col3, rhs.col0, rhs.col1, rhs.col2, rhs.col3 FROM "" "
213493,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinMoreIT.java,349,,"            rs = conn.createStatement().executeQuery(""EXPLAIN "" + query);"
213494,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinMoreIT.java,563,,"                    + ""code varchar(255) PRIMARY KEY, name varchar(255))"");"
213495,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinMoreIT.java,686,,"            stmt.setString(1, ""5SEC"");"
213496,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinMoreIT.java,873,,"            rs = conn.createStatement().executeQuery(""SELECT  OBJ.ACCOUNT_ID, OBJ.BUCKET_ID, OBJ.OBJECT_ID, OBJ.OBJECT_VERSION, OBJ.LOC """
213497,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinMoreIT.java,875,,"                    + ""       FROM test2961 GROUP BY ACCOUNT_ID, BUCKET_ID, OBJECT_ID) AS X """
213498,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinMoreIT.java,878,,"            assertEquals(""2222"", rs.getString(4));"
213499,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinMoreIT.java,956,,"                    ""(select bid,code from ""  + tableName2 + "" where code > 10 limit 3) b on a.aid = b.bid ""+"
213500,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinMoreIT.java,956,,"                    ""(select bid,code from ""  + tableName2 + "" where code > 10 limit 3) b on a.aid = b.bid ""+"
213501,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinNoIndexIT.java,62,,"                ""CLIENT PARALLEL 1-WAY FULL SCAN OVER "" + JOIN_ORDER_TABLE_FULL_NAME + ""\n"" +"
213502,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinNoIndexIT.java,64,,"                ""CLIENT MERGE SORT\n"" +"
213503,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinNoIndexIT.java,65,,"                ""    PARALLEL LEFT-JOIN TABLE 0\n"" +"
213504,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinNoIndexIT.java,66,,"                ""        CLIENT PARALLEL 1-WAY FULL SCAN OVER "" + JOIN_ITEM_TABLE_FULL_NAME,"
213505,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinNoIndexIT.java,87,,"                ""    SERVER FILTER BY FIRST KEY ONLY\n"" +"
213506,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/HashJoinNoIndexIT.java,147,,"                ""    PARALLEL INNER-JOIN TABLE 0\n"" +"
213507,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinGlobalIndexIT.java,62,,"                ""        SERVER FILTER BY FIRST KEY ONLY\n"" + "
213508,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinGlobalIndexIT.java,64,,"                ""    CLIENT MERGE SORT\n"" +"
213509,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,62,,"        String query = ""SELECT /*+ USE_SORT_MERGE_JOIN*/ item.\""item_id\"", item.name, supp.\""supplier_id\"", supp.name FROM "" + tableName1 + "" item JOIN "" + tableName2 + "" supp ON item.\""supplier_id\"" = supp.\""supplier_id\"" ORDER BY \""item_id\"""";"
213510,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,67,,"            assertEquals(rs.getString(1), ""0000000001"");"
213511,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,72,,"            assertEquals(rs.getString(1), ""0000000002"");"
213512,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,77,,"            assertEquals(rs.getString(1), ""0000000003"");"
213513,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,82,,"            assertEquals(rs.getString(1), ""0000000004"");"
213514,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,87,,"            assertEquals(rs.getString(1), ""0000000005"");"
213515,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,92,,"            assertEquals(rs.getString(1), ""0000000006"");"
213516,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,109,,"        String query = ""SELECT /*+ USE_SORT_MERGE_JOIN*/ item.\""item_id\"", item.name, supp.\""supplier_id\"", supp.name, next value for "" + seqName + "" FROM "" + tableName1 + "" item INNER JOIN "" + tableName2 + "" supp ON item.\""supplier_id\"" = supp.\""supplier_id\"" ORDER BY \""item_id\"""";"
213517,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,109,,"        String query = ""SELECT /*+ USE_SORT_MERGE_JOIN*/ item.\""item_id\"", item.name, supp.\""supplier_id\"", supp.name, next value for "" + seqName + "" FROM "" + tableName1 + "" item INNER JOIN "" + tableName2 + "" supp ON item.\""supplier_id\"" = supp.\""supplier_id\"" ORDER BY \""item_id\"""";"
213518,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,163,,"        query[0] = ""SELECT /*+ USE_SORT_MERGE_JOIN*/ item.\""item_id\"", item.name, supp.\""supplier_id\"", supp.name, next value for "" + seqName + "" FROM "" + tableName1 + "" item LEFT JOIN "" + tableName2 + "" supp ON item.\""supplier_id\"" = supp.\""supplier_id\"" ORDER BY \""item_id\"""";"
213519,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,201,,"                assertEquals(rs.getString(1), ""invalid001"");"
213520,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,202,,"                assertEquals(rs.getString(2), ""INVALID-1"");"
213521,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,455,,"        query[0] = ""SELECT /*+ USE_SORT_MERGE_JOIN*/ \""order_id\"", c.name, i.name iname, quantity, o.\""DATE\"" FROM "" + tableName4 + "" o JOIN """
213522,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,475,,"                assertEquals(rs.getString(1), ""000000000000001"");"
213523,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,485,,"                assertEquals(rs.getString(1), ""000000000000002"");"
213524,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,491,,"                assertEquals(rs.getString(1), ""000000000000003"");"
213525,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,497,,"                assertEquals(rs.getString(1), ""000000000000004"");"
213526,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,503,,"                assertEquals(rs.getString(1), ""000000000000005"");"
213527,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,522,,"        String query1 = ""SELECT /*+ USE_SORT_MERGE_JOIN*/ i.name, sum(quantity) FROM "" + tableName4 + "" o LEFT JOIN "" "
213528,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,549,,"            assertEquals(rs.getString(""iid""), ""0000000006"");"
213529,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,599,,"        String query1 = ""SELECT /*+ USE_SORT_MERGE_JOIN*/ i.name, sum(quantity) FROM "" + tableName4 + "" o RIGHT JOIN "" "
213530,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,667,,"        String query1 = ""SELECT /*+ USE_SORT_MERGE_JOIN*/ \""order_id\"", i.name, s.name, quantity, \""DATE\"" FROM "" + tableName4 + "" o LEFT JOIN """
213531,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,668,,"                + tableName1 + "" i ON o.\""item_id\"" = i.\""item_id\"" RIGHT JOIN """
213532,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,669,,"                + tableName2 + "" s ON i.\""supplier_id\"" = s.\""supplier_id\"" ORDER BY \""order_id\"", s.\""supplier_id\"" DESC"";"
213533,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1091,,"            assertEquals(rs.getString(getDisplayTableName(conn, JOIN_ITEM_TABLE_FULL_NAME) + "".item_id""), ""0000000001"");"
213534,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1092,,"            assertEquals(rs.getString(getDisplayTableName(conn, JOIN_ITEM_TABLE_FULL_NAME) + "".NAME""), ""T1"");"
213535,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1093,,"            assertEquals(rs.getInt(getDisplayTableName(conn, JOIN_ITEM_TABLE_FULL_NAME) + "".PRICE""), 100);"
213536,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1094,,"            assertEquals(rs.getInt(getDisplayTableName(conn, JOIN_ITEM_TABLE_FULL_NAME) + "".DISCOUNT1""), 5);"
213537,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1095,,"            assertEquals(rs.getInt(getDisplayTableName(conn, JOIN_ITEM_TABLE_FULL_NAME) + "".DISCOUNT2""), 10);"
213538,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1096,,"            assertEquals(rs.getString(getDisplayTableName(conn, JOIN_ITEM_TABLE_FULL_NAME) + "".supplier_id""), ""0000000001"");"
213539,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1097,,"            assertEquals(rs.getString(getDisplayTableName(conn, JOIN_ITEM_TABLE_FULL_NAME) + "".DESCRIPTION""), ""Item T1"");"
213540,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1097,,"            assertEquals(rs.getString(getDisplayTableName(conn, JOIN_ITEM_TABLE_FULL_NAME) + "".DESCRIPTION""), ""Item T1"");"
213541,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1098,,"            assertEquals(rs.getString(""SUPP.supplier_id""), ""0000000001"");"
213542,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1099,,"            assertEquals(rs.getString(""supp.name""), ""S1"");"
213543,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1100,,"            assertEquals(rs.getString(""supp.phone""), ""888-888-1111"");"
213544,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1100,,"            assertEquals(rs.getString(""supp.phone""), ""888-888-1111"");"
213545,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1101,,"            assertEquals(rs.getString(""supp.address""), ""101 YYY Street"");"
213546,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1101,,"            assertEquals(rs.getString(""supp.address""), ""101 YYY Street"");"
213547,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1102,,"            assertEquals(rs.getString(""supp.loc_id""), ""10001"");            "
213548,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1102,,"            assertEquals(rs.getString(""supp.loc_id""), ""10001"");            "
213549,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1126,,"            assertEquals(rs.getString(""supp.phone""), ""888-888-2222"");"
213550,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1127,,"            assertEquals(rs.getString(""supp.address""), ""202 YYY Street"");"
213551,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1128,,"            assertEquals(rs.getString(""supp.loc_id""), ""10002"");            "
213552,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1162,,"            assertEquals(rs.getString(getDisplayTableName(conn, JOIN_ITEM_TABLE_FULL_NAME) + "".DESCRIPTION""), ""Item T6"");"
213553,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1165,,"            assertEquals(rs.getString(""supp.phone""), ""888-888-6666"");"
213554,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1166,,"            assertEquals(rs.getString(""supp.address""), ""606 YYY Street"");"
213555,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1167,,"            assertEquals(rs.getString(""supp.loc_id""), ""10006"");            "
213556,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1378,,"        String query = ""SELECT /*+ USE_SORT_MERGE_JOIN*/ \""order_id\"", i.name, i.price, discount2, quantity FROM "" + tableName4 + "" o INNER JOIN "" "
213557,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1410,,"            assertEquals(rs.getTimestamp(3), new Timestamp(format.parse(""2013-11-22 14:22:56"").getTime()));"
213558,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1414,,"            assertEquals(rs.getTimestamp(3), new Timestamp(format.parse(""2013-11-25 10:06:29"").getTime()));"
213559,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1676,,"            assertEquals(rs.getString(1), ""ORDER_SUM"");"
213560,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1816,,"            assertEquals(rs.getString(""c.name""), ""C3"");"
213561,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1817,,"            assertEquals(rs.getString(""c.phone""), ""999-999-3333"");"
213562,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1818,,"            assertEquals(rs.getString(""c.address""), ""303 XXX Street"");"
213563,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1819,,"            assertNull(rs.getString(""c.loc_id""));"
213564,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1820,,"            assertEquals(rs.getDate(""c.date""), new Date(format.parse(""2013-11-25 10:06:29"").getTime()));"
213565,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1842,,"            assertEquals(rs.getString(""c.phone""), ""999-999-4444"");"
213566,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1843,,"            assertEquals(rs.getString(""c.address""), ""404 XXX Street"");"
213567,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,1844,,"            assertEquals(rs.getString(""c.loc_id""), ""10004"");"
213568,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,2027,,"            assertEquals(rs.getString(""o.iid""), ""0000000006"");"
213569,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,2044,,"            assertEquals(rs.getString(""i.iid""), ""0000000006"");"
213570,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,2045,,"            assertEquals(rs.getInt(""o.q""), 6000);"
213571,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinIT.java,2219,,"        String query1 = ""SELECT /*+ USE_SORT_MERGE_JOIN*/ \""order_id\"", i.name, s.name, s.address, quantity FROM "" + tableName2 + "" s LEFT JOIN "" "
213572,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinLocalIndexIT.java,60,,"                ""    CLIENT PARALLEL 1-WAY RANGE SCAN OVER "" +JOIN_SUPPLIER_TABLE_FULL_NAME + "" [1]\n"" +"
213573,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinLocalIndexIT.java,60,,"                ""    CLIENT PARALLEL 1-WAY RANGE SCAN OVER "" +JOIN_SUPPLIER_TABLE_FULL_NAME + "" [1]\n"" +"
213574,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinLocalIndexIT.java,61,,"                ""        SERVER FILTER BY FIRST KEY ONLY\n"" + "
213575,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinLocalIndexIT.java,63,,"                ""    CLIENT MERGE SORT\n"" +"
213576,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SortMergeJoinNoIndexIT.java,57,,"                ""    CLIENT PARALLEL 1-WAY FULL SCAN OVER "" + JOIN_SUPPLIER_TABLE_FULL_NAME + ""\n"" +"
213577,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,57,,"                ""CLIENT PARALLEL 1-WAY FULL SCAN OVER "" + JOIN_ITEM_TABLE_FULL_NAME + ""\n"" +"
213578,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,59,,"                ""CLIENT MERGE SORT\n"" +"
213579,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,61,,"                ""        CLIENT PARALLEL 1-WAY FULL SCAN OVER "" + JOIN_SUPPLIER_TABLE_FULL_NAME + ""\n"" +"
213580,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,63,,"                ""        CLIENT PARALLEL 1-WAY RANGE SCAN OVER "" + JOIN_ORDER_TABLE_FULL_NAME + "" \\['000000000000001'\\] - \\[\\*\\]\n"" +"
213581,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,65,,"                ""        CLIENT MERGE SORT\n"" +"
213582,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,71,,"                ""    PARALLEL LEFT-JOIN TABLE 0\n"" +"
213583,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,75,,"                ""            SERVER AGGREGATE INTO DISTINCT ROWS BY [\""item_id\""]\n"" +"
213584,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,76,,"                ""        CLIENT MERGE SORT"","
213585,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,85,,"                ""                CLIENT PARALLEL 1-WAY FULL SCAN OVER "" + JOIN_ORDER_TABLE_FULL_NAME + ""\n"" +"
213586,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,86,,"                ""                    SERVER AGGREGATE INTO DISTINCT ROWS BY \\[\""item_id\""\\]\n"" +"
213587,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,87,,"                ""                CLIENT MERGE SORT\n"" +"
213588,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,124,,"                ""CREATE INDEX \""idx_customer\"" ON "" + JOIN_CUSTOMER_TABLE_FULL_NAME + "" (name)"","
213589,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,128,,"                ""CLIENT PARALLEL 1-WAY FULL SCAN OVER "" + JOIN_SCHEMA + "".idx_item\n"" +"
213590,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,131,,"                ""            SERVER FILTER BY FIRST KEY ONLY\n"" + "
213591,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,138,,"                ""    SERVER FILTER BY FIRST KEY ONLY\n"" + "
213592,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,153,,"                ""            SERVER AGGREGATE INTO ORDERED DISTINCT ROWS BY \\[\"".+.0:NAME\"", \"".+.:item_id\""\\]\n"" +"
213593,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,196,,"                ""CLIENT PARALLEL 1-WAY RANGE SCAN OVER "" + JOIN_ITEM_TABLE_FULL_NAME + "" \\[1\\]\n"" +"
213594,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,196,,"                ""CLIENT PARALLEL 1-WAY RANGE SCAN OVER "" + JOIN_ITEM_TABLE_FULL_NAME + "" \\[1\\]\n"" +"
213595,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,281,,"            String query = ""SELECT \""item_id\"", name FROM "" + tableName1 + "" WHERE \""item_id\"" >= ALL (SELECT \""item_id\"" FROM "" + tableName4 + "") ORDER BY name"";"
213596,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,286,,"            assertEquals(rs.getString(2), ""INVALID-1"");"
213597,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,288,,"            assertEquals(rs.getString(1), ""0000000006"");"
213598,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,297,,"            assertEquals(rs.getString(1), ""0000000001"");"
213599,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,300,,"            assertEquals(rs.getString(1), ""0000000002"");"
213600,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,303,,"            assertEquals(rs.getString(1), ""0000000003"");"
213601,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,306,,"            assertEquals(rs.getString(1), ""0000000004"");"
213602,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,309,,"            assertEquals(rs.getString(1), ""0000000005"");"
213603,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,335,,"            query = ""SELECT * FROM "" + tableName5 + "" WHERE (item_id, item_name) != ALL (SELECT \""item_id\"", name FROM "" + tableName1 + "")"";"
213604,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,441,,"            rs = conn.createStatement().executeQuery(""EXPLAIN "" + query);"
213605,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,543,,"            assertEquals(rs.getString(1), ""000000000000001"");"
213606,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,545,,"            assertEquals(rs.getString(1), ""000000000000002"");"
213607,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,547,,"            assertEquals(rs.getString(1), ""000000000000003"");"
213608,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,549,,"            assertEquals(rs.getString(1), ""000000000000004"");"
213609,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,551,,"            assertEquals(rs.getString(1), ""000000000000005"");"
213610,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,568,,"            String query = ""SELECT \""order_id\"", name FROM "" + tableName4 + "
213611,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,569,,"                    "" o JOIN "" + tableName1 + "
213612,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,571,,"                    tableName4 + "" q WHERE o.\""item_id\"" = q.\""item_id\"")"";"
213613,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,629,,"            query = ""SELECT \""order_id\"" FROM "" + tableName4 + "
213614,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,872,,"            conn.createStatement().execute(""UPSERT INTO "" + tempTable + ""(item_id, name)"""
213615,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryIT.java,872,,"            conn.createStatement().execute(""UPSERT INTO "" + tempTable + ""(item_id, name)"""
213616,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryUsingSortMergeJoinIT.java,64,,"                ""        CLIENT PARALLEL 1-WAY FULL SCAN OVER "" + JOIN_ITEM_TABLE_FULL_NAME + ""\n"" +"
213617,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryUsingSortMergeJoinIT.java,66,,"                ""        CLIENT MERGE SORT\n"" +"
213618,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryUsingSortMergeJoinIT.java,67,,"                ""    AND\n"" +"
213619,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryUsingSortMergeJoinIT.java,71,,"                ""    CLIENT PARALLEL 1-WAY RANGE SCAN OVER "" + JOIN_ORDER_TABLE_FULL_NAME + "" ['000000000000001'] - [*]\n"" +"
213620,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryUsingSortMergeJoinIT.java,73,,"                ""    CLIENT MERGE SORT\n"" +"
213621,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryUsingSortMergeJoinIT.java,90,,"                ""    CLIENT PARALLEL 1-WAY FULL SCAN OVER "" + JOIN_ITEM_TABLE_FULL_NAME + ""\n"" +"
213622,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryUsingSortMergeJoinIT.java,94,,"                ""            CLIENT PARALLEL 1-WAY FULL SCAN OVER "" + JOIN_ORDER_TABLE_FULL_NAME + ""\n"" +"
213623,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryUsingSortMergeJoinIT.java,95,,"                ""                SERVER AGGREGATE INTO DISTINCT ROWS BY \\[\""item_id\""\\]\n"" +"
213624,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryUsingSortMergeJoinIT.java,96,,"                ""            CLIENT MERGE SORT\n"" +"
213625,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryUsingSortMergeJoinIT.java,117,,"                ""CREATE INDEX \""idx_customer\"" ON "" + JOIN_CUSTOMER_TABLE_FULL_NAME + "" (name)"","
213626,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryUsingSortMergeJoinIT.java,123,,"                ""        CLIENT PARALLEL 1-WAY FULL SCAN OVER "" + JOIN_SCHEMA + "".idx_item\n"" +"
213627,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryUsingSortMergeJoinIT.java,128,,"                ""            SERVER FILTER BY FIRST KEY ONLY\n"" +"
213628,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryUsingSortMergeJoinIT.java,154,,"                ""        SERVER FILTER BY FIRST KEY ONLY\n"" +"
213629,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryUsingSortMergeJoinIT.java,209,,"                ""        CLIENT PARALLEL 1-WAY RANGE SCAN OVER "" + JOIN_ITEM_TABLE_FULL_NAME + "" \\[1\\]\n"" +"
213630,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryUsingSortMergeJoinIT.java,267,,"            assertEquals(rs.getString(1), ""0000000001"");"
213631,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryUsingSortMergeJoinIT.java,273,,"            assertEquals(rs.getString(1), ""0000000003"");"
213632,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryUsingSortMergeJoinIT.java,276,,"            assertEquals(rs.getString(1), ""0000000006"");"
213633,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryUsingSortMergeJoinIT.java,288,,"            assertEquals(rs.getString(1), ""0000000004"");"
213634,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryUsingSortMergeJoinIT.java,311,,"            rs = conn.createStatement().executeQuery(""EXPLAIN "" + query);"
213635,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryUsingSortMergeJoinIT.java,413,,"            String query = ""SELECT /*+ USE_SORT_MERGE_JOIN*/ \""order_id\"", name FROM "" + tableName4 + "" o JOIN "" + tableName1 + "" i ON o.\""item_id\"" = i.\""item_id\"" WHERE quantity = (SELECT max(quantity) FROM "" + tableName4 + "" q WHERE o.\""item_id\"" = q.\""item_id\"")"";"
213636,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryUsingSortMergeJoinIT.java,413,,"            String query = ""SELECT /*+ USE_SORT_MERGE_JOIN*/ \""order_id\"", name FROM "" + tableName4 + "" o JOIN "" + tableName1 + "" i ON o.\""item_id\"" = i.\""item_id\"" WHERE quantity = (SELECT max(quantity) FROM "" + tableName4 + "" q WHERE o.\""item_id\"" = q.\""item_id\"")"";"
213637,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryUsingSortMergeJoinIT.java,417,,"            assertEquals(rs.getString(1), ""000000000000001"");"
213638,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryUsingSortMergeJoinIT.java,420,,"            assertEquals(rs.getString(1), ""000000000000003"");"
213639,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryUsingSortMergeJoinIT.java,423,,"            assertEquals(rs.getString(1), ""000000000000005"");"
213640,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryUsingSortMergeJoinIT.java,426,,"            assertEquals(rs.getString(1), ""000000000000004"");"
213641,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryUsingSortMergeJoinIT.java,445,,"            query = ""SELECT /*+ USE_SORT_MERGE_JOIN*/ \""order_id\"" FROM "" + tableName4 + "" o WHERE quantity = (SELECT quantity FROM "" + tableName4 + "" WHERE o.\""item_id\"" = \""item_id\"" AND \""order_id\"" != '000000000000004')"";"
213642,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/join/SubqueryUsingSortMergeJoinIT.java,455,,"            assertEquals(rs.getString(1), ""000000000000002"");"
213643,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/salted/BaseSaltedTableIT.java,61,,"            stmt.setString(3, ""123"");"
213644,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/salted/BaseSaltedTableIT.java,62,,"            stmt.setString(4, ""abc"");"
213645,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/salted/BaseSaltedTableIT.java,69,,"            stmt.setString(3, ""456"");"
213646,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/salted/BaseSaltedTableIT.java,92,,"            stmt.setString(4, ""def"");"
213647,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/salted/BaseSaltedTableIT.java,105,,"            stmt.setString(4, ""ghi"");"
213648,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/salted/BaseSaltedTableIT.java,113,,"            stmt.setString(4, ""jkl"");"
213649,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/salted/BaseSaltedTableIT.java,132,,"                    Lists.newArrayList(""A_INTEGER"", ""A_STRING"", ""A_ID"", ""B_STRING"", ""B_INTEGER""))"
213650,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/salted/BaseSaltedTableIT.java,132,,"                    Lists.newArrayList(""A_INTEGER"", ""A_STRING"", ""A_ID"", ""B_STRING"", ""B_INTEGER""))"
213651,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/salted/BaseSaltedTableIT.java,132,,"                    Lists.newArrayList(""A_INTEGER"", ""A_STRING"", ""A_ID"", ""B_STRING"", ""B_INTEGER""))"
213652,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/salted/BaseSaltedTableIT.java,132,,"                    Lists.newArrayList(""A_INTEGER"", ""A_STRING"", ""A_ID"", ""B_STRING"", ""B_INTEGER""))"
213653,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/salted/BaseSaltedTableIT.java,132,,"                    Lists.newArrayList(""A_INTEGER"", ""A_STRING"", ""A_ID"", ""B_STRING"", ""B_INTEGER""))"
213654,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/salted/SaltedTableUpsertSelectIT.java,48,,"            String ddl = ""CREATE TABLE IF NOT EXISTS "" + source +"
213655,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/salted/SaltedTableUpsertSelectIT.java,53,,"                    "" (pk VARCHAR NOT NULL PRIMARY KEY, col INTEGER) SALT_BUCKETS=4"";"
213656,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/salted/SaltedTableUpsertSelectIT.java,56,,"            String query = ""UPSERT INTO "" + source + ""(pk, col) VALUES(?,?)"";"
213657,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/salted/SaltedTableUpsertSelectIT.java,205,,"                    "" (pk1 varchar NULL, pk2 varchar NULL, pk3 integer NOT NULL, col1 INTEGER"" + "
213658,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/end2end/salted/SaltedTableUpsertSelectIT.java,206,,"                    "" CONSTRAINT pk PRIMARY KEY (pk1, pk2, pk3)) SALT_BUCKETS=4"";"
213659,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/execute/PartialCommitIT.java,115,,"	    upsertToFail = ""upsert into "" + bFailureTable + "" values ('"" + Bytes.toString(ROW_TO_FAIL_UPSERT_BYTES) + ""', 'boom!')"";"
213660,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/execute/PartialCommitIT.java,154,,"        testPartialCommit(singletonList(""upsert into "" + aSuccessTable + "" values ('testNoFailure', 'a')""), new int[0], false, singletonList(""select count(*) from "" + aSuccessTable + "" where k='testNoFailure'""),"
213661,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/execute/PartialCommitIT.java,165,,"                                                    ""select count(*) from "" + bFailureTable + "" where k = '"" + Bytes.toString(ROW_TO_FAIL_UPSERT_BYTES) + ""'""),"
213662,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/iterate/ChunkedResultIteratorIT.java,55,,"        conn.createStatement().execute(""UPSERT INTO "" + tableName + "" VALUES (1, 'A')"");"
213663,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/iterate/RoundRobinResultIteratorIT.java,128,,"        PreparedStatement stmt = conn.prepareStatement(""SELECT K, V FROM "" + tableName);"
213664,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/iterate/RoundRobinResultIteratorIT.java,153,,"        stmt.setString(1, ""key1""); // will return only 1 row"
213665,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/jdbc/SecureUserConnectionsIT.java,164,,"            String principal = ""user"" + i;"
213666,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/monitoring/PhoenixLoggingMetricsIT.java,80,,"        String upsert = ""UPSERT INTO "" + tableName3 + "" VALUES (42)"";"
213667,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/monitoring/PhoenixLoggingMetricsIT.java,83,,"        String select = ""SELECT * FROM "" + tableName3;"
213668,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/monitoring/PhoenixLoggingMetricsIT.java,156,,"        assertTrue(""Mutation write metrics are not logged for "" + tableName2,"
213669,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/monitoring/PhoenixMetricsIT.java,177,,"        String query = ""SELECT * FROM "" + tableName;"
213670,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/monitoring/PhoenixMetricsIT.java,394,,"        String ddl = ""CREATE TABLE "" + tableName + "" (K VARCHAR NOT NULL PRIMARY KEY, V VARCHAR)"" + "" SALT_BUCKETS = 6"";"
213671,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/monitoring/PhoenixMetricsIT.java,394,,"        String ddl = ""CREATE TABLE "" + tableName + "" (K VARCHAR NOT NULL PRIMARY KEY, V VARCHAR)"" + "" SALT_BUCKETS = 6"";"
213672,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/monitoring/PhoenixMetricsIT.java,447,,"        String ddl = ""CREATE TABLE "" + tableName + "" (K VARCHAR NOT NULL PRIMARY KEY, V VARCHAR)"" + "" SALT_BUCKETS = """
213673,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/monitoring/PhoenixMetricsIT.java,534,,"        String upsertSelect = ""UPSERT INTO "" + tableName2 + "" SELECT * FROM "" + tableName1;"
213674,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/monitoring/PhoenixMetricsIT.java,603,,"        String upsert = ""UPSERT INTO "" + tableName + "" VALUES (?, ?)"";"
213675,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/monitoring/PhoenixMetricsIT.java,706,,"        ddl = ""CREATE INDEX "" + indexName + "" ON "" + tableName2 + "" (V)"";"
213676,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/monitoring/PhoenixMetricsIT.java,706,,"        ddl = ""CREATE INDEX "" + indexName + "" ON "" + tableName2 + "" (V)"";"
213677,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/monitoring/PhoenixMetricsIT.java,1017,,"        String zkQuorum = ""localhost:"" + getUtility().getZkCluster().getClientPort();"
213678,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/monitoring/PhoenixTableLevelMetricsIT.java,614,,"            assertNotNull(""Failed to get a connection!"", conn);"
213679,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/rpc/UpdateCacheIT.java,76,,"            ""create table "" + fullTableName + TestUtil.TEST_TABLE_SCHEMA);"
213680,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/rpc/UpdateCacheIT.java,146,,"            conn.createStatement().execute(""CREATE TABLE "" + fullTableName + TestUtil.TEST_TABLE_SCHEMA + "" UPDATE_CACHE_FREQUENCY=always"");"
213681,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/schema/stats/BaseStatsCollectorIT.java,255,,"                ""CREATE TABLE "" + fullTableName +"" ( k CHAR(1) PRIMARY KEY )""  + tableDDLOptions);"
213682,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/schema/stats/BaseStatsCollectorIT.java,257,,"        ExplainPlan plan = conn.prepareStatement(""SELECT * FROM "" + fullTableName)"
213683,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/schema/stats/BaseStatsCollectorIT.java,263,,"        assertEquals(""PARALLEL 1-WAY"", planAttributes.getIteratorTypeAndScanSize());"
213684,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/schema/stats/BaseStatsCollectorIT.java,264,,"        assertEquals(""FULL SCAN "", planAttributes.getExplainScanType());"
213685,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/schema/stats/BaseStatsCollectorIT.java,276,,"        conn.createStatement().execute(""UPSERT INTO "" + fullTableName + ""(k,v1) VALUES('a','123456789')"");"
213686,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/schema/stats/BaseStatsCollectorIT.java,352,,"        s = new String[] { ""xyz"", ""def"", ""ghi"", ""jkll"", null, null, ""xxx"" };"
213687,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/schema/stats/BaseStatsCollectorIT.java,352,,"        s = new String[] { ""xyz"", ""def"", ""ghi"", ""jkll"", null, null, ""xxx"" };"
213688,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/schema/stats/BaseStatsCollectorIT.java,352,,"        s = new String[] { ""xyz"", ""def"", ""ghi"", ""jkll"", null, null, ""xxx"" };"
213689,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/schema/stats/BaseStatsCollectorIT.java,352,,"        s = new String[] { ""xyz"", ""def"", ""ghi"", ""jkll"", null, null, ""xxx"" };"
213690,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/schema/stats/BaseStatsCollectorIT.java,352,,"        s = new String[] { ""xyz"", ""def"", ""ghi"", ""jkll"", null, null, ""xxx"" };"
213691,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/schema/stats/BaseStatsCollectorIT.java,353,,"        array = conn.createArrayOf(""VARCHAR"", s);"
213692,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/schema/stats/BaseStatsCollectorIT.java,355,,"        s = new String[] { ""zya"", ""def"", ""ghi"", ""jkll"", null, null, null, ""xxx"" };"
213693,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/schema/stats/BaseStatsCollectorIT.java,376,,"        conn.createStatement().execute(""upsert into "" + fullTableName + "" values ('abc',1,3)"");"
213694,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/schema/stats/TxStatsCollectorIT.java,38,,"                                { false, ""TEPHRA"", true },"
213695,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/trace/PhoenixTracingEndToEndIT.java,148,,"        LOGGER.debug(""Doing dummy the writes to the tracked table"");"
213696,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/trace/PhoenixTracingEndToEndIT.java,149,,"        String insert = ""UPSERT INTO "" + enabledForLoggingTable + "" VALUES (?, ?)"";"
213697,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/trace/PhoenixTracingEndToEndIT.java,149,,"        String insert = ""UPSERT INTO "" + enabledForLoggingTable + "" VALUES (?, ?)"";"
213698,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/trace/PhoenixTracingEndToEndIT.java,151,,"        stmt.setString(1, ""key1"");"
213699,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/trace/PhoenixTracingEndToEndIT.java,157,,"        stmt.setString(1, ""key2"");"
213700,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/tx/FlappingTransactionIT.java,81,,"        String selectSQL = ""SELECT * FROM "" + fullTableName;"
213701,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/tx/FlappingTransactionIT.java,90,,"            String upsert = ""UPSERT INTO "" + fullTableName + ""(varchar_pk, char_pk, int_pk, long_pk, decimal_pk, date_pk) VALUES(?, ?, ?, ?, ?, ?)"";"
213702,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/tx/FlappingTransactionIT.java,105,,"            rs = conn2.createStatement().executeQuery(""SELECT count(*) FROM "" + fullTableName);"
213703,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/tx/FlappingTransactionIT.java,150,,"            rs = conn1.createStatement().executeQuery(""SELECT int_col1 FROM "" + fullTableName + "" WHERE int_col1 = 1"");"
213704,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/tx/FlappingTransactionIT.java,239,,"        stmt.executeUpdate(""upsert into "" + fullTableName + "" values('x', 'a', 'a')"");"
213705,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/tx/FlappingTransactionIT.java,243,,"            rs = newConn.createStatement().executeQuery(""select count(*) from "" + fullTableName);"
213706,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/tx/ParameterizedTransactionIT.java,107,,"                 {false, false, ""TEPHRA"" }, {false, true, ""TEPHRA"" }, {true, false, ""TEPHRA"" }, { true, true, ""TEPHRA"" },"
213707,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/tx/ParameterizedTransactionIT.java,116,,"        String selectSql = ""SELECT * FROM ""+ fullTableName;"
213708,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/tx/ParameterizedTransactionIT.java,118,,"            conn.createStatement().execute(""create table "" + fullTableName + TestUtil.TEST_TABLE_SCHEMA + tableDDLOptions + (tableDDLOptions.length() > 0 ? "","" : """") + ""TRANSACTIONAL=true"");"
213709,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/tx/ParameterizedTransactionIT.java,118,,"            conn.createStatement().execute(""create table "" + fullTableName + TestUtil.TEST_TABLE_SCHEMA + tableDDLOptions + (tableDDLOptions.length() > 0 ? "","" : """") + ""TRANSACTIONAL=true"");"
213710,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/tx/ParameterizedTransactionIT.java,123,,"            String upsert = ""UPSERT INTO "" + fullTableName + ""(varchar_pk, char_pk, int_pk, long_pk, decimal_pk, date_pk) VALUES(?, ?, ?, ?, ?, ?)"";"
213711,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/tx/ParameterizedTransactionIT.java,276,,"        conn.createStatement().execute(""CREATE TABLE "" + nonTxTableName + ""(k INTEGER PRIMARY KEY, v VARCHAR)"" + tableDDLOptionsWithoutProvider);"
213712,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/tx/TransactionIT.java,107,,"                    ""CREATE TABLE "" + tableName + "" (k VARCHAR NOT NULL PRIMARY KEY) TRANSACTIONAL=true,TRANSACTION_PROVIDER='"" + txProvider + ""'"");"
213713,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/tx/TransactionIT.java,108,,"            conn.createStatement().execute(""UPSERT INTO "" + tableName + "" VALUES('a')"");"
213714,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/tx/TransactionIT.java,108,,"            conn.createStatement().execute(""UPSERT INTO "" + tableName + "" VALUES('a')"");"
213715,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/tx/TransactionIT.java,114,,"            conn.createStatement().executeQuery(""SELECT * FROM "" + tableName).next();"
213716,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/tx/TransactionIT.java,303,,"                stmt.execute(""ALTER TABLE "" + tableName + "" SET TRANSACTIONAL=true"");"
213717,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/tx/TxCheckpointIT.java,93,,"                { false, false, false, ""TEPHRA"" }, { false, false, true, ""TEPHRA"" }, { false, true, false, ""TEPHRA"" }, { false, true, true, ""TEPHRA"" },"
213718,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/tx/TxCheckpointIT.java,101,,"        String tableName = ""TBL_"" + generateUniqueName();"
213719,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/tx/TxCheckpointIT.java,102,,"        String indexName = ""IDX_"" + generateUniqueName();"
213720,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/tx/TxCheckpointIT.java,112,,"        conn.createStatement().execute(""CREATE TABLE "" + fullTableName + ""(pk INTEGER PRIMARY KEY, val INTEGER)""+tableDDLOptions);"
213721,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/tx/TxCheckpointIT.java,113,,"        conn.createStatement().execute(""CREATE ""+(localIndex? ""LOCAL "" : """")+""INDEX "" + indexName + "" ON "" + fullTableName + ""(val)"");"
213722,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/tx/TxCheckpointIT.java,113,,"        conn.createStatement().execute(""CREATE ""+(localIndex? ""LOCAL "" : """")+""INDEX "" + indexName + "" ON "" + fullTableName + ""(val)"");"
213723,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/tx/TxCheckpointIT.java,113,,"        conn.createStatement().execute(""CREATE ""+(localIndex? ""LOCAL "" : """")+""INDEX "" + indexName + "" ON "" + fullTableName + ""(val)"");"
213724,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/tx/TxCheckpointIT.java,113,,"        conn.createStatement().execute(""CREATE ""+(localIndex? ""LOCAL "" : """")+""INDEX "" + indexName + "" ON "" + fullTableName + ""(val)"");"
213725,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/tx/TxCheckpointIT.java,150,,"            stmt.executeUpdate(""upsert into "" + fullTableName + "" values('x1', 'y1', 'a1')"");"
213726,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/tx/TxCheckpointIT.java,154,,"            ResultSet rs = stmt.executeQuery(""select k, v1, v2 from "" + fullTableName + "" ORDER BY k"");"
213727,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/tx/TxCheckpointIT.java,154,,"            ResultSet rs = stmt.executeQuery(""select k, v1, v2 from "" + fullTableName + "" ORDER BY k"");"
213728,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/tx/TxCheckpointIT.java,348,,"	        conn.createStatement().execute(""delete from "" + fullTableName + ""1 where id1=fk1b AND fk1b=id1"");"
213729,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/tx/TxCheckpointIT.java,352,,"	        rs = conn.createStatement().executeQuery(""select /*+ NO_INDEX */ id1 from "" + fullTableName + ""1"");"
213730,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/tx/TxCheckpointIT.java,359,,"	        rs = conn.createStatement().executeQuery(""select /*+ INDEX(DEMO IDX) */ id1 from "" + fullTableName + ""1"");"
213731,./TargetProjects/phoenix/phoenix-core/src/it/java/org/apache/phoenix/util/IndexScrutinyIT.java,40,,"            conn.createStatement().execute(""UPSERT INTO "" + fullTableName + "" VALUES('b','bb')"");"
213732,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/hadoop/hbase/regionserver/KeyValueSkipListSet.java,59,,"    throw new UnsupportedOperationException(""Not implemented"");"
213733,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/compile/RVCOffsetCompiler.java,141,,"                    ""RVC Offset must specify the tables PKs."");"
213734,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/compile/RVCOffsetCompiler.java,167,,"            LOGGER.error(""Unexpected error while compiling RVC Offset, got null expression."",e);"
213735,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/compile/RVCOffsetCompiler.java,169,,"                    ""RVC Offset unexpected failure."");"
213736,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/coprocessor/PhoenixAccessController.java,199,,"                requireAccess(""Create"" + tableType, parentPhysicalTableName, Action.READ, Action.EXEC);"
213737,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/exception/PhoenixParserException.java,64,,"            msg = ""Missing \""""+ tokenName +""\"" at ""+ getTokenLocation(mte);"
213738,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/exception/SQLExceptionCode.java,217,,"    NOT_NULLABLE_COLUMN_IN_ROW_KEY(1006, ""42J04"", ""Only nullable columns may be added to primary key.""),"
213739,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/exception/SQLExceptionCode.java,387,,"    PARSER_ERROR(601, ""42P00"", ""Syntax error."", Factory.SYNTAX_ERROR),"
213740,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/exception/SQLExceptionCode.java,387,,"    PARSER_ERROR(601, ""42P00"", ""Syntax error."", Factory.SYNTAX_ERROR),"
213741,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/execute/ClientAggregatePlan.java,239,,"            planSteps.add(""CLIENT AGGREGATE INTO DISTINCT ROWS BY "" + groupBy.getExpressions().toString());"
213742,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/jdbc/PhoenixStatement.java,654,,"        @SuppressWarnings(""unchecked"")"
213743,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/mapreduce/MultiHfileOutputFormat.java,450,,"                confValMap.put(URLDecoder.decode(familySplit[0], ""UTF-8"").getBytes(),"
213744,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/mapreduce/OrphanViewTool.java,86,,"    private static final String viewQuery = ""SELECT "" +"
213745,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/mapreduce/OrphanViewTool.java,90,,"            "" FROM "" + SYSTEM_CATALOG_NAME +"
213746,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/mapreduce/OrphanViewTool.java,91,,"            "" WHERE ""+ TABLE_TYPE + "" = '"" + PTableType.VIEW.getSerializedValue() +""' AND NOT "" +"
213747,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/mapreduce/OrphanViewTool.java,91,,"            "" WHERE ""+ TABLE_TYPE + "" = '"" + PTableType.VIEW.getSerializedValue() +""' AND NOT "" +"
213748,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/mapreduce/OrphanViewTool.java,92,,"            VIEW_TYPE + "" = "" + PTable.ViewType.MAPPED.getSerializedValue();"
213749,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/mapreduce/OrphanViewTool.java,208,,"            throw new IllegalStateException(""Specify either "" + OUTPUT_PATH_OPTION.getLongOpt() + "" or """
213750,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/mapreduce/OrphanViewTool.java,434,,"                "" WHERE "" + TENANT_ID + (src.getTenantId() == null ? "" IS NULL"" : "" = '"" + src.getTenantId() + ""'"") + "" AND "" +"
213751,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/mapreduce/OrphanViewTool.java,434,,"                "" WHERE "" + TENANT_ID + (src.getTenantId() == null ? "" IS NULL"" : "" = '"" + src.getTenantId() + ""'"") + "" AND "" +"
213752,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/mapreduce/index/IndexScrutinyTableOutput.java,64,,"            ""    "" + SOURCE_TABLE_COL_NAME + "" VARCHAR NOT NULL,\n"" +"
213753,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/mapreduce/index/IndexScrutinyTableOutput.java,64,,"            ""    "" + SOURCE_TABLE_COL_NAME + "" VARCHAR NOT NULL,\n"" +"
213754,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/mapreduce/index/IndexScrutinyTableOutput.java,74,,"            ""        "" + SOURCE_TABLE_COL_NAME + "",\n"" +"
213755,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/mapreduce/index/IndexScrutinyTableOutput.java,74,,"            ""        "" + SOURCE_TABLE_COL_NAME + "",\n"" +"
213756,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/mapreduce/index/IndexScrutinyTableOutput.java,173,,"        return paramQuery.replaceFirst(""\\?"", ""false"");"
213757,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/mapreduce/index/IndexScrutinyTableOutput.java,197,,"            "" IN "" + QueryUtil.constructParameterizedInClause(getPkCols().size() + 2, 1);"
213758,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/parse/FunctionParseNode.java,215,,"                    child.getDataType(), info.getName() + "" argument "" + (childIndex + 1));"
213759,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/query/ConnectionQueryServicesImpl.java,2577,,"                        .setMessage(""Property: "" + propName)"
213760,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/query/ConnectionQueryServicesImpl.java,3136,,"            metaConnection.createStatement().executeUpdate(""ALTER TABLE "" + tableName + "" ADD "" + (addIfNotExists ? "" IF NOT EXISTS "" : """") + columns );"
213761,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/query/QueryConstants.java,290,,"            ""CREATE TABLE "" + SYSTEM_CATALOG_SCHEMA + "".\"""" + SYSTEM_CATALOG_TABLE + ""\""(\n"" +"
213762,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/query/QueryConstants.java,290,,"            ""CREATE TABLE "" + SYSTEM_CATALOG_SCHEMA + "".\"""" + SYSTEM_CATALOG_TABLE + ""\""(\n"" +"
213763,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/query/QueryConstants.java,290,,"            ""CREATE TABLE "" + SYSTEM_CATALOG_SCHEMA + "".\"""" + SYSTEM_CATALOG_TABLE + ""\""(\n"" +"
213764,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/query/QueryConstants.java,292,,"            TENANT_ID + "" VARCHAR NULL,"" +"
213765,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/query/QueryConstants.java,294,,"            TABLE_NAME + "" VARCHAR NOT NULL,"" +"
213766,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/query/QueryConstants.java,298,,"            TABLE_SEQ_NUM + "" BIGINT,"" +"
213767,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/query/QueryConstants.java,300,,"            PK_NAME + "" VARCHAR,"" +"
213768,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/query/QueryConstants.java,301,,"            COLUMN_COUNT + "" INTEGER,"" +"
213769,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/query/QueryConstants.java,305,,"            IMMUTABLE_ROWS + "" BOOLEAN,\n"" +"
213770,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/query/QueryConstants.java,315,,"            LAST_DDL_TIMESTAMP + "" BIGINT, \n"" +"
213771,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/query/QueryConstants.java,316,,"            CHANGE_DETECTION_ENABLED + "" BOOLEAN, \n"" +"
213772,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/query/QueryConstants.java,317,,"            SCHEMA_VERSION + "" VARCHAR, \n"" +"
213773,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/query/QueryConstants.java,350,,"            STORE_NULLS + "" BOOLEAN,"" +"
213774,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/query/QueryConstants.java,367,,"            ""CONSTRAINT "" + SYSTEM_TABLE_PK_NAME + "" PRIMARY KEY ("" + TENANT_ID + "","""
213775,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/query/QueryConstants.java,367,,"            ""CONSTRAINT "" + SYSTEM_TABLE_PK_NAME + "" PRIMARY KEY ("" + TENANT_ID + "","""
213776,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/query/QueryConstants.java,368,,"            + TABLE_SCHEM + "","" + TABLE_NAME + "","" + COLUMN_NAME + "","" + COLUMN_FAMILY + ""))\n"" +"
213777,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/query/QueryConstants.java,369,,"            HConstants.VERSIONS + ""=%s,\n"" +"
213778,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/query/QueryConstants.java,373,,"            ""',\n"" + TRANSACTIONAL + ""="" + Boolean.FALSE;"
213779,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/query/QueryConstants.java,463,,"            TRANSACTIONAL + ""="" + Boolean.FALSE+ "",\n"" +"
213780,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/schema/MetaDataClient.java,283,,"            ""UPSERT INTO "" + SYSTEM_CATALOG_SCHEMA + "".\"""" + SYSTEM_CATALOG_TABLE + ""\""( "" +"
213781,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/schema/MetaDataClient.java,283,,"            ""UPSERT INTO "" + SYSTEM_CATALOG_SCHEMA + "".\"""" + SYSTEM_CATALOG_TABLE + ""\""( "" +"
213782,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/schema/MetaDataClient.java,283,,"            ""UPSERT INTO "" + SYSTEM_CATALOG_SCHEMA + "".\"""" + SYSTEM_CATALOG_TABLE + ""\""( "" +"
213783,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/schema/MetaDataClient.java,288,,"                    "") VALUES (?, ?, ?, ?)"";"
213784,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/schema/MetaDataClient.java,360,,"                    "") VALUES (?, ?, ?, ?, ?, ?)"";"
213785,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/schema/RowKeySchema.java,87,,"            value=""NP_BOOLEAN_RETURN_NULL"", "
213786,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/schema/RowKeySchema.java,88,,"            justification=""Designed to return null."")"
213787,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/schema/task/Task.java,291,,"                    PhoenixDatabaseMetaData.TENANT_ID + (tenantId == null ? "" IS NULL "" : "" = '"" + tenantId + ""'"") + "" AND "" +"
213788,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/schema/types/PChar.java,88,,"        throw newIllegalDataException(""CHAR types may only contain single byte characters."");"
213789,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/schema/types/PDouble.java,212,,"            ""Value "" + v + "" cannot be cast to Long without changing its value"");"
213790,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/schema/types/PFloat.java,201,,"            ""Value "" + v + "" cannot be cast to Long without changing its value"");"
213791,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/schema/types/PInteger.java,213,,"            ""Value "" + v + "" cannot be encoded as an Integer without changing its value"");"
213792,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/schema/types/PLong.java,282,,"                        ""Value "" + v + "" cannot be cast to Integer without changing its value"");"
213793,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/schema/types/PSmallint.java,170,,"            throw newIllegalDataException(""Value "" + v + "" cannot be cast to Byte without changing its value"");"
213794,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/schema/types/PSmallint.java,205,,"              throw newIllegalDataException(""Value "" + v + "" cannot be encoded as an Short without changing its value"");"
213795,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/schema/types/PTinyint.java,186,,"            ""Value "" + v + "" cannot be encoded as an Byte without changing its value"");"
213796,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/schema/types/PTinyint.java,186,,"            ""Value "" + v + "" cannot be encoded as an Byte without changing its value"");"
213797,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/schema/types/PhoenixArray.java,153,,"		throw new UnsupportedOperationException(""Currently not supported"");"
213798,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/util/QueryUtil.java,520,,"        StringBuilder buf = new StringBuilder(""select \n"" +"
213799,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/util/QueryUtil.java,522,,"            "" from "" + SYSTEM_CATALOG + "" "" + SYSTEM_CATALOG_ALIAS +"
213800,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/util/QueryUtil.java,523,,"            "" where "" + COLUMN_NAME + "" is null"" +"
213801,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/util/QueryUtil.java,523,,"            "" where "" + COLUMN_NAME + "" is null"" +"
213802,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/util/QueryUtil.java,524,,"            "" and "" + COLUMN_FAMILY + "" is null"" +"
213803,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/util/QueryUtil.java,548,,"            buf.append("" and "" + TABLE_SCHEM + (schemaPattern.length() == 0 ? "" is null"" : "" like ?""));"
213804,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/util/QueryUtil.java,604,,"            TENANT_ID + "" "" + TABLE_CAT + "",\n"" + // use this column for column family name"
213805,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/util/QueryUtil.java,618,,"            ExternalSqlTypeIdFunction.NAME + ""("" + DATA_TYPE + "") AS "" + DATA_TYPE + "",\n"" +"
213806,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/util/QueryUtil.java,729,,"                ""'' "" + REMARKS + "" ,"" +"
213807,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/util/QueryUtil.java,734,,"                ""CAST(null AS BOOLEAN) "" + IMMUTABLE_ROWS + "","" +"
213808,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/util/SchemaUtil.java,979,,"                String fullColumn = (colFam==null?colName:String.format(""%s.%s"",colFam,colName));"
213809,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/util/UpgradeUtil.java,168,,"            ""UPSERT INTO "" + SYSTEM_CATALOG_SCHEMA + "".\"""" + SYSTEM_CATALOG_TABLE + ""\""( "" +"
213810,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/util/UpgradeUtil.java,175,,"    public static String SELECT_BASE_COLUMN_COUNT_FROM_HEADER_ROW = ""SELECT """
213811,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/util/UpgradeUtil.java,178,,"            + ""WHERE """
213812,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/util/UpgradeUtil.java,180,,"            + ""AND """
213813,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/util/UpgradeUtil.java,200,,"            + COLUMN_FAMILY + "" ,"" + LINK_TYPE + "","" + TABLE_SEQ_NUM + "","" + TABLE_TYPE +"" FROM "" + SYSTEM_CATALOG_SCHEMA + "".\"""""
213814,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/util/UpgradeUtil.java,201,,"            + SYSTEM_CATALOG_TABLE + ""\"" WHERE  ("" + TABLE_SCHEM + ""=? OR ("" + TABLE_SCHEM + "" IS NULL AND ? IS NULL)) AND "" + TABLE_NAME + ""=? AND "" + COLUMN_FAMILY + ""=? AND "" + LINK_TYPE + "" = """
213815,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/util/UpgradeUtil.java,528,,"                        "", "" + DATA_TABLE_NAME + "" FROM "" + SYSTEM_CATALOG_NAME + "" WHERE "" + VIEW_INDEX_ID"
213816,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/util/UpgradeUtil.java,590,,"                                            + "" = ? """
213817,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/util/UpgradeUtil.java,591,,"                                            + "" AND """
213818,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/util/UpgradeUtil.java,1125,,"                                        ""       CASE INSTR(COLUMN_FAMILY,'.')"" +"
213819,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/util/UpgradeUtil.java,1696,,"                ""WHERE COLUMN_NAME IS NULL\n"" + "
213820,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/util/UpgradeUtil.java,1744,,"        String query = ""SELECT TENANT_ID,TABLE_SCHEM,TABLE_NAME\n"" + "
213821,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/util/UpgradeUtil.java,1786,,"                    ""AND LINK_TYPE = "" + LinkType.INDEX_TABLE.getSerializedValue();"
213822,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/util/ViewUtil.java,167,,"                            + ""'. Parent Schema Name: '"" + Bytes.toString(parentSchemaName)"
213823,./TargetProjects/phoenix/phoenix-core/src/main/java/org/apache/phoenix/util/ViewUtil.java,168,,"                            + ""'. Parent Table/View Name: '"" + Bytes.toString(parentTableOrViewName)"
213824,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/hadoop/hbase/regionserver/PhoenixRpcSchedulerFactoryTest.java,76,,"            fail(""Should not have allowed priorities in HBase range"");"
213825,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/HavingCompilerTest.java,84,,"        Expression w = constantComparison(CompareOp.EQUAL, A_STRING,""foo"");"
213826,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/JoinQueryCompilerTest.java,56,,"            conn.createStatement().execute(""create table "" + JOIN_ORDER_TABLE_FULL_NAME +"
213827,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/JoinQueryCompilerTest.java,116,,"        String query = String.format(queryTemplate, ""INNER"", ""INNER"");"
213828,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/JoinQueryCompilerTest.java,122,,"        query = String.format(queryTemplate, ""INNER"", ""LEFT"");"
213829,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/JoinQueryCompilerTest.java,128,,"        query = String.format(queryTemplate, ""INNER"", ""RIGHT"");"
213830,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,146,,"                statement.setString(1, ""00D300000000XHP"");"
213831,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,321,,"            assertTrue(e.getMessage(), e.getMessage().contains(""ERROR 1018 (42Y27): Aggregate may not contain columns not in GROUP BY. A_INTEGER""));"
213832,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,987,,"        assertArrayEquals(Bytes.toBytes(""abc""), scan.getStartRow());"
213833,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,1189,,"            fail(""Compilation should have failed since casting a integer to string isn't supported"");"
213834,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,1472,,"            stmt.execute(""UPSERT INTO atable VALUES('000000000000000','000000000000000')"");"
213835,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,1553,,"            rs = conn.createStatement().executeQuery(""EXPLAIN "" + query);"
213836,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,1614,,"        String ddl = ""CREATE TABLE t (k1 INTEGER PRIMARY KEY)"";"
213837,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,1741,,"        String query = ""SELECT "" + "
213838,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,1781,,"        for (String sub : new String[] { ""SIGN"", ""CBRT"", ""LN"", ""LOG"", ""EXP"" }) {"
213839,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,1781,,"        for (String sub : new String[] { ""SIGN"", ""CBRT"", ""LN"", ""LOG"", ""EXP"" }) {"
213840,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,1781,,"        for (String sub : new String[] { ""SIGN"", ""CBRT"", ""LN"", ""LOG"", ""EXP"" }) {"
213841,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,1781,,"        for (String sub : new String[] { ""SIGN"", ""CBRT"", ""LN"", ""LOG"", ""EXP"" }) {"
213842,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,2020,,"        conn.createStatement().execute(""CREATE TABLE "" + tableName + "" (k1 char(2) not null, k2 varchar not null, k3 integer not null, v varchar, constraint pk primary key(k1,k2,k3))"");"
213843,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,2022,,"                ""SELECT 1 FROM  "" + tableName ,"
213844,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,2078,,"            statement.execute(""DROP TABLE IF EXISTS t"");"
213845,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,2114,,"                 ""UNION ALL\n"" +"
213846,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,2172,,"            assertTrue(QueryUtil.getExplainPlan(rs).contains(""    SERVER ARRAY ELEMENT PROJECTION""));"
213847,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,2209,,"            conn.createStatement().execute(""CREATE TABLE t (p INTEGER PRIMARY KEY, arr1 INTEGER ARRAY, arr2 INTEGER ARRAY)"");"
213848,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,2455,,"                    ""desc"");"
213849,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,2572,,"        String ddl = ""CREATE TABLE table_with_default ("" +"
213850,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,2573,,"                ""pk INTEGER PRIMARY KEY, "" +"
213851,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,2588,,"                ""pk INTEGER PRIMARY KEY)"";"
213852,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,2589,,"        String ddl2 = ""ALTER TABLE table_with_default "" +"
213853,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,2755,,"                    ""    CONSTRAINT PK PRIMARY KEY (\n"" + "
213854,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,2758,,"                    ""    )\n"" + "
213855,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,2798,,"            conn.createStatement().execute(""CREATE TABLE t1 (k integer not null primary key, v bigint not null) IMMUTABLE_ROWS=true"" + (saltBuckets == 0 ? """" : ("",SALT_BUCKETS=""+saltBuckets)));"
213856,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,2950,,"            conn.createStatement().execute(""CREATE TABLE test (\n"" + "
213857,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,2956,,"                    ""            CONSTRAINT pk PRIMARY KEY (\n"" + "
213858,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,2957,,"                    ""               pk1,\n"" + "
213859,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,2958,,"                    ""               pk2,\n"" + "
213860,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,2959,,"                    ""               pk3,\n"" + "
213861,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,2960,,"                    ""               pk4\n"" + "
213862,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,2961,,"                    ""             )\n"" + "
213863,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,2962,,"                    ""         )"");"
213864,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,3019,,"             String sql = ""create table "" + tableName + ""( ""+"
213865,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,3021,,"                     "" pk2 varchar not null, "" +"
213866,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,3023,,"                     "" v1 varchar, "" +"
213867,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,3024,,"                     "" v2 varchar, "" +"
213868,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,3025,,"                     "" CONSTRAINT TEST_PK PRIMARY KEY ( ""+"
213869,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,3032,,"                   ""select a.ak3 ""+"
213870,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,3033,,"                   ""from (select substr(pk1,1,1) ak1,substr(pk2,1,1) ak2,substr(pk3,1,1) ak3,substr(v1,1,1) av1,substr(v2,1,1) av2 from ""+tableName+"" order by pk2,pk3 limit 10) a ""+"
213871,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,3033,,"                   ""from (select substr(pk1,1,1) ak1,substr(pk2,1,1) ak2,substr(pk3,1,1) ak3,substr(v1,1,1) av1,substr(v2,1,1) av2 from ""+tableName+"" order by pk2,pk3 limit 10) a ""+"
213872,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,3067,,"                   ""from (select rand() ak1,length(pk2) ak2,length(pk3) ak3,length(v1) av1,length(v2) av2 from ""+tableName+"" order by pk2,pk3 limit 10) a ""+"
213873,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,3191,,"                   ""from (select substr(pk1,1,1) ak1,substr(pk2,1,1) ak2,substr(pk3,1,1) ak3,coalesce(pk3,'1') ak4, substr(v1,1,1) av1,substr(v2,1,1) av2 from ""+tableName+"" order by pk2,pk3 limit 10) a ""+"
213874,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,3291,,"                     ""from (select pk1 ak1,pk2 ak2,pk3 ak3,substr(v1,1,1) av1,substr(v2,1,1) av2 from ""+tableName+"" order by pk2,pk3 limit 10) a ""+"
213875,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,3382,,"                ""CONSTRAINT TEST_PK PRIMARY KEY ( ""+"
213876,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,3385,,"                ""ENTITY_ID""+"
213877,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,3395,,"            assertTrue(queryPlan.getOrderBy().getOrderByExpressions().get(0).toString().equals(""ORGANIZATION_ID""));"
213878,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,3411,,"            assertTrue(queryPlan.getOrderBy().getOrderByExpressions().get(0).toString().equals(""ORGANIZATION_ID DESC NULLS LAST""));"
213879,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,3419,,"            assertTrue(queryPlan.getOrderBy().getOrderByExpressions().get(0).toString().equals(""CONTAINER_ID""));"
213880,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,3425,,"            assertTrue(queryPlan.getOrderBy().getOrderByExpressions().get(0).toString().equals(""CONTAINER_ID NULLS LAST""));"
213881,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,3431,,"            assertTrue(queryPlan.getOrderBy().getOrderByExpressions().get(0).toString().equals(""CONTAINER_ID DESC""));"
213882,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,3437,,"            assertTrue(queryPlan.getOrderBy().getOrderByExpressions().get(0).toString().equals(""CONTAINER_ID DESC NULLS LAST""));"
213883,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,3459,,"            assertTrue(queryPlan.getOrderBy().getOrderByExpressions().get(0).toString().equals(""ORGANIZATION_ID NULLS LAST""));"
213884,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,3503,,"            assertTrue(queryPlan.getOrderBy().getOrderByExpressions().get(0).toString().equals(""ORGANIZATION_ID DESC""));"
213885,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,4010,,"            conn.createStatement().execute(""DROP TABLE if exists ""+tableName);"
213886,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,4011,,"            String sql=""CREATE TABLE ""+tableName+"" ( ""+"
213887,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,4017,,"                    ""ORGANIZATION_ID"" +(desc1 ? "" DESC"" : """" )+"",""+"
213888,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,4021,,"                    "")) ""+(salted ? ""SALT_BUCKETS =4"" : """");"
213889,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,4027,,"                    ""SELECT ORGANIZATION_ID,CONTAINER_ID FROM ""+tableName+"" group by ORGANIZATION_ID, CONTAINER_ID ORDER BY ORGANIZATION_ID ASC, CONTAINER_ID ASC"","
213890,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,4036,,"                    ""SELECT ORGANIZATION_ID,SCORE FROM ""+tableName+"" group by ORGANIZATION_ID, SCORE ORDER BY ORGANIZATION_ID ASC, SCORE ASC"","
213891,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,4344,,"                    ""SELECT SCORE FROM ""+tableName+"" group by SCORE ORDER BY SCORE ASC NULLS FIRST"","
213892,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,4428,,"            String sql=""CREATE TABLE IF NOT EXISTS ""+tableName1+"" ( ""+"
213893,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,4430,,"                    ""AGE INTEGER""+"
213894,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,4437,,"                    ""CODE INTEGER""+"
213895,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,4442,,"            sql=""select /*+ USE_SORT_MERGE_JOIN */ a.aid,b.code from (select aid,age from ""+tableName1+"" where age >=11 and age<=33 order by age limit 3) a inner join ""+"
213896,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,4442,,"            sql=""select /*+ USE_SORT_MERGE_JOIN */ a.aid,b.code from (select aid,age from ""+tableName1+"" where age >=11 and age<=33 order by age limit 3) a inner join ""+"
213897,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,4443,,"                    ""(select bid,code from ""+tableName2+"" order by code limit 1) b on a.aid=b.bid "";"
213898,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,4451,,"            assertTrue(orderBy.getOrderByExpressions().get(0).toString().equals(""AID""));"
213899,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,4461,,"            assertTrue(orderBy.getOrderByExpressions().get(0).toString().equals(""BID""));"
213900,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,4506,,"                ""(select a.aid,b.code from ""+tableName1+"" a inner join ""+tableName2+"" b on a.aid=b.bid where b.code >=44 and b.code<=66 order by b.code limit 3) t1 inner join ""+"
213901,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,4534,,"            sql=""select t1.aid,t1.codesum,t2.regionsum from ""+"
213902,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,4535,,"                ""(select a.aid,sum(b.code) codesum from ""+tableName1+"" a inner join ""+tableName2+"" b on a.aid=b.bid where b.code >=44 and b.code<=66 group by a.aid order by codesum limit 3) t1 inner join ""+"
213903,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,4536,,"                ""(select a.aid,sum(c.region) regionsum from ""+tableName1+"" a inner join ""+tableName3+"" c on a.aid=c.cid where c.region>=77 and c.region<=99 group by a.aid order by regionsum desc limit 2) t2 on t1.aid=t2.aid"";"
213904,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,4549,,"            assertTrue(orderBy.getOrderByExpressions().get(0).toString().equals(""SUM(B.CODE)""));"
213905,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,4559,,"            assertTrue(orderBy.getOrderByExpressions().get(0).toString().equals(""SUM(C.REGION) DESC""));"
213906,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,4668,,"            conn.createStatement().execute(""CREATE TABLE T (\n"" + "
213907,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,4669,,"                    ""    A CHAR(1) NOT NULL,\n"" + "
213908,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,4670,,"                    ""    B CHAR(1) NOT NULL,\n"" + "
213909,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,4671,,"                    ""    C CHAR(1) NOT NULL,\n"" + "
213910,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,4673,,"                    ""        A,\n"" + "
213911,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,4674,,"                    ""        B,\n"" + "
213912,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,4675,,"                    ""        C\n"" + "
213913,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,4677,,"                    "") SPLIT ON ('A','C','E','G','I')"");"
213914,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,4682,,"            assertEquals(""IDX"", plan.getContext().getCurrentTable().getTable().getName().getString());"
213915,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,4702,,"                    ""    D CHAR(1) NOT NULL,\n"" + "
213916,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,4706,,"                    ""        C,\n"" + "
213917,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,4707,,"                    ""        D\n"" + "
213918,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,4710,,"            conn.createStatement().execute(""CREATE LOCAL INDEX IDX ON T(A,B,D)"");"
213919,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,5072,,"        String query = ""SELECT * FROM (\n"" +"
213920,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,5409,,"            String rewrittenSql = ""SELECT ""+tableAlias+"".BID BID,""+tableAlias+"".CODE CODE FROM (SELECT BID,CODE FROM MERGE2  ORDER BY CODE LIMIT 1) ""+tableAlias+"" WHERE ""+tableAlias+"".CODE > 50 ORDER BY ""+tableAlias+"".BID"";"
213921,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,5473,,"            rewrittenSql = ""SELECT ""+tableAlias+"".AID AID,""+tableAlias+"".CODE CODE FROM (SELECT A.AID,B.CODE FROM MERGE1 A  Inner JOIN MERGE2 B  ON (A.AID = B.BID) WHERE (B.CODE >= 44 AND B.CODE <= 66) ORDER BY B.CODE LIMIT 3) ""+"
213922,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,5474,,"                           tableAlias+"" WHERE ""+tableAlias+"".CODE > 50 ORDER BY ""+tableAlias+"".AID"";"
213923,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,5610,,"            sql = ""select v1 from (select v1,v2,pk3 from ""+tableName+"" t where pk1 = '6' order by t.v2,t.pk3,t.v1 limit 10) a order by v2,pk3"";"
213924,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,5626,,"            sql = ""select sub from (select substr(v2,0,2) sub,count(pk3) cnt from ""+tableName+"" t where pk1 = '6' group by v1 ,v2 order by count(pk3),t.v2 limit 10) a order by cast(cnt as bigint),substr(sub,0,1)"";"
213925,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,5634,,"            sql = ""select sub from (select substr(v2,0,2) sub,pk2 from ""+tableName+"" t where pk1 = '6' group by pk2,v2 limit 10) a order by pk2,sub"";"
213926,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,5671,,"            sql = ""select pk1 from (select pk3,pk2,pk1 from ""+tableName+"" t where v1 = '6' order by t.pk1,t.pk2 limit 10) a where pk3 > '8' order by pk1,pk2,pk3"";"
213927,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,5675,,"            sql = ""select pk1 from (select substr(pk3,0,3) sub,pk2,pk1 from ""+tableName+"" t where v1 = '6' order by t.pk1,t.pk2 limit 10) a where sub > '8' order by pk1,pk2,sub"";"
213928,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,5719,,"            sql = ""select v1 from (select v1,pk2,pk1 from ""+tableName+"" t where pk1 = '6' order by t.pk2,t.v1,t.pk1 limit 10) a group by pk2,v1 order by pk2,v1"";"
213929,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,5977,,"            conn.createStatement().execute(""CREATE TABLE "" + peopleTable1 + "" (\n"" +"
213930,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,6071,,"                    ""    price integer, "" +"
213931,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,6109,,"        String sql = ""select /*+ NO_STAR_JOIN */ COALESCE(o.order_id,'empty_order_id'),i.item_id, i.discount2+5, s.supplier_id, lower(s.name) from ""+"
213932,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,6110,,"                supplierTableName + "" s inner join "" + itemTableName + "" i on  s.supplier_id = i.supplier_id ""+"
213933,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,6110,,"                supplierTableName + "" s inner join "" + itemTableName + "" i on  s.supplier_id = i.supplier_id ""+"
213934,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,6111,,"                ""inner join "" + orderTableName + "" o on  i.item_id = o.item_id ""+"
213935,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,6111,,"                ""inner join "" + orderTableName + "" o on  i.item_id = o.item_id ""+"
213936,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,6112,,"                ""where (o.price < 10 or o.price > 20) and ""+"
213937,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,6113,,"                ""(i.supplier_id != 'medi' or s.address = 'hai')"";"
213938,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,6122,,"                ""(I.SUPPLIER_ID != 'medi' OR S.ADDRESS = 'hai')""));"
213939,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,6144,,"                ""(i.description= 'desc1' or o.quantity > 10) and (i.supplier_id != 'medi' or s.address = 'hai') and (i.name is not null or s.loc_id != '8')"";"
213940,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,6193,,"        String sql = ""select /*+ USE_SORT_MERGE_JOIN */ COALESCE(o.order_id,'empty_order_id'),i.item_id, i.discount2+5, s.supplier_id, lower(s.name) from ""+"
213941,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,6511,,"            sql= ""SELECT item_id, name FROM "" + itemTableName + "" i WHERE i.item_id IN ""+"
213942,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,6511,,"            sql= ""SELECT item_id, name FROM "" + itemTableName + "" i WHERE i.item_id IN ""+"
213943,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,6522,,"                    ""(SELECT max(item_id) FROM "" + orderTableName + "" o  where o.price = i.price) ORDER BY name"";"
213944,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,6527,,"                   ""SELECT ITEM_ID,NAME FROM ITEM_TABLE I  Semi JOIN ""+"
213945,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryCompilerTest.java,6712,,"                   ""(select bid,code from ""  + tableName2 + "" where code > 10 limit 3) b on a.aid = b.bid ""+"
213946,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryOptimizerTest.java,81,,"        assertEquals(""IDX"", plan.getTableRef().getTable().getTableName().getString());"
213947,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryOptimizerTest.java,136,,"        conn.createStatement().execute(""CREATE TABLE t (k INTEGER NOT NULL PRIMARY KEY, v1 VARCHAR, v2 VARCHAR) IMMUTABLE_ROWS=true"");"
213948,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryOptimizerTest.java,137,,"        conn.createStatement().execute(""CREATE INDEX idx ON t(v1)"");"
213949,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryOptimizerTest.java,218,,"        conn.createStatement().execute(""CREATE TABLE t (k INTEGER NOT NULL PRIMARY KEY DESC, v1 VARCHAR, v2 VARCHAR) IMMUTABLE_ROWS=true"");"
213950,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryOptimizerTest.java,260,,"        conn.createStatement().execute(""CREATE INDEX idx1 ON t(v1) INCLUDE(v2)"");"
213951,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryOptimizerTest.java,261,,"        conn.createStatement().execute(""CREATE INDEX idx2 ON t(v1,v2)"");"
213952,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryOptimizerTest.java,286,,"        assertEquals(""IDX1"", plan.getTableRef().getTable().getTableName().getString());"
213953,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryOptimizerTest.java,494,,"                    + ""XYZ.ABC"""
213954,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryOptimizerTest.java,565,,"                expectedColNames = multitenant ? (""\""CF\"".\""A_INTEGER\"""" + "",\""DEC\"""" + "",\""A_STRING_ARRAY\"""") : (""\""CF\"".\""A_INTEGER\"""" + "",\""ORGANIZATION_ID\"""" + "",\""DEC\"""" + "",\""A_STRING_ARRAY\"""");"
213955,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryOptimizerTest.java,565,,"                expectedColNames = multitenant ? (""\""CF\"".\""A_INTEGER\"""" + "",\""DEC\"""" + "",\""A_STRING_ARRAY\"""") : (""\""CF\"".\""A_INTEGER\"""" + "",\""ORGANIZATION_ID\"""" + "",\""DEC\"""" + "",\""A_STRING_ARRAY\"""");"
213956,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/QueryOptimizerTest.java,565,,"                expectedColNames = multitenant ? (""\""CF\"".\""A_INTEGER\"""" + "",\""DEC\"""" + "",\""A_STRING_ARRAY\"""") : (""\""CF\"".\""A_INTEGER\"""" + "",\""ORGANIZATION_ID\"""" + "",\""DEC\"""" + "",\""A_STRING_ARRAY\"""");"
213957,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/ScanRangesTest.java,137,,"                    PChar.INSTANCE.getKeyRange(Bytes.toBytes(""b0A""), true, Bytes.toBytes(""b1B""), true),"
213958,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/ScanRangesTest.java,179,,"                    PChar.INSTANCE.getKeyRange(Bytes.toBytes(""b0A""), true, Bytes.toBytes(""b2A""), true),"
213959,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/SelectStatementRewriterTest.java,53,,"        String tenantId = ""000000000000001"";"
213960,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/TenantSpecificViewIndexCompileTest.java,75,,"        expectedExplainOutput = ""CLIENT PARALLEL 1-WAY RANGE SCAN OVER T ['tenant123456789','xyz']"";"
213961,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/WhereCompilerTest.java,102,,"        String tenantId = ""000000000000001"";"
213962,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/WhereCompilerTest.java,103,,"        String query = ""select * from atable where organization_id='"" + tenantId + ""' and a_integer=0"";"
213963,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/WhereCompilerTest.java,313,,"                    ""foo"")), TWO_BYTE_QUALIFIERS),"
213964,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/WhereCompilerTest.java,662,,"        String tenantId2 = ""000000000000002"";"
213965,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/WhereCompilerTest.java,663,,"        String tenantId3 = ""000000000000003"";"
213966,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/WhereCompilerTest.java,717,,"        String entityId1 = ""00000000000000X"";"
213967,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/WhereCompilerTest.java,718,,"        String entityId2 = ""00000000000000Y"";"
213968,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/WhereOptimizerTest.java,234,,"        String tenantId = ""000000000000001"";"
213969,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/WhereOptimizerTest.java,235,,"        String query = ""select * from atable where organization_id='"" + tenantId + ""'"";"
213970,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/WhereOptimizerTest.java,247,,"        String query = ""select * from "" + BINARY_NAME + "" where GET_BYTE(a_binary, 0)="" + result;"
213971,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/WhereOptimizerTest.java,378,,"        String keyPrefix = ""002"";"
213972,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/WhereOptimizerTest.java,412,,"        Date startDate = DateUtil.parseDate(""2012-01-01 00:00:00"");"
213973,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/WhereOptimizerTest.java,413,,"        Date endDate = DateUtil.parseDate(""2012-01-02 00:00:00"");"
213974,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/WhereOptimizerTest.java,433,,"        Date startDate = DateUtil.parseDate(""2012-01-01 01:00:00"");"
213975,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/WhereOptimizerTest.java,640,,"        String keyPrefix2= ""004"";"
213976,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/WhereOptimizerTest.java,688,,"        String entityId= ""002000000000002"";"
213977,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/WhereOptimizerTest.java,873,,"        String query = ""select * from atable where organization_id = ? and entity_id  LIKE '"" + keyPrefix + ""%'"";"
213978,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/WhereOptimizerTest.java,1269,,"        String tenantId2 = ""000000000000003"";"
213979,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/WhereOptimizerTest.java,1295,,"        String entityId1 = ""002333333333331"";"
213980,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/WhereOptimizerTest.java,1349,,"                        StringUtil.padChar(PChar.INSTANCE.toBytes(""foo""),15), true,"
213981,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/WhereOptimizerTest.java,1544,,"        String parentId = ""000000000000002"";"
213982,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/WhereOptimizerTest.java,1606,,"        String upperTenantId = ""000000000000008"";"
213983,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/WhereOptimizerTest.java,1856,,"                ""    )\n"" + "
213984,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/WhereOptimizerTest.java,1877,,"        String secondTenantId = ""000000000000005"";"
213985,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/WhereOptimizerTest.java,1878,,"        String firstParentId = ""000000000000011"";"
213986,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/compile/WhereOptimizerTest.java,2011,,"        String tenantId = ""tenantId"";"
213987,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/expression/AndExpressionTest.java,149,,"        KeyValueColumnExpression lhsExpr = kvExpr(""LHS"");"
213988,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/expression/AndExpressionTest.java,150,,"        KeyValueColumnExpression rhsExpr = kvExpr(""RHS"");"
213989,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/expression/ArithmeticOperationTest.java,52,,"        op2 = LiteralExpression.newConstant(new BigDecimal(""12345""), PDecimal.INSTANCE, 5, 0);"
213990,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/expression/ArithmeticOperationTest.java,58,,"        op2 = LiteralExpression.newConstant(new BigDecimal(""123.45""), PDecimal.INSTANCE, 5, 2);"
213991,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/expression/ArithmeticOperationTest.java,64,,"        op1 = LiteralExpression.newConstant(new BigDecimal(""99999999999999999999999999999999999999""), PDecimal.INSTANCE, 38, 0);"
213992,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/expression/ArithmeticOperationTest.java,70,,"            fail(""Evaluation should have failed"");"
213993,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/expression/ArithmeticOperationTest.java,83,,"        op1 = LiteralExpression.newConstant(new BigDecimal(""12345678901234567890123456789012345678""), PDecimal.INSTANCE, 38, 0);"
213994,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/expression/ArrayAppendFunctionTest.java,289,,"        Object[] o = new Object[]{""1   "", ""2   "", ""3   "", ""4   ""};"
213995,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/expression/ArrayAppendFunctionTest.java,289,,"        Object[] o = new Object[]{""1   "", ""2   "", ""3   "", ""4   ""};"
213996,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/expression/ArrayAppendFunctionTest.java,289,,"        Object[] o = new Object[]{""1   "", ""2   "", ""3   "", ""4   ""};"
213997,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/expression/ArrayAppendFunctionTest.java,289,,"        Object[] o = new Object[]{""1   "", ""2   "", ""3   "", ""4   ""};"
213998,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/expression/ArrayFillFunctionTest.java,84,,"        Object element = ""foo"";"
213999,./TargetProjects/phoenix/phoenix-core/src/test/java/org/apache/phoenix/expression/ArrayPrependFunctionTest.java,289,,"        Object[] o = new Object[]{""1   "", ""2   "", ""3   "", ""4   ""};"
