107000,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/java/security/cert/X509CertSelectorTest.java,1386,,"            GeneralName san4 = new GeneralName(new Name(""O=Organization""));"
107001,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/java/security/cert/X509CertSelectorTest.java,1389,,"            GeneralName san6 = new GeneralName(6, ""http://uniform.Resource.Id"");"
107002,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/java/security/cert/X509CertSelectorTest.java,1390,,"            GeneralName san7 = new GeneralName(7, ""1.1.1.1"");"
107003,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/java/security/cert/X509CertSelectorTest.java,1420,,"            assertFalse(""The certificate should not match """
107004,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/java/security/cert/X509CertSelectorTest.java,1421,,"                        + ""the selection criteria."",    selector.match(cert_2));"
107005,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/java/security/cert/X509CertSelectorTest.java,1700,,"            new GeneralName(2, ""Name.org""),"
107006,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/java/security/cert/X509CertSelectorTest.java,1701,,"            new GeneralName(2, ""dNS.Name.org""),"
107007,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/java/security/cert/X509CertSelectorTest.java,1721,,"                new GeneralName(1, ""rfc@Other.Name"")"
107008,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/java/security/cert/X509CertSelectorTest.java,1730,,"                new GeneralName(2, ""dNS.OtherName.org"")"
107009,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/java/security/cert/X509CertSelectorTest.java,1815,,"                    assertTrue(""The method match() for:\n        "" "
107010,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/java/security/cert/X509CertSelectorTest.java,1817,,"                               + ""\nand permited name\n        """
107011,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/java/security/cert/X509CertSelectorTest.java,1819,,"                               + ""\nshould return: ""+expected, "
107012,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/java/security/cert/X509CertSelectorTest.java,1835,,"                               + ""\nand excluded name\n        """
107013,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/java/security/cert/X509CertSelectorTest.java,2021,,"            {""O=Org"",       ""O=Org"",        ""O=Org"",        ""O=Org2""},"
107014,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/java/security/cert/X509CertSelectorTest.java,2058,,"                assertTrue(""The method match() for certificate """
107015,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/java/security/cert/X509CertSelectorTest.java,2059,,"                           + ""with subject:\n        "" "
107016,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/java/security/cert/X509CertSelectorTest.java,2061,,"                           + ""\nand with alternative name:\n        "" "
107017,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/java/security/cert/X509CertSelectorTest.java,2210,,"            ""0.0.0.0.0.0"","
107018,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/java/security/cert/X509CertSelectorTest.java,2211,,"            ""1.1.1.1.1.1"","
107019,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/java/security/cert/X509CertSelectorTest.java,2216,,"            ""2.2.2.2.2.2"""
107020,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/java/security/cert/X509CertSelectorTest.java,2234,,"        assertTrue(""The certificate should match the specified criteria"", "
107021,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/java/security/cert/X509CertSelectorTest.java,2238,,"        assertFalse(""The certificate should not match the specified criteria"", "
107022,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/java/security/cert/X509CertSelectorTest.java,2349,,"                assertTrue(""The Name Constraints Extension of the """
107023,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/java/security/cert/X509CertSelectorTest.java,2350,,"                            + ""certificate does not contain the names """
107024,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/java/security/cert/X509CertSelectorTest.java,2351,,"                            + ""of such type so method match() should """
107025,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/java/security/cert/X509CertSelectorTest.java,2352,,"                            + ""return true."", selector.match(cert));"
107026,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/java/security/cert/X509CertSelectorTest.java,2373,,"                            + ""certificate does not contain the name """
107027,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/java/security/cert/X509CertSelectorTest.java,2374,,"                            + ""as a permitted name so method match() """
107028,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/java/security/cert/X509CertSelectorTest.java,2375,,"                            + ""should return false"", selector.match(cert));"
107029,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/java/security/cert/X509CertSelectorTest.java,2389,,"                            + ""as an excluded name so method match() """
107030,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/java/security/cert/X509CertSelectorTest.java,2390,,"                            + ""should return true"", selector.match(cert));"
107031,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/java/security/cert/X509CertSelectorTest.java,2397,,"                            + ""certificate contains the name """
107032,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/org/apache/harmony/security/DefaultPolicyScannerTest.java,105,,"        assertTrue(pn.klass.equals(""a.b.c"") && pn.name.equals(""alias""));"
107033,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/org/apache/harmony/security/DefaultPolicyScannerTest.java,138,,"            fail(""InvalidFormatException is not thrown 2"");"
107034,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/org/apache/harmony/security/DefaultPolicyScannerTest.java,160,,"            fail(""IOException is intercepted"");"
107035,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/org/apache/harmony/security/DefaultPolicyScannerTest.java,225,,"            fail(""InvalidFormatException is not thrown 1"");"
107036,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java.injected/org/apache/harmony/security/DefaultPolicyScannerTest.java,237,,"            fail(""InvalidFormatException is not thrown 3"");"
107037,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/SystemScopeTest.java,55,,"        if (mode) ss = new SystemScope(""SystemScope"");"
107038,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/SystemScopeTest.java,78,,"        ss.addIdentity(new IdentityScopeStub(""aaa""));"
107039,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/asn1/der/BerInputStreamTest.java,102,,"            fail(""No expected ASN1Exception"");"
107040,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/asn1/der/BitStringTest.java,74,,"            assertEquals(""Testcase: "" + i, expected.unusedBits,"
107041,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/asn1/der/DerGeneralizedTimeEDTest.java,56,,"        String rep = new String(encoded, 2, encoded[1] & 0xff, ""UTF-8"");"
107042,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/fortress/EngineTest.java,50,,"		Engine engine = new Engine(""Service"");"
107043,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/fortress/PolicyUtilsTest.java,137,,"            Security.setProperty(key, ""true"");"
107044,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/fortress/ServicesTest.java,42,,"		Provider.Service serv = Services.getService(""Service.ALGORITHM"");	"
107045,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/java/security/KSBuilder_ImplTest.java,160,,"            ks.setEntry(""aaa"", pKey, pp[0]);"
107046,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/java/security/KSBuilder_ImplTest.java,179,,"                assertEquals(ksB.getProtectionParameter(""Bad alias""), pp[i]);"
107047,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/java/security/KeyStore_Impl1Test.java,255,,"        assertNotNull(""KeyStore objects were not created"", kss);"
107048,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/java/security/KeyStore_Impl1Test.java,340,,"                    new KeyStoreTestSupport.MCertificate(""type"", new byte[0]));"
107049,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/java/security/KeyStore_Impl1Test.java,386,,"                fail(""NullPointerException should be thrown when alias is null"");"
107050,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/java/security/KeyStore_Impl1Test.java,390,,"                kss[i].setEntry(""ZZZ"", null, null);"
107051,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/java/security/KeyStore_Impl1Test.java,421,,"                assertFalse(""Incorrect alias"", kss[i].containsAlias(""Bad"""
107052,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/java/security/KeyStore_Impl1Test.java,461,,"        TestKeyPair tkp = new TestKeyPair(""DSA"");"
107053,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/java/security/KeyStore_Impl1Test.java,504,,"                assertEquals(""Incorrect CertificateChain"", cc.length,"
107054,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/java/security/KeyStore_Impl1Test.java,539,,"                fail(""KeyStoreException should be thrown because password is destroyed"");"
107055,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/java/security/KeyStore_Impl2Test.java,112,,"            fail(""KeyStoreException must be thrown because this method is not supported"");"
107056,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/java/security/MessageDigest_Impl2Test.java,65,,"		MessageDigest md1 = MessageDigest.getInstance(""ABC"");		"
107057,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/java/security/MessageDigest_Impl2Test.java,73,,"		MessageDigest md2 = MessageDigest.getInstance(""CBA"");"
107058,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/java/security/MessageDigest_Impl2Test.java,122,,"        assertEquals(""getProvider() failed"", p, md1.getProvider());"
107059,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/java/security/MessageDigest_Impl2Test.java,127,,"        assertTrue(""update failed"", ((MyMessageDigest1) md1).runEngineUpdate1);"
107060,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/java/security/cert/CertStore_ImplTest.java,50,,"    private static final String srvCertStore = ""CertStore"";"
107061,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/java/security/cert/CertificateFactory_ImplTest.java,216,,"                        Base64.decode(b64PublicKeySpec.getBytes(""UTF-8"")));"
107062,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/java/security/cert/CertificateFactory_ImplTest.java,232,,"        {""-----BEGIN\n"", ""\n-----END""},"
107063,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/java/security/cert/CertificateFactory_ImplTest.java,258,,"        CertificateFactory factory = CertificateFactory.getInstance(""X.509"");"
107064,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/java/security/cert/CertificateFactory_ImplTest.java,265,,"        assertNotNull(""Factory returned null on correct PKCS7 data"", crls);"
107065,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/java/security/cert/CertificateFactory_ImplTest.java,266,,"        assertEquals(""The size of collection differs from expected"","
107066,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/java/security/cert/CertificateFactory_ImplTest.java,289,,"            fail(""Expected exception was not thrown"");"
107067,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/java/security/cert/CertificateFactory_ImplTest.java,633,,"            assertEquals(""The size of the list differs from expected"","
107068,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/java/security/cert/CertificateFactory_ImplTest.java,647,,"                factory.generateCertPath(bais, ""PkiPath"").getCertificates();"
107069,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/java/security/cert/CertificateFactory_ImplTest.java,662,,"                factory.generateCertPath(bais, ""PKCS7"").getCertificates();"
107070,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/java/security/cert/PKIXBuilderParameters_ImplTest.java,55,,"            fail(getName() + "": not performed (could not create test KeyStore)"");"
107071,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/java/security/cert/PKIXParameters_ImplTest.java,61,,"            fail(getName() + "": not performed (could not create test KeyStore)"");"
107072,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/java/security/cert/TrustAnchor_ImplTest.java,63,,"            fail(getName() + "": not performed (could not create test KeyStore)"");"
107073,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/java/security/cert/TrustAnchor_ImplTest.java,66,,"        String certAlias = ""testca1"";"
107074,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/java/security/cert/TrustAnchor_ImplTest.java,177,,"            fail(""IllegalArgumentException has not been thrown"");"
107075,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/provider/cert/X509CRLImplTest.java,372,,"            assertNull(""Certificate should not be presented in CRL "" "
107076,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/provider/cert/X509CRLImplTest.java,373,,"                    + ""because issuer is not the same as CRL issuer"", "
107077,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/provider/cert/X509CertFactoryImplTest.java,64,,"            fail(""Expected CertificateException was not thrown."");"
107078,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/provider/cert/X509CertFactoryImplTest.java,93,,"        assertEquals(""The size of collection is not correct"", 2, certFactory"
107079,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/provider/cert/X509CertPathImplTest.java,70,,"        assertEquals(""Certificate list size missmatch"", "
107080,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/provider/crypto/DSAKeyFactoryImplTest.java,56,,"    static String algorithm = ""DSA"";"
107081,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/provider/crypto/DSAKeyFactoryImplTest.java,161,,"                                     public String getFormat()    { return ""X.509""; }"
107082,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/provider/crypto/DSAKeyFactoryImplTest.java,451,,"                  public String getFormat()    { return ""PKCS8""; }"
107083,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/provider/crypto/SHA1withDSA_SignatureTest.java,190,,"                return ""dummy"";"
107084,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/provider/crypto/SHA1withDSA_SignatureTest.java,826,,"                fail(""test failure : i="" + i + "" offset="" + offset);"
107085,./TargetProjects/harmony/classlib/modules/security/src/test/impl/java/org/apache/harmony/security/tests/x509/CertificateListTest.java,214,,"        System.out.println(""}>> ""+ rcerts.toArray()[0]);"
107086,./TargetProjects/harmony/classlib/modules/security/src/test/support/common/java/org/apache/harmony/security/tests/support/MyKeyPairGenerator1.java,46,,"        super(""MyKeyPairGenerator1"");"
107087,./TargetProjects/harmony/classlib/modules/security/src/test/support/common/java/org/apache/harmony/security/tests/support/cert/MyCertificateFactorySpi.java,68,,"            throw new CertificateException(""Incorrect inputstream"");"
107088,./TargetProjects/harmony/classlib/modules/security/src/test/support/common/java/org/apache/harmony/security/tests/support/provider/cert/CertFactoryTestData.java,298,,"        return Base64.decode(certPathPKCS7Base64.getBytes(""UTF-8""));"
107089,./TargetProjects/harmony/classlib/modules/sound/src/main/java/javax/sound/midi/MidiSystem.java,134,,"            throw new Error(Messages.getString(""sound.19""));"
107090,./TargetProjects/harmony/classlib/modules/sound/src/main/java/javax/sound/midi/MidiSystem.java,199,,"            throw new Error(Messages.getString(""sound.1A""));"
107091,./TargetProjects/harmony/classlib/modules/sound/src/main/java/javax/sound/midi/ShortMessage.java,136,,"            throw new InvalidMidiDataException(Messages.getString(""sound.04"", status)); //$NON-NLS-1$"
107092,./TargetProjects/harmony/classlib/modules/sound/src/test/java/org/apache/harmony/sound/tests/javax/sound/midi/InstrumentTest.java,34,,"        Instrument1 inst2 = new Instrument1(null, new Patch(10, 20), ""Test"", null);"
107093,./TargetProjects/harmony/classlib/modules/sound/src/test/java/org/apache/harmony/sound/tests/javax/sound/midi/MetaMessageTest.java,173,,"            fail(""InvalidMidiDataException expected"");"
107094,./TargetProjects/harmony/classlib/modules/sound/src/test/java/org/apache/harmony/sound/tests/javax/sound/midi/MidiFileFormatTest.java,85,,"        table.put(""first"", ""one"");"
107095,./TargetProjects/harmony/classlib/modules/sound/src/test/java/org/apache/harmony/sound/tests/javax/sound/midi/MidiFileFormatTest.java,85,,"        table.put(""first"", ""one"");"
107096,./TargetProjects/harmony/classlib/modules/sound/src/test/java/org/apache/harmony/sound/tests/javax/sound/midi/MidiFileFormatTest.java,86,,"        table.put(""second"", ""two"");"
107097,./TargetProjects/harmony/classlib/modules/sound/src/test/java/org/apache/harmony/sound/tests/javax/sound/midi/MidiFileFormatTest.java,86,,"        table.put(""second"", ""two"");"
107098,./TargetProjects/harmony/classlib/modules/sound/src/test/java/org/apache/harmony/sound/tests/javax/sound/midi/ShortMessageTest.java,158,,"            fail(""InvalidMidiDataException expected"");"
107099,./TargetProjects/harmony/classlib/modules/sound/src/test/java/org/apache/harmony/sound/tests/javax/sound/midi/SysexMessageTest.java,177,,"            fail(""IndexOutOfBoundsException expected"");"
107100,./TargetProjects/harmony/classlib/modules/sound/src/test/java/org/apache/harmony/sound/tests/javax/sound/midi/TrackTest.java,107,,"            fail(""ArrayIndexOutOfBoundsException expected"");"
107101,./TargetProjects/harmony/classlib/modules/sound/src/test/java/org/apache/harmony/sound/tests/javax/sound/midi/spi/MidiFileWriterTest.java,45,,"                fail(""what are doing here?"");"
107102,./TargetProjects/harmony/classlib/modules/sound/src/test/java/org/apache/harmony/sound/tests/javax/sound/sampled/AudioSystemTest.java,77,,"                    ""org.apache.harmony.sound.testProvider.myClip"")) {"
107103,./TargetProjects/harmony/classlib/modules/sound/src/test/java/org/apache/harmony/sound/tests/javax/sound/sampled/DataLineInfoTest.java,36,,"        DataLine.Info info = new DataLine.Info(""aaaa"".getClass(), format, 5);"
107104,./TargetProjects/harmony/classlib/modules/sound/src/test/java/org/apache/harmony/sound/tests/javax/sound/sampled/FloatControlTest.java,29,,"                10f, 3f, 4, 5f, ""units"", ""minLabel"", ""midLabel"", ""maxLabel"");"
107105,./TargetProjects/harmony/classlib/modules/sound/src/test/java/org/apache/harmony/sound/tests/javax/sound/sampled/spi/AudioFileWriterTest.java,47,,"                fail(""what are doing here?"");"
107106,./TargetProjects/harmony/classlib/modules/sound/src/test/java/org/apache/harmony/sound/tests/javax/sound/sampled/spi/AudioFileWriterTest.java,75,,"            fail(""NPE expected"");"
107107,./TargetProjects/harmony/classlib/modules/sql/src/main/java/java/sql/Timestamp.java,432,,"            throw new IllegalArgumentException(Messages.getString(""sql.2"")); //$NON-NLS-1$"
107108,./TargetProjects/harmony/classlib/modules/sql/src/main/java/javax/sql/rowset/serial/SQLInputImpl.java,82,,"            throw new SQLException(Messages.getString(""sql.35"")); //$NON-NLS-1$"
107109,./TargetProjects/harmony/classlib/modules/sql/src/main/java/javax/sql/rowset/serial/SQLOutputImpl.java,75,,"    @SuppressWarnings(""unchecked"")"
107110,./TargetProjects/harmony/classlib/modules/sql/src/main/java/javax/sql/rowset/serial/SQLOutputImpl.java,151,,"    @SuppressWarnings( { ""boxing"", ""unchecked"" })"
107111,./TargetProjects/harmony/classlib/modules/sql/src/main/java/org/apache/harmony/sql/internal/rowset/CachedRowSetImpl.java,224,,"            throw new SyncProviderException(Messages.getString(""rowset.11"")); //$NON-NLS-1$"
107112,./TargetProjects/harmony/classlib/modules/sql/src/main/java/org/apache/harmony/sql/internal/rowset/CachedRowSetImpl.java,366,,"            throw new SQLException(Messages.getString(""rowset.0"")); //$NON-NLS-1$"
107113,./TargetProjects/harmony/classlib/modules/sql/src/main/java/org/apache/harmony/sql/internal/rowset/CachedRowSetImpl.java,597,,"            throw new SQLException(Messages.getString(""rowset.7"")); //$NON-NLS-1$"
107114,./TargetProjects/harmony/classlib/modules/sql/src/main/java/org/apache/harmony/sql/internal/rowset/CachedRowSetImpl.java,1280,,"            throw new SQLException(Messages.getString(""rowset.15"")); //$NON-NLS-1$"
107115,./TargetProjects/harmony/classlib/modules/sql/src/main/java/org/apache/harmony/sql/internal/rowset/CachedRowSetImpl.java,1568,,"        throw new SQLException(Messages.getString(""rowset.10"")); //$NON-NLS-1$"
107116,./TargetProjects/harmony/classlib/modules/sql/src/main/java/org/apache/harmony/sql/internal/rowset/JdbcRowSetImpl.java,197,,"            throw new SQLException(Messages.getString(""rowset.15"")); //$NON-NLS-1$"
107117,./TargetProjects/harmony/classlib/modules/sql/src/main/java/org/apache/harmony/sql/internal/rowset/XmlReaderImpl.java,383,,"            throw new SQLException(Messages.getString(""rowset.27"", type)); //$NON-NLS-1$"
107118,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/AbstractRowSetImplTest.java,155,,"            fail(""should throw SQLException"");"
107119,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/AbstractRowSetImplTest.java,336,,"        assertEquals(""first element in params "" + array[0]"
107120,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/AbstractRowSetImplTest.java,337,,"                + "" did not equal to Inputstream"", in, (InputStream) array[0]);"
107121,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/AbstractRowSetImplTest.java,339,,"        assertEquals(""second element in params "" + array[1]"
107122,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/AbstractRowSetImplTest.java,340,,"                + "" did not equal to 2"", 2, array[1]);"
107123,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetDeleteTest.java,28,,"        rs = st.executeQuery(""SELECT * FROM USER_INFO"");"
107124,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetDeleteTest.java,55,,"        if (""true"".equals(System.getProperty(""Testing Harmony""))) {"
107125,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetDeleteTest.java,55,,"        if (""true"".equals(System.getProperty(""Testing Harmony""))) {"
107126,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetDeleteTest.java,171,,"                fail(""Should throw SQLException"");"
107127,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetDeleteTest.java,254,,"            fail(""should throw SQLException"");"
107128,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetGetTest.java,40,,"            fail(""should throw SQLException"");"
107129,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetGetTest.java,419,,"            fail(""Should throw SQLException"");"
107130,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetImplTest.java,64,,"            fail(""should throw SQLException"");"
107131,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetImplTest.java,74,,"        crset.updateString(2, ""update3"");"
107132,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetImplTest.java,77,,"        assertEquals(""test3"", originalRow.getString(2));"
107133,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetImplTest.java,145,,"        if (""true"".equals(System.getProperty(""Testing Harmony""))) {"
107134,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetImplTest.java,145,,"        if (""true"".equals(System.getProperty(""Testing Harmony""))) {"
107135,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetImplTest.java,196,,"        rs = st.executeQuery(""select * from USER_INFO"");"
107136,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetImplTest.java,213,,"        crset.setTableName(""USER_INFO"");"
107137,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetImplTest.java,219,,"        assertEquals(""hermit"", rs.getString(2));"
107138,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetImplTest.java,243,,"        assertEquals(""test4"", rs.getString(2));"
107139,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetImplTest.java,501,,"        crset.setCommand(""testCommand"");"
107140,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetImplTest.java,503,,"        crset.setDataSourceName(""testDataSourceName"");"
107141,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetImplTest.java,510,,"        crset.setTableName(""testTable"");"
107142,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetImplTest.java,723,,"            fail(""Should throw SQLException"");"
107143,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetImplTest.java,796,,"        copy.updateString(2, ""updated"");"
107144,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetImplTest.java,819,,"            fail(""Should throw SyncProviderException"");"
107145,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetImplTest.java,1298,,"        assertEquals(""test"", crset.getString(2));"
107146,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetImplTest.java,1515,,"        crset.updateString(2, ""test5"");"
107147,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetImplTest.java,1581,,"            fail(""should throw SyncProviderException"");"
107148,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetImplTest.java,1889,,"        crset.updateString(2, ""update33"");"
107149,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetImplTest.java,1972,,"        crset.updateString(2, ""update4"");"
107150,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetImplTest.java,2109,,"            fail(""Should throw NullPointerException"");"
107151,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetImplTest.java,2183,,"        rs = st.executeQuery(""SELECT * FROM USER_INFO"");"
107152,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetInsertTest.java,35,,"        rs = st.executeQuery(""SELECT * FROM USER_INFO"");"
107153,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetInsertTest.java,41,,"            fail(""should throw SQLException"");"
107154,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetInsertTest.java,65,,"        noInitialCrset.updateString(2, ""insert10"");"
107155,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetInsertTest.java,161,,"        noInitialCrset.updateString(2, ""update10"");"
107156,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetListenerTest.java,38,,"        rs = st.executeQuery(""SELECT * FROM USER_INFO"");"
107157,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetMatchColumnTest.java,30,,"        if (!""true"".equals(System.getProperty(""Testing Harmony""))) {"
107158,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetMatchColumnTest.java,30,,"        if (!""true"".equals(System.getProperty(""Testing Harmony""))) {"
107159,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetMatchColumnTest.java,33,,"                fail(""Should throw SQLException"");"
107160,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetMatchColumnTest.java,54,,"        noInitialCrset.setMatchColumn(""not exist"");"
107161,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetMatchColumnTest.java,72,,"        noInitialCrset.setMatchColumn(new String[] { ""ID"", ""NAME"" });"
107162,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetMatchColumnTest.java,78,,"            fail(""Should throw NullPointerException"");"
107163,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetPagingTest.java,47,,"        if (!""true"".equals(System.getProperty(""Testing Harmony""))) {"
107164,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetPagingTest.java,47,,"        if (!""true"".equals(System.getProperty(""Testing Harmony""))) {"
107165,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetPagingTest.java,284,,"        crset.setCommand(""select * from USER_INFO"");"
107166,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetSQLWarningTest.java,33,,"        rs = st.executeQuery(""SELECT * FROM USER_INFO"");"
107167,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetStreamTest.java,74,,"            System.setProperty(""Testing Harmony"", ""true"");"
107168,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetStreamTest.java,74,,"            System.setProperty(""Testing Harmony"", ""true"");"
107169,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetStreamTest.java,104,,"        rs = st.executeQuery(""SELECT * FROM STREAM WHERE ID = 100"");"
107170,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetStreamTest.java,148,,"        rs = st.executeQuery(""SELECT * FROM USER_INFO"");"
107171,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetStreamTest.java,156,,"            fail(""Should throw SQLException"");"
107172,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetStreamTest.java,335,,"        insertRow(100, ""test"", bs);"
107173,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetStreamTest.java,782,,"        in = new ByteArrayInputStream(value.getBytes(""ISO-8859-1""));"
107174,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetTestCase.java,77,,"        rs = st.executeQuery(""select * from USER_INFO"");"
107175,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetTransactionTest.java,34,,"        crset.setCommand(""testCommand"");"
107176,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetTransactionTest.java,36,,"        crset.setDataSourceName(""testDataSourceName"");"
107177,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetTransactionTest.java,42,,"        crset.setPassword(""passwo"");"
107178,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetTransactionTest.java,44,,"        crset.setTableName(""testTable"");"
107179,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetTransactionTest.java,49,,"        crset.setUsername(""testUserName"");"
107180,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetTransactionTest.java,78,,"        rs = st.executeQuery(""SELECT * FROM USER_INFO"");"
107181,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetTransactionTest.java,142,,"            fail(""should throw exception"");"
107182,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetUpdateTest.java,36,,"            fail(""should throw exception"");"
107183,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetUpdateTest.java,43,,"        rs = st.executeQuery(""SELECT * FROM USER_INFO"");"
107184,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetUpdateTest.java,50,,"            fail(""should throw SQLException"");"
107185,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetUpdateTest.java,78,,"        noInitialCrset.updateString(2, ""update3"");"
107186,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetUpdateTest.java,103,,"            noInitialCrset.columnUpdated(""abc"");"
107187,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetUpdateTest.java,384,,"            fail(""Should throw SQLException"");"
107188,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetUpdateTest.java,533,,"        crset.updateString(2, ""test100"");"
107189,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetUpdateTest.java,788,,"            fail(""Should throw ClassCastException"");"
107190,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/CachedRowSetUpdateTest.java,907,,"        crset.updateString(10, ""test"");"
107191,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/FilteredRowSetTest.java,37,,"        rs = st.executeQuery(""SELECT * FROM USER_INFO"");"
107192,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/FilteredRowSetTest.java,56,,"        if (""true"".equals(System.getProperty(""Testing Harmony""))) {"
107193,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/FilteredRowSetTest.java,56,,"        if (""true"".equals(System.getProperty(""Testing Harmony""))) {"
107194,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/FilteredRowSetTest.java,82,,"            assertTrue(filteredRowSet.getString(2).indexOf(""test"") != -1);"
107195,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/FilteredRowSetTest.java,131,,"        assertEquals(""hermit"", filteredRowSet.getString(2));"
107196,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/FilteredRowSetTest.java,133,,"        filteredRowSet.updateString(2, ""update"");"
107197,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JdbcRowSetJoinTest.java,34,,"        if (!""true"".equals(System.getProperty(""Testing Harmony""))) {"
107198,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JdbcRowSetJoinTest.java,34,,"        if (!""true"".equals(System.getProperty(""Testing Harmony""))) {"
107199,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JdbcRowSetJoinTest.java,37,,"                fail(""Should throw NullPointerException"");"
107200,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JdbcRowSetJoinTest.java,45,,"                fail(""Should throw SQLException"");"
107201,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JdbcRowSetJoinTest.java,58,,"        noInitalJrs.setMatchColumn(""not exist"");"
107202,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JdbcRowSetJoinTest.java,76,,"        noInitalJrs.setMatchColumn(new String[] { ""ID"", ""NAME"" });"
107203,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JdbcRowSetTest.java,49,,"            fail(""Should throw SQLException"");"
107204,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JdbcRowSetTest.java,122,,"            fail(""Should throw NullPointerException"");"
107205,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JdbcRowSetTest.java,301,,"        jrs.setCommand(""SELECT * FROM USER_INFO"");"
107206,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JdbcRowSetTest.java,352,,"            fail(""should throw NullPointerException"");"
107207,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JdbcRowSetTest.java,359,,"            fail(""should throw SQLException"");"
107208,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JdbcRowSetTest.java,496,,"        jrs.updateString(2, ""update3"");"
107209,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JdbcRowSetTest.java,1158,,"            fail(""Shuld throw NullPointerException since jrs has not been executed."");"
107210,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetCachedRowSetTest.java,32,,"        String sqlCommand = ""select * from USER_INFO"";"
107211,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetCachedRowSetTest.java,61,,"            fail(""should throw SQLException"");"
107212,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetCachedRowSetTest.java,135,,"        rs = st.executeQuery(""select * from BOOKS"");"
107213,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetCachedRowSetTest.java,158,,"        assertEquals(""hermit"", noInitialCrset.getString(2));"
107214,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetCachedRowSetTest.java,297,,"        if (""true"".equals(System.getProperty(""Testing Harmony""))) {"
107215,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetCachedRowSetTest.java,297,,"        if (""true"".equals(System.getProperty(""Testing Harmony""))) {"
107216,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetCachedRowSetTest.java,563,,"            fail(""Should throw SyncProviderException."");"
107217,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetCachedRowSetTest.java,581,,"        jrs.updateString(2, ""Updated"");"
107218,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetCachedRowSetTest.java,748,,"                fail(""Should throw SQLException"");"
107219,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetJoinTest.java,32,,"            fail(""The data in jrs and crset should be equal."");"
107220,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetJoinTest.java,37,,"        rs = st.executeQuery(""select * from BOOKS"");"
107221,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetJoinTest.java,43,,"                .executeQuery(""select USER_INFO.ID, USER_INFO.NAME, USER_INFO.BIGINT_T, USER_INFO.NUMERIC_T, USER_INFO.DECIMAL_T, """
107222,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetJoinTest.java,44,,"                        + ""USER_INFO.SMALLINT_T, USER_INFO.FLOAT_T, USER_INFO.REAL_T, USER_INFO.DOUBLE_T, USER_INFO.DATE_T, USER_INFO.TIME_T, USER_INFO.TIMESTAMP_T, """
107223,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetJoinTest.java,46,,"                        + "" from USER_INFO, BOOKS """
107224,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetJoinTest.java,47,,"                        + ""where USER_INFO.ID = BOOKS.AUTHORID"");"
107225,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetJoinTest.java,52,,"            fail(""The data is jrs and dbJoinCrset should be equal."");"
107226,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetJoinTest.java,59,,"            fail(""The data is jrs and crset2 should be equal."");"
107227,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetJoinTest.java,64,,"                        + ""USER_INFO.SMALLINT_T, USER_INFO.FLOAT_T, USER_INFO.REAL_T, USER_INFO.DOUBLE_T, USER_INFO.DATE_T, USER_INFO.TIME_T, USER_INFO.TIMESTAMP_T """
107228,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetJoinTest.java,99,,"                        + ""where USER_INFO.NAME = BOOKS.NAME"");"
107229,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetJoinTest.java,272,,"            if (""true"".equals(System.getProperty(""Testing Harmony""))) {"
107230,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetJoinTest.java,272,,"            if (""true"".equals(System.getProperty(""Testing Harmony""))) {"
107231,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetJoinTest.java,644,,"        rs = st.executeQuery(""select * from books"");"
107232,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetOtherTest.java,101,,"        if (System.getProperty(""Testing Harmony"") == ""true"") {"
107233,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetOtherTest.java,101,,"        if (System.getProperty(""Testing Harmony"") == ""true"") {"
107234,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetOtherTest.java,132,,"                fail(""Should throw SQLException according to spec."");"
107235,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetOtherTest.java,139,,"                fail(""Should throw UnsupportedOperationException in RI"");"
107236,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetOtherTest.java,230,,"        jrs.updateString(2, ""Updated 4"");"
107237,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetOtherTest.java,495,,"        crset2.setMatchColumn(""AUTHORID"");"
107238,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetResultSetTest.java,33,,"        if (""true"".equals(System.getProperty(""Testing Harmony""))) {"
107239,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetResultSetTest.java,33,,"        if (""true"".equals(System.getProperty(""Testing Harmony""))) {"
107240,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetResultSetTest.java,38,,"                fail(""Should throw SQLException"");"
107241,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetResultSetTest.java,260,,"            fail(""Should throw SQLException."");"
107242,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetResultSetTest.java,282,,"        assertEquals(""test3"", jrs.getString(2));"
107243,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetResultSetTest.java,285,,"        assertEquals(""test"", jrs.getString(2));"
107244,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetResultSetTest.java,457,,"        jrs.updateString(2, ""Updated"");"
107245,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetTest.java,35,,"            fail(""should throw SQLException"");"
107246,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetTest.java,53,,"        if (""true"".equals(System.getProperty(""Testing Harmony""))) {"
107247,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetTest.java,53,,"        if (""true"".equals(System.getProperty(""Testing Harmony""))) {"
107248,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetTest.java,89,,"        crset.populate(st.executeQuery(""SELECT * FROM USER_INFO""));"
107249,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetTest.java,107,,"        noInitialCrset.populate(st.executeQuery(""SELECT * FROM BOOKS""));"
107250,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetTest.java,127,,"        thirdRs.populate(st.executeQuery(""SELECT * FROM CUSTOMER_INFO""));"
107251,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetTest.java,134,,"        assertEquals(""NAME"", jrs.getMetaData().getColumnName(15));"
107252,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetTest.java,181,,"            fail(""should throw NullPointerException"");"
107253,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetTest.java,651,,"            assertEquals(""USER_INFO"", crset.getTableName());"
107254,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetTest.java,700,,"        crset.setTableName(""BOOKS"");"
107255,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetTest.java,851,,"        crset.updateString(2, ""update3"");"
107256,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetTest.java,861,,"        toCrset.updateString(2, ""update4"");"
107257,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetWebRowSetTest.java,85,,"        if (System.getProperty(""Testing Harmony"") == ""true"") {"
107258,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/JoinRowSetWebRowSetTest.java,85,,"        if (System.getProperty(""Testing Harmony"") == ""true"") {"
107259,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/SyncResolverTest.java,48,,"        copy.updateString(2, ""updated"");"
107260,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/SyncResolverTest.java,76,,"            fail(""Should throw UnsupportedOperationException"");"
107261,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/SyncResolverTest.java,287,,"            fail(""Should throw SQLException"");"
107262,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/WebRowSetTest.java,108,,"        rs = st.executeQuery(""SELECT * FROM USER_INFO"");"
107263,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/XmlWriterTest.java,78,,"        rs = st.executeQuery(""SELECT * FROM USER_INFO"");"
107264,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/XmlWriterTest.java,155,,"        if (""true"".equals(System.getProperty(""Testing Harmony""))) {"
107265,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/XmlWriterTest.java,155,,"        if (""true"".equals(System.getProperty(""Testing Harmony""))) {"
107266,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/XmlWriterTest.java,240,,"        webRs.updateString(2, ""update3"");"
107267,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/internal/rowset/XmlWriterTest.java,467,,"            assertEquals(""null"", element.getFirstChild().getNodeName());"
107268,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/BatchUpdateExceptionTest.java,51,,"                assertEquals(i + "" Final state mismatch: "","
107269,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/BatchUpdateExceptionTest.java,64,,"                    fail(i + ""Unexpected exception"");"
107270,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/BatchUpdateExceptionTest.java,66,,"                assertEquals(i + ""Exception mismatch"", e.getClass(),"
107271,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/BatchUpdateExceptionTest.java,126,,"        String[] init1 = { ""a"", ""1"", ""valid1"", ""----"", ""&valid*"", null, """","
107272,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/BatchUpdateExceptionTest.java,126,,"        String[] init1 = { ""a"", ""1"", ""valid1"", ""----"", ""&valid*"", null, """","
107273,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/BatchUpdateExceptionTest.java,126,,"        String[] init1 = { ""a"", ""1"", ""valid1"", ""----"", ""&valid*"", null, """","
107274,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/DataTruncationTest.java,43,,"        String[] theFinalStates1 = { ""01004"", ""01004"", ""01004"", ""01004"","
107275,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/DataTruncationTest.java,45,,"        String state2 = ""Data truncation"";"
107276,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/DataTruncationTest.java,66,,"                assertEquals(i + ""  Final state mismatch"", aDataTruncation"
107277,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/DataTruncationTest.java,85,,"                    fail(i + ""Unexpected exception"");"
107278,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/DataTruncationTest.java,87,,"                assertEquals(i + ""Exception mismatch"", e.getClass(),"
107279,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/DataTruncationTest.java,134,,"                    fail(i + ""Exception missed"");"
107280,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/DataTruncationTest.java,136,,"                assertEquals(i + ""Return value mismatch"", theReturn,"
107281,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/DateTest.java,110,,"    @SuppressWarnings(""deprecation"")"
107282,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/DateTest.java,149,,"            fail(""Should throw IllegalArgumentException."");"
107283,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/DateTest.java,333,,"            fail(""should throw IllegalArgumentException"");"
107284,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/SQLExceptionTest.java,57,,"        String[] init1 = { ""a"", ""1"", ""valid1"", ""----"", ""&valid*"", ""1"", ""a"","
107285,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/SQLExceptionTest.java,57,,"        String[] init1 = { ""a"", ""1"", ""valid1"", ""----"", ""&valid*"", ""1"", ""a"","
107286,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/SQLExceptionTest.java,57,,"        String[] init1 = { ""a"", ""1"", ""valid1"", ""----"", ""&valid*"", ""1"", ""a"","
107287,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/SQLExceptionTest.java,82,,"                assertEquals(i + ""  Final state mismatch"", aSQLException"
107288,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/SQLExceptionTest.java,93,,"                    fail(i + ""Unexpected exception"");"
107289,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/SQLExceptionTest.java,95,,"                assertEquals(i + ""Exception mismatch"", e.getClass(),"
107290,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/SQLExceptionTest.java,269,,"                    fail(i + ""Exception missed"");"
107291,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/SQLExceptionTest.java,475,,"        SQLException object = new SQLException(""reason"", ""SQLState"", vendorCode);"
107292,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/SQLExceptionTest.java,475,,"        SQLException object = new SQLException(""reason"", ""SQLState"", vendorCode);"
107293,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/SQLWarningTest.java,51,,"                assertEquals(i + ""  Final state mismatch"", aSQLWarning"
107294,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/SQLWarningTest.java,62,,"                    fail(i + ""Unexpected exception"");"
107295,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/SQLWarningTest.java,64,,"                assertEquals(i + ""Exception mismatch"", e.getClass(),"
107296,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/SQLWarningTest.java,78,,"        String[] init1 = { ""a"", ""1"", ""valid1"", ""----"", ""&valid*"", null, """", ""\0"" };"
107297,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/SQLWarningTest.java,78,,"        String[] init1 = { ""a"", ""1"", ""valid1"", ""----"", ""&valid*"", null, """", ""\0"" };"
107298,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/SQLWarningTest.java,78,,"        String[] init1 = { ""a"", ""1"", ""valid1"", ""----"", ""&valid*"", null, """", ""\0"" };"
107299,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/SQLWarningTest.java,321,,"        SQLWarning sw = new SQLWarning(""reason"", ""SQLState"", 0);"
107300,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/SQLWarningTest.java,321,,"        SQLWarning sw = new SQLWarning(""reason"", ""SQLState"", 0);"
107301,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/TimeTest.java,75,,"    @SuppressWarnings(""deprecation"")"
107302,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/TimeTest.java,157,,"            fail(""Should throw IllegalArgumentException."");"
107303,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/TimeTest.java,248,,"            fail(""should throw IllegalArgumentException"");"
107304,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/TimestampTest.java,118,,"    static String TZ_LONDON = ""GMT""; // GMT (!) PS London != GMT (?!?)"
107305,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/java/sql/TimestampTest.java,151,,"    @SuppressWarnings(""deprecation"")"
107306,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/javax/sql/rowset/BaseRowSetTest.java,65,,"            fail(""sql exception expected"");"
107307,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/javax/sql/rowset/BaseRowSetTest.java,90,,"            brs.setNull(1, Types.BINARY, ""java.lang.Boolean"");"
107308,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/javax/sql/rowset/RowSetMetaDataImplTest.java,76,,"            fail(""should throw SQLException"");"
107309,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/javax/sql/rowset/RowSetWarningTest.java,40,,"        RowSetWarning war = new RowSetWarning(""test"");"
107310,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/javax/sql/rowset/RowSetWarningTest.java,50,,"        RowSetWarning warn = new RowSetWarning(""test"", ""testState"");"
107311,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/javax/sql/rowset/serial/SQLInputImplTest.java,62,,"            fail(""should throw SQLException"");"
107312,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/javax/sql/rowset/serial/SQLInputImplTest.java,108,,"        InputStream stream = new ByteArrayInputStream(""abc"".getBytes());"
107313,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/javax/sql/rowset/serial/SQLInputImplTest.java,403,,"        Object[] structAttributes = { ""hello"", Boolean.TRUE, ""abc"","
107314,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/javax/sql/rowset/serial/SQLOutputImplTest.java,108,,"        InputStream stream = new ByteArrayInputStream(""abc"".getBytes());"
107315,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/javax/sql/rowset/serial/SerialArrayTest.java,71,,"            fail(""should throw SQLException"");"
107316,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/javax/sql/rowset/serial/SerialArrayTest.java,206,,"            fail(""should throw UnsupportedOperationException"");"
107317,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/javax/sql/rowset/serial/SerialBlobTest.java,47,,"            fail(""should throw SQLException"");"
107318,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/javax/sql/rowset/serial/SerialBlobTest.java,67,,"            fail(""should throw NullPointerException"");"
107319,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/javax/sql/rowset/serial/SerialBlobTest.java,118,,"            fail(""should throw SerialException"");"
107320,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/javax/sql/rowset/serial/SerialClobTest.java,71,,"            fail(""should throw SerialException"");"
107321,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/javax/sql/rowset/serial/SerialClobTest.java,99,,"            serialClob = new SerialClob(""helloo"".toCharArray());"
107322,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/javax/sql/rowset/serial/SerialClobTest.java,133,,"        SerialClob serialClob = new SerialClob(""hello"".toCharArray());"
107323,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/javax/sql/rowset/serial/SerialClobTest.java,189,,"        SerialClob searchClob = new SerialClob(""llo"".toCharArray());"
107324,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/javax/sql/rowset/serial/SerialClobTest.java,299,,"        int count = serialClob.setString(1, ""olleh"");"
107325,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/javax/sql/rowset/serial/SerialStructTest.java,54,,"        Man sdata = new Man(1, new Name(""Tony"", ""Wu""));"
107326,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/javax/sql/rowset/spi/SyncFactoryTest.java,67,,"            fail(""should throw SyncFactoryException"");"
107327,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/javax/transaction/InvalidTransactionExceptionTest.java,56,,"                assertEquals(i + ""Exception mismatch"", e.getClass(),"
107328,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/javax/transaction/TransactionRequiredExceptionTest.java,55,,"                assertEquals(i + ""Exception mismatch"", e.getClass(),"
107329,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/javax/transaction/TransactionRolledbackExceptionTest.java,55,,"                assertEquals(i + ""Exception mismatch"", e.getClass(),"
107330,./TargetProjects/harmony/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/javax/transaction/xa/XAExceptionTest.java,126,,"                assertEquals(i + ""Exception mismatch"", e.getClass(),"
107331,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/DebugGraphics.java,366,,"            log(""Drawing image: "" + img + "" at "" + new Point(x, y) + "", bgcolor: "" + bgcolor);"
107332,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/DebugGraphics.java,366,,"            log(""Drawing image: "" + img + "" at "" + new Point(x, y) + "", bgcolor: "" + bgcolor);"
107333,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/JComboBox.java,390,,"            throw new RuntimeException(Messages.getString(""swing.0B"")); //$NON-NLS-1$"
107334,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/JEditorPane.java,266,,"            throw new NullPointerException(Messages.getString(""swing.03"",""Content type"")); //$NON-NLS-1$ //$NON-NLS-2$"
107335,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/JEditorPane.java,266,,"            throw new NullPointerException(Messages.getString(""swing.03"",""Content type"")); //$NON-NLS-1$ //$NON-NLS-2$"
107336,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/JSlider.java,45,,"            throw new UnsupportedOperationException(Messages.getString(""swing.27"")); //$NON-NLS-1$"
107337,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/JSpinner.java,345,,"                throw new IllegalArgumentException(Messages.getString(""swing.2C"",""SpinnerDateModel"")); //$NON-NLS-1$ //$NON-NLS-2$"
107338,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/JSplitPane.java,56,,"            throw new UnsupportedOperationException(Messages.getString(""swing.27"")); //$NON-NLS-1$"
107339,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/LayoutFocusTraversalPolicy.java,45,,"            throw new IllegalArgumentException(Messages.getString(""swing.4E"")); //$NON-NLS-1$"
107340,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicComboBoxUI.java,87,,"                throw new NullPointerException(Messages.getString(""swing.03"",""Parent"")); //$NON-NLS-1$ //$NON-NLS-2$"
107341,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,76,,"        Object[] treeFocusInputMap = new Object[] {""ctrl C"", ""copy"", ""ctrl V"", ""paste"","
107342,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,76,,"        Object[] treeFocusInputMap = new Object[] {""ctrl C"", ""copy"", ""ctrl V"", ""paste"","
107343,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,76,,"        Object[] treeFocusInputMap = new Object[] {""ctrl C"", ""copy"", ""ctrl V"", ""paste"","
107344,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,76,,"        Object[] treeFocusInputMap = new Object[] {""ctrl C"", ""copy"", ""ctrl V"", ""paste"","
107345,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,77,,"                                                   ""ctrl X"", ""cut"", ""COPY"", ""copy"", ""PASTE"", ""paste"","
107346,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,77,,"                                                   ""ctrl X"", ""cut"", ""COPY"", ""copy"", ""PASTE"", ""paste"","
107347,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,77,,"                                                   ""ctrl X"", ""cut"", ""COPY"", ""copy"", ""PASTE"", ""paste"","
107348,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,77,,"                                                   ""ctrl X"", ""cut"", ""COPY"", ""copy"", ""PASTE"", ""paste"","
107349,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,78,,"                                                   ""CUT"", ""cut"", ""UP"", ""selectPrevious"","
107350,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,78,,"                                                   ""CUT"", ""cut"", ""UP"", ""selectPrevious"","
107351,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,79,,"                                                   ""KP_UP"", ""selectPrevious"","
107352,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,80,,"                                                   ""shift UP"", ""selectPreviousExtendSelection"","
107353,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,80,,"                                                   ""shift UP"", ""selectPreviousExtendSelection"","
107354,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,82,,"                                                   ""shift KP_UP"", ""selectPreviousExtendSelection"","
107355,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,84,,"                                                   ""DOWN"", ""selectNext"", ""KP_DOWN"", ""selectNext"","
107356,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,84,,"                                                   ""DOWN"", ""selectNext"", ""KP_DOWN"", ""selectNext"","
107357,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,84,,"                                                   ""DOWN"", ""selectNext"", ""KP_DOWN"", ""selectNext"","
107358,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,85,,"                                                   ""shift DOWN"", ""selectNextExtendSelection"","
107359,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,85,,"                                                   ""shift DOWN"", ""selectNextExtendSelection"","
107360,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,87,,"                                                   ""shift KP_DOWN"", ""selectNextExtendSelection"","
107361,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,89,,"                                                   ""RIGHT"", ""selectChild"", ""KP_RIGHT"", ""selectChild"","
107362,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,89,,"                                                   ""RIGHT"", ""selectChild"", ""KP_RIGHT"", ""selectChild"","
107363,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,89,,"                                                   ""RIGHT"", ""selectChild"", ""KP_RIGHT"", ""selectChild"","
107364,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,90,,"                                                   ""LEFT"", ""selectParent"", ""KP_LEFT"", ""selectParent"","
107365,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,90,,"                                                   ""LEFT"", ""selectParent"", ""KP_LEFT"", ""selectParent"","
107366,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,90,,"                                                   ""LEFT"", ""selectParent"", ""KP_LEFT"", ""selectParent"","
107367,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,91,,"                                                   ""PAGE_UP"", ""scrollUpChangeSelection"","
107368,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,92,,"                                                   ""shift PAGE_UP"", ""scrollUpExtendSelection"","
107369,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,93,,"                                                   ""PAGE_DOWN"", ""scrollDownChangeSelection"","
107370,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,94,,"                                                   ""shift PAGE_DOWN"", ""scrollDownExtendSelection"","
107371,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,95,,"                                                   ""HOME"", ""selectFirst"","
107372,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,96,,"                                                   ""shift HOME"", ""selectFirstExtendSelection"","
107373,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,98,,"                                                   ""END"", ""selectLast"","
107374,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,99,,"                                                   ""shift END"", ""selectLastExtendSelection"","
107375,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,101,,"                                                   ""F2"", ""startEditing"", ""ctrl A"", ""selectAll"","
107376,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,101,,"                                                   ""F2"", ""startEditing"", ""ctrl A"", ""selectAll"","
107377,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,103,,"                                                   ""ctrl BACK_SLASH"", ""clearSelection"","
107378,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,104,,"                                                   ""ctrl SPACE"", ""toggleSelectionPreserveAnchor"","
107379,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,106,,"                                                   ""ctrl HOME"", ""selectFirstChangeLead"","
107380,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,107,,"                                                   ""ctrl END"", ""selectLastChangeLead"","
107381,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,108,,"                                                   ""ctrl UP"", ""selectPreviousChangeLead"","
107382,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,109,,"                                                   ""ctrl KP_UP"", ""selectPreviousChangeLead"","
107383,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,110,,"                                                   ""ctrl DOWN"", ""selectNextChangeLead"","
107384,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,111,,"                                                   ""ctrl KP_DOWN"", ""selectNextChangeLead"","
107385,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,112,,"                                                   ""ctrl PAGE_DOWN"", ""scrollDownChangeLead"","
107386,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,114,,"                                                   ""ctrl PAGE_UP"", ""scrollUpChangeLead"","
107387,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,116,,"                                                   ""ctrl LEFT"", ""scrollLeft"", ""ctrl KP_LEFT"", ""scrollLeft"","
107388,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,116,,"                                                   ""ctrl LEFT"", ""scrollLeft"", ""ctrl KP_LEFT"", ""scrollLeft"","
107389,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,116,,"                                                   ""ctrl LEFT"", ""scrollLeft"", ""ctrl KP_LEFT"", ""scrollLeft"","
107390,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,117,,"                                                   ""ctrl RIGHT"", ""scrollRight"","
107391,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,117,,"                                                   ""ctrl RIGHT"", ""scrollRight"","
107392,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,118,,"                                                   ""ctrl KP_RIGHT"", ""scrollRight"","
107393,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,120,,"                                                   ""SPACE"", ""toggleSelectionPreserveAnchor"","
107394,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,122,,"        Object[] scrollBarAncestorInputMapRightToLeft = new Object[] {""RIGHT"", ""negativeUnitIncrement"","
107395,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,124,,"                                                                   ""LEFT"", ""positiveUnitIncrement"","
107396,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,132,,"        Object[] splitPaneAncestorInputMap = new Object[] {""UP"", ""negativeIncrement"", ""DOWN"", ""positiveIncrement"","
107397,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,132,,"        Object[] splitPaneAncestorInputMap = new Object[] {""UP"", ""negativeIncrement"", ""DOWN"", ""positiveIncrement"","
107398,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,153,,"        Object[] tableAncestorInputMapRightToLeft = new Object[] {""RIGHT"", ""selectPreviousColumn"", ""KP_RIGHT"", ""selectPreviousColumn"","
107399,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,154,,"                                                                  ""ctrl RIGHT"", ""selectPreviousColumnChangeLead"", ""ctrl KP_RIGHT"", ""selectPreviousColumnChangeLead"","
107400,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,155,,"                                                                  ""LEFT"", ""selectNextColumn"", ""KP_LEFT"", ""selectNextColumn"","
107401,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,156,,"                                                                  ""ctrl LEFT"", ""selectNextColumnChangeLead"", ""ctrl KP_LEFT"", ""selectNextColumnChangeLead"","
107402,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,157,,"                                                                  ""shift RIGHT"", ""selectPreviousColumnExtendSelection"","
107403,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,157,,"                                                                  ""shift RIGHT"", ""selectPreviousColumnExtendSelection"","
107404,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,158,,"                                                                  ""shift ctrl RIGHT"", ""selectPreviousColumnExtendSelection"","
107405,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,159,,"                                                                  ""shift KP_RIGHT"", ""selectPreviousColumnExtendSelection"","
107406,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,160,,"                                                                  ""shift ctrl KP_RIGHT"", ""selectPreviousColumnExtendSelection"","
107407,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,161,,"                                                                  ""shift LEFT"", ""selectNextColumnExtendSelection"","
107408,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,161,,"                                                                  ""shift LEFT"", ""selectNextColumnExtendSelection"","
107409,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,162,,"                                                                  ""shift ctrl LEFT"", ""selectNextColumnExtendSelection"","
107410,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,163,,"                                                                  ""shift KP_LEFT"", ""selectNextColumnExtendSelection"","
107411,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,164,,"                                                                  ""shift ctrl KP_LEFT"", ""selectNextColumnExtendSelection"","
107412,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,198,,"                                                                 ""ENTER"", JTextField.notifyAction,"
107413,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,201,,"                                                                 ""ESCAPE"", ""reset-field-edit"","
107414,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,202,,"                                                                 ""UP"", ""increment"","
107415,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,204,,"                                                                 ""DOWN"", ""decrement"","
107416,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,206,,"        Object[] radioButtonFocusInputMap = new Object[] {""SPACE"", ""pressed"","
107417,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,207,,"                                                          ""released SPACE"", ""released"","
107418,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,207,,"                                                          ""released SPACE"", ""released"","
107419,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,255,,"                                                       ""DOWN"", ""selectNextRow"","
107420,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,256,,"                                                       ""ctrl DOWN"", ""selectNextRowChangeLead"","
107421,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,259,,"                                                       ""UP"", ""selectPreviousRow"","
107422,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,260,,"                                                       ""ctrl UP"", ""selectPreviousRowChangeLead"","
107423,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,272,,"                                                       ""shift DOWN"", ""selectNextRowExtendSelection"","
107424,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,276,,"                                                       ""shift UP"", ""selectPreviousRowExtendSelection"","
107425,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,341,,"        Object[] tabbedPaneFocusInputMap = new Object[] {""RIGHT"", ""navigateRight"", ""KP_RIGHT"", ""navigateRight"","
107426,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,342,,"                                                         ""LEFT"", ""navigateLeft"", ""KP_LEFT"", ""navigateLeft"","
107427,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,343,,"                                                         ""UP"", ""navigateUp"", ""KP_UP"", ""navigateUp"","
107428,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,344,,"                                                         ""DOWN"", ""navigateDown"", ""KP_DOWN"", ""navigateDown"","
107429,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,395,,"                                      ""Button.border"", new UIDefaults.ProxyLazyValue(""javax.swing.plaf.basic.BasicBorders"", ""getButtonBorder""),"
107430,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,397,,"                                      ""Button.font"", lazyValueForFont(""Dialog"", Font.PLAIN, 12),"
107431,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,404,,"                                      ""CheckBox.icon"", new UIDefaults.ProxyLazyValue(""javax.swing.plaf.basic.BasicIconFactory"", ""getCheckBoxIcon""),"
107432,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,410,,"                                      ""CheckBoxMenuItem.border"", new UIDefaults.ProxyLazyValue(""javax.swing.plaf.basic.BasicBorders$MarginBorder""),"
107433,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,419,,"                                      ""ComboBox.font"", lazyValueForFont(""SansSerif"", Font.PLAIN, 12),"
107434,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,437,,"                                      ""FormattedTextField.border"", new UIDefaults.ProxyLazyValue(""javax.swing.plaf.basic.BasicBorders"", ""getTextFieldBorder""),"
107435,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,443,,"                                      ""InternalFrame.closeIcon"", new UIDefaults.ProxyLazyValue(""javax.swing.plaf.basic.BasicIconFactory"", ""createEmptyFrameIcon""),"
107436,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,558,,"                                      ""Table.scrollPaneBorder"", new UIDefaults.ProxyLazyValue(""javax.swing.plaf.BorderUIResource"", ""getLoweredBevelBorderUIResource""),"
107437,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,603,,"                                    ""Button.background"", uiDefs.get(""control""),"
107438,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,604,,"                                    ""Button.darkShadow"", uiDefs.get(""controlDkShadow""),"
107439,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,605,,"                                    ""Button.foreground"", uiDefs.get(""controlText""),"
107440,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,606,,"                                    ""Button.highlight"", uiDefs.get(""controlLtHighlight""),"
107441,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,607,,"                                    ""Button.light"", uiDefs.get(""controlHighlight""),"
107442,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,608,,"                                    ""Button.shadow"", uiDefs.get(""controlShadow""),"
107443,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,611,,"                                    ""CheckBoxMenuItem.acceleratorForeground"", uiDefs.get(""menuText""),"
107444,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,612,,"                                    ""CheckBoxMenuItem.acceleratorSelectionForeground"", uiDefs.get(""textHighlightText""),"
107445,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,613,,"                                    ""CheckBoxMenuItem.background"", uiDefs.get(""menu""),"
107446,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,615,,"                                    ""CheckBoxMenuItem.selectionBackground"", uiDefs.get(""textHighlight""),"
107447,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,626,,"                                    ""ComboBox.disabledForeground"", uiDefs.get(""textInactiveText""),"
107448,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,631,,"                                    ""EditorPane.background"", uiDefs.getColor(""window""),"
107449,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/basic/BasicLookAndFeel.java,632,,"                                    ""EditorPane.caretForeground"", uiDefs.get(""textText""),"
107450,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/DefaultMetalTheme.java,44,,"            userFont = getFont(""swing.plaf.metal.userFont"", new FontUIResource(""Dialog"", FontUIResource.PLAIN, 12));"
107451,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,184,,"        Object[] tableAncestorInputMap = new Object[] {""ctrl C"", ""copy"", ""ctrl V"", ""paste"","
107452,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,184,,"        Object[] tableAncestorInputMap = new Object[] {""ctrl C"", ""copy"", ""ctrl V"", ""paste"","
107453,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,184,,"        Object[] tableAncestorInputMap = new Object[] {""ctrl C"", ""copy"", ""ctrl V"", ""paste"","
107454,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,184,,"        Object[] tableAncestorInputMap = new Object[] {""ctrl C"", ""copy"", ""ctrl V"", ""paste"","
107455,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,185,,"                                                       ""ctrl X"", ""cut"", ""COPY"", ""copy"", ""PASTE"", ""paste"","
107456,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,185,,"                                                       ""ctrl X"", ""cut"", ""COPY"", ""copy"", ""PASTE"", ""paste"","
107457,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,185,,"                                                       ""ctrl X"", ""cut"", ""COPY"", ""copy"", ""PASTE"", ""paste"","
107458,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,185,,"                                                       ""ctrl X"", ""cut"", ""COPY"", ""copy"", ""PASTE"", ""paste"","
107459,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,186,,"                                                       ""CUT"", ""cut"", ""RIGHT"", ""selectNextColumn"","
107460,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,186,,"                                                       ""CUT"", ""cut"", ""RIGHT"", ""selectNextColumn"","
107461,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,186,,"                                                       ""CUT"", ""cut"", ""RIGHT"", ""selectNextColumn"","
107462,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,187,,"                                                       ""ctrl RIGHT"", ""selectNextColumnChangeLead"","
107463,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,187,,"                                                       ""ctrl RIGHT"", ""selectNextColumnChangeLead"","
107464,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,188,,"                                                       ""KP_RIGHT"", ""selectNextColumn"","
107465,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,189,,"                                                       ""ctrl KP_RIGHT"", ""selectNextColumnChangeLead"","
107466,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,190,,"                                                       ""LEFT"", ""selectPreviousColumn"","
107467,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,190,,"                                                       ""LEFT"", ""selectPreviousColumn"","
107468,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,191,,"                                                       ""ctrl LEFT"", ""selectPreviousColumnChangeLead"","
107469,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,191,,"                                                       ""ctrl LEFT"", ""selectPreviousColumnChangeLead"","
107470,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,192,,"                                                       ""KP_LEFT"", ""selectPreviousColumn"","
107471,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,193,,"                                                       ""ctrl KP_LEFT"", ""selectPreviousColumnChangeLead"","
107472,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,194,,"                                                       ""DOWN"", ""selectNextRow"","
107473,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,194,,"                                                       ""DOWN"", ""selectNextRow"","
107474,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,195,,"                                                       ""ctrl DOWN"", ""selectNextRowChangeLead"","
107475,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,195,,"                                                       ""ctrl DOWN"", ""selectNextRowChangeLead"","
107476,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,196,,"                                                       ""KP_DOWN"", ""selectNextRow"","
107477,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,197,,"                                                       ""ctrl KP_DOWN"", ""selectNextRowChangeLead"","
107478,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,198,,"                                                       ""UP"", ""selectPreviousRow"","
107479,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,199,,"                                                       ""ctrl UP"", ""selectPreviousRowChangeLead"","
107480,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,199,,"                                                       ""ctrl UP"", ""selectPreviousRowChangeLead"","
107481,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,200,,"                                                       ""KP_UP"", ""selectPreviousRow"","
107482,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,201,,"                                                       ""ctrl KP_UP"", ""selectPreviousRowChangeLead"","
107483,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,202,,"                                                       ""shift RIGHT"", ""selectNextColumnExtendSelection"","
107484,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,202,,"                                                       ""shift RIGHT"", ""selectNextColumnExtendSelection"","
107485,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,204,,"                                                       ""shift KP_RIGHT"", ""selectNextColumnExtendSelection"","
107486,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,206,,"                                                       ""shift LEFT"", ""selectPreviousColumnExtendSelection"","
107487,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,206,,"                                                       ""shift LEFT"", ""selectPreviousColumnExtendSelection"","
107488,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,208,,"                                                       ""shift KP_LEFT"", ""selectPreviousColumnExtendSelection"","
107489,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,210,,"                                                       ""shift DOWN"", ""selectNextRowExtendSelection"","
107490,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,210,,"                                                       ""shift DOWN"", ""selectNextRowExtendSelection"","
107491,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,212,,"                                                       ""shift KP_DOWN"", ""selectNextRowExtendSelection"","
107492,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,214,,"                                                       ""shift UP"", ""selectPreviousRowExtendSelection"","
107493,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,214,,"                                                       ""shift UP"", ""selectPreviousRowExtendSelection"","
107494,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,216,,"                                                       ""shift KP_UP"", ""selectPreviousRowExtendSelection"","
107495,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,218,,"                                                       ""PAGE_UP"", ""scrollUpChangeSelection"","
107496,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,219,,"                                                       ""PAGE_DOWN"", ""scrollDownChangeSelection"","
107497,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,220,,"                                                       ""HOME"", ""selectFirstColumn"","
107498,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,221,,"                                                       ""END"", ""selectLastColumn"","
107499,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,222,,"                                                       ""shift PAGE_UP"", ""scrollUpExtendSelection"","
107500,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,222,,"                                                       ""shift PAGE_UP"", ""scrollUpExtendSelection"","
107501,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,223,,"                                                       ""shift PAGE_DOWN"", ""scrollDownExtendSelection"","
107502,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,223,,"                                                       ""shift PAGE_DOWN"", ""scrollDownExtendSelection"","
107503,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,224,,"                                                       ""shift HOME"", ""selectFirstColumnExtendSelection"","
107504,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,225,,"                                                       ""shift END"", ""selectLastColumnExtendSelection"","
107505,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,226,,"                                                       ""ctrl PAGE_UP"", ""scrollLeftChangeSelection"","
107506,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,227,,"                                                       ""ctrl PAGE_DOWN"", ""scrollRightChangeSelection"","
107507,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,228,,"                                                       ""ctrl HOME"", ""selectFirstRow"","
107508,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,229,,"                                                       ""ctrl END"", ""selectLastRow"","
107509,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,236,,"                                                       ""ENTER"", ""selectNextRowCell"","
107510,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,238,,"                                                       ""ctrl A"", ""selectAll"", ""ctrl SLASH"", ""selectAll"", ""ctrl BACK_SLASH"", ""clearSelection"","
107511,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,238,,"                                                       ""ctrl A"", ""selectAll"", ""ctrl SLASH"", ""selectAll"", ""ctrl BACK_SLASH"", ""clearSelection"","
107512,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,238,,"                                                       ""ctrl A"", ""selectAll"", ""ctrl SLASH"", ""selectAll"", ""ctrl BACK_SLASH"", ""clearSelection"","
107513,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,239,,"                                                       ""F2"", ""startEditing"", ""ESCAPE"", ""cancel"","
107514,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,240,,"                                                       ""SPACE"", ""addToSelection"", ""ctrl SPACE"", ""toggleAndAnchor"","
107515,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,240,,"                                                       ""SPACE"", ""addToSelection"", ""ctrl SPACE"", ""toggleAndAnchor"","
107516,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,280,,"                                                         ""BACK_SPACE"", DefaultEditorKit.deletePrevCharAction,"
107517,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,301,,"                                                          ""DOWN"", ""selectNext"","
107518,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,303,,"                                                          ""alt DOWN"", ""togglePopup"","
107519,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,309,,"                                                          ""UP"", ""selectPrevious"","
107520,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,370,,"                                                                 ""UP"", ""increment"","
107521,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,372,,"                                                                 ""DOWN"", ""decrement"","
107522,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,379,,"                                                   ""shift UP"", ""selectPreviousExtendSelection"","
107523,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,385,,"                                                   ""shift DOWN"", ""selectNextExtendSelection"","
107524,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,462,,"        Object[] scrollBarAncestorInputMap = new Object[] {""RIGHT"", ""positiveUnitIncrement"","
107525,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,467,,"                                                        ""LEFT"", ""negativeUnitIncrement"","
107526,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,499,,"        Object[] splitPaneAncestorInputMap = new Object[] {""UP"", ""negativeIncrement"","
107527,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,500,,"                                                           ""DOWN"", ""positiveIncrement"","
107528,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,515,,"        Object[] tabbedPaneFocusInputMap = new Object[] {""RIGHT"", ""navigateRight"", ""KP_RIGHT"", ""navigateRight"","
107529,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,516,,"                                                         ""LEFT"", ""navigateLeft"", ""KP_LEFT"", ""navigateLeft"","
107530,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,517,,"                                                         ""UP"", ""navigateUp"", ""KP_UP"", ""navigateUp"","
107531,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,518,,"                                                         ""DOWN"", ""navigateDown"", ""KP_DOWN"", ""navigateDown"","
107532,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,560,,"                 ""Button.border"", new UIDefaults.ProxyLazyValue(""javax.swing.plaf.metal.MetalBorders"", ""getButtonBorder""),"
107533,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,561,,"                 ""Button.focusInputMap"", new UIDefaults.LazyInputMap(new Object[] { ""SPACE"", ""pressed"", ""released SPACE"", ""released"" }),"
107534,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,561,,"                 ""Button.focusInputMap"", new UIDefaults.LazyInputMap(new Object[] { ""SPACE"", ""pressed"", ""released SPACE"", ""released"" }),"
107535,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,561,,"                 ""Button.focusInputMap"", new UIDefaults.LazyInputMap(new Object[] { ""SPACE"", ""pressed"", ""released SPACE"", ""released"" }),"
107536,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,565,,"                 ""CheckBox.icon"", new UIDefaults.ProxyLazyValue(""javax.swing.plaf.metal.MetalIconFactory"", ""getCheckBoxIcon""),"
107537,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,568,,"                 ""CheckBoxMenuItem.border"", new UIDefaults.ProxyLazyValue(""javax.swing.plaf.metal.MetalBorders$MenuItemBorder""),"
107538,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/metal/MetalLookAndFeel.java,612,,"                 ""List.focusCellHighlightBorder"", new UIDefaults.ProxyLazyValue(""javax.swing.plaf.BorderUIResource$LineBorderUIResource"", new Object[] { getPrimaryControlShadow() }),"
107539,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/synth/SynthStyle.java,63,,"    @SuppressWarnings(""unused"")"
107540,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/synth/XMLSynthParser.java,54,,"    private static final String STYLE_ELEMENT = ""style""; //$NON-NLS-1$"
107541,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/synth/XMLSynthParser.java,66,,"    private static final String INSETS_ELEMENT = ""insets""; //$NON-NLS-1$"
107542,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/synth/XMLSynthParser.java,184,,"            currentState = computeStateValue(attrs.getValue(""value"")); //$NON-NLS-1$"
107543,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/synth/XMLSynthParser.java,391,,"    @SuppressWarnings(""nls"")"
107544,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/synth/XMLSynthParser.java,394,,"        String idref = attrs.getValue(""idref"");"
107545,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/synth/XMLSynthParser.java,446,,"        String colorTypeAttr = attrs.getValue(""type""); //$NON-NLS-1$"
107546,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/synth/XMLSynthParser.java,510,,"        String keyAttr = attrs.getValue(""key"");"
107547,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/plaf/synth/XMLSynthStyle.java,78,,"    public Object get(@SuppressWarnings(""unused"")"
107548,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/table/JTableHeader.java,62,,"                throw new UnsupportedOperationException(Messages.getString(""swing.27"")); //$NON-NLS-1$"
107549,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/text/AbstractDocument.java,334,,"    @SuppressWarnings(""serial"")"
107550,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/text/FlowView.java,238,,"            throw new UnsupportedOperationException(Messages.getString(""swing.8B"")); //$NON-NLS-1$"
107551,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/text/html/CSS.java,58,,"                new Attribute(""background-image"", ""none"", false,"
107552,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/text/html/CSS.java,70,,"            new Attribute(""border-bottom-width"", ""medium"", false,"
107553,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/text/html/CSS.java,127,,"                new Attribute(""font-style"", ""normal"", true, new FontStyle());"
107554,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/text/html/CSS.java,134,,"                new Attribute(""height"", ""auto"", false, new Height());"
107555,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/text/html/CSS.java,365,,"            if (value.indexOf(""url("") != -1) {"
107556,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/text/html/CSS.java,588,,"            ""top"", ""center"", ""bottom"", ""left"", ""right"""
107557,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/text/html/CSS.java,588,,"            ""top"", ""center"", ""bottom"", ""left"", ""right"""
107558,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/text/html/CSS.java,634,,"            String[] parts = value.split(""\\s+"");"
107559,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/text/html/FormView.java,58,,"            throw new UnsupportedOperationException(Messages.getString(""swing.27"")); //$NON-NLS-1$"
107560,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/text/html/parser/ElementsHandler.java,44,,"    static final String  CONTENTTYPE =  ""CDATA"" ;"
107561,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/text/html/parser/ElementsHandler.java,63,,"    static final String  BODYCOLORS =  "" bgcolor "" + COLOR + "" #IMPLIED text "" + COLOR + "" #IMPLIED link "" + COLOR + "" #IMPLIED vlink "" + COLOR + "" #IMPLIED alink "" + COLOR + "" #IMPLIED "";"
107562,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/text/html/parser/ElementsHandler.java,76,,"    static final String  INLINE =  ""#PCDATA | "" + FONTSTYLE + "" | "" + PHRASE + "" | "" + SPECIAL + "" | "" + FORMCTRL + """";"
107563,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/text/html/parser/ElementsHandler.java,114,,"        put(""A"", ATTRS + "" charset "" + CHARSET + "" #IMPLIED type "" + CONTENTTYPE + "" #IMPLIED name CDATA #IMPLIED href "" + URI + "" #IMPLIED hreflang "" + LANGUAGECODE + "" #IMPLIED target "" + FRAMETARGET + "" #IMPLIED rel "" + LINKTYPES + "" #IMPLIED rev "" + LINKTYPES + "" #IMPLIED accesskey "" + CHARACTER + "" #IMPLIED shape "" + SHAPE + "" rect coords "" + COORDS + "" #IMPLIED tabindex NUMBER #IMPLIED onfocus "" + SCRIPT + "" #IMPLIED onblur "" + SCRIPT + "" #IMPLIED "");"
107564,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/text/html/parser/ElementsHandler.java,114,,"        put(""A"", ATTRS + "" charset "" + CHARSET + "" #IMPLIED type "" + CONTENTTYPE + "" #IMPLIED name CDATA #IMPLIED href "" + URI + "" #IMPLIED hreflang "" + LANGUAGECODE + "" #IMPLIED target "" + FRAMETARGET + "" #IMPLIED rel "" + LINKTYPES + "" #IMPLIED rev "" + LINKTYPES + "" #IMPLIED accesskey "" + CHARACTER + "" #IMPLIED shape "" + SHAPE + "" rect coords "" + COORDS + "" #IMPLIED tabindex NUMBER #IMPLIED onfocus "" + SCRIPT + "" #IMPLIED onblur "" + SCRIPT + "" #IMPLIED "");"
107565,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/text/html/parser/ElementsHandler.java,114,,"        put(""A"", ATTRS + "" charset "" + CHARSET + "" #IMPLIED type "" + CONTENTTYPE + "" #IMPLIED name CDATA #IMPLIED href "" + URI + "" #IMPLIED hreflang "" + LANGUAGECODE + "" #IMPLIED target "" + FRAMETARGET + "" #IMPLIED rel "" + LINKTYPES + "" #IMPLIED rev "" + LINKTYPES + "" #IMPLIED accesskey "" + CHARACTER + "" #IMPLIED shape "" + SHAPE + "" rect coords "" + COORDS + "" #IMPLIED tabindex NUMBER #IMPLIED onfocus "" + SCRIPT + "" #IMPLIED onblur "" + SCRIPT + "" #IMPLIED "");"
107566,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/text/html/parser/ElementsHandler.java,116,,"        put(""AREA"", ATTRS + "" shape "" + SHAPE + "" rect coords "" + COORDS + "" #IMPLIED href "" + URI + "" #IMPLIED target "" + FRAMETARGET + "" #IMPLIED nohref (nohref) #IMPLIED alt "" + TEXT + "" #REQUIRED tabindex NUMBER #IMPLIED accesskey "" + CHARACTER + "" #IMPLIED onfocus "" + SCRIPT + "" #IMPLIED onblur "" + SCRIPT + "" #IMPLIED "");"
107567,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/text/html/parser/ElementsHandler.java,118,,"        put(""IMG"", ATTRS + "" src "" + URI + "" #REQUIRED alt "" + TEXT + "" #REQUIRED longdesc "" + URI + "" #IMPLIED name CDATA #IMPLIED height "" + LENGTH + "" #IMPLIED width "" + LENGTH + "" #IMPLIED usemap "" + URI + "" #IMPLIED ismap (ismap) #IMPLIED align "" + IALIGN + "" #IMPLIED border "" + PIXELS + "" #IMPLIED hspace "" + PIXELS + "" #IMPLIED vspace "" + PIXELS + "" #IMPLIED "");"
107568,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/text/html/parser/ElementsHandler.java,131,,"        put(""OL"", ATTRS + "" type "" + OLSTYLE + "" #IMPLIED compact (compact) #IMPLIED start NUMBER #IMPLIED "");"
107569,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/text/html/parser/ElementsHandler.java,169,,"        handleElement(""("" + FONTSTYLE + ""|"" + PHRASE + "")"", ""- - ("" + INLINE + "")*"");"
107570,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/text/html/parser/ElementsHandler.java,170,,"        handleElement(""(SUB|SUP)"", ""- - ("" + INLINE + "")* "");"
107571,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/text/html/parser/ElementsHandler.java,173,,"        handleElement(""BASEFONT"", ""- O EMPTY "");"
107572,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/text/html/parser/ElementsHandler.java,189,,"        handleElement(""P"", ""- O ("" + INLINE + "")* "");"
107573,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/text/html/parser/ParserCup.java,171,,"    ""\001\001\000\002\001\001\000\002\001\001\000\002\001"" +"
107574,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/javax/swing/tree/DefaultMutableTreeNode.java,292,,"                        throw new NoSuchElementException(Messages.getString(""swing.AA"")); //$NON-NLS-1$"
107575,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/org/apache/harmony/x/swing/text/html/cssparser/CSSParser.java,57,,"    throw new Error(Messages.getString(""swing.err.15"")); //$NON-NLS-1$"
107576,./TargetProjects/harmony/classlib/modules/swing/src/main/java/common/org/apache/harmony/x/swing/text/rtf/RTFParser.java,61,,"    throw new Error(""Missing return statement in function"");"
107577,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractActionTest.java,102,,"        action = new AbstractAction(""ActionName"", icon) {"
107578,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractActionTest.java,144,,"        String name1 = ""name1"";"
107579,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractActionTest.java,145,,"        String name2 = ""name2"";"
107580,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractActionTest.java,146,,"        String value1 = ""value1"";"
107581,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractActionTest.java,147,,"        String value2 = ""value2"";"
107582,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractActionTest.java,149,,"        assertNull(""value is not stored initially"", action.getValue(name1));"
107583,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractActionTest.java,153,,"        assertEquals(""value is stored properly"", value1, action.getValue(name1));"
107584,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractActionTest.java,223,,"        assertEquals(""values in table coincide "", action.getValue(name1), actionClone"
107585,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,215,,"        listener1.checkPropertyFired(button, ""enabled"", Boolean.TRUE, Boolean.FALSE);"
107586,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,217,,"        assertTrue(""state event's been fired "", listener3.eventHappened != null);"
107587,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,218,,"        assertEquals(""state event fired properly "", ChangeEvent.class, listener3.eventHappened"
107588,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,236,,"        assertFalse(""event's not been fired "", listener1.isChanged());"
107589,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,346,,"        assertTrue(""enabled "", button.isEnabled());"
107590,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,352,,"        assertEquals(""icon "", icon1, button.getIcon());"
107591,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,355,,"        assertEquals(""mnemonic "", 1, button.getMnemonic());"
107592,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,358,,"        assertEquals(""text "", text1, button.getText());"
107593,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,366,,"        assertEquals(""ToolTipText "", text3, button.getToolTipText());"
107594,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,382,,"        listener.checkPropertyFired(button, ""text"", """", text1);"
107595,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,383,,"        listener.checkPropertyFired(button, ""icon"", null, icon1);"
107596,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,512,,"        assertTrue(""event's been fired "", listener1.isChanged());"
107597,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,513,,"        listener1.checkPropertyFired(button, ""mnemonic"", new Integer(0), new Integer(1));"
107598,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,569,,"                putValue(""performed"", e);"
107599,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,656,,"        listener1.checkPropertyFired(button, ""selectedIcon"", null, icon1);"
107600,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,684,,"        listener.checkPropertyFired(button, ""rolloverEnabled"", Boolean.FALSE, Boolean.TRUE);"
107601,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,730,,"        listener1.checkPropertyFired(button, ""pressedIcon"", null, icon1);"
107602,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,778,,"        listener1.checkPropertyFired(button, ""disabledSelectedIcon"", null, icon1);"
107603,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,802,,"        listener1.checkPropertyFired(button, ""disabledIcon"", null, icon1);"
107604,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,941,,"        listener1.checkPropertyFired(button, ""model"", oldModel, model1);"
107605,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,1074,,"        assertTrue(""listener's array is valid "", listeners != null);"
107606,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,1078,,"        assertTrue(""listener's removed successfully "", find(listeners, listener3) == 1);"
107607,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,1112,,"        assertTrue(""listener's added successfully "", find(listeners, listener1) == 1);"
107608,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,1143,,"        assertTrue(""event fired "", listener1.eventHappened != null);"
107609,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,1150,,"        assertEquals(""event's source "", button, listener1.eventHappened.getSource());"
107610,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,1173,,"        assertTrue(""listener's array has the proper size "", listeners != null"
107611,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,1248,,"        assertEquals(""event's ID "", ItemEvent.ITEM_STATE_CHANGED, listener1.eventHappened"
107612,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,1250,,"        assertEquals(""event's item "", button, listener1.eventHappened.getItem());"
107613,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,1252,,"        assertEquals(""event's StateChange "", ItemEvent.DESELECTED, listener1.eventHappened"
107614,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,1360,,"        assertEquals(""event's command "", event1.getActionCommand(), listener1.eventHappened"
107615,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,1364,,"        assertEquals(""event's modifiers "", event1.getModifiers(), listener1.eventHappened"
107616,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,1406,,"                .checkPropertyFired(button, ""iconTextGap"", new Integer(4), new Integer(value1));"
107617,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,1444,,"        listener1.checkPropertyFired(button, ""verticalTextPosition"", new Integer("
107618,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,1470,,"        listener1.checkPropertyFired(button, ""verticalAlignment"", new Integer("
107619,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,1502,,"        assertTrue(""exception is thrown"", thrown);"
107620,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,1535,,"        listener1.checkLastPropertyFired(button, ""horizontalAlignment"", new Integer("
107621,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,1561,,"        listener1.checkLastPropertyFired(button, ""horizontalTextPosition"", new Integer("
107622,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,1640,,"        listener1.checkPropertyFired(button, ""margin"", defaultMargin, margin1);"
107623,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,1794,,"        listener1.checkLastPropertyFired(button, ""focusPainted"", Boolean.TRUE, Boolean.FALSE);"
107624,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,1826,,"        listener1.checkLastPropertyFired(button, ""contentAreaFilled"", Boolean.TRUE,"
107625,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,1862,,"        listener1.checkLastPropertyFired(button, ""borderPainted"", Boolean.TRUE, Boolean.FALSE);"
107626,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButtonTest.java,1987,,"        assertEquals(""MnemonicIndex"", -1, button.getDisplayedMnemonicIndex());"
107627,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AbstractButton_MultithreadedTest.java,82,,"        assertTrue(""action performed"", listener.performed != null);"
107628,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AccessibleJButtonTest.java,92,,"        assertNotNull(""AccessibleStateSet is not null"", aContext.getAccessibleStateSet());"
107629,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AccessibleJButtonTest.java,95,,"        assertTrue(""AccessibleStateSet contains FOCUSABLE"", aContext.getAccessibleStateSet()"
107630,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AccessibleJButtonTest.java,99,,"        assertTrue(""AccessibleStateSet contains OPAQUE"", aContext.getAccessibleStateSet()"
107631,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AccessibleJButtonTest.java,170,,"        assertEquals(""CurrentAccessibleValue"", new Integer(0), aContext"
107632,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AccessibleJButtonTest.java,220,,"        button.setText(""text"");"
107633,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AccessibleJButtonTest.java,267,,"        assertNull(""AfterIndex"", aContext.getAfterIndex(AccessibleText.CHARACTER, 0));"
107634,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AccessibleJButtonTest.java,275,,"        assertNull(""AtIndex"", aContext.getAtIndex(AccessibleText.CHARACTER, 0));"
107635,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/AccessibleJButtonTest.java,283,,"        assertNull(""BeforeIndex"", aContext.getBeforeIndex(AccessibleText.CHARACTER, 0));"
107636,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/BorderFactoryTest.java,39,,"        assertTrue(""Shared values are initialized"", BorderFactory.emptyBorder != null);"
107637,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/BorderFactoryTest.java,50,,"        assertEquals(""Shadow color coinsides"", shadowColor, ((EtchedBorder) border)"
107638,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/BorderFactoryTest.java,52,,"        assertEquals(""Highlighted color coinsides"", highlightedColor, ((EtchedBorder) border)"
107639,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/BorderFactoryTest.java,54,,"        assertEquals(""Etch type coinsides"", etchType, ((EtchedBorder) border).getEtchType());"
107640,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/BorderFactoryTest.java,57,,"        assertEquals(""highlightOuterColor coinsides"", highlightedColor, ((BevelBorder) border)"
107641,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/BorderFactoryTest.java,59,,"        assertEquals(""highlightInnerColor coinsides"", highlightedColor, ((BevelBorder) border)"
107642,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/BorderFactoryTest.java,61,,"        assertEquals(""shadowOuterColor coinsides"", shadowColor, ((BevelBorder) border)"
107643,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/BorderFactoryTest.java,63,,"        assertEquals(""shadowInnerColor coinsides"", shadowColor, ((BevelBorder) border)"
107644,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/BorderFactoryTest.java,65,,"        assertEquals(""Bevel type coinsides"", bevelType, ((BevelBorder) border).getBevelType());"
107645,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/BorderFactoryTest.java,87,,"        String string1 = ""string1"";"
107646,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/BorderFactoryTest.java,99,,"        assertEquals(""title field initialized correctly "", string1, border1.getTitle());"
107647,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/BorderFactoryTest.java,100,,"        assertEquals(""border field initialized correctly "", border3, border1.getBorder());"
107648,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/BorderFactoryTest.java,101,,"        assertEquals(""color field initialized correctly "", color1, border1.getTitleColor());"
107649,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/BorderFactoryTest.java,102,,"        assertEquals(""font field initialized correctly "", font1, border1.getTitleFont());"
107650,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/BorderFactoryTest.java,103,,"        assertEquals(""position field initialized correctly "", pos1, border1.getTitlePosition());"
107651,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/BorderFactoryTest.java,104,,"        assertEquals(""justification field initialized correctly "", just1, border1"
107652,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/BorderFactoryTest.java,108,,"                ""TitledBorder.border""), border2.getBorder());"
107653,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/BorderFactoryTest.java,110,,"                ""TitledBorder.titleColor""), border2.getTitleColor());"
107654,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/BorderFactoryTest.java,112,,"                ""TitledBorder.font""), border2.getTitleFont());"
107655,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/BorderFactoryTest.java,235,,"        assertEquals(""border fields coinsides"", border1, border4.getOutsideBorder());"
107656,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/BoxLayoutTest.java,99,,"        assertEquals(""1 Sizes coinside:"", new Dimension(89, 26), layout1"
107657,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/BoxLayoutTest.java,101,,"        assertEquals(""2 Sizes coinside:"", new Dimension(62, 52), layout2"
107658,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/BoxLayoutTest.java,448,,"            fail(""Exception must be thrown"");"
107659,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/BoxLayoutTest.java,523,,"        assertEquals(""Alignments coinside:"", 0.2857143,"
107660,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/BoxTest.java,105,,"        assertEquals(""Minimum size initialized correctly "", size, box.getMinimumSize());"
107661,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/BoxTest.java,106,,"        assertEquals(""Preferred size initialized correctly "", size, box.getPreferredSize());"
107662,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/BoxTest.java,107,,"        assertEquals(""Maximum size initialized correctly "", maxSize, box.getMaximumSize());"
107663,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/BoxTest.java,108,,"        assertFalse(""Opaqueness initialized correctly"", box.isOpaque());"
107664,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/Box_FillerTest.java,46,,"        assertEquals(""Minimum size initialized correctly "", minimumSize, filler"
107665,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/Box_FillerTest.java,48,,"        assertEquals(""Preferred size initialized correctly "", preferredSize, filler"
107666,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/Box_FillerTest.java,50,,"        assertEquals(""Maximum size initialized correctly "", maximumSize, filler"
107667,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/ButtonGroupTest.java,57,,"        assertEquals(""number of buttons"", 1, group.getButtonCount());"
107668,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/ButtonGroupTest.java,58,,"        assertEquals(""selection"", buttons[0].getModel(), group.getSelection());"
107669,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/ButtonGroupTest.java,59,,"        assertTrue(""selected model"", buttons[0].getModel().isSelected());"
107670,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/ButtonGroupTest.java,69,,"        assertFalse(""unselected model"", buttons[3].getModel().isSelected());"
107671,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/ButtonGroupTest.java,119,,"        assertEquals(""button"", buttons[0], i.nextElement());"
107672,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/DefaultBoundedRangeModel2Test.java,35,,"    SimpleChangeListener listener = new SimpleChangeListener(""initial"");"
107673,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/DefaultButtonModelTest.java,116,,"        assertTrue(""listener's array has the proper size "", listeners != null"
107674,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/DefaultButtonModelTest.java,123,,"        assertTrue(""listener's added successfully "", find(listeners, listener1) == 1);"
107675,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/DefaultButtonModelTest.java,178,,"        assertTrue(""listener's removed successfully "", find(listeners, listener3) == 1);"
107676,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/DefaultButtonModelTest.java,359,,"        assertEquals(""event fired "", event1, listener1.eventHappened);"
107677,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/DefaultButtonModelTest.java,415,,"        assertEquals(""event fired properly "", ChangeEvent.class, listener1.eventHappened"
107678,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/DefaultButtonModelTest.java,521,,"        assertEquals(""Selected "", value1, buttonModel.isSelected());"
107679,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/DefaultButtonModelTest.java,522,,"        assertEquals(""event fired source "", buttonModel, listener1.eventHappened.getSource());"
107680,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/DefaultButtonModelTest.java,523,,"        assertEquals(""event fired class "", ChangeEvent.class, listener1.eventHappened"
107681,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/DefaultButtonModelTest.java,529,,"        assertEquals(""event fired value "", 1, listener3.eventHappened.getStateChange());"
107682,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/DefaultButtonModelTest.java,574,,"        assertNull(""event wasn't fired "", listener1.eventHappened);"
107683,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/DefaultCellEditorTest.java,63,,"        editor.delegate.setValue(""text2"");"
107684,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/DefaultCellEditorTest.java,87,,"        editor.delegate.setValue(""any"");"
107685,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/DefaultCellEditorTest.java,152,,"        cb.getModel().setSelectedItem(""selected"");"
107686,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/DefaultCellEditorTest.java,158,,"        ((DefaultComboBoxModel) cb.getModel()).addElement(""elem1"");"
107687,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/DefaultCellEditorTest.java,159,,"        ((DefaultComboBoxModel) cb.getModel()).addElement(""elem2"");"
107688,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/DefaultDesktopManagerTest.java,137,,"        assertEquals(""width"", bounds.width, width);"
107689,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/DefaultDesktopManagerTest.java,138,,"        assertEquals(""height"", bounds.height, height);"
107690,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/DefaultListCellRendererTest.java,51,,"        Component result = renderer.getListCellRendererComponent(list, ""one"", 0, false, false);"
107691,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/DefaultListCellRendererTest.java,58,,"        result = renderer.getListCellRendererComponent(list, ""two"", 0, true, false);"
107692,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/DefaultListCellRendererTest.java,131,,"        renderer.firePropertyChange(""qqq"", true, false);"
107693,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/DefaultListModelTest.java,68,,"                model.add(-1, ""any"");"
107694,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/ImageIconTest.java,86,,"        assertNotNull(""file is found"", url1);"
107695,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/ImageIconTest.java,93,,"        assertEquals(""loaded"", MediaTracker.COMPLETE, icon.getImageLoadStatus());"
107696,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/ImageIconTest.java,94,,"        assertEquals(""description"", filePath1, icon.getDescription());"
107697,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/ImageIconTest.java,95,,"        assertEquals(""width"", ICON_SIZE_1, icon.getIconWidth());"
107698,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/ImageIconTest.java,108,,"        final String description1 = ""bullet in your head"";"
107699,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/ImageIconTest.java,184,,"        assertEquals(""image"", image1, icon.getImage());"
107700,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/ImageIconTest.java,257,,"        assertEquals(""height"", -1, icon.getIconHeight());"
107701,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JButtonTest.java,56,,"        assertEquals(""icon "", icon, jbutton.getIcon());"
107702,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JButtonTest.java,57,,"        assertEquals(""text "", text, jbutton.getText());"
107703,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JButtonTest.java,93,,"        assertEquals(""action"", action, button.getAction());"
107704,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JButtonTest.java,94,,"        assertEquals(""command "", command, button.getActionCommand());"
107705,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JButtonTest.java,95,,"        assertFalse(""selected "", button.isSelected());"
107706,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JButtonTest.java,96,,"        assertTrue(""enabled "", button.isEnabled());"
107707,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JCheckBoxMenuItemTest.java,44,,"        assertTrue(""default buttonModel "", button.getModel() instanceof ToggleButtonModel);"
107708,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JCheckBoxMenuItemTest.java,45,,"        assertNull(""icon "", button.getIcon());"
107709,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JCheckBoxMenuItemTest.java,46,,"        assertEquals(""text "", """", button.getText());"
107710,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JCheckBoxMenuItemTest.java,47,,"        assertFalse(""default FocusPainted"", menuItem.isFocusPainted());"
107711,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JCheckBoxMenuItemTest.java,74,,"        String text = ""texttext"";"
107712,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JCheckBoxTest.java,94,,"        String text1 = ""texttext1"";"
107713,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JCheckBoxTest.java,95,,"        String text2 = ""texttext2"";"
107714,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JCheckBoxTest.java,111,,"        assertTrue(""enabled "", button.isEnabled());"
107715,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JCheckBoxTest.java,117,,"        assertNull(""icon "", button.getIcon());"
107716,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JCheckBoxTest.java,128,,"        assertEquals(""text "", text1, button.getText());"
107717,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JCheckBoxTest.java,131,,"        assertEquals(""ToolTipText "", text3, button.getToolTipText());"
107718,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JCheckBoxTest.java,177,,"        assertFalse(""selected "", button.isSelected());"
107719,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JCheckBoxTest.java,316,,"        listener1.checkPropertyFired(button, ""borderPaintedFlat"", Boolean.FALSE, Boolean.TRUE);"
107720,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JComponentTest.java,409,,"        assertEquals(""visible rectangle "", new Rectangle(0, 0, 150, 150), rect);"
107721,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JComponentTest.java,579,,"        assertNull(""event6: actionPerformed called for parent"", action52.eventHeard);"
107722,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JComponentTest.java,722,,"                if (""border"".equals(evt.getPropertyName()) && (evt.getNewValue() != null)) {"
107723,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JComponentTest.java,780,,"        assertEquals(""alignment "", panel.getAlignmentX(), 0.5f, 1e-5);"
107724,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JComponentTest.java,882,,"        panel.firePropertyChange(""int"", 1L, 1L);"
107725,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JComponentTest.java,1035,,"        panel.addPropertyChangeListener(""first"", changeListener2);"
107726,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JComponentTest.java,1038,,"        panel.addPropertyChangeListener(""second"", changeListener1);"
107727,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JComponentTest.java,1060,,"        assertFalse(""event's not fired"", changeListener.isChanged());"
107728,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JComponentTest.java,1306,,"        assertEquals(""graphics object's created properly"", font, componentGraphics.getFont());"
107729,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JComponentTest.java,1404,,"        assertEquals(""transferHandler's set properly "", handler1, panel.getTransferHandler());"
107730,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JComponentTest.java,1735,,"        assertEquals(""Number of keyStrokes registered"", 6, strokes.length);"
107731,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JComponentTest.java,1954,,"        String toolTipText1 = ""toolTipText1"";"
107732,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JComponentTest.java,2426,,"            assertTrue(""options are set correctly "","
107733,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JComponentTest.java,2566,,"        assertEquals(""ComponentPopupMenu"", popup1, panel.getComponentPopupMenu());"
107734,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JComponent_MultithreadedTest.java,222,,"    @SuppressWarnings(""deprecation"")"
107735,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JComponent_MultithreadedTest.java,240,,"        assertTrue(""verifier's invoked "", verifier.invoked);"
107736,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JComponent_MultithreadedTest.java,241,,"        assertTrue(""focus's gained "", panel2.isFocusOwner());"
107737,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JComponent_MultithreadedTest.java,247,,"        assertFalse(""verifier's not invoked "", verifier.invoked);"
107738,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JComponent_MultithreadedTest.java,272,,"        assertTrue(""focus can be gained "", requestFocusInWindowForComponent(panel2, 1000));"
107739,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JComponent_MultithreadedTest.java,551,,"        listener.checkPropertyFired(panel1, ""ancestor"", null, panel2);"
107740,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JDialogTest.java,239,,"        dialog = new JDialog(owner, ""Test JDialog"", false, gc);"
107741,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JDialogTest.java,242,,"        assertTrue(""owner is set"", dialog.getOwner() == owner);"
107742,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JEditorPaneTest.java,196,,"            throw new UnsupportedOperationException(""Not implemented"");"
107743,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JEditorPaneTest.java,203,,"            jep.setContentType(""text/html"");"
107744,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JEditorPaneTest.java,322,,"        jep.setContentType(""text/rtf"");"
107745,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JEditorPaneTest.java,377,,"        JEditorPane.registerEditorKitForContentType(""text/test1"","
107746,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JEditorPaneTest.java,378,,"                ""javax.swing.text.DefaultEditorKit"");"
107747,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JEditorPaneTest.java,422,,"        checkBaseValues(""javax.swing.text.PlainDocument"","
107748,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JEditorPaneTest.java,423,,"                ""javax.swing.JEditorPane$PlainEditorKit"", ""text/plain"", null, jep);"
107749,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JEditorPaneTest.java,423,,"                ""javax.swing.JEditorPane$PlainEditorKit"", ""text/plain"", null, jep);"
107750,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JEditorPaneTest.java,435,,"        checkBaseValues(""javax.swing.text.html.HTMLDocument"","
107751,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JEditorPaneTest.java,436,,"                ""javax.swing.text.html.HTMLEditorKit"", ""text/html"", TEST_URL, jep);"
107752,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JEditorPaneTest.java,564,,"            assertTrue(""Unexpected exception :"" + e.getMessage(), false);"
107753,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JEditorPaneTest.java,700,,"        jep.setContentType(""text/test"");"
107754,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JEditorPaneTest.java,789,,"        jep.addPropertyChangeListener(""editorKit"", listener);"
107755,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JEditorPaneTest.java,863,,"            fail(""NPE expected""); "
107756,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JEditorPaneTest.java,919,,"                result[0] = JEditorPane.createEditorKitForContentType(""testContentType1"");"
107757,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JEditorPaneTest.java,920,,"                result[1] = JEditorPane.createEditorKitForContentType(""testContentType2"");"
107758,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JEditorPaneTest.java,921,,"                result[2] = JEditorPane.createEditorKitForContentType(""testContentType3"");"
107759,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JEditorPaneTest.java,925,,"                            ""testContentType1"", ""MyEditorKit"");"
107760,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JFileChooserTest.java,60,,"        File testDir = new File(""testDir"");"
107761,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JFileChooserTest.java,194,,"        assertTrue(propertyChangeController.isChanged(""SelectedFileChangedProperty""));"
107762,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JFileChooserTest.java,294,,"        chooser.setApproveButtonToolTipText(""text"");"
107763,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JFileChooserTest.java,340,,"        assertTrue(propertyChangeController.isChanged(""ChoosableFileFilterChangedProperty""));"
107764,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JFormattedTextFieldTest.java,344,,"        tf.setText(""667"");"
107765,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JFrameTest.java,125,,"        assertFalse(""JFrame is invisible by default"", frame.isVisible());"
107766,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JInternalFrameTest.java,300,,"        assertTrue(""INTERNAL_FRAME_CLOSING was fired"", listener.closingFired());"
107767,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JInternalFrameTest.java,348,,"        assertTrue(""frame index is 0"", desktop.getIndexOf(frame) == 0);"
107768,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JInternalFrameTest.java,350,,"        assertTrue(""frame index is 2"", desktop.getIndexOf(frame) == 2);"
107769,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JInternalFrameTest.java,476,,"            assertFalse(""no exception"", ok);"
107770,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JInternalFrameTest.java,560,,"            assertTrue(""exception is thrown"", thrown);"
107771,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JInternalFrameTest.java,625,,"            assertFalse(""exception is not thrown"", thrown);"
107772,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JInternalFrameTest.java,626,,"            assertTrue(""isIcon is set"", frame.isIcon());"
107773,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JInternalFrameTest.java,816,,"            assertTrue(""isSelected is set"", frame.isSelected());"
107774,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JInternalFrameTest.java,891,,"        final String title = ""Test title"";"
107775,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JLabelTest.java,74,,"        label = new JLabel(""any"");"
107776,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JMenuBarTest.java,319,,"        assertEquals(""selectionModel"", selectionModel1, menuBar.getSelectionModel());"
107777,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JMenuItemTest.java,40,,"            event = ""pressed"";"
107778,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JMenuItemTest.java,44,,"            event = ""released"";"
107779,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JMenuItemTest.java,48,,"            event = ""typed"";"
107780,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JMenuItemTest.java,56,,"            event = ""dragged"";"
107781,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JMenuItemTest.java,60,,"            event = ""entered"";"
107782,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JMenuItemTest.java,64,,"            event = ""exited"";"
107783,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JMenuItemTest.java,109,,"        assertNull(""icon "", button.getIcon());"
107784,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JMenuItemTest.java,110,,"        assertEquals(""text "", """", button.getText());"
107785,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JMenuItemTest.java,111,,"        assertFalse(""default FocusPainted"", menuItem.isFocusPainted());"
107786,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JMenuItemTest.java,140,,"        String text = ""texttext"";"
107787,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JMenuItemTest.java,178,,"        assertTrue(""enabled "", menuItem.isEnabled());"
107788,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JMenuItemTest.java,253,,"        assertTrue(""armed"", menuItem.isArmed());"
107789,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JMenuItemTest.java,280,,"        listener.checkPropertyFired(menuItem, ""accelerator"", null, accelerator1);"
107790,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JMenuItemTest.java,309,,"        assertEquals(""event fired properly "", ""entered"", listener1.event);"
107791,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JMenuItemTest.java,311,,"        assertSame(""one event fired "", listener1.event, listener2.event);"
107792,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JMenuItemTest.java,683,,"            assertEquals(""ToolTipText "", text3, button.getToolTipText());"
107793,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JMenuTest.java,59,,"            event = ""deselected"";"
107794,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JMenuTest.java,67,,"            event = ""selected"";"
107795,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JMenuTest.java,116,,"        assertNull(""icon "", button.getIcon());"
107796,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JMenuTest.java,117,,"        assertEquals(""text "", """", button.getText());"
107797,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JMenuTest.java,118,,"        assertFalse(""default FocusPainted"", menuItem.isFocusPainted());"
107798,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JMenuTest.java,139,,"        String text = ""texttext"";"
107799,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JMenuTest.java,212,,"        assertEquals(""action"", action, menuItem.getAction());"
107800,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JMenuTest.java,213,,"        assertEquals(""command "", command, menuItem.getActionCommand());"
107801,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JMenuTest.java,214,,"        assertFalse(""selected "", menuItem.isSelected());"
107802,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JMenuTest.java,215,,"        assertTrue(""enabled "", menuItem.isEnabled());"
107803,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JMenuTest.java,216,,"        assertNull(""accelerator "", menuItem.getAccelerator());"
107804,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JMenuTest.java,303,,"            fail(""no exception has been thrown"");"
107805,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JMenuTest.java,762,,"        assertEquals(""event fired properly "", ""canceled"", listener1.event);"
107806,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JMenuTest.java,764,,"        assertEquals(""source "", menu, listener1.src);"
107807,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JMenuTest.java,1257,,"            assertEquals(""ToolTipText "", text3, button.getToolTipText());"
107808,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JOptionPaneTest.java,80,,"        assertEquals(""message"", ""JOptionPane message"", pane.getMessage());"
107809,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JOptionPaneTest.java,81,,"        assertEquals(""message type"", JOptionPane.PLAIN_MESSAGE, pane.getMessageType());"
107810,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JOptionPaneTest.java,82,,"        assertEquals(""option type"", JOptionPane.DEFAULT_OPTION, pane.getOptionType());"
107811,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JOptionPaneTest.java,83,,"        assertNull(""icon"", pane.getIcon());"
107812,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JOptionPaneTest.java,84,,"        assertTrue(""options"", pane.getOptions() == null || pane.getOptions().length == 0);"
107813,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JOptionPaneTest.java,85,,"        assertNull(""initial value"", pane.getInitialValue());"
107814,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JOptionPaneTest.java,86,,"        assertEquals(""input value"", JOptionPane.UNINITIALIZED_VALUE, pane.getInputValue());"
107815,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JOptionPaneTest.java,187,,"        assertTrue(""exception's been thrown"", thrown);"
107816,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JOptionPaneTest.java,201,,"        assertFalse(""exception's not been thrown"", thrown);"
107817,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JOptionPaneTest.java,551,,"        assertEquals(""frame"", defaultFrame, JOptionPane.getFrameForComponent(null));"
107818,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JOptionPaneTest.java,618,,"        assertFalse(""event's not been fired "", listener1.isChanged());"
107819,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JOptionPaneTest.java,658,,"        listener1.checkPropertyFired(pane, ""value"", JOptionPane.UNINITIALIZED_VALUE, button1);"
107820,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JOptionPaneTest.java,787,,"        listener1.checkPropertyFired(pane, ""wantsInput"", Boolean.FALSE, Boolean.TRUE);"
107821,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JOptionPaneTest.java,788,,"        assertEquals(""SelectionValues"", buttons2, pane.getSelectionValues());"
107822,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JPasswordFieldTest.java,73,,"        pf = new JPasswordField(""abc"");"
107823,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JPasswordFieldTest.java,125,,"        String content = ""abcd"";"
107824,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JPopupMenuTest.java,76,,"            event = ""invisible"";"
107825,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JPopupMenuTest.java,81,,"            event = ""visible"";"
107826,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JPopupMenuTest.java,131,,"        assertEquals(""event fired properly "", ""visible"", listener2.event);"
107827,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JPopupMenuTest.java,132,,"        assertEquals(""source "", popup, listener2.src);"
107828,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JPopupMenuTest.java,154,,"    @SuppressWarnings(""deprecation"")"
107829,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JPopupMenuTest.java,245,,"            fail(""no exception has been thrown"");"
107830,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JPopupMenuTest.java,269,,"        assertNull(""text "", popup.getLabel());"
107831,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JPopupMenuTest.java,282,,"        String label = ""label"";"
107832,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JPopupMenuTest.java,323,,"        assertEquals(""icon "", icon, menuItem.getIcon());"
107833,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JRadioButtonMenuItemTest.java,44,,"        assertTrue(""default buttonModel "", button.getModel() instanceof ToggleButtonModel);"
107834,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JRadioButtonMenuItemTest.java,45,,"        assertNull(""icon "", button.getIcon());"
107835,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JRadioButtonMenuItemTest.java,46,,"        assertEquals(""text "", """", button.getText());"
107836,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JRadioButtonMenuItemTest.java,47,,"        assertFalse(""default FocusPainted"", menuItem.isFocusPainted());"
107837,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JRadioButtonMenuItemTest.java,74,,"        String text = ""texttext"";"
107838,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JRadioButtonTest.java,101,,"        String text1 = ""texttext1"";"
107839,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JRadioButtonTest.java,102,,"        String text2 = ""texttext2"";"
107840,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JRadioButtonTest.java,122,,"        assertTrue(""enabled "", button.isEnabled());"
107841,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JRadioButtonTest.java,128,,"        assertNull(""icon "", button.getIcon());"
107842,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JRadioButtonTest.java,136,,"        assertEquals(""text "", text1, button.getText());"
107843,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JRadioButtonTest.java,139,,"        assertEquals(""ToolTipText "", text3, button.getToolTipText());"
107844,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JRadioButtonTest.java,183,,"        assertFalse(""selected "", button.isSelected());"
107845,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JScrollPaneTest.java,275,,"        assertTrue(propertyChangeController.isChanged(""viewport""));"
107846,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JSliderTest.java,149,,"            fail(""IllegalArgumentException shall be thrown"");"
107847,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JSpinnerTest.java,367,,"        Object[] values = { ""arrline1"", ""arrline2"", ""text"", new Integer(33), spinner };"
107848,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JTabbedPaneTest.java,160,,"        assertFalse(""removed"", tabbed.isAncestorOf(tabComponent3));"
107849,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JTabbedPaneTest.java,161,,"        assertTrue(""visible"", tabComponent3.isVisible());"
107850,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JTabbedPaneTest.java,277,,"        JComponent comp = new JLabel(""label"");"
107851,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JTabbedPaneTest.java,281,,"        assertEquals(""index"", 3, tabbed.indexOfComponent(comp));"
107852,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JTabbedPaneTest.java,282,,"        assertEquals(""title"", ""label"", tabbed.getTitleAt(3));"
107853,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JTabbedPaneTest.java,283,,"        assertNull(""tip"", tabbed.getToolTipTextAt(3));"
107854,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JTabbedPaneTest.java,313,,"        comp.setName(""labelName"");"
107855,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JTabbedPaneTest.java,324,,"        assertEquals(""icon"", constraints, tabbed.getIconAt(index));"
107856,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JTableTest.java,286,,"        model.addColumn(""column1"");"
107857,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JTextAreaTest.java,578,,"        assertEquals(""No such line"", message);"
107858,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JTextAreaTest.java,720,,"        assertEquals(new Integer(8), jta.getDocument().getProperty(""tabSize""));"
107859,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JTextFieldTest.java,426,,"        assertEquals(""columns less than zero."", message);"
107860,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JTextFieldTest.java,638,,"        testPropertyChangeEvent(""horizontalAlignment"", SwingConstants.LEADING,"
107861,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JTextPaneTest.java,135,,"        textPane.addStyle(""child"", style);"
107862,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JTextPaneTest.java,143,,"        Style parent = textPane.addStyle(""parent"", null);"
107863,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JTextPaneTest.java,187,,"        textPane.getStyledDocument().insertString(11, ""bold"", attrs);"
107864,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JToggleButtonTest.java,85,,"        String text1 = ""texttext1"";"
107865,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JToggleButtonTest.java,86,,"        String text2 = ""texttext2"";"
107866,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JToggleButtonTest.java,90,,"        assertEquals(""icon "", icon1, button.getIcon());"
107867,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JToggleButtonTest.java,91,,"        assertEquals(""text "", text1, button.getText());"
107868,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JToggleButtonTest.java,92,,"        assertEquals(""selected "", state1, button.isSelected());"
107869,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JToggleButtonTest.java,97,,"        assertTrue(""button model is of the proper type"","
107870,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JToolBarTest.java,112,,"        toolBar = new JToolBar(""tb1"");"
107871,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JTreeTest.java,99,,"        TreePath path = new TreePath(""root"");"
107872,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JTreeTest.java,264,,"        Object[] nodes = new Object[] { ""node1"", ""node2"", ""node3"" };"
107873,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JTreeTest.java,264,,"        Object[] nodes = new Object[] { ""node1"", ""node2"", ""node3"" };"
107874,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JTreeTest.java,264,,"        Object[] nodes = new Object[] { ""node1"", ""node2"", ""node3"" };"
107875,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JTreeTest.java,408,,"        DefaultMutableTreeNode child1 = new DefaultMutableTreeNode(""child1"");"
107876,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JTreeTest.java,409,,"        DefaultMutableTreeNode child11 = new DefaultMutableTreeNode(""child11"");"
107877,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JTreeTest.java,410,,"        DefaultMutableTreeNode child111 = new DefaultMutableTreeNode(""child111"");"
107878,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JTreeTest.java,411,,"        DefaultMutableTreeNode child2 = new DefaultMutableTreeNode(""child2"");"
107879,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JTreeTest.java,412,,"        DefaultMutableTreeNode child21 = new DefaultMutableTreeNode(""child21"");"
107880,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JTreeTest.java,478,,"                ""unexisted""));"
107881,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JTreeTest.java,645,,"        assertEquals(""any"", tree.convertValueToText(""any"", false, false, true, 0, false));"
107882,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JTreeTest.java,1720,,"        listener.checkPropertyFired(tree, ""cellEditor"", oldEditor, editor1);"
107883,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JTreeTest.java,1753,,"        listener.checkPropertyFired(tree, ""cellRenderer"", oldRenderer, renderer1);"
107884,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JTree_DynamicUtilTreeNodeTest.java,38,,"        node = new DynamicUtilTreeNode(""value"", null);"
107885,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JTree_DynamicUtilTreeNodeTest.java,64,,"        DynamicUtilTreeNode.createChildren(null, ""any"");"
107886,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JWindowTest.java,134,,"        assertTrue(""owner is not null"", window.getOwner() != null);"
107887,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JWindowTest.java,135,,"        assertFalse(""JWindow is invisible by default"", window.isVisible());"
107888,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JWindowTest.java,137,,"        assertFalse(""window is not focusable"", window.isFocusableWindow());"
107889,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/JWindowTest.java,185,,"        assertTrue(""owner is set"", window.getOwner() == owner);"
107890,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/KeyStrokeTest.java,37,,"        assertEquals(""keyChar's correct"", KeyEvent.CHAR_UNDEFINED, keyStroke.getKeyChar());"
107891,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/KeyStrokeTest.java,38,,"        assertEquals(""keyCode's correct"", KeyEvent.VK_INSERT, keyStroke.getKeyCode());"
107892,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/KeyStrokeTest.java,39,,"        assertEquals(""modifiers are correct"", 0, keyStroke.getModifiers());"
107893,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/KeyStrokeTest.java,40,,"        assertFalse(""onKeyRelease is correct"", keyStroke.isOnKeyRelease());"
107894,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/KeyStrokeTest.java,76,,"        assertTrue(""keyStrokes are shared properly"", keyStroke1 == keyStroke2);"
107895,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/LayoutFocusTraversalPolicyTest.java,123,,"            fail(""IllegalArgumentException should have been thrown"");"
107896,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/LookAndFeelTest.java,131,,"        LookAndFeel.installColors(label, ""Tree.selectionBackground"", ""TextPane.background"");"
107897,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/LookAndFeelTest.java,131,,"        LookAndFeel.installColors(label, ""Tree.selectionBackground"", ""TextPane.background"");"
107898,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/LookAndFeelTest.java,232,,"        LookAndFeel.installProperty(comp1, ""opaque"", Boolean.TRUE);"
107899,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/LookAndFeelTest.java,247,,"            LookAndFeel.installProperty(comp1, ""iconTextGap"", Boolean.TRUE);"
107900,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/MenuSelectionManagerTest.java,237,,"        assertNotNull(""event fired properly "", listener1.eventHappened);"
107901,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/OverlayLayoutTest.java,78,,"        assertEquals(""Sizes "", new Dimension(70, 80), layout.minimumLayoutSize(container));"
107902,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/OverlayLayoutTest.java,102,,"        assertEquals(""Preferred size: "", new Dimension(48, 26), layout"
107903,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/OverlayLayoutTest.java,153,,"        assertEquals(""Minimum size: "", new Dimension(48, 26), layout"
107904,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/OverlayLayoutTest.java,204,,"        assertEquals(""Maximum size: "", new Dimension(48, 26), layout"
107905,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/OverlayLayoutTest.java,415,,"        assertEquals(""Alignment "", 0.2857143f, layout.getLayoutAlignmentY(container), 1e-5f);"
107906,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/OverlayLayoutTest.java,504,,"        assertTrue(""AWTError exception thrown"", thrown);"
107907,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/OverlayLayoutTest.java,505,,"        assertEquals(text, ""OverlayLayout can't be shared"");"
107908,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/ProgressMonitorInputStreamTest.java,69,,"        in = new ProgressMonitorInputStream(window, ""Here we go..."", realIn);"
107909,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/ProgressMonitorTest.java,43,,"        progressMonitor = new ProgressMonitor(window, ""message test"", ""note test"", 0, 100);"
107910,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/ProgressMonitorTest.java,43,,"        progressMonitor = new ProgressMonitor(window, ""message test"", ""note test"", 0, 100);"
107911,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/SizeRequirementsTest.java,37,,"        assertEquals(""Minimum "", min, requirements.minimum);"
107912,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/SizeRequirementsTest.java,38,,"        assertEquals(""Preferred "", pref, requirements.preferred);"
107913,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/SizeRequirementsTest.java,39,,"        assertEquals(""Maximum "", max, requirements.maximum);"
107914,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/SizeRequirementsTest.java,40,,"        assertEquals(""Alignmnent "", align, requirements.alignment, 1e-5);"
107915,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/SizeRequirementsTest.java,167,,"        assertEquals(""Offsets coinside "", 0, offsets[0]);"
107916,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/SizeRequirementsTest.java,170,,"        assertEquals(""Spans coinside "", 10, spans[0]);"
107917,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/SpringTest.java,90,,"        component = new JButton(""Test"");"
107918,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/SwingUtilitiesTest.java,76,,"        assertEquals(""clipped string "", ""Long..."", clippedStr);"
107919,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/SwingUtilitiesTest.java,77,,"        assertEquals(""icon rectangle "", new Rectangle(3, 0, 30, 40), iconR);"
107920,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/SwingUtilitiesTest.java,78,,"        assertEquals(""text rectangle "", new Rectangle(63, 2, 84, 38), textR);"
107921,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/SwingUtilitiesTest.java,84,,"        assertEquals(""clipped string "", ""..."", clippedStr);"
107922,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/SwingUtilitiesTest.java,360,,"    @SuppressWarnings(""deprecation"")"
107923,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/SwingUtilitiesTest.java,1447,,"        assertTrue(""event5: actionPerformed called for parent"", action51.event != null);"
107924,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/SwingUtilitiesTest.java,1489,,"            assertTrue(ui1.getClass().getName().endsWith(""MetalButtonUI""));"
107925,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/TimerTest.java,76,,"        assertTrue(""Initially there's one listener "", listeners != null"
107926,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/TimerTest.java,79,,"        assertTrue(""repeats "", timer.isRepeats());"
107927,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/TimerTest.java,82,,"        assertTrue(""Coalesces "", timer.isCoalesce());"
107928,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/TimerTest.java,102,,"        assertTrue(""Now there are 3 listeners "", listeners != null && listeners.length == 3);"
107929,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/TimerTest.java,103,,"        assertTrue(""Listener 1 is found"", find(listeners, listener1));"
107930,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/TimerTest.java,104,,"        assertTrue(""Listener 2 is found"", find(listeners, listener2));"
107931,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/TimerTest.java,105,,"        assertTrue(""Listener 3 is found"", find(listeners, listener3));"
107932,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/TimerTest.java,153,,"        assertTrue(""Initially there's only one listener "", listeners != null"
107933,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/TimerTest.java,230,,"        assertEquals(""Initial delay "", 10, timer.getInitialDelay());"
107934,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/TimerTest.java,254,,"        assertEquals(""delay "", 10, timer.getDelay());"
107935,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/Timer_MultithreadedTest.java,167,,"        assertTrue(""ActionListener's ActionPerformed invoked "", listener1.action != null);"
107936,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/Timer_MultithreadedTest.java,175,,"        assertNotNull(""ActionListener's ActionPerformed did invoke "", listener2.action);"
107937,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/Timer_MultithreadedTest.java,184,,"        assertNull(""ActionListener's ActionPerformed didn't invoke "", listener2.action);"
107938,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/Timer_MultithreadedTest.java,274,,"        assertTrue(""timer is running "", timer.isRunning());"
107939,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/UIDefaultsTest.java,62,,"        uiDefaults.put(""TRUE"", Boolean.TRUE);"
107940,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/UIDefaultsTest.java,152,,"                new Object[] { ""aaa"" }));"
107941,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/UIDefaultsTest.java,186,,"                    new UIDefaults.ProxyLazyValue(""MyLabelUI"");"
107942,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/UIDefaultsTest.java,219,,"        uiDefaults.put(""ButtonUI"", uiClassName);"
107943,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/UIDefaultsTest.java,364,,"        assertNull(uiDefaults.get(""OptionPane.titleText""));"
107944,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/UIDefaultsTest.java,420,,"        assertNull(uiDefaults.put(""2"", ""val2""));"
107945,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/UIManagerTest.java,155,,"        assertEquals(""javax.swing.plaf.metal.MetalLookAndFeel"", UIManager"
107946,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/UIManagerTest.java,196,,"        LookAndFeelInfo lfInfo = new LookAndFeelInfo(""Metal"","
107947,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/AbstractBorderTest.java,41,,"        assertEquals(""insets values coinside"", 0, insets.top);"
107948,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/BevelBorderTest.java,43,,"        assertEquals(""highlightOuterColor coinsides"", highlightColor, border"
107949,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/BevelBorderTest.java,45,,"        assertEquals(""highlightInnerColor coinsides"", highlightColor, border"
107950,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/BevelBorderTest.java,47,,"        assertEquals(""shadowOuterColor coinsides"", shadowColor, border.getShadowOuterColor());"
107951,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/BevelBorderTest.java,48,,"        assertEquals(""shadowInnerColor coinsides"", shadowColor, border.getShadowInnerColor());"
107952,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/BevelBorderTest.java,49,,"        assertEquals(""Bevel type coinsides"", bevelType, border.getBevelType());"
107953,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/BevelBorderTest.java,138,,"        assertEquals(""insets values coinside"", thickness1, insets.top);"
107954,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/BevelBorderTest.java,259,,"        assertEquals(""Shadow Outer color coinsides"", shadowOuterColor, border"
107955,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/BevelBorderTest.java,286,,"        assertEquals(""Shadow Inner color coinsides"", shadowInnerColor, border"
107956,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/BevelBorderTest.java,313,,"        assertEquals(""Highlight Outer color coinsides"", highlightedOuterColor, border"
107957,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/BevelBorderTest.java,340,,"        assertEquals(""Highlight Inner color coinsides"", highlightedInnerColor, border"
107958,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/BevelBorderTest.java,457,,"        assertEquals(""Deserialized values coinsides"", resurrectedBorder.getBevelType(), border1"
107959,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/CompoundBorderTest.java,41,,"        assertEquals(""insets values coincide"", 13, insets.top);"
107960,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/CompoundBorderTest.java,77,,"        assertEquals(""Insets coincide "", insets1, border4.getBorderInsets(null));"
107961,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/CompoundBorderTest.java,175,,"        assertEquals(""Borders coincide"", border1, border4.getOutsideBorder());"
107962,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/CompoundBorderTest.java,205,,"        assertEquals(""Deserialized values coincides"", resurrectedBorder.getOutsideBorder()"
107963,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/EmptyBorderTest.java,86,,"        assertEquals(""insets values coinside"", top, insets.top);"
107964,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/EtchedBorderTest.java,43,,"        assertEquals(""Shadow color coinsides"", shadowColor, border.getShadowColor());"
107965,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/EtchedBorderTest.java,44,,"        assertEquals(""Highlighted color coinsides"", highlightedColor, border"
107966,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/EtchedBorderTest.java,46,,"        assertEquals(""Etch type coinsides"", etchType, border.getEtchType());"
107967,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/EtchedBorderTest.java,123,,"        assertEquals(""insets values coinside"", thickness1, insets.top);"
107968,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/EtchedBorderTest.java,242,,"        assertEquals(""Highlight color coinsides"", highlightedColor, border"
107969,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/EtchedBorderTest.java,303,,"        assertEquals(""Deserialized values coinsides"", resurrectedBorder.getEtchType(), border1"
107970,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/LineBorderTest.java,47,,"        assertEquals(""insets values coinside"", thickness1, insets.top);"
107971,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/LineBorderTest.java,116,,"        assertEquals(""Thickness coinsides"", thickness, border.getThickness());"
107972,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/LineBorderTest.java,117,,"        assertEquals(""RoundedCorners coinsides"", roundedCorners, border.getRoundedCorners());"
107973,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/LineBorderTest.java,118,,"        assertEquals(""Colors coinsides"", color, border.getLineColor());"
107974,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/LineBorderTest.java,237,,"        assertEquals(""Deserialized values coinsides"", resurrectedBorder.getThickness(), border1"
107975,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/MatteBorderTest.java,48,,"        assertEquals(""icon value coinsides"", icon, border.getTileIcon());"
107976,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/MatteBorderTest.java,70,,"        assertEquals(""color value coinsides"", color, border.getMatteColor());"
107977,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/MatteBorderTest.java,204,,"        assertEquals(""insets values coinside"", top, insets.top);"
107978,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/MatteBorderTest.java,275,,"        assertEquals(""Insets coinside "", new Insets(top, left, bottom, right), border"
107979,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/SoftBevelBorderTest.java,48,,"        assertEquals(""highlightOuterColor coinsides"", highlightOuterColor, border"
107980,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/SoftBevelBorderTest.java,50,,"        assertEquals(""highlightInnerColor coinsides"", highlightInnerColor, border"
107981,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/SoftBevelBorderTest.java,52,,"        assertEquals(""shadowOuterColor coinsides"", shadowOuterColor, border"
107982,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/SoftBevelBorderTest.java,54,,"        assertEquals(""shadowInnerColor coinsides"", shadowInnerColor, border"
107983,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/SoftBevelBorderTest.java,56,,"        assertEquals(""Bevel type coinsides"", bevelType, border.getBevelType());"
107984,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/SoftBevelBorderTest.java,141,,"        assertEquals(""insets values coinside"", thickness1, insets.top);"
107985,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/TitledBorderTest.java,64,,"        String string1 = ""string1"";"
107986,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/TitledBorderTest.java,74,,"        assertEquals(""title field initialized correctly "", string1, border1.getTitle());"
107987,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/TitledBorderTest.java,75,,"        assertEquals(""border field initialized correctly "", border3, border1.getBorder());"
107988,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/TitledBorderTest.java,76,,"        assertEquals(""color field initialized correctly "", color1, border1.getTitleColor());"
107989,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/TitledBorderTest.java,77,,"        assertEquals(""font field initialized correctly "", font1, border1.getTitleFont());"
107990,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/TitledBorderTest.java,78,,"        assertEquals(""position field initialized correctly "", pos1, border1.getTitlePosition());"
107991,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/TitledBorderTest.java,79,,"        assertEquals(""justification field initialized correctly "", just1, border1"
107992,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/TitledBorderTest.java,83,,"                ""TitledBorder.border""), border2.getBorder());"
107993,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/TitledBorderTest.java,85,,"                ""TitledBorder.titleColor""), border2.getTitleColor());"
107994,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/TitledBorderTest.java,87,,"                ""TitledBorder.font""), border2.getTitleFont());"
107995,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/TitledBorderTest.java,270,,"        assertEquals(""insets sizes coincide "", new Insets(5, 5, 5, 5), titledBorder"
107996,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/TitledBorderTest.java,386,,"        PublicTitledBorder titledBorder = new PublicTitledBorder(""hello, border!!"");"
107997,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/TitledBorderTest.java,392,,"        assertEquals(""fonts coincide "", newFont1, titledBorder.getFont(null));"
107998,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/TitledBorderTest.java,398,,"        assertFalse(""font cannot be null "", titledBorder.getFont(null) == null);"
107999,./TargetProjects/harmony/classlib/modules/swing/src/test/api/java.injected/javax/swing/border/TitledBorderTest.java,409,,"        assertEquals(""minimum sizes coincide "", new Dimension(10, 10), titledBorder"
